{"version":3,"sources":["AwesomeGridLayout/icons/paint.svg","AwesomeGridLayout/Adjustment/icons/plus.svg","AwesomeGridLayout/icons/align-left.svg","AwesomeGridLayout/icons/align-center.svg","AwesomeGridLayout/icons/align-right.svg","AwesomeGridLayout/icons/align-top.svg","AwesomeGridLayout/icons/align-middle.svg","AwesomeGridLayout/icons/align-bottom.svg","AwesomeGridLayout/icons/chain.svg","AwesomeGridLayout/icons/unlink.svg","AwesomeGridLayout/icons/more.svg","AwesomeGridLayout/icons/question.svg","AwesomeGridLayout/Adjustment/icons/minimize.svg","AwesomeGridLayout/Adjustment/icons/maximize.svg","serviceWorker.js","AwesomeGridLayout/AwesomeGridLayoutUtils.js","AwesomeGridLayout/Editor/EditorContext.js","AwesomeGridLayout/BreakPointManager.js","AwesomeGridLayout/DragDropManager.js","AwesomeGridLayout/GridChildContainerChildren.js","AwesomeGridLayout/Test/Inspector/InspectorBreadcrumbs.js","AwesomeGridLayout/HelperComponents/IconButton.js","AwesomeGridLayout/Test/Inspector/InspectorAligns.js","AwesomeGridLayout/AwesomwGridLayoutHelper.js","AwesomeGridLayout/Menus/CommonComponents/NumberInputWithUnit.js","AwesomeGridLayout/Test/Inspector/InspectorTitle.js","AwesomeGridLayout/Test/Inspector/InspectorSize.js","AwesomeGridLayout/Test/Inspector/DockSwitch.js","AwesomeGridLayout/Test/Inspector/InspectorPosition.js","AwesomeGridLayout/Menus/CommonComponents/DropDown.js","AwesomeGridLayout/Menus/CommonComponents/NumberInput.js","AwesomeGridLayout/Test/Inspector/InspectorScroll.js","AwesomeGridLayout/Test/Inspector/InspectorPadding.js","AwesomeGridLayout/Test/Inspector/InspectorOverflow.js","AwesomeGridLayout/Menus/CommonComponents/TextInput.js","AwesomeGridLayout/Test/Inspector/InspectorAnchor.js","AwesomeGridLayout/Test/Inspector/InspectorAdjustment.js","AwesomeGridLayout/Components/Helpers/AGLComponent.js","AwesomeGridLayout/Menus/MenuBase/MenuButton.js","AwesomeGridLayout/Menus/MenuBase/MenuBaseIndexTitle.js","AwesomeGridLayout/Components/Containers/Menus/Components/LightTooltip.js","AwesomeGridLayout/Menus/MenuBase/MenuBase.js","AwesomeGridLayout/Menus/CommonComponents/Slider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInputControlled.js","AwesomeGridLayout/Menus/CommonComponents/Image.js","AwesomeGridLayout/Portal.js","AwesomeGridLayout/Test/Theme/HexColorPicker.js","AwesomeGridLayout/Test/Theme/ThemeColorPicker.js","AwesomeGridLayout/Menus/CommonComponents/ColorPicker.js","AwesomeGridLayout/Components/Containers/Menus/Components/Background.js","AwesomeGridLayout/Menus/CommonComponents/Divider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInput.js","AwesomeGridLayout/Components/Containers/Menus/Components/Border.js","AwesomeGridLayout/Components/Containers/Menus/Components/Corners.js","AwesomeGridLayout/Menus/CommonComponents/CircularSlider.js","AwesomeGridLayout/Menus/CommonComponents/Angle.js","AwesomeGridLayout/Components/Containers/Menus/Components/Shadow.js","AwesomeGridLayout/Components/Containers/Menus/BorderDesign.js","AwesomeGridLayout/Menus/CommonComponents/GridViewer.js","AwesomeGridLayout/Components/Containers/Menus/Components/AnimationSelector.js","AwesomeGridLayout/Components/Containers/Menus/Components/AnimationOptions.js","AwesomeGridLayout/Components/Containers/Menus/AnimationDesign.js","AwesomeGridLayout/Components/Containers/ContainerBase.js","AwesomeGridLayout/Components/Containers/Menus/SectionDesign.js","AwesomeGridLayout/Components/Containers/Header.js","AwesomeGridLayout/Components/Containers/Footer.js","AwesomeGridLayout/Components/Containers/Section.js","AwesomeGridLayout/Test/Inspector/InspectorBackground.js","AwesomeGridLayout/Components/Pages/PageBase.js","AwesomeGridLayout/Components/Stack/VerticalSpacer.js","AwesomeGridLayout/Test/Animations/FadeInAnimation.js","AwesomeGridLayout/Test/Animations/BounceInAnimation.js","AwesomeGridLayout/Test/Animations/GlideInAnimation.js","AwesomeGridLayout/Test/Animations/FloatInAnimation.js","AwesomeGridLayout/Test/Animations/ExpandInAnimation.js","AwesomeGridLayout/Test/Animations/SpinInAnimation.js","AwesomeGridLayout/Test/Animations/FlyInAnimation.js","AwesomeGridLayout/Test/Animations/TurnInAnimation.js","AwesomeGridLayout/Test/Animations/ArcInAnimation.js","AwesomeGridLayout/Test/Animations/PuffInAnimation.js","AwesomeGridLayout/Test/Animations/FoldInAnimation.js","AwesomeGridLayout/Test/Animations/FlipInAnimation.js","AwesomeGridLayout/Test/Animations/RevealAnimation.js","AwesomeGridLayout/Dynamic/DynamicComponents.js","AwesomeGridLayout/Adjustment/AdjustmentPageControllers.js","AwesomeGridLayout/GridChildContainerFixedHolder.js","AwesomeGridLayout/Test/PaddingInterface.js","AwesomeGridLayout/Test/ParentSelectInterface.js","AwesomeGridLayout/GridChildContainer.js","AwesomeGridLayout/AGLAnchor.js","AwesomeGridLayout/Adjustment/ResizePanePage.js","AwesomeGridLayout/Adjustment/AdjustmentResizePage.js","AwesomeGridLayout/Test/EventTrigger.js","AwesomeGridLayout/Test/WindowCache.js","AwesomeGridLayout/AnimationHolder.js","AwesomeGridLayout/Test/VisibilitySensorWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpSize.js","AwesomeGridLayout/AwesomeGridLayout2.js","AwesomeGridLayout/Components/Helpers/AGLWrapper.js","AwesomeGridLayout/Components/Stack/StackSpacerContainer.js","AwesomeGridLayout/Adjustment/AdjustmentMove.js","AwesomeGridLayout/Components/Stack/StackSpacerResizer.js","AwesomeGridLayout/Components/Stack/StackSpacer.js","AwesomeGridLayout/Components/Stack/Stack.js","AwesomeGridLayout/Test/ContextMenu.js","AwesomeGridLayout/InputManager.js","AwesomeGridLayout/SelectManager.js","AwesomeGridLayout/SnapManager.js","AwesomeGridLayout/CopyManager.js","AwesomeGridLayout/IdManager.js","AwesomeGridLayout/UndoRedo.js","AwesomeGridLayout/GridLineManager.js","AwesomeGridLayout/AnchorManager.js","AwesomeGridLayout/Adjustment/AdjustmentGridRoot.js","AwesomeGridLayout/Adjustment/AdjustmentGridRow.js","AwesomeGridLayout/Adjustment/AdjustmentGrid.js","AwesomeGridLayout/Adjustment/AdjustmentSnapLines.js","AwesomeGridLayout/Adjustment/AdjustmentSnap.js","AwesomeGridLayout/Adjustment/GridLine.js","AwesomeGridLayout/Adjustment/AdjustmentGridLinesWrapper2.js","AwesomeGridLayout/Adjustment/AdjustmentGridLines.js","AwesomeGridLayout/Adjustment/ResizePane.js","AwesomeGridLayout/Adjustment/AdjustmentGroupRect.js","AwesomeGridLayout/Menus/MiniMenu/Components/RightClick.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenuVerticalDivider.js","AwesomeGridLayout/Menus/MiniMenu/Components/Help.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenu.js","AwesomeGridLayout/Menus/MenuHolder.js","AwesomeGridLayout/Test/IFrameCommunicator.js","AwesomeGridLayout/Test/EditorController.js","AwesomeGridLayout/Test/Inspector/Inspector.js","AwesomeGridLayout/Adjustment/AdjustmentStretch.js","AwesomeGridLayout/Adjustment/AdjustmentResize.js","AwesomeGridLayout/Adjustment/AdjustmentResizeWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLines.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLinesWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHover.js","AwesomeGridLayout/Test/Layout/Layout.js","AwesomeGridLayout/Test/AddComponent/ComponentGrid.js","AwesomeGridLayout/Test/AddComponent/AddComponent.js","AwesomeGridLayout/Test/PageManager/PageTypeTitle.js","AwesomeGridLayout/Test/PageManager/PageSetting/PageInfo.js","AwesomeGridLayout/Menus/CommonComponents/AglRadio.js","AwesomeGridLayout/Test/PageManager/PageSetting/Permissions.js","AwesomeGridLayout/Test/PageManager/PageSetting/SeoGoogle.js","AwesomeGridLayout/Test/PageManager/PageSetting/SocialShare.js","AwesomeGridLayout/Test/PageManager/PageSetting/PageSetting.js","AwesomeGridLayout/Test/PageManager/PageItem.js","AwesomeGridLayout/Test/PageManager/AddNewPageDialogItem.js","AwesomeGridLayout/Test/PageManager/AddNewPageDialog.js","AwesomeGridLayout/Test/PageManager/PageManager.js","AwesomeGridLayout/Test/Theme/ThemeTextItem.js","AwesomeGridLayout/Test/Theme/ThemeColorsItem.js","AwesomeGridLayout/Test/Theme/ThemeManager.js","AwesomeGridLayout/Editor/Zoom/EditorHeaderZoom.js","AwesomeGridLayout/Editor/PageSelect/EditorHeaderPageSelect.js","AwesomeGridLayout/Menus/CommonComponents/NumberInputEnterToChange.js","AwesomeGridLayout/Editor/Breakpoints/BreakpointHelper.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpointsSettingItem.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpointsSetting.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpoints.js","AwesomeGridLayout/Editor/EditorHeader.js","AwesomeGridLayout/Editor/EditorPreview.js","AwesomeGridLayout/Editor/EditorType.js","AwesomeGridLayout/Editor/Breakpoints/PreviewHeaderBreakpoints.js","AwesomeGridLayout/Editor/PreviewHeader.js","AwesomeGridLayout/Editor/EditorBoundary.js","index.js","AwesomeGridLayout/icons/close.svg"],"names":["module","exports","Boolean","window","location","hostname","match","initGriddata","griddataProp","breakpointdata","initialized","clone","cloneObject","props","griddata","getDefaultChildgriddata","bpData","exist","props2","prop","hasOwnProperty","k","sample","x","y","w","h","minW","undefined","maxW","minH","maxH","constraints","left","top","right","bottom","margin","all","units","scrollType","absolute","fix","autoHeight","autoWidth","overflowData","state","overflowY","resizable","draggable","hasOwnBreakPoints","isContainer","autoDock","sortedBreakPoints","getSortedBreakPoints","name","obj","Array","copy","i","len","length","Object","attr","shallowEqual","objA","objB","keysA","keys","keysB","throttleDebounce","fn","ms","deTimer","dontCall","_","args","arguments","apply","setTimeout","clearTimeout","scrollbarWidth","getScrollbarWidth","document","div","createElement","css","width","height","position","overflow","MsOverflowStyle","body","appendChild","offsetWidth","clientWidth","removeChild","assignData","newData","assign","JSToCSS","JS","cssString","objectKey","replace","g","toLowerCase","updateStyle","styleNode","style","styleName","innerHTML","styleSheet","cssText","createTextNode","appendStyle","styleId","setAttribute","type","getElementsByTagName","swapArrayElements","arr","indexA","indexB","temp","EditorContext","React","createContext","EditorContextProvider","sendEditCommand","callback","editor","postMessage","func","inputs","setPreview","sendPublishCommand","preview","pageData","setPageData","idMan","clear","setState","pageId","update","reload","initContext","getInnerWidth","innerWidth","inspectorPinned","inspectorWidth","setZoomScale","zoomScale","setSiteData","siteData","force","allPages","breakpoints","BreakPointManager","getDefault","setBreakpoints","console","log","rootLayoutRef","current","onSelect","onNewBpAdded","newBpData","prevBpData","pageChildData","tagName","getClearProps","zIndex","changeGriddata","item","childData","mounted","getFromTempData","map","childId","allChildRefs","setInspectorPinned","setInspectorWidth","setDevicePixelRatio","devicePixelRatio","setAllComponentData","allComponentData","toggleRightMenu","menuName","rightMenus","toggle","setPageSizeWidth","breakpointmanager","setWindowWidth","pageSize","setPageSize","setRightMenus","getInnerWith","addComponent","pageManager","themeManager","Provider","value","this","children","Component","onBreakpointChange","onZoomLevelChange","onHeightChange","onResize","fixBreakpointRules","forEach","end","updateBreakpoint","start","prevBp","bp","find","b","getUpperBreakPoint","push","deleteBreakpoint","index","findIndex","splice","fromClone","windowInnerWidth","lastWidth","editorData","copyDesign","designDatas","sourceItem","cloneDesignDatas","getCopyDesign","pasteDesign","designData","design","justOneBp","currentBpName","bpName","getWindowWidth","getWindowHeight","getSize","getBpData","getDevicePixelRatio","onDevicePixelRatioChange","changed","onHeightResize","e","lastHeight","innerHeight","onWindowResize","newWidth","context","result","checkBreakPointChange","currentBreakpointName","lastBreakpointName","size","currentBpData","setData","dataSet","param","breakpointName","params","split","override","getFromData","firstParamResult","findFirstUpperBreakPointParam","slice","p","getHighestBpName","getCompositeFromData","results","checkBreakpointName","composite","merge","hasDataInBreakPoint","findFirstUpperBreakPointName","getMinWidth","minSize","filter","sort","a","addEventListener","removeEventListener","prefer","breakPointData","DragDropManager","setDragging","draggingItem","getDragging","isDraggingItemFixed","portalNodeId","setDraggingStop","mouseOver","parent","getParentsId","includes","id","prepareRects","dropItem","newParent","fromUndoRedo","undoPower","toggleHelpLines","onChildLeave","drop","onChildDrop","newItem","itemId","firstRelativeX","dragData","firstPos","firstRelativeY","parentRect","lastRelativeX","lastRelativeY","newParentRect","parentId","newParentId","undoredo","add","getItem","setMouseOver","setPosition","dragdrop","gridLine","hasGridLine","removeMouseOver","positionData","toggleGridLines","setMouseOverForNonDragging","mouseOverNonDragging","getMouseOverForNonDragging","GridChildContainerChildren","saveState","allChildren","allChildId","allChildIndex","values","c","z","child","getSorted","getChildren","agl","getChildrenOverride","nextProps","nextState","nextContext","JSON","stringify","InspectorBreadcrumbs","className","reverse","onClick","key","IconButton","aria-label","marginLeft","borderRadius","boxSizing","buttonBaseStyle","disabled","display","justifyContent","alignItems","padding","imageContainerStyle","icon","InspectorAligns","getButtonsData","horizontal","img","src","require","vertical","data","alignItem","saveGridItemStyle","setGridItemStyle","select","onScrollItem","gridItemStyle","alignSelf","marginTop","marginBottom","justifySelf","marginRight","baseDocks","getBaseDocks","setDocks","NumberInputWithUnit","inputFilter","oldValue","okay","parseFloat","isNaN","Math","min","max","onChange","target","endsWith","getValue","onShowUnits","anchorEl","currentTarget","round","showUnits","unitIconButton","createRef","classes","classNames","textAlign","inputStyle","unit","ref","unitButtonStyle","disableUnit","color","unitMenuStyle","open","onClose","MenuListProps","dense","onUnitChange","InspectorTitle","defaultOpen","title","InspectorSize","onItemPropsChange","owner","getUnit","getViewRatioStyle","setNewSize","parentValue","defaultValue","getPxValueFromCSSValue","runtimeValueToStyleValue","propName","onPropsChange","addListener","removeListener","runtimeStyle","runtimeGridItemStyle","getRuntimeGridItemStyle","widthForPercent","heightForPercent","Infinity","disabledProps","scrollWidthMinusPadding","widthUnits","scrollHeightMinusPadding","heightUnits","minWidth","maxWidth","minWidthUnits","minHeight","maxHeight","minHeightUnits","maxWidthUnits","maxHeightUnits","defaultProps","DockSwitch","withStyles","theme","root","switchBase","transform","opacity","backgroundColor","thumb","boxShadow","track","checked","Switch","InspectorPosition","onDockActiveChange","side","oldDocks","updateHelpLines","helpLinesParent","dragging","onDockAutoChange","setTempData","parentProp","compositeGridItemStyle","onValueChange","getUnitFromStyleValue","updateResizePanes","docks","auto","fontSize","DropDown","option","valueRenderer","renderer","spanStyle","cursor","menuStyle","options","pointerEvents","NumberInput","test","toFixed","InspectorScroll","onChangeScrollEffect","offsetTop","setScrollBehaviour","viewRef","onChangeOffsetTop","behaviour","getValueFromCSSValue","InspectorPadding","compositePadding","setDataInBreakpoint","equalPadding","pxValue","getStyleValueFromPx","invalidateSize","requestAnimationFrame","onEqualPadding","InspectorOverflow","onChangeState","thisBpOverflowData","compositOverflowData","overflowX","newOverflowData","changeScrollDirection","onChangeAuto","ToggleButtonGroup","exclusive","ToggleButton","TextInput","InspectorAnchor","onEnableAnchor","enable","anchor","anchorMan","addAnchor","removeAnchor","onChangeName","newName","modifyAnchor","v","InspectorAdjustment","onRotationChange","degree","warn","rotate","oldDegree","setTransformStyle","updateLayout","AGLComponent","resolveDesignData","getData","componentData","getDefaultData","componentBpData","tempBpData","getAgl","aglRef","onDesignChange","designKey","updateDesign","getCompositeDesignData","getInspector","getInspectorOverride","MenuButton","menu","updateMenu","MenuBaseIndexTitle","disableRipple","onIndexClick","LightTooltip","tooltip","shadows","Tooltip","LightMenuTooltip","MenuBase","close","selectedIndexNo","getDefaultPos","defaultPosition","defaultIndexNo","handle","bounds","styles","menuTitle","indexData","PopperProps","placement","render","Slider","step","SliderInputControlled","handleStyle","Image","onError","hasError","errorsrc","Portal","canUseDOM","defaultNode","node","nodeId","getElementById","ReactDOM","createPortal","HexColorPicker","onChangeComplete","hex","disableAlpha","colorKeys","ThemeColorPicker","onSelectColor","onAddColor","myColors","unshift","onAddColorClick","addColor","themeColorCategoryItems","Colors","items","parseColor","themeManagerRef","getColor","paletteName","chroma","contextType","ColorPicker","getRgbA","r","rgba","handleClick","displayColorPicker","handleClose","handleChangeComplete","lastValue","alpha","getColorAndAlpha","handleAlphaChange","background","getBoundingClientRect","Background","Divider","SliderInput","Border","border","Corners","radius","changeSide","link","_side","onLinkClick","direction","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","CircularSlider","onMouseDown","rect","rootDivRef","onMouseMove","onMouseUp","clientX","clientY","vx","vy","angle","atan2","PI","Angle","loop","deg2rad","rad2deg","Shadow","shadow","getDegree","xOffset","yOffset","ratio","atan","getRatio","tan","calcDegree","xO","yO","abs","distance","blur","BorderDesign","getIndex","viewBox","fillRule","d","getOptions","fillColor","GridViewer","AnimationSelector","onSelectAnimation","playAnimation","allAnimationNames","animation","noneClasses","displayName","join","charAt","toUpperCase","AnimationOptions","DynamicAnimations","duration","delay","once","AnimationDesign","ContainerBase","getPrimaryOptions","compositeDesign","getStaticChildren","shadowColor","borderColor","topLeft","topRight","bottomRight","bottomLeft","aglComponent","SectionDesign","Header","isSection","setStyleParam","defaultGridItemStyle","gridArea","as","autoConstraintsOff","helplineOff","Footer","Section","isVerticalSection","designStyle","InspectorBackground","onChangeColor","PageBase","initDataFromPageData","allSectionsH","allSectionsV","grid","gridX","gridY","gridTemplateRows","gridTemplateColumns","initKeyboard","event","which","keyCode","ctrl","ctrlKey","preventDefault","selectedItem","getSelected","getHorizontalSection","moveUp","moveDown","getVerticalSection","moveLeft","moveRight","pageResize","containerHeight","deleteHorizontalSection","currentSection","areas","getGridArea","x1","parseInt","x2","firstRow","lastRow","verticalSection","x12","y12","x22","y22","setGridArea","horizontalSection","x13","y13","x23","y23","fill","setGrid","deleteVerticalSection","y1","y2","firstCol","lastCol","mainColIndex","getMainColIndex","addSectionQueue","dynamicComponents","isVertical","addQueue","checkingAddQueue","nextOne","shift","checkAddQueue","addVerticalSection","newNextOne","addHorizontalSection","onItemPreDelete","allow","onItemPreResizeStop","dir","delta","yLineRefs","getYlineRef","firstLineTop","getGridLineRect","targetTop","selectedX1","lineTop","checkIndex","nextSectionV","targetBottom","selectedX2","lineBottom","currentSectionIndex","currentSectionGridArea","Tag","section","resizeSides","addChild","insertIndex","areas2","currentIndex","sideSection","updateTemplates","isHideInBreakpoint","hasMiniMenuOverride","invalidateSizeOverride","self","updateParent","updateChildren","sourceId","tempSize","childRef","getSectionOfPoint","isPointInclude","fullWidth","isPage","page","VerticalSpacer","FadeInAnimation","animationStyles","StyleSheet","create","fadeIn","animationName","animationDuration","animationDelay","BounceInAnimation","bounceIn","GlideInAnimation","tx","sin","ty","cos","glideIn","FloatInAnimation","floatIn","ExpandInAnimation","power","expandIn","SpinInAnimation","spinNo","firstRotate","spinIn","FlyInAnimation","windowSize","flyIn","TurnInAnimation","viewSize","turnIn","animationTimingFunction","ArcInAnimation","arcIn","PuffInAnimation","puffIn","FoldInAnimation","transformOrigin","foldIn","FlipInAnimation","flipIn","RevealAnimation","clipPath","reveal","DynamicComponents","AdjustmentPageControllers","addSection","getAnchor","needUpdate","updateTimeout","forceUpdate","containerClasses","modifiers","preventOverflow","enabled","boundariesElement","hide","GridChildContainerFixedHolder","clientHeight","PaddingInterface","borderTop","borderLeft","borderBottom","borderRight","ParentSelectInterface","GridChildContainer","aglStyle","modifyContainerStyle","modifyContainerStyleOverride","paddingTop","paddingLeft","paddingBottom","paddingRight","getContainerStyleId","modifyOverflowStyle","getOverflowStyleId","getOverflowStyle","webkitScrollbarStyle","webkitScrollbarStyleId","scrollStyleNode","updateAdjustments","controllerRef","fixedHolderRef","needOverflow","selectAsParent","selected","show","overflowClasses","containerRef","overflowRef","onScroll","AGLAnchor","ResizePanePage","isLeftClick","stopPropagation","mouseDown","pointerType","button","moving","onDrag","onDragStart","onDragStop","lastMouseX","lastMouseY","onResizeStart","onResizeStop","isCorner","draggingStart","onPointerDown","AdjustmentResizePage","sides","EventTrigger","defaultListener","listener","listeners","l","trigger","windowCache","boundingRects","clientsWidth","clientsHeight","scrollsTop","scrollsLeft","scrollsWidth","scrollsHeight","clearCache","clearCacheTimeuot","getCachedBoundingRect","getCachedClientWidth","getCachedClientHeight","getCachedScrollTop","scrollTop","getCachedScrollLeft","scrollLeft","getCachedScrollWidth","scrollWidth","getCachedScrollHeight","scrollHeight","addToCache","AnimationHolder","transformRef","VisibilitySensorWrapper","partialVisibility","containment","getPageOverflowRef","active","disableVS","AdjustmentHelpSize","getText","resizeHelpData","toString","AwesomeGridLayout2","callOverride","funcName","getOverrideProp","hasOverride","init","needRender","lastZIndex","getNextIndexData","savedChildren","savedChildrenArray","oldId","createChildByData","Children","createdChild","renderChild","childs","childrenData","initLayout","getDefaultStyle","setStyle","defaultGrid","defaultStyle","lateMounted","addToSnap","onPageResize","onChildMounted","isEditor","getShortcutOptions","hasMiniMenu","debounce","getBoundarySize","snap","addSnap","p1","p2","parentsId","getGridLineSnaps","snaps","horizontals","verticals","xLineRef","getXlineRef","yLineRef","newId","fixed","getId","AGLProps","input","copyMan","gridEditorRef","getAllChildOverrideProps","component","fullForce","widthMinusPadding","heightMinusPadding","onWindowSizeChange","getRenderChildData","arrangeIndex","nextZIndex","nextChild","prevZIndex","prevChild","firstZIndex","changeIndex","allChildData","change","startIndex","lastIndex","testChildData","setChildZIndex","childZIndex","forceCalculate","childElement","newProps","keepChildren","Error","onChildAdd","newBreakpointName","delete","getChildData","createItem","clearItem","removeChildElement","clearMiniMenu","getAllOverrideProps","removeId","removeGridLine","removeSnap","updateHelpSizeLines","setInspector","onMouseOver","fromEnter","setItemHover","onMouseOut","hover","updateHover","onMouseEnter","outAllParent","forceRect","forceGridLines","gridType","isPrepared","onNewChildMounted","calcResult","coordinates","childRect","thisRect","calculateChildGridItem","relativeY","setProps","clearFromAllBp","newChild","removeIdAndChildrenId","nonePointerEventForChildren","parentDragging","onParentDragging","setRuntimeStyle","group","callGroup","resizing","moveWithMouse","firstBoundaryPos","setDraggingState","groupDragStart","boundarySize","isFixed","checkSnapOnDrag","updateGridLines","groupDrag","addGrid","groupDragStop","drawSnap","dropped","updateMiniMenu","relativeX","redoData","undoData","calculateGridItem","fakeStyle","snapDelta1","getSnapDelta","snapDelta2","snapDelta3","snapDelta","deltaX","snapV","deltaY","snapH","pointOfSnapH","pointOfSnapV","parentGridLines","checkSnap","dontCalculate","getDocks","fromState","dontAutoDock","cy1","cy2","cx1","cx2","calculateGridArea","coordinatesAbs","coordinateToRelative","oldGridItemStyle","centerX","centerY","parentCenterMinusX","parentCenterPlusX","cy2IsLastLine","centerDiffX","centerDiffY","getPxOrPcOrValue","cx2IsLastLine","coordinateToAbsolute","getTopLeft","pageResizeStart","resizeData","firstX","firstLeft","activateHover","onPageResizeStart","pageResizeCalculate","firstY","firstTop","firstBoundaryWidth","firstBoundaryHeight","firstBoundaryTop","firstBoundaryLeft","onResizeCalculate","updatePageAdjustments","onResizeData","backContainerRef","finalDelta","rad","cx","cy","cxy","sqrt","cxp","cyp","thetaH","thetaW","Dh","Dw","dxH","dyH","dxW","dyW","getResizeDelta","rotateDegree","checkSnapOnResize","setResizeHelpData","pageResizeStop","onPageResizeStop","setSize","firstWidth","firstHeight","gridCoordinates","dontAddToSnap","oldStyle","isPercent","isViewRatio","newValue","getParentProps","postFix","newRuntimeStyle","animationCss","getGridItemStyleId","newGridItemStyle","dontOverride","getStyleId","getDesignStyleId","setDesignStyle","newDesignStyle","designStyleNode","getTransformStyleId","newTransform","transformStyleNode","getTransformStyle","compositeTransform","rules","newStyle","excludeBp","getGridLineOfPoint","after","gridLine1","gridLine2","mouseMoved","lastClientX","lastClientY","startMillis","Date","getTime","isRightClick","canMove","isGroupSelected","currentMillis","groupSelected","onContextMenu","deselectParent","clicked","dontUpdateAdjustment","isSelectable","selectItem","removeGridLineByType","showGridLines","updateParentsRect","onScrollEnd","onRootScroll","forceScroll","scrollReset","targetScroll","maxTop","scrollTo","behavior","editGrid","editing","updateGridEditor","setAnchor","disable","stateChange","forceKey","showAnimation","onAnimationEnd","activateResize","getCompositeAnimationCss","compositeAnimation","getAnimationCSS","getContextMenu","childContainers","windowWidth","setItem","prevProps","prevState","snapshot","compositeStyle","holderClasses","TagAs","onWheel","childSize","showSideResize","layoutType","compactType","AGLWrapper","fillWithData","StackSpacerContainer","updateSpacers","spacers","spacer","PureComponent","AdjustmentMove","StackSpacerResizer","StackSpacer","setPointerEvents","updateSpacerData","newHeight","spacerData","stack","updateSize","order","Stack","sortedChildrenArray","lateMountedOverride","lateMountedComplete","setOrder","calculateGridItemChildOverride","calculateWrapper","calculateChildGridItemOverride","child1","centerDiff","childRelativeY","childHeight","childFound","childOrderSet","sorted","relativeYA","relativeYB","relativeY2","getSpacer","getSpacerData","spacerContainerRef","allSpacerData","allSpacerRef","onStackDragStart","onStackDragStop","onMouseOverSpacer","onMouseEnterSpacer","onMouseOutSpacer","setMouseOverOverride","setPointerEventOfSpacers","setMouseOverForNonDraggingOverride","spacerRef","setGridItemStyleChildOverride","container","flexDirection","onChildLeaveOverride","removing","stretchChildOverride","stretch","isStretch","isStretchChildOverride","setStyleParamOverride","isStack","onDragStartChildOverride","onDragChildOverride","onDragStopChildOverride","ContextMenu","getFakeAnchor","popperStyle","onClickAway","mouseEvent","autoFocusItem","hasDivider","menuItem","j","ContextMenuItem","subMenu","interactive","leaveDelay","flip","shortcut","deepEqual","saveStyle","beStretch","allowStretch","disableStretch","pageAgl","oldBehaviour","oldOffsetTop","oldIsFixed","lastSectionId","itemRect","sectionParent","addFixedChildToRoot","oldParentRect","pageRect","hideInBreakPoint","showInBreakPoint","fromAll","getSectionId","uuidv4","createStack","itemsParent","getSectionParent","lastBottom","rightFromLeft","topA","topB","stackNode","_stack","stackId","itemIds","newItems","removeStackFromAGL","addToStack","parentWidth","stackAgl","childIds","removeChilds","addToUndo","saveValue","oldType","oldZIndex","breakpointData","createContextMenu","copySection","paste","duplicate","copyDesignItem","item1","item2","isSameFamily","allOldDesign","sourceItemTemp","overrideBps","pasteFromBreakpointDesign","fromName","toName","fromData","currentData","oldData","deleteSection","shortcutSection","sectionSection","sortBy","array","getColorScheme","baseColor","luminance","chromaColor","SelectManager","alt","inputManager","groupSelectRef","pageAglRef","miniMenuHolderRef","inspectorRef","resizeRef","helpLinesRef","hoverRef","setContext","editorContext","dontUpdateAdjustments","createGroup","clearGroup","addMiniMenu","addMenu","inspectorMenu","setMenu","updateGroupRect","mainItem","deleteGroup","firstRect","updateRect","throttle","helpLineParent","activate","fakeItemRect","test1","test2","floor","random","test3","SnapManager","snapThreshold","snapSvgRef","ignoreId","additionalSnaps","topUp","topDown","leftUp","leftDown","concat","CopyManager","selectManager","pageRef","copyItem","getCopyItem","destinationItem","copyRect","IdManager","prefix","allId","preferName","fixName","baseId","postNo","UndoRedo","getQueueObject","undo","redo","undoQueue","pop","redoQueue","undoFunc","object","hasUndo","hasRedo","GridLineManager","gridContainerRef","positions","getIdCache","AnchorManager","allAnchors","goToAnchor","saveToHistory","AdjustmentGridRoot","AdjustmentGridRow","gridLineManager","rowLines","rowLineRect","nextRowLineRect","rowHeight","fontWeight","AdjustmentGrid","addRow","rowsHeight","addColumn","columnsWidth","changeColumnWidth","changeRowHeight","deleteRow","deleteColumn","AdjustmentSnapLines","stroke","AdjustmentSnap","GridLine","lineRef","AdjustmentGridLinesWrapper2","yNo","xNo","refId","AdjustmentGridLines","fixLineRef","idCache","updateGridLine","prepared","xNoA","yNoA","xNoB","yNoB","xNoT","yNoT","xLineRefA","yLineRefA","xLineRefB","yLineRefB","xLineRefT","yLineRefT","ResizePane","AdjustmentGroupRect","RightClick","MiniMenuVerticalDivider","Help","MiniMenu","primary","MenuHolder","miniMenuRef","contextMenu","miniMenuItem","IFrameCommunicator","origin","authKey","otherWindow","onMessage","processIncomingMessage","callbacks","responseFunc","responses","post","counter","EditorController","AllowFunctions","res","Inspector","opening","clearInterval","closeInterval","openInterval","setInterval","percent","speed","interval","closing","pinInspector","toggleState","getDefaultMenu","AdjustmentStretch","AdjustmentResize","transformStyleId","stretchStyle","AdjustmentResizeWrapper","AdjustmentHelpLines","calculate","visibility","strokeDasharray","AdjustmentHelpLinesWrapper","helpLineRef","AdjustmentHover","disablePortal","Layout","setLayout","layout","processLayout","treeData","getTreeItem","layoutItem","childLayout","expanded","parentItemId","setTree","updateItem","treeItem","childTreeItem","ComponentGrid","getItemStyle","rootRef","widthRatio","setDraggingItem","persist","closingTimeOut","closeMenu","createItemAndDrag","presetProps","changeItemParent","setDraggingEnd","allItems","Fragment","onDragEnd","imageUrl","label","AddComponent","setComponentListItemDebounce","componentListItem","setComponentListItem","setComponentListItemLeave","componentListItemHover","componentSubListItem","subList","setComponentSubListItemDebounce","setComponentSubListItem","setComponentSubListItemLeave","componentSubListItemHover","listName","builtin","apps","groupName","componentSubListItems","PageTypeTitle","PageInfo","onRename","newPageName","rename","pageName","setAsHomePage","home","isHome","onBlur","onKeyPress","variant","AglRadio","Radio","Permissions","changePermission","pageSetting","permissions","onSetPassword","password","onChangeMemberType","memberType","onRoleChange","role","memberRoles","control","roleAnchor","allApps","member","setting","roles","SeoGoogle","onChangeSeoSetting","newEndUrl","seoGoogle","endUrl","endUrlError","pageTitle","baseUrl","pageDescription","newPageTitle","resize","newPageDescription","rows","showInSearch","SocialShare","onChangeSocialShareSetting","socialShare","substring","lastIndexOf","description","newTitle","newDescription","PageSetting","onChangeTab","tabValue","Modal","aria-labelledby","aria-describedby","disableBackdropClick","indicatorColor","textColor","PageItem","pageMenuAnchorEl","onPageChange","setAsHome","renameInput","focus","boxClasses","isDynamic","AddNewPageDialogItem","AddNewPageDialog","addNormalPage","onAddNormalPage","addDynamicPage","onAddDynamicPage","PageManager","onChangeSearch","searchValue","getFilteredPages","siteId","onPageClick","newPageDataUrl","fetch","then","json","openNormalPage","openDynamicPage","showAddPage","ThemeTextItem","onEditClick","font","fontFamily","fontStyle","lineHeight","ThemeColorsItem","toChange","calculated","main","ThemeManager","setCategory","category","calculateTheme","scheme","recalculateColors","EditorHeaderZoom","Consumer","zoomSetting","anchorOrigin","getContentAnchorEl","anchorPosition","PaperProps","marginThreshold","transitionDuration","onZoomChange","EditorHeaderPageSelect","pd","NumberInputEnterToChange","lazy","tempValue","onTempChange","getBreakpointIcon","getBreakpointName","EditorHeaderBreakpointsSettingItem","isHighestBp","done","tempEnd","editMode","onCancel","cancelEditMode","nextBpData","onEditMode","EditorHeaderBreakpointsSetting","clearEditMode","bpItemrRefs","bpItemRef","getBpItemRef","EditorHeaderBreakpoints","getTabValue","settingAnchor","EditorHeader","setRightMenuOpen","openMenu","changedState","onInspectorClickState","onInspectorClick","onPageZoomChange","EditorPreview","PreviewHeaderBreakpoints","getCurrentValue","lastBpData","devices","PreviewHeader","EditorBoundary","layoutRef","addComponentRef","pageManagerRef","InputManager","iFrameCommunicator","toggleThemeManager","exportSiteData","toggleAddComponent","togglePageManager","initFromHolder","onSetZoomScale","testWebsite","defaultSiteData","defaultAllComponentData","onComponentDataUpdated","onSiteDataUpdated","togglePreview","setZoomLevel","zoomLevel","documentElement","setProperty","notifyBreakpointChange","newDevicePixelRatio","isPreview","toggleInspector","onScrollBoundary","onResizeD","onResizeT","getLayoutItem","il","openLayout","closeLayout","getLivePageData","getLiveSiteData","blob","Blob","href","URL","createObjectURL","download","fileName","click","getSiteData","dispose","onAddComponentClick","onThemeManagerClick","onPageManagerClick","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,mC,i/jBCA3CD,EAAOC,QAAU,IAA0B,kC,uKCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,yCCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,gECA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,yRCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0FCqnBFC,EAAe,SAACC,EAAcC,GAC9B,GAAID,GAAgBA,EAAaE,YAC7B,OAAOF,EAENA,IACDA,EAAe,IAEnB,IAAIG,EAAQC,EAAYJ,GAExB,IAAK,IAAIK,KAASL,SAAqBA,EAAaK,GAEpD,IAAIC,EAAWC,EAAwBN,GACvC,GAAIE,EAAMK,OACN,IAAK,IAAIH,KAASC,EAASE,OACvB,GAAIC,EAAMJ,EAAOJ,GACT,IAAI,IAAIS,KAAUP,EAAMK,OACpBF,EAASE,OAAOH,GAAOK,GAAUN,EAAYD,EAAMK,OAAOE,IAK9E,IAAK,IAAIC,KAAQR,EACTA,EAAMS,eAAeD,IAAkB,WAATA,IAC9BL,EAASK,GAAQR,EAAMQ,IAI/B,IAAI,IAAIE,KAAKP,EAAUN,EAAaa,GAAGP,EAASO,GAEhD,OAAOb,GAGPO,EAA0B,SAACN,GAC3B,IAAIa,EAAS,CACTC,EAAG,MACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,UAAMC,EACNC,UAAMD,EACNE,UAAMF,EACNG,UAAMH,EACNI,YAAa,CACTC,UAAML,EACNM,SAAKN,EACLO,WAAOP,EACPQ,YAAQR,GAEZS,OAAQ,CACJC,SAAKV,EACLK,UAAML,EACNM,SAAKN,EACLO,WAAOP,EACPQ,YAAQR,GAEZW,MAAO,CACHhB,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KAEPc,WAAY,WACZC,UAAU,EACVC,KAAK,EACLC,YAAY,EACZC,WAAW,EACXC,aAAc,CACVC,MAAO,OACPC,UAAW,WAGfjC,EAAW,CACXJ,aAAa,EACbsC,WAAW,EACXC,WAAW,EACXC,mBAAmB,EACnBC,aAAa,EACbC,UAAU,EACVpC,OAAQ,IAERqC,EAAoBC,EAAqB7C,GAE7C,OADAK,EAASE,OAAOqC,EAAkB,GAAGE,MAAQ3C,EAAYU,GAClDR,GAGPF,EAAc,SAAdA,EAAe4C,GACf,GAAIA,aAAeC,MAAO,CAEtB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGC,EAAMJ,EAAIK,OAAQF,EAAIC,EAAKD,IACvCD,EAAKC,GAAK/C,EAAY4C,EAAIG,IAE9B,OAAOD,EAEX,GAAIF,aAAeM,OAAQ,CACvB,GAAI,MAAQN,EAAK,OAAOA,EACxB,IAAIE,EAAO,GACX,IAAK,IAAIK,KAAQP,EACTA,EAAIpC,eAAe2C,KACnBL,EAAKK,GAAQnD,EAAY4C,EAAIO,KAGrC,OAAOL,EAGX,OAAOF,GAGPQ,EAAe,SAACC,EAAMC,GACtB,GAAID,IAASC,EACT,OAAO,EAGX,GAAoB,kBAATD,GAA8B,OAATA,GACZ,kBAATC,GAA8B,OAATA,EAC5B,OAAO,EAGX,IAAIC,EAAQL,OAAOM,KAAKH,GACpBI,EAAQP,OAAOM,KAAKF,GAExB,GAAIC,EAAMN,SAAWQ,EAAMR,OACvB,OAAO,EAIX,IAAK,IAAIF,EAAI,EAAGA,EAAIQ,EAAMN,OAAQF,IAC9B,IAAKO,EAAK9C,eAAe+C,EAAMR,KAAOM,EAAKE,EAAMR,MAAQO,EAAKC,EAAMR,IAChE,OAAO,EAIf,OAAO,GAGX,SAASW,EAAiBC,EAAIC,GAAK,IAC3BC,EACAC,EAF0B,mBAI9B,OAAO,SAAAC,GACH,IAAIC,EAAOC,EAENH,IACDA,GAAW,EACXH,EAAGO,MAAM,EAAMF,GACfG,YAAW,SAAAJ,GACPD,GAAW,IACZF,IAGPQ,aAAaP,GACbA,EAAUM,YAAW,SAAAJ,GACjBJ,EAAGO,MAAM,EAAMF,KAChBJ,IAyBX,IA+BIS,GAAiB,EACjBC,EAAoB,WACpB,IAAuB,IAAnBD,EAA0B,OAAOA,EAErC,GAAwB,qBAAbE,SAA0B,CACjC,IAAMC,EAAMD,SAASE,cAAc,OACnCC,IAAIF,EAAK,CACLG,MAAO,IACPC,OAAQ,IACRC,SAAU,WACVvD,KAAM,KACNwD,SAAU,SACVC,gBAAiB,cAErBR,SAASS,KAAKC,YAAYT,GAC1BH,EAAkBG,EAAIU,YAAcV,EAAIW,YACxCZ,SAASS,KAAKI,YAAYZ,QAE1BH,EAAiB,EAErB,OAAOA,GAAkB,GAGlBgB,EAAa,SAACnF,EAAUoF,GAG/B,OAFKpF,IACDA,EAAW,IACRgD,OAAOqC,OAAOrF,EAAUoF,GAAW,KA8BvC,SAASE,EAAQC,GACpB,IAAIC,EAAY,GAChB,IAAK,IAAIC,KAAaF,EAClBC,GAAaC,EAAUC,QAAQ,YAAY,SAACC,GAAD,iBAAWA,EAAE,GAAGC,kBAAmB,KAAOL,EAAGE,GAAa,KAEzG,OAAOD,EAGJ,SAASK,EAAYC,EAAWC,EAAOC,GAC1C,IAAIxB,EAAG,yBACIwB,EADJ,aAEHV,EAAQS,GAFL,mBAMPD,EAAUG,UAAY,GAClBH,EAAUI,WACVJ,EAAUI,WAAWC,QAAU3B,EAE/BsB,EAAUf,YAAYV,SAAS+B,eAAe5B,IAI/C,SAAS6B,EAAYN,EAAOO,EAASN,GACxC,IAAIxB,EAAG,yBACIwB,EADJ,aAEHV,EAAQS,GAFL,mBAKHD,EAAYzB,SAASE,cAAc,SACvCuB,EAAUS,aAAa,KAAMD,GAG7BR,EAAUU,KAAO,WAEbV,EAAUI,WACVJ,EAAUI,WAAWC,QAAU3B,EAE/BsB,EAAUf,YAAYV,SAAS+B,eAAe5B,IAGlDH,SAASoC,qBAAqB,QAAQ,GAAG1B,YAAYe,GA2BlD,SAASY,EAAkBC,EAAKC,EAAQC,GAC3C,IAAIC,EAAOH,EAAIC,GACfD,EAAIC,GAAUD,EAAIE,GAClBF,EAAIE,GAAUC,E,sBCn9BLC,EAAgBC,IAAMC,cAAc,IAE5BC,E,kDACjB,WAAYnH,GAAO,IAAD,8BACd,cAAMA,IA6CVoH,gBAAkB,SAACC,GACf,EAAKpF,MAAMqF,OAAOC,YAAY,CAC1Bd,KAAM,SACNe,KAAM,aACNC,OAAQ,KAEZ,EAAKC,YAAW,EAAOL,IApDT,EAuDlBM,mBAAqB,WACjB,EAAKP,iBAAgB,WACjB,EAAKnF,MAAMqF,OAAOC,YAAY,CAC1Bd,KAAM,SACNe,KAAM,iBACNC,OAAQ,SA5DF,EAiElBC,WAAa,SAACE,EAASP,GACnB,IAAIQ,EAAW,EAAK5F,MAAM4F,SAC1B,EAAKC,iBAAY/G,GAAW,GAAO,WAC/B,EAAKkB,MAAMqF,OAAOS,MAAMC,QACxB,EAAKC,SAAS,CAACL,YAAU,WACrB,EAAKE,YAAYD,EAAS7H,MAAMkI,QAAQ,EAAOb,UAtEzC,EA2ElBc,OAAS,SAACd,GACN,EAAKY,SAAS,CAACG,QAAQ,GAAOf,IA5EhB,EA+ElBgB,YAAc,SAACpG,EAAOoF,GAClB,EAAKY,SAAShG,EAAOoF,IAhFP,EAmFlBiB,cAAgB,WACZ,OAAOhJ,OAAOiJ,WAAa,EAAKtG,MAAMuG,gBAAkB,EAAKvG,MAAMwG,eAAiB,GApFtE,EAuFlBC,aAAe,SAACC,EAAWtB,GACvB,EAAKY,SAAS,CAACU,aAAYtB,IAxFb,EA2FlBuB,YAAc,SAACC,EAAUxB,GACrB,EAAKY,SAAS,CAACY,YAAWxB,IA5FZ,EA+FlBS,YAAc,SAACI,EAAQY,EAAOzB,GAC1B,IAAI,EAAKpF,MAAM4F,UAAaiB,GAAS,EAAK7G,MAAM4F,SAAS7H,MAAMkI,SAAWA,EAI1E,GAAKA,EAAL,CAKA,IAAK,EAAKjG,MAAM4F,SAAU,CACtB,IAAIA,EAAW,EAAK5F,MAAM4G,SAASE,SAASb,GAQ5C,OANKL,EAASmB,cACVnB,EAASmB,YAAcC,EAAkBC,cAG7C,EAAKjH,MAAMqF,OAAO6B,eAAetB,EAASmB,kBAC1C,EAAKf,SAAS,CAACJ,YAAWR,GAIzB,EAAKpF,MAAM2F,SAkBZ,EAAK3F,MAAMqF,OAAOS,MAAMC,QAExBoB,QAAQC,IAAI,cAAe,IAC3B,EAAKpH,MAAM6F,iBAAY/G,GAAW,GAAQ,WACtC,IAAI8G,EAAW,EAAK5F,MAAM4G,SAASE,SAASb,GAEvCL,EAASmB,cACVnB,EAASmB,YAAcC,EAAkBC,cAG7CE,QAAQC,IAAI,cAAe,IAC3B,EAAKpH,MAAMqF,OAAO6B,eAAetB,EAASmB,aAC1C,EAAKf,SAAS,CAACJ,YAAWR,OA7B9B,EAAKpF,MAAMqF,OAAOgC,cAAcC,QAAQC,UAAS,GAAM,WACnD,EAAKvH,MAAMqF,OAAOS,MAAMC,QAExB,EAAK/F,MAAM6F,iBAAY/G,GAAW,GAAQ,WACtC,IAAI8G,EAAW,EAAK5F,MAAM4G,SAASE,SAASb,GAEvCL,EAASmB,cACVnB,EAASmB,YAAcC,EAAkBC,cAG7C,EAAKjH,MAAMqF,OAAO6B,eAAetB,EAASmB,aAC1C,EAAKf,SAAS,CAACJ,YAAWR,cA5BlC,EAAKY,SAAS,CAACJ,cAAU9G,GAAYsG,IArG3B,EAwJlBoC,aAAe,SAACC,EAAWC,GACvB,GAAKA,EAAL,CAKAP,QAAQC,IAAI,YAAaK,EAAUhH,KAAMiH,EAAWjH,MAEpD,IAiBIkH,EAAgB,CAChBC,QAAS,EAAK5H,MAAMqF,OAAOgC,cAAcC,QAAQvJ,MAAM6J,QACvD7J,MAAO,EAAKiC,MAAMqF,OAAOgC,cAAcC,QAAQO,cAAxC,eAA0D,EAAK7H,MAAMqF,OAAOgC,cAAcC,QAAQvJ,QACzG+J,OAAQ,IApBS,SAAjBC,EAAkBC,EAAMC,GACxB,GAAKD,GAASA,EAAKE,QAAnB,CAGA,IAAIhK,EAAS+J,EAAUlK,MAAMC,SAASE,OACtCA,EAAOuJ,EAAUhH,MAAQvC,EAAOwJ,EAAWjH,aACpCvC,EAAOwJ,EAAWjH,MAEzBO,OAAOM,KAAK0G,EAAKG,gBAAgB,kBAAkBC,KAAI,SAAAC,GACnD,IAAIJ,EAAYD,EAAKG,gBAAgB,iBAAiBE,GACtDN,EACIC,EAAKM,aAAaD,GAASf,QAC3BW,OAWZF,CAAe,EAAK/H,MAAMqF,OAAOgC,cAAcC,QAASK,GAExD,EAAKzB,cA/BD,EAAKA,UA1JK,EA4LlBqC,mBAAqB,SAAChC,EAAiBnB,GACnC,EAAKY,SAAS,CAACO,mBAAkBnB,IA7LnB,EAgMlBoD,kBAAoB,SAAChC,EAAgBpB,GACjC,EAAKY,SAAS,CAACQ,kBAAiBpB,IAjMlB,EAoMlBqD,oBAAsB,SAACC,EAAkBtD,GACrC,EAAKY,SAAS,CAAC0C,oBAAmBtD,IArMpB,EAwMlBuD,oBAAsB,SAACC,EAAkBxD,GACrC,EAAKY,SAAS,CAAC4C,oBAAmBxD,IAzMpB,EA4MlByD,gBAAkB,SAACC,EAAU9I,GAAW,IAC/B+I,EAAc,EAAK/I,MAAnB+I,WAEL,GAAI/I,IAAU+I,EAAWD,GAAU9I,MAAnC,CAGA,IAAI,IAAIjC,KAASgL,EACTA,EAAWhL,GAAOiC,QAClB+I,EAAWhL,GAAOiC,OAAQ,EAC1B+I,EAAWhL,GAAOiL,QAAO,IAIjCD,EAAWD,GAAU9I,MAAQ+I,EAAWD,GAAUE,QAAO,EAAOhJ,GAEhE,EAAKgG,SAAS,CAAC+C,WAAW,eAAKA,OA3NjB,EA8NlBE,iBAAmB,SAACxG,GAChB,EAAKzC,MAAMqF,OAAOgC,cAAcC,QAAQ2B,iBAAiBxG,GACzD,EAAKzC,MAAMqF,OAAO6D,kBAAkBC,eAAe1G,GACnD,EAAKuD,SAAS,CAACoD,SAAU3G,KAjOX,EAoOlB4G,YAAc,SAACD,GACX,EAAKpD,SAAS,CAACoD,cArOD,EAwOlBE,cAAgB,SAACP,EAAY3D,GACzB,EAAKY,SAAS,CAAC+C,cAAa3D,IAtO5B,EAAKpF,MAAQ,CACTkG,OAAQ,EAAKA,OACbE,YAAa,EAAKA,YAClBM,UAAW,EACXrB,YAAQvG,EACR2H,aAAc,EAAKA,aACnBG,cAAU9H,EACV6H,YAAa,EAAKA,YAClByC,SAAU,KACVC,YAAa,EAAKA,YAClBJ,iBAAkB,EAAKA,iBACvBrD,cAAU9G,EACV+G,YAAa,EAAKA,YAClBU,iBAAiB,EACjBgC,mBAAoB,EAAKA,mBACzB/B,eAAgB,IAChB+C,aAAc,EAAKlD,cACnBmC,kBAAmB,EAAKA,kBACxBE,iBAAkBrL,OAAOqL,iBACzBD,oBAAqB,EAAKA,oBAC1BG,sBAAkB9J,EAClB6J,oBAAqB,EAAKA,oBAC1BI,WAAY,CACRS,aAAc,CACVxJ,OAAO,GAEXyJ,YAAa,CACTzJ,OAAO,GAEX0J,aAAc,CACV1J,OAAO,IAGfsJ,cAAe,EAAKA,cACpBT,gBAAiB,EAAKA,gBACtBrB,aAAc,EAAKA,aACnB7B,SAAS,EACTF,WAAY,EAAKA,WACjBN,gBAAiB,EAAKA,gBACtBO,mBAAoB,EAAKA,oBA1Cf,E,qDA6Od,OACI,kBAACX,EAAc4E,SAAf,CAAwBC,MAAOC,KAAK7J,OAC/B6J,KAAK9L,MAAM+L,c,GAhPuB9E,IAAM+E,WCApC/C,E,WACjB,WAAYD,EAAa1B,EAAQ2E,EAAoBC,EAAmBC,EAAgBC,GAAW,IAAD,gCAyBlGC,mBAAqB,SAACrD,GAClBA,EAAYsD,SAAQ,SAAAnM,GACXA,EAAOoM,MACRpM,EAAOoM,IAAM,WA5ByE,KAgClGC,iBAAmB,SAAC9J,EAAM+J,EAAOF,GAC7B,IAUIG,EAVAC,EAAK,EAAK3D,YAAY4D,MAAK,SAAAC,GAAC,OAAIA,EAAEnK,OAASA,KAC/C,GAAIiK,EAIA,OAHAA,EAAGJ,IAAMA,OACK,EAAKO,mBAAmBpK,KACzB,EAAKoK,mBAAmBpK,GAAM+J,MAAQF,EAAM,IAI7DE,IACAE,EAAK,CAACjK,OAAM+J,QAAOF,OAInB,IADA,IAAI/J,EAAoB,EAAKC,uBACrBK,EAAI,EAAGA,EAAIN,EAAkBQ,OAAQF,IAIzC,GAHI6J,EAAGF,QAAUjK,EAAkBM,GAAG2J,MAAQ,GAC1CE,EAAGF,QAEHE,EAAGF,OAASjK,EAAkBM,GAAG2J,MAAO,CACxCE,EAAGJ,IAAM/J,EAAkBM,GAAGyJ,IAC9B/J,EAAkBM,GAAGyJ,IAAMI,EAAGF,MAAQ,EACtCC,EAASlK,EAAkBM,GAC3B,MAMR,OAFA,EAAKkG,YAAY+D,KAAKJ,GAEf,CAACjD,UAAWiD,EAAIhD,WAAY+C,IA5D2D,KA+DlGM,iBAAmB,SAACtK,GAEhB,IADA,IAAIF,EAAoB,EAAKC,uBACrBK,EAAI,EAAGA,EAAIN,EAAkBQ,OAAQF,IACzC,GAAIJ,IAASF,EAAkBM,GAAGJ,KAAM,CACxBF,EAAkBM,EAAI,GAC5B2J,MAAQjK,EAAkBM,GAAG2J,MACnC,MAIR,IAAIQ,EAAQ,EAAKjE,YAAYkE,WAAU,SAAAP,GACnC,OAAOA,EAAGjK,OAASA,KAGvB,EAAKsG,YAAYmE,OAAOF,EAAO,IA7E+D,KAgFlGG,UAAY,SAACtN,GAMT,OALA,EAAKkJ,YAAclJ,EAAMkJ,YACzB,EAAKqE,iBAAmBvN,EAAMuN,iBAC9B,EAAKC,UAAYxN,EAAMwN,UACvB,EAAKhG,OAASxH,EAAMyN,WAEb,GAtFuF,KAyFlGC,WAAa,SAACC,EAAaC,GACvB,EAAKC,iBAAmB,CACpBF,YAAa1N,EAAY0N,GACzBC,eA5F0F,KAgGlGE,cAAgB,WACZ,OAAO,EAAKD,kBAjGkF,KAoGlGE,YAAc,SAAC5D,GACN,EAAK2D,iBAGV,EAAKA,gBAAgBH,YAAYnB,SAAQ,SAACwB,EAAYb,GAClD,IAAIc,EAASD,EAAWC,OACxB,GAAKD,EAAWE,UAKT,CACH,IAAIC,EAAgBhE,EAAKjK,MAAMmL,kBAAkB5B,UAC5CU,EAAKjK,MAAMC,SAASE,OAAO8N,KAC5BhE,EAAKjK,MAAMC,SAASE,OAAO8N,GAAiB,IAChDhE,EAAKjK,MAAMC,SAASE,OAAO8N,GAAeF,OAAShO,EAAYgO,OATxC,CACvB,IAAIG,EAASJ,EAAWI,OACnBjE,EAAKjK,MAAMC,SAASE,OAAO+N,KAC5BjE,EAAKjK,MAAMC,SAASE,OAAO+N,GAAU,IACzCjE,EAAKjK,MAAMC,SAASE,OAAO+N,GAAQH,OAAShO,EAAYgO,QA9G8B,KAwHlGI,eAAiB,WACb,OAAO,EAAKb,WAzHkF,KA4HlGc,gBAAkB,WACd,OAAO,EAAK9G,OAAOgC,cAAcC,QAAQ8E,SAAQ,GAAO1J,QA7HsC,KAiIlGyG,eAAiB,SAAC1G,GACd,EAAK4I,UAAY5I,GAlI6E,KAqIlG4J,UAAY,SAACJ,GACT,OAAO,EAAKlF,YAAY4D,MAAK,SAAAD,GACzB,OAAOA,EAAGjK,OAASwL,MAvIuE,KA+IlGK,oBAAsB,WAClB,OAAOjP,OAAOqL,kBAhJgF,KAmJlG6D,yBAA2B,WACvB,IAAIC,EAAU,EAAK9D,mBAAqBrL,OAAOqL,iBAE/C,EAAKA,iBAAmBrL,OAAOqL,iBAE3B8D,GACA,EAAKvC,kBAAkB,EAAKqC,wBAzJ8D,KA6JlGG,eAAiBjL,GAAiB,SAACkL,GAC3B,EAAKC,aAAetP,OAAOuP,cAC3B,EAAKD,WAAatP,OAAOuP,YACzB,EAAK1C,eAAewC,MAEzB,KAlK+F,KAoKlGG,eAAiBrL,GAAiB,WAC9B,IAAIsL,EAAWzP,OAAOiJ,WAClB,EAAKjB,OAAO0H,QAAQxG,gBAAkB,EAAKlB,OAAO0H,QAAQvG,eAAiB,EAE3EwG,EAAS,EAAKC,sBAAsBH,GAExC,EAAK3D,eAAe2D,GAEhBE,EAAOR,SACP,EAAKxC,mBAAmB8C,EAAUE,EAAOE,sBAAuB,EAAKZ,yBAE1E,KA/K+F,KAiLlGW,sBAAwB,SAACH,GACrB,IAAIK,EAAqB,EAAK7F,QAAQ,EAAK4E,kBACvCgB,EAAwB,EAAK5F,QAAQwF,GAEzC,MAAO,CACHN,QAAUW,IAAuBD,EACjCA,0BAvL0F,KA2LlG5F,QAAU,SAAC8F,GACFA,IACDA,EAAO,EAAKlB,kBAEhB,IADA,IAAI3L,EAAoB,EAAKC,uBACrBK,EAAI,EAAGA,EAAIN,EAAkBQ,OAAQF,IACzC,GAAI,EAAKuL,QAAQgB,IAAS7M,EAAkBM,GAAG2J,MAC3C,OAAOjK,EAAkBM,GAAGJ,KAGpC,OAAOF,EAAkBA,EAAkBQ,OAAS,GAAGN,MApMuC,KAuMlG4M,cAAgB,SAACD,GACRA,IACDA,EAAO,EAAKlB,kBAEhB,IADA,IAAI3L,EAAoB,EAAKC,uBACrBK,EAAI,EAAGA,EAAIN,EAAkBQ,OAAQF,IACzC,GAAI,EAAKuL,QAAQgB,IAAS7M,EAAkBM,GAAG2J,MAC3C,OAAOjK,EAAkBM,GAGjC,OAAON,EAAkBA,EAAkBQ,OAAS,IAhN0C,KAmNlG8J,mBAAqB,SAACoB,GAElB,IADA,IAAI1L,EAAoB,EAAKC,uBACrBK,EAAI,EAAGA,EAAIN,EAAkBQ,OAAQF,IACzC,GAAIoL,IAAW1L,EAAkBM,GAAGJ,KAChC,OAAOF,EAAkBM,EAAI,IAAMN,EAAkBM,EAAI,IAvN6B,KA2NlGyM,QAAU,SAACC,EAASC,EAAO5D,EAAO6D,GAC9B,IAAIC,EAASF,EAAMG,MAAM,KACrBlN,EAAOgN,GACP,EAAKnG,QAAQ,EAAK8E,WAItB,GAHKmB,EAAQrP,OAAOuC,KAChB8M,EAAQrP,OAAOuC,GAAQ,IAEL,IAAlBiN,EAAO3M,YACOjC,IAAV8K,EACA2D,EAAQrP,OAAOuC,GAAMiN,EAAO,IAAM9D,SAE3B2D,EAAQrP,OAAOuC,GAAMiN,EAAO,QACpC,MACqC5O,IAApCyO,EAAQrP,OAAOuC,GAAMiN,EAAO,MAC5BH,EAAQrP,OAAOuC,GAAMiN,EAAO,IAAM,IAEtC,IADA,IAAIE,EAAWL,EAAQrP,OAAOuC,GAAMiN,EAAO,IACnC7M,EAAI,EAAGA,EAAI6M,EAAO3M,OAAQF,IAC1BA,IAAM6M,EAAO3M,OAAS,OACRjC,IAAV8K,EACAgE,EAASF,EAAO7M,IAAM+I,SAEfgE,EAASF,EAAO7M,UAIC/B,IAAxB8O,EAASF,EAAO7M,MAChB+M,EAASF,EAAO7M,IAAM,IAC1B+M,EAAWA,EAASF,EAAO7M,OAtPuD,KA4PlGgN,YAAc,SAACN,EAASC,EAAOC,GAC3B,IACIK,EADAJ,EAASF,EAAMG,MAAM,KAErBT,EAAwBO,GACxB,EAAKnG,QAAQ,EAAK8E,WAWtB,QAAyBtN,KAPrBgP,EAFAP,EAAQrP,OAAOgP,SACsCpO,IAArDyO,EAAQrP,OAAOgP,GAAuBQ,EAAO,IAEzCH,EAAQrP,OAAOgP,GAAuBQ,EAAO,IAE9B,EAAKK,8BAA8BR,EAASG,EAAO,GAChE,EAAKtB,YAMf,OAAsB,IAAlBsB,EAAO3M,QAGX2M,EAAOM,MAAM,GAAG3D,SAAQ,SAAA4D,GAChBH,IACAA,EAAmBA,EAAiBG,OAJjCH,GA/QmF,KAyRlGI,iBAAmB,WAEf,OADwB,EAAK1N,uBACJ,GAAGC,MA3RkE,KA8RlG0N,qBAAuB,SAACZ,EAASC,GAK7B,IAJA,IAAIE,EAASF,EAAMG,MAAM,KACrBS,EAAU,GAEV7N,EAAoB,EAAKC,qBAAqB,EAAK0L,kBAJhB,WAK/BrL,GACJ,IAAIwN,EAAsB9N,EAAkBM,GAAGJ,KAE3CqN,OAAgB,EAKpB,GAJIP,EAAQrP,OAAOmQ,SACoCvP,IAAnDyO,EAAQrP,OAAOmQ,GAAqBX,EAAO,MAC3CI,EAAmBP,EAAQrP,OAAOmQ,GAAqBX,EAAO,UAEzC5O,IAArBgP,EACA,iBAEkB,IAAlBJ,EAAO3M,QAGP2M,EAAOM,MAAM,GAAG3D,SAAQ,SAAA4D,GAChBH,IACAA,EAAmBA,EAAiBG,OAJ5CG,EAAQtD,KAAKgD,IAZbjN,EAAIN,EAAkBQ,OAAS,EAAGF,GAAK,EAAGA,IAAK,EAA/CA,GAuBR,KAAMuN,EAAQ,aAAcpN,QACxB,OAAOoN,EAAQ,GAGnB,IADA,IAAIE,EAAY,GACPzN,EAAIuN,EAAQrN,OAAS,EAAGF,GAAK,EAAGA,IACrCyN,EAAYC,IAAMD,EAAWF,EAAQvN,IAGzC,OAAOyN,GAlUuF,KAqUlGE,oBAAsB,SAACjB,EAASC,EAAOC,GACnC,IACIK,EADAJ,EAASF,EAAMG,MAAM,KAErBT,EAAwBO,GACxB,EAAKnG,QAAQ,EAAK8E,WAOtB,GALImB,EAAQrP,OAAOgP,SACsCpO,IAArDyO,EAAQrP,OAAOgP,GAAuBQ,EAAO,MAC7CI,EACIP,EAAQrP,OAAOgP,GAAuBQ,EAAO,UAE5B5O,IAArBgP,EAGJ,OAAsB,IAAlBJ,EAAO3M,QAGX2M,EAAOM,MAAM,GAAG3D,SAAQ,SAAA4D,GAChBH,IACAA,EAAmBA,EAAiBG,OAJjCH,GApVmF,KA8VlGC,8BAAgC,SAACR,EAASC,EAAOJ,GAE7C,IADA,IAAI7M,EAAoB,EAAKC,uBACrBK,EAAIN,EAAkBQ,OAAS,EAAGF,GAAK,EAAGA,IAC9C,GAAI,EAAKuL,QAAQgB,IAAS7M,EAAkBM,GAAGyJ,KACvCiD,EAAQrP,OAAOqC,EAAkBM,GAAGJ,YACiB3B,IAArDyO,EAAQrP,OAAOqC,EAAkBM,GAAGJ,MAAM+M,GAC1C,OAAOD,EAAQrP,OAAOqC,EAAkBM,GAAGJ,MAAM+M,IApWiC,KAyWlGiB,6BAA+B,SAAClB,EAASC,EAAOJ,GAE5C,IADA,IAAI7M,EAAoB,EAAKC,uBACrBK,EAAIN,EAAkBQ,OAAS,EAAGF,GAAK,EAAGA,IAC9C,GAAI,EAAKuL,QAAQgB,IAAS7M,EAAkBM,GAAGyJ,KACvCiD,EAAQrP,OAAOqC,EAAkBM,GAAGJ,MACpC,OAAOF,EAAkBM,GAAGJ,MA9WsD,KAmXlGiO,YAAc,WACV,IAAInO,EAAoB,EAAKC,uBAC7B,OAAOD,EAAkBA,EAAkBQ,OAAS,GAAGyJ,OArXuC,KAwXlGhK,qBAAuB,SAACmO,GACpB,IAAI5H,EAAc,EAAKA,YAOvB,OANI4H,IACA5H,EAAc,EAAKA,YAAY6H,QAAO,SAAAlE,GAClC,OAAOA,EAAGJ,KAAOqE,MAIlB5H,EAAY8H,MAAK,SAACC,EAAElE,GACvB,OAAIkE,EAAEtE,MAAQI,EAAEJ,OACJ,EACDsE,EAAEtE,QAAUI,EAAEJ,MAEd,EAEJ,MAvYmF,KA2YlGrM,MAAQ,SAACsC,GACL,OAAO,EAAKsG,YAAY4D,MAAK,SAAAC,GACzB,OAAOA,EAAEnK,OAASA,MA7YwE,KAwalG2L,QAAU,SAACgB,GACP,OAAOA,GAAQ,EAAKlB,kBAxafnF,IACDA,EAAcC,EAAkBC,cAEpC4C,KAAKO,mBAAmBrD,GAIxB8C,KAAK9C,YAAcA,EACnB8C,KAAKxE,OAASA,EACdwE,KAAKuB,iBAAmB/N,OAAOiJ,WAC/BuD,KAAKwB,UAAYhO,OAAOiJ,WACxBuD,KAAKG,mBAAqBA,GAAuB,aACjDH,KAAKI,kBAAoBA,GAAsB,aAC/CJ,KAAKK,eAAiBA,GAAmB,aAEzC7M,OAAO0R,iBAAiB,SAAU5E,GAC9BH,GACA3M,OAAO0R,iBAAiB,SAAUlF,KAAKgD,gBACvC5C,GACA5M,OAAO0R,iBAAiB,SAAUlF,KAAK0C,0BACvCrC,GACA7M,OAAO0R,iBAAiB,SAAUlF,KAAK4C,gB,sDAsH3CpP,OAAO2R,oBAAoB,SAAUnF,KAAKgD,oB,KA7I7B7F,EAkZVC,WAAa,WAChB,MAAO,CACH,CACIxG,KAAM,SACN+J,MAAO,KACPF,IAAK,MACL2E,OAAQ,MAEZ,CACIxO,KAAM,SACN+J,MAAO,IACPF,IAAK,IACL2E,OAAQ,KAEZ,CACIxO,KAAM,SACN+J,MAAO,IACPF,IAAK,IACL2E,OAAQ,OAUjB,IAAI3B,EAAU,SAACC,EAASC,EAAO5D,EAAOsF,EAAgBzB,IACjC,IAAIzG,GAAoBmE,UAAU+D,GACxC5B,QAAQC,EAASC,EAAO5D,EAAO6D,IAG1CI,EAAc,SAACN,EAASC,EAAO0B,EAAgBzB,GAEtD,OADwB,IAAIzG,GAAoBmE,UAAU+D,GACjCrB,YAAYN,EAASC,EAAOC,IAG9CU,EAAuB,SAACZ,EAASC,EAAO0B,GAE/C,OADwB,IAAIlI,GAAoBmE,UAAU+D,GACjCf,qBAAqBZ,EAASC,IAGhDhN,EAAuB,SAAC0O,GAE/B,OADwB,IAAIlI,EAAkBkI,EAAenI,YAAamI,EAAe9D,kBAChE5K,wBAGlBrC,EAAQ,SAACsC,EAAMyO,GAEtB,OADwB,IAAIlI,EAAkBkI,EAAenI,YAAamI,EAAe9D,kBAChEjN,MAAMsC,ICvcd0O,E,iDACjBC,YAAc,SAACpH,GACX,EAAKqH,aAAerH,G,KAGxBsH,YAAc,WACV,OAAO,EAAKD,c,KAGhBE,oBAAsB,WAClB,QAAK,EAAKF,cAEsC,sBAAzC,EAAKA,aAAarP,MAAMwP,c,KAInCC,gBAAkB,WACd,OAAI,EAAKJ,cAAgB,EAAKK,WAC1B,EAAKL,aAAatR,MAAM4R,SAAW,EAAKD,YACvC,EAAKA,UAAUE,eAAeC,SAAS,EAAKR,aAAatR,MAAM+R,MAC/D,EAAKP,uBAEN,EAAKG,UAAUK,eACf,EAAKC,SAAS,EAAKX,aAAc,EAAKA,aAAatR,MAAM4R,OAAQ,EAAKD,WAEtE,EAAKL,kBAAevQ,GACb,IAGX,EAAKuQ,kBAAevQ,GACb,I,KAGXkR,SAAW,SAAChI,EAAM2H,EAAQM,EAAW7K,EAAU8K,EAAcC,GACzDnI,EAAKoI,kBACLT,EAAOU,aAAarI,GAEpB,IAAIsI,EAAO,WACPL,EAAUM,YAAYvI,OAAMlJ,OAAWA,GAAW,SAAC0R,GAI/C,GAHIpL,GACAA,EAASoL,IAERN,EAAc,CACf,IAAIO,EAASzI,EAAKjK,MAAM+R,GACpBY,GACC1I,EAAK2I,SAAU3I,EAAK2I,SAASC,SAASzR,KAAOqR,EAAQpE,SAAQ,GAAOjN,MACnEwQ,EAAOvD,SAAQ,GAAOjN,KACxB0R,GACC7I,EAAK2I,SAAU3I,EAAK2I,SAASC,SAASxR,IAAMoR,EAAQpE,SAAQ,GAAOhN,KAClEuQ,EAAOvD,SAAQ,GAAOhN,IACxB0R,EAAahT,EAAY6R,EAAOvD,SAAQ,IACxC2E,EAAgBP,EAAQpE,SAAQ,GAAOjN,KAAO8Q,EAAU7D,SAAQ,GAAOjN,KACvE6R,EAAgBR,EAAQpE,SAAQ,GAAOhN,IAAM6Q,EAAU7D,SAAQ,GAAOhN,IACtE6R,EAAgBnT,EAAYmS,EAAU7D,SAAQ,IAC9C3J,EAAQ+N,EAAQpE,SAAQ,GAAO3J,MAC/BC,EAAS8N,EAAQpE,SAAQ,GAAO1J,OAEhCwO,EAAWvB,EAAO5R,MAAM+R,GACxBqB,EAAclB,EAAUlS,MAAM+R,GAClC9H,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrBA,EAAMwL,QAAQb,GAAQlJ,UAAS,GAC/B,EAAKgK,aAAazL,EAAMwL,QAAQH,IAChC,EAAKnB,SAASlK,EAAMwL,QAAQb,GAAS3K,EAAMwL,QAAQJ,GAAWpL,EAAMwL,QAAQH,IACxE,SAACX,GACGvO,YAAW,WACP6D,EAAMwL,QAAQb,GAAQe,aAAY,EAAOT,EAAeC,OAAelS,OAAWA,EAC9E2D,EAAOC,EAAQuO,GAAe,KACnC,MACJ,MACR,SAACnL,GACAA,EAAMwL,QAAQb,GAAQlJ,UAAS,GAC/B,EAAKgK,aAAazL,EAAMwL,QAAQJ,IAChC,EAAKlB,SAASlK,EAAMwL,QAAQb,GAAS3K,EAAMwL,QAAQH,GAAcrL,EAAMwL,QAAQJ,IAC3E,SAACV,GACGvO,YAAW,WACP6D,EAAMwL,QAAQb,GAAQe,aAAY,EAAOd,EAAgBG,OAAgB/R,OAAWA,EAChF2D,EAAOC,EAAQoO,GAAY,KAChC,MACJ,KACRX,QAIXnI,EAAKjK,MAAM0T,SAAS/B,YAAcO,GAClCjI,EAAKjK,MAAM2T,SAASC,YAAY1B,EAAUlS,MAAM+R,IAChDQ,IAEAtI,EAAKjK,MAAM0T,SAASF,aAAatB,OAAWnR,EAAWwR,I,KAI/DsB,gBAAkB,kBACP,EAAKlC,W,KAGhB6B,aAAe,SAACvJ,EAAM6J,EAAczM,GAC5B,EAAKmK,wBAGL,EAAKG,YACA,EAAKA,UAAUvH,gBAAgB,aAC5B,EAAKuH,YAAc1H,GACnB,EAAK0H,UAAUoC,iBAAgB,IAI3C,EAAKpC,UAAY1H,EAEd,EAAKqH,cACJ,EAAKA,aAAae,kBAEtBpI,EAAK8J,iBAAgB,GAAM,WACpB,EAAKzC,cACJ,EAAKA,aAAae,gBAAgBpI,GAClC5C,GACAA,EAAS,EAAKiK,aAAc,EAAKK,aACtC,O,KAGPqC,2BAA6B,SAAC/J,GAC1B,EAAKgK,qBAAuBhK,G,KAGhCiK,2BAA6B,WACzB,OAAO,EAAKD,uB,kBC1HCE,G,0NAejBC,UAAY,WAAO,IACVC,EAAe,EAAKrU,MAApBqU,YACL,EAAKC,WAAarR,OAAOM,KAAK8Q,GAC9B,EAAKE,cAAgBtR,OAAOuR,OAAOH,GAAahK,KAAI,SAAAoK,GAChD,MAAO,CACHC,EAAGD,EAAE1K,OACLjH,EAAG2R,EAAEE,MAAM3U,MAAM+R,Q,EAK7B6C,UAAY,SAAC7I,GACT,OAAOA,EAAS+E,MAAK,SAACC,EAAGlE,GACrB,OAAIkE,EAAEhH,OAAS8C,EAAE9C,OACN,EACPgH,EAAEhH,OAAS8C,EAAE9C,QACL,EAEL,M,EAIf8K,YAAc,SAACR,EAAaS,GACxB,OAAI,EAAK9U,MAAM+U,oBACJ,EAAK/U,MAAM+U,oBAAoB,EAAKH,UAAU3R,OAAOuR,OAAOH,IAAeS,GAE/E,EAAKF,UAAU3R,OAAOuR,OAAOH,IAAchK,KAAI,SAACsK,GACnD,OAAOA,EAAMA,U,oEAzCCK,EAAWC,EAAWC,GACxC,OAAK/R,EAAa2I,KAAKwI,WAAYrR,OAAOM,KAAKyR,EAAUX,gBACpDlR,EAAagS,KAAKC,UAAUtJ,KAAKyI,eAC9BY,KAAKC,UAAUnS,OAAOuR,OAAOQ,EAAUX,aAAahK,KAAI,SAAAoK,GACpD,MAAO,CACHC,EAAGD,EAAE1K,OACLjH,EAAG2R,EAAEE,MAAM3U,MAAM+R,W,+BAwCjCjG,KAAKsI,YADC,MAEmBtI,KAAK9L,MAAzBqU,EAFC,EAEDA,YAAaS,EAFZ,EAEYA,IAClB,OACIhJ,KAAK+I,YAAYR,EAAaS,O,GAlDc7N,IAAM+E,Y,gDCAzCqJ,E,kDACjB,WAAYrV,GAAQ,IAAD,8BACf,cAAMA,IACDiC,MAAQ,GAFE,E,gEAOf6J,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAGR,IACFF,EAAQ6B,KAAK9L,MAAbiK,KACL,OACI,yBACIqL,UAAU,uBAEV,yBACIA,UAAU,mCAGFrL,EAAK4H,eAAe5B,MAAM,EAAG,GAAGsF,UAAUlL,KAAI,SAAA8I,GAC1C,IAAIvB,EAAS3H,EAAKjK,MAAM+H,MAAMwL,QAAQJ,GACtC,OACI,kBAAC,IAAD,CACImC,UAAW,oCACXE,QAAS,SAAC7G,GACNiD,EAAOpI,UAAS,IAEpBiM,IAAK7D,EAAO5R,MAAM+R,IAGdH,EAAO5R,MAAM6J,QAAU,UAQnD,0BACIyL,UAAU,+BAETrL,EAAKjK,MAAM6J,c,GA/CkB5C,IAAM+E,WCDnC0J,E,uKAEb,OACI,kBAAC,IAAD,CACIC,aAAY7J,KAAK9L,MAAM,eAAiB,aACxCwV,QAAS1J,KAAK9L,MAAMwV,QACpBxP,MAAK,2BAAM,CACP4P,WAAY,EACZC,aAAc,EACdC,UAAW,eACThK,KAAK9L,MAAM+V,iBACjBT,UAAWxJ,KAAK9L,MAAMsV,UACtBU,SAAUlK,KAAK9L,MAAMgW,UAErB,yBAAKhQ,MAAK,2BAAM,CACZiQ,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,QAAS,IACPtK,KAAK9L,MAAMqW,sBAETvK,KAAK9L,MAAMsW,KAGXxK,KAAK9L,MAAM+L,e,GAxBK9E,IAAM+E,WCEzBuK,E,kDACjB,WAAYvW,GAAQ,IAAD,8BACf,cAAMA,IAaVwW,eAAiB,WACb,MAAO,CACH,CACI9T,KAAM,gBACN+T,WAAY,QACZC,IAAK,yBACDtU,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,QAGrB,CACIlU,KAAM,kBACN+T,WAAY,SACZC,IAAK,yBACDtU,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,QAGrB,CACIlU,KAAM,iBACN+T,WAAY,MACZC,IAAK,yBACDtU,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,QAGrB,CACIlU,KAAM,eACNmU,SAAU,QACVH,IAAK,yBACDtU,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,QAGrB,CACIlU,KAAM,kBACNmU,SAAU,SACVH,IAAK,yBACDtU,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,QAGrB,CACIlU,KAAM,kBACNmU,SAAU,MACVH,IAAK,yBACDtU,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,UAvEzB,EAAK3U,MAAQ,GAFE,E,gEAOf6J,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAoER,IACFF,EAAQ6B,KAAK9L,MAAbiK,KACL,OACI,yBAAKqL,UAAU,uBACX,0BAAMA,UAAU,4BAAhB,aAGA,yBACIA,UAAU,uBAGNxJ,KAAK0K,iBAAiBnM,KAAI,SAACyM,EAAMhU,GAC7B,OACI,kBAAC,EAAD,CACI2S,IAAKqB,EAAKpU,KACVqT,gBAAiB,CACbH,WAAY,GAEhBS,oBAAqB,CACjBD,QAAS,GAEbZ,QAAS,SAAC7G,ICfvC,SAASoI,EAAU9M,EAAM4M,EAAUJ,EAAYtE,GAClD,IAAKA,EAAc,CACf,IAAIO,EAASzI,EAAKjK,MAAM+R,GACpBiF,EAAoBjX,EAAYkK,EAAK6F,YAAY,kBACrD7F,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrBgP,EAAUhP,EAAMwL,QAAQb,GAASmE,EAAUJ,GAAY,MACxD,SAAC1O,GACAA,EAAMwL,QAAQb,GAAQuE,iBAAiBD,GACvCjP,EAAMwL,QAAQb,GAAQ1S,MAAMkX,OAAOC,kBAI3C,IAAKlN,EAAKjK,MAAM4R,OACZ,OAEJ,IAAIwF,EAAgBnN,EAAK6F,YAAY,iBAEjC+G,IACAO,EAAcC,UAAYR,EAC1BO,EAAcE,UAAY,MAC1BF,EAAcG,aAAe,OAE7Bd,IACAW,EAAcI,YAAcf,EAC5BW,EAAcxB,WAAa,MAC3BwB,EAAcK,YAAc,OAGhC,IAAIC,EAAYzN,EAAK0N,eACrB1N,EAAK2N,SACDF,EAAUrW,IAAKqW,EAAUtW,KAAMsW,EAAUnW,OAAQmW,EAAUpW,MAC3D2I,EAAKG,gBAAgB,iBAAarJ,GAAW,GAGjDkJ,EAAKgN,iBAAiBG,GACtBnN,EAAKjK,MAAMkX,OAAOC,eDnBkBJ,CAAU9M,EAAM6M,EAAKD,SAAUC,EAAKL,aAExCnB,UAAU,0BAETwB,EAAKJ,c,GA1GGzP,IAAM+E,W,0CEE9B6L,E,kDACjB,WAAY7X,GAAQ,IAAD,8BACf,cAAMA,IASV8X,YAAc,SAACjM,EAAOkM,GAClB,IAAIC,GAAO,EACX,IACInM,EAAQoM,WAAWpM,GACdqM,MAAMrM,KACPmM,GAAO,GACb,UACF,OAAIA,GACAnM,EAAQsM,KAAKC,IAAI,EAAKpY,MAAMqY,IAAKxM,GACjCA,EAAQsM,KAAKE,IAAI,EAAKrY,MAAMoY,IAAKvM,IAEhB,KAAVA,GAAgBqM,MAAMrM,GACtB,IAGJkM,GAzBQ,EA4BnBO,SAAW,SAAC3J,GACR,IAAI9C,EAAQ8C,EAAE4J,OAAO1M,MACjBA,EAAM2M,SAAS,OACf3M,GAAS,KACbA,EAAQ,EAAKiM,YAAYjM,EAAO,EAAK4M,SAAS,EAAKzY,MAAM6L,QACzD,EAAK7L,MAAMsY,SAASzM,IAjCL,EAoCnB6M,YAAc,SAAC/J,GACX,EAAK1G,SAAS,CAAC0Q,SAAUhK,EAAEiK,iBArCZ,EAwCnBH,SAAW,SAAC5M,GACR,OAAKA,EAGgB,kBAAVA,EACAA,EAEPA,EAAMiG,SAAS,KACRqG,KAAKU,MAA2C,GAArCZ,WAAWpM,EAAMlG,QAAQ,IAAK,MAAa,GAG7DkG,EAAMiG,SAAS,MACRqG,KAAKU,MAA4C,GAAtCZ,WAAWpM,EAAMlG,QAAQ,KAAM,MAAa,GAG9DkG,EAAMiG,SAAS,OAMfjG,EAAMiG,SAAS,MALRqG,KAAKU,MAER,GAFcZ,WACdpM,EAAMlG,QAAQ,YAAa,MACrB,GASPkG,EAzBI,IAvCX,EAAK5J,MAAQ,CACT6W,WAAW,GAGf,EAAKC,eAAiB9R,IAAM+R,YAPb,E,qDAsER,IAAD,OACFC,EAAUC,IACV,sBACApN,KAAK9L,MAAMsV,WAGf,OACI,yBAAKA,UAAW2D,GACZ,2BACIjT,MAAK,2BAAM,CACPmT,UAAW,OACXzU,MAAO,KACLoH,KAAK9L,MAAMoZ,YACjB9D,UAAU,cACVzJ,MAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,QAAKiG,SAAShG,KAAK9L,MAAMqZ,MACpDvN,KAAK2M,SAAS3M,KAAK9L,MAAM6L,QAAU,EADyB,GAEjEyM,SAAUxM,KAAKwM,SACf7R,KAAK,OACLuP,UAAW,CAAC,IAAK,KAAM,KAAM,KAAM,QAAKlE,SAAShG,KAAK9L,MAAMqZ,OAASvN,KAAK9L,MAAMgW,WAIpF,kBAAC,EAAD,CACIsD,IAAKxN,KAAKiN,eACVzD,UAAU,kBACVS,gBAAiB,CACbH,WAAY,GAEhBS,oBAAqB,CACjBD,QAAS,GAEbZ,QAAU1J,KAAK9L,MAAMgW,cAA8BjV,EAAnB+K,KAAK4M,YACrC1S,MAAO8F,KAAK9L,MAAMuZ,gBAClBvD,SAAUlK,KAAK9L,MAAMwZ,aAErB,0BAAMxT,MAAO,CACTyT,MAAO,YAEN3N,KAAK9L,MAAMqZ,MAAQ,SAI5B,kBAAC,IAAD,CACIrT,MAAK,2BAAM,CACH+D,OAAQ,cACN+B,KAAK9L,MAAM0Z,eACrBf,SAAU7M,KAAK7J,MAAM0W,SACrBgB,UAA8B5Y,IAAxB+K,KAAK7J,MAAM0W,SACjBiB,QAAS,SAACjL,GACN,EAAK1G,SAAS,CAAC0Q,cAAU5X,KAE7B8Y,cAAe,CACX7T,MAAO,CACHoQ,QAAS,KAKbtK,KAAK9L,MAAM0B,MAAM2I,KAAI,SAACgP,EAAMvW,GACxB,OACI,kBAAC,IAAD,CACIgX,OAAK,EACLrE,IAAK3S,EACL0S,QAAS,SAAC7G,GACF,EAAK3O,MAAM+Z,cACX,EAAK/Z,MAAM+Z,aAAaV,GAE5B,EAAKpR,SAAS,CAAC0Q,cAAU5X,MAG7B,0BAAMiF,MAAO,CACTyT,MAAO,YAENJ,QASrBvN,KAAK9L,MAAMgW,UACX,yBACIV,UAAU,8BACVtP,MAAK,2BAAM,CACHmT,UAAW,OACXzU,MAAO,KACLoH,KAAK9L,MAAMoZ,mB,GA/JInS,IAAM+E,WCJlCgO,G,kDACjB,WAAYha,GAAQ,IAAD,8BACf,cAAMA,IAEDiC,MAAQ,CACT0X,KAAM3Z,EAAMia,cAAe,GAJhB,E,qDAQR,IAAD,OACN,OACI,kBAAC,IAAD,CAAY3E,UAAU,uBAAuBE,QAAS,SAAC7G,GAC/C,EAAK3O,MAAMsY,UACX,EAAKtY,MAAMsY,UAAU,EAAKrW,MAAM0X,MACpC,EAAK1R,SAAS,CAAC0R,MAAO,EAAK1X,MAAM0X,SAE7B,8BACK7N,KAAK9L,MAAMka,OAGhB,yBAAK5E,UAAU,kCAEPxJ,KAAK7J,MAAM0X,MACX,yBAAKvX,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,iCAGT7K,KAAK7J,MAAM0X,MACZ,yBAAKvX,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,uC,GA7BM1P,IAAM+E,WCO7BmO,G,kDACjB,WAAYna,GAAQ,IAAD,8BACf,cAAMA,IAuBVoa,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,KAzBR,EA4BnBkQ,SAAW,SAAChY,EAAMuL,GAAW,IACpB5B,EAAQ,EAAKjK,MAAbiK,KACD8N,EAAW9N,EAAKmG,qBAAqB,SAAS9P,GAC9C,CAAC,IAAK,MAAMwR,SAAS,EAAKwI,QAAQvC,IAClClM,EAAK,UAAMA,GAAN,OAAc,EAAKyO,QAAQvC,IACzB,CAAC,KAAM,MAAMjG,SAAS,EAAKwI,QAAQvC,MAE1ClM,EAAQ0O,GADR1O,EAAK,UAAMA,GAAN,OAAc,EAAKyO,QAAQvC,MAIpCyC,GAAWla,EAAMuL,EAAO5B,GAAM,GAC9BA,EAAKjK,MAAMkX,OAAOC,gBAvCH,EA0CnB4C,aAAe,SAACzZ,EAAM+Y,EAAMoB,EAAaC,GAAkB,IAClDzQ,EAAQ,EAAKjK,MAAbiK,KACDjE,EAAQiE,EAAKmG,qBAAqB,SAElC8H,MAAMwC,KACNA,EAAe,GA0BnBF,GAAWla,EAvBE,OAAT+Y,EACK,UAAMpP,EAAKoE,SAAQ,GAAO/N,IAC/Bqa,GAAuB3U,EAAM1F,GAAOma,EAAaxQ,IAASyQ,GAAgB,EADrE,MAEW,MAATrB,EACF,WAAOpP,EAAKoE,SAAQ,GAAO/N,IAC5Bqa,GAAuB3U,EAAM1F,GAAOma,EAAaxQ,IAASyQ,GAAgB,GAC9ED,EAAc,IAFT,KAGW,OAATpB,EAICkB,GAHH,WAAOtQ,EAAKoE,SAAQ,GAAO/N,IAC5Bqa,GAAuB3U,EAAM1F,GAAOma,EAAaxQ,IAASyQ,GAAgB,GAC9EzQ,EAAKjK,MAAMmL,kBAAkBiD,kBAAoB,IAF5C,OAIW,OAATiL,EAICkB,GAHH,WAAOtQ,EAAKoE,SAAQ,GAAO/N,IAC5Bqa,GAAuB3U,EAAM1F,GAAOma,EAAaxQ,IAASyQ,GAAgB,GAC9EzQ,EAAKjK,MAAMmL,kBAAkBgD,iBAAmB,IAF3C,OAIW,SAATkL,OACCtY,EAEAsY,EAGYpP,GAAM,GAC9BA,EAAKjK,MAAMkX,OAAOC,gBA1EH,EA6EnBmD,QAAU,SAACzO,GACP,OAAKA,GAAmB,UAAVA,EAGVA,EAAMiG,SAAS,KACR,IAGPjG,EAAMiG,SAAS,MACR,KAGPjG,EAAMiG,SAAS,MACR,KAGPjG,EAAMiG,SAAS,MACR,KAGJjG,EAlBI,QA/EI,EAoGnB+O,yBAA2B,SAACC,EAAUJ,EAAa5O,EAAO7F,GACtD,IAAIqT,EAAO,EAAKiB,QAAQtU,EAAM6U,IACzB5Q,EAAQ,EAAKjK,MAAbiK,KAiBL,MAfa,OAAToP,EACAxN,EAAK,UAAMA,EAAN,MACW,MAATwN,EACPxN,EAAK,UAAMA,EACX4O,EAAc,IADT,KAEW,OAATpB,GACPxN,EAAK,UAAMA,EAAQ5B,EAAKjK,MAAMmL,kBAAkBiD,kBAAoB,IAA/D,MACLvC,EAAK,eAAWA,EAAX,wBACW,OAATwN,GACPxN,EAAK,UAAMA,EAAQ5B,EAAKjK,MAAMmL,kBAAkBgD,iBAAmB,IAA9D,MACLtC,EAAK,eAAWA,EAAX,wBAELA,EAAQwN,EAGLxN,GArHP,EAAK5J,MAAQ,CACT0X,MAAM,GAHK,E,gEAQf7N,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGnDpF,EAAWC,EAAWC,GAIxC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BAqGD,IAAD,OACAnQ,EAAQ6B,KAAK9L,MAAbiK,KACDjE,EAAQiE,EAAKmG,qBAAqB,SAClC6K,EAAehR,EAAKhI,MAAMgZ,aAC1BC,EAAuBjR,EAAKkR,2BAA6B,CACzDC,gBAAiBnR,EAAKjK,MAAMmL,kBAAkBgD,iBAC9CkN,iBAAkBpR,EAAKjK,MAAMmL,kBAAkBiD,mBAEnD,OACI,oCACI,kBAAC,GAAD,CAAgB6L,aAAW,EAACC,MAAM,OAAO5B,SAAU,SAACqB,GAChD,EAAK1R,SAAS,CAAC0R,YAIf7N,KAAK7J,MAAM0X,MACX,yBAAKrE,UAAU,uBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,oBAAoBtP,MAAO,CACtCyR,YAAa,KAErB,0BAAMnC,UAAU,0BAAhB,SAGQ,kBAAC,EAAD,CACIA,UAAU,aACV8C,IAAK,EACLC,IAAKiD,IACLtF,SAAUlK,KAAK9L,MAAMub,cAAczJ,SAAS,SAC5CjG,MAAOoP,EACHnP,KAAK8O,yBAAyB,QAC1BM,EAAqBE,gBAAiBH,EAAavW,MAAOsB,GAC9DA,EAAMtB,MACV4T,SAAU,SAACzM,GACP,EAAKyM,SAAS,QAASzM,IAE3BkO,aAAc,SAACV,GACX,IAAItG,EAAa9I,EAAKjK,MAAM4R,OAAOvD,SAAQ,GAC3C,EAAK0L,aAAa,QAASV,EAAMtG,EAAWyI,0BAEhD9Z,MAAOoK,KAAK9L,MAAMyb,WAClBpC,KAAMvN,KAAKwO,QAAQtU,EAAMtB,UAIjC,yBAAK4Q,UAAU,qBACnB,0BAAMA,UAAU,0BAAhB,UAGQ,kBAAC,EAAD,CACIA,UAAU,yBACV8C,IAAK,EACLC,IAAKiD,IACLtF,SAAUlK,KAAK9L,MAAMub,cAAczJ,SAAS,UAC5CjG,MAAOoP,EACHnP,KAAK8O,yBAAyB,SAC1BM,EAAqBG,iBAAkBJ,EAAatW,OAAQqB,GAChEA,EAAMrB,OACV2T,SAAU,SAACzM,GACP,EAAKyM,SAAS,SAAUzM,IAE5BkO,aAAc,SAACV,GACX,IAAItG,EAAa9I,EAAKjK,MAAM4R,OAAOvD,SAAQ,GAC3C,EAAK0L,aAAa,SAAUV,EAAMtG,EAAW2I,2BAEjDha,MAAOoK,KAAK9L,MAAM2b,YAClBtC,KAAMvN,KAAKwO,QAAQtU,EAAMrB,YAKrC,yBAAK2Q,UAAU,oBACX,yBAAKA,UAAU,oBAAoBtP,MAAO,CACtCyR,YAAa,KAErB,0BAAMnC,UAAU,0BAAhB,SAGQ,kBAAC,EAAD,CACIA,UAAU,aACV8C,IAAK,EACLC,IAAKiD,IACLtF,SAAUlK,KAAK9L,MAAMub,cAAczJ,SAAS,YAC5CjG,MAAOoP,EACHnP,KAAK8O,yBAAyB,WAC1BM,EAAqBE,gBAAiBH,EAAavW,MAAOsB,GAC9DA,EAAM4V,SACVtD,SAAU,SAACzM,GACP,EAAKyM,SAAS,WAAYzM,IAE9BkO,aAAc,SAACV,GACX,IAAIqB,EAAe,EACf3H,EAAa9I,EAAKjK,MAAM4R,OAAOvD,SAAQ,GACvC3J,EAAQiW,GAAuB3U,EAAMtB,MAAOqO,EAAWyI,wBAAyBvR,GAChF4R,EAAWlB,GAAuB3U,EAAM6V,SAAU9I,EAAWyI,wBAAyBvR,GACtFiO,MAAMxT,KAAWwT,MAAM2D,GACvBnB,EAAemB,GACT3D,MAAMxT,IAAUwT,MAAM2D,GAC5BnB,EAAehW,EACTwT,MAAMxT,IAAWwT,MAAM2D,KAC7BnB,EAAevC,KAAKC,IAAI1T,EAAOmX,IAEnC,EAAK9B,aAAa,WAAYV,EAAMtG,EAAWyI,wBACzCd,IAEVhZ,MAAOoK,KAAK9L,MAAM8b,cAClBzC,KAAMvN,KAAKwO,QAAQtU,EAAM4V,aAIjC,yBAAKtG,UAAU,qBACnB,0BAAMA,UAAU,0BAAhB,SAGQ,kBAAC,EAAD,CACIA,UAAU,yBACV8C,IAAK,EACLC,IAAKiD,IACLtF,SAAUlK,KAAK9L,MAAMub,cAAczJ,SAAS,aAC5CjG,MAAOoP,EACHnP,KAAK8O,yBAAyB,YAC1BM,EAAqBG,iBAAkBJ,EAAatW,OAAQqB,GAChEA,EAAM+V,UACVzD,SAAU,SAACzM,GACP,EAAKyM,SAAS,YAAazM,IAE/BkO,aAAc,SAACV,GACX,IAAIqB,EAAe,EACf3H,EAAa9I,EAAKjK,MAAM4R,OAAOvD,SAAQ,GACvC1J,EAASgW,GAAuB3U,EAAMrB,OAAQoO,EAAW2I,yBAA0BzR,GACnF+R,EAAYrB,GAAuB3U,EAAMgW,UAAWjJ,EAAW2I,yBAA0BzR,GACzFiO,MAAMvT,KAAYuT,MAAM8D,GACxBtB,EAAesB,GACT9D,MAAMvT,IAAWuT,MAAM8D,GAC7BtB,EAAe/V,EACTuT,MAAMvT,IAAYuT,MAAM8D,KAC9BtB,EAAevC,KAAKC,IAAIzT,EAAQqX,IAEpC,EAAKjC,aAAa,YAAaV,EAAMtG,EAAW2I,yBAC1ChB,IAEVhZ,MAAOoK,KAAK9L,MAAMic,eAClB5C,KAAMvN,KAAKwO,QAAQtU,EAAM+V,eAKrC,yBAAKzG,UAAU,mBAAmBtP,MAAO,CACrCuR,aAAc,IAEd,yBAAKjC,UAAU,oBAAoBtP,MAAO,CACtCyR,YAAa,KAErB,0BAAMnC,UAAU,0BAAhB,SAGQ,kBAAC,EAAD,CACIA,UAAU,aACV8C,IAAK,EACLC,IAAKiD,IACLtF,SAAUlK,KAAK9L,MAAMub,cAAczJ,SAAS,YAC5CjG,MAAOoP,EACHnP,KAAK8O,yBAAyB,WAC1BM,EAAqBE,gBAAiBH,EAAavW,MAAOsB,GAC9DA,EAAM6V,SACVvD,SAAU,SAACzM,GACP,EAAKyM,SAAS,WAAYzM,IAE9BkO,aAAc,SAACV,GACX,IAAIqB,EAAe,IACf3H,EAAa9I,EAAKjK,MAAM4R,OAAOvD,SAAQ,GACvC3J,EAAQiW,GAAuB3U,EAAMtB,MAAOqO,EAAWyI,wBAAyBvR,GAChF2R,EAAWjB,GAAuB3U,EAAM4V,SAAU7I,EAAWyI,wBAAyBvR,GACtFiO,MAAMxT,KAAWwT,MAAM0D,GACvBlB,EAAekB,GACT1D,MAAMxT,IAAUwT,MAAM0D,GAC5BlB,EAAehW,EACTwT,MAAMxT,IAAWwT,MAAM0D,KAC7BlB,EAAevC,KAAKE,IAAI3T,EAAOkX,IAEnC,EAAK7B,aAAa,WAAYV,EAAMtG,EAAWyI,wBACzCd,IAEVhZ,MAAOoK,KAAK9L,MAAMkc,cAClB7C,KAAMvN,KAAKwO,QAAQtU,EAAM6V,aAIjC,yBAAKvG,UAAU,qBACnB,0BAAMA,UAAU,0BAAhB,SAGQ,kBAAC,EAAD,CACIA,UAAU,yBACV8C,IAAK,EACLC,IAAKiD,IACLtF,SAAUlK,KAAK9L,MAAMub,cAAczJ,SAAS,aAC5CjG,MAAOoP,EACHnP,KAAK8O,yBAAyB,YAC1BM,EAAqBG,iBAAkBJ,EAAatW,OAAQqB,GAChEA,EAAMgW,UACV1D,SAAU,SAACzM,GACP,EAAKyM,SAAS,YAAazM,IAE/BkO,aAAc,SAACV,GACX,IAAIqB,EAAe,IACf3H,EAAa9I,EAAKjK,MAAM4R,OAAOvD,SAAQ,GACvC1J,EAASgW,GAAuB3U,EAAMrB,OAAQoO,EAAW2I,yBAA0BzR,GACnF8R,EAAYpB,GAAuB3U,EAAM+V,UAAWhJ,EAAW2I,yBAA0BzR,GACzFiO,MAAMvT,KAAYuT,MAAM6D,GACxBrB,EAAeqB,GACT7D,MAAMvT,IAAWuT,MAAM6D,GAC7BrB,EAAe/V,EACTuT,MAAMvT,IAAYuT,MAAM6D,KAC9BrB,EAAevC,KAAKE,IAAI1T,EAAQoX,IAEpC,EAAKhC,aAAa,YAAaV,EAAMtG,EAAW2I,yBAC1ChB,IAEVhZ,MAAOoK,KAAK9L,MAAMmc,eAClB9C,KAAMvN,KAAKwO,QAAQtU,EAAMgW,qB,GAvVlB/U,IAAM+E,WAkWjDmO,GAAciC,aAAe,CACzBb,cAAe,I,4CC1UJc,GAhCIC,MAAW,SAACC,GAAD,MAAY,CACtCC,KAAM,CACF9X,MAAO,GACPC,OAAQ,GACRyR,QAAS,EACTH,QAAS,QAEbwG,WAAY,CACRrG,QAAS,EACTqD,MAAO,UACP,YAAa,CACTiD,UAAW,4BACXjD,MAAO,UACP,aAAc,CACVkD,QAAS,EACTC,gBAAiB,aAI7BC,MAAO,CACHnY,MAAO,GACPC,OAAQ,GACRmY,UAAW,QAEfC,MAAO,CACHlH,aAAc,EACd8G,QAAS,EACTC,gBAAiB,WAErBI,QAAS,MA7BMV,CA8BfW,MCnBiBC,G,kDACjB,WAAYld,GAAQ,IAAD,8BACf,cAAMA,IAsBVoa,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,KAxBR,EA2BnB+U,mBAAqB,SAACC,EAAMvR,GAAW,IAC9B5B,EAAQ,EAAKjK,MAAbiK,KACDoT,EAAWtd,EAAYkK,EAAK6F,YAAY,UAAY,IAExDuN,EAASD,GAAQvR,EACJ,QAATuR,GAAkBvR,IAClBwR,EAAS9b,QAAS,GAET,WAAT6b,GAAqBvR,IACrBwR,EAAShc,KAAM,GAGnB4I,EAAK2N,SAASyF,EAAShc,IAAKgc,EAASjc,KAAMic,EAAS9b,OAAQ8b,EAAS/b,MACjE2I,EAAKG,gBAAgB,aAEzBH,EAAKjK,MAAMkX,OAAOoG,gBAAgBrT,EAAMA,EAAKhI,MAAMsb,gBAC/CtT,EAAKoE,SAAQ,GAAQpE,EAAKhI,MAAMub,WA3CrB,EA8CnBC,iBAAmB,WAAO,IACjBxT,EAAQ,EAAKjK,MAAbiK,KACLyT,GAAY,YAAazT,EAAKG,gBAAgB,YAAaH,GAAM,IAhDlD,EAmDnB8P,aAAe,SAACzZ,EAAMqd,EAAYtE,GAAU,IACnCpP,EAAQ,EAAKjK,MAAbiK,KACDmN,EAAgBrX,EAAYkK,EAAK6F,YAAY,kBAC7C8N,EAAyB3T,EAAKmG,qBAAqB,iBAClDgH,IACDA,EAAgB,IAEpB,IAAIrE,EAAa9I,EAAKjK,MAAM4R,OAAOvD,SAAQ,GACvCxC,EAAQ8O,GAAuBiD,EAAuBtd,GAAOyS,EAAWyI,wBAAyBvR,GAExF,OAAToP,EACAjC,EAAc9W,GAAd,UAAyBuL,GAAzB,OAAiCwN,GACjB,MAATA,IAEPjC,EAAc9W,GAAd,UAAyBuL,EAAQkH,EAAWyI,wBAA0B,KAAtE,OAA4EnC,IAGhFpC,GAAiBG,EAAenN,GAAM,GAEtCA,EAAKjK,MAAMkX,OAAOoG,gBAAgBrT,EAAMA,EAAKhI,MAAMsb,gBAC/CtT,EAAKoE,SAAQ,GAAQpE,EAAKhI,MAAMub,WAvErB,EA0EnBK,cAAgB,SAACvd,EAAMuL,GAAW,IACzB5B,EAAQ,EAAKjK,MAAbiK,KACDmN,EAAgBrX,EAAYkK,EAAK6F,YAAY,kBAC7C8N,EAAyB3T,EAAKmG,qBAAqB,iBAClDgH,IACDA,EAAgB,IACpBA,EAAc9W,GAAd,UAAyBuL,GAAzB,OAAiCiS,GAAsBF,EAAuBtd,KAE9E2W,GAAiBG,EAAenN,GAAM,GAEtCA,EAAKjK,MAAMkX,OAAOoG,gBAAgBrT,EAAMA,EAAKhI,MAAMsb,gBAC/CtT,EAAKoE,SAAQ,GAAQpE,EAAKhI,MAAMub,UACpCvT,EAAKjK,MAAMkX,OAAO6G,kBAAkB9T,EAAMA,EAAKoE,SAAQ,KAtFxC,EAyFnBuM,yBAA2B,SAACC,EAAUJ,EAAa5O,EAAO7F,GACtD,GAAKA,EAAL,CAGA,IAAIqT,EAAOyE,GAAsB9X,EAAM6U,IAC1B,EAAK7a,MAAbiK,KAWL,OARI4B,EADS,OAATwN,EACK,UAAMxN,EAAN,MACW,MAATwN,EACF,UAAMxN,EACX4O,EAAc,IADT,KAGGpB,IApGZ,EAAKpX,MAAQ,GAFE,E,gEAOf6J,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGlDpF,EAAWC,EAAWC,GAIzC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BAwFA,IAAD,OACDnQ,EAAQ6B,KAAK9L,MAAbiK,KACD+T,EAAQ/T,EAAKmG,qBAAqB,SAClC6N,EAAOhU,EAAKG,gBAAgB,YAC5BgN,EAAgBnN,EAAKmG,qBAAqB,iBAC1C6K,EAAehR,EAAKhI,MAAMgZ,aAC1BC,EAAuBjR,EAAKkR,0BAChC,OACI,oCACI,kBAAC,GAAD,CAAgBjB,MAAM,WAAW5B,SAAU,SAACqB,GACxC,EAAK1R,SAAS,CAAC0R,YAIf7N,KAAK7J,MAAM0X,MACX,yBAAKrE,UAAU,uBACX,yBAAKA,UAAU,wBACX,0BAAMA,UAAU,6BAAhB,WAIA,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,wBACX,kBAAC,GAAD,CACIA,UAAU,sBACV0H,QAASgB,EAAM5c,OAAQ,EACvBkX,SAAU,SAAC3J,GACP,IAAIqO,EAAUrO,EAAE4J,OAAOyE,QACvB,EAAKG,mBAAmB,OAAQH,IAEpChH,SAAUiI,KAGlB,yBAAK3I,UAAU,yBACX,kBAAC,GAAD,CACIA,UAAU,sBACV0H,QAASgB,EAAM1c,QAAS,EACxBgX,SAAU,SAAC3J,GACP,IAAIqO,EAAUrO,EAAE4J,OAAOyE,QACvB,EAAKG,mBAAmB,QAASH,IAErChH,SAAUiI,KAGlB,yBAAK3I,UAAU,uBACX,kBAAC,GAAD,CACIA,UAAU,wBACV0H,QAASgB,EAAM3c,MAAO,EACtBiX,SAAU,SAAC3J,GACP,IAAIqO,EAAUrO,EAAE4J,OAAOyE,QACvB,EAAKG,mBAAmB,MAAOH,IAEnChH,SAAUiI,KAGlB,yBAAK3I,UAAU,0BACX,kBAAC,GAAD,CACIA,UAAU,wBACV0H,QAASgB,EAAMzc,SAAU,EACzB+W,SAAU,SAAC3J,GACP,IAAIqO,EAAUrO,EAAE4J,OAAOyE,QACvB,EAAKG,mBAAmB,SAAUH,IAEtChH,SAAUiI,KAIdA,GACA,yBAAK3I,UAAU,8BAI3B,yBAAKA,UAAU,wBACf,0BAAMA,UAAU,6BAAhB,gBAGI,kBAAC,KAAD,CACIA,UAAU,6BACV0H,QAASiB,IAAQ,EACjB3F,SAAU,SAAC3J,GACP,EAAK8O,uBAIjB,yBAAKnI,UAAU,+BACX,kBAAC,EAAD,CACIA,UAAU,0BACV8C,IAAK,EACLC,IAAKiD,IACLtF,UAAWgI,EAAM3c,KAAO4c,EACxBpS,MAAOmS,EAAM3c,MAAQ4Z,GAAgBC,EACjCA,EAAqB5D,UAAYF,EAAcE,WACnDgB,SAAU,SAACzM,GACP,EAAKgS,cAAc,YAAahS,IAEpCkO,aAAc,SAACV,GACX,EAAKU,aAAa,YAAa,SAAUV,IAE7C3X,MAAO,CAAC,IAAK,MACb2X,KACI2E,EAAM3c,KACNyc,GACI7C,GAAgBC,EACZA,EAAqB5D,UAAYF,EAAcE,WAE3D8B,WAAY,CACR1U,MAAO,OACPwZ,SAAU,IAEd3E,gBAAiB,CACb2E,SAAU,MAGlB,kBAAC,EAAD,CACI5I,UAAU,0BACV8C,IAAK,EACLC,IAAKiD,IACLtF,UAAWgI,EAAM5c,MAAQ6c,EACzBpS,MAAOmS,EAAM5c,OAAS6Z,GAAgBC,EAClCA,EAAqBtF,WAAawB,EAAcxB,YACpD0C,SAAU,SAACzM,GACP,EAAKgS,cAAc,aAAchS,IAErCkO,aAAc,SAACV,GACX,EAAKU,aAAa,aAAc,SAAUV,IAE9C3X,MAAO,CAAC,IAAK,MACb2X,KAAM2E,EAAM5c,MACZ0c,GACI7C,GAAgBC,EACZA,EAAqBtF,WAAawB,EAAcxB,YACxDwD,WAAY,CACR1U,MAAO,OACPwZ,SAAU,IAEd3E,gBAAiB,CACb2E,SAAU,MAGlB,kBAAC,EAAD,CACI5I,UAAU,0BACV8C,IAAK,EACLC,IAAKiD,IACLtF,UAAWgI,EAAMzc,QAAU0c,EAC3BpS,MAAOmS,EAAMzc,SAAW0Z,GAAgBC,EACpCA,EAAqB3D,aAAeH,EAAcG,cACtDe,SAAU,SAACzM,GACP,EAAKgS,cAAc,eAAgBhS,IAEvCkO,aAAc,SAACV,GACX,EAAKU,aAAa,eAAgB,SAAUV,IAEhD3X,MAAO,CAAC,IAAK,MACb2X,KAAM2E,EAAMzc,QACZuc,GACI7C,GAAgBC,EACZA,EAAqB3D,aAAeH,EAAcG,cAC1D6B,WAAY,CACR1U,MAAO,OACPwZ,SAAU,IAEd3E,gBAAiB,CACb2E,SAAU,MAGlB,kBAAC,EAAD,CACI5I,UAAU,0BACV8C,IAAK,EACLC,IAAKiD,IACLtF,UAAWgI,EAAM1c,OAAS2c,EAC1BpS,MAAOmS,EAAM1c,QAAU2Z,GAAgBC,EACnCA,EAAqBzD,YAAcL,EAAcK,aACrDa,SAAU,SAACzM,GACP,EAAKgS,cAAc,cAAehS,IAEtCkO,aAAc,SAACV,GACX,EAAKU,aAAa,cAAe,SAAUV,IAE/C3X,MAAO,CAAC,IAAK,MACb2X,KAAM2E,EAAM1c,OACZwc,GACI7C,GAAgBC,EACZA,EAAqBzD,YAAcL,EAAcK,aACzD2B,WAAY,CACR1U,MAAO,OACPwZ,SAAU,IAEd3E,gBAAiB,CACb2E,SAAU,a,GAzSCjX,IAAM+E,WCThCmS,G,kDACjB,WAAYne,GAAQ,IAAD,8BACf,cAAMA,IASVwV,QAAU,SAAC7G,GACP,EAAK1G,SAAS,CAAC0Q,SAAUhK,EAAEiK,iBAXZ,EAcnBN,SAAW,SAAC8F,GACR,EAAKpe,MAAMsY,SAAS8F,IAfL,EAkBnB3F,SAAW,WACP,OAAI,EAAKzY,MAAMqe,cACJ,EAAKre,MAAMqe,cAAc,EAAKre,MAAM6L,QACtC,EAAK7L,MAAMse,UAAY,EAAKte,MAAMse,SAAS,EAAKte,MAAM6L,QACvD,EAAK7L,MAAM6L,OAAS,GAEjB,EAAK7L,MAAM6L,OAAS,IArB/B,EAAK5J,MAAQ,CACT6W,WAAW,GAGf,EAAKC,eAAiB9R,IAAM+R,YAPb,E,qDA4BR,IAAD,OACN,OACI,yBAAK1D,UAAU,gBACX,0BACIA,UAAU,eACVtP,MAAK,2BAAM8F,KAAK9L,MAAMue,WAAc,CAChCC,OAAQ,YAEZhJ,QAAS1J,KAAK0J,SAEbpM,QAAQC,IAAI,WAAYyC,KAAK2M,YAC7B3M,KAAK2M,YAGV,kBAAC,IAAD,CACIzS,MAAK,2BAAM,CACH+D,OAAQ,cACN+B,KAAK9L,MAAMye,WACrB9F,SAAU7M,KAAK7J,MAAM0W,SACrBgB,UAA8B5Y,IAAxB+K,KAAK7J,MAAM0W,SACjBiB,QAAS,SAACjL,GACN,EAAK1G,SAAS,CAAC0Q,cAAU5X,KAE7B8Y,cAAe,CACX7T,MAAO,CACHoQ,QAAS,EACT1R,MAAOoH,KAAK9L,MAAMue,UAAWzS,KAAK9L,MAAMue,UAAU7Z,MAAO,UAK7DoH,KAAK9L,MAAM0e,QAAQrU,KAAI,SAAC+T,EAAQtb,GAC5B,OACI,kBAAC,IAAD,CACIgX,OAAK,EACLrE,IAAK3S,EACL0S,QAAS,SAAC7G,GACF,EAAK3O,MAAMsY,UACX,EAAKtY,MAAMsY,SAAS8F,GAExB,EAAKnW,SAAS,CAAC0Q,cAAU5X,KAE7BiF,MAAK,eAAOoY,EAAOpI,UAAY,CAC3B2I,cAAe,UAGnB,0BAAM3Y,MAAO,CACTtB,MAAO,SAEN,EAAK1E,MAAMse,SAAW,EAAKte,MAAMse,SAASF,GAAUA,QAQ7E,yBACI9I,UAAU,iBAEV,yBAAK5Q,MAAO,GAAIC,OAAQ,GAAIgS,IAAK,iCAIjC7K,KAAK9L,MAAMgW,UACX,yBACIV,UAAU,mBACVtP,MAAO8F,KAAK9L,MAAMue,iB,GAhGJtX,IAAM+E,WCFvB4S,G,4MACjB9G,YAAc,SAACjM,EAAOkM,GAClB,MAAI,QAAQ8G,KAAKhT,IACbA,EAAQoM,WAAWpM,GAAOiT,QAAQ,GAClCjT,EAAQsM,KAAKC,IAAI,EAAKpY,MAAMqY,IAAKxM,GACjCA,EAAQsM,KAAKE,IAAI,EAAKrY,MAAMoY,IAAKvM,IAEhB,KAAVA,EACA,IAGJkM,G,EAGXO,SAAW,SAAC3J,GACR,IAAI9C,EAAQ,EAAKiM,YAAYnJ,EAAE4J,OAAO1M,MAAO,EAAK7L,MAAM6L,OACxD,EAAK7L,MAAMsY,SAASzM,I,uDAIpB,OACI,2BACIyJ,UAAU,cACVzJ,MAAOC,KAAK9L,MAAM6L,OAAS,EAC3ByM,SAAUxM,KAAKwM,SACf7R,KAAK,OACLT,MAAO8F,KAAK9L,MAAMoZ,iB,GA1BOnS,IAAM+E,WCI1B+S,G,kDACjB,WAAY/e,GAAQ,IAAD,8BACf,cAAMA,IAsBVoa,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,KAxBR,EA2BnB4W,qBAAuB,SAACZ,GAAY,IAC3BnU,EAAQ,EAAKjK,MAAbiK,KACDgV,EAAYhV,EAAK6F,YAAY,yBACjCoP,GAAmBjV,EAAMmU,EAAQnU,EAAKjK,MAAMmf,QAAQ5V,SAAS,EAAO,CAAC0V,eA9BtD,EAiCnBG,kBAAoB,SAACH,GACjBA,EAAS,UAAMA,EAAN,MADsB,IAE1BhV,EAAQ,EAAKjK,MAAbiK,KACDoV,EAAYpV,EAAK6F,YAAY,mBACjCoP,GAAmBjV,EAAMoV,EAAWpV,EAAKjK,MAAMmf,QAAQ5V,SAAS,EAAO,CAAC0V,cACxEhV,EAAKjK,MAAMkX,OAAOC,gBApClB,EAAKlV,MAAQ,GAFE,E,gEAOf6J,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGlDpF,EAAWC,EAAWC,GAIzC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BAqBA,IAAD,OACDnQ,EAAQ6B,KAAK9L,MAAbiK,KACDoV,EAAYpV,EAAK6F,YAAY,mBAC7BmP,EAAYhV,EAAK6F,YAAY,yBACjC,OACI,oCACI,kBAAC,GAAD,CAAgBoK,MAAM,SAAS5B,SAAU,SAACqB,GACtC,EAAK1R,SAAS,CAAC0R,YAIf7N,KAAK7J,MAAM0X,MACX,yBAAKrE,UAAU,uBACX,yBAAKA,UAAU,wBACVtP,MAAO,CACHuR,aAA4B,WAAd8H,EAAyB,GAAK,IAGjD,yBAAK/J,UAAU,wBAAf,iBAIA,kBAAC,GAAD,CACIoJ,QAAS5S,KAAK9L,MAAM0e,SAAW,CAAC,OAAQ,QAAS,UACjDpG,SAAUxM,KAAKkT,qBACfnT,MAAOwT,GAAa,OACpBd,UAAW,CACP7Z,MAAO,GACPwZ,SAAU,OAMJ,WAAdmB,GACA,yBAAK/J,UAAU,yBACX,yBAAKA,UAAU,wBAAf,cAIA,kBAAC,GAAD,CACIA,UAAU,aACV8C,IAAK,EACLC,IAAKiD,IACLzP,MAAOyT,GAAqBL,GAC5B3G,SAAUxM,KAAKsT,kBACfhG,WAAY,CACR1U,MAAO,GACPwZ,SAAU,GACV/E,UAAW,iB,GA3FNlS,IAAM+E,WCM9BuT,G,kDACjB,WAAYvf,GAAQ,IAAD,8BACf,cAAMA,IAsBVoa,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,KAxBR,EA2BnB2R,aAAe,SAACzZ,EAAMqd,EAAYtE,GAAU,IACnCpP,EAAQ,EAAKjK,MAAbiK,KACDmM,EAAUrW,EAAYkK,EAAK6F,YAAY,aAAe,GACtD0P,EAAmBvV,EAAKmG,qBAAqB,YAAc,GAE3D2C,EAAa9I,EAAKjK,MAAM4R,OAAOvD,SAAQ,GACvCxC,EAAQ8O,GAAuB6E,EAAiBlf,GAAOyS,EAAWrO,MAAOuF,GAEhE,OAAToP,EACAjD,EAAQ9V,GAAR,UAAmBuL,GAAnB,OAA2BwN,GACX,MAATA,EACPjD,EAAQ9V,GAAR,UAAmBuL,EAAQ5B,EAAKjK,MAAM4R,OAAOvD,SAAQ,GAAO3J,MAAQ,KAApE,OAA0E2U,GAE5D,OAATA,EACLjD,EAAQ9V,GAAR,UAAmBuL,EAAQ5B,EAAKjK,MAAMmL,kBAAkBiD,kBAAoB,KAA5E,OAAkFiL,GAEpE,OAATA,IACLjD,EAAQ9V,GAAR,UAAmBuL,EAAQ5B,EAAKjK,MAAMmL,kBAAkBgD,iBAAmB,KAA3E,OAAiFkL,IAGrFoG,GAAoB,UAAWrJ,EAASnM,GAAM,OAAMlJ,GAAW,IA/ChD,EAkDnB8c,cAAgB,SAACvd,EAAMuL,GAAW,IACzB5B,EAAQ,EAAKjK,MAAbiK,KACDyV,EAAezV,EAAKG,gBAAgB,gBACpCgM,EAAUrW,EAAYkK,EAAK6F,YAAY,aAAe,GACtD0P,EAAmBvV,EAAKmG,qBAAqB,YAAc,GAE/D,GADAgG,EAAQ9V,GAAR,UAAmBuL,GAAnB,OAA2BiS,GAAsB0B,EAAiBlf,IAAS,OACvEof,EAAc,CACd,IAAI3M,EAAa9I,EAAKjK,MAAM4R,OAAQ3H,EAAKjK,MAAM4R,OAAOvD,SAAQ,GAC1D,CACImN,wBAAyBvR,EAAKjK,MAAMmL,kBAAkBgD,kBAE1DwR,EAAUhF,GAAuBvE,EAAQ9V,GAAOyS,EAAWyI,wBAAyBvR,GACxFmM,EAAU,CACN/U,IAAI,GAAD,OAAKue,GAAoBD,EAAS5M,EAAWyI,wBAAyBsC,GAAsB0B,EAAiBne,KAAO,MAAO4I,IAC9H7I,KAAK,GAAD,OAAKwe,GAAoBD,EAAS5M,EAAWyI,wBAAyBsC,GAAsB0B,EAAiBpe,MAAQ,MAAO6I,IAChI1I,OAAO,GAAD,OAAKqe,GAAoBD,EAAS5M,EAAWyI,wBAAyBsC,GAAsB0B,EAAiBje,QAAU,MAAO0I,IACpI3I,MAAM,GAAD,OAAKse,GAAoBD,EAAS5M,EAAWyI,wBAAyBsC,GAAsB0B,EAAiBle,OAAS,MAAO2I,KAI1IwV,GAAoB,UAAWrJ,EAASnM,GAAM,OAAMlJ,GAAW,GAE/DkJ,EAAK4V,gBAAe,GAAM,GAAM,OAAM9e,GAAW,GAEjDzB,OAAOwgB,uBAAsB,WACzB7V,EAAKjK,MAAMkX,OAAOC,mBA3EP,EA+EnB4I,eAAiB,SAACL,GAAkB,IAC3BzV,EAAQ,EAAKjK,MAAbiK,KAGL,GADAyT,GAAY,eAAgBgC,EAAczV,GAAM,GAC5CyV,EAAc,CACd,IAAIF,EAAmBvV,EAAKmG,qBAAqB,YAAc,GAE3D2C,EAAa9I,EAAKjK,MAAM4R,OAAQ3H,EAAKjK,MAAM4R,OAAOvD,SAAQ,GAC1D,CACImN,wBAAyBvR,EAAKjK,MAAMmL,kBAAkBgD,kBAE1DkK,EAAMF,KAAKE,IACXsC,GAAuB6E,EAAiBne,IAAK0R,EAAWyI,wBAAyBvR,IAAS,EAC1F0Q,GAAuB6E,EAAiBpe,KAAM2R,EAAWyI,wBAAyBvR,IAAS,EAC3F0Q,GAAuB6E,EAAiBje,OAAQwR,EAAWyI,wBAAyBvR,IAAS,EAC7F0Q,GAAuB6E,EAAiBle,MAAOyR,EAAWyI,wBAAyBvR,IAAS,GAUhGwV,GAAoB,UAPN,CACVpe,IAAI,GAAD,OAAKue,GAAoBvH,EAAKtF,EAAWyI,wBAAyBsC,GAAsB0B,EAAiBne,KAAO,MAAO4I,IAC1H7I,KAAK,GAAD,OAAKwe,GAAoBvH,EAAKtF,EAAWyI,wBAAyBsC,GAAsB0B,EAAiBpe,MAAQ,MAAO6I,IAC5H1I,OAAO,GAAD,OAAKqe,GAAoBvH,EAAKtF,EAAWyI,wBAAyBsC,GAAsB0B,EAAiBje,QAAU,MAAO0I,IAChI3I,MAAM,GAAD,OAAKse,GAAoBvH,EAAKtF,EAAWyI,wBAAyBsC,GAAsB0B,EAAiBle,OAAS,MAAO2I,KAG1FA,GAAM,OAAMlJ,GAAW,GAE/DkJ,EAAK4V,gBAAe,GAAM,GAAM,OAAM9e,GAAW,KAxGrD,EAAKkB,MAAQ,GAFE,E,gEAOf6J,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGlDpF,EAAWC,EAAWC,GAIzC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BA0FA,IAAD,OACDnQ,EAAQ6B,KAAK9L,MAAbiK,KACDmM,EAAUnM,EAAKmG,qBAAqB,YAAc,GAClDsP,EAAezV,EAAKG,gBAAgB,kBAAmB,EAC3D,OACI,oCACI,kBAAC,GAAD,CAAgB8P,MAAM,UAAU5B,SAAU,SAACqB,GACvC,EAAK1R,SAAS,CAAC0R,YAIf7N,KAAK7J,MAAM0X,MACX,yBAAKrE,UAAU,uBACX,yBAAKA,UAAU,+BACX,kBAAC,EAAD,CACIA,UAAU,0BACV8C,IAAK,EACLC,IAAKiD,IACLzP,MAAOuK,EAAQ/U,KAAO,MACtBiX,SAAU,SAACzM,GACP,EAAKgS,cAAc,MAAOhS,IAE9BkO,aAAc,SAACV,GACX,EAAKU,aAAa,MAAO,SAAUV,IAEvC3X,MAAO,CAAC,IAAK,KAAM,KAAM,MACzB2X,KACIyE,GAAsB1H,EAAQ/U,KAAO,MAEzC+X,WAAY,CACR1U,MAAO,OACPwZ,SAAU,IAEd3E,gBAAiB,CACb2E,SAAU,MAGlB,kBAAC,EAAD,CACI5I,UAAU,0BACV8C,IAAK,EACLC,IAAKiD,IACLzP,MAAOuK,EAAQhV,MAAQ,MACvBkX,SAAU,SAACzM,GACP,EAAKgS,cAAc,OAAQhS,IAE/BkO,aAAc,SAACV,GACX,EAAKU,aAAa,OAAQ,SAAUV,IAExC3X,MAAO,CAAC,IAAK,KAAM,KAAM,MACzB2X,KACIyE,GAAsB1H,EAAQhV,MAAQ,MAE1CgY,WAAY,CACR1U,MAAO,OACPwZ,SAAU,IAEd3E,gBAAiB,CACb2E,SAAU,MAGlB,kBAAC,EAAD,CACI5I,UAAU,0BACV8C,IAAK,EACLC,IAAKiD,IACLzP,MAAOuK,EAAQ7U,QAAU,MACzB+W,SAAU,SAACzM,GACP,EAAKgS,cAAc,SAAUhS,IAEjCkO,aAAc,SAACV,GACX,EAAKU,aAAa,SAAU,SAAUV,IAE1C3X,MAAO,CAAC,IAAK,KAAM,KAAM,MACzB2X,KACIyE,GAAsB1H,EAAQ7U,QAAU,MAE5C6X,WAAY,CACR1U,MAAO,OACPwZ,SAAU,IAEd3E,gBAAiB,CACb2E,SAAU,MAGlB,kBAAC,EAAD,CACI5I,UAAU,0BACV8C,IAAK,EACLC,IAAKiD,IACLzP,MAAOuK,EAAQ9U,OAAS,MACxBgX,SAAU,SAACzM,GACP,EAAKgS,cAAc,QAAShS,IAEhCkO,aAAc,SAACV,GACX,EAAKU,aAAa,QAAS,SAAUV,IAEzC3X,MAAO,CAAC,IAAK,KAAM,KAAM,MACzB2X,KACIyE,GAAsB1H,EAAQ9U,OAAS,MAE3C8X,WAAY,CACR1U,MAAO,OACPwZ,SAAU,IAEd3E,gBAAiB,CACb2E,SAAU,OAKtB,yBAAK5I,UAAU,yBACP,0BAAMA,UAAU,6BAAhB,iBAGJ,kBAAC,KAAD,CACIA,UAAU,6BACV0H,QAAS0C,EACTpH,SAAU,SAAC3J,GACP,IAAIqO,EAAUrO,EAAE4J,OAAOyE,QACvB,EAAK+C,eAAe/C,a,GApOV/V,IAAM+E,W,oBCJ/BgU,G,kDACjB,WAAYhgB,GAAQ,IAAD,8BACf,cAAMA,IAsBVoa,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,KAxBR,EA2BnB6X,cAAgB,SAACtR,EAAG9C,GAAW,IACtB5B,EAAQ,EAAKjK,MAAbiK,KACDiW,EAAqBjW,EAAK6F,YAAY,gBACtCqQ,EAAuBlW,EAAKmG,qBAAqB,gBACrD,GAAc,WAAVvE,KACEsU,KACCA,EAAqBje,WAAgD,WAAnCie,EAAqBje,cACxDie,EAAqBC,WAAgD,WAAnCD,EAAqBC,YAC7D,CACI,IAAIC,EAAkBtgB,EAAYmgB,GAAsB,IAKxD,OAJAG,EAAgBpe,MAAQ,SACxBoe,EAAgBne,UAAY,SAC5BkH,QAAQC,IAAI,gBAAiB8L,KAAKC,UAAUiL,SAC5CZ,GAAoB,eAAgBY,EAAiBpW,GAAM,OAAMlJ,GAAW,GAIhF0e,GAAoB,qBAAsB5T,EAAO5B,GAAM,OAAMlJ,GAAW,IA5CzD,EA+CnBuf,sBAAwB,SAACzF,EAAUmC,GAAa,IACvC/S,EAAQ,EAAKjK,MAAbiK,KACLwV,GAAoB,gBAAD,OAAiB5E,GAAYmC,EAAS,cAAUjc,EAC7DkJ,GAAM,OAAMlJ,GAAW,IAlDd,EAqDnBwf,aAAe,SAAC5R,EAAG9C,GAEf4T,GAAoB,oBAAqB5T,EAD5B,EAAK7L,MAAbiK,MACiD,OAAMlJ,GAAW,IArDvE,EAAKkB,MAAQ,GAFE,E,gEAOf6J,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGlDpF,EAAWC,EAAWC,GAIzC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BAsCA,IAAD,OAEFpY,EADS8J,KAAK9L,MAAbiK,KACmBmG,qBAAqB,gBAC7C,OACI,oCACI,kBAAC,GAAD,CAAgB8J,MAAM,mBAAmB5B,SAAU,SAACqB,GAChD,EAAK1R,SAAS,CAAC0R,YAIf7N,KAAK7J,MAAM0X,MACX,yBAAKrE,UAAU,uBACX,yBAAKA,UAAU,4BAAf,YAGA,kBAACkL,GAAA,EAAD,CACIlL,UAAU,wBACVjG,KAAK,QACLxD,MAAO7J,EAAaC,MACpBwe,WAAS,EACTnI,SAAUxM,KAAKmU,eAEf,kBAACS,GAAA,EAAD,CAAc7U,MAAM,OAAOyJ,UAAU,8BAA8BjG,KAAK,QAC5DrJ,MAAO,CACHoQ,QAAS,IAFzB,QAOA,kBAACsK,GAAA,EAAD,CAAc7U,MAAM,OAAOyJ,UAAU,8BAA8BjG,KAAK,QAC1DrJ,MAAO,CACHoQ,QAAS,IAF3B,QAOA,kBAACsK,GAAA,EAAD,CAAc7U,MAAM,SAASyJ,UAAU,8BAA8BjG,KAAK,QAC5DrJ,MAAO,CACHoQ,QAAS,IAF3B,WAUuB,WAAvBpU,EAAaC,OACb,oCACI,yBAAKqT,UAAU,wBACf,0BAAMA,UAAU,6BAAhB,qBAGI,kBAAC,KAAD,CACIA,UAAU,6BACV0H,QAAoC,WAA3Bhb,EAAaE,WAAqD,SAA3BF,EAAaE,UAC7DoW,SAAU,SAAC3J,GACP,IAAIqO,EAAUrO,EAAE4J,OAAOyE,QACvB,EAAKsD,sBAAsB,YAAatD,OAIpD,yBAAK1H,UAAU,wBACf,0BAAMA,UAAU,6BAAhB,uBAGI,kBAAC,KAAD,CACIA,UAAU,6BACV0H,QAAoC,WAA3Bhb,EAAaoe,WAAqD,SAA3Bpe,EAAaoe,UAC7D9H,SAAU,SAAC3J,GACP,IAAIqO,EAAUrO,EAAE4J,OAAOyE,QACvB,EAAKsD,sBAAsB,YAAatD,OAIpD,yBAAK1H,UAAU,yBACf,0BAAMA,UAAU,6BAAhB,yBAIA,kBAACkL,GAAA,EAAD,CACIlL,UAAU,+BACVjG,KAAK,QACLxD,MAAO7J,EAAaic,MAAQ,SAC5BwC,WAAS,EACTnI,SAAUxM,KAAKyU,cAEf,kBAACG,GAAA,EAAD,CAAc7U,MAAM,OAAOyJ,UAAU,8BAA8BjG,KAAK,QAC1DrJ,MAAO,CACHoQ,QAAS,IAF3B,QAOA,kBAACsK,GAAA,EAAD,CAAc7U,MAAM,OAAOyJ,UAAU,8BAA8BjG,KAAK,QAC1DrJ,MAAO,CACHoQ,QAAS,IAF3B,QAOA,kBAACsK,GAAA,EAAD,CAAc7U,MAAM,SAASyJ,UAAU,8BAA8BjG,KAAK,QAC5DrJ,MAAO,CACHoQ,QAAS,IAF3B,gB,GA/JWnP,IAAM+E,WCNhC2U,G,4MACjBrI,SAAW,SAAC3J,GACR,IAAI9C,EAAQ8C,EAAE4J,OAAO1M,MACjB,EAAK7L,MAAMsY,UACX,EAAKtY,MAAMsY,SAASzM,I,uDAIxB,OACI,2CACQC,KAAK9L,MADb,CAEIsV,UAAU,cACVzJ,MAAOC,KAAK9L,MAAM6L,OAAS,GAC3ByM,SAAUxM,KAAKwM,SACf7R,KAAK,OACLT,MAAO8F,KAAK9L,MAAMoZ,kB,GAfKnS,IAAM+E,WCGxB4U,G,kDACjB,WAAY5gB,GAAQ,IAAD,8BACf,cAAMA,IAuBVoa,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,KAzBR,EA4BnByY,eAAiB,SAACC,GAAY,IACrB7W,EAAQ,EAAKjK,MAAbiK,KACD8W,EAAS9W,EAAKG,gBAAgB,UAC9B0W,EACA7W,EAAKjK,MAAMghB,UAAUC,UAAUhX,EAAKjK,MAAM+R,GAAGpM,QAAQ,QAAS,IAAKsE,GAGnEA,EAAKjK,MAAMghB,UAAUE,aAAaH,EAAOhP,GAAI9H,IAnClC,EAuCnBkX,aAAe,SAACC,GAAa,IACpBnX,EAAQ,EAAKjK,MAAbiK,KACD8W,EAAS9W,EAAKG,gBAAgB,UAClCH,EAAKjK,MAAMghB,UAAUK,aAAaN,EAAOhP,GAAIqP,EAASnX,IAxCtD,EAAKhI,MAAQ,CACT0X,MAAM,GAHK,E,gEAQf7N,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGnDpF,EAAWC,EAAWC,GAIxC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BAwBD,IAAD,OAED2G,EADSjV,KAAK9L,MAAbiK,KACaG,gBAAgB,UAClC,OACI,oCACI,kBAAC,GAAD,CAAgB8P,MAAM,SAAS5B,SAAU,SAACqB,GACtC,EAAK1R,SAAS,CAAC0R,YAIf7N,KAAK7J,MAAM0X,MACX,yBAAKrE,UAAU,uBAEX,yBAAKA,UAAU,wBACf,0BAAMA,UAAU,6BAAhB,iBAGI,kBAAC,KAAD,CACIA,UAAU,6BACV0H,aAAoBjc,IAAXggB,EACTzI,SAAU,SAAC3J,GACP,EAAKkS,eAAelS,EAAE4J,OAAOyE,aAMrC+D,GACA,yBAAKzL,UAAU,uBACX,yBAAKA,UAAU,4BAAf,eAGA,kBAAC,GAAD,CACIzJ,MAAOkV,EAAOre,KACd4V,SAAU,SAACgJ,GAAD,OAAO,EAAKH,aAAaG,IACnClI,WAAY,CACR1U,MAAO,OACPyU,UAAW,iB,GAnFNlS,IAAM+E,WCA9BuV,G,kDACjB,WAAYvhB,GAAQ,IAAD,8BACf,cAAMA,IAuBVoa,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,KAzBR,EA4BnBoZ,iBAAmB,SAACC,GAChBrY,QAAQsY,KAAK,mBAAoBD,Gb43BlC,SAASE,EAAQ1X,EAAMwX,EAAQtP,GAClC,IAAKA,EAAc,CACf,IAAIO,EAASzI,EAAKjK,MAAM+R,GACpB6P,EAAY3X,EAAK6F,YAAY,gBACjC7F,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrB4Z,EAAO5Z,EAAMwL,QAAQb,GAAS+O,GAAQ,MACvC,SAAC1Z,GACA4Z,EAAO5Z,EAAMwL,QAAQb,GAASkP,GAAa,GAAG,MAItD3X,EAAKwV,oBAAoB,yBAA0BgC,GACnDxX,EAAK4X,kBAAkB5X,EAAK6F,YAAY,cACxC7F,EAAK6X,aAAa7X,EAAKjK,MAAMkX,OAAOC,cat4BhCwK,CAFa,EAAK3hB,MAAbiK,KAEQwX,IA9Bb,EAAKxf,MAAQ,CACT0X,MAAM,GAHK,E,gEAQf7N,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGnDpF,EAAWC,EAAWC,GAIxC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BAcD,IAAD,OAEDuH,EADS7V,KAAK9L,MAAbiK,KACa6F,YAAY,0BAC9B,OACI,oCACI,kBAAC,GAAD,CAAgBoK,MAAM,SAAS5B,SAAU,SAACqB,GACtC,EAAK1R,SAAS,CAAC0R,YAIf7N,KAAK7J,MAAM0X,MACX,yBAAKrE,UAAU,uBACX,yBAAKA,UAAU,yBACX,0BAAMA,UAAU,6BAAhB,UAGA,kBAAC,EAAD,CACI8C,IAAK,EACLC,IAAK,IACLxM,MAAO8V,GAAU,EACjBrJ,SAAU,SAACzM,GACP,EAAK2V,iBAAiB3V,IAE1BnK,MAAO,CAAC,QACR2X,KAAM,OACND,WAAY,CACR1U,MAAO,GACPwZ,SAAU,IAEd3E,gBAAiB,CACb2E,SAAU,IAEd1E,aAAW,W,GApEMvS,IAAM+E,WCOlC+V,G,kDACjB,WAAa/hB,GAAQ,IAAD,8BAChB,cAAMA,IAGVgiB,kBAAoB,aAJA,EAQpBC,QAAU,WACN,IAAIC,EAAgB,EAAKC,gBAAkB,EAAKA,iBAC5CC,EAAkBF,EAAc/hB,OAEpC,GADA+hB,EAAgB9c,EAAW8c,EAAeniB,EAAY,EAAKC,MAAM8W,OAC7DsL,EAAiB,CACjB,IAAIC,EAAaH,EAAc/hB,OAC/B+hB,EAAc/hB,OAASiF,EAAWgd,EAAiBC,GAGvD,OAAOH,GAjBS,EAoBpBI,OAAS,WACL,OAAO,EAAKtiB,MAAMuiB,OAAOhZ,SArBT,EAwBpBiZ,eAAiB,SAACC,EAAW5W,GACzBzC,QAAQC,IAAI,iBAAkBoZ,EAAW5W,GACzC4T,GAAoBgD,EAAW5W,EAAO,EAAKyW,UAAU,OAAMvhB,GAAW,GACtE,EAAK2hB,aAAaC,GAAuB,EAAKL,YA3B9B,EA8BpBM,aAAe,WACX,OAAI,EAAKC,qBACE,EAAKA,uBAEZ,oCACI,kBAAC,EAAD,CACI5Y,KAAM,EAAKqY,WAEf,kBAAC,EAAD,CACIrY,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,SACX7G,WAAY,CAAC,OAAQ,IAAK,KAAM,KAAM,MACtCE,YAAa,CAAC,OAAQ,IAAK,KAAM,KAAM,MACvCG,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,QACvCG,eAAgB,CAAC,IAAK,KAAM,KAAM,KAAM,QACxCC,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,QACvCC,eAAgB,CAAC,IAAK,KAAM,KAAM,KAAM,UAE5C,kBAAC,GAAD,CACIlS,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,aAlEP,E,UADkBrb,IAAM+E,WCT3B8W,I,mNASjBtN,QAAU,SAAC7G,GAAO,IACToU,EAAQ,EAAK/iB,MAAb+iB,KACL,EAAK/iB,MAAMkX,OAAO8L,WAA4B,oBAATD,EAAuBA,EAAKpU,GAAKoU,I,kEATtEjX,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BASf,OACI,kBAAC,EAAD,CACIqL,QAAS1J,KAAK0J,SAGV1J,KAAK9L,MAAMsW,KAGXxK,KAAK9L,MAAM+L,c,GAvBS9E,IAAM+E,Y,qBCCzBiX,I,6KACN,IAAD,OACN,OACI,yBACI3N,UAAU,sBAEV,kBAAC,IAAD,CACI4N,eAAgBpX,KAAK9L,MAAMmjB,aAC3B3N,QAAS,SAAC7G,GACN,EAAK3O,MAAMmjB,cACX,EAAKnjB,MAAMmjB,aAAaxU,EAAG,EAAK3O,MAAMka,MAAO,EAAKla,MAAMiN,SAG5D,8BACKnB,KAAK9L,MAAMka,a,GAdYjT,IAAM+E,Y,mBCQvCoX,GATM9G,cAAW,SAAAC,GAAK,MAAK,CACtC8G,QAAS,CACLzG,gBAAiB,OACjBnD,MAAO,UACPqD,UAAWP,EAAM+G,QAAQ,GACzBpF,SAAU,OALG5B,CAOjBiH,MAISC,GAAmBlH,cAAW,SAAAC,GAAK,MAAK,CACjD8G,QAAS,CACLzG,gBAAiB,OACjBnD,MAAO,UACPqD,UAAW,yGACXoB,SAAU,GACV9H,QAAS,MANekG,CAQ5BiH,MCfiBE,G,kDACjB,WAAYzjB,GAAQ,IAAD,8BACf,cAAMA,IAMV0jB,MAAQ,WACJ,EAAK1jB,MAAMkX,OAAO8L,cARH,EAWnBG,aAAe,SAACxU,EAAG8G,EAAKkO,GACpB,EAAK1b,SAAS,CAAC0b,qBAZA,EAenBC,cAAgB,SAACC,GACb,MAAO,CACHljB,EAAGwX,KAAKC,IAAIyL,EAAgBljB,EAAGrB,OAAOuP,YAAc,KACpDnO,EAAGyX,KAAKC,IAAIyL,EAAgBnjB,EAAGpB,OAAOiJ,WAAa,OAhBvD,EAAKtG,MAAQ,CACT0hB,gBAAiB3jB,EAAM8jB,gBAHZ,E,qDAsBT,IAAD,OACL,OACI,kBAAC,KAAD,CACIC,OAAO,uBACPC,OAAO,SACPH,gBAAiB/X,KAAK8X,cAAc9X,KAAK9L,MAAM6jB,kBAE/C,yBACIvO,UAAU,eACVtP,MAAO8F,KAAK9L,MAAMikB,OAAOzH,MAGzB,yBACIlH,UAAU,2BAEV,0BAAMA,UAAU,uBACXxJ,KAAK9L,MAAMkkB,WAAa,cAG7B,kBAAC,EAAD,CACI1O,QAAS1J,KAAK4X,OAEd,yBACIthB,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,QAMzB,yBACItB,UAAU,yBAEV,yBAAKA,UAAU,qBAEPxJ,KAAK9L,MAAMiN,MAAM5C,KAAI,SAAC8Z,EAAWrhB,GAC7B,OACI,kBAAC,GAAD,CACI2S,IAAK3S,EACLoX,MAAOiK,EAAU1O,IACjB2O,YAAa,CACTpe,MAAO,CACH+D,OAAQ,kBAGhBsa,UAAU,SAEV,yBACI5O,IAAK3S,EACLkD,MAAO,CACH4W,gBAAiB,EAAK3a,MAAM0hB,kBAAoB7gB,GAC5C,8BAGR,kBAAC,EAAD,CACI2S,IAAK0O,EAAU1O,IACfD,QAAS,SAAC7G,GACN,EAAKwU,aAAaxU,EAAGwV,EAAU1O,IAAK3S,IAExCiT,gBAAiB,CACbH,WAAY,IAGfuO,EAAU7N,YAQvC,yBAAKhB,UAAU,4BAEwBvU,IAA/B+K,KAAK7J,MAAM0hB,iBACX,kBAAC,GAAD,CACI1W,MAAOnB,KAAK7J,MAAM0hB,gBAClBlO,IAAK3J,KAAK9L,MAAM0e,QAAQ5S,KAAK7J,MAAM0hB,iBAAiBlO,IACpDyE,MAAOpO,KAAK9L,MAAM0e,QAAQ5S,KAAK7J,MAAM0hB,iBAAiBlO,WAI3B1U,IAA/B+K,KAAK7J,MAAM0hB,iBACX7X,KAAK9L,MAAM0e,QAAQ5S,KAAK7J,MAAM0hB,iBAAiBW,YAGhBvjB,IAA/B+K,KAAK7J,MAAM0hB,iBACX7X,KAAK9L,MAAM0e,QAAQrU,KAAI,SAAC+T,EAAQtb,GAC5B,OACI,kBAAC,GAAD,CACImK,MAAOnK,EACP2S,IAAK2I,EAAO3I,IACZyE,MAAOkE,EAAO3I,IACd0N,aAAc,EAAKA,0B,GArHzBlc,IAAM+E,WAkI5CyX,GAASrH,aAAe,CACpB6H,OAAQ,I,oBCvISM,G,uKAEb,OACI,kBAAC,KAAD,iBACQzY,KAAK9L,MADb,CAEIoY,IAAKtM,KAAK9L,MAAMoY,IAChBC,IAAKvM,KAAK9L,MAAMqY,IAChBmM,KAAM1Y,KAAK9L,MAAMwkB,KACjB3Y,MAAOC,KAAK9L,MAAM6L,MAClByM,SAAUxM,KAAK9L,MAAMsY,gB,GATDrR,IAAM+E,WCCrByY,G,4MACjBnM,SAAW,SAACzM,GACR,EAAK7L,MAAMwiB,gBACX,EAAKxiB,MAAMwiB,eAAe,EAAKxiB,MAAMyiB,UAAW5W,GAEhD,EAAK7L,MAAMsY,UACX,EAAKtY,MAAMsY,SAASzM,I,uDAIpB,OACI,oCACI,kBAAC,GAAD,CACIyJ,UAAU,oBACVtP,MAAO,CAAEyR,YAAa,IACtBW,IAAKtM,KAAK9L,MAAMoY,IAChBC,IAAKvM,KAAK9L,MAAMqY,IAChBxM,MAAOC,KAAK9L,MAAM6L,MAClByM,SAAUxM,KAAKwM,SACfoM,YAAa,CACT9O,WAAY,KAIpB,kBAAC,GAAD,CACIN,UAAU,mBACV8C,IAAKtM,KAAK9L,MAAMoY,IAChBC,IAAKvM,KAAK9L,MAAMqY,IAChBxM,MAAOC,KAAK9L,MAAM6L,MAClByM,SAAUxM,KAAKwM,gB,GA7BgBrR,IAAM+E,WCFpC2Y,I,+DACjB,WAAY3kB,GAAQ,IAAD,8BACf,cAAMA,IAQV4kB,QAAU,SAACjW,GACP,IAAK,EAAK1M,MAAM4iB,SAAU,CAAC,IAClBC,EAAY,EAAK9kB,MAAjB8kB,SACL,EAAK7c,SAAS,CACV0O,IAAKmO,EACLD,UAAU,MAXlB,EAAK5iB,MAAQ,CACT0U,IAAK3W,EAAM2W,IACXkO,UAAU,GALC,E,qDAoBf,OACI,yCACQ/Y,KAAK9L,MADb,CAEI4kB,QAAS9Y,KAAK8Y,QACdjO,IAAK7K,KAAK7J,MAAM0U,KAAO7K,KAAK9L,MAAM8kB,gB,GAzBf7d,IAAM+E,YC0C1B+Y,G,4MAjCXC,YACsB,qBAAX1lB,SACPA,OAAOgF,WACPhF,OAAOgF,SAASE,e,qEATZsH,KAAKmZ,aACL3gB,SAASS,KAAKI,YAAY2G,KAAKmZ,aAEnCnZ,KAAKmZ,YAAc,O,+BAUnB,IAAKnZ,KAAKkZ,UACN,OAAO,KAEX,IAAIE,EAAOpZ,KAAK9L,MAAMklB,KACtB,OAAIpZ,KAAK9L,MAAMgW,SACJlK,KAAK9L,MAAM+L,UAElBD,KAAK9L,MAAMmlB,SACXD,EAAO5gB,UAAYA,SAAS8gB,eAAetZ,KAAK9L,MAAMmlB,SAErDD,GAASpZ,KAAKmZ,cACfnZ,KAAKmZ,YAAc3gB,SAASE,cAAc,OAC1CF,SAASS,KAAKC,YAAY8G,KAAKmZ,cAE5BI,IAASC,aACZxZ,KAAK9L,MAAM+L,SACXmZ,GAAQpZ,KAAKmZ,kB,GA/BJhe,IAAM+E,W,yCCGNuZ,G,4MACjBC,iBAAmB,SAAC/L,GAChB,EAAKzZ,MAAMwlB,iBAAiB/L,EAAMgM,M,uDAIlC,OACI,kBAAC,GAAD,CAAQP,KAAM5gB,SAASS,MACnB,yBAAKiB,MAAQ,CACTpB,SAAU,QACVvD,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRH,KAAM,MACN2I,OAAQ,cACTyL,QAAU1J,KAAK9L,MAAM4Z,UACxB,yBAAK5T,MAAO,CACRpB,SAAU,WACVxD,KAAM,MACNC,IAAK,MACLqb,UAAW,wBACX3S,OAAQ,eAER,kBAAC,KAAD,CACI0P,MAAO3N,KAAK9L,MAAMyZ,MAClB+L,iBAAmB1Z,KAAK0Z,iBACxBE,aAAc5Z,KAAK9L,MAAM0lB,aACzBhhB,MAAOoH,KAAK9L,MAAM0E,OAAS,Y,GA3BPuC,IAAM+E,WCK5C2Z,GAAY,CACd,IAAI,IAAI,IAAI,IAAI,KAGCC,G,kDAGjB,WAAY5lB,GAAQ,IAAD,8BACf,cAAMA,IAcV4jB,cAAgB,SAACC,GACb,MAAO,CACHljB,EAAGwX,KAAKC,IAAIyL,EAAgBljB,EAAGrB,OAAOuP,YAAc,KACpDnO,EAAGyX,KAAKC,IAAIyL,EAAgBnjB,EAAGpB,OAAOiJ,WAAa,OAlBxC,EAsBnBsd,cAAgB,SAACpM,GACb,EAAKxR,SAAS,CAACwR,UACf,EAAKzZ,MAAMwlB,kBAAoB,EAAKxlB,MAAMwlB,iBAAiB/L,IAxB5C,EA2BnBqM,WAAa,SAACrM,GACV,IAAI5Q,EAAW,EAAKmG,QAAQnG,SACvBA,EAASkd,SAASnZ,MAAK,SAAA6H,GAAC,OAAIA,IAAMgF,MACnC5Q,EAASkd,SAASC,QAAQvM,GAE9B5Q,EAASkd,SAAWld,EAASkd,SAAS9V,MAAM,EAAG,IAE/C,EAAK4V,cAAcpM,GACnB,EAAKzK,QAAQ7G,UAnCE,EAsCnB8d,gBAAkB,WACd,EAAKhe,SAAS,CAACie,UAAU,KArCzB,EAAKjkB,MAAQ,CACTwX,MAAOzZ,EAAMyZ,OAHF,E,gEAQf3N,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BA8BT,IAAD,OACA7C,EAAUwE,KAAKkD,QAAf1H,OACDuB,EAAWiD,KAAKkD,QAAQnG,SACxBsd,EAA0Btd,EAAS0T,MAAM6J,OAAOC,MACpD,OACI,kBAAC,GAAD,CAAQnB,KAAM5gB,SAASS,MACnB,yBAAKiB,MAAO,CACRpB,SAAU,QACVvD,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRH,KAAM,MACN2I,OAAQ,kBAER,yBAAK/D,MAAO,CACRpB,SAAU,WACVvD,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRH,KAAM,OACPoU,QAAU,SAAC7G,GAAD,OAAO,EAAK3O,MAAM4Z,SAAW,EAAK5Z,MAAM4Z,aAErD,kBAAC,KAAD,CACImK,OAAO,+BACPC,OAAO,SACPH,gBAAiB/X,KAAK8X,cAAc9X,KAAK9L,MAAM6jB,kBAE/C,yBAAKvO,UAAU,uBACVtP,MAAO,CACH+D,OAAQ,OAEb,yBAAKuL,UAAU,8BACX,yBAAKA,UAAU,+BAAf,gBAIA,kBAAC,EAAD,CACIE,QAAS,SAAC7G,GAAD,OAAO,EAAK3O,MAAM4Z,SAAW,EAAK5Z,MAAM4Z,WACjDtE,UAAU,+BAEV,yBACIlT,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,QAKzB,yBAAKtB,UAAU,kCAAf,cAEI,yBAAKA,UAAU,iCAAf,SAKJ,yBAAKA,UAAU,iCAEPqQ,GAAUtb,KAAI,SAAAoL,GACV,OACIxS,OAAOuR,OAAO2R,GAAyB9b,KAAI,SAAAJ,GAExC,OADCb,QAAQC,IAAI,mBAAoB,EAAKpH,MAAMwX,MAAO6M,GAAW,EAAKrkB,MAAMwX,WAAO1Y,EAAWuG,IAEvF,yBACImO,IAAKxL,EAAKvH,KAAO+S,EACjBH,UAAS,wCACLgR,GAAW,EAAKrkB,MAAMwX,WAAO1Y,EAAWuG,KACxCA,EAAOif,gBAAgBhd,QAAQid,SAASvc,EAAKvH,KAAM+S,GAC/C,wCAAyC,IAEjDzP,MAAO,CACH4W,gBACItV,EAAOif,gBAAgBhd,QAAQid,SAASvc,EAAKvH,KAAM+S,IAE3DD,QAAS,SAAC7G,GACN,EAAKkX,cACD,CACIY,YAAaxc,EAAKvH,KAClB+S,IAAKA,cAc5C,yBAAKH,UAAU,kCAAf,aAIA,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,iCAAiCE,QAAS1J,KAAKma,iBAC1D,kBAAC,GAAD,CACIvhB,MAAO,GACPC,OAAQ,GACRgS,IAAK,yBAKT1T,OAAOuR,OAAO3L,EAASkd,UAAU1b,KAAI,SAAAoP,GACjC,OACI,yBAAKnE,UAAS,sCACN,EAAKrT,MAAMwX,QAAUA,EACjB,sCAAuC,IAE9ChE,IAAKgE,EACLzT,MAAO,CACR4W,gBAAiBnD,GAEhBjE,QAAS,SAAC7G,GACN,EAAKkX,cACDpM,UAW7B,yBAAKnE,UAAU,kCACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,uCAAuCE,QAAS1J,KAAKma,iBAApE,cAKJ,yBAAK3Q,UAAU,gCACVoR,KAAOJ,GAAWxa,KAAK7J,MAAMwX,MAAO,EAAGnS,IAASme,UAkC7D3Z,KAAK7J,MAAMikB,UACX,kBAAC,GAAD,CACItM,QAAS,kBAAM,EAAK3R,SAAS,CAACie,cAAUnlB,KACxC0Y,MAAO3N,KAAK7J,MAAMwX,MAClB+L,iBAAmB1Z,KAAKga,WACxBJ,aAAc5Z,KAAK9L,MAAM0lB,aACzBhhB,MAAO,Y,GA9NWuC,IAAM+E,WAA/B4Z,GACVe,YAAc3f,E,ICTJ4f,G,kDACjB,WAAa5mB,GAAQ,IAAD,8BAChB,cAAMA,IAOV6mB,QAAU,SAAChb,GACP,GAAKA,EAAL,CAGIA,aAAiB5I,SACjB4I,EAAQ,EAAK7L,MAAMsH,OAAOif,gBAAgBhd,QAAQid,SAAS3a,EAAM4a,YAAa5a,EAAM4J,MAGxF,IAAIgE,EAAQiN,KAAO7a,GACnB,MAAO,CACHib,EAAGrN,EAAMsN,OAAO,GAChBnhB,EAAG6T,EAAMsN,OAAO,GAChBla,EAAG4M,EAAMsN,OAAO,GAChBhW,EAAG0I,EAAMsN,OAAO,MArBJ,EAyBpBC,YAAc,SAACrY,GACP,EAAK1M,MAAMglB,mBACX,EAAKhf,SAAS,CAAEgf,oBAAoB,IAEpC,EAAKhf,SAAS,CAAEgf,mBAAoBtY,EAAE4J,UA7B1B,EAgCpB2O,YAAc,WACV,EAAKjf,SAAS,CAAEgf,oBAAoB,KAjCpB,EAoCpBE,qBAAuB,SAAC1N,GACpB,GAAIA,aAAiBxW,OAOjB,OANAmG,QAAQC,IAAI,sCAAuC,EAAK+d,UAAWd,GAAW,EAAKc,UAAW,EAAKA,UAAUC,MAAO,EAAKrnB,MAAMsH,SAC/HmS,EAAM4N,MAAQX,KAAOJ,GAAW,EAAKc,UAAW,EAAKA,UAAUC,MAAO,EAAKrnB,MAAMsH,SAAS+f,QAC1Fje,QAAQC,IAAI,6BAA8BoQ,EAAM4N,OAChD,EAAKD,UAAY3N,OAEjB,EAAKzZ,MAAMwiB,eAAe,EAAKxiB,MAAMyiB,UAAWhJ,GAIpDrQ,QAAQC,IAAI,uBAAwB,EAAKie,mBAAmBD,OAC5D,IAAIA,EAAQ,EAAKC,mBAAmBD,OAAS,IAEzCxb,EAAQ,EAAKub,UAAYV,KAAOjN,GAAO4N,MAAMA,EAAQ,KAAK5iB,MAE9D,EAAKzE,MAAMwiB,eAAe,EAAKxiB,MAAMyiB,UAAW5W,IApDhC,EAuDpByb,iBAAmB,WACfle,QAAQC,IAAI,mBACR,EAAKrJ,MAAMyZ,MAAO6M,GAAW,EAAKtmB,MAAMyZ,MAAO,EAAG,EAAKzZ,MAAMsH,QAASgf,GAAW,EAAKtmB,MAAMyZ,MAAO,EAAKzZ,MAAMyZ,OAAS,EAAKzZ,MAAMyZ,MAAM4N,MAAO,EAAKrnB,MAAMsH,SAE9J,IAAI2H,EAAS,CACTwK,MAAOiN,KAAOJ,GAAW,EAAKtmB,MAAMyZ,MAAO,EAAG,EAAKzZ,MAAMsH,SAAS+f,MAAM,GAAG5B,MAC3E4B,MAAqH,IAA9GX,KAAOJ,GAAW,EAAKtmB,MAAMyZ,MAAO,EAAKzZ,MAAMyZ,OAAS,EAAKzZ,MAAMyZ,MAAM4N,MAAO,EAAKrnB,MAAMsH,SAAS+f,SAI/G,OADAje,QAAQC,IAAI,0BAA2B4F,GAChCA,GAjES,EAoEpBsY,kBAAoB,SAACF,GACb,EAAKD,qBAAqBnkB,OAC1B,EAAKmkB,UAAUC,MAAQA,EAAQ,KAE/Bje,QAAQC,IAAI,oBAAqBge,GACjC,EAAKD,UAAYV,KAAO,EAAKU,WAAWC,MAAMA,EAAQ,KAAK5iB,OAE/D,EAAKzE,MAAMwiB,eAAe,EAAKxiB,MAAMyiB,UAAW,EAAK2E,YAxErD,EAAKnlB,MAAQ,GAEb,EAAKmlB,UAAYpnB,EAAMyZ,OAAS,gBALhB,E,qDA8ET,IAAD,EACe3N,KAAKwb,mBAArB7N,EADC,EACDA,MAAO4N,EADN,EACMA,MAEZ,OADAje,QAAQC,IAAI,cAAeoQ,EAAO4N,GAE1B,yBAAK/R,UAAU,kCACX,kBAAC,IAAD,CACItP,MAAO,CACHwhB,WAAW,wCAEflS,UAAU,iBACVE,QAAU1J,KAAKkb,aAEf,yBACIhhB,MAAO,CACHwhB,WAAYlB,GAAWxa,KAAK9L,MAAMyZ,MAAO4N,EAAM,IAAKvb,KAAK9L,MAAMsH,YAK3E,yBACIgO,UAAU,oBAEV,kBAAC,GAAD,CACI8C,IAAK,EACLC,IAAK,IACLxM,MAAOwb,GAAS,EAChB/O,SAAUxM,KAAKyb,qBAInBzb,KAAK7J,MAAMglB,oBACP,kBAAC,GAAD,CACIxN,MAAOA,EACPG,QAAS9N,KAAKob,YACd1B,iBAAmB1Z,KAAKqb,qBACxBzB,cAAY,EACZpe,OAAQwE,KAAK9L,MAAMsH,OACnBuc,gBACI/X,KAAK7J,MAAMglB,mBAAmBQ,+B,GArHzBxgB,IAAM+E,WCJ1B0b,G,uKAEb,OACI,yBAAKpS,UAAU,qBACX,uBAAGA,UAAU,0BAAb,cAEA,kBAAC,GAAD,CACImE,MAAO3N,KAAK9L,MAAMyZ,MAClBgJ,UAAW3W,KAAK9L,MAAMyiB,UACtBD,eAAgB1W,KAAK9L,MAAMwiB,eAC3Blb,OAAQwE,KAAK9L,MAAMsH,c,GAVCL,IAAM+E,WCDzB2b,I,qLAEb,OACI,yBAAKrS,UAAU,UAAUtP,MAAO8F,KAAK9L,MAAMgG,Y,GAHlBiB,IAAM+E,YCEtB4b,G,kDACjB,WAAY5nB,GAAQ,IAAD,8BACf,cAAMA,IAMVsY,SAAW,SAACzM,GACR,EAAK7L,MAAMwiB,gBACX,EAAKxiB,MAAMwiB,eAAe,EAAKxiB,MAAMyiB,UAAW5W,GAEhD,EAAK7L,MAAMsY,UACX,EAAKtY,MAAMsY,SAASzM,IATpB,EAAK5J,MAAQ,GAHE,E,qDAgBf,OACI,oCACI,kBAAC,GAAD,CACIqT,UAAU,oBACVtP,MAAO,CAAEyR,YAAa,IACtB+M,KAAM1Y,KAAK9L,MAAMwkB,KACjBpM,IAAKtM,KAAK9L,MAAMoY,IAChBC,IAAKvM,KAAK9L,MAAMqY,IAChBxM,MAAOC,KAAK9L,MAAM6L,OAAS,EAC3ByM,SAAUxM,KAAKwM,SACfoM,YAAa,CACT9O,WAAY,KAIpB,kBAAC,GAAD,CACIN,UAAU,mBACV8C,IAAKtM,KAAK9L,MAAMoY,IAChBC,IAAKvM,KAAK9L,MAAMqY,IAChBxM,MAAOC,KAAK9L,MAAM6L,OAAS,EAC3ByM,SAAUxM,KAAKwM,gB,GArCMrR,IAAM+E,WCG1B6b,G,uKAEb,OACI,oCACI,yBAAKvS,UAAU,qBACX,uBAAGA,UAAU,0BAAb,mBAEA,kBAAC,GAAD,CACImE,MAAO3N,KAAK9L,MAAM8nB,OAAOrO,MACzBgJ,UAAS,UAAK3W,KAAK9L,MAAMyiB,UAAhB,UACTD,eAAgB1W,KAAK9L,MAAMwiB,eAC3Blb,OAAQwE,KAAK9L,MAAMsH,UAI3B,kBAAC,GAAD,MAEA,yBAAKgO,UAAU,qBACX,uBAAGA,UAAU,0BAAb,cAEA,yBACIA,UAAU,eAEV,kBAAC,GAAD,CACIA,UAAU,oBACV8C,IAAK,EACLC,IAAK,GACLxM,MAAOC,KAAK9L,MAAM8nB,OAAOpjB,MACzB+d,UAAS,UAAK3W,KAAK9L,MAAMyiB,UAAhB,UACTD,eAAgB1W,KAAK9L,MAAMwiB,wB,GA7BnBvb,IAAM+E,WCFrB+b,G,kDACjB,WAAY/nB,GAAQ,IAAD,8BACf,cAAMA,IAQVsY,SAAW,SAACzM,EAAOuR,GACf,IAAI4K,EAAS,EAAK/lB,MAAM+lB,OACpBC,EAAa,CAAC7K,GACd,EAAKnb,MAAMimB,OACXD,EAAa,CAAC,UAAW,WAAY,aAAc,gBACvDA,EAAW3b,SAAQ,SAAA6b,GACfH,EAAOG,GAAStc,EAChB,EAAK7L,MAAMwiB,eAAX,UAA6B,EAAKxiB,MAAMyiB,UAAxC,YAAqD0F,GAAStc,MAElE,EAAK5D,SAAS,CAAC+f,YAlBA,EAqBnBI,YAAc,WACV,EAAKngB,SAAS,CAACigB,MAAO,EAAKjmB,MAAMimB,QAnBjC,EAAKjmB,MAAQ,CACT+lB,OAAQjoB,EAAYC,EAAMgoB,QAC1BE,MAAM,GALK,E,qDAyBR,IAAD,OACN,OACI,yBAAK5S,UAAU,qBACX,uBAAGA,UAAU,0BAAb,eAEA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,mBACX,kBAAC,GAAD,CACI8C,IAAK,EACLC,IAAK,IACLxM,MAAOC,KAAK7J,MAAM+lB,OAAX,QACP1P,SAAU,SAACgJ,GAAD,OAAO,EAAKhJ,SAASgJ,EAAG,eAG1C,yBAAKhM,UAAU,kBAAkBtP,MAAO,CAACqiB,UAAW,QAChD,kBAAC,GAAD,CACIjQ,IAAK,EACLC,IAAK,IACLxM,MAAOC,KAAK7J,MAAM+lB,OAAX,SACP1P,SAAU,SAACgJ,GAAD,OAAO,EAAKhJ,SAASgJ,EAAG,iBAK9C,yBAAKtb,MAAO,CAACpB,SAAU,aACnB,yBAAK0Q,UAAU,cACX,yBAAKA,UAAU,wBACVtP,MAAO,CACHsiB,oBAAqBxc,KAAK7J,MAAM+lB,OAAX,WAG9B,yBAAK1S,UAAU,yBACVtP,MAAO,CACHuiB,qBAAsBzc,KAAK7J,MAAM+lB,OAAX,aAKnC,yBAAK1S,UAAU,cACX,yBAAKA,UAAU,2BACVtP,MAAO,CACHwiB,uBAAwB1c,KAAK7J,MAAM+lB,OAAX,cAGjC,yBAAK1S,UAAU,4BACVtP,MAAO,CACHyiB,wBAAyB3c,KAAK7J,MAAM+lB,OAAX,gBAKtC,yBAAK1S,UAAU,eACX,kBAAC,EAAD,CACIS,gBAAiB,CACbH,WAAY,GAEhBJ,QAAS1J,KAAKsc,aAGVtc,KAAK7J,MAAMimB,MACX,yBAAK9lB,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAKC,EAAQ,QAGjB9K,KAAK7J,MAAMimB,MACZ,yBAAK9lB,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAKC,EAAQ,UAMlC,yBAAKtB,UAAU,cACX,yBAAKA,UAAU,mBACX,kBAAC,GAAD,CACI8C,IAAK,EACLC,IAAK,IACLxM,MAAOC,KAAK7J,MAAM+lB,OAAX,WACP1P,SAAU,SAACgJ,GAAD,OAAO,EAAKhJ,SAASgJ,EAAG,kBAG1C,yBAAKhM,UAAU,kBAAkBtP,MAAO,CAACqiB,UAAW,QAChD,kBAAC,GAAD,CACIjQ,IAAK,EACLC,IAAK,IACLxM,MAAOC,KAAK7J,MAAM+lB,OAAX,YACP1P,SAAU,SAACgJ,GAAD,OAAO,EAAKhJ,SAASgJ,EAAG,yB,GAhHzBra,IAAM+E,WCHtB0c,G,kDACjB,WAAY1oB,GAAQ,IAAD,8BACf,cAAMA,IAIV2oB,YAAc,SAACha,GACX,EAAKia,KAAO,EAAKC,WAAWtf,QAAQke,wBACpCnoB,OAAO0R,iBAAiB,cAAe,EAAK8X,aAC5CxpB,OAAO0R,iBAAiB,YAAa,EAAK+X,WAE1C,IAAIroB,EAAIiO,EAAEqa,QACNroB,EAAIgO,EAAEsa,QAENC,EAAKxoB,GAAK,EAAKkoB,KAAKxnB,KAAO,EAAKwnB,KAAKlkB,MAAQ,GAC7CykB,EAAKxoB,GAAK,EAAKioB,KAAKvnB,IAAM,EAAKunB,KAAKjkB,OAAS,GAE7CykB,EAA+B,KAArBjR,KAAKkR,MAAMH,EAAIC,GAAYhR,KAAKmR,GAC1CF,EAAQ,IACRA,GAAgB,KAEpB,EAAKppB,MAAMsY,SAAS8Q,IApBL,EAuBnBN,YAAc,SAACna,GACX,IAAIjO,EAAIiO,EAAEqa,QACNroB,EAAIgO,EAAEsa,QAENC,EAAKxoB,GAAK,EAAKkoB,KAAKxnB,KAAO,EAAKwnB,KAAKlkB,MAAQ,GAC7CykB,EAAKxoB,GAAK,EAAKioB,KAAKvnB,IAAM,EAAKunB,KAAKjkB,OAAS,GAE7CykB,EAA+B,KAArBjR,KAAKkR,MAAMH,EAAIC,GAAYhR,KAAKmR,GAC1CF,EAAQ,IACRA,GAAgB,KAEpB,EAAKppB,MAAMsY,SAAS8Q,IAlCL,EAqCnBL,UAAY,SAACpa,GACTrP,OAAO2R,oBAAoB,cAAe,EAAK6X,aAC/CxpB,OAAO2R,oBAAoB,YAAa,EAAK8X,YArC7C,EAAKF,WAAa5hB,IAAM+R,YAFT,E,qDA2Cf,OACI,yBACI1D,UAAS,6BAAwBxJ,KAAK9L,MAAMsV,WAC5CtP,MAAO,CACH0W,UAAU,UAAD,OAAY5Q,KAAK9L,MAAM6L,MAAvB,SAEb8c,YAAa7c,KAAK6c,YAClBrP,IAAKxN,KAAK+c,YAEV,yBACIvT,UAAU,mBACVtP,MAAO,CACHtB,MAAOoH,KAAK9L,MAAM0E,OAAS,GAC3BC,OAAQmH,KAAK9L,MAAM0E,OAAS,KAGhC,yBACI4Q,UAAU,uBAEd,yBACIA,UAAU,yBAEd,yBACIA,UAAU,6B,GAnEUrO,IAAM+E,WCE7Bud,G,4MACjBjR,SAAW,SAACzM,GACJ,EAAK7L,MAAMwpB,MAAkB,MAAV3d,IACnBA,EAAQ,GAEZ,EAAK7L,MAAMsY,SAASzM,EAAMiT,QAAQ,K,uDAIlC,OACI,yBAAKxJ,UAAU,aACX,kBAAC,GAAD,iBACQxJ,KAAK9L,MADb,CAEIsV,UAAU,cACVzJ,MAAOC,KAAK9L,MAAMopB,MAClB9Q,SAAUxM,KAAKwM,SACfF,IAAK,EACLC,IAAK,OAGT,kBAAC,GAAD,CACI/C,UAAU,aACV8C,IAAK,EACLC,IAAK,IACLxM,MAAOC,KAAK9L,MAAMopB,MAClB9Q,SAAUxM,KAAKwM,gB,GAzBArR,IAAM+E,WCGnCyd,GAAUtR,KAAKmR,GAAG,IAClBI,GAAU,IAAIvR,KAAKmR,GACJK,G,kDACjB,WAAY3pB,GAAQ,IAAD,8BACf,cAAMA,IAMVsY,SAAW,SAAC7C,EAAK5J,GACb,IAAI+d,EAAS,EAAK5pB,MAAM4pB,OACxBA,EAAOnU,GAAO5J,EACd,EAAK5D,SAAS,CAAC2hB,WACf,EAAK5pB,MAAMwiB,eAAX,UAA6B,EAAKxiB,MAAMyiB,UAAxC,YAAqDhN,GAAO5J,IAX7C,EAcnBge,UAAY,SAACC,EAASC,QACFhpB,IAAZ+oB,IAAuBA,GAAW,QACtB/oB,IAAZgpB,IAAuBA,EAAU,GACrC,IACItI,EADAuI,EAASF,EAAYC,EAWzB,OATID,EAAU,GAAKC,EAAU,IACzBtI,GAAWtJ,KAAK8R,KAAMD,GAAUN,IAChCI,EAAU,GAAKC,EAAU,IACzBtI,GAAWtJ,KAAK8R,KAAMD,GAAUN,GAAU,KAC1CI,EAAU,GAAKC,EAAU,IACzBtI,GAAWtJ,KAAK8R,KAAMD,GAAUN,GAAU,KAC1CI,EAAU,GAAKC,EAAU,IACzBtI,GAAWtJ,KAAK8R,KAAMD,GAAUN,GAAU,KAEvCvR,KAAKU,MAAM4I,IA5BH,EA+BnByI,SAAW,SAACzI,GACR,OAAOtJ,KAAKgS,IAAK1I,EAASgI,KAhCX,EAmCnBW,WAAa,SAAC3I,GACV,IACI4I,EAAIC,EADJN,EAAQ,EAAKE,SAASzI,GAEZ,IAAVuI,GACAK,EAAK,EACLC,EAAK,GACEN,IAAU1O,KACjB+O,EAAK,EACLC,EAAK,IAELD,EAAKL,EACLM,EAAK,EACDnS,KAAKoS,IAAIP,GAAS,IAClBK,GAAMlS,KAAKoS,IAAIP,GACfM,GAAMnS,KAAKoS,IAAIP,KAGvB,EAAK1R,SAAS,UAAYmJ,GAAU,IAAMA,GAAU,GAAOA,GAAU,KAAOA,EAAS,KAC9E4I,EAAKA,GACZ,EAAK/R,SAAS,UAAYmJ,GAAU,IAAMA,GAAU,GAAOA,GAAU,KAAOA,EAAS,IAC/E6I,GAAMA,IApDZ,EAAKroB,MAAQ,GAHE,E,qDA2Df,OACI,oCACI,yBAAKqT,UAAU,qBACX,uBAAGA,UAAU,0BAAb,SAEA,yBAAKA,UAAU,cACX,kBAAC,GAAD,CACIA,UAAU,cACV8T,MAAOtd,KAAK+d,UAAU/d,KAAK9L,MAAM4pB,OAAOE,QAAUhe,KAAK9L,MAAM4pB,OAAOG,SACpEzR,SAAUxM,KAAKse,eAK3B,kBAAC,GAAD,MAEA,yBAAK9U,UAAU,qBACX,uBAAGA,UAAU,0BAAb,iBAEA,yBACIA,UAAU,eAEV,kBAAC,GAAD,CACIA,UAAU,oBACV8C,IAAK,EACLC,IAAK,GACLxM,MAAOC,KAAK9L,MAAM4pB,OAAOY,SACzB/H,UAAS,UAAK3W,KAAK9L,MAAMyiB,UAAhB,aACTD,eAAgB1W,KAAK9L,MAAMwiB,mBAKvC,kBAAC,GAAD,MAEA,yBAAKlN,UAAU,qBACX,uBAAGA,UAAU,0BAAb,aAEA,yBACIA,UAAU,eAEV,kBAAC,GAAD,CACIA,UAAU,oBACV8C,IAAK,EACLC,IAAK,GACLxM,MAAOC,KAAK9L,MAAM4pB,OAAOva,KACzBoT,UAAS,UAAK3W,KAAK9L,MAAMyiB,UAAhB,SACTD,eAAgB1W,KAAK9L,MAAMwiB,mBAKvC,kBAAC,GAAD,MAEA,yBAAKlN,UAAU,qBACX,uBAAGA,UAAU,0BAAb,aAEA,yBACIA,UAAU,eAEV,kBAAC,GAAD,CACIA,UAAU,oBACV8C,IAAK,EACLC,IAAK,GACLxM,MAAOC,KAAK9L,MAAM4pB,OAAOa,KACzBhI,UAAS,UAAK3W,KAAK9L,MAAMyiB,UAAhB,SACTD,eAAgB1W,KAAK9L,MAAMwiB,mBAKvC,kBAAC,GAAD,MAEA,yBAAKlN,UAAU,qBACX,uBAAGA,UAAU,0BAAb,mBAEA,kBAAC,GAAD,CACImE,MAAO3N,KAAK9L,MAAM4pB,OAAOnQ,MACzBgJ,UAAS,UAAK3W,KAAK9L,MAAMyiB,UAAhB,UACTD,eAAgB1W,KAAK9L,MAAMwiB,eAC3Blb,OAAQwE,KAAK9L,MAAMsH,e,GA5IPL,IAAM+E,WCFrB0e,G,4MAkBjBtQ,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,K,EAG3BuiB,SAAW,WACP,MAAO,CACH,CACIlV,IAAK,uBACLa,KAAM,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,4BAEpB,CACIlB,IAAK,SACLa,KAAM,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,6BAEpB,CACIlB,IAAK,SACLa,KAAM,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,6BAEpB,CACIlB,IAAK,SACLa,KAAM,yBAAK5R,MAAM,KAAKC,OAAO,KAAKimB,QAAQ,YAAYtV,UAAU,8BAC5D,0BAAMuV,SAAS,UACTC,EAAE,iJ,EAMxBC,WAAa,WACT,IAAIhd,EAAS4U,GAAuB,EAAK3iB,MAAMiK,MAC/C,MAAO,CACH,CACIwL,IAAK,uBACL6O,OAAQ,kBAAC,GAAD,CACJ7K,MAAO1L,EAAOid,UACdvI,UAAW,mBACXD,eAAgB,EAAKxiB,MAAMwiB,eAC3Blb,OAAQ,EAAKtH,MAAMiK,KAAKjK,MAAMsH,UAGtC,CACImO,IAAK,SACL6O,OAAQ,kBAAC,GAAD,CACJwD,OAAQ/Z,EAAO+Z,OACfrF,UAAW,gBACXD,eAAgB,EAAKxiB,MAAMwiB,eAC3Blb,OAAQ,EAAKtH,MAAMiK,KAAKjK,MAAMsH,UAGtC,CACImO,IAAK,SACL6O,OAAQ,kBAAC,GAAD,CACJ0D,OAAQja,EAAO+Z,OAAOE,OACtBvF,UAAW,uBACXD,eAAgB,EAAKxiB,MAAMwiB,kBAGnC,CACI/M,IAAK,SACL6O,OAAQ,kBAAC,GAAD,CACJsF,OAAQ7b,EAAO+Z,OAAO8B,OACtBnH,UAAW,uBACXD,eAAgB,EAAKxiB,MAAMwiB,eAC3Blb,OAAQ,EAAKtH,MAAMiK,KAAKjK,MAAMsH,Y,kEAlF1CwE,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGlDpF,EAAWC,EAAWC,GAIzC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BA4EP,OACI,kBAAC,GAAD,eACI8J,UAAU,cACNpY,KAAK9L,MAFb,CAGIiN,MAAOnB,KAAK6e,WACZjM,QAAS5S,KAAKif,aACd9gB,KAAM6B,KAAK9L,MAAMiK,Y,GAjGShD,IAAM+E,WCJ3Bif,I,8KAEb,IAAIhS,EAAUC,IACV,iBACApN,KAAK9L,MAAMsV,WAEf,OACI,yBAAKA,UAAW2D,GACXnN,KAAK9L,MAAM+L,c,GARY9E,IAAM+E,YCEzBkf,G,4MACjBC,kBAAoB,SAACzoB,GACjB,EAAK1C,MAAMwiB,eAAe,EAAKxiB,MAAMyiB,UAAW/f,GAChDpD,OAAOwgB,uBAAsB,WACzB,EAAK9f,MAAMiK,KAAKmhB,oB,uDAIb,IAAD,SAC+Btf,KAAK9L,MAArCqrB,EADC,EACDA,kBAAmBC,EADlB,EACkBA,UACpBC,EAAcrS,IACd,4BACEoS,IAAcA,EAAU5oB,OAAS,mCAEvC,OACI,yBAAK4S,UAAU,qBAEX,kBAAC,GAAD,KACI,kBAAC,IAAD,CACIA,UAAWiW,EACX9V,IAAI,OACJD,QAAS,SAAC7G,GAAD,OAAO,EAAKwc,sBAErB,yBACI7V,UAAU,+BACVlT,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GAErCgS,IAAG,qCAEP,uCAKA0U,EAAkBhhB,KAAI,SAAA3H,GAClB,IAAIuW,EAAUC,IACV,0BACAoS,GAAa5oB,IAAS4oB,EAAU5oB,MAAQ,mCAExC8oB,EAAc9oB,EAAKkN,MAAM,aAAa6b,KAAK,KAE/C,OADAD,EAAcA,EAAYE,OAAO,GAAGC,cAAgBH,EAAYvb,MAAM,GAElE,kBAAC,IAAD,CACIqF,UAAW2D,EACXxD,IAAK/S,EACL8S,QAAS,SAAC7G,GAAD,OAAO,EAAKwc,kBAAkBzoB,KAEvC,yBACI4S,UAAU,+BACVlT,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GAErCgS,IAAG,qCAEP,0BAAMrB,UAAU,gCACXkW,a,GAtDMvkB,IAAM+E,WCEhC4f,G,uKAEN,IAAD,EAC6C9f,KAAK9L,MAAnDsrB,EADC,EACDA,UAAW9I,EADV,EACUA,eAAgBC,EAD1B,EAC0BA,UAAWxY,EADrC,EACqCA,KAC3C,OAAKqhB,GAAcA,EAAU5oB,KASzB,oCACI,yBAAK4S,UAAU,qCACX,0BAAMA,UAAU,kCAAhB,kBAEA,kBAAC,EAAD,CAAYE,QAAS,SAAC7G,GACN1E,EAAKmhB,iBAET/U,oBAAqB,CACjBD,QAAS,GAEbL,gBAAiB,CACbF,aAAc,MAG1B,yBAAKzT,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GAC/BgS,IAAK,mCAKxB,kBAAC,GAAD,MAGI2U,EAAU5oB,MACNmpB,GAAkBP,EAAU5oB,MAAMqoB,WAAWjf,KAAK9L,OAItDsrB,EAAU5oB,MAAQmpB,GAAkBP,EAAU5oB,MAAMqoB,WAAWjf,KAAK9L,QACpE,kBAAC,GAAD,MAGJ,yBAAKsV,UAAU,qBACX,uBAAGA,UAAU,0BAAb,YAEA,yBACIA,UAAU,eAEV,kBAAC,GAAD,CACIA,UAAU,oBACV8C,IAAK,EACLC,IAAK,EACLmM,KAAM,GACN3Y,MAAOyf,EAAU5M,cAAwC3d,IAA/BuqB,EAAU5M,QAAQoN,SACxCR,EAAU5M,QAAQoN,SAAc,EACpCrJ,UAAS,UAAKA,EAAL,aACTD,eAAgBA,MAK5B,kBAAC,GAAD,MAEA,yBAAKlN,UAAU,qBACX,uBAAGA,UAAU,0BAAb,SAEA,yBACIA,UAAU,eAEV,kBAAC,GAAD,CACIA,UAAU,oBACV8C,IAAK,EACLC,IAAK,GACLmM,KAAM,GACN3Y,MAAOyf,EAAU5M,cAAqC3d,IAA5BuqB,EAAU5M,QAAQqN,MACxCT,EAAU5M,QAAQqN,MAAW,EACjCtJ,UAAS,UAAKA,EAAL,UACTD,eAAgBA,MAK5B,kBAAC,GAAD,MAEA,yBAAKlN,UAAU,+BACX,uBAAGA,UAAU,0BAAb,2BACA,kBAAC,KAAD,CACIA,UAAU,6BACV0H,WAASsO,EAAU5M,UAAW4M,EAAU5M,QAAQsN,OAAOV,EAAU5M,QAAQsN,KACzE1T,SAAU,SAAC3J,GACP6T,EAAe,GAAD,OAAIC,EAAJ,SAAsB9T,EAAE4J,OAAOyE,cAxFtD,yBAAK1H,UAAU,yBAAyBtP,MAAO,CAClDmT,UAAW,WADR,0C,GAL2BlS,IAAM+E,WCF/BigB,G,4MAkBjB7R,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,K,EAG3BuiB,SAAW,WACP,MAAO,CACH,CACIlV,IAAK,iBACLa,KAAM,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,sCAEpB,CACIlB,IAAK,oBACLa,KAAM,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,6B,EAK5BoU,WAAa,WACT,IAAIhd,EAAS4U,GAAuB,EAAK3iB,MAAMiK,MAC/C,MAAO,CACH,CACIwL,IAAK,iBACL6O,OAAQ,kBAAC,GAAD,CACJgH,UAAWvd,EAAOud,UAClB7I,UAAW,wBACXD,eAAgB,EAAKxiB,MAAMwiB,eAC3B6I,kBAAmB,CACf,SACA,WACA,UACA,UACA,WACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,UAEJphB,KAAM,EAAKjK,MAAMiK,QAGzB,CACIwL,IAAK,oBACL6O,OAAQ,kBAAC,GAAD,CACJgH,UAAWvd,EAAOud,UAClB7I,UAAW,2BACXD,eAAgB,EAAKxiB,MAAMwiB,eAC3BvY,KAAM,EAAKjK,MAAMiK,U,kEApE7B6B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGlDpF,EAAWC,EAAWC,GAIzC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BA8DP,OACI,kBAAC,GAAD,eACI8J,UAAU,cACNpY,KAAK9L,MAFb,CAGIiN,MAAOnB,KAAK6e,WACZjM,QAAS5S,KAAKif,aACd9gB,KAAM6B,KAAK9L,MAAMiK,KACjB6Z,eAAgB,S,GApFa7c,IAAM+E,WCI9BkgB,G,4MACjBlK,kBAAoB,WAChBA,GAAkB,eAAM,SAAU,CAAC4H,OAAQ,CACnCE,SAAU,EACVC,QAAS,EACTS,SAAU,EACVnb,KAAM,EACNob,KAAM,GACXzC,OAAQ,M,EAGf7F,eAAiB,WACb,MAAO,CACH7f,aAAa,EACbnC,OAAQ,CACJ6B,aAAc,CACVC,MAAO,W,EAMvBkqB,kBAAoB,WAEhB,OADA,EAAKnK,oBACE,CACH,kBAAC,GAAD,CACIvM,IAAK,EACLa,KAAO,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAKC,EAAQ,OACzBM,OAAQ,EAAKlX,MAAMkX,OACnB6L,KAAM,SAACpU,GAAD,OACF,kBAAC,GAAD,CACIkV,gBAAiB,CACbnjB,EAAGiO,EAAEqa,QAAU,IAAM,GACrBroB,EAAGgO,EAAEsa,QAAU,IAAM,IAEzBzG,eAAgB,EAAKA,eACrBtL,OAAQ,EAAKlX,MAAMkX,OACnBjN,KAAM,EAAKqY,cAIvB,kBAAC,GAAD,CACI7M,IAAK,EACLa,KAAO,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,8BACjBO,OAAQ,EAAKlX,MAAMkX,OACnB6L,KAAM,SAACpU,GAAD,OACF,kBAAC,GAAD,CACIkV,gBAAiB,CACbnjB,EAAGiO,EAAEqa,QAAU,IAAM,GACrBroB,EAAGgO,EAAEsa,QAAU,IAAM,IAEzBzG,eAAgB,EAAKA,eACrBtL,OAAQ,EAAKlX,MAAMkX,OACnBjN,KAAM,EAAKqY,gB,EAO/BI,aAAe,SAAC0J,K,EAGhBC,kBAAoB,WAChB,EAAKrK,oBAEL,IAAI8F,EAASnF,GAAuB,gBAAMmF,OACtCkD,EAAYrI,GAAuB,gBAAMqI,UACzCA,IACAA,EAAY1E,GAAW0E,EAAWA,EAAU3D,MAAO,EAAKrnB,MAAMsH,SAElEwgB,EAAOE,OAASF,EAAOE,QAAU,GACjCF,EAAO8B,OAAS9B,EAAO8B,QAAU,GAEjC,IAAI0C,EAAcxE,EAAO8B,OAAOnQ,MAC5B6S,IACAA,EAAchG,GAAWgG,EAAaA,EAAYjF,MAAO,EAAKrnB,MAAMsH,SACxE,IAAIilB,EAAczE,EAAOrO,MAIzB,OAHI8S,IACAA,EAAcjG,GAAWiG,EAAaA,EAAYlF,MAAO,EAAKrnB,MAAMsH,SAEjE,yBACHgO,UAAU,0BACVtP,MAAO,CACH8hB,OAAO,GAAD,OACCA,EAAOpjB,OAAS,EADjB,oBAC8B6nB,GAAe,yBACnD3P,gBAAiBoO,EACjBnV,aAAa,GAAD,OACLiS,EAAOE,OAAOwE,SAAW,EADpB,cAC2B1E,EAAOE,OAAOyE,UAAY,EADrD,cAC4D3E,EAAOE,OAAO0E,aAAe,EADzF,cACgG5E,EAAOE,OAAO2E,YAAc,EAD5H,MAEZ7P,UAAU,GAAD,OAAMgL,EAAO8B,OAAOE,QAAYhC,EAAO8B,OAAOY,SAA9C,cAA8D1C,EAAO8B,OAAOG,QAAYjC,EAAO8B,OAAOY,SAAtG,cAAqH1C,EAAO8B,OAAOa,KAAnI,cAA6I3C,EAAO8B,OAAOva,KAA3J,cAAqKid,GAAe,6B,uDAQrM,OACI,kBAAC,GAAD,eACIziB,QAAQ,gBACR+iB,aAAc9gB,MACVA,KAAK9L,MAHb,CAII8W,KAAMhL,KAAKmW,UACXkK,kBAAmBrgB,KAAKqgB,kBACxBvJ,aAAc9W,KAAK8W,aACnByJ,kBAAmBvgB,KAAKugB,yB,GA3GGtK,IAiH3CmK,GAAc9P,aAAe,CACzBvS,QAAS,iB,ICvHQgjB,G,4MAkBjBzS,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,K,EAG3BuiB,SAAW,WACP,MAAO,CACH,CACIlV,IAAK,uBACLa,KAAM,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,8B,EAK5BoU,WAAa,WACT,IAAIhd,EAAS4U,GAAuB,EAAK3iB,MAAMiK,MAC/C,MAAO,CACH,CACIwL,IAAK,uBACL6O,OAAQ,kBAAC,GAAD,CACJ7K,MAAO1L,EAAOid,UACdvI,UAAW,mBACXD,eAAgB,EAAKxiB,MAAMwiB,eAC3Blb,OAAQ,EAAKtH,MAAMiK,KAAKjK,MAAMsH,Y,kEAvC1CwE,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGlDpF,EAAWC,EAAWC,GAIzC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BAiCP,OACI,kBAAC,GAAD,eACI8J,UAAWpY,KAAK9L,MAAMkkB,WAAa,cAC/BpY,KAAK9L,MAFb,CAGIiN,MAAOnB,KAAK6e,WACZjM,QAAS5S,KAAKif,aACd9gB,KAAM6B,KAAK9L,MAAMiK,Y,GAtDUhD,IAAM+E,WCS5B8gB,G,4MACjB3K,eAAiB,WACb,MAAO,CACH/f,WAAW,EACXE,aAAa,EACbnC,OAAQ,CACJ6B,aAAc,CACVC,MAAO,SAGf8qB,WAAW,I,EAInB/K,kBAAoB,a,EAGpBmK,kBAAoB,WAEhB,OADA,EAAKnK,oBACE,CACH,kBAAC,GAAD,CACIvM,IAAK,EACLa,KAAO,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAKC,EAAQ,OACzBM,OAAQ,EAAKlX,MAAMkX,OACnB6L,KAAM,SAACpU,GAAD,OACF,kBAAC,GAAD,CACIuV,UAAW,gBACXL,gBAAiB,CACbnjB,EAAGiO,EAAEqa,QAAU,IAAM,GACrBroB,EAAGgO,EAAEsa,QAAU,IAAM,IAEzBzG,eAAgB,EAAKA,eACrBtL,OAAQ,EAAKlX,MAAMkX,OACnBjN,KAAM,EAAKqY,gB,EAO/BI,aAAe,SAAC0J,GACZ,IAAIpB,EAEJ5hB,QAAQC,IAAI,eAAgB+iB,EAAgBpB,WACxCoB,EAAgBpB,YAChBA,EAAY1E,GAAW8F,EAAgBpB,UAAWoB,EAAgBpB,UAAU3D,MAAO,EAAKrnB,MAAMsH,SAElG0lB,GAAc,kBAAmBhC,GAAa,QAC1C,EAAK1I,SAAU,OAAGvhB,GAAW,I,EAGrC8hB,qBAAuB,WACnB,OACI,oCACI,kBAAC,EAAD,CACI5Y,KAAM,EAAKqY,WAEf,kBAAC,EAAD,CACIrY,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,SACX7G,WAAY,CAAC,OAAQ,IAAK,KAAM,KAAM,MACtCE,YAAa,CAAC,OAAQ,IAAK,KAAM,KAAM,MACvCG,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,QACvCG,eAAgB,CAAC,IAAK,KAAM,KAAM,KAAM,QACxCC,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,QACvCC,eAAgB,CAAC,IAAK,KAAM,KAAM,KAAM,QACxCZ,cAAe,CACX,QAAS,WAAY,cAG7B,kBAAC,GAAD,CACItR,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,SACX5D,QAAS,CAAC,OAAQ,YAEtB,kBAAC,GAAD,CACIzU,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,a,uDAOvB,OACI,kBAAC,GAAD,eAAYzY,QAAQ,SACRojB,qBAAsB,CAClB5V,UAAW,UACXG,YAAa,UACb5S,SAAU,WACVsoB,SAAU,WAEdN,aAAc9gB,MACVA,KAAK9L,MARrB,CASYgG,MAAO,CAEHtB,MAAO,OACPC,OAAQ,OACRoX,UAAW,QACXhS,OAAQ,MAEZojB,GAAG,SACHC,oBAAkB,EAClBC,aAAW,EACXN,WAAS,EACTjW,KAAMhL,KAAKmW,UACXW,aAAc9W,KAAK8W,aACnBuJ,kBAAmBrgB,KAAKqgB,yB,GAlHZpK,IAyHpC+K,GAAO1Q,aAAe,CAClBvS,QAAS,U,IC1HQyjB,G,4MACjBnL,eAAiB,WACb,MAAO,CACH/f,WAAW,EACXE,aAAa,EACbnC,OAAQ,CACJ6B,aAAc,CACVC,MAAO,SAGf8qB,WAAW,I,EAInB/K,kBAAoB,a,EAGpBmK,kBAAoB,WAEhB,OADA,EAAKnK,oBACE,CACH,kBAAC,GAAD,CACIvM,IAAK,EACLa,KAAO,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAKC,EAAQ,OACzBM,OAAQ,EAAKlX,MAAMkX,OACnB6L,KAAM,SAACpU,GAAD,OACF,kBAAC,GAAD,CACIuV,UAAW,gBACXL,gBAAiB,CACbnjB,EAAGiO,EAAEqa,QAAU,IAAM,GACrBroB,EAAGgO,EAAEsa,QAAU,IAAM,IAEzBzG,eAAgB,EAAKA,eACrBtL,OAAQ,EAAKlX,MAAMkX,OACnBjN,KAAM,EAAKqY,gB,EAO/BI,aAAe,SAAC0J,GACZ,IAAIpB,EAEAoB,EAAgBpB,YAChBA,EAAY1E,GAAW8F,EAAgBpB,UAAWoB,EAAgBpB,UAAU3D,MAAO,EAAKrnB,MAAMsH,SAElG0lB,GAAc,kBAAmBhC,GAAa,QAC1C,EAAK1I,SAAU,OAAGvhB,GAAW,I,EAGrC8hB,qBAAuB,WACnB,OACI,oCACI,kBAAC,EAAD,CACI5Y,KAAM,EAAKqY,WAEf,kBAAC,EAAD,CACIrY,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,SACX7G,WAAY,CAAC,OAAQ,IAAK,KAAM,KAAM,MACtCE,YAAa,CAAC,OAAQ,IAAK,KAAM,KAAM,MACvCG,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,QACvCG,eAAgB,CAAC,IAAK,KAAM,KAAM,KAAM,QACxCC,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,QACvCC,eAAgB,CAAC,IAAK,KAAM,KAAM,KAAM,QACxCZ,cAAe,CACX,QAAS,WAAY,cAG7B,kBAAC,GAAD,CACItR,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,SACX5D,QAAS,CAAC,OAAQ,YAEtB,kBAAC,GAAD,CACIzU,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,a,uDAOvB,OACI,kBAAC,GAAD,eAAYzY,QAAQ,SACRojB,qBAAsB,CAClB5V,UAAW,UACXG,YAAa,UACb5S,SAAU,WACVsoB,SAAU,WAEdN,aAAc9gB,MACVA,KAAK9L,MARrB,CASYgG,MAAO,CACHtB,MAAO,OACPC,OAAQ,OACRoX,UAAW,QACXhS,OAAQ,MAEZojB,GAAG,SACHC,oBAAkB,EAClBC,aAAW,EACXN,WAAS,EACTjW,KAAMhL,KAAKmW,UACXW,aAAc9W,KAAK8W,aACnBuJ,kBAAmBrgB,KAAKqgB,yB,GAhHZpK,IAuHpCuL,GAAOlR,aAAe,CAClBvS,QAAS,U,ICxHQ0jB,G,4MACjBpL,eAAiB,WACb,MAAO,CACH/f,WAAW,EACXE,aAAa,EACbnC,OAAQ,CACJ6B,aAAc,CACVC,MAAO,SAGf8qB,WAAW,I,EAInB/K,kBAAoB,a,EAGpBmK,kBAAoB,WAEhB,OADA,EAAKnK,oBACE,CACH,kBAAC,GAAD,CACIvM,IAAK,EACLa,KAAO,yBAAKlU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAKC,EAAQ,OACzBM,OAAQ,EAAKlX,MAAMkX,OACnB6L,KAAM,SAACpU,GAAD,OACF,kBAAC,GAAD,CACIuV,UAAW,iBACXL,gBAAiB,CACbnjB,EAAGiO,EAAEqa,QAAU,IAAM,GACrBroB,EAAGgO,EAAEsa,QAAU,IAAM,IAEzBzG,eAAgB,EAAKA,eACrBtL,OAAQ,EAAKlX,MAAMkX,OACnBjN,KAAM,EAAKqY,gB,EAO/BI,aAAe,SAAC0J,GACZ,IAAIpB,EAEAoB,EAAgBpB,YAChBA,EAAY1E,GAAW8F,EAAgBpB,UAAWoB,EAAgBpB,UAAU3D,MAAO,EAAKrnB,MAAMsH,SAElG0lB,GAAc,kBAAmBhC,GAAa,QAC1C,EAAK1I,SAAU,OAAGvhB,GAAW,I,EAGrC8hB,qBAAuB,WACnB,OACI,oCACI,kBAAC,EAAD,CACI5Y,KAAM,EAAKqY,WAEf,kBAAC,EAAD,CACIrY,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,SACX7G,WAAY,CAAC,OAAQ,IAAK,KAAM,KAAM,MACtCE,YAAa,CAAC,OAAQ,IAAK,KAAM,KAAM,MACvCG,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,QACvCG,eAAgB,CAAC,IAAK,KAAM,KAAM,KAAM,QACxCC,cAAe,CAAC,IAAK,KAAM,KAAM,KAAM,QACvCC,eAAgB,CAAC,IAAK,KAAM,KAAM,KAAM,QACxCZ,cAAgB,EAAKvb,MAAMwtB,kBAEvB,CACA,SAAU,YAAa,aAHoB,CAC3C,QAAS,WAAY,cAK7B,kBAAC,GAAD,CACIvjB,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,SACX5D,QAAS,CAAC,OAAQ,YAEtB,kBAAC,GAAD,CACIzU,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,a,uDAOvB,OACI,kBAAC,GAAD,eAAYzY,QAAQ,UACRojB,qBAAsB,CAClB5V,UAAW,UACXG,YAAa,UACb5S,SAAU,WACVsoB,SAAU,WAEdN,aAAc9gB,MACVA,KAAK9L,MARrB,CASYgG,MAAK,2BAAM,CACPtB,MAAO,OACPC,OAAQ,OACRoX,UAAW,UACTjQ,KAAK9L,MAAMgG,OACjBynB,YAAW,2BAAM,IAEX3hB,KAAK9L,MAAMytB,aACjB3W,KAAMhL,KAAKmW,UACXmL,oBAAkB,EAClBC,aAAW,EACXN,WAAS,EACTI,GAAI,UACJvK,aAAc9W,KAAK8W,aACnBuJ,kBAAmBrgB,KAAKqgB,yB,GApHXpK,IA2HrCwL,GAAQnR,aAAe,CACnBvS,QAAS,W,ICnIQ6jB,G,kDACjB,WAAY1tB,GAAQ,IAAD,8BACf,cAAMA,IAqBVoa,kBAAoB,SAACC,GACjB,EAAKpS,SAAS,CAACG,QAAQ,KAvBR,EA0BnBulB,cAAgB,SAAClY,EAAK5J,GAElBmhB,GAAc,kBAAmBnhB,EADpB,EAAK7L,MAAbiK,MAEK,OAAMlJ,GAAW,IA3B3B,EAAKkB,MAAQ,CAAE0X,MAAM,GAFN,E,gEAMf7N,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAClEtO,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,EACf2B,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,qB,4CAGnDpF,EAAWC,EAAWC,GAIxC,OAHAF,EAAU/K,MAAQ+K,EAAU/K,KAAK6Q,cAAcC,YAAYjP,KAAKsO,mBAC5DtO,KAAK9L,MAAMiK,OAAS+K,EAAU/K,MAAQ+K,EAAU/K,KAAKjK,MAAM+R,MAAQjG,KAAK9L,MAAMiK,KAAKjK,MAAM+R,IACzFjG,KAAK9L,MAAMiK,MAAQ6B,KAAK9L,MAAMiK,KAAK6Q,cAAcE,eAAelP,KAAKsO,oBAClE,I,+BAaD,IAAD,OAEDpU,EADS8F,KAAK9L,MAAbiK,KACY6F,YAAY,UAAY,GACzC,OACI,oCACI,kBAAC,GAAD,CAAgBmK,aAAW,EAACC,MAAM,aAAa5B,SAAU,SAACqB,GACtD,EAAK1R,SAAS,CAAC0R,YAIf7N,KAAK7J,MAAM0X,MACX,yBAAKrE,UAAU,uBACX,0BAAMA,UAAU,iCAAhB,SAGA,kBAAC,GAAD,CACImE,MAAOzT,EAAM4W,iBAAmB,mBAChC6F,UAAW,mBAEXD,eAAgB1W,KAAK9L,MAAMwiB,eAC3Blb,OAAQwE,KAAK9L,MAAMiK,KAAKjK,MAAMsH,e,GArDTL,IAAM+E,WCOlC4hB,I,yDACjB,WAAY5tB,GAAQ,IAAD,8BACf,cAAMA,IAoBV6tB,qBAAuB,SAAC7tB,GACfA,EAAMC,SAASJ,aAChBH,EAAaM,EAAMC,SAAU,EAAKD,MAAMmL,mBAEvCnL,EAAMC,SAAS6tB,eAChB9tB,EAAMC,SAAS6tB,aAAe,IAC7B9tB,EAAMC,SAAS8tB,eAChB/tB,EAAMC,SAAS8tB,aAAe,CAAC,OAEnC,EAAKD,aAAe9tB,EAAMC,SAAS6tB,aACnC,EAAKC,aAAe/tB,EAAMC,SAAS8tB,aACnC,IAAIC,EAAO,EAAKhuB,MAAMmL,kBAAkB2E,YAAY9P,EAAMC,SAAU,QAChE+tB,IACA,EAAKC,MAAQD,EAAKttB,EAClB,EAAKwtB,MAAQF,EAAKrtB,EAClB,EAAKwtB,iBAAmBH,EAAKG,iBAC7B,EAAKC,oBAAsBJ,EAAKI,sBArCrB,EAyCnBC,aAAe,WACX/uB,OAAO0R,iBAAiB,WAAW,SAACrC,GAEhC,IAAI8G,GADJ9G,EAAIA,GAAKrP,OAAOgvB,OACJC,OAAS5f,EAAE6f,QACnBC,EAAO9f,EAAE+f,QAAU/f,EAAE+f,QAAmB,KAARjZ,EAEpC,GAAY,KAARA,GAAcgZ,EAAM,CACpB9f,EAAEggB,iBACF,IAAIC,EAAe,EAAK5uB,MAAMkX,OAAO2X,cACjC,EAAKC,qBAAqBF,EAAa5uB,MAAM+R,KAC7C,EAAKgd,OAAOH,EAAa5uB,MAAM+R,IAEnC,EAAK/R,MAAMkX,OAAOC,aAAaxI,EAA/B,gBAGJ,GAAY,KAAR8G,GAAcgZ,EAAM,CACpB9f,EAAEggB,iBACFvlB,QAAQC,IAAI,eACZ,IAAIulB,EAAe,EAAK5uB,MAAMkX,OAAO2X,cACjC,EAAKC,qBAAqBF,EAAa5uB,MAAM+R,KAC7C,EAAKid,SAASJ,EAAa5uB,MAAM+R,IAErC,EAAK/R,MAAMkX,OAAOC,aAAaxI,EAA/B,gBAGJ,GAAY,KAAR8G,GAAcgZ,EAAM,CACpB9f,EAAEggB,iBACF,IAAIC,EAAe,EAAK5uB,MAAMkX,OAAO2X,cACjC,EAAKI,mBAAmBL,EAAa5uB,MAAM+R,KAC3C,EAAKmd,SAASN,EAAa5uB,MAAM+R,IAErC,EAAK/R,MAAMkX,OAAOC,aAAaxI,EAA/B,gBAGJ,GAAY,KAAR8G,GAAcgZ,EAAM,CACpB9f,EAAEggB,iBACFvlB,QAAQC,IAAI,gBACZ,IAAIulB,EAAe,EAAK5uB,MAAMkX,OAAO2X,cACjC,EAAKI,mBAAmBL,EAAa5uB,MAAM+R,KAC3C,EAAKod,UAAUP,EAAa5uB,MAAM+R,IAEtC,EAAK/R,MAAMkX,OAAOC,aAAaxI,EAA/B,qBAlFO,EA8FnBwT,eAAiB,WACb,MAAO,CACH7f,aAAa,EACbF,WAAW,EACXD,WAAW,EACXitB,YAAY,EACZjvB,OAAQ,CACJ6B,aAAc,CACVC,MAAO,SACPC,UAAW,SACX+b,MAAM,GAEV+P,KAAM,CACFttB,EAAG,EAAKutB,MACRttB,EAAG,EAAKutB,MACRC,iBAAkB,EAAKA,iBACvBC,oBAAqB,EAAKA,qBAE9BiB,gBAAiB,iBAhHV,EAqHnBP,qBAAuB,SAAC/c,GACpB,OAAO,EAAK/R,MAAM+H,MAAMwL,QAAQ,EAAKua,aAAalhB,MAAK,SAAA/L,GACnD,OAAOA,IAAMkR,OAvHF,EA2HnBud,wBAA0B,SAACvd,GACvB,IAAI9E,EAAQ,EAAK6gB,aAAa5gB,WAAU,SAAArM,GACpC,OAAOA,IAAMkR,KAEjB,GAAI9E,EAAQ,EACR,OAAO,EAEX,GAAiC,IAA7B,EAAK6gB,aAAa9qB,OAClB,OAAO,EAEX,EAAKirB,QAEL,IAAIsB,EAAiB,EAAKzB,aAAa7gB,GAGnCuiB,GAFJD,EAAiB,EAAKvvB,MAAM+H,MAAMwL,QAAQgc,IACZE,cACT7f,MAAM,KACvB8f,EAAKC,SAASH,EAAM,IAEpBI,GADKD,SAASH,EAAM,IACfG,SAASH,EAAM,KAGpBK,GAFKF,SAASH,EAAM,IAETE,GACXI,EAAUF,EA0Dd,OAxDA,EAAK7B,aAAazhB,SAAQ,SAAAyjB,GACtB,GAAwB,OAApBA,EAAJ,CAKA,IAAI7C,GAFJ6C,EAAkB,EAAK/vB,MAAM+H,MAAMwL,QAAQwc,IAEZN,cAC3BD,EAAQtC,EAAStd,MAAM,KACvBogB,EAAML,SAASH,EAAM,IACrBS,EAAMN,SAASH,EAAM,IACrBU,EAAMP,SAASH,EAAM,IACrBW,EAAMR,SAASH,EAAM,IAErBK,GAAYG,GAAOF,GAAWI,EAC9BA,IACOJ,GAAWE,IAClBE,IACAF,KAGJ9C,EAAQ,UAAM8C,EAAN,YAAaC,EAAb,YAAoBC,EAApB,YAA2BC,GACnCJ,EAAgBK,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,wBAEvE,EAAK2d,aAAaxhB,SAAQ,SAAA+jB,GAEtB,IAAInD,GADJmD,EAAoB,EAAKrwB,MAAM+H,MAAMwL,QAAQ8c,IACZZ,cAC7BD,EAAQtC,EAAStd,MAAM,KACvB0gB,EAAMX,SAASH,EAAM,IACrBe,EAAMZ,SAASH,EAAM,IACrBgB,EAAMb,SAASH,EAAM,IACrBiB,EAAMd,SAASH,EAAM,IAErBM,GAAWQ,IACXA,IACAE,KAGJtD,EAAQ,UAAMoD,EAAN,YAAaC,EAAb,YAAoBC,EAApB,YAA2BC,GACnCJ,EAAkBD,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,uBAGzElD,GAAS,GAAK,EAAK6gB,aAAa3gB,OAAOF,EAAO,GAE9C,EAAKkhB,iBAAmB,IAAIvrB,MAAM,EAAKkrB,aAAa9qB,QAAQ0tB,KAAK,GAAGrmB,KAAI,SAAA0G,GACpE,MAAO,UACR0a,KAAK,KAER,EAAKjP,KAAKjT,QAAQonB,QAAQ,CACtBjwB,EAAG,EAAKutB,MACRttB,EAAG,EAAKutB,MACRC,iBAAkB,EAAKA,iBACvBC,oBAAqB,EAAKA,0BAC3BrtB,EAAW,EAAKf,MAAMmL,kBAAkBgF,oBAE3C,EAAKmS,SAASzC,iBACd,EAAK7f,MAAMkX,OAAOC,gBACX,GA3MQ,EA8MnB8X,mBAAqB,SAACld,GAClB,OAAO,EAAK/R,MAAM+H,MAAMwL,QAAQ,EAAKwa,aAAanhB,MAAK,SAAA/L,GACnD,OAAU,OAANA,GAGGA,IAAMkR,OACV,MApNQ,EAuNnB6e,sBAAwB,SAAC7e,GACrB,IAAI9E,EAAQ,EAAK8gB,aAAa7gB,WAAU,SAAArM,GACpC,OAAU,OAANA,GAEGA,IAAMkR,KAEjB,GAAI9E,EAAQ,EACR,OAAO,EAEX,EAAKihB,QAEL,IAAIqB,EAAiB,EAAKxB,aAAa9gB,GAGnCuiB,GAFJD,EAAiB,EAAKvvB,MAAM+H,MAAMwL,QAAQgc,IACZE,cACT7f,MAAM,KAEvBihB,GADKlB,SAASH,EAAM,IACfG,SAASH,EAAM,KACpBI,EAAKD,SAASH,EAAM,IACpBsB,EAAKnB,SAASH,EAAM,IAGpBM,EAAUF,EACVmB,EAAWF,EACXG,EAAUF,EAEd,EAAK/C,aAAazhB,SAAQ,SAAAyjB,GACtB,GAAwB,OAApBA,EAAJ,CAKA,IAAI7C,GAFJ6C,EAAkB,EAAK/vB,MAAM+H,MAAMwL,QAAQwc,IAEZN,cAC3BD,EAAQtC,EAAStd,MAAM,KACvBogB,EAAML,SAASH,EAAM,IACrBS,EAAMN,SAASH,EAAM,IACrBU,EAAMP,SAASH,EAAM,IACrBW,EAAMR,SAASH,EAAM,IAErBS,GAAOc,IACPd,IACAE,KAGJjD,EAAQ,UAAM8C,EAAN,YAAaC,EAAb,YAAoBC,EAApB,YAA2BC,GACnCJ,EAAgBK,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,wBAEvE,EAAK2d,aAAaxhB,SAAQ,SAAA+jB,GAEtB,IAAInD,GADJmD,EAAoB,EAAKrwB,MAAM+H,MAAMwL,QAAQ8c,IACZZ,cAC7BD,EAAQtC,EAAStd,MAAM,KACvB0gB,EAAMX,SAASH,EAAM,IACrBe,EAAMZ,SAASH,EAAM,IACrBgB,EAAMb,SAASH,EAAM,IACrBiB,EAAMd,SAASH,EAAM,IAErBe,GAAOS,GAEPT,IACAE,KACOA,GAAOX,GAEdW,IAGJvD,EAAQ,UAAMoD,EAAN,YAAaC,EAAb,YAAoBC,EAApB,YAA2BC,GACnCJ,EAAkBD,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,uBAGzE,EAAK4d,aAAa5gB,OAAOF,EAAO,GAEhC,IAAIgkB,EAAe,EAAKC,kBAgBxB,OAfA,EAAK9C,oBAAsB,IAAIxrB,MAAM,EAAKmrB,aAAa/qB,QAAQ0tB,KAAK,GAAGrmB,KAAI,SAAC0G,EAAGjO,GAC3E,OAAIA,IAAMmuB,EAlSE,kBAoSL,UACRxF,KAAK,KAER,EAAKjP,KAAKjT,QAAQonB,QAAQ,CACtBjwB,EAAG,EAAKutB,MACRttB,EAAG,EAAKutB,MACRC,iBAAkB,EAAKA,iBACvBC,oBAAqB,EAAKA,0BAC3BrtB,EAAW,EAAKf,MAAMmL,kBAAkBgF,oBAE3C,EAAKmS,SAASzC,iBACd,EAAK7f,MAAMkX,OAAOC,gBACX,GA7SQ,EAgTnBga,gBAAkB,SAAClkB,EAAOpD,EAASunB,EAAmBjE,EAAIkE,EAAYhqB,GAQlE,GAPK,EAAKiqB,WACN,EAAKA,SAAW,IAEpB,EAAKA,SAASvkB,KAAK,CACfE,QAAOpD,UAASunB,oBAAmBjE,KAAIkE,aAAYhqB,cAGlD,EAAKkqB,iBAAkB,CACxB,IAAIC,EAAU,EAAKF,SAASG,QAC5B,EAAKC,cAAcF,KA1TR,EA8TnBE,cAAgB,SAACF,GACb,EAAKD,kBAAmB,EACnBC,EAAQH,WAYT,EAAKM,mBAAmBH,EAAQvkB,MAAOukB,EAAQ3nB,QAAS2nB,EAAQJ,kBAC5DI,EAAQrE,IAAI,SAACrY,GACL0c,EAAQnqB,UACRmqB,EAAQnqB,SAASyN,GACrB,IAAI8c,EAAa,EAAKN,SAASG,QAC3BG,EACA,EAAKF,cAAcE,GAEnB,EAAKL,kBAAmB,KAnBpC,EAAKM,qBAAqBL,EAAQvkB,MAAOukB,EAAQ3nB,QAAS2nB,EAAQJ,kBAC9DI,EAAQrE,IAAI,SAACrY,GACL0c,EAAQnqB,UACRmqB,EAAQnqB,SAASyN,GACrB,IAAI8c,EAAa,EAAKN,SAASG,QAC3BG,EACA,EAAKF,cAAcE,GAEnB,EAAKL,kBAAmB,MAzUzB,EAyVnBO,gBAAkB,SAAC7nB,GACf,IAAI8nB,EAAQ,EAAKzC,wBAAwBrlB,EAAKjK,MAAM+R,IAIpD,OAHKggB,IACDA,EAAQ,EAAKnB,sBAAsB3mB,EAAKjK,MAAM+R,KAE3CggB,GA9VQ,EAkWnBC,oBAAsB,SAAC/nB,EAAM0E,EAAGsjB,EAAKC,EAAOjX,GAExC,GADA7R,QAAQC,IAAI,kBAAmB,EAAKykB,aAAc,EAAKC,cAC3C,MAARkE,GAAuB,MAARA,EAAnB,CAGA,IACIzC,EADWvlB,EAAKwlB,cACC7f,MAAM,KACvB8f,EAAKC,SAASH,EAAM,IACpBqB,EAAKlB,SAASH,EAAM,IACpBI,EAAKD,SAASH,EAAM,IACpBsB,EAAKnB,SAASH,EAAM,IAExB,EAAKhT,KAAKjT,QAAQyI,cAAa,GAAO,GACtC,IAAImgB,EAAY,EAAKnyB,MAAM2T,SAASye,YAAY,EAAK5V,KAAKjT,QAAQvJ,MAAM+R,IACpEsgB,EACA,EAAK7V,KAAKjT,QAAQ+oB,gBAAgBH,EAAU,GAAI,EAAG,IAAK,EAAK3V,KAAKjT,SAASlI,IAG/E,GADA+H,QAAQC,IAAI,kBAAmB,EAAKykB,aAAc,EAAKC,cAC3C,MAARkE,EACA,GAAIC,EAAMvxB,EAAI,EAAG,CAGb,IAFA,IAAI4xB,EAAYtX,EAAa5Z,IAAMgxB,EAC/BG,EAAa,EACR1vB,EAAIqvB,EAAUnvB,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC5C,IAAI2vB,EACA,EAAKjW,KAAKjT,QAAQ+oB,gBAAgBH,EAAUrvB,GAAIA,EAAG,IAAK,EAAK0Z,KAAKjT,SAASlI,IAAMgxB,EAIrF,GAHIvvB,IAAMqvB,EAAUnvB,OAAS,GACzByvB,IAEAF,GAAaE,EAAS,CACtBD,EAAa1vB,EAAI,EACjB,OAIRsG,QAAQC,IAAI,iBAAkB,EAAKykB,aAAc,EAAKC,cAEtD,EAAKD,aAAaxhB,SAAQ,SAAA+jB,GAEtB,IAAInD,GADJmD,EAAoB,EAAKrwB,MAAM+H,MAAMwL,QAAQ8c,IACZZ,cAC7BD,EAAQtC,EAAStd,MAAM,KACvBogB,EAAML,SAASH,EAAM,IACrBS,EAAMN,SAASH,EAAM,IACrBU,EAAMP,SAASH,EAAM,IACrBW,EAAMR,SAASH,EAAM,IAEzB,GAAIQ,GAAON,GAAMM,EAAMwC,EACnB,GAAIvC,IAAQa,EAAI,CACZb,IAMA,IALA,IAAIyC,EAAa,EAAK3E,aAAa7gB,WAAU,SAAArM,GACzC,OAAU,OAANA,GAEGA,IAAMoJ,EAAKjK,MAAM+R,MACvB,EACE2gB,GAAc,GAAG,CACpB,IAAIC,EAAe,EAAK5E,aAAa2E,GAErC,GADAC,EAAe,EAAK3yB,MAAM+H,MAAMwL,QAAQof,GACtB,CACd,IACInD,EADWmD,EAAalD,cACP7f,MAAM,KACvB0gB,EAAMX,SAASH,EAAM,IACfG,SAASH,EAAM,IACfG,SAASH,EAAM,IACfG,SAASH,EAAM,IAErBU,GAAOI,GACPL,IACAyC,KAEAA,GAAc,SAIvB,GAAIvC,IAAQU,EAAI,CACnBV,IAMA,IALA,IAAIuC,EAAa,EAAK3E,aAAa7gB,WAAU,SAAArM,GACzC,OAAU,OAANA,GAEGA,IAAMoJ,EAAKjK,MAAM+R,MACvB,EACE2gB,EAAa,EAAK3E,aAAa/qB,QAAQ,CAC1C,IAAI2vB,EAAe,EAAK5E,aAAa2E,GAErC,GADAC,EAAe,EAAK3yB,MAAM+H,MAAMwL,QAAQof,GACtB,CACd,IACInD,EADWmD,EAAalD,cACP7f,MAAM,KACvB0gB,EAAMX,SAASH,EAAM,IACfG,SAASH,EAAM,IACfG,SAASH,EAAM,IACfG,SAASH,EAAM,IAErBU,GAAOI,GACPH,IACAuC,KAEAA,EAAa,EAAK3E,aAAa/qB,YAGnC0vB,EAAa,EAAK3E,aAAa/qB,QAM/CkqB,EAAQ,UAAM8C,EAAN,YAAaC,EAAb,YAAoBC,EAApB,YAA2BC,GACnCE,EAAkBD,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,uBAGzEuf,EAAKvX,KAAKC,IAAIoa,EAAY5C,EAAK,OAE9B,CAGD,IAFA,IAAI2C,EAAYtX,EAAa5Z,IAAMgxB,EAC/BG,EAAa,EACR1vB,EAAIqvB,EAAUnvB,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC5C,IAAI2vB,EACA,EAAKjW,KAAKjT,QAAQ+oB,gBAAgBH,EAAUrvB,GAAIA,EAAG,IAAK,EAAK0Z,KAAKjT,SAASlI,IAAMgxB,EAIrF,GAHIvvB,IAAMqvB,EAAUnvB,OAAS,GACzByvB,IAEAF,GAAaE,EAAS,CACtBD,EAAa1vB,EAAI,EACjB,OAIR,EAAKgrB,aAAaxhB,SAAQ,SAAA+jB,GAEtB,IAAInD,GADJmD,EAAoB,EAAKrwB,MAAM+H,MAAMwL,QAAQ8c,IACZZ,cAC7BD,EAAQtC,EAAStd,MAAM,KACvBogB,EAAML,SAASH,EAAM,IACrBS,EAAMN,SAASH,EAAM,IACrBU,EAAMP,SAASH,EAAM,IACrBW,EAAMR,SAASH,EAAM,IAErBU,GAAOR,GAAMM,GAAOwC,IAChBvC,GAAOY,GAAMV,GAAOW,IACD,EAAKI,kBACL,EAAKnD,aAAa7gB,WAAU,SAAArM,GAC3C,OAAU,OAANA,GAEGA,IAAMoJ,EAAKjK,MAAM+R,MAGxBke,EAAMa,EAENX,EAAMU,IAKlB3D,EAAQ,UAAM8C,EAAN,YAAaC,EAAb,YAAoBC,EAApB,YAA2BC,GACnCE,EAAkBD,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,uBAGzEuf,EAAKvX,KAAKC,IAAIoa,EAAY5C,EAAK,QAInC,GAAIsC,EAAMvxB,EAAI,EAAG,CAGb,IAFA,IAAIiyB,EAAe3X,EAAatW,QAAUsW,EAAa5Z,IAAMgxB,GACzDQ,EAAaV,EAAUnvB,OAClBF,EAAI,EAAGA,EAAIqvB,EAAUnvB,OAAQF,IAAK,CACvC,IAAIgwB,EACA,EAAKtW,KAAKjT,QAAQ+oB,gBAAgBH,EAAUrvB,GAAIA,EAAG,IAAK,EAAK0Z,KAAKjT,SAASlI,IAAMgxB,EAIrF,GAHIvvB,IAAMqvB,EAAUnvB,OAAS,GACzB8vB,IAEAF,GAAgBE,EAAY,CAC5BD,EAAa/vB,EAAI,EACjB,OAIR,EAAKgrB,aAAaxhB,SAAQ,SAAA+jB,GAEtB,IAAInD,GADJmD,EAAoB,EAAKrwB,MAAM+H,MAAMwL,QAAQ8c,IACZZ,cAC7BD,EAAQtC,EAAStd,MAAM,KACvBogB,EAAML,SAASH,EAAM,IACrBS,EAAMN,SAASH,EAAM,IACrBU,EAAMP,SAASH,EAAM,IACrBW,EAAMR,SAASH,EAAM,IAErBQ,GAAOJ,GAAMI,EAAM6C,IACf5C,GAAOY,GAAMV,GAAOW,IACD,EAAKI,kBACL,EAAKnD,aAAa7gB,WAAU,SAAArM,GAC3C,OAAU,OAANA,GAEGA,IAAMoJ,EAAKjK,MAAM+R,MAGxBke,EAAMa,EAENX,EAAMU,IAKlB3D,EAAQ,UAAM8C,EAAN,YAAaC,EAAb,YAAoBC,EAApB,YAA2BC,GACnCE,EAAkBD,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,uBAGzEyf,EAAKzX,KAAKE,IAAIwa,EAAYnD,EAAK,OAE9B,CAGD,IAFA,IAAIkD,EAAe3X,EAAatW,QAAUsW,EAAa5Z,IAAMgxB,GACzDQ,EAAaV,EAAUnvB,OAClBF,EAAI,EAAGA,EAAIqvB,EAAUnvB,OAAQF,IAAK,CACvC,IAAIgwB,EACA,EAAKtW,KAAKjT,QAAQ+oB,gBAAgBH,EAAUrvB,GAAIA,EAAG,IAAK,EAAK0Z,KAAKjT,SAASlI,IAAMgxB,EAIrF,GAHIvvB,IAAMqvB,EAAUnvB,OAAS,GACzB8vB,IAEAF,GAAgBE,EAAY,CAC5BD,EAAa/vB,EAAI,EACjB,OAIR,EAAKgrB,aAAaxhB,SAAQ,SAAA+jB,GAEtB,IAAInD,GADJmD,EAAoB,EAAKrwB,MAAM+H,MAAMwL,QAAQ8c,IACZZ,cAC7BD,EAAQtC,EAAStd,MAAM,KACvBogB,EAAML,SAASH,EAAM,IACrBS,EAAMN,SAASH,EAAM,IACrBU,EAAMP,SAASH,EAAM,IACrBW,EAAMR,SAASH,EAAM,IAEzB,GAAIQ,EAAMJ,GAAMI,GAAO6C,EACnB,GAAI5C,IAAQa,EAAI,CACZb,IAMA,IALA,IAAIyC,EAAa,EAAK3E,aAAa7gB,WAAU,SAAArM,GACzC,OAAU,OAANA,GAEGA,IAAMoJ,EAAKjK,MAAM+R,MACvB,EACE2gB,GAAc,GAAG,CACpB,IAAIC,EAAe,EAAK5E,aAAa2E,GAErC,GADAC,EAAe,EAAK3yB,MAAM+H,MAAMwL,QAAQof,GACtB,CACd,IACInD,EADWmD,EAAalD,cACP7f,MAAM,KAGvB4gB,GAFMb,SAASH,EAAM,IACfG,SAASH,EAAM,IACfG,SAASH,EAAM,KACfG,SAASH,EAAM,IAErBQ,GAAOQ,GACPP,IACAyC,KAEAA,GAAc,OAGlBA,GAAc,QAGnB,GAAIvC,IAAQU,EAAI,CACnBV,IAMA,IALA,IAAIuC,EAAa,EAAK3E,aAAa7gB,WAAU,SAAArM,GACzC,OAAU,OAANA,GAEGA,IAAMoJ,EAAKjK,MAAM+R,MACvB,EACE2gB,EAAa,EAAK3E,aAAa/qB,QAAQ,CAC1C,IAAI2vB,EAAe,EAAK5E,aAAa2E,GAErC,GADAC,EAAe,EAAK3yB,MAAM+H,MAAMwL,QAAQof,GACtB,CACd,IACInD,EADWmD,EAAalD,cACP7f,MAAM,KAGvB4gB,GAFMb,SAASH,EAAM,IACfG,SAASH,EAAM,IACfG,SAASH,EAAM,KACfG,SAASH,EAAM,IAErBQ,GAAOQ,GACPL,IACAuC,KAEAA,EAAa,EAAK3E,aAAa/qB,YAGnC0vB,EAAa,EAAK3E,aAAa/qB,QAM/CkqB,EAAQ,UAAM8C,EAAN,YAAaC,EAAb,YAAoBC,EAApB,YAA2BC,GACnCE,EAAkBD,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,uBAGzEyf,EAAKzX,KAAKE,IAAIwa,EAAYnD,EAAK,GAIvCzlB,EAAKmmB,YAAL,UACOV,EADP,YACamB,EADb,YACmBjB,EADnB,YACyBkB,GACnB,EAAK9wB,MAAMmL,kBAAkBgF,sBA3oBpB,EA8oBnB0hB,qBAAuB,SAAC5kB,EAAOpD,EAASunB,EAAmBjE,EAAI9lB,GAC3D,EAAK4mB,QACL,EAAKE,iBAAmB,IAAIvrB,MAAM,EAAKkrB,aAAa9qB,OAAS,GAAG0tB,KAAK,GAAGrmB,KAAI,SAAA0G,GACxE,MAAO,UACR0a,KAAK,KAER,IAAIsH,EAAgC,IAAV9lB,EAAcA,EAAQ,EAAI,EAEhDsiB,EAAiB,EAAKzB,aAAaiF,GAGnCC,GAFJzD,EAAiB,EAAKvvB,MAAM+H,MAAMwL,QAAQgc,KAEKA,EAAeE,cAC1DvC,EAAW8F,EAAsB,UAAM/lB,EAAQ,EAAd,YAC7B+lB,EAAuBpjB,MAAM,KAAK,GADL,YAEzB3C,EAAQ,EAFiB,YAG7B+lB,EAAuBpjB,MAAM,KAAK,IAEtC,UAGC/F,IACDA,EAAU,WAEd,IAAIopB,EAAM7B,EAAkBvnB,GAExBqpB,EAAU,kBAACD,EAAD,CACV9F,GAAIA,EACJJ,WAAS,EACTjW,KAAM,CACF3W,OAAQ,CACJiX,cAAe,CACX8V,SAAUA,EACV5V,UAAW,MACX1B,WAAY,MACZ2B,aAAc,MACdE,YAAa,QAGrBsV,WAAW,GAEfoG,YAAa,CAAC,IAAK,KACnBrB,gBAAiB,EAAKA,kBAG1B,EAAK/D,aAAazhB,SAAQ,SAAAyjB,GACtB,GAAwB,OAApBA,EAAJ,CAKA,IAAI7C,GAFJ6C,EAAkB,EAAK/vB,MAAM+H,MAAMwL,QAAQwc,IAEZN,cAC3BD,EAAQtC,EAAStd,MAAM,KACvB8f,EAAKC,SAASH,EAAM,IACpBqB,EAAKlB,SAASH,EAAM,IACpBI,EAAKD,SAASH,EAAM,IACpBsB,EAAKnB,SAASH,EAAM,IAEpBK,EAAW5iB,EAAQ,EAEnB2iB,GAAMC,GACND,IACAF,GAAMG,GACNH,IAEJxC,EAAQ,UAAMwC,EAAN,YAAYmB,EAAZ,YAAkBjB,EAAlB,YAAwBkB,GAChCf,EAAgBK,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,wBAEvE,EAAK2d,aAAaxhB,SAAQ,SAAA+jB,GAEtB,IAAInD,GADJmD,EAAoB,EAAKrwB,MAAM+H,MAAMwL,QAAQ8c,IACZZ,cAC7BD,EAAQtC,EAAStd,MAAM,KACvB8f,EAAKC,SAASH,EAAM,IACpBqB,EAAKlB,SAASH,EAAM,IACpBI,EAAKD,SAASH,EAAM,IACpBsB,EAAKnB,SAASH,EAAM,IAEpBuB,EAAW9jB,EAAQ,EAEnByiB,GAAMqB,GACNrB,IACAE,EAAKmB,GACLnB,IAEJ1C,EAAQ,UAAMwC,EAAN,YAAYmB,EAAZ,YAAkBjB,EAAlB,YAAwBkB,GAChCT,EAAkBD,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,uBAGzE,EAAKqM,KAAKjT,QAAQonB,QAAQ,CACtBjwB,EAAG,EAAKutB,MACRttB,EAAG,EAAKutB,MACRC,iBAAkB,EAAKA,iBACvBC,oBAAqB,EAAKA,0BAC3BrtB,EAAW,EAAKf,MAAMmL,kBAAkBgF,oBAC3C,EAAKqM,KAAKjT,QAAQ6pB,SAASF,OAASnyB,OAAWA,OAAWA,GAAW,SAAC+T,GAClE,EAAKgZ,aAAa3gB,OAAOF,EAAO,EAAG6H,EAAI9U,MAAM+R,IACzC1K,GACAA,EAASyN,UACd/T,GAAW,IA/uBC,EAkvBnBmwB,gBAAkB,SAACmC,GACf,IAAIpmB,EAAQ,EAAK8gB,aAAa7gB,WAAU,SAAAoU,GACpC,OAAa,OAANA,KAGX,YAAoBvgB,IAAhBsyB,GAA6BpmB,GAASomB,EAC/BpmB,EAAQ,EAEZA,GA1vBQ,EA6vBnB0kB,mBAAqB,SAAC1kB,EAAOpD,EAASunB,EAAmBjE,EAAI9lB,GACzD,EAAK6mB,QAEL,IAAI6E,EAAgC,IAAV9lB,EAAcA,EAAQ,EAAI,EAEhDsiB,EAAiB,EAAKxB,aAAagF,IAAwB,KACxC,OAAnBxD,IACAA,EAAiB,EAAKxB,aAAagF,EAAsB,IAI7D,IAAIC,GAFJzD,EAAiB,EAAKvvB,MAAM+H,MAAMwL,QAAQgc,KAEKA,EAAeE,cAC1DvC,EAAW8F,EAAsB,UAC7BA,EAAuBpjB,MAAM,KAAK,GADL,YAEzB3C,EAAQ,EAFiB,YAG7B+lB,EAAuBpjB,MAAM,KAAK,GAHL,YAIzB3C,EAAQ,GAJiB,UAK9B,EAL8B,IAKzBA,EAAQ,EALiB,YAKZ,EAAKghB,MAAQ,EALD,YAKMhhB,EAAQ,GAG9CpD,IACDA,EAAU,WAEd,IAAIopB,EAAM7B,EAAkBvnB,GAExBqpB,EAAU,kBAACD,EAAD,CACV9F,GAAIA,EACJJ,WAAS,EACTS,mBAAiB,EACjB1W,KAAM,CACF3W,OAAQ,CACJiX,cAAe,CACX8V,SAAUA,EACV5V,UAAW,MACX1B,WAAY,MACZ2B,aAAc,MACdE,YAAa,QAGrBsV,WAAW,EACXS,mBAAmB,GAEvBxnB,MAAO,CACHtB,MAAO,QACPC,OAAQ,OACRoX,UAAW,QAEfoX,YAAa,CAAC,IAAK,IAAK,IAAK,KAC7BrB,gBAAiB,EAAKA,gBACtBE,oBAAqB,EAAKA,sBAG9B5oB,QAAQC,IAAI,oBAAqB,EAAKykB,cACtC,EAAKA,aAAaxhB,SAAQ,SAAA+jB,GAEtB,IAAInD,GADJmD,EAAoB,EAAKrwB,MAAM+H,MAAMwL,QAAQ8c,IACZZ,cAC7BD,EAAQtC,EAAStd,MAAM,KACvB8f,EAAKC,SAASH,EAAM,IACpBqB,EAAKlB,SAASH,EAAM,IACpBI,EAAKD,SAASH,EAAM,IACpBsB,EAAKnB,SAASH,EAAM,IAEpBuB,EAAW9jB,EAAQ,EAEnB4jB,GAAME,GACNF,IACAC,EAAKC,GACLD,IAEJ5D,EAAQ,UAAMwC,EAAN,YAAYmB,EAAZ,YAAkBjB,EAAlB,YAAwBkB,GAChCT,EAAkBD,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,uBAEzE,EAAK4d,aAAazhB,SAAQ,SAAAyjB,GACtB,GAAwB,OAApBA,EAAJ,CAIA,IAAI7C,GAFJ6C,EAAkB,EAAK/vB,MAAM+H,MAAMwL,QAAQwc,IAEZN,cAC3BD,EAAQtC,EAAStd,MAAM,KACvB8f,EAAKC,SAASH,EAAM,IACpBqB,EAAKlB,SAASH,EAAM,IACpBI,EAAKD,SAASH,EAAM,IACpBsB,EAAKnB,SAASH,EAAM,IAEpBuB,EAAW9jB,EAAQ,EAEnB4jB,GAAME,GACNF,IACAC,EAAKC,GACLD,IAEJ5D,EAAQ,UAAMwC,EAAN,YAAYmB,EAAZ,YAAkBjB,EAAlB,YAAwBkB,GAChCf,EAAgBK,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,wBAGvE,IAAI8gB,EAAe,EAAKC,gBAAgBjkB,GACxC,EAAKmhB,oBAAsB,IAAIxrB,MAAM,EAAKmrB,aAAa/qB,OAAS,GAAG0tB,KAAK,GAAGrmB,KAAI,SAAC0G,EAAGjO,GAC/E,OAAIA,IAAMmuB,EAj2BE,kBAm2BL,UACRxF,KAAK,KAER,EAAKjP,KAAKjT,QAAQonB,QAAQ,CACtBjwB,EAAG,EAAKutB,MACRttB,EAAG,EAAKutB,MACRC,iBAAkB,EAAKA,iBACvBC,oBAAqB,EAAKA,0BAC3BrtB,EAAW,EAAKf,MAAMmL,kBAAkBgF,oBAC3C,EAAKqM,KAAKjT,QAAQ6pB,SAASF,OAASnyB,OAAWA,OAAWA,GAAW,SAAC+T,GAClE,EAAKiZ,aAAa5gB,OAAOF,EAAO,EAAG6H,EAAI9U,MAAM+R,IAC7C,EAAK/R,MAAMkX,OAAOC,eACd9P,GACAA,EAASyN,UACd/T,GAAW,IA92BC,EAi3BnBguB,OAAS,SAAChd,GACN,IAAIse,EAAoB,EAAKvB,qBAAqB/c,GAClD,GAAKse,EAAL,CAGA,IAMeiD,EAAQtD,EAAKC,EAAKC,EAAKC,EALlCX,EADWa,EAAkBZ,cACZ7f,MAAM,KACvB8f,EAAKC,SAASH,EAAM,IACpBqB,EAAKlB,SAASH,EAAM,IACpBI,EAAKD,SAASH,EAAM,IACpBsB,EAAKnB,SAASH,EAAM,IAGpB+D,EAAe7D,EAAK,EACpB8D,EAAc,EAAK1F,aAAayF,EAAe,IACnDC,EAAc,EAAKxzB,MAAM+H,MAAMwL,QAAQigB,MAGnCF,EADYE,EAAY/D,cACL7f,MAAM,KACzBogB,EAAML,SAAS2D,EAAO,IACtBrD,EAAMN,SAAS2D,EAAO,IACtBpD,EAAMP,SAAS2D,EAAO,IACtBnD,EAAMR,SAAS2D,EAAO,IAEtBE,EAAYpD,YAAZ,UACOJ,EAAM,EADb,YACkBa,EADlB,YACwBX,EAAM,EAD9B,YACmCY,GAC7B,EAAK9wB,MAAMmL,kBAAkBgF,oBAEnCkgB,EAAkBD,YAAlB,UACOV,EAAK,EADZ,YACiBO,EADjB,YACwBL,EAAK,EAD7B,YACkCO,GAC5B,EAAKnwB,MAAMmL,kBAAkBgF,oBAEnCxJ,EAAkB,EAAKmnB,aAAcyF,EAAcA,EAAe,IAGtE,EAAKjR,SAASzC,iBACd,EAAK7f,MAAMkX,OAAOC,iBAr5BH,EAw5BnB6X,SAAW,SAACjd,GACR,IAAIse,EAAoB,EAAKvB,qBAAqB/c,GAClD,GAAKse,EAAL,CAGA,IAMeiD,EAAQtD,EAAKC,EAAKC,EAAKC,EALlCX,EADWa,EAAkBZ,cACZ7f,MAAM,KACvB8f,EAAKC,SAASH,EAAM,IACpBqB,EAAKlB,SAASH,EAAM,IACpBI,EAAKD,SAASH,EAAM,IACpBsB,EAAKnB,SAASH,EAAM,IAGpB+D,EAAe7D,EAAK,EACpB8D,EAAc,EAAK1F,aAAayF,EAAe,IACnDC,EAAc,EAAKxzB,MAAM+H,MAAMwL,QAAQigB,MAGnCF,EADYE,EAAY/D,cACL7f,MAAM,KACzBogB,EAAML,SAAS2D,EAAO,IACtBrD,EAAMN,SAAS2D,EAAO,IACtBpD,EAAMP,SAAS2D,EAAO,IACtBnD,EAAMR,SAAS2D,EAAO,IAEtBE,EAAYpD,YAAZ,UACOJ,EAAM,EADb,YACkBa,EADlB,YACwBX,EAAM,EAD9B,YACmCY,GAC7B,EAAK9wB,MAAMmL,kBAAkBgF,oBAEnCkgB,EAAkBD,YAAlB,UACOV,EAAK,EADZ,YACiBO,EADjB,YACwBL,EAAK,EAD7B,YACkCO,GAC5B,EAAKnwB,MAAMmL,kBAAkBgF,oBAEnCxJ,EAAkB,EAAKmnB,aAAcyF,EAAcA,EAAe,IAGtE,EAAKjR,SAASzC,iBACd,EAAK7f,MAAMkX,OAAOC,iBA57BH,EA+7BnBgY,UAAY,SAACpd,GACT,IAAIge,EAAkB,EAAKd,mBAAmBld,GAC9C,GAAKge,EAAL,CAGA,IAMeuD,EAAQtD,EAAKC,EAAKC,EAAKC,EALlCX,EADWO,EAAgBN,cACV7f,MAAM,KACvB8f,EAAKC,SAASH,EAAM,IACpBqB,EAAKlB,SAASH,EAAM,IACpBI,EAAKD,SAASH,EAAM,IACpBsB,EAAKnB,SAASH,EAAM,IAGpB+D,EAAe1C,EAAK,EACpB2C,EAAc,EAAKzF,aAAawF,EAAe,GAKnD,GAJoB,OAAhBC,IACAA,EAAc,EAAKxzB,MAAM+H,MAAMwL,QAAQigB,IAGvCA,EAoBA,OAlBAF,EADYE,EAAY/D,cACL7f,MAAM,KACzBogB,EAAML,SAAS2D,EAAO,IACtBrD,EAAMN,SAAS2D,EAAO,IACtBpD,EAAMP,SAAS2D,EAAO,IACtBnD,EAAMR,SAAS2D,EAAO,IAEtBE,EAAYpD,YAAZ,UACOV,EADP,YACaO,EAAM,EADnB,YACwBL,EADxB,YAC8BO,EAAM,GAC9B,EAAKnwB,MAAMmL,kBAAkBgF,oBAEnC4f,EAAgBK,YAAhB,UACOJ,EADP,YACca,EAAK,EADnB,YACwBX,EADxB,YAC+BY,EAAK,GAC9B,EAAK9wB,MAAMmL,kBAAkBgF,oBAEnCxJ,EAAkB,EAAKonB,aAAcwF,EAAcA,EAAe,GAElE,EAAKjR,SAASzC,sBACd,EAAK7f,MAAMkX,OAAOC,eAKF,OAAhBqc,IACAzD,EAAgBK,YAAhB,UACOV,EADP,YACamB,EAAK,EADlB,YACuBjB,EADvB,YAC6BkB,EAAK,GAC5B,EAAK9wB,MAAMmL,kBAAkBgF,oBAEnC,EAAK2d,aAAaxhB,SAAQ,SAAA+jB,GAEtB,IAAInD,GADJmD,EAAoB,EAAKrwB,MAAM+H,MAAMwL,QAAQ8c,IACZZ,cAC7BD,EAAQtC,EAAStd,MAAM,KACvB0gB,EAAMX,SAASH,EAAM,IACrBe,EAAMZ,SAASH,EAAM,IACrBgB,EAAMb,SAASH,EAAM,IACrBiB,EAAMd,SAASH,EAAM,IAErBK,EAAWH,EACXI,EAAUF,EAEdxmB,QAAQC,IAAI,sBAAuBwmB,EAAU,WAAYC,EAAS,OAAQQ,EAAK,OAAQE,GACnFF,GAAOT,GAAYW,GAAOV,IAC1B1mB,QAAQC,IAAI,iBACZknB,MACAE,EAEUI,EAAK,IACXJ,EAAMI,EAAK,IAGnB3D,EAAQ,UAAMoD,EAAN,YAAaC,EAAb,YAAoBC,EAApB,YAA2BC,GACnCJ,EAAkBD,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,uBAGzExJ,EAAkB,EAAKonB,aAAcwF,EAAcA,EAAe,IAGtE,IAAItC,EAAe,EAAKC,kBACxB,EAAK9C,oBAAsB,IAAIxrB,MAAM,EAAKmrB,aAAa/qB,QAAQ0tB,KAAK,GAAGrmB,KAAI,SAAC0G,EAAGjO,GAC3E,OAAIA,IAAMmuB,EAjhCE,kBAmhCL,UACRxF,KAAK,KACR,EAAKjP,KAAKjT,QAAQonB,QAAQ,CACtBjwB,EAAG,EAAKutB,MACRttB,EAAG,EAAKutB,MACRC,iBAAkB,EAAKA,iBACvBC,oBAAqB,EAAKA,0BAC3BrtB,EAAW,EAAKf,MAAMmL,kBAAkBgF,oBAE3C,EAAKmS,SAASzC,iBACd,EAAK7f,MAAMkX,OAAOC,iBA1hCH,EA6hCnB+X,SAAW,SAACnd,GACR,IAAIge,EAAkB,EAAKd,mBAAmBld,GAC9C,GAAKge,EAAL,CAGA,IAMeuD,EAAQtD,EAAKC,EAAKC,EAAKC,EALlCX,EADWO,EAAgBN,cACV7f,MAAM,KACvB8f,EAAKC,SAASH,EAAM,IACpBqB,EAAKlB,SAASH,EAAM,IACpBI,EAAKD,SAASH,EAAM,IACpBsB,EAAKnB,SAASH,EAAM,IAGpB+D,EAAe1C,EAAK,EACpB2C,EAAc,EAAKzF,aAAawF,EAAe,GAKnD,GAJoB,OAAhBC,IACAA,EAAc,EAAKxzB,MAAM+H,MAAMwL,QAAQigB,IAGvCA,EAoBA,OAlBAF,EADYE,EAAY/D,cACL7f,MAAM,KACzBogB,EAAML,SAAS2D,EAAO,IACtBrD,EAAMN,SAAS2D,EAAO,IACtBpD,EAAMP,SAAS2D,EAAO,IACtBnD,EAAMR,SAAS2D,EAAO,IAEtBE,EAAYpD,YAAZ,UACOV,EADP,YACaO,EAAM,EADnB,YACwBL,EADxB,YAC8BO,EAAM,GAC9B,EAAKnwB,MAAMmL,kBAAkBgF,oBAEnC4f,EAAgBK,YAAhB,UACOJ,EADP,YACca,EAAK,EADnB,YACwBX,EADxB,YAC+BY,EAAK,GAC9B,EAAK9wB,MAAMmL,kBAAkBgF,oBAEnCxJ,EAAkB,EAAKonB,aAAcwF,EAAcA,EAAe,GAElE,EAAKjR,SAASzC,sBACd,EAAK7f,MAAMkX,OAAOC,eAKF,OAAhBqc,IACAzD,EAAgBK,YAAhB,UACOV,EADP,YACamB,EAAK,EADlB,YACuBjB,EADvB,YAC6BkB,EAAK,GAC5B,EAAK9wB,MAAMmL,kBAAkBgF,oBACnC,EAAK2d,aAAaxhB,SAAQ,SAAA+jB,GAEtB,IAAInD,GADJmD,EAAoB,EAAKrwB,MAAM+H,MAAMwL,QAAQ8c,IACZZ,cAC7BD,EAAQtC,EAAStd,MAAM,KACvB0gB,EAAMX,SAASH,EAAM,IACrBe,EAAMZ,SAASH,EAAM,IACrBgB,EAAMb,SAASH,EAAM,IACrBiB,EAAMd,SAASH,EAAM,IAKrBc,GAHWZ,GAGQc,GAFTZ,IAIVa,MADAF,EAGUO,EAAK,IACXP,EAAMO,EAAK,IAGnB5D,EAAQ,UAAMoD,EAAN,YAAaC,EAAb,YAAoBC,EAApB,YAA2BC,GACnCJ,EAAkBD,YAAYlD,EAAU,EAAKltB,MAAMmL,kBAAkBgF,uBAGzExJ,EAAkB,EAAKonB,aAAcwF,EAAcA,EAAe,IAGtE,IAAItC,EAAe,EAAKC,kBACxB,EAAK9C,oBAAsB,IAAIxrB,MAAM,EAAKmrB,aAAa/qB,QAAQ0tB,KAAK,GAAGrmB,KAAI,SAAC0G,EAAGjO,GAC3E,OAAIA,IAAMmuB,EA5mCE,kBA8mCL,UACRxF,KAAK,KACR,EAAKjP,KAAKjT,QAAQonB,QAAQ,CACtBjwB,EAAG,EAAKutB,MACRttB,EAAG,EAAKutB,MACRC,iBAAkB,EAAKA,iBACvBC,oBAAqB,EAAKA,0BAC3BrtB,EAAW,EAAKf,MAAMmL,kBAAkBgF,oBAE3C,EAAKmS,SAASzC,iBACd,EAAK7f,MAAMkX,OAAOC,iBArnCH,EAwnCnBsc,gBAAkB,WACd,IAAIxC,EAAe,EAAKC,kBACxB,EAAK9C,oBAAsB,IAAIxrB,MAAM,EAAKmrB,aAAa/qB,QAAQ0tB,KAAK,GAAGrmB,KAAI,SAAC0G,EAAGjO,GAC3E,OAAIA,IAAMmuB,EA9nCE,kBAgoCRyC,GAAmB,EAAK1zB,MAAM+H,MAAMwL,QAAQ,EAAKwa,aAAajrB,KACvD,MACJ,UACR2oB,KAAK,KACR,EAAK0C,iBAAmB,IAAIvrB,MAAM,EAAKkrB,aAAa9qB,QAAQ0tB,KAAK,GAAGrmB,KAAI,SAAC0G,EAAGjO,GACxE,OAAI4wB,GAAmB,EAAK1zB,MAAM+H,MAAMwL,QAAQ,EAAKua,aAAahrB,KACvD,MACJ,UACR2oB,KAAK,KACR,EAAKjP,KAAKjT,QAAQonB,QAAQ,CACtBjwB,EAAG,EAAKutB,MACRttB,EAAG,EAAKutB,MACRC,iBAAkB,EAAKA,iBACvBC,oBAAqB,EAAKA,0BAC3BrtB,EAAW,EAAKf,MAAMmL,kBAAkBgF,qBA3oC5B,EA8oCnBwjB,oBAAsB,WAClB,OAAO,GA/oCQ,EAkpCnBC,uBAAyB,SAAC9e,EAAK+e,EAAMC,EAAcC,EAAgBC,GAC3DH,UACO,EAAKI,SAEhBhxB,OAAOuR,OAAOM,EAAIvK,cAAc+B,SAAQ,SAAA4nB,GAChCA,GAAYA,EAAS3qB,SAAWyqB,IAAaE,EAAS3qB,QAAQvJ,MAAM+R,IACpEmiB,EAAS3qB,QAAQsW,gBAAe,GAAM,GAAO,OAxpCtC,EA6pCnBgD,qBAAuB,WACnB,OACI,oCACI,kBAAC,EAAD,CACI5Y,KAAM,EAAKqY,WAEf,kBAAC,GAAD,CACIrY,KAAM,EAAKqY,SACXE,eAAgB,EAAKA,iBAEzB,kBAAC,GAAD,CACIvY,KAAM,EAAKqY,aAxqCR,EA8qCnB6R,kBAAoB,SAAC/yB,EAAMC,EAAKqD,EAAOC,GACnC,IAAIuvB,EAAWjxB,OAAOuR,OAAO,EAAK8N,SAAS/X,cAAcqC,MAAK,SAAAsnB,GAC1D,GAAIA,GAAYA,EAAS3qB,SACjB2qB,EAAS3qB,QAAQ6qB,eAAehzB,EAAMC,GACtC,OAAO,KAiBnB,OAbK6yB,IACDA,EAAWjxB,OAAOuR,OAAO,EAAK8N,SAAS/X,cAAcqC,MAAK,SAAAsnB,GACtD,GAAIA,GAAYA,EAAS3qB,SACjB2qB,EAAS3qB,QAAQ6qB,eAAehzB,EAAOsD,EAAOrD,EAAMsD,GACpD,OAAO,MAIlBuvB,IACDA,EAAWjxB,OAAOuR,OAAO,EAAK8N,SAAS/X,cAAcqC,MAAK,SAAAsnB,GACtD,OAAQA,GAAYA,EAAS3qB,YAG9B2qB,EAAS3qB,SAnsCD,EAssCnBmZ,aAAe,SAAC0J,GACZ,IAAIpB,EAEJ5hB,QAAQC,IAAI,eAAgB+iB,EAAgBpB,WACxCoB,EAAgBpB,YAChBA,EAAY1E,GAAW8F,EAAgBpB,UAAWoB,EAAgBpB,UAAU3D,MAAO,EAAKrnB,MAAMsH,SAElG0lB,GAAc,kBAAmBhC,GAAa,QAC1C,EAAK1I,SAAU,OAAGvhB,GAAW,IA9sClB,EAitCnBsrB,kBAAoB,WAEhB,OAAO,yBACH/W,UAAU,0BACVtP,MAAO,MAntCX,EAAK/D,MAAQ,GAIb,EAAKksB,iBAAmB,OACxB,EAAKC,oBAVW,kBAWhB,EAAKH,MAAQ,EACb,EAAKC,MAAQ,EAEb,EAAKJ,aAAe,GACpB,EAAKC,aAAe,CAAC,MAErB,EAAKvR,KAAOvV,IAAM+R,YAElB,EAAKqV,eAEL,EAAKR,qBAAqB7tB,GAlBX,E,kGA6tCf,IAAIq0B,EAAYvoB,KAAK9L,MAAMqL,SAE3B,OADAjC,QAAQC,IAAI,YAAagrB,GAErB,kBAAC,GAAD,eAAYxqB,QAAQ,WACR0Y,OAASzW,KAAK9L,MAAMuiB,OAAqBzW,KAAK0Q,KAAO1Q,KAAK9L,MAAMuiB,OAAnCzW,KAAK0Q,KAClCoQ,aAAc9gB,MACVA,KAAK9L,MAHrB,CAIYsV,UAAU,YACVtP,MAAO,CACHtB,MAAM,GAAD,OAAK2vB,EAAL,MACL1vB,OAAQ,OACRmY,UAAW,uCACX7G,QAAS,gBAEba,KAAMhL,KAAKmW,UACXqS,QAAM,EACNnB,YAAa,GACboB,KAAMzoB,KACN6nB,oBAAqB7nB,KAAK6nB,oBAC1B/Q,aAAc9W,KAAK8W,aACnBgR,uBAAwB9nB,KAAK8nB,8B,GAlvCf7R,KAyvCtC6L,GAASxR,aAAe,CACpBvS,QAAS,Y,ICpwCQ2qB,G,uKAEb,OACI,kBAAC,GAAD,eACI3qB,QAAQ,kBACJiC,KAAK9L,MAFb,CAGI8W,KAAMhL,KAAKmW,UACXjc,MAAO,CACHtB,MAAO,OACPC,OAAQ,e,GATgBod,I,SCDxC0S,GAAkB,CAEtBA,WAA6B,SAACz0B,GAC1B,OAAO,MAGXy0B,gBAAkC,SAACxqB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC1CoN,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MACX2I,EAAkBC,KAAWC,OAAO,CACpCC,OAAQ,CACJC,cAAe,CACX,KAAM,CACFnY,QAAS,GAEb,OAAQ,CACJA,QAAS,IAGjBoY,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgBG,SAG/BJ,eAAiC,SAACxqB,MAInBwqB,MC9BXQ,GAAoB,CAExBA,WAA+B,SAACj1B,GAAW,IAClCsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,aAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,cACA,gBACA,iBACA,mBACA,qBAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,cAA2BnB,IAE7CzV,MAAO6S,EAAQ2J,WAAa,gBAC5B9J,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,QAO9B+W,gBAAoC,SAAChrB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC5C2J,EAA8B3J,EAA9B2J,UAAWyD,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MAC1B1D,EAAYA,GAAa,gBAEzB,IAAIyM,EAAgB,GACpBA,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,gCAAD,OACD2L,EAAUvW,SAAS,UAAW,IAAKuW,EAAUvW,SAAS,QAAS,QAASuW,EAAUvW,SAAS,SACvF,OAAQ,IAFX,aAIDuW,EAAUvW,SAAS,UAAW,IAAKuW,EAAUvW,SAAS,OAAQ,QAASuW,EAAUvW,SAAS,UACtF,OAAQ,IALX,SAQbgjB,EAAc,OAAS,CACnBnY,QAAS,IACTD,UAAU,sCAAD,OACL2L,EAAUvW,SAAS,UAAW,IAAKuW,EAAUvW,SAAS,QAAS,KAAMuW,EAAUvW,SAAS,SACpF,MAAO,IAFN,aAILuW,EAAUvW,SAAS,UAAW,IAAKuW,EAAUvW,SAAS,OAAQ,KAAMuW,EAAUvW,SAAS,UACnF,MAAO,IALN,SAQbgjB,EAAc,OAAS,CACnBnY,QAAS,IACTD,UAAU,sCAAD,OACL2L,EAAUvW,SAAS,UAAW,IAAKuW,EAAUvW,SAAS,QAAS,MAAOuW,EAAUvW,SAAS,SACrF,KAAM,IAFL,aAILuW,EAAUvW,SAAS,UAAW,IAAKuW,EAAUvW,SAAS,OAAQ,MAAOuW,EAAUvW,SAAS,UACpF,KAAM,IALL,SAQbgjB,EAAc,OAAS,CACnBnY,QAAS,EACTD,UAAU,yCAAD,OACL2L,EAAUvW,SAAS,UAAW,IAAKuW,EAAUvW,SAAS,QAAS,KAAMuW,EAAUvW,SAAS,SACpF,MAAO,IAFN,aAILuW,EAAUvW,SAAS,UAAW,IAAKuW,EAAUvW,SAAS,OAAQ,KAAMuW,EAAUvW,SAAS,UACnF,MAAO,IALN,SAQbgjB,EAAc,OAAS,CACnBnY,QAAS,EACTD,UAAU,yCAAD,OACL2L,EAAUvW,SAAS,UAAW,IAAKuW,EAAUvW,SAAS,QAAS,MAAOuW,EAAUvW,SAAS,SACrF,KAAM,IAFL,aAILuW,EAAUvW,SAAS,UAAW,IAAKuW,EAAUvW,SAAS,OAAQ,MAAOuW,EAAUvW,SAAS,UACpF,KAAM,IALL,SAQbgjB,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAU,oBAGd,IAAIgY,EAAkBC,KAAWC,OAAO,CACpCM,SAAU,CACNJ,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgBQ,WAG/BD,eAAmC,SAAChrB,MAIrBgrB,MCxGXE,GAAmB,CAEvBA,WAA8B,SAACn1B,GAAW,IACjCsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,oCACI,yBAAKpJ,UAAU,qBACX,uBAAGA,UAAU,0BAAb,SAEA,kBAAC,GAAD,CACIA,UAAU,cACV8T,MAAO1K,EAAQ0K,OAAS,GACxB9Q,SAAU,SAACwS,GACPtI,EAAe,GAAD,OAAIC,EAAJ,UAAuBqI,OAKjD,kBAAC,GAAD,MAEA,yBAAKxV,UAAU,qBACX,uBAAGA,UAAU,0BAAb,YAEA,yBACIA,UAAU,eAEV,kBAAC,GAAD,CACIA,UAAU,oBACV8C,IAAK,EACLC,IAAK,IACLxM,MAAO6S,EAAQ8L,UAAY,IAC3B/H,UAAS,UAAKA,EAAL,aACTD,eAAgBA,QAQxC2S,gBAAmC,SAAClrB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC3C8L,EAAoC9L,EAApC8L,SAAUpB,EAA0B1K,EAA1B0K,MAAO0C,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MAEhC3C,EAAQA,GAAS,GAEjB,IAAI0L,EAAgB,GAChBM,IAJJ5K,EAAWA,GAAY,KAIDrS,KAAKkd,IAAIjM,EAAQjR,KAAKmR,GAAK,KAC7CgM,EAAK9K,EAAWrS,KAAKod,IAAInM,EAAQjR,KAAKmR,GAAK,KAC/CwL,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,eAAD,OAAiB0Y,EAAjB,eAA0BE,EAA1B,WAEbR,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAU,sBAGd,IAAIgY,EAAkBC,KAAWC,OAAO,CACpCY,QAAS,CACLV,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgBc,UAG/BL,eAAkC,SAAClrB,MAIpBkrB,MC5EXM,GAAmB,CAEvBA,WAA8B,SAACz1B,GAAW,IACjCsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,aAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,WACA,YACA,cACA,cAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,cAA2BnB,IAE7CzV,MAAO6S,EAAQ2J,WAAa,YAC5B9J,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,QAO9BuX,gBAAmC,SAACxrB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC3C2J,EAA8B3J,EAA9B2J,UAAWyD,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MAC1B1D,EAAYA,GAAa,YAEzB,IAAIyM,EAAgB,GACpBA,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,eAAD,OACD2L,EAAUvW,SAAS,QAAS,OAAQuW,EAAUvW,SAAS,SAAU,MAAO,EADvE,aAGDuW,EAAUvW,SAAS,OAAQ,OAAQuW,EAAUvW,SAAS,UAAW,MAAO,EAHvE,SAMbgjB,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAU,sBAGd,IAAIgY,EAAkBC,KAAWC,OAAO,CACpCc,QAAS,CACLZ,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgBgB,UAG/BD,eAAkC,SAACxrB,MAIpBwrB,MC/DXE,GAAoB,CAExBA,WAA+B,SAAC31B,GAAW,IAClCsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,SAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,OACA,SACA,QAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,UAAuBnB,IAEzCzV,MAAO6S,EAAQkX,OAAS,OACxBrX,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,QAO9ByX,gBAAoC,SAAC1rB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC5CkX,EAA0BlX,EAA1BkX,MAAO9J,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MACtB6J,EAAQA,GAAS,OAEjB,IAAId,EAAgB,GACpBA,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,WAAD,OACS,SAAVkZ,EAAkB,MAAiB,WAAVA,EAAoB,MAAO,MADnD,aAGS,SAAVA,EAAkB,MAAiB,WAAVA,EAAoB,MAAO,MAHnD,SAMbd,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAW,kBAGf,IAAIgY,EAAkBC,KAAWC,OAAO,CACpCiB,SAAU,CACNf,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgBmB,WAG/BF,eAAmC,SAAC1rB,MAIrB0rB,MC5DXG,GAAkB,CAEtBA,WAA6B,SAAC91B,GAAW,IAChCsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,oCACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,SAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,OACA,SACA,QAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,UAAuBnB,IAEzCzV,MAAO6S,EAAQkX,OAAS,OACxBrX,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,OAKtB,kBAAC,GAAD,MAEA,yBAAK5I,UAAU,2BACX,uBAAGA,UAAU,0BAAb,aAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,YACA,qBAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,cAA2BnB,IAE7CzV,MAAO6S,EAAQ2J,WAAa,YAC5B9J,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,OAKtB,kBAAC,GAAD,MAEA,yBAAK5I,UAAU,2BACX,uBAAGA,UAAU,0BAAb,eAEA,yBACIA,UAAU,eAEV,kBAAC,GAAD,CACIA,UAAU,oBACV8C,IAAK,EACLC,IAAK,GACLmM,KAAM,GACN3Y,MAAO6S,EAAQqX,QAAU,EACzBtT,UAAS,UAAKA,EAAL,WACTD,eAAgBA,QAQxCsT,gBAAkC,SAAC7rB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC1CkX,EAA6ClX,EAA7CkX,MAAOvN,EAAsC3J,EAAtC2J,UAAW0N,EAA2BrX,EAA3BqX,OAAQjK,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MACzC6J,EAAQA,GAAS,OAIjB,IAAId,EAAgB,GAChBkB,EAAc,KAHlBD,EAASA,GAAU,IAG6B,eAJhD1N,EAAYA,GAAa,cAIqC,EAAG,GACjEyM,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,UAAD,OAAYsZ,EAAZ,wBACS,SAAVJ,EAAkB,MAAiB,WAAVA,EAAoB,MAAO,IADnD,aAGS,SAAVA,EAAkB,MAAiB,WAAVA,EAAoB,MAAO,IAHnD,SAMbd,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAW,+BAGf,IAAIgY,EAAkBC,KAAWC,OAAO,CACpCqB,OAAQ,CACJnB,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgBuB,SAG/BH,eAAiC,SAAC7rB,MAInB6rB,MC9GXI,GAAiB,CAErBA,WAA4B,SAACl2B,GAAW,IAC/BsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,aAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,WACA,YACA,cACA,aACA,gBACA,iBACA,mBACA,qBAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,cAA2BnB,IAE7CzV,MAAO6S,EAAQ2J,WAAa,gBAC5B9J,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,QAO9BgY,gBAAiC,SAACjsB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC1CrP,EAAOpF,EAAKoE,SAAQ,GACpB8nB,EAAa,CACbzxB,MAAOuF,EAAKjK,MAAMmL,kBAAkBgD,iBACpCxJ,OAAQsF,EAAKjK,MAAMmL,kBAAkBiD,mBAEpCia,EAA8B3J,EAA9B2J,UAAWyD,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MAC1B1D,EAAYA,GAAa,gBAEzB,IAAIyM,EAAgB,GACpBA,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,eAAD,OACD2L,EAAUvW,SAAS,QAAnB,WAAgCzC,EAAKjO,KAArC,MAA+CinB,EAAUvW,SAAS,SAAnB,UAC3CqkB,EAAWzxB,MAAQ2K,EAAKjO,KAAOiO,EAAK3K,MADO,MAEzC,EAHL,aAKD2jB,EAAUvW,SAAS,OAAnB,WAA+BzC,EAAKhO,IAApC,MAA6CgnB,EAAUvW,SAAS,UAAnB,UACzCqkB,EAAWxxB,OAAS0K,EAAKhO,IAAMgO,EAAK1K,OADK,MAEvC,EAPL,SAUbmwB,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAU,sBAGd,IAAIgY,EAAkBC,KAAWC,OAAO,CACpCwB,MAAO,CACHtB,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgB0B,QAG/BF,eAAgC,SAACjsB,MAIlBisB,MC5EXG,GAAkB,CAEtBA,WAA6B,SAACr2B,GAAW,IAChCsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,aAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,YACA,cAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,cAA2BnB,IAE7CzV,MAAO6S,EAAQ2J,WAAa,YAC5B9J,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,QAO9BmY,gBAAkC,SAACpsB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC3CrP,EAAOpF,EAAKoE,SAAQ,GACpBioB,EAAWrsB,EAAKjK,MAAMmf,QAAQ5V,QAAQ8E,SAAQ,GAC9C8nB,EAAa,CACbzxB,MAAOuF,EAAKjK,MAAMmL,kBAAkBgD,iBACpCxJ,OAAQsF,EAAKjK,MAAMmL,kBAAkBiD,mBAEpCia,EAA8B3J,EAA9B2J,UAAWyD,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MAC1B1D,EAAYA,GAAa,YAEzB,IAAIyM,EAAgB,GACpBA,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,eAAD,OACL2L,EAAUvW,SAAS,QAAnB,YACMzC,EAAKjO,KAAOk1B,EAASl1B,MAD3B,gBAGA+0B,EAAWzxB,OAAS2K,EAAKjO,KAAOk1B,EAASl1B,MAAQiO,EAAK3K,MAHtD,MADK,8BAOL2jB,EAAUvW,SAAS,QAAS,MAAO,KAP9B,UAUbgjB,EAAc,OAAS,CACnBnY,QAAS,GACTD,UAAU,eAAD,OACL2L,EAAUvW,SAAS,QAAnB,UAC+B,KAA7BzC,EAAKjO,KAAOk1B,EAASl1B,MADvB,gBAGgE,IAA/D+0B,EAAWzxB,OAAS2K,EAAKjO,KAAOk1B,EAASl1B,MAAQiO,EAAK3K,OAHvD,MADK,cAMC,IAND,wBAOL2jB,EAAUvW,SAAS,QAAe,IAAL,GAAU,GAAK,GAPvC,UAUbgjB,EAAc,OAAS,CACnBnY,QAAS,GACTD,UAAU,eAAD,OACL2L,EAAUvW,SAAS,QAAnB,UAC+B,KAA7BzC,EAAKjO,KAAOk1B,EAASl1B,MADvB,gBAGgE,IAA/D+0B,EAAWzxB,OAAS2K,EAAKjO,KAAOk1B,EAASl1B,MAAQiO,EAAK3K,OAHvD,MADK,cAMC,IAAI,IANL,wBAOL2jB,EAAUvW,SAAS,SAAS,GAAW,GAPlC,UAUbgjB,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAU,oCAGd,IAAIgY,EAAkBC,KAAWC,OAAO,CACpC2B,OAAQ,CACJzB,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,KACdyK,wBAAyB,YAKjC,OAAO/xB,aAAIiwB,EAAgB6B,SAG/BF,eAAiC,SAACpsB,MAInBosB,MChGXI,GAAiB,CAErBA,WAA4B,SAACz2B,GAAW,IAC/BsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,aAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,YACA,cAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,cAA2BnB,IAE7CzV,MAAO6S,EAAQ2J,WAAa,aAC5B9J,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,QAO9BuY,gBAAiC,SAACxsB,GAAwB,IAAlByU,EAAiB,uDAAP,GACzC2J,EAA8B3J,EAA9B2J,UAAWyD,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MAC1B1D,EAAYA,GAAa,aAEzB,IAAIyM,EAAgB,GACpBA,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,uCAAD,OACL2L,EAAUvW,SAAS,QAAU,IAAM,GAD9B,8BAIbgjB,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAU,6DAGd,IAAIgY,EAAkBC,KAAWC,OAAO,CACpC8B,MAAO,CACH5B,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,KACdyK,wBAAyB,YAKjC,OAAO/xB,aAAIiwB,EAAgBgC,QAG/BD,eAAgC,SAACxsB,MAIlBwsB,MC5DXE,GAAkB,CAEtBA,WAA6B,SAAC32B,GAAW,IAChCsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,SAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,OACA,SACA,QAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,UAAuBnB,IAEzCzV,MAAO6S,EAAQkX,OAAS,OACxBrX,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,QAO9ByY,gBAAkC,SAAC1sB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC1CkX,EAA0BlX,EAA1BkX,MAAO9J,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MACtB6J,EAAQA,GAAS,OAEjB,IAAId,EAAgB,GACpBA,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,iCAAD,OACK,SAAVkZ,EAAkB,IAAe,WAAVA,EAAoB,IAAK,IAD3C,QAIbd,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAU,oCAGd,IAAIgY,EAAkBC,KAAWC,OAAO,CACpCgC,OAAQ,CACJ9B,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgBkC,SAG/BD,eAAiC,SAAC1sB,MAInB0sB,MC5DXE,GAAkB,CAEtBA,WAA6B,SAAC72B,GAAW,IAChCsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,aAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,WACA,YACA,cACA,cAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,cAA2BnB,IAE7CzV,MAAO6S,EAAQ2J,WAAa,YAC5B9J,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,QAO9B2Y,gBAAkC,SAAC5sB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC1C2J,EAA8B3J,EAA9B2J,UAAWyD,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MAC1B1D,EAAYA,GAAa,YAEzB,IAAIyM,EAAgB,GACpBA,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,8BAAD,OACD2L,EAAUvW,SAAS,QAAS,GAAIuW,EAAUvW,SAAS,UAAW,GAAI,EADjE,wBAGDuW,EAAUvW,SAAS,QAAS,GAAIuW,EAAUvW,SAAS,UAAW,GAAI,EAHjE,QAKTglB,gBAAgB,GAAD,OACXzO,EAAUvW,SAAS,QAAS,OAAQuW,EAAUvW,SAAS,SAAU,QAAS,SAD/D,YAGXuW,EAAUvW,SAAS,OAAQ,MAAOuW,EAAUvW,SAAS,UAAW,SAAU,SAH/D,OAMnBgjB,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAU,iDACVoa,gBAAgB,GAAD,OACXzO,EAAUvW,SAAS,QAAS,OAAQuW,EAAUvW,SAAS,SAAU,QAAS,SAD/D,YAGXuW,EAAUvW,SAAS,OAAQ,MAAOuW,EAAUvW,SAAS,UAAW,SAAU,SAH/D,OAOnB,IAAI4iB,EAAkBC,KAAWC,OAAO,CACpCmC,OAAQ,CACJjC,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgBqC,SAG/BF,eAAiC,SAAC5sB,MAInB4sB,MCzEXG,GAAkB,CAEtBA,WAA6B,SAACh3B,GAAW,IAChCsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,aAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,WACA,YACA,cACA,cAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,cAA2BnB,IAE7CzV,MAAO6S,EAAQ2J,WAAa,WAC5B9J,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,QAO9B8Y,gBAAkC,SAAC/sB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC1C2J,EAA8B3J,EAA9B2J,UAAWyD,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MAC1B1D,EAAYA,GAAa,WAEzB,IAAIyM,EAAgB,GACpBA,EAAc,MAAQ,CAClBnY,QAAS,EACTD,UAAU,8BAAD,OACD2L,EAAUvW,SAAS,SAAU,GAAIuW,EAAUvW,SAAS,SAAU,GAAI,EADjE,wBAGDuW,EAAUvW,SAAS,OAAQ,GAAIuW,EAAUvW,SAAS,WAAY,GAAI,EAHjE,SAMbgjB,EAAc,QAAU,CACpBnY,QAAS,EACTD,UAAU,kDAGd,IAAIgY,EAAkBC,KAAWC,OAAO,CACpCqC,OAAQ,CACJnC,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgBuC,SAG/BD,eAAiC,SAAC/sB,MAInB+sB,MC/DXE,GAAkB,CAEtBA,WAA6B,SAACl3B,GAAW,IAChCsrB,EAAwCtrB,EAAxCsrB,UAAW9I,EAA6BxiB,EAA7BwiB,eAAgBC,EAAaziB,EAAbyiB,UAC5B/D,EAAU4M,EAAU5M,SAAW,GACnC,OACI,yBAAKpJ,UAAU,2BACX,uBAAGA,UAAU,0BAAb,aAEA,kBAAC,GAAD,CACIoJ,QAAS,CACL,cACA,WACA,YACA,cACA,cAEJpG,SAAU,SAACgJ,GACPkB,EAAe,GAAD,OAAIC,EAAJ,cAA2BnB,IAE7CzV,MAAO6S,EAAQ2J,WAAa,cAC5B9J,UAAW,CACP7Z,MAAO,OACPwZ,SAAU,QAO9BgZ,gBAAkC,SAACjtB,GAAwB,IAAlByU,EAAiB,uDAAP,GAC1C2J,EAA8B3J,EAA9B2J,UAAWyD,EAAmBpN,EAAnBoN,SAAUC,EAASrN,EAATqN,MAGtB+I,EAAgB,GACpB,OAHAzM,EAAYA,GAAa,eAIrB,IAAK,cACDyM,EAAc,MAAQ,CAClBnY,QAAS,EACTwa,SAAS,+CAEb,MACJ,IAAK,YACDrC,EAAc,MAAQ,CAClBnY,QAAS,EACTwa,SAAS,qCAEb,MACJ,IAAK,aACDrC,EAAc,MAAQ,CAClBnY,QAAS,EACTwa,SAAS,iDAEb,MACJ,IAAK,WACDrC,EAAc,MAAQ,CAClBnY,QAAS,EACTwa,SAAS,qCAEb,MACJ,IAAK,cACDrC,EAAc,MAAQ,CAClBnY,QAAS,EACTwa,SAAS,iDAIrBrC,EAAc,QAAU,CACpBnY,QAAS,EACTwa,SAAS,2CAGb,IAAIzC,EAAkBC,KAAWC,OAAO,CACpCwC,OAAQ,CACJtC,cAAeA,EACfC,kBAAkB,GAAD,OAAKjJ,GAAY,EAAjB,KACjBkJ,eAAe,GAAD,OAAKjJ,GAAS,EAAd,QAKtB,OAAOtnB,aAAIiwB,EAAgB0C,SAG/BF,eAAiC,SAACjtB,MAInBitB,MCvEXG,GAAoB,GAYTA,MAEJxL,GAAoB,G,oBC5BVyL,G,kDACjB,WAAYt3B,GAAQ,IAAD,8BACf,cAAMA,IAeVu3B,WAAa,SAACtqB,EAAOokB,GACJ,EAAKrxB,MAAbu0B,KACApD,gBAAgBlkB,EAAO,UAAWoqB,QAAmBt2B,EAAWswB,IAlBtD,EAqBnBmG,UAAY,SAACvqB,GACT,OAAQ3I,SAAS8gB,eAAT,8BAA+CnY,KAtBxC,EAyBnBwqB,WAAa,WACTtzB,aAAa,EAAKuzB,eAClB,EAAKA,cAAgBxzB,YAAW,WACvB,EAAKiG,QAIV,EAAKwtB,cAHDxzB,aAAa,EAAKuzB,iBAIvB,MA9BH,EAAKz1B,MAAQ,CACT0W,cAAU5X,GAJC,E,gEASf+K,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAuBR,IAAD,OACD6jB,EAAQliB,KAAK9L,MAAbguB,KACL,MACQ,CACI,IAAIprB,MAAMorB,EAAKrtB,EAAI,GAAG+vB,KAAK,GAAGrmB,KAAI,SAAC0G,EAAG9D,GAClC,IAAIjH,EAAQ,CACRknB,SAAS,KAAD,OAAOjgB,EAAP,cAAkBA,EAAQ,IAE5B,IAAVA,IAAgBjH,EAAMwR,YAAc,SAC1B,IAAVvK,IAAgBjH,EAAMknB,SAAW,WAEjC,IAAI0K,EAAmB1e,IACnB,sCACU,IAAVjM,GAAe,4CAEnB,OAAO,yBACHqI,UAAU,+CACVtP,MAAOA,EACPyP,IAAKxI,GAEL,yBACIqI,UAAWsiB,EACXpiB,QAAS,SAAC7G,GACN,EAAK4oB,WAAWtqB,GAAO,KAG3B,yBAAK7K,WAAW,EAAOsC,MAAO,EAAGC,OAAQ,EAAGgS,IAAKC,EAAQ,YAIrE,IAAIhU,MAAMorB,EAAKttB,EAAI,GAAGgwB,KAAK,GAAGrmB,KAAI,SAAC0G,EAAG9D,GAClC,IAAIjH,EAAQ,CACRknB,SAAS,GAAD,OAAKjgB,EAAL,cAAgBA,EAAQ,EAAxB,MACR0R,cAAe,QAET,IAAV1R,IAAgBjH,EAAMqR,UAAY,SACxB,IAAVpK,IAAgBjH,EAAMknB,SAAW,WAEjC,IAAI0K,EAAmB1e,IACnB,gDACU,IAAVjM,GAAe,sDAEnB,OAAO,yBACHqI,UAAU,yDACVtP,MAAOA,EACPyP,IAAKxI,EACL8E,GAAE,8BAAyB9E,GAC3BuI,QAAS,SAAC7G,GACN,EAAK1G,SAAS,CAAC0Q,SAAUhK,EAAEiK,mBAG7B,EAAK4e,UAAUvqB,IAAU,EAAKwqB,aAChC,kBAAC,KAAD,CAAQ9d,KAAMta,QAAQiF,SAAS8gB,eAAT,8BAA+CnY,KAC7D0L,SACI,WACI,OAAO,EAAK6e,UAAUvqB,IAG9B4qB,UAAW,CACPC,gBAAiB,CACbC,SAAS,EACTC,kBAAmB,gBAEvBC,KAAM,CACFF,SAAS,KAIrB,yBACIziB,UAAWsiB,EACXpiB,QAAS,SAAC7G,GACN,EAAK4oB,WAAWtqB,GAAO,KAG3B,yBAAK7K,WAAW,EAAOkT,UAAU,YAAY5Q,MAAO,EAAGC,OAAQ,EAAGgS,IAAKC,EAAQ,kB,GA/G5D3P,IAAM+E,WCJxCksB,G,uKACN,IAAD,EACWpsB,KAAK9L,MAAjBqP,EADC,EACDA,KAAM0C,EADL,EACKA,GACX,OACI,yBACIuD,UAAU,eACVtP,MAAO,CACH3E,IAAKgO,EAAMA,EAAKhO,IAAK,EACrBD,KAAMiO,EAAMA,EAAKjO,KAAM,EACvBsD,MAAO2K,EAAMA,EAAK3K,MAAO,EACzBC,OAAQ0K,EAAMA,EAAK8oB,cAAgB9oB,EAAK1K,OAAQ,GAEpDoN,GAAE,UAAKA,EAAL,uB,GAZyC9K,IAAM+E,WCD5CosB,G,uKAEb,OACI,yBACIpyB,MAAO,CACHpB,SAAU,WACVvD,IAAK,EACLD,KAAM,EACNsD,MAAO,OACPC,OAAQ,OACRmR,UAAW,aACXuiB,UAAWvsB,KAAK9L,MAAMoW,QAAQ/U,IAAnB,UAA4ByK,KAAK9L,MAAMoW,QAAQ/U,IAA/C,gCAAmF,QAC9Fi3B,WAAYxsB,KAAK9L,MAAMoW,QAAQhV,KAAnB,UAA6B0K,KAAK9L,MAAMoW,QAAQhV,KAAhD,iCAAsF,QAClGm3B,aAAczsB,KAAK9L,MAAMoW,QAAQ7U,OAAnB,UAA+BuK,KAAK9L,MAAMoW,QAAQ7U,OAAlD,iCAA0F,QACxGi3B,YAAa1sB,KAAK9L,MAAMoW,QAAQ9U,MAAnB,UAA8BwK,KAAK9L,MAAMoW,QAAQ9U,MAAjD,iCAAwF,e,GAd3E2F,IAAM+E,WCA/BysB,G,uKAEb,OACI,yBACIzyB,MAAO,CACHpB,SAAU,WACVvD,IAAK,EACLD,KAAM,EACNsD,MAAO,OACPC,OAAQ,OACRmR,UAAW,aACXgS,OAAQ,uC,GAXuB7gB,IAAM+E,WCQpC0sB,G,kDACjB,WAAY14B,GAAQ,IAAD,8BACf,cAAMA,IAoDVoU,UAAY,WAAO,IAAD,EACmD,EAAKpU,MAAjEqU,EADS,EACTA,YAAa2Z,EADJ,EACIA,KAAMhsB,EADV,EACUA,aAAc22B,EADxB,EACwBA,SAAUtpB,EADlC,EACkCA,KAAM+G,EADxC,EACwCA,QACtD,EAAK9B,WAAarR,OAAOM,KAAK8Q,GAC9B,EAAKE,cAAgBtR,OAAOuR,OAAOH,GAAahK,KAAI,SAAAoK,GAChD,MAAO,CACHC,EAAGD,EAAE1K,OACLjH,EAAG2R,EAAEE,MAAM3U,MAAM+R,OAGzB,EAAKic,KAAOjuB,EAAYiuB,GACxB,EAAKhsB,aAAejC,EAAYiC,GAChC,EAAK22B,SAAW54B,EAAY44B,GAC5B,EAAKtpB,KAAOtP,EAAYsP,GACxB,EAAK+G,QAAUrW,EAAYqW,IAlEZ,EAqEnBwiB,qBAAuB,SAAC5K,EAAM2K,EAAUviB,GAC/B4X,IACDA,EAAO,EAAKhuB,MAAMguB,MAF0B,MAIN,EAAKhuB,MAA1C64B,EAJ2C,EAI3CA,6BAA8B/jB,EAJa,EAIbA,IAEnC,GAAI+jB,EACAA,EAA6B,eAAM/jB,EAAKkZ,EAAM2K,OADlD,CAKA,IAAI3yB,EAAQ,CACRtB,MAAQi0B,GAA+B,SAAnBA,EAASj0B,MAAoB,OAAQ,OACzDC,OAASg0B,GAAgC,SAApBA,EAASh0B,OAAqB,OAC/CmQ,EAAIhF,YAAY,oBAAsB,OAC1CmG,QAAS,OACTrR,SAAU,WACVkR,UAAW,aACXqY,iBAAkBH,EAAKG,iBACvBC,oBAAqBJ,EAAKI,qBAG1BhY,IACIA,EAAQ/U,MAAK2E,EAAM8yB,WAAa1iB,EAAQ/U,KACxC+U,EAAQhV,OAAM4E,EAAM+yB,YAAc3iB,EAAQhV,MAC1CgV,EAAQ7U,SAAQyE,EAAMgzB,cAAgB5iB,EAAQ7U,QAC9C6U,EAAQ9U,QAAO0E,EAAMizB,aAAe7iB,EAAQ9U,QAkBpD,IAAIyE,EAAYzB,SAAS8gB,eAAe,EAAK8T,uBAExCnzB,EAGDD,EAAYC,EAAWC,EAAO,EAAKkzB,uBAFnC5yB,EAAYN,EAAO,EAAKkzB,sBAAuB,EAAKA,yBApHzC,EA0HnBC,oBAAsB,SAACn3B,EAAc22B,GACjC,IAAI5yB,EAAYzB,SAAS8gB,eAAe,EAAKgU,sBAExCrzB,EAIDD,EAAYC,EAAW,EAAKszB,iBAAiBr3B,EAAc22B,GAAW,EAAKS,sBAH3E9yB,EAAY,EAAK+yB,iBAAiBr3B,EAAc22B,GAAW,EAAKS,qBAC1D,EAAKA,sBAKf,IAAIE,EAAuB,GACvBC,EAAyB,EAAKH,qBAAuB,sBAC/B,SAAtBp3B,EAAaic,OAAiBqb,EAAqBrjB,QAAU,QAEjE,IAAIujB,EAAkBl1B,SAAS8gB,eAAemU,GAEzCC,EAGD1zB,EAAY0zB,EAAiBF,EAAsBC,GAFnDjzB,EAAYgzB,EAAsBC,EAAwBA,IA3I/C,EAiJnBF,iBAAmB,SAACr3B,EAAc22B,GAC9B,IAAI3yB,EAAQ,CACRiQ,QAAS,OACTkY,iBAAkB,MAClBC,oBAAqB,MACrBxpB,SAAU,WACVvD,IAAK,EACLE,OAAQ,EACRH,KAAM,EACNE,MAAO,GAuBX,OApBIq3B,GAA+B,SAAnBA,EAASj0B,QACrBsB,EAAMpB,SAAW,kBACVoB,EAAM5E,YACN4E,EAAM1E,aACN0E,EAAM3E,WACN2E,EAAMzE,QAGbo3B,GAAgC,SAApBA,EAASh0B,SACrBqB,EAAMpB,SAAW,kBACVoB,EAAM5E,YACN4E,EAAM1E,aACN0E,EAAM3E,WACN2E,EAAMzE,QAIZS,IACDA,EAAe,EAAKhC,MAAMgC,cAEzBA,EAGsB,SAAvBA,EAAaC,MACN+D,EAGgB,SAAvBhE,EAAaC,OACb+D,EAAMoa,UAAY,SAClBpa,EAAM9D,UAAY,SACX8D,IAGgB,WAAvBhE,EAAaC,QACb+D,EAAMoa,UAAYpe,EAAaoe,UAAiC,SAAtBpe,EAAaic,KAAiB,OAAS,SAAW,SAC5FjY,EAAM9D,UAAYF,EAAaE,UAAiC,SAAtBF,EAAaic,KAAiB,OAAS,SAAW,UAGtE,SAAtBjc,EAAaic,OAEbjY,EAAM5B,eAAiB,OACvB4B,EAAMnB,SAAW,uBACjBmB,EAAM,sBAAwB,QAG3BA,GAxBIA,GAlLI,EA6MnBozB,mBAAqB,WACjB,MAAM,kBAAN,OAAyB,EAAKp5B,MAAM+R,KA9MrB,EAiNnBmnB,oBAAsB,WAClB,MAAM,mBAAN,OAA0B,EAAKl5B,MAAM+R,KAlNtB,EAqNnB0nB,kBAAoB,WAChB,EAAKC,cAAcnwB,SAAW,EAAKmwB,cAAcnwB,QAAQouB,cACzD,EAAKgC,eAAepwB,SAAW,EAAKowB,eAAepwB,QAAQouB,eAvN5C,EA0NnBiC,aAAe,WACX,IAAI53B,EAAe,EAAKhC,MAAMgC,aAE9B,MAA2B,WAAvBA,EAAaC,QAGc,WAA3BD,EAAaoe,WAEc,WAA3Bpe,EAAaE,YAhOjB,EAAKw3B,cAAgBzyB,IAAM+R,YAC3B,EAAK2gB,eAAiB1yB,IAAM+R,YAHb,E,gEAOflN,KAAKqtB,oBAAoBrtB,KAAK9L,MAAMgC,aAAc8J,KAAK9L,MAAM24B,UAC7D7sB,KAAK8sB,qBAAqB9sB,KAAK9L,MAAMguB,KAAMliB,KAAK9L,MAAM24B,SAAU7sB,KAAK9L,MAAMoW,W,4CAGzDpB,EAAWC,EAAWC,GACxC,OAAK/R,EAAa2I,KAAKwI,WAAYrR,OAAOM,KAAKyR,EAAUX,eACpDlR,EAAa2I,KAAKkiB,KAAMhZ,EAAUgZ,OAClC7qB,EAAa2I,KAAKuD,KAAM2F,EAAU3F,OACnCvD,KAAK9L,MAAM65B,iBAAmB7kB,EAAU6kB,gBACxC/tB,KAAK9L,MAAM85B,WAAa9kB,EAAU8kB,UACjC32B,EAAa2I,KAAKsK,QAASpB,EAAUoB,UACrCjT,EAAagS,KAAKC,UAAUtJ,KAAKyI,eAC9BY,KAAKC,UAAUnS,OAAOuR,OAAOQ,EAAUX,aAAahK,KAAI,SAAAoK,GACpD,MAAO,CACHC,EAAGD,EAAE1K,OACLjH,EAAG2R,EAAEE,MAAM3U,MAAM+R,SAkB5B5O,EAAa2I,KAAK9J,aAAcgT,EAAUhT,eAI1CmB,EAAa2I,KAAK6sB,SAAU3jB,EAAU2jB,YACvC7sB,KAAKqtB,oBAAoBnkB,EAAUhT,aAAcgT,EAAU2jB,UAC3D7sB,KAAK8sB,qBAAqB5jB,EAAUgZ,KAAMhZ,EAAU2jB,SAAU3jB,EAAUoB,UACjE,IANPtK,KAAKqtB,oBAAoBnkB,EAAUhT,aAAcgT,EAAU2jB,WACpD,IAhBFx1B,EAAa2I,KAAK9J,aAAcgT,EAAUhT,eAC3C8J,KAAKqtB,oBAAoBnkB,EAAUhT,aAAcgT,EAAU2jB,UAE1Dx1B,EAAa2I,KAAKkiB,KAAMhZ,EAAUgZ,OAAU7qB,EAAa2I,KAAKsK,QAASpB,EAAUoB,UAClFtK,KAAK8sB,qBAAqB5jB,EAAUgZ,KAAMhZ,EAAU2jB,SAAU3jB,EAAUoB,SAEvEjT,EAAa2I,KAAK6sB,SAAU3jB,EAAU2jB,YACvC7sB,KAAKqtB,oBAAoBnkB,EAAUhT,aAAcgT,EAAU2jB,UAC3D7sB,KAAK8sB,qBAAqB5jB,EAAUgZ,KAAMhZ,EAAU2jB,SAAU3jB,EAAUoB,WAGrE,K,+BAoMX,IAAKtK,KAAK9L,MAAM+5B,KACZ,OAAO,KACXjuB,KAAKsI,YAHC,MAI8EtI,KAAK9L,MAApFqU,EAJC,EAIDA,YAAatC,EAJZ,EAIYA,GAAIic,EAJhB,EAIgBA,KAAMsG,EAJtB,EAIsBA,OAAQC,EAJ9B,EAI8BA,KAAMllB,EAJpC,EAIoCA,KAAM0F,EAJ1C,EAI0CA,oBAAqBD,EAJ/D,EAI+DA,IAAKxN,EAJpE,EAIoEA,OAEtE0yB,EAAkB9gB,IAClBpN,KAAKstB,sBAELxB,EAAmB1e,IACnBpN,KAAKotB,uBAGT,OAAK5E,EAuDO,yBACIviB,GAAE,UAAKA,EAAL,cACFuD,UAAWsiB,EACXte,IAAKxN,KAAK9L,MAAMi6B,cAGZnuB,KAAK9L,MAAMoW,UAAYtK,KAAK9L,MAAM65B,gBAAkB/tB,KAAK9L,MAAM85B,WAC/D,kBAAC,GAAD,CAAkB1jB,QAAStK,KAAK9L,MAAMoW,UAGtCtK,KAAK9L,MAAM65B,gBACX,kBAAC,GAAD,MAEJ,kBAAC,EAAD,CACIxlB,YAAaA,EACbU,oBAAqBA,EACrBD,IAAKA,IAILxN,GACA,kBAAC,GAAD,CACI0mB,KAAMA,EACNuG,KAAMA,EACNjtB,OAAQA,EACRgS,IAAKxN,KAAK4tB,gBAIlB,kBAAC,GAAD,CACIpgB,IAAKxN,KAAK6tB,eACVtqB,KAAMA,EACN0C,GAAIA,KAtFhBjG,KAAK8tB,eAED,yBACI7nB,GAAE,UAAKA,EAAL,aACFuD,UAAW0kB,EACX1gB,IAAKxN,KAAK9L,MAAMk6B,YAChBC,SAAUruB,KAAK9L,MAAMm6B,UAErB,yBACIpoB,GAAE,UAAKA,EAAL,cACFuD,UAAWsiB,EACXte,IAAKxN,KAAK9L,MAAMi6B,cAGZnuB,KAAK9L,MAAMoW,UAAYtK,KAAK9L,MAAM65B,gBAAkB/tB,KAAK9L,MAAM85B,WAC/D,kBAAC,GAAD,CAAkB1jB,QAAStK,KAAK9L,MAAMoW,UAGtCtK,KAAK9L,MAAM65B,gBACX,kBAAC,GAAD,MAEJ,kBAAC,EAAD,CACIxlB,YAAaA,EACbU,oBAAqBA,EACrBD,IAAKA,MAOjB,yBACI/C,GAAE,UAAKA,EAAL,cACFuD,UAAWsiB,EACXte,IAAKxN,KAAK9L,MAAMi6B,cAGZnuB,KAAK9L,MAAMoW,UAAYtK,KAAK9L,MAAM65B,gBAAkB/tB,KAAK9L,MAAM85B,WAC/D,kBAAC,GAAD,CAAkB1jB,QAAStK,KAAK9L,MAAMoW,UAGtCtK,KAAK9L,MAAM65B,gBACX,kBAAC,GAAD,MAEJ,kBAAC,EAAD,CACIxlB,YAAaA,EACbU,oBAAqBA,EACrBD,IAAKA,S,GAtSe7N,IAAM+E,WCPjCouB,G,uKACN,IACFrZ,EAAUjV,KAAK9L,MAAf+gB,OAEL,OAAKA,EAID,yBACIzL,UAAU,YACVvD,GAAIgP,EAAOhP,KALR,S,GALoB9K,IAAM+E,WCCxBquB,G,4MACjB1R,YAAc,SAACha,GACP,EAAK2rB,YAAY3rB,KACjBA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK6L,WAAY,EACjBl7B,OAAO0R,iBAAiB,cAAe,EAAK8X,aAC5CxpB,OAAO0R,iBAAiB,YAAa,EAAK+X,a,EAIlDuR,YAAc,SAAC3rB,GACX,MAAsB,UAAlBA,EAAE8rB,aAAwC,IAAb9rB,EAAE+rB,Q,EAOvC5R,YAAc,SAACna,GACN,EAAK6rB,YAEV7rB,EAAE4rB,kBAEG,EAAKI,OAIN,EAAKC,OAAOjsB,IAHZ,EAAKgsB,QAAS,EACd,EAAKE,YAAYlsB,M,EAMzBoa,UAAY,SAACpa,GACJ,EAAK6rB,YAGV,EAAKA,WAAY,EAEb,EAAKG,SACLhsB,EAAE4rB,kBACF,EAAKO,WAAWnsB,IAGpB,EAAKgsB,QAAS,EAEdr7B,OAAO2R,oBAAoB,cAAe,EAAK6X,aAC/CxpB,OAAO2R,oBAAoB,YAAa,EAAK8X,a,EAGjD8R,YAAc,SAAClsB,GACX,EAAKiE,SAAW,CACZmoB,WAAYpsB,EAAEqa,QACdgS,WAAYrsB,EAAEsa,SAElB,EAAKiJ,MAAQ,CACTxxB,EAAG,EACHC,EAAG,GAEP,EAAKX,MAAMi7B,cAActsB,EAAG,EAAK3O,MAAMod,KAAM,EAAK8U,Q,EAGtD0I,OAAS,SAACjsB,GACN,EAAKujB,MAAMxxB,GAAMiO,EAAEqa,QAAU,EAAKpW,SAASmoB,WAC3C,EAAK7I,MAAMvxB,GAAMgO,EAAEsa,QAAU,EAAKrW,SAASooB,WAC3C,EAAKh7B,MAAMoM,SAASuC,EAAG,EAAK3O,MAAMod,KAAM,EAAK8U,OAC7C,EAAKtf,SAASmoB,WAAapsB,EAAEqa,QAC7B,EAAKpW,SAASooB,WAAarsB,EAAEsa,S,EAGjC6R,WAAa,SAACnsB,GACV,EAAKujB,MAAMxxB,GAAMiO,EAAEqa,QAAU,EAAKpW,SAASmoB,WAC3C,EAAK7I,MAAMvxB,GAAMgO,EAAEsa,QAAU,EAAKrW,SAASooB,WAC3C,EAAKh7B,MAAMk7B,aAAavsB,EAAG,EAAK3O,MAAMod,KAAM,EAAK8U,Q,EAGrDiJ,SAAW,WACP,OAAkC,IAA3B,EAAKn7B,MAAMod,KAAKpa,Q,uDAGvB,IAAIiW,EAAUC,IAAW,cAAD,OACNpN,KAAK9L,MAAMod,KADL,cAEpB,mBAEApX,EAAQ,GAIZ,OAHI8F,KAAK9L,MAAMo7B,gBACXp1B,EAAM2Y,cAAgB,QAGtB,yBACI5M,GAAIjG,KAAK9L,MAAM+R,GACfspB,cAAevvB,KAAK6c,YACpBrT,UAAW2D,EACXjT,MAAOA,Q,GA5FqBiB,IAAM+E,WCA7BsvB,G,kDACjB,WAAYt7B,GAAQ,uCACVA,G,qDAEC,IAAD,SAC2B8L,KAAK9L,MAAjCqB,EADC,EACDA,IAAKD,EADJ,EACIA,KAAMsD,EADV,EACUA,MAAOC,EADjB,EACiBA,OACvB,YAAY5D,IAARM,QAA8BN,IAATK,QAAgCL,IAAV2D,QAAkC3D,IAAX4D,EAC3D,KAGH,yBACIoN,GAAG,uBACH/L,MAAO,CACHtB,MAAOA,EACPC,OAAQ,QAOZ2Q,UAAU,wBAGNxJ,KAAK9L,MAAMu7B,MAAMlxB,KAAI,SAAC+S,EAAMnQ,GACxB,OAAO,kBAAC,GAAD,CACHwI,IAAKxI,EACLmQ,KAAMA,EACN6d,cAAe,EAAKj7B,MAAMi7B,cAC1B7uB,SAAU,EAAKpM,MAAMoM,SACrB8uB,aAAc,EAAKl7B,MAAMk7B,aACzBE,cAAe,EAAKp7B,MAAMo7B,wB,GA/BRn0B,IAAM+E,WCFnCwvB,GACjB,WAAYnhB,EAAOohB,GAAkB,IAAD,gCAOpC1gB,YAAc,SAAC2gB,GACN,EAAKC,UAAU/uB,MAAK,SAAAgvB,GAAO,OAAOA,IAAMF,MACzC,EAAKC,UAAU5uB,KAAK2uB,IATQ,KAapCG,QAAUp4B,GAAiB,SAACqT,GACxB,EAAK6kB,UAAUrvB,SAAQ,SAAAsvB,GACnBA,EAAE,EAAKvhB,MAAOvD,QAEnB,IAjBiC,KAmBpCkE,eAAiB,SAAC0gB,GACd,IAAIzuB,EAAQ,EAAK0uB,UAAUzuB,WAAU,SAAA0uB,GAAO,OAAOA,IAAMF,KACrDzuB,GAAS,GACT,EAAK0uB,UAAUxuB,OAAOF,EAAO,IArBjCnB,KAAKuO,MAAQA,EACbvO,KAAK6vB,UAAY,GACbF,GACA3vB,KAAK6vB,UAAU5uB,KAAK0uB,ICP5BK,GAAc,CACdC,cAAe,GACfC,aAAc,GACdC,cAAe,GACfC,WAAY,GACZC,YAAa,GACbC,aAAc,GACdC,cAAe,IAGfC,GAAa,WACbR,GAAYC,cAAgB,GAC5BD,GAAYE,aAAe,GAC3BF,GAAYG,cAAgB,GAC5BH,GAAYI,WAAa,GACzBJ,GAAYK,YAAc,GAC1BL,GAAYM,aAAe,GAC3BN,GAAYO,cAAgB,UACrBP,GAAYS,mBAGZC,GAAwB,SAACzqB,EAAImT,GASpC,OARK4W,GAAYS,oBACbT,GAAYS,mBAAoB,EAChCj9B,OAAOwgB,sBAAsBwc,KAG5BR,GAAYC,cAAchqB,KAC3B+pB,GAAYC,cAAchqB,GAAMmT,EAAKuC,yBAElCqU,GAAYC,cAAchqB,IAG1B0qB,GAAuB,SAAC1qB,EAAImT,GASnC,OARK4W,GAAYS,oBACbT,GAAYS,mBAAoB,EAChCj9B,OAAOwgB,sBAAsBwc,KAG5BR,GAAYE,aAAajqB,KAC1B+pB,GAAYE,aAAajqB,GAAMmT,EAAKhgB,aAEjC42B,GAAYE,aAAajqB,IAGzB2qB,GAAwB,SAAC3qB,EAAImT,GASpC,OARK4W,GAAYS,oBACbT,GAAYS,mBAAoB,EAChCj9B,OAAOwgB,sBAAsBwc,KAG5BR,GAAYG,cAAclqB,KAC3B+pB,GAAYG,cAAclqB,GAAMmT,EAAKiT,cAElC2D,GAAYG,cAAclqB,IAG1B4qB,GAAqB,SAAC5qB,EAAImT,GASjC,OARK4W,GAAYS,oBACbT,GAAYS,mBAAoB,EAChCj9B,OAAOwgB,sBAAsBwc,KAG5BR,GAAYI,WAAWnqB,KACxB+pB,GAAYI,WAAWnqB,GAAMmT,EAAK0X,WAE/Bd,GAAYI,WAAWnqB,IAGvB8qB,GAAsB,SAAC9qB,EAAImT,GASlC,OARK4W,GAAYS,oBACbT,GAAYS,mBAAoB,EAChCj9B,OAAOwgB,sBAAsBwc,KAG5BR,GAAYK,YAAYpqB,KACzB+pB,GAAYK,YAAYpqB,GAAMmT,EAAK4X,YAEhChB,GAAYK,YAAYpqB,IAGxBgrB,GAAuB,SAAChrB,EAAImT,GASnC,OARK4W,GAAYS,oBACbT,GAAYS,mBAAoB,EAChCj9B,OAAOwgB,sBAAsBwc,KAG5BR,GAAYM,aAAarqB,KAC1B+pB,GAAYM,aAAarqB,GAAMmT,EAAK8X,aAEjClB,GAAYM,aAAarqB,IAGzBkrB,GAAwB,SAAClrB,EAAImT,GASpC,OARK4W,GAAYS,oBACbT,GAAYS,mBAAoB,EAChCj9B,OAAOwgB,sBAAsBwc,KAG5BR,GAAYO,cAActqB,KAC3B+pB,GAAYO,cAActqB,GAAMmT,EAAKgY,cAElCpB,GAAYO,cAActqB,IAG1BorB,GAAa,SAACprB,EAAI6W,EAAM/N,GAC/BihB,GAAYjhB,GAAU9I,GAAM6W,GCzGXwU,G,uKAEb,OAAKtxB,KAAK9L,MAAMgW,SAIR,yBACIV,UAAWxJ,KAAK9L,MAAMsV,UACtBvD,GAAIjG,KAAK9L,MAAM+R,GACfuH,IAAKxN,KAAK9L,MAAMq9B,cAEfvxB,KAAK9L,MAAM+L,UARbD,KAAK9L,MAAM+L,a,GAHe9E,IAAM+E,W,qBCC9BsxB,G,uKACN,IAAD,OACN,OAAKxxB,KAAK9L,MAAMsrB,UAIR,kBAAC,KAAD,CACIiS,mBAAiB,EAACjlB,SAAU,SAACgJ,GACrB,EAAKthB,MAAMsrB,UAAU5oB,MACpB,EAAK1C,MAAMsrB,UAAU5M,SAAW,EAAK1e,MAAMsrB,UAAU5M,QAAQsN,MAC3D1K,GACF,EAAKthB,MAAMsH,QAAU,EAAKtH,MAAMorB,eAAc,GAI/C,EAAKprB,MAAMsrB,UAAU5oB,MAAQ4e,IAC5B,EAAKthB,MAAMsH,QAAU,EAAKtH,MAAMorB,iBAEzCoS,YAAa1xB,KAAK9L,MAAMkX,OAAOumB,qBAC/BC,OAAQ5xB,KAAK9L,MAAMsrB,UAAU5oB,OAASoJ,KAAK9L,MAAM29B,WAEhD7xB,KAAK9L,MAAM+L,UAlBbD,KAAK9L,MAAM+L,a,GAHuB9E,IAAM+E,WCCtC4xB,G,4MACjBC,QAAU,WAAO,IAAD,EACU,EAAK79B,MAAM89B,eAA5Bp5B,EADO,EACPA,MAAOC,EADA,EACAA,OAEZ,MAAM,GAAN,OAAUD,EAAO,MAAQA,EAAMoa,QAAQ,GAAGif,WAAa,KAAM,GAA7D,qBACEp5B,EAAQ,MAAQA,EAAOma,QAAQ,GAAGif,WAAiB,K,uDAE9C,IAAD,EACOjyB,KAAK9L,MAAM89B,eAAnBp9B,EADC,EACDA,EAAGC,EADF,EACEA,EACR,OACI,yBACIoR,GAAG,qBACHuD,UAAU,0BAEV,uBACItP,MAAO,CACHpB,SAAU,WACVvD,IAAKV,EACLS,KAAMV,EACNc,OAAQ,EACRkb,UAAW,oCACXwB,SAAU,SACVzE,MAAO,UACPmD,gBAAiB,UACjBxG,QAAS,EACTP,aAAc,EACdnR,MAAO,gBAGVoH,KAAK+xB,gB,GA7BsB52B,IAAM+E,WCyBjCgyB,G,kDACjB,WAAah+B,GAAQ,IAAD,8BAChB,cAAMA,IA+CVi+B,aAAe,SAACC,GACZ,IAAIruB,EAAW,EAAKsuB,gBAAgBD,GACpC,GAAIruB,EAAU,CAAC,IAAD,uBAFW9L,EAEX,iCAFWA,EAEX,kBACV,OAAO8L,EAAQ,WAAR,0BAAkB9L,IAG7B,OAAO,GAtDS,EAyDpBq6B,YAAc,SAACF,GACX,OAAO,EAAKC,gBAAgBD,IA1DZ,EA6DpBG,KAAO,WACH,EAAKC,YAAa,EAElB,EAAKvyB,SAAW,GAEhB,IAAIwyB,EAAa,EAAKC,iBAAiB,GAAGD,WACtCE,EAAgB,EAAKz+B,MAAMC,SAASw+B,cACxC,GAAKA,EAkGE,CACH,IAAIC,EAAqBz7B,OAAOuR,OAAOiqB,GACvCC,EAAmB5tB,MAAK,SAACC,EAAGlE,GACxB,OAAIkE,EAAEhH,OAAS8C,EAAE9C,OACN,EACAgH,EAAEhH,SAAW8C,EAAE9C,OAEf,GAEH,KAEZ20B,EAAmBpyB,SAAQ,SAAApC,GACvB,IAAIy0B,EAAQz0B,EAAUlK,MAAM+R,GACxB4C,EAAQ,EAAKiqB,kBAAkB10B,EAAWmtB,IAC9C,EAAKtrB,SAAS7B,EAAUlK,MAAM+R,IAAM,CAChC4C,MAAOA,EACP5K,OAAQG,EAAUH,QAGlB40B,IAAUz0B,EAAUlK,MAAM+R,YACnB0sB,EAAcE,GACrBF,EAAcv0B,EAAUlK,MAAM+R,IAAM7H,UAvH5B,CA2BhB,GA1BA,EAAKlK,MAAMC,SAASw+B,cAAgB,GACpCA,EAAgB,EAAKz+B,MAAMC,SAASw+B,cAEpCx3B,IAAM43B,SAASx0B,IAAI,EAAKrK,MAAM+L,UAAU,SAAC4I,EAAO7R,GAC5C,GAAI6R,EAAO,CACP,IAAI3U,EAAK,eAAO2U,EAAM3U,OAClB8+B,EAAe,EAAKF,kBAAkB,CACtC/0B,QAAS8K,EAAMlO,KAAK/D,KAAOiS,EAAMlO,KAAK/D,KAAOiS,EAAMlO,KACnDzG,MAAOA,GACRq3B,IACH,EAAKtrB,SAAS/L,EAAM+R,IAAM,CAEtB4C,MAAOmqB,EACP/0B,OAAQw0B,EAAa,GAGzBE,EAAcz+B,EAAM+R,IAAM,CACtBlI,QAAS8K,EAAMlO,KAAK/D,KAAOiS,EAAMlO,KAAK/D,KAAOiS,EAAMlO,KACnDzG,MAAO,EAAK8J,cAAc9J,GAC1B+J,OAAQ,EAAKgC,SAAS/L,EAAM+R,IAAIhI,QAGpCw0B,QAIJ,EAAKQ,YAAa,CAClB,IAAIC,EAAS,EAAKD,cAClB,GAAIC,aAAkBp8B,MAClBo8B,EAAO1yB,SAAQ,SAAAmI,GACX,GAAIA,EAAG,CACH,IAAIzU,EAAK,eAAOyU,EAAEzU,OACd8+B,EAAe,EAAKF,kBAAkB,CACtC/0B,QAAS4K,EAAEhO,KAAK/D,KAAM+R,EAAEhO,KAAK/D,KAAM+R,EAAEhO,KACrCzG,MAAOA,GACRq3B,IACH,EAAKtrB,SAAS/L,EAAM+R,IAAM,CACtB4C,MAAOmqB,EACP/0B,OAAQw0B,EAAa,GAGzBE,EAAcz+B,EAAM+R,IAAM,CACtBlI,QAAS4K,EAAEhO,KAAK/D,KAAM+R,EAAEhO,KAAK/D,KAAM+R,EAAEhO,KACrCzG,MAAO,EAAK8J,cAAc9J,GAC1B+J,OAAQ,EAAKgC,SAAS/L,EAAM+R,IAAIhI,QAGpCw0B,aAIR,GAAIS,EAAQ,CACR,IAAIh/B,EAAK,eAAOg/B,EAAOh/B,OACnB8+B,EAAe,EAAKF,kBAAkB,CACtC/0B,QAASm1B,EAAOv4B,KAAK/D,KAAOs8B,EAAOv4B,KAAK/D,KAAOs8B,EAAOv4B,KACtDzG,MAAOA,GACRq3B,IACH,EAAKtrB,SAAS/L,EAAM+R,IAAM,CACtB4C,MAAOmqB,EACP/0B,OAAQw0B,EAAa,GAGzBE,EAAcz+B,EAAM+R,IAAM,CACtBlI,QAASm1B,EAAOv4B,KAAK/D,KAAOs8B,EAAOv4B,KAAK/D,KAAOs8B,EAAOv4B,KACtDzG,MAAO,EAAK8J,cAAc9J,GAC1B+J,OAAQ,EAAKgC,SAAS/L,EAAM+R,IAAIhI,QAGpCw0B,KAKZ,GAAI,EAAKv+B,MAAMi/B,aACE,EAAKj/B,MAAMi/B,eACjB3yB,SAAQ,SAAAmI,GACX,GAAIA,EAAG,CACH,IAAIzU,EAAK,eAAOyU,EAAEzU,OACd8+B,EAAe,EAAKF,kBAAkB,CACtC/0B,QAAS4K,EAAE5K,QACX7J,MAAOA,GACRq3B,IACH,EAAKtrB,SAAS/L,EAAM+R,IAAM,CACtB4C,MAAOmqB,EACP/0B,OAAQw0B,EAAa,GAGzBE,EAAcz+B,EAAM+R,IAAM,CACtBlI,QAAS4K,EAAE5K,QACX7J,MAAO,EAAK8J,cAAc9J,GAC1B+J,OAAQ,EAAKgC,SAAS/L,EAAM+R,IAAIhI,QAGpCw0B,QA8BhB,EAAKW,cAhMW,EAmMpBA,WAAa,WACT,IAAI,EAAKjB,aAAa,cAAtB,CAGA,IAAIj4B,EAAQ,EAAKoK,qBAAqB,UAAY,EAAK+uB,kBAEvD,EAAKtd,kBAAkB,EAAKzR,qBAAqB,kBAAcrP,EAC3D,EAAKf,MAAMmL,kBAAkBgF,oBACjC,EAAK8G,iBAAiB,EAAK7G,qBAAqB,kBAC5C,EAAKpQ,MAAMitB,qBACX,EAAKjtB,MAAMmL,kBAAkBgF,oBAE7B,EAAKnQ,MAAMs0B,SACXtuB,EAAMtB,MAAQ,EAAK1E,MAAMgG,MAAMtB,OAEnC,EAAK06B,SAASp5B,OAAOjF,EACjB,EAAKf,MAAMmL,kBAAkBgF,oBACjC,EAAKwgB,QAAQ,EAAKvgB,qBAAqB,SAAW,EAAKpQ,MAAMq/B,iBAAat+B,EACtE,EAAKf,MAAMmL,kBAAkBgF,sBArNjB,EAwNpBgvB,gBAAkB,WACd,IAAIn5B,EAAK,2BAAQ,EAAKhG,MAAMs/B,cAAiB,EAAKt/B,MAAMgG,OASxD,MAPsD,YAAjD,EAAKhG,MAAMitB,qBAAsBzV,cACjC,EAAKpN,gBAAgB,cAChB,EAAKpK,MAAMmzB,cAAiB,EAAKnzB,MAAMmzB,YAAYrhB,SAAS,MACzD,EAAK9R,MAAMmzB,YAAYrhB,SAAS,QACzC9L,EAAMtB,MAAQ,QAGXsB,GAlOS,EAqOpBu5B,YAAc,WACV,GAAI,EAAKnB,YAAY,eACjB,OAAO,EAAKH,aAAa,eAG7B,IAAI5uB,EAAO,EAAKhB,SAAQ,GAAO,GAAM,GACrC,EAAKmxB,YAEL,IAAI9nB,EAAY,EAAKC,eACrB,EAAKC,SAASF,EAAUrW,IAAKqW,EAAUtW,KAAMsW,EAAUnW,OAAQmW,EAAUpW,MACrE,EAAK8I,gBAAgB,YACrB,EAAKpK,MAAMmL,kBAAkBgF,oBAAoB,GAErD/G,QAAQC,IAAI,iCAAkC,EAAKrJ,MAAM+R,IACrD,EAAK/R,MAAMy/B,eACXr2B,QAAQC,IAAI,8CAA+C,EAAKrJ,MAAM+R,IACtE,EAAK/R,MAAMy/B,aAAapwB,EAAK3K,MAA7B,gBAA0C,IAG9C,EAAK1E,MAAM0/B,gBAAkB,EAAK1/B,MAAM0/B,eAAX,gBAC7B,EAAKC,YAAc,EAAK3/B,MAAMsH,OAAOwa,gBAzPrB,EA4PpBqK,kBAAoB,WAChB,OAAO,EAAKnsB,MAAMmsB,mBAAqB,EAAKnsB,MAAMmsB,qBA7PlC,EAgQpByT,mBAAqB,WACjB,OAAO,EAAK5/B,MAAM4/B,oBAAsB,EAAK5/B,MAAM4/B,sBAjQnC,EAoQpBC,YAAc,WACV,OAAI,EAAKzB,YAAY,gBACV,EAAKH,aAAa,gBAtQb,EA4QpBuB,UAAYM,KAAS,WACjB,IAAI,EAAK7B,aAAa,aAAtB,CAIA,IAAIrV,EAAO,EAAKmX,mBAAqB,EAAK1xB,SAAQ,GAC9Cua,GACA,EAAK5oB,MAAMggC,KAAKC,QAAQ,EAAKjgC,MAAM+R,GAC/B,CACI,CACIA,GAAI,EAAK/R,MAAM+R,GACflG,MAAO+c,EAAKvnB,IACZ6+B,GAAItX,EAAKxnB,KACT++B,GAAIvX,EAAKxnB,KAAOwnB,EAAKlkB,QAExB,EAAK1E,MAAMs0B,QAAU,CAClBviB,GAAI,EAAK/R,MAAM+R,GACflG,MAAO+c,EAAKvnB,IAAMunB,EAAKjkB,OAAS,EAChCu7B,GAAItX,EAAKxnB,KACT++B,GAAIvX,EAAKxnB,KAAOwnB,EAAKlkB,OAEzB,CACIqN,GAAI,EAAK/R,MAAM+R,GACflG,MAAO+c,EAAKvnB,IAAMunB,EAAKjkB,OACvBu7B,GAAItX,EAAKxnB,KACT++B,GAAIvX,EAAKxnB,KAAOwnB,EAAKlkB,QAG7B,CACI,CACIqN,GAAI,EAAK/R,MAAM+R,GACflG,MAAO+c,EAAKxnB,KACZ8+B,GAAItX,EAAKvnB,IACT8+B,GAAIvX,EAAKvnB,IAAMunB,EAAKjkB,SAEvB,EAAK3E,MAAMs0B,QAAU,CAClBviB,GAAI,EAAK/R,MAAM+R,GACflG,MAAO+c,EAAKxnB,KAAOwnB,EAAKlkB,MAAQ,EAChCw7B,GAAItX,EAAKvnB,IACT8+B,GAAIvX,EAAKvnB,IAAMunB,EAAKjkB,QAExB,CACIoN,GAAI,EAAK/R,MAAM+R,GACflG,MAAO+c,EAAKxnB,KAAOwnB,EAAKlkB,MACxBw7B,GAAItX,EAAKvnB,IACT8+B,GAAIvX,EAAKvnB,IAAMunB,EAAKjkB,SAG5B,EAAKkN,gBAIb5O,OAAOuR,OAAO,EAAKjK,cAAc+B,SAAQ,SAAA4nB,GACjCA,GAAYA,EAAS3qB,SACrB2qB,EAAS3qB,QAAQi2B,kBAG1B,KArUiB,EAuUpB3tB,aAAe,WAIX,IAHA,IAAIuuB,EAAY,GACZxuB,EAAS,EAAK5R,MAAM4R,OAEjBA,GACHwuB,EAAUrzB,KAAK6E,EAAO5R,MAAM+R,IAC5BH,EAASA,EAAO5R,MAAM4R,OAG1B,OAAOwuB,GAhVS,EAmVpBC,iBAAmB,WACf,IAAIC,EAAQ,CACRC,YAAa,GACbC,UAAW,GACXzuB,GAAI,EAAK/R,MAAM+R,IAEnB,EAAKC,eAEL,IADA,IAAIyuB,EAAW,EAAKzgC,MAAM2T,SAAS+sB,YAAY,EAAK1gC,MAAM+R,IAClDjP,EAAI,EAAGA,EAAI29B,EAASz9B,OAAQF,IAAK,CAErC,IAAI8lB,EAAO,EAAK0J,gBAAgBmO,EAAS39B,GAAIA,EAAG,IAArC,gBACN8lB,GAKL0X,EAAME,UAAUzzB,KAAK,CACjBgF,GAAI,EAAK/R,MAAM+R,GACflG,MAAO+c,EAAKxnB,MAAS0B,IAAM29B,EAASz9B,OAAS,EAAI,EAAG,GACpDk9B,GAAItX,EAAKvnB,IACT8+B,GAAIvX,EAAKvnB,IAAMunB,EAAKjkB,SAI5B,IADA,IAAIg8B,EAAW,EAAK3gC,MAAM2T,SAASye,YAAY,EAAKpyB,MAAM+R,IAClDjP,EAAI,EAAGA,EAAI69B,EAAS39B,OAAQF,IAAK,CAErC,IAAI8lB,EAAO,EAAK0J,gBAAgBqO,EAAS79B,GAAIA,EAAG,IAArC,gBACN8lB,GAKL0X,EAAMC,YAAYxzB,KAAK,CACnBgF,GAAI,EAAK/R,MAAM+R,GACflG,MAAO+c,EAAKvnB,KAAQyB,IAAM69B,EAAS39B,OAAS,EAAI,EAAG,GACnDk9B,GAAItX,EAAKxnB,KACT++B,GAAIvX,EAAKxnB,KAAOwnB,EAAKlkB,QAI7B,MAAO,CAAC47B,IA3XQ,EA8XpB1B,kBAAoB,SAAC10B,EAAWknB,EAAmBwP,EAAOlB,EAAgBmB,GACtE,IAAI,EAAK5C,aAAa,YAAa/zB,EAAWknB,EAAmBwP,EAAOlB,EAAgBmB,GAAxF,CAGA,IAAIh3B,EAAUK,EAAUL,QACpB7J,EAAQkK,EAAUlK,MAElBC,EAAWP,EAAaM,EAAMC,SAAU,EAAKD,MAAMmL,mBAEnDy1B,IACA5gC,EAAM+R,GAAK6uB,GACV5gC,EAAM+R,GAGP/R,EAAM+R,GAAK,EAAK/R,MAAM+H,MAAM+4B,MAAMj3B,EAAS7J,EAAM+R,IAFjD/R,EAAM+R,GAAK,EAAK/R,MAAM+H,MAAM+4B,MAAMj3B,GAItC5J,EAAS8R,GAAK/R,EAAM+R,GACf/R,EAAMC,WAAY2gC,IACnB5gC,EAAMC,SAAWA,GAErB,EAAKsK,aAAavK,EAAM+R,IAAM9K,IAAM+R,YAEhC,EAAK5O,gBAAgB,UAAWpK,EAAMC,YACtC4gC,GAAQ,GAEZ,IAAIE,EAAW,GACXl3B,EAAQ,IAAMA,EAAQ,GAAG8hB,gBACzBviB,QAAQC,IAAI,iCAAiCrJ,EAAMyR,aAAeovB,GAAK,UAAO,EAAK7gC,MAAM+R,GAAlB,kBACvEgvB,EAAQ,aACJxe,OAAQ,EAAKhY,aAAavK,EAAM+R,IAChCoN,QAAS,EAAKnf,MAAMmf,QACpBhU,kBAAmB,EAAKnL,MAAMmL,kBAC9BkI,SAAU,EAAKrT,MAAMqT,SACrBK,SAAU,EAAK1T,MAAM0T,SACrBwD,OAAQ,EAAKlX,MAAMkX,OACnB8oB,KAAM,EAAKhgC,MAAMggC,KACjBj4B,MAAO,EAAK/H,MAAM+H,MAClBi5B,MAAO,EAAKhhC,MAAMghC,MAClBC,QAAS,EAAKjhC,MAAMihC,QACpB3hC,OAAQ,EAAKU,MAAMV,OACnBgF,SAAU,EAAKtE,MAAMsE,SACrBiJ,WAAY,EAAKvN,MAAMuN,WACvByT,UAAW,EAAKhhB,MAAMghB,UACtBrN,SAAU,EAAK3T,MAAM2T,SACrButB,cAAe,EAAKlhC,MAAMkhC,cAC1BtvB,OAAO,eACPtK,OAAQ,EAAKtH,MAAMsH,OACnBo4B,eAAgBA,EAChBjuB,aAAeovB,GAAK,UAAO,EAAK7gC,MAAM+R,GAAlB,kBACjB,EAAKovB,6BAIhB,IAAIC,EAAYv3B,EAAQ,KAAOA,EAAQ,GAAG8hB,cAAeyF,EAAkBvnB,GAAUA,EAKrF,OAHIA,EAAQ,KAAOA,EAAQ,GAAG8hB,sBACnB3rB,EAAMC,SAEVgH,IAAMzC,cACT48B,EADG,2BAGIphC,GAHJ,IAICyV,IAAKzV,EAAM+R,IACRgvB,MA7bK,EAkcpB1yB,QAAU,WAA2C,IAAtBvF,EAAqB,uCAAdu4B,EAAc,uCAChD,GAAK,EAAKxY,WAAWtf,QAArB,CAGA,GAAI,EAAK0qB,WAAanrB,EAClB,OAAO/I,EAAY,EAAKk0B,UAE5B,IAAIrL,EAAOyY,EAAY,EAAKxY,WAAWtf,QAAQke,wBAC3C+U,GAAsB,EAAKx8B,MAAM+R,GAAI,EAAK8W,WAAWtf,SAErDrE,EAAc0jB,EAAKlkB,MACnByzB,EAAevP,EAAKjkB,OACpBi4B,EAAY,EACZE,EAAa,EACbE,EAAcpU,EAAKlkB,MACnBw4B,EAAetU,EAAKjkB,OACpB,EAAKu1B,YAAY3wB,UACjBrE,EAAcm8B,EAAY,EAAKnH,YAAY3wB,QAAQrE,YAC/Cu3B,GAAqB,EAAKz8B,MAAM+R,GAAI,EAAKmoB,YAAY3wB,SACzD4uB,EAAekJ,EAAY,EAAKnH,YAAY3wB,QAAQ4uB,aAChDuE,GAAsB,EAAK18B,MAAM+R,GAAI,EAAKmoB,YAAY3wB,SAC1DqzB,EAAYyE,EAAY,EAAKnH,YAAY3wB,QAAQqzB,UAC7CD,GAAmB,EAAK38B,MAAM+R,GAAI,EAAKmoB,YAAY3wB,SACvDuzB,EAAauE,EAAY,EAAKnH,YAAY3wB,QAAQuzB,WAC9CD,GAAoB,EAAK78B,MAAM+R,GAAI,EAAKmoB,YAAY3wB,SACxDyzB,EAAcqE,EAAY,EAAKnH,YAAY3wB,QAAQyzB,YAC/CD,GAAqB,EAAK/8B,MAAM+R,GAAI,EAAKmoB,YAAY3wB,SACzD2zB,EAAemE,EAAY,EAAKnH,YAAY3wB,QAAQ2zB,aAChDD,GAAsB,EAAKj9B,MAAM+R,GAAI,EAAKmoB,YAAY3wB,UAG9D,IAAI6M,EAAUrW,EAAY,EAAKqQ,qBAAqB,aAAe,GACnE,CAAC,MAAO,OAAQ,SAAU,SAAS9D,SAAQ,SAAAmJ,GACvCW,EAAQX,GAAOkF,GAAuBvE,EAAQX,GAAM,EAAf,iBAA2B,KAEpE,IAAI1O,EAAO,CACPrG,EAAGkoB,EAAKlkB,MACR/D,EAAGioB,EAAKjkB,OACRO,YAAaA,EACbizB,aAAcA,EACdyE,UAAWA,EACXE,WAAYA,EACZE,YAAaA,EACbE,aAAcA,EACd77B,IAAKunB,EAAKvnB,IACVD,KAAMwnB,EAAKxnB,KACXG,OAAQqnB,EAAKrnB,OACbD,MAAOsnB,EAAKtnB,MACZoD,MAAOkkB,EAAKlkB,MACZC,OAAQikB,EAAKjkB,OACb28B,kBAAmB1Y,EAAKlkB,OAAS0R,EAAQhV,MAAM,IAAKgV,EAAQ9U,OAAO,GACnEigC,mBAAoB3Y,EAAKjkB,QAAUyR,EAAQ/U,KAAK,IAAK+U,EAAQ7U,QAAQ,GACrEia,wBAAyBwhB,GAAe5mB,EAAQhV,MAAM,IAAKgV,EAAQ9U,OAAO,GAC1Eoa,yBAA0BwhB,GAAgB9mB,EAAQ/U,KAAK,IAAK+U,EAAQ7U,QAAQ,IAehF,OAZA,EAAK0yB,SAAWltB,EAEZs6B,IACAlE,GAAW,EAAKn9B,MAAM+R,GAAI,EAAKkiB,SAAU,iBACzCkJ,GAAW,EAAKn9B,MAAM+R,GAAI7M,EAAa,gBACvCi4B,GAAW,EAAKn9B,MAAM+R,GAAIomB,EAAc,iBACxCgF,GAAW,EAAKn9B,MAAM+R,GAAI6qB,EAAW,cACrCO,GAAW,EAAKn9B,MAAM+R,GAAI+qB,EAAY,eACtCK,GAAW,EAAKn9B,MAAM+R,GAAIirB,EAAa,gBACvCG,GAAW,EAAKn9B,MAAM+R,GAAImrB,EAAc,kBAGrCn2B,IAtgBS,EAygBpBg5B,gBAAkB,SAACj3B,GACf,GAAI,EAAKu0B,aAAa9zB,QAClB,OAAKT,EAGM,EAAKu0B,aAAa9zB,QAAQke,wBAF1B+U,GAAsB,GAAD,OAAI,EAAKx8B,MAAM+R,GAAf,cAA+B,EAAKsrB,aAAa9zB,UA5gBrE,EAkhBpBsW,eAAiB,WACwB,IADvBgU,IACsB,yDADTC,IACS,yDADYC,IACZ,yDADmCC,EACnC,uCAAtBwL,EAAsB,wDAChC,EAAKvB,aAAa,iBAAkBpK,EAAMC,EAAcC,EAAgBC,KAGxEwL,GACA,EAAKA,YAEJxL,IACDA,EAAW,EAAKh0B,MAAM+R,IAEtB8hB,UACO,EAAKI,SAEZF,GACA9wB,OAAOuR,OAAO,EAAKjK,cAAc+B,SAAQ,SAAA4nB,GACjCA,GAAYA,EAAS3qB,SAAWyqB,IAAaE,EAAS3qB,QAAQvJ,MAAM+R,IACpEmiB,EAAS3qB,QAAQsW,gBAAe,GAAM,GAAO,EAAMmU,EAAUwL,MAKrE1L,GACA,EAAKjiB,eAAevF,SAAQ,SAAAyF,GACxB,IAAIH,EAAS,EAAK5R,MAAM+H,MAAMwL,QAAQxB,GAClCH,GAAUA,EAAOzH,SAAW6pB,IAAapiB,EAAO5R,MAAM+R,IACtDH,EAAOiO,gBAAe,GAAM,GAAO,EAAOmU,EAAUwL,QA5iBhD,EAkjBpBgC,mBAAqB,WACjB,EAAKhC,YACL,EAAKxtB,eACL/O,OAAOuR,OAAO,EAAKjK,cAAc+B,SAAQ,SAAA4nB,GACjCA,GAAYA,EAAS3qB,SACrB2qB,EAAS3qB,QAAQi4B,yBAvjBT,EA4jBpBC,mBAAqB,SAAC1vB,GAClB,OAAO,EAAKhG,SAASgG,IA7jBL,EAgkBpB2vB,aAAe,SAAC/sB,EAAOlO,GACnB,IAAIyD,EAAY,EAAKE,gBAAgB,iBAAiBuK,EAAM3U,MAAM+R,IAC9DwhB,EAAerpB,EAAUH,OAExBwpB,IACDA,EAAe,GAEnB,IAAIpP,EAAY,EAAKqa,iBAAiBjL,GACtC,OAAQ9sB,GACJ,IAAK,UACDyD,EAAUH,OAASoa,EAAUwd,WACzBxd,EAAUyd,YACVzd,EAAUyd,UAAU73B,OAASwpB,EAC7B,EAAKkO,mBAAmBtd,EAAUyd,UAAU5hC,MAAM+R,IAAIhI,OAASwpB,GAEnE,MACJ,IAAK,WACDrpB,EAAUH,OAASoa,EAAU0d,WACzB1d,EAAU2d,YACV3d,EAAU2d,UAAU/3B,OAASwpB,EAC7B,EAAKkO,mBAAmBtd,EAAU2d,UAAU9hC,MAAM+R,IAAIhI,OAASwpB,GAEnE,MACJ,IAAK,QACDrpB,EAAUH,OAASoa,EAAUoa,WAAa,EAC1C,MACJ,IAAK,OACDr0B,EAAUH,OAASoa,EAAU4d,YAAc,EAMnD,EAAKN,mBAAmBv3B,EAAUlK,MAAM+R,IAAIhI,OAASG,EAAUH,OAE/D,EAAK+X,gBAnmBW,EAsmBpBkgB,YAAc,SAACrtB,EAAO1H,GAClB,IAAIg1B,EAAe,EAAK73B,gBAAgB,iBACpCF,EAAY+3B,EAAattB,EAAM3U,MAAM+R,IACrCwhB,EAAerpB,EAAUH,OAE7B,GAAIwpB,IAAiBtmB,EAArB,CAGKsmB,IACDA,EAAe,GAEnB,IAAIrmB,EAAY,SAACnD,GACb,OAAOk4B,EAAa/0B,WAAU,SAAA6D,GAC1B,OAAOA,EAAEhH,SAAWA,MAIxBm4B,EAAS3O,EAAetmB,GAAS,EAAI,EAEzC,GAAIC,EAAUD,GAKV,IAHA,IAAIk1B,EAAa5O,EAAetmB,EAAQC,EAAUqmB,IAAiB,EAAIrmB,EAAUD,GAC7Em1B,EAAY7O,EAAetmB,EAAQC,EAAUD,GAASC,EAAUqmB,IAAiB,EAE5EzwB,EAAIq/B,EAAYr/B,EAAIs/B,EAAY,EAAGt/B,IAAK,CAC7C,IAAIu/B,EAAgBJ,EAAan/B,GACjCu/B,EAAct4B,QAAUm4B,EACxB,EAAKT,mBAAmBY,EAAcriC,MAAM+R,IAAIhI,OAASs4B,EAAct4B,OAI/EG,EAAUH,OAASkD,EACnB,EAAKw0B,mBAAmBv3B,EAAUlK,MAAM+R,IAAIhI,OAASG,EAAUH,OAE/D,EAAK+X,iBAxoBW,EA2oBpBwgB,eAAiB,SAACh4B,EAASP,GACvB,IACIG,EADe,EAAKE,gBAAgB,iBACXE,GAC7BJ,EAAUH,OAASA,EACnB,EAAK03B,mBAAmBv3B,EAAUlK,MAAM+R,IAAIhI,OAASG,EAAUH,QA/oB/C,EAkpBpBy0B,iBAAmB,SAACjL,GAChB,IAAIxnB,EAAW9I,OAAOuR,OAAO,EAAKpK,gBAAgB,kBAAoB,IACtE2B,EAAS+E,MAAK,SAACC,EAAGlE,GACd,OAAIkE,EAAEhH,OAAS8C,EAAE9C,OACN,EACAgH,EAAEhH,SAAW8C,EAAE9C,OAEf,GAEH,KAGZ,IADA,IAAIkF,EAAS,GACJnM,EAAI,EAAGA,EAAIiJ,EAAS/I,OAAQF,IAAI,CACrC,IAAI6R,EAAQ5I,EAASjJ,GAEjBy/B,EAAc5tB,EAAM5K,OAEd,IAANjH,IACAmM,EAAO8yB,YAAcQ,GAGrBz/B,IAAMiJ,EAAS/I,OAAS,IACxBiM,EAAOsvB,WAAagE,QAGCxhC,IAArBkO,EAAO2yB,WAA2BW,EAAchP,GAChDtkB,EAAO2yB,UAAYjtB,EACnB1F,EAAO0yB,WAAaY,GAIpBA,EAAchP,IACdtkB,EAAO6yB,UAAYntB,EACnB1F,EAAO4yB,WAAaU,GAa5B,OARKtzB,EAAO2yB,YACR3yB,EAAO0yB,WAAa1yB,EAAOsvB,WAAa,GACvCtvB,EAAO6yB,YACR7yB,EAAO4yB,WAAa5yB,EAAO8yB,YAAc,QAEnBhhC,IAAtBkO,EAAOsvB,aACPtvB,EAAOsvB,WAAa,GAEjBtvB,GAhsBS,EAmsBpB6S,aAAe,SAACza,GACR,EAAK42B,aAAa,eAAgB52B,IAGtC,EAAKY,SAAS,CAACG,QAAQ,GAAOf,IAvsBd,EA0sBpB+sB,eAAiB,SAAC1zB,EAAGC,EAAG6hC,GACpB,IAAI5Z,EAAO,EAAKva,SAAQ,EAAOm0B,GAC/B,OAAO9hC,GAAKkoB,EAAKxnB,MAAQV,GAAKkoB,EAAKxnB,KAAOwnB,EAAKlkB,OAC3C/D,GAAKioB,EAAKvnB,KAAOV,GAAKioB,EAAKvnB,IAAMunB,EAAKjkB,QA7sB1B,EAgtBpByuB,SAAW,SAACqP,EAAc7B,EAAO8B,EAAUr7B,EAAUq4B,EAAgBmB,EAAO8B,GACxE,IAAI,EAAK1E,aAAa,WAAYwE,EAAc7B,EAAO8B,EAAUr7B,EAAUq4B,EAAgBmB,GAA3F,CAGA,IAAK4B,EAAaziC,MAAM6J,UAAY44B,EAAah8B,KAC7C,MAAM,IAAIm8B,MAAM,mEAGpB,IAAIrE,EAAa,EAAKC,iBAAiB,GAAGD,WACtCv+B,EAAQ4gC,EAAO8B,EAAF,eAAgBD,EAAaziC,OAC1C8+B,EAAe,EAAKF,kBAAkB,CACtC/0B,QAAS44B,EAAaziC,MAAM6J,QAAS44B,EAAaziC,MAAM6J,QACpD44B,EAAah8B,KAAK/D,KAAM+/B,EAAah8B,KAAK/D,KAAM+/B,EAAah8B,KACjEzG,MAAO,EAAK8J,cAAc9J,EAAO2iC,IAClCtL,GAAmBuJ,EAAOlB,EAAgBmB,GAC7C,EAAK90B,SAAS/L,EAAM+R,IAAM,CACtB4C,MAAOmqB,EACP/0B,OAAQw0B,EAAa,GAGzB,EAAKv+B,MAAMC,SAASw+B,cAAcz+B,EAAM+R,IAAM,CAC1ClI,QAAS44B,EAAaziC,MAAM6J,QAAS44B,EAAaziC,MAAM6J,QACpD44B,EAAah8B,KAAK/D,KAAM+/B,EAAah8B,KAAK/D,KAAM+/B,EAAah8B,KACjEzG,MAAO,EAAK8J,cAAc9J,GAC1B+J,OAAQ,EAAKgC,SAAS/L,EAAM+R,IAAIhI,QAGpC,EAAK+X,aAAaza,GAClB,EAAKrH,MAAM6iC,YAAc,EAAK7iC,MAAM6iC,eA5uBpB,EA+uBpB52B,mBAAqB,SAACvH,EAAOo+B,EAAmBn4B,GAC5C,IAAI,EAAKszB,aAAa,qBAAsBv5B,EAAOo+B,EAAmBn4B,GAAtE,CAGA,IAAI3E,EAAQ,EAAKoK,qBAAqB,SAClCgH,EAAgB,EAAKhH,qBAAqB,iBAC1CsM,EAAY,EAAKtM,qBAAqB,aAC1C,EAAKgvB,SAASp5B,OAAOjF,OAAWA,GAAW,GAC3C,EAAKkW,iBAAiBG,OAAerW,GAAW,GAChD,EAAK8gB,kBAAkBnF,OAAW3b,OAAWA,GAAW,GAExDkC,OAAOuR,OAAO,EAAKjK,cAAc+B,SAAQ,SAAA4nB,GACjCA,GAAYA,EAAS3qB,SACrB2qB,EAAS3qB,QAAQ0C,mBAAmBvH,EAAOo+B,EAAmBn4B,MAItE,EAAKmX,iBAhwBW,EAmwBpBihB,OAAS,SAAC5wB,GACN,IAAI,EAAK8rB,aAAa,WAGjB,EAAKj+B,MAAM4R,OAAhB,CAGA,GAAI,EAAK5R,MAAM8xB,gBAEX,IADY,EAAK9xB,MAAM8xB,gBAAX,gBAER,OAGR,IAAK3f,EAAc,CACf,IAAIO,EAAS,EAAK1S,MAAM+R,GACpBoB,EAAW,EAAKnT,MAAM4R,OAAO5R,MAAM+R,GACnC7H,EAAYnK,EAAY,EAAKC,MAAM4R,OAAOoxB,aAAatwB,IAC3D,EAAK1S,MAAMqT,SAASC,KAAI,SAACvL,GACrBA,EAAMwL,QAAQb,GAAQqwB,QAAO,MAC9B,SAACh7B,GACAk7B,GAAWl7B,EAAMwL,QAAQJ,GAAWjJ,GAAW,MAIvD,EAAKg5B,YAEL,EAAKljC,MAAM4R,OAAOuxB,mBAAlB,gBAEA,EAAKnjC,MAAMkX,OAAOksB,kBA/xBF,EAkyBpBJ,aAAe,SAAC14B,GACZ,OAAO,EAAKtK,MAAMC,SAASw+B,cAAcn0B,IAnyBzB,EAsyBpB6zB,gBAAkB,SAACD,GACf,IAAIzoB,EAAMxS,OAAOM,KAAK,EAAKvD,OAAO4M,MAAK,SAAA6I,GACnC,OAAOA,IAAG,UAAQyoB,EAAR,eAGd,OAAO,EAAKl+B,MAAMyV,IA3yBF,EA8yBpB4tB,oBAAsB,SAACrjC,GACnB,IAAIiP,EAAS,GAOb,OANAhM,OAAOM,KAAKvD,GAAS,EAAKA,OAAOsM,SAAQ,SAAAmJ,GACjCA,EAAI+C,SAAS,cACbvJ,EAAOwG,GAAO,EAAKzV,MAAMyV,OAI1BxG,GAtzBS,EAyzBpBkyB,yBAA2B,SAACnhC,GACxB,IAAIiP,EAAS,GAOb,OANAhM,OAAOM,KAAKvD,GAAS,EAAKA,OAAOsM,SAAQ,SAAAmJ,GACjCA,EAAI+C,SAAS,mBACbvJ,EAAOwG,EAAI9P,QAAQ,gBAAiB,aAAe,EAAK3F,MAAMyV,OAI/DxG,GAj0BS,EAo0BpBi0B,UAAY,WACR,EAAKljC,MAAM+H,MAAMu7B,SAAS,EAAKtjC,MAAM+R,IACrC,EAAK/R,MAAM2T,SAAS4vB,eAAe,EAAKvjC,MAAM+R,IAC9C,EAAK/R,MAAMggC,KAAKwD,WAAW,EAAKxjC,MAAM+R,IACtC,EAAK9P,MAAM63B,UAAY,EAAK95B,MAAMkX,OAAO6G,oBACzC,EAAK9b,MAAM63B,UAAY,EAAK95B,MAAMkX,OAAOusB,sBACzC,EAAKxhC,MAAM63B,UAAY,EAAK95B,MAAMkX,OAAOwsB,eACrC,EAAKzhC,MAAM63B,WACX,EAAK95B,MAAMkX,OAAO0X,cAAe,GACrC3rB,OAAOuR,OAAO,EAAKjK,cAAc+B,SAAQ,SAAA4nB,GACjCA,GAAYA,EAAS3qB,SACrB2qB,EAAS3qB,QAAQ25B,gBA/0BT,EAo1BpBp5B,cAAgB,SAAC9J,EAAO2iC,GAkCpB,cAjCO3iC,EAAMmL,yBACNnL,EAAMqT,gBACNrT,EAAM0T,gBACN1T,EAAMkX,cACNlX,EAAMsH,cACNtH,EAAMggC,YACNhgC,EAAM+H,aACN/H,EAAMghC,aACNhhC,EAAMihC,eACNjhC,EAAMghB,iBACNhhB,EAAMuiB,cACNviB,EAAM4R,cACN5R,EAAMV,cACNU,EAAMsE,gBACNtE,EAAMmf,eACNnf,EAAM4sB,aACR+V,UACM3iC,EAAM+L,gBACV/L,EAAMuK,oBACNvK,EAAM2T,gBACN3T,EAAMu0B,YACNv0B,EAAMkhC,qBACNlhC,EAAM0/B,eAEbz8B,OAAOM,KAAK,EAAK8/B,oBAAoBrjC,IAAQsM,SAAQ,SAAAmJ,UAC1CzV,EAAMyV,MAGjBxS,OAAOM,KAAKvD,GAAOsM,SAAQ,SAAAmJ,GACG,oBAAfzV,EAAMyV,WACNzV,EAAMyV,MAGdzV,GAt3BS,EAy3BpBmjC,mBAAqB,SAACV,EAAcp7B,GAChC,GAAI,EAAK+2B,YAAY,sBACjB,OAAO,EAAKH,aAAa,qBAAsBwE,UAE5C,EAAK12B,SAAS02B,EAAaziC,MAAM+R,WACjC,EAAKxH,aAAak4B,EAAaziC,MAAM+R,WACrC,EAAK/R,MAAMC,SAASw+B,cAAcgE,EAAaziC,MAAM+R,IAE5D7N,YAAW,WACF,EAAKiG,SAEV,EAAK2X,aAAaza,KACnB,IAr4Ba,EAy4BpB4wB,KAAO,WACH,EAAKhwB,SAAS,CAACgwB,MAAM,KA14BL,EA84BpB8B,KAAO,WACH,EAAK9xB,SAAS,CAACgwB,MAAM,KA/4BL,EAk5BpB0L,YAAc,SAACh1B,EAAGi1B,GACd,GAAK,EAAK5jC,MAAM0T,SAASnC,cAiBlB,CACH,GAAI,EAAKvR,MAAMs0B,OACX,OAEJ,GAAI,EAAKt0B,MAAM0T,SAASnC,cAAcvR,MAAM+R,KAAO,EAAK/R,MAAM+R,GAC1D,OAEJpD,EAAE4rB,kBAEF,IAAI3R,EAAO4T,GAAsB,EAAKx8B,MAAM+R,GAAI,EAAK8W,WAAWtf,SAChE,GAAIoF,EAAEqa,QAAUJ,EAAKloB,EAAI,GAAKiO,EAAEqa,QAAWJ,EAAKloB,EAAIkoB,EAAKlkB,OACrDiK,EAAEsa,QAAUL,EAAKjoB,EAAI,GAAKgO,EAAEsa,QAAWL,EAAKjoB,EAAIioB,EAAKjkB,OACrD,OAEJ,EAAKk/B,cAAa,GAEd,EAAK7jC,MAAM4R,QAAU,EAAK5R,MAAM4R,OAAOkyB,YACvC5/B,YAAW,WACF,EAAKiG,SAEV,EAAKnK,MAAM4R,OAAOkyB,WAAWn1B,GAAG,KACjC,IAGP,EAAK6E,aAAL,eAAwB,CACpB9S,EAAGiO,EAAEqa,QACLroB,EAAGgO,EAAEsa,UACN,SAAC3X,EAAcK,GAEdL,EAAae,gBAAb,wBA7CJ1D,EAAE4rB,kBAKF,EAAKsJ,cAAa,GAElB,EAAK7vB,2BAAL,gBAEI,EAAKhU,MAAM4R,QAAU,EAAK5R,MAAM4R,OAAOkyB,YACvC5/B,YAAW,WACF,EAAKiG,SAEV,EAAKnK,MAAM4R,OAAOkyB,WAAWn1B,GAAG,KACjC,KAl6BK,EAs8BpBqF,2BAA6B,WACzB,GAAI,EAAKoqB,YAAY,8BACjB,OAAO,EAAKH,aAAa,8BAE7B,EAAKj+B,MAAM0T,SAASM,2BAApB,iBA18BgB,EA68BpB6vB,aAAe,SAACE,GACP,EAAKpE,aAENoE,EACA,EAAK/jC,MAAMkX,OAAO8sB,YAAlB,eAAoC,EAAK31B,SAAQ,IAEjD,EAAKrO,MAAMkX,OAAO8sB,YAAlB,oBAAoCjjC,GAAW,KAn9BnC,EAs9BpBkjC,aAAe,SAACt1B,GACZ,EAAKg1B,YAAYh1B,GAAG,IAv9BJ,EA09BpBm1B,WAAa,SAACn1B,EAAGu1B,GACTA,GAAgB,EAAKlkC,MAAM4R,QAAU,EAAK5R,MAAM4R,OAAOkyB,YACvD,EAAK9jC,MAAM4R,OAAOkyB,WAAWn1B,GAEjC,EAAKk1B,cAAa,IA99BF,EAi+BpB7xB,aAAe,SAACmyB,EAAWC,EAAgB/8B,EAAUg9B,GACjD,GAAI,EAAKjG,YAAY,gBACjB,OAAO,EAAKH,aAAa,eAAgBkG,EAAWC,GAExD,IAAIxb,EAAO,EAAKva,SAAQ,EAAO81B,GAM/B,OAJIC,GAAmB,EAAKpkC,MAAM2T,SAAS2wB,WAAW,EAAKtkC,MAAM+R,KAC7D,EAAK4tB,YAAc,EAAK3/B,MAAM2T,SAAS3B,aAAa,EAAKhS,MAAM+R,IAG5D6W,GA3+BS,EA8+BpBpW,YAAc,SAACmC,EAAOisB,EAAOC,EAAO0D,GAChC,IAAI,EAAKtG,aAAa,cAAetpB,EAAOisB,EAAOC,EAAO0D,GAA1D,CAGA,IAGIC,EAAYptB,EAAeqtB,EAAa/B,EAHxCgC,EAAY/vB,EAAMtG,SAAQ,GAC1Bs2B,EAAW,EAAKt2B,SAAQ,GAAO,GAInC,GAAKuyB,EAgBD,EAAK5uB,eACLwyB,EAAa,EAAKI,uBAAuBjwB,EACrCgwB,EAASjgC,MAAQ,EAAIggC,EAAUhgC,MAAQ,EACvCigC,EAAShgC,OAAS,EAAI+/B,EAAU//B,OAAS,EAFhC,eAIT+/B,EAAUhgC,MACVggC,EAAU//B,OACVggC,OAvBI,CACR,IAAIE,EAAYH,EAAUrjC,IAAMsjC,EAAStjC,IAKzC,EAAK2Q,eACLwyB,EAAa,EAAKI,uBAAuBjwB,EACrC+vB,EAAUtjC,KAAOujC,EAASvjC,KAAMyjC,EADvB,eAETH,EAAUhgC,MACVggC,EAAU//B,OACVggC,GAgBRvtB,EAAgBotB,EAAWptB,cAC3BqtB,EAAcD,EAAWC,YACpB7D,IAkBD8B,EAAQ,eAAO/tB,EAAM3U,QACZC,SAAWF,EAAY2iC,EAASziC,UACzC,EAAKwf,oBAAoB,gBAAiBrI,EAAesrB,EAASziC,cAAUc,EACxE,EAAKf,MAAMmL,kBAAkBgF,oBACjC,EAAKuN,YAAY,YAAY,EAAMglB,EAASziC,UACZ,YAA5BmX,EAAcC,UACd,EAAKytB,SAAS,QAASJ,EAAUhgC,MAAO+/B,EAAa/B,EAASziC,cAAUc,EACpE,EAAKf,MAAMmL,kBAAkBgF,oBAEjC,EAAK20B,SAAS,QAAS,YAAQ/jC,EAAW2hC,EAASziC,cAAUc,EACzD,EAAKf,MAAMmL,kBAAkBgF,oBAEK,SAAtCwE,EAAM7E,YAAY,SAASnL,QAI3B,EAAKmgC,SAAS,SAAUJ,EAAU//B,OAAQ8/B,EAAa/B,EAASziC,cAAUc,EACtE,EAAKf,MAAMmL,kBAAkBgF,oBAJjC,EAAK20B,SAAS,YAAaJ,EAAU//B,OAAQ8/B,EAAa/B,EAASziC,cAAUc,EACzE,EAAKf,MAAMmL,kBAAkBgF,sBA/BL,YAA5BiH,EAAcC,UACd1C,EAAMmwB,SAAS,QAASJ,EAAUhgC,MAAO+/B,OAAa1jC,EAClD,EAAKf,MAAMmL,kBAAkBgF,oBAEjCwE,EAAMmwB,SAAS,QAAS,YAAQ/jC,EAC5B,EAAKf,MAAMmL,kBAAkBgF,oBAEK,SAAtCwE,EAAM7E,YAAY,SAASnL,QAI3BgQ,EAAMmwB,SAAS,SAAUJ,EAAU//B,OAAQ8/B,OAAa1jC,EACpD,EAAKf,MAAMmL,kBAAkBgF,oBAJjCwE,EAAMmwB,SAAS,YAAaJ,EAAU//B,OAAQ8/B,OAAa1jC,EACvD,EAAKf,MAAMmL,kBAAkBgF,qBA+BzCwE,EAAMowB,eAAe,aAAShkC,EAAW,EAAKf,MAAMmL,kBAAkBgF,oBACtEwE,EAAMowB,eAAe,qBAAiBhkC,EAAW,EAAKf,MAAMmL,kBAAkBgF,oBAE9E,EAAKijB,SAASze,EAAOisB,EAAO8B,GAAU,WAClC,IAAIsC,EAAW,EAAKz6B,aAAaq2B,EAAO8B,EAAS3wB,GAAI4C,EAAM3U,MAAM+R,IAAIxI,QACrEy7B,EAAS/tB,iBAAiBG,EACtB,EAAKpX,MAAMmL,kBAAkBgF,oBAC5BywB,GACDoE,EAAS/iC,MAAM63B,UAAYkL,EAAS3yB,gBAAT,mBAGhC,SAACyC,GACAxV,OAAOwgB,uBAAsB,WACzB,EAAKD,gBAAe,GAAM,GAAM,GAChCvgB,OAAOwgB,uBAAsB,WACzB,EAAK9f,MAAMkX,OAAOC,qBAGtBotB,GACAA,EAAkBzvB,KACvB+rB,OAAO9/B,KAjlCM,EAolCpBuR,aAAe,SAACqC,EAAOtN,GACnB,GAAI,EAAK+2B,YAAY,gBACjB,OAAO,EAAKH,aAAa,eAAgBtpB,GAE7C,EAAKwuB,mBAAmBxuB,EAAOtN,GAC/BsN,EAAMswB,yBAzlCU,EA4lCpBA,sBAAwB,WACpB,EAAKjlC,MAAM+H,MAAMu7B,SAAS,EAAKtjC,MAAM+R,IACrC9O,OAAOuR,OAAO,EAAKjK,cAAc+B,SAAQ,SAAA4nB,GACjCA,GAAYA,EAAS3qB,SACrB2qB,EAAS3qB,QAAQ07B,4BAhmCT,EAqmCpBC,4BAA8B,SAACC,GAC3BliC,OAAOuR,OAAO,EAAKjK,cAAc+B,SAAQ,SAAA4nB,GACjCA,GAAYA,EAAS3qB,SACrB2qB,EAAS3qB,QAAQ67B,iBAAiBD,OAxmC1B,EA6mCpBC,iBAAmB,SAACD,GAEhB,GADA,EAAKD,4BAA4BC,GAC5BA,EAAL,CAIA,IAAIlqB,EAAY,eAAO,EAAKhZ,MAAMgZ,cAClCA,EAAa0D,cAAgB,OAC7B,EAAK0mB,gBAAgBpqB,QALjB,EAAKoqB,mBAhnCO,EAwnCpBxK,YAAc,SAAClsB,EAAG22B,EAAOC,GACrB,IAAI,EAAKtH,aAAa,cAAetvB,EAAG22B,EAAOC,KAG3C,EAAKn7B,gBAAgB,cAAe,EAAKo7B,UAAa,EAAKxlC,MAAM4R,OAAO7F,SAAS,EAAK/L,MAAM+R,IAAhG,CAGI,EAAK/R,MAAM4R,QACX,EAAK5R,MAAM4R,OAAOI,eAEjBszB,GACD,EAAKtlC,MAAM0T,SAASrC,YAApB,gBAEJ,EAAK6zB,6BAA4B,GAEjC,IAAIP,EAAW,EAAKt2B,SAAQ,GAExB4M,EAAY,eAAO,EAAKhZ,MAAMgZ,cAClCA,EAAarW,SAAW,QACxBqW,EAAaiS,SAAW,sBACxBjS,EAAa1D,aAAe,OAC5B0D,EAAa3D,UAAY,OACzB2D,EAAarF,WAAa,OAC1BqF,EAAaxD,YAAc,OAC3BwD,EAAavW,MAAQigC,EAASjgC,MAC9BuW,EAAatW,OAASggC,EAAShgC,OAC/BsW,EAAaW,SAAW,OACxBX,EAAac,UAAY,OACzBd,EAAa0B,QAAU,GACvB1B,EAAalR,OAAS,OACtBkR,EAAa0D,cAAgB,OAExB,EAAK8mB,eAINxqB,EAAa5Z,IAAMsN,EAAEsa,QAAU0b,EAAShgC,OAAS,EACjDsW,EAAa7Z,KAAOuN,EAAEqa,QAAU2b,EAASjgC,MAAQ,IAJjDuW,EAAa5Z,IAAMsjC,EAAStjC,IAC5B4Z,EAAa7Z,KAAOujC,EAASvjC,MAMjC,EAAKwR,SAAW,CACZC,SAAU,CACNxR,IAAK4Z,EAAa5Z,IAClBD,KAAM6Z,EAAa7Z,MAEvBskC,iBAAkB,EAAK3F,mBAAqB,CACxC1+B,IAAK,EAAKokC,cAAe92B,EAAEqa,QAAU2b,EAASjgC,MAAQ,EAAI,EAAKq7B,kBAAkB1+B,IACjFD,KAAM,EAAKqkC,cAAe92B,EAAEsa,QAAU0b,EAAShgC,OAAS,EAAI,EAAKo7B,kBAAkB3+B,MAEvFV,EAAGua,EAAa7Z,KAChBT,EAAGsa,EAAa5Z,IAChB05B,WAAYpsB,EAAEqa,QACdgS,WAAYrsB,EAAEsa,SAGlB,EAAKoc,gBAAgBpqB,GACrB,EAAKmgB,eAAgB,EACrB,EAAKuK,kBAAiB,GAAM,OAAM5kC,EAAWka,GAE7C,EAAKjb,MAAMkX,OAAO8L,aAClB,EAAKhjB,MAAMkX,OAAOksB,gBAEd,EAAKpjC,MAAM0T,SAASQ,8BACpB,EAAKlU,MAAM0T,SAASQ,6BAA6ByvB,YAAYh1B,GAG7D22B,GAASC,GACT,EAAKtjC,MAAM2jC,eAAej3B,EAA1B,kBA3rCY,EA8rCpB6E,aAAe,SAACvJ,EAAM6J,EAAczM,GAChC,OAAI,EAAK+2B,YAAY,gBACV,EAAKH,aAAa,eAAgBh0B,EAAM6J,EAAczM,GAE1D,EAAKrH,MAAM0T,SAASF,aAAavJ,EAAM6J,EAAczM,IAlsC5C,EAqsCpBuzB,OAAS,SAACjsB,EAAG22B,EAAOC,GAChB,IAAI,EAAKtH,aAAa,SAAUtvB,EAAG22B,EAAOC,IAGrC,EAAKvlC,MAAM4R,OAAO7F,SAAS,EAAK/L,MAAM+R,IAG3C,IAAI,EAAKyzB,UAAa,EAAKvjC,MAAMm5B,cAAjC,CAOA,EAAKxoB,SAASlS,GAAMiO,EAAEqa,QAAU,EAAKpW,SAASmoB,WAC9C,EAAKnoB,SAASjS,GAAMgO,EAAEsa,QAAU,EAAKrW,SAASooB,WAC9C,EAAKpoB,SAASmoB,WAAapsB,EAAEqa,QAC7B,EAAKpW,SAASooB,WAAarsB,EAAEsa,QAE7B,IAAIhO,EAAY,eAAO,EAAKhZ,MAAMgZ,cAClCA,EAAa5Z,IAAM,EAAKuR,SAASjS,EACjCsa,EAAa7Z,KAAO,EAAKwR,SAASlS,EAGlC,IAAImlC,EAAe,EAAK9F,kBAEpB8F,EADAA,EACe,CACXxkC,IAAK,EAAKuR,SAAS8yB,iBAAiBrkC,KAAO,EAAKuR,SAASjS,EAAI,EAAKiS,SAASC,SAASxR,KACpFD,KAAM,EAAKwR,SAAS8yB,iBAAiBtkC,MAAQ,EAAKwR,SAASlS,EAAI,EAAKkS,SAASC,SAASzR,MACtFsD,MAAOmhC,EAAanhC,MACpBC,OAAQkhC,EAAalhC,QAGVsW,EAEd6qB,GAAQ,iBAAUR,GACnB,EAAKS,gBAAgB9qB,EAAc4qB,GACvC,EAAKR,gBAAgBpqB,GAErB,EAAKjb,MAAMkX,OAAO6G,kBAAlB,eAA0C9C,GAErCqqB,GACD,EAAKU,gBACD/qB,EAAa5Z,IACb4Z,EAAa7Z,KACb9B,OAAOuP,YAAcoM,EAAa5Z,IAAM4Z,EAAatW,OACrDrF,OAAOiJ,WAAa0S,EAAa7Z,KAAO6Z,EAAavW,MACrD,KAGH4gC,GACD,EAAKtlC,MAAMkX,OAAOoG,gBAAlB,eAAwC,EAAKrb,MAAMsb,gBAC/Cxd,EAAYkb,GAAe,EAAKhZ,MAAMub,UAE1C8nB,GAASC,GACT,EAAKtjC,MAAMgkC,UAAUt3B,EAArB,qBA/CI,EAAK3O,MAAM0T,SAASnC,eACpB,EAAKvR,MAAM0T,SAASrC,eA9sCZ,EA+vCpB20B,gBAAkB,SAAC3kC,EAAKD,EAAMG,EAAQD,EAAO+iC,GACzC,GAAK,EAAK1E,WAAV,CAEA,IAAI3R,EAAO,EAAKle,YAAY,QAC5B,EAAK9P,MAAM2T,SAASuyB,QAChB,EAAKlmC,MAAM+R,GACXic,EAAKttB,EACLstB,EAAKrtB,EACL0jC,EACArW,EAAKG,iBACLH,EAAKI,oBACL,CACI/sB,MACAD,OACAG,SACAD,YA9wCQ,EAmxCpBw5B,WAAa,SAACnsB,EAAG22B,EAAOC,GACpB,GAAI,EAAKnH,YAAY,cACjB,OAAO,EAAKH,aAAa,aAActvB,EAAG22B,EAAOC,GAErD,IAAI,EAAKC,UAAa,EAAKvjC,MAAMm5B,eAAkB,EAAKp7B,MAAM4R,OAAO7F,SAAS,EAAK/L,MAAM+R,IAAzF,CAGIuzB,GAASC,GACT,EAAKtjC,MAAMkkC,cAAcx3B,EAAzB,gBAEA22B,GAEA,EAAKtlC,MAAM4R,OAAOI,eAZY,MAcD,EAAK/P,MAAMgZ,aAAvC5Z,EAd6B,EAc7BA,IAAKD,EAdwB,EAcxBA,KAAMsD,EAdkB,EAclBA,MAAOC,EAdW,EAcXA,OAIvB,GAFA,EAAK3E,MAAMggC,KAAKoG,WAChB,EAAK/3B,SAAQ,GAAM,IACfi3B,GAAU,EAAKtlC,MAAM0T,SAAShC,kBAStB4zB,IACR,EAAKe,SAAU,GAKdf,GACD,EAAKU,gBACD3kC,EAAKD,EACL9B,OAAOuP,YAAcxN,EAAMsD,EAC3BrF,OAAOiJ,WAAanH,EAAOsD,EAC3B,KAGR,EAAK1E,MAAMkX,OAAOovB,qBAvBlB,CACI,IAAIvzB,EAAa,EAAK/S,MAAM4R,OAAOvD,SAAQ,GAC3C,EAAKoF,YACD6xB,EACAlkC,EAAO2R,EAAW3R,KAClBC,EAAM0R,EAAW1R,IACjB,EAAKuR,SAASC,SAASzR,KAAO2R,EAAW3R,KACzC,EAAKwR,SAASC,SAASxR,IAAM0R,EAAW1R,IAAKqD,EAAOC,EAAQoO,MA5yCpD,EA+zCpBU,YAAc,SAAC6xB,EAAOiB,EAAW1B,EAAWlyB,EAAgBG,EAC7CpO,EAAOC,EAAQoO,EAAYZ,GACtC,IAAKA,EAAc,CACf,IAAIO,EAAS,EAAK1S,MAAM+R,GACpBoB,EAAW,EAAKnT,MAAM4R,OAAO5R,MAAM+R,GACnCy0B,EAAW,CAAClB,EAAOiB,EAAW1B,EAAWlyB,EAAgBG,EACzDpO,EAAOC,EAAQoO,GACf0zB,EAAW,CAACnB,EAAO3yB,EAAgBG,OAAgB/R,OAAWA,EAC9D2D,EAAOC,EAAQoO,GACnB,EAAK/S,MAAMqT,SAASC,KAAI,SAACvL,GAAW,IAAD,EAC/BA,EAAMwL,QAAQb,GAAQlJ,UAAS,GAC/BzB,EAAMwL,QAAQb,GAAQ1S,MAAM0T,SAASF,aAAazL,EAAMwL,QAAQJ,KAChE,EAAApL,EAAMwL,QAAQb,IAAQe,YAAtB,QAAqC+yB,EAArC,SAA+C,QAChD,SAACz+B,GAAW,IAAD,EACVA,EAAMwL,QAAQb,GAAQlJ,UAAS,GAC/BzB,EAAMwL,QAAQb,GAAQ1S,MAAM0T,SAASF,aAAazL,EAAMwL,QAAQJ,KAChE,EAAApL,EAAMwL,QAAQb,IAAQe,YAAtB,QAAqCgzB,EAArC,SAA+C,QAIvD,GAAI,EAAKrI,YAAY,eACjB,OAAO,EAAKH,aAAa,cACrBqH,EAAOiB,EAAW1B,EAAWlyB,EAAgBG,EAC7CpO,EAAOC,EAAQoO,EAAYZ,GAtBoB,MAwBpB,EAAKu0B,kBAAkBH,EAAW1B,EAAW,EAAK7kC,MAAM4R,OACvFlN,EAAOC,EAAQoO,GADdqE,EAxBkD,EAwBlDA,cAAeqtB,EAxBmC,EAwBnCA,YAGc,YAA9BrtB,EAAcI,YACd,EAAKstB,SAAS,QAASpgC,EAAO+/B,OAAa1jC,OAAWA,GAAW,GAEjE,EAAK+jC,SAAS,QAAS,YAAQ/jC,OAAWA,OAAWA,GAAW,GAElB,SAA9C,EAAKqP,qBAAqB,SAASzL,QAGnC,EAAKmgC,SAAS,SAAUngC,EAAQ8/B,OAAa1jC,OAAWA,GAAW,GAFnE,EAAK+jC,SAAS,YAAangC,EAAQ8/B,OAAa1jC,OAAWA,GAAW,GAM1E,EAAKkW,iBAAiBG,GAEtB,EAAK8tB,6BAA4B,GACjC,EAAKG,kBAIL,IAAIhkC,EAAMwjC,EAAY9xB,EAAW1R,IAC7BD,EAAOmlC,EAAYxzB,EAAW3R,KAClC,EAAKukC,kBAAiB,GAAO,GAAO,WAChC,EAAKnG,cACN,CAACn+B,MAAKD,OAAMsD,QAAOC,WAEjB2gC,GACD,EAAKtlC,MAAMkX,OAAOoG,gBAAlB,eAAwC,EAAKrb,MAAMsb,gBAC/C,CAAClc,MAAKD,OAAMsD,QAAOC,UAAS,EAAK1C,MAAMub,UAE/C,EAAK6oB,SAAU,EAMfniC,YAAW,WACF,EAAKiG,SAIV,EAAKnK,MAAMkX,OAAOC,iBACnB,KAEH,EAAK0I,gBAAe,GAAO,GAAM,IAt4CjB,EAy4CpB8lB,iBAAmB,SAACnoB,EAAU4d,EAAe/zB,EAAUuhB,GACnD,IAAI+d,EAAY5mC,EAAY,2BACrB,EAAKqQ,qBAAqB,UAC1B,EAAKA,qBAAqB,mBAEjC,EAAKnI,SAAS,CAACuV,WAAU4d,gBAAeuL,aAAYt/B,IA94CpC,EAi5CpB0+B,gBAAkB,SAAC9qB,EAAc4qB,GAC7B,IAAI,EAAK5H,aAAa,kBAAmBhjB,EAAc4qB,GAAvD,CAGA,IAAIe,EAAa,EAAKC,aAClBhB,EAAaxkC,IAAKwkC,EAAazkC,MAC/B0lC,EAAa,EAAKD,aAClBhB,EAAaxkC,IAAMwkC,EAAalhC,OAAO,EAAGkhC,EAAazkC,KAAOykC,EAAanhC,MAAM,GACjFqiC,EAAa,EAAKF,aAClBhB,EAAaxkC,IAAMwkC,EAAalhC,OAAQkhC,EAAazkC,KAAOykC,EAAanhC,OAEzEsiC,EAAY,CACZC,OAAQH,EAAWI,MAAOJ,EAAWG,OACjCL,EAAWM,MAAON,EAAWK,OACzBF,EAAWG,MAAOH,EAAWE,OAAQ,EAC7CE,OAAQL,EAAWM,MAAON,EAAWK,OACjCP,EAAWQ,MAAOR,EAAWO,OACzBJ,EAAWK,MAAOL,EAAWI,OAAQ,EAC7CC,MAAQN,EAAWM,OAASR,EAAWQ,OAAUL,EAAWK,MAC5DF,MAAQJ,EAAWI,OAASN,EAAWM,OAAUH,EAAWG,OAGhEjsB,EAAa7Z,MAAQ4lC,EAAUC,OAC/BhsB,EAAa5Z,KAAO2lC,EAAUG,OAC1BtB,IAAiB5qB,IACjB4qB,EAAazkC,MAAQ4lC,EAAUC,OAC/BpB,EAAaxkC,KAAO2lC,EAAUG,QAGlC,IAAIE,EAAe,CACfnH,GAAI2F,EAAazkC,KACjB++B,GAAI0F,EAAazkC,KAAOykC,EAAanhC,OAErC4iC,EAAe,CACfpH,GAAI2F,EAAaxkC,IACjB8+B,GAAI0F,EAAaxkC,IAAMwkC,EAAalhC,QAGxC,EAAK3E,MAAMggC,KAAKoG,SAASY,EAAUI,MAAOJ,EAAUE,MAAOG,EAAcC,KAv7CzD,EA07CpBT,aAAe,SAACxlC,EAAKD,GACjB,IAAImmC,EAAkB,GAClB,EAAKvnC,MAAM4R,SACP,EAAK4zB,SACL+B,EAAkB,EAAKvnC,MAAM4R,OAAOyuB,mBAGhC,EAAKrgC,MAAM0T,SAAS/B,WACpB,EAAK3R,MAAM2T,SAASC,YAAY,EAAK5T,MAAM0T,SAAS/B,UAAU3R,MAAM+R,MACpEw1B,EAAkB,EAAKvnC,MAAM0T,SAAS/B,WAClC,EAAK3R,MAAM0T,SAAS/B,UAAU0uB,qBAVpB,MAetB,EAAKrgC,MAAMggC,KAAKwH,UAAUnmC,EAAKD,EAAM,EAAKpB,MAAM+R,GAAIw1B,GADnDH,EAdqB,EAcrBA,MAAOF,EAdc,EAcdA,MAGRD,EAAS,EACTE,EAAS,EAQb,OAPIC,IACAD,EAASC,EAAMv7B,MAAQxK,GAEvB6lC,IACAD,EAASC,EAAMr7B,MAAQzK,GAGpB,CACH6lC,SAAQE,SAAQC,QAAOF,UAr9CX,EAy9CpBtvB,SAAW,SAACvW,EAAKD,EAAMG,EAAQD,EAAO2c,EAAMvO,EAAgB+3B,GAIxD,GAHA,EAAKhoB,oBAAoB,QAAS,CAACpe,MAAKD,OAAMG,SAAQD,cAAQP,EAAW2O,GACzE,EAAKgO,YAAY,WAAYO,GAExB,EAAKje,MAAM4R,SAAU61B,EAA1B,CAGA,EAAKznC,MAAM4R,OAAOI,eAClB,IAAI2yB,EAAW,EAAKt2B,SAAQ,GACxB0E,EAAa,EAAK/S,MAAM4R,OAAOvD,SAAQ,GACtC+I,EACD,EAAKsvB,kBACD/B,EAASvjC,KAAO2R,EAAW3R,KAC3BujC,EAAStjC,IAAM0R,EAAW1R,IAC1B,EAAKrB,MAAM4R,OACX+yB,EAASjgC,MACTigC,EAAShgC,OACToO,GAPHqE,cAUL,EAAKH,iBAAiBG,EAAe1H,GAEH,YAA9B0H,EAAcI,aAA0E,SAA7C,EAAKpH,qBAAqB,SAAS1L,MAE9E,EAAKsoB,cAAc,QAAnB,UAA+B,EAAK3e,SAAQ,GAAO3J,MAAnD,WAA8D3D,OAAWA,GAAW,GAEjD,YAA9BqW,EAAcI,aAEnB,EAAKwV,cAAc,QAAS,YAAQjsB,OAAWA,GAAW,KAr/C9C,EAy/CpB2mC,SAAW,WACP,OAAO,EAAK53B,YAAY,UA1/CR,EA6/CpB6H,aAAe,WACX,IAAIP,EAAgB,EAAKhH,qBAAqB,iBAC9C,MAAO,CACH/O,IAAiC,UAA5B+V,EAAcC,WAAqD,YAA5BD,EAAcC,UAC1D9V,OAAoC,QAA5B6V,EAAcC,WAAmD,YAA5BD,EAAcC,UAC3DjW,KAAoC,UAA9BgW,EAAcI,aAAyD,YAA9BJ,EAAcI,YAC7DlW,MAAqC,QAA9B8V,EAAcI,aAAuD,YAA9BJ,EAAcI,cAngDhD,EAugDpB2D,wBAA0B,WACtB,OAAO,EAAKnb,MAAMkX,OAAOiE,2BAxgDT,EA2gDpBurB,kBAAoB,SAACH,EAAW1B,EAAWjzB,EAAQlN,EAAOC,EAAQoO,EAAY40B,EAAWC,GACrF,GAAI,EAAKxJ,YAAY,qBACjB,OAAO,EAAKH,aACR,oBAAqBsI,EAAW1B,EAAWjzB,EAAQlN,EAAOC,EAAQoO,EAAY40B,EAAWC,GAEjG,IAAKljC,EAAO,CACR,IAAIkkB,EAAO,EAAKva,SAAQ,GAAO,GAC/B3J,EAAQkkB,EAAKlkB,MACbC,EAASikB,EAAKjkB,OAMlB,IAAIuoB,EAAUuX,EACd,GAJK1xB,IACDA,EAAanB,EAAOvD,SAAQ,GAAO,IAGnCy3B,GAAQ,gBACR5Y,EAAW,CAACwC,GAAI,EAAGE,GAAI,EAAGiB,GAAI,EAAGC,GAAI,GACrC2T,EAAc,CACVoD,IAAK90B,EAAW1R,IAChBymC,IAAK/0B,EAAW1R,IAAM0R,EAAWpO,OACjCojC,IAAKh1B,EAAW3R,KAChB4mC,IAAKj1B,EAAW3R,KAAO2R,EAAWrO,WAEnC,CACH,IAAIuK,EAAS,EAAKg5B,kBACdl1B,EAAW3R,KAAOmlC,EAClBxzB,EAAW1R,IAAMwjC,EACjBngC,EACAC,EACAiN,EACAmB,GAEJma,EAAWje,EAAOie,SAClBuX,EAAcx1B,EAAOw1B,YAGzB,IAAIyD,EAAiBnoC,EAAY0kC,GAEjC,EAAK0D,qBAAqB1D,EAAa1xB,GAEvC,IAAIq1B,EAAmB,EAAKh4B,qBAAqB,iBAC7CgH,EAAgBrX,EAAYqoC,GAChChxB,EAAc8V,SAAd,UAA4BA,EAAS2D,GAArC,YAA2C3D,EAASwC,GAApD,YAA0DxC,EAAS4D,GAAnE,YAAyE5D,EAAS0C,IAElF,IAAIyY,EAAW9B,EAAa9B,EAAYsD,IAAOrjC,EAAQ,EACnD4jC,EAAWzD,EAAaJ,EAAYoD,IAAOljC,EAAS,EAEpD4jC,GAAsB9D,EAAYuD,IAAMvD,EAAYsD,KAAO,EAAtC,GACrBS,GAAqB/D,EAAYuD,IAAMvD,EAAYsD,KAAO,EAAtC,IAEpBpH,EAAW,EAAK3gC,MAAM2T,SAASye,YAAYxgB,EAAO5R,MAAM+R,IACxD02B,EAAgBvb,EAAS4D,KAAO6P,EAAS39B,QAAU8iC,GAAQ,gBAC3DrF,EAAW,EAAKzgC,MAAM2T,SAAS+sB,YAAY9uB,EAAO5R,MAAM+R,IAGxDqJ,GAFgB8R,EAAS0C,KAAO6Q,EAASz9B,QAAU8iC,GAAQ,gBAEzCrB,EAAYuD,IAAMvD,EAAYsD,KAChD1sB,EAAmBopB,EAAYqD,IAAMrD,EAAYoD,IAEjDtlC,EAAW,EAAK6H,gBAAgB,YAChC4T,EAAQ,EAAK0pB,YAAc,CAACrmC,KAAK,GAEjCkB,IAAaqlC,IACTS,EAAUG,GAAqBH,EAAUE,UAElCvqB,EAAM5c,YACN4c,EAAM1c,OACN+mC,EAAUG,UACVxqB,EAAM5c,KACb4c,EAAM1c,OAAQ,IAEd0c,EAAM5c,MAAO,SACN4c,EAAM1c,OAGbmnC,GAAkB5D,EAAYlgC,GAAU8/B,EAAYqD,KAAQjD,GAAa,UAClE7mB,EAAM3c,IACb2c,EAAMzc,QAAS,IAEfyc,EAAM3c,KAAM,SACL2c,EAAMzc,SAIrB6V,EAAcC,UAAY,SAC1BD,EAAcI,YAAc,SAE5B,IAAIkxB,EAAeL,GAAW5D,EAAYuD,IAAMvD,EAAYsD,KAAO,EAC/DY,EAAeL,GAAW7D,EAAYqD,IAAMrD,EAAYoD,KAAO,EAsGnE,OArGIa,GAAe,GACftxB,EAAcK,YAAd,WAA+C,GAAdixB,EAAkBttB,EAAkB,KAAK2iB,WAA1E,KACA3mB,EAAcxB,WAAa,OAE3BwB,EAAcK,YAAc,KAC5BL,EAAcxB,WAAd,WAA6C,EAAd8yB,EAAkBttB,EAAkB,KAAK2iB,WAAxE,MAEJ3mB,EAAcE,UACV,EAAKsxB,iBAAL,WACsB,EAAdD,GAAiB5K,YACrB3iB,EACA,MACRhE,EAAcG,aAAe,MAEzByG,EAAM3c,KACN+V,EAAcC,UAAY,QAC1BD,EAAcE,UACV,EAAKsxB,iBAAL,WACI/D,EAAYJ,EAAYoD,KAAK9J,YAC7B3iB,EACA,EAAKd,QAAQ8tB,EAAiB9wB,YAAc,OAC7C0G,EAAMzc,SACb6V,EAAcE,UAAY,OAE1B0G,EAAM5c,MACNgW,EAAcI,YAAc,QAC5BJ,EAAcxB,WACV,EAAKgzB,iBAAL,WACQrC,EAAY9B,EAAYsD,KAAKhK,YACjC3iB,EACA,EAAKd,QAAQ8tB,EAAiBxyB,aAAe,MAC9CoI,EAAM1c,QACb8V,EAAcxB,WAAa,MAE3BoI,EAAMzc,QACN6V,EAAcC,UAAY2G,EAAM3c,IAAM,UAAW,MACjD+V,EAAcG,aACV,EAAKqxB,iBAAL,WACQnE,EAAYqD,IAAMjD,EAAYlgC,GAAQo5B,YAC1C3iB,EACA,EAAKd,QAAQ8tB,EAAiB7wB,eAAiB,OAChDyG,EAAM3c,MACb+V,EAAcG,aAAe,OAE7ByG,EAAM1c,OACN8V,EAAcI,YAAcwG,EAAM5c,KAAM,UAAW,MACnDgW,EAAcK,YACV,EAAKmxB,iBAAL,WACQnE,EAAYuD,KAAOzB,EAAY7hC,IAAQq5B,YAC3C3iB,EACA,EAAKd,QAAQ8tB,EAAiB3wB,cAAgB,MAC/CuG,EAAM5c,OACbgW,EAAcK,YAAc,MAGhCL,EAAcgE,gBAAkBA,EAChChE,EAAciE,iBAAmBA,EA6C1B,CAACjE,gBAAe8V,WAAUuX,cAAayD,mBAxsD9B,EA2sDpBU,iBAAmB,SAAC/8B,EAAO4O,EAAapB,GACpC,MAAa,OAATA,EACM,GAAN,OAAUxN,EAAV,MACgB,MAATwN,EACD,GAAN,OAAUpB,WAAWpM,GAAS4O,EAAc,IAA5C,KAEO5O,GAjtDK,EAqtDpB+4B,uBAAyB,SAACjwB,EAAO4xB,EAAW1B,EAAWjzB,EAAQlN,EAAOC,EAAQoO,EAAY40B,EAAWC,GACjG,GAAI,EAAKxJ,YAAY,0BACjB,OAAO,EAAKH,aACR,yBAAyBtpB,EAAO4xB,EAAW1B,EAAWjzB,EAAQlN,EAAOC,EAAQoO,EAAY40B,EAAWC,GAE5G,IAAKljC,EAAO,CACR,IAAIkkB,EAAOjU,EAAMtG,SAAQ,GAAO,GAChC3J,EAAQkkB,EAAKlkB,MACbC,EAASikB,EAAKjkB,OAelB,IAAIuoB,EAAUuX,EACd,GAbK1xB,IACDA,EAAanB,EAAOvD,SAAQ,GAAO,IAEnCy3B,GAAQnxB,KACJkwB,EAAY,IAAGA,EAAY,GAC3BA,EAAY9xB,EAAW2I,yBAA2B/W,IAClDkgC,EAAY9xB,EAAW2I,yBAA2B/W,GAClD4hC,EAAY,IAAGA,EAAY,GAC3BA,EAAYxzB,EAAWyI,wBAA0B9W,IACjD6hC,EAAYxzB,EAAWyI,wBAA0B9W,IAIrDohC,GAAQnxB,GACRuY,EAAW,CAACwC,GAAI,EAAGE,GAAI,EAAGiB,GAAI,EAAGC,GAAI,GACrC2T,EAAc,CACVoD,IAAK90B,EAAW1R,IAChBymC,IAAK/0B,EAAW1R,IAAM0R,EAAWpO,OACjCojC,IAAKh1B,EAAW3R,KAChB4mC,IAAKj1B,EAAW3R,KAAO2R,EAAWrO,WAEnC,CACH,IAAIuK,EAAS,EAAKg5B,kBACdl1B,EAAW3R,KAAOmlC,EAClBxzB,EAAW1R,IAAMwjC,EACjBngC,EACAC,EACAiN,EACAmB,GAEJma,EAAWje,EAAOie,SAClBuX,EAAcx1B,EAAOw1B,YAGzB,IAAIyD,EAAiBnoC,EAAY0kC,GAEjC9vB,EAAMwzB,qBAAqB1D,EAAa1xB,GAExC,IAAIq1B,EAAmBzzB,EAAMvE,qBAAqB,iBAC9CgH,EAAgBrX,EAAYqoC,GAChChxB,EAAc8V,SAAd,UAA4BA,EAAS2D,GAArC,YAA2C3D,EAASwC,GAApD,YAA0DxC,EAAS4D,GAAnE,YAAyE5D,EAAS0C,IAElF,IAAIyY,EAAW9B,EAAa9B,EAAYsD,IAAOrjC,EAAQ,EACnD4jC,EAAWzD,EAAaJ,EAAYoD,IAAOljC,EAAS,EAEpD4jC,GAAsB9D,EAAYuD,IAAMvD,EAAYsD,KAAO,EAAtC,GACrBS,GAAqB/D,EAAYuD,IAAMvD,EAAYsD,KAAO,EAAtC,IAEpBpH,EAAW,EAAK3gC,MAAM2T,SAASye,YAAYxgB,EAAO5R,MAAM+R,IACxD02B,EAAgBvb,EAAS4D,KAAO6P,EAAS39B,QAAU8iC,GAAQnxB,GAC3D8rB,EAAW,EAAKzgC,MAAM2T,SAAS+sB,YAAY9uB,EAAO5R,MAAM+R,IACxD82B,EAAgB3b,EAAS0C,KAAO6Q,EAASz9B,QAAU8iC,GAAQnxB,GAE3DyG,EAAkBqpB,EAAYuD,IAAMvD,EAAYsD,KAAOc,EAAc,EAAE,GACvExtB,EAAmBopB,EAAYqD,IAAMrD,EAAYoD,KAAOY,EAAc,EAAE,GAExElmC,EAAWoS,EAAMvK,gBAAgB,YACjC4T,EAAQrJ,EAAM+yB,YAAc,CAACrmC,KAAK,GAElCkB,IAAaqlC,IACTS,EAAUG,GAAqBH,EAAUE,UAElCvqB,EAAM5c,YACN4c,EAAM1c,OACN+mC,EAAUG,UACVxqB,EAAM5c,KACb4c,EAAM1c,OAAQ,IAEd0c,EAAM5c,MAAO,SACN4c,EAAM1c,OAGbmnC,GAAkB5D,EAAYlgC,GAAU8/B,EAAYqD,KAAQjD,GAAa,UAClE7mB,EAAM3c,IACb2c,EAAMzc,QAAS,IAEfyc,EAAM3c,KAAM,SACL2c,EAAMzc,SAIrB6V,EAAcC,UAAY,SAC1BD,EAAcI,YAAc,SAE5B,IAAIkxB,EAAeL,GAAW5D,EAAYuD,IAAMvD,EAAYsD,KAAO,EAC/DY,EAAeL,GAAW7D,EAAYqD,IAAMrD,EAAYoD,KAAO,EA6GnE,OA5GIa,GAAe,GACftxB,EAAcK,YAAd,WAA+C,GAAdixB,EAAkBttB,EAAkB,KAAK2iB,WAA1E,KACA3mB,EAAcxB,WAAa,OAE3BwB,EAAcK,YAAc,KAC5BL,EAAcxB,WAAd,WAA6C,EAAd8yB,EAAkBttB,EAAkB,KAAK2iB,WAAxE,MAEJ3mB,EAAcE,UACV,EAAKsxB,iBAAL,WACsB,EAAdD,GAAiB5K,YACrB3iB,EACA,MACRhE,EAAcG,aAAe,MAEzByG,EAAM3c,KACN+V,EAAcC,UAAY,QAC1BD,EAAcE,UACV,EAAKsxB,iBAAL,WACQ/D,EAAYJ,EAAYoD,KAAK9J,YACjC3iB,EACA,EAAKd,QAAQ8tB,EAAiB9wB,YAAc,OAC7C0G,EAAMzc,SACb6V,EAAcE,UAAY,OAE1B0G,EAAM5c,MACNgW,EAAcI,YAAc,QAC5BJ,EAAcxB,WACV,EAAKgzB,iBAAL,WACQrC,EAAY9B,EAAYsD,KAAKhK,YACjC3iB,EACA,EAAKd,QAAQ8tB,EAAiBxyB,aAAe,MAC9CoI,EAAM1c,QACb8V,EAAcxB,WAAa,MAE3BoI,EAAMzc,QACN6V,EAAcC,UAAY2G,EAAM3c,IAAM,UAAW,MACjD+V,EAAcG,aACV,EAAKqxB,iBAAL,WACQnE,EAAYqD,IAAMjD,EAAYlgC,GAAQo5B,YAC1C3iB,EACA,EAAKd,QAAQ8tB,EAAiB7wB,eAAiB,OAChDyG,EAAM3c,MACb+V,EAAcG,aAAe,OAE7ByG,EAAM1c,OACN8V,EAAcI,YAAcwG,EAAM5c,KAAM,UAAW,MACnDgW,EAAcK,YACV,EAAKmxB,iBAAL,WACQnE,EAAYuD,KAAOzB,EAAY7hC,IAAQq5B,YAC3C3iB,EACA,EAAKd,QAAQ8tB,EAAiB3wB,cAAgB,MAC/CuG,EAAM5c,OACbgW,EAAcK,YAAc,MAGhCL,EAAcgE,gBAAkBA,EAChChE,EAAciE,iBAAmBA,EAoD1B,CAACjE,gBAAe8V,WAAUuX,cAAayD,mBAl6D9B,EAq6DpBC,qBAAuB,SAAC1D,EAAa1xB,GACjC0xB,EAAYsD,KAAOh1B,EAAW3R,KAC9BqjC,EAAYuD,KAAOj1B,EAAW3R,KAC9BqjC,EAAYoD,KAAO90B,EAAW1R,IAC9BojC,EAAYqD,KAAO/0B,EAAW1R,KAz6Dd,EA46DpBynC,qBAAuB,SAACrE,EAAa1xB,GACjC0xB,EAAYsD,KAAOh1B,EAAW3R,KAC9BqjC,EAAYuD,KAAOj1B,EAAW3R,KAC9BqjC,EAAYoD,KAAO90B,EAAW1R,IAC9BojC,EAAYqD,KAAO/0B,EAAW1R,KAh7Dd,EAm7DpBiZ,QAAU,SAACzO,GACP,GAAKA,EAGL,OAAIA,EAAMiG,SAAS,KACR,IAEA,MA17DK,EA87DpBi3B,WAAa,SAACjgC,GACV,IAAIuG,EAAO,EAAKhB,SAAQ,EAAOvF,GAC/B,MAAO,CACHzH,IAAKgO,EAAKhO,IACVD,KAAMiO,EAAKjO,OAl8DC,EAs8DpB4nC,gBAAkB,SAACr6B,EAAGsjB,EAAKC,GACvB,IAAI,EAAKsT,SAAT,CAGA,EAAKA,UAAW,EAEhB,IAAIvqB,EAAY,eAAO,EAAKhZ,MAAMgZ,cAClCA,EAAavW,MAAQ,EAAK2J,UAAU3N,EACpCua,EAAatW,OAAS,EAAK0J,UAAU1N,EAErC,EAAKsoC,WAAa,CACdC,OAAQjuB,EAAavW,MACrBykC,UAAW,EAAK96B,UAAUjN,KAC1BC,IAAK,EAAKgN,UAAUhN,IACpBD,KAAM,EAAKiN,UAAUjN,MAGzB,EAAKikC,gBAAgBpqB,GAErB,EAAK0qB,kBAAiB,GAAM,OAAO5kC,EAAWka,GAE9C,EAAK0kB,YAAc,EAAK3/B,MAAMkX,OAAOkyB,eAAc,GAE/C,EAAKppC,MAAMqpC,mBACX,EAAKrpC,MAAMqpC,oBAEf/pC,OAAOwgB,sBAAsB,EAAKwpB,uBAh+DlB,EAm+DpBrO,cAAgB,SAACtsB,EAAGsjB,EAAKC,EAAOoT,GAC5B,IAAI,EAAKrH,aAAa,gBAAiBtvB,EAAGsjB,EAAKC,EAAOoT,KAGlD,EAAKE,SAAT,CAGI,EAAKxlC,MAAM4R,QACX,EAAK5R,MAAM4R,OAAOI,eAEtB,EAAKwzB,UAAW,EAEhB,IAAIb,EAAW,EAAKt2B,SAAQ,GAExB4M,EAAY,eAAO,EAAKhZ,MAAMgZ,cAClCA,EAAarW,SAAW,QACxBqW,EAAaiS,SAAW,sBACxBjS,EAAa1D,aAAe,OAC5B0D,EAAa3D,UAAY,OACzB2D,EAAarF,WAAa,OAC1BqF,EAAaxD,YAAc,OAC3BwD,EAAavW,MAAQigC,EAASjgC,MAC9BuW,EAAatW,OAASggC,EAAShgC,OAC/BsW,EAAaW,SAAW,OACxBX,EAAac,UAAY,OACzBd,EAAaY,SAAW,QACxBZ,EAAae,UAAY,QACzBf,EAAa0B,QAAU,GACvB1B,EAAalR,OAAS,OACtBkR,EAAa0D,cAAgB,OAE7B1D,EAAa5Z,IAAMsjC,EAAStjC,IAC5B4Z,EAAa7Z,KAAOujC,EAASvjC,KAE7B,EAAK6nC,WAAa,CACdC,OAAQjuB,EAAavW,MACrB6kC,OAAQtuB,EAAatW,OACrB6kC,SAAUvuB,EAAa5Z,IACvB8nC,UAAWluB,EAAa7Z,KACxBkM,UAAW2N,EAAavW,MACxBkK,WAAYqM,EAAatW,OACzB8kC,mBAAoB,EAAK1J,mBAAqB,EAAKA,kBAAkBr7B,MACrEglC,oBAAqB,EAAK3J,mBAAqB,EAAKA,kBAAkBp7B,OACtEglC,iBAAkB,EAAK5J,mBAAqB,EAAKA,kBAAkB1+B,IACnEuoC,kBAAmB,EAAK7J,mBAAqB,EAAKA,kBAAkB3+B,MAGxE,EAAKukC,kBAAiB,GAAM,OAAO5kC,EAAWka,GAE9C,EAAKjb,MAAMkX,OAAOksB,gBAClB,EAAKpjC,MAAMkX,OAAOkyB,eAAc,GAEhC,EAAK/D,gBAAgBpqB,GAErB3b,OAAOwgB,sBAAsB,EAAK+pB,qBAzhElB,EA4hEpBza,WAAa,SAACzgB,EAAGsjB,EAAKC,GAClB,IAAIjX,EAAY,eAAO,EAAKhZ,MAAMgZ,cAE9BgsB,EAAS/U,EAAMxxB,EACfkb,EAAW,EAAK5b,MAAMmL,kBAAkBwF,cACxCshB,EAAIngB,SAAS,OACT,EAAKm3B,WAAWC,QAAoB,GAARjC,EAAYrrB,IACxCqrB,IAAW,EAAKgC,WAAWC,OAASttB,GAAY,GAEpDX,EAAavW,MAAQ,EAAKukC,WAAWC,OAAkB,EAATjC,EAC9C,EAAKgC,WAAW7nC,KAAO,EAAK6nC,WAAWE,UAAYlC,EAC/C,EAAKgC,WAAWE,UAAYlC,EAAS,KACrC,EAAKgC,WAAW7nC,KAAO,KAE3B6wB,EAAIngB,SAAS,OACT,EAAKm3B,WAAWC,QAAoB,EAATjC,EAAarrB,IACxCqrB,GAAU,EAAKgC,WAAWC,OAASttB,GAAY,GACnDX,EAAavW,MAAQ,EAAKukC,WAAWC,OAAkB,EAATjC,EAC9C,EAAKgC,WAAW7nC,KAAO,EAAK6nC,WAAWE,UAAYlC,EAC/C,EAAKgC,WAAWE,UAAYlC,EAAS,KACrC,EAAKgC,WAAW7nC,KAAO,KAG/B,EAAK4kC,gBACD,EAAKiD,WAAW5nC,IAChB,EAAK4nC,WAAW7nC,KAChB9B,OAAOuP,YAAc,EAAKo6B,WAAW5nC,IAAM4Z,EAAatW,OACxDrF,OAAOiJ,WAAa,EAAK0gC,WAAW7nC,KAAO6Z,EAAavW,MACxD,KAGJ,EAAKolC,wBAEL,EAAKb,WAAWc,aAAe,CAC3B9uB,aAAcA,IA9jEF,EAkkEpB6uB,sBAAwB,WACpB,EAAKE,iBAAiBzgC,QAAQkwB,qBAnkEd,EAskEpB6P,oBAAsB,WAClB,IAAI,EAAKrL,aAAa,wBAGjB,EAAKuH,SAGV,GAAK,EAAKyD,WAAWc,aAArB,CAPwB,IAYnB9uB,EAAgB,EAAKguB,WAAWc,aAAhC9uB,aAEL,EAAKoqB,gBAAgBpqB,GAEjB,EAAKjb,MAAMy/B,cACX,EAAKz/B,MAAMy/B,aAAaxkB,EAAavW,MAArC,gBAGJpF,OAAOwgB,sBAAsB,EAAKwpB,0BAZ9BhqC,OAAOwgB,sBAAsB,EAAKwpB,sBA9kEtB,EA6lEpBl9B,SAAW,SAACuC,EAAGsjB,EAAKC,EAAOoT,GACvB,IAAI,EAAKrH,aAAa,WAAYtvB,EAAGsjB,EAAKC,EAAOoT,GAAjD,CAGA,IAAIrqB,EAAY,eAAO,EAAKhZ,MAAMgZ,cAI9BgvB,E1El3BL,SAAyBxoB,EAAQwQ,EAAKC,GACzC,IAAIgY,EAAMzoB,EAAStJ,KAAKmR,GAAK,IACzB6gB,EAAKjY,EAAMxxB,EAAG0pC,EAAKlY,EAAMvxB,EACzB0pC,EAAMlyB,KAAKmyB,KAAKH,EAAKA,EAAKC,EAAKA,GAC/BG,EAAa,IAAPH,EAAWA,EAAKjyB,KAAKgS,IAAI+f,GAAO,EACtCM,EAAa,IAAPL,GAAYA,EAAKhyB,KAAKgS,IAAI+f,GAAO,EAEvCO,EAAStyB,KAAK8R,KAAK9R,KAAKoS,IAAI6f,GAAMjyB,KAAKoS,IAAI4f,IAC3CO,EAASvyB,KAAK8R,KAAK9R,KAAKoS,IAAI6f,GAAMjyB,KAAKoS,IAAI4f,IAE3CA,EAAKC,EAAK,IACVM,GAAUA,GACVP,EAAKC,EAAK,IACVK,GAAUA,GAEd,IAAIE,EAAKxyB,KAAKoS,IAAIpS,KAAKkd,IAAI6U,EAAMO,GAAUJ,GACvCO,EAAKzyB,KAAKoS,IAAIpS,KAAKod,IAAI2U,EAAMQ,GAAUL,GAEvCE,EAAMJ,IACNQ,GAAMA,GACNH,EAAMJ,IACNQ,GAAMA,GAENnpB,EAAS,MACTkpB,GAAMA,EACNC,GAAMA,GAGV,IAAIC,EAAMF,EAAKxyB,KAAKkd,IAAI6U,GACpBY,EAAMH,EAAKxyB,KAAKod,IAAI2U,GACpBa,EAAMH,EAAKzyB,KAAKod,IAAI2U,GACpBc,EAAMJ,EAAKzyB,KAAKkd,IAAI6U,GAEpBD,EAAa,CACb5oC,IAAK,EAAGD,KAAM,EAAGsD,MAAO,EAAGC,OAAQ,GAGnCstB,EAAIngB,SAAS,OACbm4B,EAAWtlC,QAAUgmC,EACrBV,EAAW5oC,MAASspC,EAAKG,GAAO,EAChCb,EAAW7oC,MAASypC,EAAM,GAG1B5Y,EAAIngB,SAAS,OACbm4B,EAAWtlC,QAAUgmC,EACrBV,EAAW5oC,MAASspC,EAAKG,GAAO,EAChCb,EAAW7oC,MAASypC,EAAM,GAG1B5Y,EAAIngB,SAAS,OACbm4B,EAAWvlC,OAASkmC,EACpBX,EAAW5oC,KAAQ2pC,EAAM,EACzBf,EAAW7oC,OAAUwpC,EAAKG,GAAO,GAGjC9Y,EAAIngB,SAAS,OACbm4B,EAAWvlC,OAASkmC,EACpBX,EAAW5oC,KAAQ2pC,EAAM,EACzBf,EAAW7oC,OAAUwpC,EAAKG,GAAO,GAIrC,OADA3hC,QAAQC,IAAI,aAAc4gC,EAAYW,EAAII,EAAKD,GACxCd,E0EozBcgB,EAFH,EAAK76B,qBAAqB,cAAgB,IAAI86B,cAAgB,EAEpCjZ,EAAKC,GAC7CjX,EAAa7Z,KAAO,EAAK6nC,WAAWE,UAAYc,EAAW7oC,KAC3D6Z,EAAa5Z,IAAM,EAAK4nC,WAAWO,SAAWS,EAAW5oC,IACzD4Z,EAAavW,MAAQ,EAAKukC,WAAWC,OAASe,EAAWvlC,MACzDuW,EAAatW,OAAS,EAAKskC,WAAWM,OAASU,EAAWtlC,OAG1D,IAAIkhC,EAAe,EAAK9F,kBAEnBuF,GAAUO,GACX,EAAKsF,kBAAkBlwB,EAAcgX,EAAK,EAAKgX,YAGnD,IAAIrgB,EAAO,CACPvnB,IAAK4Z,EAAa5Z,IAClBD,KAAM6Z,EAAa7Z,KACnBsD,MAAOuW,EAAavW,MACpBC,OAAQsW,EAAatW,QAGzB,EAAK3E,MAAMkX,OAAO6G,kBAAlB,eAA0C6K,GAErC0c,GACD,EAAK8F,kBAAkB,CACnB1qC,EAAGiO,EAAEqa,QACLroB,EAAGgO,EAAEsa,QACLvkB,OAAQutB,EAAIngB,SAAS,MAAQmgB,EAAIngB,SAAS,OAAS8W,EAAKlkB,MACxDC,QAASstB,EAAIngB,SAAS,MAAQmgB,EAAIngB,SAAS,OAAS8W,EAAKjkB,SAG5D2gC,GACD,EAAKU,gBACDpd,EAAKvnB,IACLunB,EAAKxnB,KACL9B,OAAOuP,YAAc+Z,EAAKvnB,IAAMunB,EAAKjkB,OACrCrF,OAAOiJ,WAAaqgB,EAAKxnB,KAAOwnB,EAAKlkB,MACrC,KAGR,EAAK1E,MAAMkX,OAAOoG,gBAAlB,eAAwC,EAAKrb,MAAMsb,gBAC/CqL,EAAM,EAAK3mB,MAAMub,UAErB,EAAKyrB,WAAWc,aAAe,CAC3B9uB,aAAcA,KAhpEF,EAopEpB4uB,kBAAoB,WAChB,IAAI,EAAK5L,aAAa,sBAGjB,EAAKuH,SAGV,GAAK,EAAKyD,WAAWc,aAArB,CAPsB,IAYjB9uB,EAAgB,EAAKguB,WAAWc,aAAhC9uB,aAEL,EAAKoqB,gBAAgBpqB,GAErB3b,OAAOwgB,sBAAsB,EAAK+pB,wBAR9BvqC,OAAOwgB,sBAAsB,EAAK+pB,oBA5pEtB,EAuqEpBuB,kBAAoB,SAACtN,GACjB,EAAK71B,SAAS,CAAC61B,oBAxqEC,EA2qEpBuN,eAAiB,SAAC18B,EAAGsjB,EAAKC,GAAW,IAAD,EACV,EAAKjwB,MAAMgZ,aAA5BvW,EAD2B,EAC3BA,MAAOC,EADoB,EACpBA,OACZ,EAAKg7B,YAAc,EAAK3/B,MAAMkX,OAAOkyB,eAAc,GACnD,EAAK99B,YAAY,EAAK29B,WAAW5nC,IAAK,EAAK4nC,WAAW7nC,KAAMsD,EAAOC,IA9qEnD,EAirEpB2G,YAAc,SAACjK,EAAKD,EAAMsD,EAAOC,GAC7B,EAAKmgC,SAAS,QAASpgC,OAAO3D,OAAWA,EACrC,EAAKf,MAAMmL,kBAAkBgF,oBAEjC,EAAKk1B,kBACL,EAAKxlB,iBAEL,EAAK8lB,kBAAiB,GAAO,GAAO,WAChC,EAAKnG,cACN,CAACn+B,MAAKD,OAAMsD,QAAOC,WACtB,EAAK6gC,UAAW,EAEhB,EAAKQ,gBACD3kC,EAAKD,EACL9B,OAAOuP,YAAcxN,EAAMsD,EAC3BrF,OAAOiJ,WAAanH,EAAOsD,EAC3B,KAGJ,EAAKi7B,YAAc,EAAK3/B,MAAMkX,OAAOC,aAAlB,gBAEnB,EAAKnF,eAED,EAAKhS,MAAMsrC,kBACX,EAAKtrC,MAAMsrC,iBAAiB5mC,EAA5B,gBAEJ,EAAKukC,gBAAaloC,GA3sEF,EA8sEpBmK,iBAAmB,SAACxG,GAChB,EAAKogC,SAAS,QAASpgC,OAAO3D,OAAWA,EACrC,EAAKf,MAAMmL,kBAAkBgF,oBAEjC,EAAK0P,iBAEL,EAAK2f,YAEL,IAAI5W,EAAO,EAAKva,SAAQ,GACpBuN,EAAW,EAAK5b,MAAMmL,kBAAkBwF,cAExCjM,EAAQkX,IACRlX,EAAQkX,GAEZ,IAAIqrB,EAASviC,EAAQkkB,EAAKlkB,MAEtBtD,EADYwnB,EAAKxnB,KACE6lC,EACnB7lC,EAAO,KACPA,EAAO,IAEX,IAAIC,EAAMunB,EAAKvnB,IAEf,EAAK2kC,gBACD3kC,EAAKD,EACL9B,OAAOuP,YAAcxN,EAAMunB,EAAKjkB,OAChCrF,OAAOiJ,WAAanH,EAAOsD,EAC3B,KAGJ,EAAKi7B,YAAc,EAAK3/B,MAAMkX,OAAOC,aAAlB,gBAEnB,EAAKnF,gBA7uEW,EAgvEpBkpB,aAAe,SAACvsB,EAAGsjB,EAAKC,EAAOoT,GAC3B,GAAI,EAAKlH,YAAY,gBACjB,OAAO,EAAKH,aAAa,eAAgBtvB,EAAGsjB,EAAKC,EAAOoT,GAC5D,EAAKE,UAAW,EAEZ,EAAKxlC,MAAMgyB,qBACX,EAAKhyB,MAAMgyB,oBAAX,eAAqCrjB,EAAGsjB,EAAKC,EAAO,EAAKjwB,MAAMgZ,cAEnE,EAAK5M,SAAQ,GAAM,GAEfi3B,GACA,EAAKtlC,MAAM4R,OAAOI,eAGtB,IAAIe,EAAa,EAAK/S,MAAM4R,OAAOvD,SAAQ,GAdN,EAgBJ,EAAKpM,MAAMgZ,aAAvC5Z,EAhBgC,EAgBhCA,IAAKD,EAhB2B,EAgB3BA,KAAMsD,EAhBqB,EAgBrBA,MAAOC,EAhBc,EAgBdA,OAGvB,EAAK4mC,QACDtZ,EAAKC,EAAOoT,EACZlkC,EAAO2R,EAAW3R,KAClBC,EAAM0R,EAAW1R,IAAKqD,EAAOC,EAC7B,EAAKskC,WAAWE,UAAYp2B,EAAW3R,KACvC,EAAK6nC,WAAWO,SAAWz2B,EAAW1R,IACtC,EAAK4nC,WAAWC,OAChB,EAAKD,WAAWM,OAAQx2B,GAE5B,EAAK/S,MAAMkX,OAAOovB,iBAClB,EAAKtmC,MAAMkX,OAAOkyB,eAAc,IA7wEhB,EAgxEpBmC,QAAU,SAACtZ,EAAKC,EAAOoT,EAAOiB,EAAW1B,EAAWngC,EAAOC,EAAQgO,EACxDG,EAAgB04B,EAAYC,EAAa14B,EAAYZ,GAE5D,IAAKA,EAAc,CACf,IAAIO,EAAS,EAAK1S,MAAM+R,GACpBy0B,EAAW,CAACvU,EAAKC,EAAOoT,EAAOiB,EAAW1B,EAAWngC,EAAOC,EAAQgO,EACpEG,EAAgB04B,EAAYC,EAAa14B,GACzC0zB,EAAW,CAACxU,EAAKC,EAAOoT,EAAO3yB,EAC/BG,EAAgB04B,EAAYC,OAAa1qC,OACzCA,OAAWA,OAAWA,EAAWgS,GACrC,EAAK/S,MAAMqT,SAASC,KAAI,SAACvL,GAAW,IAAD,EAC/BA,EAAMwL,QAAQb,GAAQlJ,UAAS,GAC/BzB,EAAMwL,QAAQb,GAAQ1S,MAAM0T,SAASF,aAAazL,EAAMwL,QAAQb,GAAQ1S,MAAM4R,SAC9E,EAAA7J,EAAMwL,QAAQb,IAAQ64B,QAAtB,QAAiC/E,EAAjC,SAA2C,QAC5C,SAACz+B,GAAW,IAAD,EACVA,EAAMwL,QAAQb,GAAQlJ,UAAS,GAC/BzB,EAAMwL,QAAQb,GAAQ1S,MAAM0T,SAASF,aAAazL,EAAMwL,QAAQb,GAAQ1S,MAAM4R,SAC9E,EAAA7J,EAAMwL,QAAQb,IAAQ64B,QAAtB,QAAiC9E,EAAjC,SAA2C,QAInD,GAAI,EAAKrI,YAAY,WACjB,OAAO,EAAKH,aAAa,UACrBhM,EAAKC,EAAOoT,EAAOiB,EAAW1B,EAAWlgC,EAAQD,EAAOiO,EACxDG,EAAgB04B,EAAYC,EAAa14B,EAAYZ,GAE7D,IAAIiF,EAAeqtB,EACfD,EAAa,EAAKkC,kBAAkBH,EAAW1B,EAAW,EAAK7kC,MAAM4R,OAAQlN,EAAOC,GAExFyS,EAAgB,EAAKpX,MAAMotB,mBAAqB,EAAKhd,qBAAqB,iBACtEo0B,EAAWptB,cACfqtB,EAAcD,EAAWC,YAES,YAA9BrtB,EAAcI,aAA0E,SAA7C,EAAKpH,qBAAqB,SAAS1L,MAC9E,EAAKogC,SAAS,QAASpgC,EAAO+/B,OAAa1jC,OAAWA,GAAW,GAEjE,EAAK+jC,SAAS,QAAS,YAAQ/jC,OAAWA,OAAWA,GAAW,GAEhE,EAAKqP,qBAAqB,SAASwL,UACnC,EAAKkpB,SAAS,WAAYpgC,EAAO+/B,OAAa1jC,OAAWA,GAAW,GAEpE,EAAKqP,qBAAqB,SAASyL,UACnC,EAAKipB,SAAS,WAAYpgC,EAAO+/B,OAAa1jC,OAAWA,GAAW,GAGtB,SAA9C,EAAKqP,qBAAqB,SAASzL,QACnC,EAAKmgC,SAAS,SAAUngC,EAAQ8/B,OAAa1jC,OAAWA,GAAW,GAElE,EAAKqJ,gBAAgB,uBAClB,EAAKgG,qBAAqB,SAAS2L,WACnC,EAAK+oB,SAAS,YAAangC,EAAQ8/B,OAAa1jC,OAAWA,GAAW,GAEtE,EAAKqP,qBAAqB,SAAS4L,WACnC,EAAK8oB,SAAS,YAAangC,EAAQ8/B,OAAa1jC,OAAWA,GAAW,IAIzE,EAAKqJ,gBAAgB,cACtB,EAAK6M,iBAAiBG,GAC1B,EAAKiuB,kBACL,EAAK+F,oBAEL,IAAI/pC,EAAMwjC,EAAY9xB,EAAW1R,IAC7BD,EAAOmlC,EAAYxzB,EAAW3R,KAClC,EAAKukC,kBAAiB,GAAO,GAAO,WAChC,EAAKnG,cACN,CAACn+B,MAAKD,OAAMsD,QAAOC,WACtB,EAAK3E,MAAMggC,KAAKoG,WAEXd,GACD,EAAKU,gBACD,EAAK33B,SAAQ,GAAOhN,IAAK,EAAKgN,SAAQ,GAAOjN,KAC7C9B,OAAOuP,YAAc,EAAKR,SAAQ,GAAOhN,IAAMsD,EAC/CrF,OAAOiJ,WAAa,EAAK8F,SAAQ,GAAOjN,KAAOsD,EAC/C,KAGH4gC,GACD,EAAKtlC,MAAMkX,OAAOoG,gBAAlB,eAAwC,EAAKrb,MAAMsb,gBAC/C,EAAKlP,SAAQ,GAAQ,EAAKpM,MAAMub,UAExCtZ,YAAW,WACF,EAAKiG,SAIV,EAAKnK,MAAMkX,OAAOC,iBACnB,KAEH,EAAK8xB,gBAAaloC,EAElB,EAAK8e,gBAAe,GAAO,GAAM,IA32EjB,EA82EpBsrB,kBAAoB,SAAClwB,EAAcgX,EAAKgX,GACpC,IAAI,EAAKhL,aAAa,oBAAqBhjB,EAAcgX,EAAKgX,GAA9D,CAGA,IAAIrC,EAAYE,EACZ7U,EAAIngB,SAAS,KACb80B,EAAa,EAAKC,aACd5rB,EAAa5Z,IAAK4Z,EAAa7Z,MAC5B6wB,EAAIngB,SAAS,OACpB80B,EAAa,EAAKC,aACd5rB,EAAa5Z,IAAM4Z,EAAatW,OAAQsW,EAAa7Z,OAEzD6wB,EAAIngB,SAAS,KACbg1B,EAAa,EAAKD,aACd5rB,EAAa5Z,IAAK4Z,EAAa7Z,MAC5B6wB,EAAIngB,SAAS,OACpBg1B,EAAa,EAAKD,aACd5rB,EAAa5Z,IAAK4Z,EAAa7Z,KAAO6Z,EAAavW,QAG3D,IAAIsiC,EAAY,CACZC,OAAQH,EAAYA,EAAWG,OAAQ,EACvCE,OAAQP,EAAYA,EAAWO,OAAQ,EACvCC,MAAOR,GAAcA,EAAWQ,MAChCF,MAAOJ,GAAcA,EAAWI,OAGhCjV,EAAIngB,SAAS,MACbmJ,EAAatW,QAAUqiC,EAAUG,OACjClsB,EAAa5Z,KAAO2lC,EAAUG,QACvBlV,EAAIngB,SAAS,OACpBmJ,EAAatW,QAAUqiC,EAAUG,QAEjClV,EAAIngB,SAAS,MACbmJ,EAAavW,OAASsiC,EAAUC,OAChChsB,EAAa7Z,MAAQ4lC,EAAUC,QACxBhV,EAAIngB,SAAS,OACpBmJ,EAAavW,OAASsiC,EAAUC,QAGpC,IAAII,EAAe,CACfnH,GAAIjlB,EAAa7Z,KACjB++B,GAAIllB,EAAa7Z,KAAO6Z,EAAavW,OAErC4iC,EAAe,CACfpH,GAAIjlB,EAAa5Z,IACjB8+B,GAAIllB,EAAa5Z,IAAM4Z,EAAatW,QAGxC,EAAK3E,MAAMggC,KAAKoG,SAASY,EAAUI,MAAOJ,EAAUE,MAAOG,EAAcC,KA/5EzD,EAk6EpBxC,SAAW,SAACxkC,EAAMuL,EAAO6/B,EAAiB50B,EAAMpH,EAAgBi8B,GAC5D,GAAI,EAAKvN,YAAY,YACjB,OAAO,EAAKH,aAAa,WAAY39B,EAAMuL,EAAO6/B,EAAiB50B,EAAMpH,GAEhE,UAATpP,GAA6B,WAATA,GACX,aAATA,GAAgC,cAATA,GACd,aAATA,GAAgC,cAATA,EAEvB,EAAKka,WAAWla,EAAMuL,EAAO6/B,EAAiB50B,EAAMpH,EAAgBi8B,GAEpE,EAAKlsB,oBAAoBnf,EAAMuL,EAAOiL,EAAMpH,IA56EhC,EAg7EpB+P,oBAAsB,SAACnf,EAAMuL,EAAOiL,EAAMpH,GACtC,EAAK1P,MAAMmL,kBAAkBoE,QAAQuH,GAAQ,EAAK9W,MAAMC,SAAUK,EAAMuL,EAAO6D,GAC/E,EAAKoL,cAAc+gB,WAl7EH,EAq7EpBne,YAAc,SAACpd,EAAMuL,EAAOiL,IACNA,GAAQ,EAAK9W,MAAMC,UACzBK,GAAQuL,EACpB,EAAKiP,cAAc+gB,WAx7EH,EA27EpBzxB,gBAAkB,SAAC9J,EAAMwW,GAErB,OADiBA,GAAQ,EAAK9W,MAAMC,UAClBK,IA77EF,EAg8EpBmQ,oBAAsB,SAACnQ,EAAMwW,EAAMpH,GAC/B,OAAO,EAAK1P,MAAMmL,kBACbsF,oBAAoBqG,GAAQ,EAAK9W,MAAMC,SAAUK,EAAMoP,IAl8E5C,EAq8EpBI,YAAc,SAACxP,EAAMwW,EAAMpH,GACvB,OAAO,EAAK1P,MAAMmL,kBACb2E,YAAYgH,GAAQ,EAAK9W,MAAMC,SAAUK,EAAMoP,IAv8EpC,EA08EpBU,qBAAuB,SAAC9P,EAAMwW,GAC1B,OAAO,EAAK9W,MAAMmL,kBACbiF,qBAAqB0G,GAAQ,EAAK9W,MAAMC,SAAUK,OAAMS,IA58E7C,EA+8EpByZ,WAAa,SAACla,EAAMuL,EAAO6/B,EAAiB50B,EAAMpH,EAAgBi8B,GAC9D,GAAI,EAAKvN,YAAY,cACjB,OAAO,EAAKH,aAAa,aAAc39B,EAAMuL,EAAO6/B,EAAiB50B,EAAMpH,GAE/E,IAAIk8B,EAAW,EAAKx7B,qBAAqB,QAAS0G,EAAMpH,GACpDqI,EAAW6zB,GAAYA,EAAStrC,GAEpC,QAAcS,IAAV8K,EAAJ,CAKA,IAAKkM,IAAc,EAAK8zB,UAAU9zB,KAAc,EAAK+zB,YAAY/zB,IACnD,SAAVlM,GAAoBqM,MAAMrM,GAK1B,OAJKqM,MAAMrM,KACPA,GAAO,WAEX,EAAKmhB,cAAc1sB,EAAMuL,EAAOiL,EAAMpH,EAAgBi8B,GAO1D,GAHIzzB,MAAMrM,IAAUA,EAAMiG,SAAS,QAC/BjG,EAAQoM,WAAWpM,EAAMlG,QAAQ,KAAM,MAEvC,EAAKkmC,UAAU9zB,GAAW,CAC1B,IAIIg0B,GAAYlgC,EAJC,CACbnH,MAAOgnC,EAAkBA,EAAgB1D,IAAM0D,EAAgB3D,IAAMzoC,OAAOiJ,WAC5E5D,OAAQ+mC,EAAiBA,EAAgB5D,IAAM4D,EAAgB7D,IAAMvoC,OAAOuP,aAE7C,EAAKm9B,eAAe1rC,IAAS,KAAKy9B,WAAa,IAClF,EAAK/Q,cAAc1sB,EAAMyrC,EAAUj1B,EAAMpH,EAAgBi8B,QACtD,GAAI,EAAKG,YAAY/zB,GAAW,CACnC,IAAI0C,EACAwxB,EACAl0B,EAASjG,SAAS,QAClB2I,EAAc,EAAKza,MAAMmL,kBAAkBiD,kBAC3C69B,EAAU,MAEVl0B,EAASjG,SAAS,QAClB2I,EAAc,EAAKza,MAAMmL,kBAAkBgD,iBAC3C89B,EAAU,MAEd,IAAIF,GAAYlgC,EAAQ4O,EAAc,KAAKsjB,WAAakO,EACxDF,EAAWxxB,GAAkBwxB,GAC7B,EAAK/e,cAAc1sB,EAAMyrC,EAAUj1B,EAAMpH,EAAgBi8B,SApCzD,EAAK3e,cAAc1sB,EAAMuL,EAAOiL,EAAMpH,EAAgBi8B,IAv9E1C,EA+/EpBK,eAAiB,SAAC1rC,GACd,MAAa,UAATA,GACS,aAATA,GACS,aAATA,EAEO,QAGJ,UAvgFS,EA0gFpBurC,UAAY,SAAChgC,GACT,SAAIqM,MAAMrM,KACFA,EAAMiG,SAAS,OA5gFP,EAmhFpBg6B,YAAc,SAACjgC,GACX,SAAIqM,MAAMrM,KACFA,EAAMiG,SAAS,QAASjG,EAAMiG,SAAS,QArhF/B,EA4hFpBuzB,gBAAkB,SAAC6G,EAAiBC,GAChC,IAAI,EAAKlO,aAAa,kBAAmBiO,GAAzC,CAGA,IAAIjxB,EAAeixB,GAAe,eAAQA,GAC1C,EAAKjkC,SAAS,CAACgT,eAAckxB,iBAC7B,EAAKrxB,cAAc+gB,YAliFH,EAqiFpBuQ,mBAAqB,WACjB,MAAM,mBAAN,OAA0B,EAAKpsC,MAAM+R,KAtiFrB,EAyiFpBkF,iBAAmB,SAACo1B,EAAkB38B,EAAgB48B,GAClD,IAAI,EAAKrO,aAAa,mBAAoBoO,EAAkB38B,EAAgB48B,GAA5E,CAGA,IAAIl1B,EAAa,eAAOi1B,GAEnBC,GACD,EAAK7sB,oBAAoB,gBAAiBrI,OAAerW,EAAW2O,GAExE,IAAI3J,EAAYzB,SAAS8gB,eAAe,EAAKgnB,sBAExCrmC,EAIDD,EAAYC,EAAW,EAAKqK,qBAAqB,iBAAkB,EAAKg8B,sBAHxE9lC,EAAY,EAAK8J,qBAAqB,iBAClC,EAAKg8B,qBAAsB,EAAKA,qBADzB,gBAMf,EAAKtxB,cAAc+gB,YA3jFH,EA8jFpBzL,YAAc,SAAClD,EAAUxd,GACrB,IAAI,EAAKuuB,aAAa,cAAe/Q,GAArC,CAGA,IAAI9V,EAAgB,EAAKtH,YAAY,iBACrCsH,EAAc8V,SAAWA,EAEzB,EAAKjW,iBAAiBG,EAAe1H,KArkFrB,EAwkFpB+f,YAAc,WACV,IAAI,EAAKwO,aAAa,eAItB,OADoB,EAAK7tB,qBAAqB,iBACzB8c,UA7kFL,EAglFpBF,cAAgB,SAACvd,EAAO5D,EAAOiL,EAAMpH,EAAgBi8B,GACjD,GAAI,EAAKvN,YAAY,iBACjB,OAAO,EAAKH,aAAa,gBAAiBxuB,EAAO5D,EAAOiL,EAAMpH,GAElE,IAAI1J,EAAQ,EAAKyK,oBAAoB,QAASqG,EAAMpH,IAAmB,GACvE1J,EAAMyJ,GAAS5D,OACD9K,IAAV8K,UACO7F,EAAMyJ,GACjB,EAAK2vB,SAASp5B,EAAO8Q,EAAMpH,OAAgB3O,EAAW4qC,IAxlFtC,EA2lFpBY,WAAa,WACT,MAAM,SAAN,OAAgB,EAAKvsC,MAAM+R,KA5lFX,EA+lFpBy6B,iBAAmB,WACf,MAAM,gBAAN,OAAuB,EAAKxsC,MAAM+R,KAhmFlB,EAmmFpB06B,eAAiB,SAACC,EAAgB51B,EAAMpH,EAAgB48B,GACpD,IAAI,EAAKrO,aAAa,iBAAkByO,EAAgB51B,EAAMpH,EAAgB48B,GAA9E,CAGA,IAAI7e,EAAW,eAAOif,GAItB,GAHKJ,GACD,EAAK7sB,oBAAoB,cAAegO,EAAa3W,EAAMpH,IAE1DoH,EAAM,CACP,IAAI61B,EAAkBroC,SAAS8gB,eAAe,EAAKonB,oBAE9CG,EAID7mC,EAAY6mC,EAAiB,EAAKv8B,qBAAqB,eAAgB,EAAKo8B,oBAH5ElmC,EAAY,EAAK8J,qBAAqB,eAClC,EAAKo8B,mBAAoB,EAAKA,mBADvB,gBAMf,EAAK3sB,iBACL,EAAK2f,YAGT,EAAK1kB,cAAc+gB,YAznFH,EA4nFpB+Q,oBAAsB,WAClB,MAAM,mBAAN,OAA0B,EAAK5sC,MAAM+R,KA7nFrB,EAgoFpB8P,kBAAoB,SAACgrB,EAAc/1B,EAAMpH,EAAgB48B,GACrD,IAAI,EAAKrO,aAAa,oBAAqB4O,EAAc/1B,EAAMpH,EAAgB48B,GAA/E,CAGA,IAAI5vB,EAAS,eAAOmwB,GAIpB,GAHKP,GACD,EAAK7sB,oBAAoB,YAAa/C,EAAW5F,EAAMpH,IAEtDoH,EAAM,CACP,IAAIg2B,EAAqBxoC,SAAS8gB,eAAe,EAAKwnB,uBAEjDE,EAIDhnC,EAAYgnC,EAAoB,EAAKC,oBAAqB,EAAKH,uBAH/DtmC,EAAY,EAAKymC,oBACb,EAAKH,sBAAuB,EAAKA,sBAD1B,gBAOnB,EAAK9xB,cAAc+gB,YAnpFH,EAspFpBkR,kBAAoB,SAACC,GACZA,IACDA,EAAqB,EAAK58B,qBAAqB,cAAgB,IAEnE,IAAI68B,EAAQ,GAKZ,OAFAD,EAAmB9B,cAAgB+B,EAAMlgC,KAAN,iBAAqBigC,EAAmB9B,aAAxC,SAE5B,CAACxuB,UAAWuwB,EAAMxhB,KAAK,OA/pFd,EAkqFpB2T,SAAW,SAAC8N,EAAUp2B,EAAMpH,EAAgB48B,EAAcX,GACtD,IAAI,EAAK1N,aAAa,WAAYiP,EAAUp2B,EAAMpH,EAAgB48B,GAAlE,CAGA,IAAItmC,EAAK,eAAOknC,GAKhB,GAHKZ,GACD,EAAK7sB,oBAAoB,QAASzZ,EAAO8Q,EAAMpH,IAE9CoH,EAAM,CACP,IAAI/Q,EAAYzB,SAAS8gB,eAAe,EAAKmnB,cAExCxmC,EAKDD,EAAYC,EACR,EAAKqK,qBAAqB,SAC1B,EAAKm8B,cANTjmC,EACI,EAAK8J,qBAAqB,SAC1B,EAAKm8B,aAAc,EAAKA,aAFjB,gBASVZ,IACD,EAAK9rB,iBACL,EAAK2f,aAIb,EAAK1kB,cAAc+gB,YA9rFH,EAisFpBkJ,eAAiB,SAAC/kC,EAAO8W,EAAMq2B,GACZ,EAAKntC,MAAMmL,kBAAkB1I,uBACnC6J,SAAS,SAAAK,GACVwgC,IAAcxgC,EAAGjK,MAASyqC,EAAUr7B,SAASnF,EAAGjK,OAChD,EAAK+c,oBAAoBzf,OAAOe,EAAW+V,EAAMnK,EAAGjK,UArsF5C,EAysFpBiuB,QAAU,SAAC3C,EAAM3mB,EAAUqI,GACnB,EAAKuuB,aAAa,UAAWjQ,EAAM3mB,EAAUqI,KAGjD,EAAK+P,oBAAoB,OAAQuO,OAAMjtB,EAAW2O,GAClD,EAAKzH,SAAS,CAAC+lB,KAAMA,IAAO,WACxB,GAAI,EAAKhuB,MAAM2T,SAASC,YAAY,EAAK5T,MAAM+R,IAAK,CAChD,IAAI1C,EAAO,EAAKhB,SAAQ,GACxB,EAAK23B,gBACD32B,EAAKhO,IACLgO,EAAKjO,KACLiO,EAAKhO,IAAMgO,EAAK8oB,aAChB9oB,EAAKjO,KAAOiO,EAAKnK,YACjB,EAAKlF,MAAM2T,SAASC,YAAY,EAAK5T,MAAM+R,KAI/C1K,GACAA,SA3tFQ,EA+tFpBirB,gBAAkB,SAAChZ,EAAKrM,EAAOglB,EAAKhoB,GAChC,GAAIqP,EAAI/P,QACJ,OAAO+P,EAAI/P,QAAQqf,KAGvB,IAAI7V,EAAa9I,EAAKjK,MAAM4R,QAAU3H,EAAKjK,MAAM4R,OAAOvD,SAAQ,IAAU,CACtE3J,MAAOuF,EAAKjK,MAAMmL,kBAAkBgD,kBAEpCiI,EAAUrW,EAAYkK,EAAKmG,qBAAqB,aAAe,GACnE,CAAC,MAAO,OAAQ,SAAU,SAAS9D,SAAQ,SAAAmJ,GACvCW,EAAQX,GAAOkF,GAAuBvE,EAAQX,GAAM1C,EAAWrO,MAAOuF,IAAS,KAGnF,IAAI06B,EAAW16B,EAAKoE,SAAQ,GAC5B,MAAY,MAAR4jB,EACc,IAAVhlB,EACO,CACH7L,KAAMujC,EAASvjC,KAAOujC,EAAS7H,WAAa1mB,EAAQhV,KACpDC,IAAKsjC,EAAStjC,IAAMsjC,EAAS/H,UAAYxmB,EAAQ/U,IACjDsD,OAAQggC,EAASzH,aAAe9mB,EAAQ/U,IAAM+U,EAAQ7U,OACtDmD,MAAO,GAGJ,CACHtD,KAAMujC,EAASvjC,KAAOujC,EAAS7H,WAAa6H,EAAS3H,YAAc5mB,EAAQ9U,MAAQ,EACnFD,IAAKsjC,EAAStjC,IAAMsjC,EAAS/H,UAAYxmB,EAAQ/U,IACjDsD,OAAQggC,EAASzH,aAAe9mB,EAAQ/U,IAAM+U,EAAQ7U,OACtDmD,MAAO,GAID,IAAVuI,EACO,CACH5L,IAAKsjC,EAAStjC,IAAMsjC,EAAS/H,UAAYxmB,EAAQ/U,IACjDD,KAAMujC,EAASvjC,KAAOujC,EAAS7H,WAAa1mB,EAAQhV,KACpDuD,OAAQ,EACRD,MAAOigC,EAAS3H,YAAc5mB,EAAQhV,KAAOgV,EAAQ9U,OAGlD,CACHD,IAAKsjC,EAAStjC,IAAMsjC,EAAS/H,UAAY+H,EAASzH,aAAe9mB,EAAQ7U,OAAS,EAClFH,KAAMujC,EAASvjC,KAAOujC,EAAS7H,WAAa1mB,EAAQhV,KACpDuD,OAAQ,EACRD,MAAOigC,EAAS3H,YAAc5mB,EAAQhV,KAAOgV,EAAQ9U,QA1wFjD,EAgxFpB8rC,mBAAqB,SAAChsC,EAAMC,EAAKuQ,GAAuC,IAGhElR,EACAypC,EAJiCkD,EAA8B,wDAAft6B,EAAe,uCAC9DA,IACDA,EAAanB,EAAOvD,SAAQ,IAIhC,IADA,IA6BI1N,EACAypC,EA9BA3J,EAAW,EAAKzgC,MAAM2T,SAAS+sB,YAAY9uB,EAAO5R,MAAM+R,IACpDjP,EAAI,EAAGA,EAAI29B,EAASz9B,OAAQF,IAAK,CACrC,IAAI8lB,EAAO,EAAK0J,gBAAgBmO,EAAS39B,GAAIA,EAAG,IAAK8O,GACrD,GAAIxQ,EAAOwnB,EAAKxnB,MAASisC,GAASjsC,GAAQwnB,EAAKxnB,KAAO,CAClDV,EAAIoC,EAYAqnC,EAXCkD,EAWIzkB,EAAKxnB,KAVNq/B,EAAS39B,EAAI,IAGb8lB,EAAO,EAAK0J,gBAAgBmO,EAAS39B,EAAI,GAAIA,EAAI,EAAG,IAAK8O,IAC/CxQ,KAGLwnB,EAAKxnB,KAKlB,OAGR,QAAUL,IAANL,EAAiB,CACjBA,EAAI+/B,EAASz9B,OAGb,IAAI4lB,EAAO,EAAK0J,gBAAgBmO,EAASA,EAASz9B,OAAS,GAAIy9B,EAASz9B,OAAS,EAAG,IAAK4O,GACzFu4B,EAAKvhB,EAAKxnB,KAMd,IADA,IAAIu/B,EAAW,EAAK3gC,MAAM2T,SAASye,YAAYxgB,EAAO5R,MAAM+R,IACpDjP,EAAI,EAAGA,EAAI69B,EAAS39B,OAAQF,IAAK,CAGrC,IAAI8lB,EAAO,EAAK0J,gBAAgBqO,EAAS79B,GAAIA,EAAG,IAAK8O,GACrD,GAAIvQ,EAAMunB,EAAKvnB,KAAQgsC,GAAShsC,GAAOunB,EAAKvnB,IAAM,CAC9CV,EAAImC,EAYAsnC,EAXCiD,EAWIzkB,EAAKvnB,IAVNs/B,EAAS79B,EAAI,IAGb8lB,EAAO,EAAK0J,gBAAgBqO,EAAS79B,EAAI,GAAIA,EAAI,EAAG,IAAK8O,IAC/CvQ,IAGLunB,EAAKvnB,IAKlB,OAGR,QAAUN,IAANJ,EAAiB,CACjBA,EAAIggC,EAAS39B,OAGb,IAAI4lB,EAAO,EAAK0J,gBAAgBqO,EAASA,EAAS39B,OAAS,GAAI29B,EAAS39B,OAAS,EAAG,IAAK4O,GACzFw4B,EAAKxhB,EAAKvnB,IAkBd,OAfIgsC,IACA3sC,IACAC,KAGJD,EAAIyX,KAAKE,IAAI,EAAG3X,GAChBA,EAAIyX,KAAKC,IAAIqoB,EAASz9B,OAAQtC,GAC9BC,EAAIwX,KAAKE,IAAI,EAAG1X,GAChBA,EAAIwX,KAAKC,IAAIuoB,EAAS39B,OAAQrC,GAE1BD,IAAM+/B,EAASz9B,QACfmnC,IACAxpC,IAAMggC,EAAS39B,QACfonC,IAEG,CAAC1pC,IAAGC,IAAGwpC,KAAIC,OAl2FF,EAq2FpBnC,kBAAoB,SAAC7mC,EAAMC,EAAKqD,EAAOC,EAAQiN,EAAQmB,GACnD,IAAK,EAAK/S,MAAM2T,SAASC,YAAYhC,EAAO5R,MAAM+R,IAC9C,MAAO,CACHmb,SAAU,CAACwC,GAAI,EAAGmB,GAAI,EAAGjB,GAAI,EAAGkB,GAAI,GACpC2T,YAAa,CAACsD,IAAK,EAAGF,IAAK,EAAGG,IAAK,EAAGF,IAAK,IAGnD,IAAIwF,EAAY,EAAKF,mBAAmBhsC,EAAMC,EAAKuQ,GAAQ,EAAOmB,GAC9Dw6B,EAAY,EAAKH,mBAAmBhsC,EAAOsD,EAAOrD,EAAMsD,EAAQiN,GAAQ,EAAMmB,GAClF,MAAO,CACHma,SAAU,CAACwC,GAAI4d,EAAU5sC,EAAGmwB,GAAIyc,EAAU3sC,EAAGivB,GAAI2d,EAAU7sC,EAAGowB,GAAIyc,EAAU5sC,GAC5E8jC,YAAa,CAACsD,IAAKuF,EAAUnD,GAAItC,IAAKyF,EAAUlD,GAAIpC,IAAKuF,EAAUpD,GAAIrC,IAAKyF,EAAUnD,MAh3F1E,EAo3FpBzhB,YAAc,SAACha,EAAG82B,GACV,EAAKnL,YAAY3rB,IACjBA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK6L,WAAY,EACjB,EAAKiL,cAAgBA,EACrB,EAAK+H,WAAa,CACdvG,OAAQ,EACRE,OAAQ,EACRsG,YAAa9+B,EAAEqa,QACf0kB,YAAa/+B,EAAEsa,QACf0kB,aAAc,IAAIC,MAAQC,WAE9BvuC,OAAO0R,iBAAiB,YAAa,EAAK8X,aAC1CxpB,OAAO0R,iBAAiB,UAAW,EAAK+X,YACjC+kB,GAAan/B,KACpBA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK6L,WAAY,EACjBl7B,OAAO0R,iBAAiB,UAAW,EAAK+X,aAv4F5B,EA24FpBuR,YAAc,SAAC3rB,GACX,OAAiB,IAAbA,EAAE+rB,QA54FU,EAk5FpB5R,YAAc,SAACna,GACX,GAAK,EAAK6rB,UAQV,GALA,EAAKgT,WAAWvG,QAAWt4B,EAAEqa,QAAU,EAAKwkB,WAAWC,YACvD,EAAKD,WAAWrG,QAAWx4B,EAAEsa,QAAU,EAAKukB,WAAWE,YACvD,EAAKF,WAAWC,YAAc9+B,EAAEqa,QAChC,EAAKwkB,WAAWE,YAAc/+B,EAAEsa,QAE3B,EAAK0R,OAaN,EAAKoT,WAAa,EAAKnT,OAAOjsB,EAAGq/B,GAAgB,iBAAO,OAb1C,CACd,IAAIC,GAAgB,IAAIL,MAAOC,WAC3B11B,KAAKoS,IAAI,EAAKijB,WAAWvG,QAAU,IACnC9uB,KAAKoS,IAAI,EAAKijB,WAAWrG,QAAU,IACnC8G,EAAgB,EAAKT,WAAWG,YAAc,OAEzC,EAAK1rC,MAAMisC,gBAAiB,EAAK9jC,gBAAgB,cAAiB,EAAKnI,MAAM63B,UAC9E,EAAKtwB,UAAS,GAElB,EAAKmxB,QAAS,EACd,EAAKoT,WAAa,EAAKlT,YAAYlsB,EAAGq/B,GAAgB,iBAAO,MAr6FrD,EA46FpBD,QAAU,WACN,OAAQ,EAAK9rC,MAAM63B,UAAY,EAAK73B,MAAMisC,gBAAkB,EAAK9jC,gBAAgB,cA76FjE,EAg7FpB2e,UAAY,SAACpa,GACT,GAAK,EAAK6rB,UAAV,CAKA,UAFO,EAAKiL,cAERqI,GAAan/B,GAIb,OAHA,EAAKw/B,cAAcx/B,GACnB,EAAK6rB,WAAY,OACjBl7B,OAAO2R,oBAAoB,UAAW,EAAK8X,WAI/C,IAAIklB,GAAgB,IAAIL,MAAOC,WAC1B,EAAKlT,QAAUsT,EAAgB,EAAKT,WAAWG,YAAc,MACzD,EAAKtH,QAIN,EAAKA,SAAU,GAHf13B,EAAE4rB,kBACF,EAAK/wB,UAAS,OAAMzI,OAAWA,GAAW,KAM9C,EAAK45B,QAAU,EAAKoT,WACpBzuC,OAAOwgB,uBAAsB,WACzB,EAAKgb,WAAWnsB,EAAGq/B,GAAgB,iBAAO,MAIlD,EAAKrT,QAAS,EACd,EAAKH,WAAY,EAEjBl7B,OAAO2R,oBAAoB,YAAa,EAAK6X,aAC7CxpB,OAAO2R,oBAAoB,UAAW,EAAK8X,aAj9F3B,EAo9FpBvf,SAAW,SAACswB,EAAUzyB,EAAU+mC,EAAgBC,EAASC,GAChD,EAAK3O,aAEN,EAAK1B,aAAa,WAAYnE,EAAUzyB,EAAU+mC,IAGjD,EAAKjkC,SAEL,EAAKnK,MAAMuuC,eAGZzU,GACA,EAAK95B,MAAMkX,OAAOs3B,WAAlB,eAAmCH,EAASC,GAC5C,EAAKv6B,gBAAgB+lB,OAAU/4B,EAAW,MAE1C,EAAKf,MAAMkX,OAAOusB,sBAGlB,EAAKzjC,MAAM4R,QACPkoB,GAAYsU,IACZ,EAAKpuC,MAAM4R,OAAOmC,gBAAgB+lB,GAAU,WACxC,EAAKznB,gBAAgBynB,GAAY,EAAK95B,MAAM4R,UAC7C,MAEPkoB,GAAY,EAAK95B,MAAM2T,SAAS86B,qBAAqB,KACrD,EAAKzuC,MAAMkX,OAAOusB,uBAGtB,EAAK/lB,YAAY,WAAYoc,GAExB,EAAK3vB,SAGV,EAAKlC,SAAS,CAAC6xB,WAAUoU,eAAe,IAAQ,WAC5CpU,GAAY,EAAK+J,cAAa,GAE9B,EAAK7jC,MAAMsH,OAAOwa,eAEdza,GACAA,UA3/FQ,EA+/FpB0M,gBAAkB,SAAC26B,EAAernC,EAAUg9B,GACxC,IAAI,EAAKpG,aAAa,kBAAmByQ,EAAernC,EAAUg9B,IAG7D,EAAKl6B,QAAV,CAGA,IAAKukC,EAGD,OAFA,EAAK1uC,MAAM2T,SAAS4vB,eAAe,EAAKvjC,MAAM+R,SAC9C,EAAK+P,eAIT,GAAI,EAAK9hB,MAAM2T,SAASC,YAAY,EAAK5T,MAAM+R,GAAIsyB,GAM/C,OALIh9B,GACAA,SAEJ,EAAKya,eAKT,IAAIkM,EAAO,EAAK5d,qBAAqB,QACrC,EAAKpQ,MAAM2T,SAASuyB,QAChB,EAAKlmC,MAAM+R,GACXic,EAAKttB,EACLstB,EAAKrtB,EACL0jC,EACArW,EAAKG,iBACLH,EAAKI,oBACL,CACI/sB,IAAK,EACLD,KAAM,EACNG,OAAQ,EACRD,MAAO,IAEX,WACQ+F,GACAA,IAEJ,EAAKya,oBAviGG,EA4iGpBzP,gBAAkB,SAACkL,EAAiBlW,GAC5B,EAAK42B,aAAa,kBAAmB1gB,EAAiBlW,IAGtD,EAAK8C,SACL,EAAKlC,SAAS,CACVsV,gBAAiBA,IAAe,gBAAaA,IAC9C,WACCA,GACA,EAAKvd,MAAMkX,OAAOoG,gBAAlB,eAAwC,EAAKrb,MAAMsb,gBAC/C,EAAKlP,SAAQ,GAAQ,EAAKpM,MAAMub,UAEhCnW,GACAA,QAzjGI,EA8jGpB8yB,SAAW,SAACxrB,GACRvF,QAAQC,IAAI,WAAY,EAAKrJ,MAAM+R,IAC/B,EAAKksB,aAAa,WAAYtvB,KAGlC,EAAKgxB,YAAc,EAAK9f,gBAAe,GAAM,GAAO,GACpD,EAAK8f,YAAc,EAAK3/B,MAAMkX,OAAOy3B,oBACrC,EAAKhP,YAAc,EAAK3/B,MAAMkX,OAAOC,eACrC,EAAKy3B,YAAYjgC,KAtkGD,EAykGpBkgC,aAAe,SAAClgC,GACR,EAAKvE,gBAAgB,YACrB,EAAKpK,MAAM4R,OAAOk9B,YAAYngC,IA3kGlB,EA+kGpBmgC,YAAc,SAACngC,GACXvF,QAAQC,IAAI,cAAe,EAAKrJ,MAAM+R,GAAI,EAAK8W,WAAWtf,QAAQqzB,UAAWjuB,EAAEw4B,QAE/EhjC,aAAa,EAAK4qC,aAEb,EAAKC,eAAc,EAAKA,aAAe,CACxC3tC,IAAK,EAAKwnB,WAAWtf,QAAQqzB,YAG7B,EAAKoS,aAAa3tC,IAAM,GAAKsN,EAAEw4B,OAAS,IACxC,EAAK6H,aAAa3tC,IAAM,GAE5B,IAAI4tC,EAAS,EAAKpmB,WAAWtf,QAAQ2zB,aAAe,EAAK7uB,SAAQ,GAAO1J,OACpE,EAAKqqC,aAAa3tC,IAAM4tC,GAAUtgC,EAAEw4B,OAAS,IAC7C,EAAK6H,aAAa3tC,IAAM4tC,GAG5B,EAAKD,aAAa3tC,KAAOsN,EAAEw4B,OAE3B,EAAKte,WAAWtf,QAAQ2lC,SAAS,CAC7B7tC,IAAK,EAAK2tC,aAAa3tC,IACvB8tC,SAAU,WAGd,EAAKJ,YAAc7qC,YAAW,WAC1B,EAAK8qC,aAAe,CAChB3tC,IAAK,EAAKwnB,WAAWtf,QAAQqzB,aAElC,MA3mGa,EA8mGpBgS,YAAc9O,KAAS,SAACnxB,GAChB,EAAKsvB,aAAa,cAAetvB,KAGrC,EAAKgxB,YAAc,EAAK9f,iBACxB,EAAK8f,YAAc,EAAKH,eACzB,KApnGiB,EAsnGpB4P,SAAW,WACP,EAAKpvC,MAAMkhC,cAAc33B,QAAQ8lC,QAAjC,iBAvnGgB,EA0nGpBC,iBAAmB,WACf,EAAKtvC,MAAMkhC,cAAc33B,QAAQpB,OAAjC,iBA3nGgB,EA8nGpBonC,UAAY,SAACxuB,GACL,EAAKkd,aAAa,YAAald,KAGnC,EAAKrD,YAAY,SAAUqD,GAC3B,EAAKe,iBAnoGW,EAsoGpB6d,SAAW,WACP,OAAO,EAAK3/B,MAAMsH,QAvoGF,EA0oGpB8jB,cAAgB,SAACokB,GACb,IAAIpjB,EAAkBzJ,GAAuB,gBAC7C,GAAKyJ,EAAgBd,WAAcc,EAAgBd,UAAU5oB,OAGzD,EAAKoN,YAAY,eAArB,CAIA,IAEI2/B,EAAc,CACdC,SAAU,kBACVC,eAAe,EACfC,eALiB/jB,GAAkBO,EAAgBd,UAAU5oB,MAAMktC,gBAQnEJ,IACAC,EAAY9R,WAAY,EACxB,EAAKjgB,YAAY,eAAe,IAGpC,EAAKiiB,YAAc,EAAK3/B,MAAMkX,OAAOkyB,eAAc,GACnD,EAAKzJ,YAAc,EAAK3/B,MAAMkX,OAAO24B,gBAAe,GAEpD,EAAK5nC,SAASwnC,KAnqGE,EAsqGpBG,eAAiB,WACb,EAAK3nC,SAAS,CAACynC,cAAU3uC,EAAW4uC,mBAAe5uC,IACnD,EAAK4+B,YAAc,EAAK3/B,MAAMkX,OAAOkyB,eAAc,GACnD,EAAKzJ,YAAc,EAAK3/B,MAAMkX,OAAO24B,gBAAe,IAzqGpC,EA4qGpBC,yBAA2B,WAA8B,IAA7BC,EAA4B,uDAAP,GAC7C,GAAMA,EAAmBrtC,MAAQ,EAAKT,MAAMytC,UAAY,EAAKztC,MAAM0tC,cAGnE,OAAO9jB,GAAkBkkB,EAAmBrtC,MACvCstC,gBADE,eACoBD,EAAmBrxB,UAjrG9B,EAorGpByvB,cAAgB,SAACx/B,GACR,EAAKgxB,aAEVhxB,EAAEggB,iBACF,EAAKnlB,UAAS,GACd,EAAKxJ,MAAMkX,OAAOi3B,cAAcx/B,EAAhC,kBAzrGgB,EA4rGpBshC,eAAiB,WACb,GAAI,EAAK7R,YAAY,kBACjB,OAAO,EAAKH,aAAa,mBA3rG7B,EAAKh8B,MAAQ,CACTiuC,gBAAiB,GACjBliB,KAAM,CAACttB,EAAG,EAAGC,EAAG,EAAGwtB,iBAAkB,MAAOC,oBAAqB,OACjE3c,aAAczR,EAAMyR,aACpB0+B,YAAanwC,EAAMmL,kBAAkBgD,kBAGzC,EAAK0a,WAAa5hB,IAAM+R,YACxB,EAAKkhB,YAAel6B,EAAMs0B,OAA2B,EAAKzL,WAAxB5hB,IAAM+R,YACxC,EAAKihB,aAAehzB,IAAM+R,YAC1B,EAAKgxB,iBAAmB/iC,IAAM+R,YAC9B,EAAKqkB,aAAep2B,IAAM+R,YAC1B,EAAKzO,aAAe,GAEpB,EAAKwB,SAAW,GAEhBrM,EAAaM,EAAMC,SAAU,EAAKD,MAAMmL,mBAExC,EAAKnL,MAAM+H,MAAMqoC,QAAQ,EAAKpwC,MAAM+R,GAApC,gBAEA,EAAK+I,cAAgB,IAAI0gB,GAAJ,gBAER,mCAAbx7B,EAAM+R,IAA2C3I,QAAQC,IAAI,iCAAkCrJ,EAAMC,UAzBrF,E,gEA8BhB6L,KAAK3B,SAAU,EACf2B,KAAKuyB,S,yCAGWgS,EAAWC,EAAWC,GAAW,IAAD,OAC5CzkC,KAAKwyB,oBACExyB,KAAKwyB,WACZxyB,KAAKgW,cAAa,WACd,EAAK6d,WAAa,EAAKn2B,SAAS,EAAKY,gBAAgB,YAAa,EAAKm1B,aAAe,EAAKA,oB,6CAMnGzzB,KAAK3B,SAAU,EACf2B,KAAK6zB,YAAc7zB,KAAK9L,MAAMsH,OAAOwa,iB,+BAopG9B,IAAD,EAEiEhW,KAAK9L,MADvEsV,EADC,EACDA,UAAyB6X,GADxB,EACUgf,aADV,EACwBhf,IAAI7lB,EAD5B,EAC4BA,OAAQ4P,EADpC,EACoCA,OAAQnF,EAD5C,EAC4CA,GAAIsa,EADhD,EACgDA,kBAClDiI,EAFE,EAEFA,OAAQC,EAFN,EAEMA,KAAMxf,EAFZ,EAEYA,oBAAqB8jB,EAFjC,EAEiCA,6BAFjC,EAI8C/sB,KAAK7J,MADpD63B,EAHC,EAGDA,SAAU7e,EAHT,EAGSA,aAAcxJ,EAHvB,EAGuBA,aAAcksB,EAHrC,EAGqCA,UAAWgS,EAHhD,EAGgDA,cAAeD,EAH/D,EAG+DA,SAAU1hB,EAHzE,EAGyEA,KAC3EoN,EAJE,EAIFA,cAAesT,EAJb,EAIaA,cAAe5Q,EAJ5B,EAI4BA,eAC9Bx7B,EAAcwJ,KAAK9L,MAAMC,SAASqC,YAClCyJ,EAAWD,KAAKC,SAChBk9B,EAAan9B,KAAKm9B,WAClB55B,EAAO4L,GAAgBnP,KAAKuC,SAAQ,GACpC+d,EAAkBzJ,GAAuB7W,MACzCkhC,EAAqBlhC,KAAKsE,qBAAqB,cAAgB,GAC/DogC,EAAiB1kC,KAAKsE,qBAAqB,SAC3CpO,EAAe8J,KAAKsE,qBAAqB,gBAC7ChH,QAAQC,IAAI,SAAUyC,KAAK9L,MAAMC,SAASE,OAAQ2L,KAAK9L,MAAM+R,IAC7D,IAAIgP,EAASjV,KAAK1B,gBAAgB,UAC9ByvB,OAAyE94B,IAAxD+K,KAAK9L,MAAM2T,SAASC,YAAY9H,KAAK9L,MAAM+R,GAAI,KAEhEkH,EAAUC,IACV,wBACA,wBACA5D,EACAxJ,KAAK0gC,mBACL1gC,KAAKsgC,qBACLtgC,KAAKygC,aACLzgC,KAAKgkC,yBAAyB1jB,EAAgBd,WAC9CgJ,GAAU,iBAGVmc,EAAgBv3B,IAChB,0BACApN,KAAK8gC,uBAGL8D,EAAQvjB,GAAM,MAElB,OACI,kBAAC,GAAD,CAAQhI,OAAQ1T,EAAcuE,UAAWvE,GACrC,kBAAC,GAAD,CACI6Z,UAAWc,EAAgBd,UAC3BhkB,OAAQA,EACR8jB,cAAetf,KAAKsf,cACpBlU,OAAQA,EACRymB,UAAWA,GAEP,kBAAC+S,EAAD,CACI/nB,YAAcgnB,OAAmC5uC,EAAnB+K,KAAK6c,YACnCgb,YAAa73B,KAAK63B,YAClBM,aAAcn4B,KAAKm4B,aACnBH,WAAYh4B,KAAKg4B,WACjB3J,SAAUruB,KAAK+iC,aACf8B,QAAS7kC,KAAK+iC,aACd98B,GAAIA,EACJuD,UAAW2D,EACXjT,MAAK,+DACEiV,GACCnP,KAAKiiC,WAAa,CAACvvB,OAAQ,SAE3B8V,GAAU,CAACpyB,UAAW,OAAQke,UAAW,WAClB,SAAvBpe,EAAaC,OAAoB,CACjCC,UAAW,SACXke,UAAW,WAEXuvB,GAAiB,CACjBhzB,QAAS,IAGjBrD,IAAKxN,KAAK+c,WACVpT,IAAK1D,EACL69B,eAAgB9jC,KAAK8jC,gBAGjB9jC,KAAK1B,gBAAgB,gBACpBulC,GACD,kBAAC,GAAD,CACI59B,GAAIA,EACJ0D,IAAG,UAAK1D,EAAL,WACHwpB,MAAO,CAAC,IAAI,KACZN,cAAenvB,KAAKk9B,gBACpB58B,SAAUN,KAAKsjB,WACf8L,aAAcpvB,KAAKu/B,eACnBv0B,KAAMmE,GAAgB5L,EACtBhO,IAAM4nC,GAAcA,EAAW5nC,KAASgO,GAAQA,EAAKhO,IACrDD,KAAO6nC,GAAcA,EAAW7nC,MAAUiO,GAAQA,EAAKjO,KACvDsD,MAAQuW,GAAgBA,EAAavW,OAAW2K,GAAQA,EAAK3K,MAC7DC,OAASsW,GAAgBA,EAAatW,QAAY0K,GAAQA,EAAK1K,OAC/Dy2B,cAAeA,EACf1oB,OAAQX,IAKZ+nB,GAAYgE,IACXhyB,KAAK1B,gBAAgB,gBACrBulC,IACA3B,GAAgBliC,OACjB,kBAAC,GAAD,CACIgyB,eAAgBA,IAIxB,kBAAC,GAAD,CACIxoB,UAAWm7B,EACXh7B,IAAKi6B,GAAQ,UAAO39B,EAAP,cACbA,GAAE,UAAKA,EAAL,iBACFiE,SAAU/S,OAAOM,KAAKypC,GAAoBhqC,OAAS,EACnDq6B,aAAcvxB,KAAKuxB,cAGfhR,GAAqBA,IAGzB,kBAAC,GAAD,CACIta,GAAIA,EACJ0D,IAAG,UAAK1D,EAAL,cACHsC,YAAatI,EACbiiB,KAAMA,EACNhsB,aAAcA,EACd0sC,cAAeA,EACf/V,SAAU6X,EACVtW,YAAapuB,KAAKouB,YAClBD,aAAcnuB,KAAKmuB,aACnBF,KAAMz3B,EACN63B,SAAUruB,KAAKquB,SACf7F,OAAQA,EACRhtB,OAAQA,EACRitB,KAAMA,EACNjb,IAAKxN,KAAKk+B,iBACV36B,KAAM4L,GAAgB5L,EACtB0F,oBAAqBA,EACrBD,IAAKhJ,KACLsK,QAAStK,KAAKsE,qBAAqB,WACnCyoB,6BAA8BA,EAC9BgB,eAAgBA,EAChBC,SAAUA,KAIlB,kBAAC,GAAD,CACI/Y,OAAQA,IAIRjV,KAAK7J,MAAMub,UAAY1R,KAAK9L,MAAM4R,QAClC,kBAAC,GAAD,CAAQuT,OAAQrZ,KAAK7J,MAAMwP,cAAX,UACT3F,KAAK9L,MAAM4R,OAAO5R,MAAM+R,GADf,eAGZ,yBACIuD,UAAWxJ,KAAK7J,MAAM0kC,UACtB3gC,MAAK,aACD2W,QAAS,EACTgC,cAAe,QACZ7S,KAAK7J,MAAM0kC,qB,GAz1GV1/B,IAAM+E,WAs2GtDgyB,GAAmB5hB,aAAe,CAC9B1X,MAAO,OACPC,OAAQ,OACRisC,UAAW,CAAChwC,EAAG,OAAQC,EAAG,QAC1BgwC,gBAAgB,EAChBtC,cAAc,EACduC,WAAY,OACZ9Q,KAAM,CAACt/B,EAAG,EAAGC,EAAG,GAChBsxB,IAAK,MACL8e,YAAa,WACb1R,YAAa,CACT3+B,EAAG,EACHC,EAAG,EACHwtB,iBAAkB,MAClBC,oBAAqB,OAEzBkR,aAAc,CACV56B,MAAO,MACPC,OAAQ,OAEZsoB,qBAAsB,CAClB5V,UAAW,SACXG,YAAa,SACb5S,SAAU,WACVgR,WAAY,EACZ6B,YAAa,EACbH,UAAW,EACXC,aAAc,EACd2V,SAAU,Y,IC15GG8jB,G,uKACP,IAAD,OACD/wC,EAAW6L,KAAK9L,MAAMuiB,OAAOhZ,SAAWuC,KAAK9L,MAAMuiB,OAAOhZ,QAAQvJ,MAAMC,SAE5E,GADKA,IAAUA,EAAW6L,KAAK9L,MAAMC,UACjCA,GAAYA,EAASJ,aACrB,IAAKI,EAASgxC,aAAc,CACxBhxC,EAASgxC,cAAe,EACxB,IAAI9wC,EAAS2L,KAAK9L,MAAM8W,KAAK3W,OAC7B8C,OAAOM,KAAKuI,KAAK9L,MAAM8W,MAAMxK,SAAQ,SAAAmJ,GACrB,WAARA,IACAxV,EAASwV,GAAO,EAAKzV,MAAM8W,KAAKrB,OAGxCrQ,EAAWnF,EAASE,OAAT,OAA2BA,SAG1CF,EAAWmF,EAAW0G,KAAK9L,MAAMC,SAAU6L,KAAK9L,MAAM8W,MACtDpX,EAAaO,EAAU6L,KAAK9L,MAAMmL,mBAGtC,OACI,kBAAC,GAAD,eACImK,UAAWxJ,KAAK9L,MAAMsV,WAClBxJ,KAAK9L,MAFb,CAGIsZ,IAAKxN,KAAK9L,MAAMuiB,OAChBtiB,SAAUA,S,GAzBcgH,IAAM+E,WCDzBklC,G,kDACjB,WAAYlxC,GAAQ,IAAD,8BACf,cAAMA,IAOVmxC,cAAgB,SAACC,GACbltC,YAAW,WACP,EAAK+D,SAAS,CAACmpC,cAChB,IARH,EAAKnvC,MAAQ,CACTmvC,QAAS,IAJE,E,qDAcT,IAAD,OACL,OACItlC,KAAK7J,MAAMmvC,QAAQ/mC,KAAI,SAACgnC,EAAQpkC,GAC5B,OAAO,kBAAC,GAAD,CAAQkY,OAAM,UAAK,EAAKnlB,MAAMuiB,OAAOhZ,QAAQvJ,MAAM+R,GAArC,cACN0D,IAAKxI,EACL3I,SAAU,EAAKtE,MAAMsE,UAE/B+sC,U,GAtB6BpqC,IAAMqqC,eCAnCC,I,yDACjB,WAAYvxC,GAAQ,IAAD,8BACf,cAAMA,IAIV2oB,YAAc,SAACha,GACX,IAAIia,EAAO,EAAKC,WAAWtf,QAAQke,wBAC/B,EAAK6S,YAAY3rB,IAAMA,EAAEqa,SAAWJ,EAAKxnB,MAAQuN,EAAEqa,SAAWJ,EAAKxnB,KAAOwnB,EAAKlkB,OAC/EiK,EAAEsa,SAAWL,EAAKvnB,KAAOsN,EAAEsa,SAAWL,EAAKvnB,IAAMunB,EAAKjkB,SACtDgK,EAAE4rB,kBACF,EAAKC,WAAY,EACjBl7B,OAAO0R,iBAAiB,cAAe,EAAK8X,aAC5CxpB,OAAO0R,iBAAiB,YAAa,EAAK+X,aAZ/B,EAgBnBuR,YAAc,SAAC3rB,GACX,MAAsB,UAAlBA,EAAE8rB,aAAwC,IAAb9rB,EAAE+rB,QAjBpB,EAuBnB5R,YAAc,SAACna,GACN,EAAK6rB,YAEV7rB,EAAE4rB,kBAEG,EAAKI,OAIN,EAAKC,OAAOjsB,IAHZ,EAAKgsB,QAAS,EACd,EAAKE,YAAYlsB,MA9BN,EAoCnBoa,UAAY,SAACpa,GACJ,EAAK6rB,YAGV,EAAKA,WAAY,EAEb,EAAKG,QACLhsB,EAAE4rB,kBACF,EAAKO,WAAWnsB,IAEZ,EAAK3O,MAAMwV,SACX,EAAKxV,MAAMwV,QAAQ7G,GAG3B,EAAKgsB,QAAS,EAEdr7B,OAAO2R,oBAAoB,cAAe,EAAK6X,aAC/CxpB,OAAO2R,oBAAoB,YAAa,EAAK8X,aArD9B,EAwDnB8R,YAAc,SAAClsB,GACX,EAAK3O,MAAM66B,YAAYlsB,IAzDR,EA4DnBisB,OAAS,SAACjsB,GACN,EAAK3O,MAAM46B,OAAOjsB,IA7DH,EAgEnBmsB,WAAa,SAACnsB,GACN,EAAK3O,MAAM86B,YACX,EAAK96B,MAAM86B,WAAWnsB,IAhE1B,EAAKka,WAAa5hB,IAAM+R,YAFT,E,qDAsEf,OACI,yBACIjH,GAAG,iBACHuD,UAAU,qBACVgE,IAAKxN,KAAK+c,WACVwS,cAAevvB,KAAK6c,YACpB3iB,MAAO,CACHwY,OAAQ1S,KAAK9L,MAAMwe,QAAU,c,GA9ELvX,IAAM+E,YCC7BwlC,G,uKAEb,OACI,yBACIl8B,UAAU,0BAEV,kBAAC,GAAD,CACIulB,YAAa/uB,KAAK9L,MAAM66B,YACxBD,OAAQ9uB,KAAK9L,MAAM46B,OACnBE,WAAYhvB,KAAK9L,MAAM86B,WACvBtc,OAAQ1S,KAAK9L,MAAMwe,c,GAVSvX,IAAMqqC,eCCjCG,G,kDACjB,aAAe,IAAD,8BACV,gBAeJC,iBAAmB,SAAC/yB,GAChB,EAAKxU,SAAW,EAAKlC,SAAS,CAAC0W,mBAjBrB,EAoBdgzB,iBAAmB,SAACC,GAChB,EAAK5xC,MAAM6xC,WAAWltC,OAASitC,EAC/B,EAAK5xC,MAAM8xC,MAAM9xC,MAAMkX,OAAO66B,aAC9B,EAAKpa,eAvBK,EA0BdniB,QAAU,SAAC7G,GACP,EAAK3O,MAAMuiB,OAAOhZ,QAAQC,UAAS,IA3BzB,EA8BdqxB,YAAc,SAAClsB,GACP,EAAK3O,MAAM66B,aACX,EAAK76B,MAAM66B,YAAYlsB,GAE3B,EAAKiE,SAAW,CACZmoB,WAAYpsB,EAAEqa,QACdgS,WAAYrsB,EAAEsa,QACdwiB,YAAa,EAAKzrC,MAAM6xC,WAAWltC,SArC7B,EAyCdi2B,OAAS,SAACjsB,GACNA,EAAEggB,iBACF,IAAIwY,EAAUx4B,EAAEsa,QAAU,EAAKrW,SAASooB,WACpC4W,EAAY,EAAKh/B,SAAS64B,YAActE,EAE5CyK,EAAYz5B,KAAKE,IAAI,EAAGu5B,GACxB,EAAKD,iBAAiBC,IA/CZ,EAkDd9W,WAAa,SAACnsB,GACN,EAAK3O,MAAM86B,YACX,EAAK96B,MAAM86B,WAAWnsB,IAjD1B,EAAK1M,MAAQ,CACT0c,cAAe,QAJT,E,gEASV7S,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BA2Cf,OACI,yBACImL,UAAU,kBACVtP,MAAO,CACHrB,OAAO,GAAD,OAAKmH,KAAK9L,MAAM6xC,WAAWltC,OAA3B,MACNqtC,MAAOlmC,KAAK9L,MAAMgyC,MAClBrzB,cAAe7S,KAAK7J,MAAM0c,eAE9BnJ,QAAS1J,KAAK0J,QACdmuB,YAAa73B,KAAK9L,MAAM2jC,YACxBM,aAAcn4B,KAAK9L,MAAMikC,aACzBH,WAAYh4B,KAAK9L,MAAM8jC,YAGvB,kBAAC,GAAD,CACIjJ,YAAa/uB,KAAK+uB,YAClBD,OAAQ9uB,KAAK8uB,OACbE,WAAYhvB,KAAKgvB,WACjBtc,OAAQ,cAIR1S,KAAK9L,MAAMuiB,OAAOhZ,QAAQ8E,SAAQ,GAAO3J,MAAQ,KACjD,uBACI4Q,UAAU,mBADd,UAOJ,uBACIA,UAAU,uBADd,UAGQxJ,KAAK9L,MAAM6xC,WAAWltC,OAAOma,QAAQ,GAH7C,OAMA,kBAAC,GAAD,CACI+b,YAAa/uB,KAAK+uB,YAClBD,OAAQ9uB,KAAK8uB,OACbE,WAAYhvB,KAAKgvB,WACjBtlB,QAAS1J,KAAK0J,QACdgJ,OAAQ,mB,GAlGavX,IAAMqqC,eCG1BW,G,kDACjB,WAAYjyC,GAAQ,IAAD,8BACf,cAAMA,IAYVmiB,eAAiB,WACb,MAAO,CACH7f,aAAa,IAfF,EAmBnByS,oBAAsB,SAACm9B,EAAqBp9B,GACxC,OAAOo9B,EAAoB7nC,KAAI,SAACsK,EAAO1H,GACnC,OAAO0H,EAAMA,UArBF,EAyBnBw9B,oBAAsB,SAACr9B,GAKnB,GAJAA,EAAI+K,iBACJ/K,EAAI0qB,YACJ1qB,EAAItL,SAASsL,EAAI1K,gBAAgB,aAE7B0K,EAAI9U,MAAMy/B,aAAc,CACxB,IAAI7W,EAAO9T,EAAIzG,SAAQ,GAAO,GAC9ByG,EAAI9U,MAAMy/B,aAAa7W,EAAKlkB,MAAOoQ,GAAK,GAG5CA,EAAI9U,MAAM0/B,gBAAkB5qB,EAAI9U,MAAM0/B,eAAe5qB,GACjD,EAAK9U,MAAMoyC,qBACX,EAAKpyC,MAAMoyC,oBAAX,gBAEJ,EAAKC,YAvCU,EA0CnBC,+BAAiC,SAAC39B,EAAO4xB,EAAW1B,EAAWjzB,EAAQlN,EAAOC,EAAQoO,EAAY40B,GAE9F,OAAO,EAAK4K,iBAAiB59B,EAAO4xB,EAAW1B,EAAWjzB,EAAQlN,EAAOC,EAAQoO,EAAY40B,IA5C9E,EA+CnB6K,+BACI,SAACC,EAAQ99B,EAAO4xB,EAAW1B,EAAWjzB,EAAQlN,EAAOC,EAAQoO,EAAY40B,GAEzE,OAAO,EAAK4K,iBAAiB59B,EAAO4xB,EAAW1B,EAAWjzB,EAAQlN,EAAOC,EAAQoO,EAAY40B,IAlD9E,EAqDnB4K,iBAAmB,SAAC59B,EAAO4xB,EAAW1B,EAAWjzB,EAAQlN,EAAOC,EAAQoO,EAAY40B,GAChF,IAAKjjC,EAAO,CACR,IAAIkkB,EAAOjU,EAAMtG,SAAQ,GAAO,GAChC3J,EAAQkkB,EAAKlkB,MACbC,EAASikB,EAAKjkB,OAGboO,IACDA,EAAanB,EAAOvD,SAAQ,GAAO,IARuD,MAUhEsG,EAAMszB,kBAChCl1B,EAAW3R,KAAOmlC,EAClBxzB,EAAW1R,IAAMwjC,EACjBngC,EACAC,EACAiN,EACAmB,GANCma,EAVyF,EAUzFA,SAAUuX,EAV+E,EAU/EA,YASXqB,GAAQnxB,KACRuY,EAAW,CAACwC,GAAI,EAAGE,GAAI,EAAGiB,GAAI,EAAGC,GAAI,GACrC2T,EAAc,CACVoD,IAAK90B,EAAW1R,IAChBymC,IAAK/0B,EAAW1R,IAAM0R,EAAWolB,aACjC4P,IAAKh1B,EAAW3R,KAChB4mC,IAAKj1B,EAAW3R,KAAO2R,EAAW7N,cAI1C,IAAIgjC,EAAiBnoC,EAAY0kC,GAEjC9vB,EAAMwzB,qBAAqB1D,EAAa1xB,GAExC,IAAIqE,EAAa,eAAQzC,EAAM1S,MAAMmV,eAAiBzC,EAAM3U,MAAMitB,6BAC3D7V,EAAcxB,kBACdwB,EAAcK,YAErBL,EAAc8V,SAAd,UAA4BA,EAAS2D,GAArC,YAA2C3D,EAASwC,GAApD,YAA0DxC,EAAS4D,GAAnE,YAAyE5D,EAAS0C,IAElF,IAAIyY,EAAW9B,EAAa9B,EAAYsD,IAAOrjC,EAAQ,EAEnD6jC,GAAsB9D,EAAYuD,IAAMvD,EAAYsD,KAAO,EAAtC,GACrBS,GAAqB/D,EAAYuD,IAAMvD,EAAYsD,KAAO,EAAtC,IAEpBpH,EAAWhsB,EAAM3U,MAAM2T,SAASye,YAAYxgB,EAAO5R,MAAM+R,IACzCmb,EAAS4D,KAAO6P,EAAS39B,QAAU8iC,GAAQnxB,GAE/D,GAAkC,YAA9ByC,EAAcI,YACd,GAAI6wB,EAAUG,GAAqBH,EAAUE,EAAoB,CAE7D,IAAImK,EAAcrK,GAAW5D,EAAYuD,IAAMvD,EAAYsD,KAAO,EAClE3wB,EAAcC,UAAY,SAC1BD,EAAcK,YAAd,WAAgC9C,EAAM2F,QAAQlD,EAAcK,cAC5DL,EAAcxB,WAAd,WACqB,EAAb88B,GAAgB5zB,QAAQ,GAAGif,YADnC,OACgDppB,EAAM2F,QAAQlD,EAAcxB,kBACrEyyB,EAAUG,GACjBpxB,EAAcC,UAAY,WAC1BD,EAAcK,YAAd,WACQgtB,EAAYuD,KAAOzB,EAAY7hC,IAAQoa,QAAQ,GAAGif,YAD1D,OACuEppB,EAAM2F,QAAQlD,EAAcK,cACnGL,EAAcxB,WAAd,WAA+BjB,EAAM2F,QAAQlD,EAAcxB,eAE3DwB,EAAcC,UAAY,aAC1BD,EAAcK,YAAd,WAAgC9C,EAAM2F,QAAQlD,EAAcK,cAC5DL,EAAcxB,WAAd,WACQ2wB,EAAY9B,EAAYsD,KAAKjpB,QAAQ,GAAGif,YADhD,OAC6DppB,EAAM2F,QAAQlD,EAAcxB,mBAe7FwB,EAAcK,YAAd,WACQgtB,EAAYuD,KAAOzB,EAAY7hC,IAAQoa,QAAQ,GAAGif,YAD1D,OACuEppB,EAAM2F,QAAQlD,EAAcK,cACnGL,EAAcxB,WAAd,WACQ2wB,EAAY9B,EAAYsD,KAAKjpB,QAAQ,GAAGif,YADhD,OAC6DppB,EAAM2F,QAAQlD,EAAcxB,aAmB7F,cAXOwB,EAAcI,mBACdJ,EAAcE,iBACdF,EAAcG,oBACdH,EAAc8V,SAErBvY,EAAM8K,oBAAoB,YAAaolB,GAEvC,EAAKwN,SAAS19B,EAAM3U,MAAM+R,GAAI4C,EAAOkwB,EAAWlgC,EAAQgjC,GAExDhzB,EAAMqY,cAAc,SAAU,QAEvB,CAAC5V,gBAAe8V,WAAUuX,cAAayD,mBA1J/B,EA6JnBmK,SAAW,SAAC/nC,EAASqK,EAAOg+B,EAAgBC,EAAajL,GACrD,IAAIkL,GAAa,EACbC,GAAgB,EAChBC,EAAS9vC,OAAOuR,OAAO,EAAK+N,OAAOhZ,QAAQgB,cAAcuG,MAAK,SAACC,EAAElE,GACjE,GAAIkE,GAAKA,EAAExH,SAAWsD,GAAKA,EAAEtD,QAAQ,CAC7BwH,EAAExH,QAAQvJ,MAAM+R,KAAOzH,GAAWuC,EAAEtD,QAAQvJ,MAAM+R,KAAOzH,IACzDuoC,GAAa,GAEjB,IAAIG,EAAajiC,EAAExH,QAAQuG,YAAY,aACnCmjC,EAAapmC,EAAEtD,QAAQuG,YAAY,aACvC,OAAIkjC,EAAaC,GACL,EACDD,IAAeC,EAElB3oC,IAAYyG,EAAExH,QAAQvJ,MAAM+R,IACpB,EACHzH,IAAYuC,EAAEtD,QAAQvJ,MAAM+R,GAC1B,EAEA,EAER,EAEP,OAAO,KAIXigC,EAAQ,EACRnN,EAAY,EACZuM,EAAU,GACVpuC,EAAS+vC,EAAOliC,QAAO,SAAAqjB,GACvB,OAAQA,GAAYA,EAAS3qB,WAC9BvG,OAEH+vC,EAAOzmC,SAAQ,SAAC4nB,EAAUjnB,GACtB,GAAIinB,GAAYA,EAAS3qB,QAAS,CAC9B,GAAIopC,IAAmBE,EAAY,CAC/B,IAAIK,EAAahf,EAAS3qB,QAAQuG,YAAY,cACzCgjC,GAAiBI,EAAaP,IAC/BG,GAAgB,EAChBn+B,EAAMqY,cAAc,QAASglB,GAC7Br9B,EAAM8K,oBAAoB,QAASuyB,GACnCA,KAGR9d,EAAS3qB,QAAQyjB,cAAc,QAASglB,GACxC9d,EAAS3qB,QAAQkW,oBAAoB,QAASuyB,GAC9C9d,EAAS3qB,QAAQkW,oBAAoB,YAAaolB,GAClD,IAAIx1B,EAAO6kB,EAAS3qB,QAAQ8E,SAAQ,GACpCw2B,GAAax1B,EAAK1K,OAEd2F,IAAY4pB,EAAS3qB,QAAQvJ,MAAM+R,KACnC+gC,GAAgB,GAEpBd,IAEIhvC,EAASiK,EAAQ,IACjBmkC,EAAQnkC,GAAS,EAAKkmC,UAAUlmC,EAAO+kC,GACvCnN,GAAY,EAAKuO,cAAcnmC,GAAOtI,OACtCqtC,SAKRr9B,IAAUm+B,IACVA,GAAgB,EAChBn+B,EAAMqY,cAAc,QAASglB,GAC7Br9B,EAAM8K,oBAAoB,QAASuyB,GACnCA,KAGJ,EAAKqB,mBAAmB9pC,QAAQ4nC,cAAcC,GAC9CltC,YAAW,WACP,EAAKlE,MAAMkX,OAAO66B,eACnB,IAvOY,EA0OnBoB,UAAY,SAAClmC,EAAO+kC,GAkBhB,OAjBK,EAAKsB,gBACN,EAAKA,cAAgB,IAEpB,EAAKC,eACN,EAAKA,aAAe,IAGnB,EAAKD,cAAcrmC,KACpB,EAAKqmC,cAAcrmC,GAAS,CACxBtI,OAAQ,KAIX,EAAK4uC,aAAatmC,KACnB,EAAKsmC,aAAatmC,GAAShG,IAAM+R,aAG9B,kBAAC,GAAD,CACHvD,IAAKxI,EACL+kC,MAAOA,EACPH,WAAY,EAAKyB,cAAcrmC,GAC/BqM,IAAK,EAAKi6B,aAAatmC,GACvBsV,OAAQ,EAAKA,OACbsY,YAAa,EAAK2Y,iBAClB1Y,WAAY,EAAK2Y,gBACjB3B,MAAK,eACLnO,YAAa,EAAK+P,kBAClBzP,aAAc,EAAK0P,mBACnB7P,WAAY,EAAK8P,oBAvQN,EA2QnBJ,iBAAmB,SAAC7kC,GAChB,EAAK4T,OAAOhZ,QAAQmU,YAAY,YAAY,IA5Q7B,EA+QnB+1B,gBAAkB,SAAC9kC,GACf,EAAK4T,OAAOhZ,QAAQmU,YAAY,YAAY,IAhR7B,EAmRnB01B,cAAgB,SAACnmC,GAcb,OAbK,EAAKqmC,gBACN,EAAKA,cAAgB,IAEpB,EAAKC,eACN,EAAKA,aAAe,IAGnB,EAAKD,cAAcrmC,KACpB,EAAKqmC,cAAcrmC,GAAS,CACxBtI,OAAQ,KAIT,EAAK2uC,cAAcrmC,IAjSX,EAoSnB4mC,qBAAuB,SAAC/+B,EAAK7K,EAAM6J,EAAczM,GAE7C,OADA,EAAKysC,yBAAyB,QACvB,EAAK9zC,MAAM0T,SAASF,aAAavJ,EAAM6J,EAAczM,IAtS7C,EAySnB0sC,mCAAqC,SAACj/B,GAClC,EAAKg/B,yBAAyB,QAC9Bh/B,EAAI9U,MAAM0T,SAASM,2BAA2Bc,IA3S/B,EA8SnBg/B,yBAA2B,SAACn1B,GACnB,EAAK40B,eACN,EAAKA,aAAe,IAExB,EAAKA,aAAajnC,SAAQ,SAAC0nC,GACnBA,GAAaA,EAAUzqC,SACvByqC,EAAUzqC,QAAQmoC,iBAAiB/yB,OApT5B,EAwTnBs1B,8BAAgC,SAACt/B,EAAO03B,GACpC,IAAIj1B,EAAa,eAAOi1B,UACjBj1B,EAAc8V,SACrBvY,EAAM8K,oBAAoB,gBAAiBrI,GAC3C,IAAIrR,EAAYzB,SAAS8gB,eAAezQ,EAAMy3B,sBAEzCrmC,EAGDD,EAAYC,EAAWqR,EAAezC,EAAMy3B,sBAF5C9lC,EAAY8Q,EAAezC,EAAMy3B,qBAAsBz3B,EAAMy3B,qBAAsB,EAAK9pB,WA/T7E,EAqUnBuW,6BAA+B,SAACqb,EAAWp/B,EAAKkZ,EAAM2K,GAClD,IAAI3yB,EAEJA,EAAQ,CACJiQ,QAAS,OACTk+B,cAAe,SACfvvC,SAAU,YAGd,IAAImB,EAAYzB,SAAS8gB,eAAe8uB,EAAUhb,uBAE7CnzB,EAGDD,EAAYC,EAAWC,EAAOkuC,EAAUhb,uBAFxC5yB,EAAYN,EAAOkuC,EAAUhb,sBAAuBgb,EAAUhb,sBAAuB,EAAK5W,WAjV/E,EAuVnB8xB,qBAAuB,SAACt/B,EAAKH,GACzBG,EAAIquB,mBAAmBxuB,GACvBA,EAAMswB,wBAEN,EAAKoN,WAEAv9B,EAAIu/B,UAAuD,IAA3CpxC,OAAOuR,OAAOM,EAAIvK,cAAcvH,SACjD8R,EAAIu/B,UAAW,EACfnwC,YAAW,WACPjB,OAAOuR,OAAOM,EAAIvK,cAAc,IAChC,EAAKvK,MAAM0T,SAASzB,SAChBhP,OAAOuR,OAAOM,EAAIvK,cAAc,GAAGhB,QACnCtG,OAAOuR,OAAOM,EAAIvK,cAAc,GAAGhB,QAAQvJ,MAAM4R,OACjD,EAAK5R,MAAM4R,YAAQ7Q,GAAW,EAAO,KAC1C,KArWQ,EAyWnBuzC,qBAAuB,SAAC3/B,EAAO1K,GAC3B,GAAKA,EAAKjK,MAAM4R,OAAhB,CAGA,IAAI2iC,GAAU,EACVn9B,EAAgBnN,EAAK6F,YAAY,iBAGhC0kC,GAAUvqC,GAAM,KACjBsqC,GAAU,GAGdn9B,EAAcC,UAAYk9B,EAAS,UAAW,SAC9Cn9B,EAAcxB,WAAa,MAC3BwB,EAAcK,YAAc,MAC5BxN,EAAK+iB,cAAc,QAAS,QAEvBunB,GACDtqC,EAAK+iB,cAAc,QAAS,OAGhC/iB,EAAKgN,iBAAiBG,GACtBnN,EAAKjK,MAAMkX,OAAOC,iBA/XH,EAkYnBs9B,uBAAyB,SAAC9/B,EAAO1K,EAAMZ,GACnC,IAAKY,EAAKjK,MAAM4R,OACZ,OAAO,EAEX,IAAIwF,EAAgBnN,EAAK6F,YAAY,iBAErC,QAAqC,YAA5BsH,EAAcC,WACU,QAA7BD,EAAcxB,YACgB,QAA9BwB,EAAcK,cA1YH,EA6YnBi9B,sBAAwB,SAAC5/B,EAAKrF,EAAO5D,EAAOiL,GACxC,GAAc,WAAVrH,GAAgC,cAAVA,EAA1B,CAGA,IAAIzJ,EAAS8Q,EAAgChC,EAAIhF,YAAY,QAASgH,GAAnDhC,EAAIhF,YAAY,SACnC9J,EAAMyJ,GAAS5D,OACD9K,IAAV8K,UACO7F,EAAMyJ,GACjBqF,EAAIsqB,SAASp5B,EAAO8Q,KArZL,EAwZnB48B,kBAAoB,SAAC/kC,GACjB,EAAK4T,OAAOhZ,QAAQo6B,YAAYh1B,IAzZjB,EA4ZnBglC,mBAAqB,SAAChlC,GAClB,EAAK4T,OAAOhZ,QAAQ06B,aAAat1B,IA7ZlB,EAganBilC,iBAAmB,SAACjlC,GAChB,EAAK4T,OAAOhZ,QAAQu6B,WAAWn1B,IAjahB,EAoanBk0B,WAAa,WACT,EAAKvgB,SAAS+xB,UAAW,GAlazB,EAAKpyC,MAAQ,CACTmvC,QAAS,IAEb,EAAK7uB,OAAStb,IAAM+R,YACpB,EAAKq6B,mBAAqBpsC,IAAM+R,YAE5BhZ,EAAMszC,gBACN,EAAKA,cAAgBtzC,EAAMszC,eAVhB,E,qDAyaf,MAAO,CACH,kBAAC,GAAD,eAAYzpC,QAAQ,QACR4L,IAAI,QACJ8M,OAASzW,KAAK9L,MAAMuiB,OAAqBzW,KAAKyW,OAASzW,KAAK9L,MAAMuiB,OAAtCzW,KAAKyW,QAC7BzW,KAAK9L,MAHrB,CAIY8W,KAAMhL,KAAKmW,UACXjc,MAAK,2BAAM,CACPrB,OAAQ,SACNmH,KAAK9L,MAAMgG,OACjB+O,oBAAqBjJ,KAAKiJ,oBAC1B4/B,SAAS,EACTxhB,YAAa,CAAC,IAAI,KAClByhB,yBAA0B9oC,KAAK8oC,yBAC/BC,oBAAqB/oC,KAAK+oC,oBAC1BC,wBAAyBhpC,KAAKgpC,wBAC9Bb,8BAA+BnoC,KAAKmoC,8BACpC3B,+BAAgCxmC,KAAKwmC,+BACrCE,+BAAgC1mC,KAAK0mC,+BACrC3Z,6BAA8B/sB,KAAK+sB,6BACnCgb,qBAAsB/nC,KAAK+nC,qBAC3BE,mCAAoCjoC,KAAKioC,mCACzCO,qBAAsBxoC,KAAKwoC,qBAC3BG,uBAAwB3oC,KAAK2oC,uBAC7BtC,oBAAqBrmC,KAAKqmC,oBAC1BuC,sBAAuB5oC,KAAK4oC,sBAC5BN,qBAAsBtoC,KAAKsoC,qBAC3BvR,WAAY/2B,KAAK+2B,cAI7B,kBAAC,GAAD,CAAsBvpB,IAAKxN,KAAKunC,mBAAoB59B,IAAI,UAClC8M,OAAQzW,KAAKyW,OACbje,SAAUwH,KAAK9L,MAAMsE,gB,GA1cpByd,I,+DCEdgzB,G,kDACjB,WAAY/0C,GAAQ,IAAD,8BACf,cAAMA,IAIVg1C,cAAgB,SAAChsB,EAASC,GACtB,MAAO,CACH/jB,YAAa,EACbizB,aAAc,EACd1Q,sBAAuB,WACnB,MAAO,CACHpmB,IAAK4nB,EACL7nB,KAAM4nB,EACNtkB,MAAO,EACPC,OAAQ,EACRpD,OAAQ0nB,EACR3nB,MAAO0nB,MAdnB,EAAK/mB,MAAQ,GAFE,E,qDAsBR,IAAD,EAC+C6J,KAAK9L,MAArD+iB,EADC,EACDA,KAAMiG,EADL,EACKA,QAASC,EADd,EACcA,QAASgsB,EADvB,EACuBA,YAAar7B,EADpC,EACoCA,QAC1C,OACI,oCACI,kBAAC,KAAD,CACI5T,MAAK,2BAAM,CACH+D,OAAQ,iBACNkrC,GAOVt8B,SAAU7M,KAAKkpC,cAAchsB,EAASC,GACtCtP,MAAM,EACNw0B,cAAe,SAACx/B,GACZA,EAAE4rB,kBACF5rB,EAAEggB,kBAENtK,UAAU,gBAEV,kBAAC,KAAD,CAAOre,MAAO,CACV8W,UAAW,2GAEX,kBAAC,KAAD,CAAmBo4B,YAAat7B,EAASu7B,WAAW,eAChD,kBAAC,KAAD,CAAUC,eAAe,EAAMpvC,MAAO,CAACoQ,QAAS,GACtCilB,cAAe,SAAC1sB,GACZA,EAAEggB,iBACFhgB,EAAE4rB,oBAIRxX,EAAK1Y,KAAI,SAAC6oB,EAASpwB,GACf,IAAIuyC,EAAcvyC,IAAMigB,EAAK/f,OAAS,EACtC,MACI,CACIkwB,EAAQ7oB,KAAI,SAACirC,EAAUC,GACnB,OACI,kBAAC,GAAD,CACI9/B,IAAG,UAAK3S,GAAL,OAASyyC,GACZ37B,QAASA,EACT07B,SAAUA,OAItBD,GAAc,kBAAC,GAAD,CAASrvC,MAAO,CAC1BtB,MAAO,OACPlD,OAAQ,EACRyU,QAAS,wB,GAxEpBhP,IAAM+E,WAuFlCwpC,GAAb,uKACe,IAAD,EACoB1pC,KAAK9L,MAA1Bs1C,EADC,EACDA,SAAU17B,EADT,EACSA,QAEf,OAAK07B,EAASG,QAsCN,kBAACjyB,GAAD,CACItJ,MACIo7B,EAASG,QAAQprC,KAAI,SAACirC,EAAUC,GAC5B,OACI,kBAACC,EAAD,CACI//B,IAAG,UAAK8/B,GACR37B,QAASA,EACT07B,SAAUA,OAK1BI,aAAW,EACXrxB,UAAU,QACVsxB,WAAY,IACZvxB,YAAa,CACTpe,MAAO,CACH+D,OAAQ,gBAEZ8tB,UAAU,CACN+d,KAAM,CACF7d,SAAS,GAEbD,gBAAiB,CACbC,SAAS,EACTC,kBAAmB,eAK/B,kBAAC,IAAD,CACIle,OAAK,EACLuhB,cAAe,SAAC1sB,GACZA,EAAEggB,iBACFhgB,EAAE4rB,oBAGN,0BAAMv0B,MAAO,CACTiQ,QAAS,OACTmY,oBAAqB,WACrBjY,WAAY,SACZzR,MAAO,SAEN4wC,EAAS5yC,KACV,yBAAKN,WAAW,EAAOsC,MAAO,EAAGC,OAAQ,EACpCgS,IAAK,+BACN3Q,MAAO,CACH4P,WAAY,GACZ6D,MAAO,gBApF3B,kBAAC,IAAD,CACIK,OAAK,EACLtE,QAAS,SAAC7G,GACF2mC,EAAS9/B,UACT8/B,EAAS9/B,QAAQ7G,GACjBiL,GAAWA,EAAQjL,KAG3B0sB,cAAe,SAAC1sB,GACP2rB,GAAY3rB,KACbA,EAAEggB,iBACFhgB,EAAE4rB,qBAIV,0BAAMv0B,MAAO,CACTiQ,QAAS,OACTmY,oBAAqB,WACrBjY,WAAY,SACZzR,MAAO,SAEN4wC,EAAS5yC,KACV,0BAAMsD,MAAO,CACTkY,SAAU,GACVtI,WAAY,GACZ6D,MAAO,YAGH67B,EAASO,gBAlCzC,GAAqC5uC,IAAM+E,WjFtFvC8pC,GAAYl/B,EAAQ,KAEjB,SAAS29B,GAAQtqC,EAAMkI,GAC1B,IAAKA,EAAc,CACf,IAAIO,EAASzI,EAAKjK,MAAM+R,GACpBiF,EAAoBjX,EAAYkK,EAAK6F,YAAY,kBACjDimC,EAAYh2C,EAAYkK,EAAK6F,YAAY,UAC7C7F,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrBwsC,GAAQxsC,EAAMwL,QAAQb,IAAS,MAChC,SAAC3K,GACAA,EAAMwL,QAAQb,GAAQuE,iBAAiBD,GACvCjP,EAAMwL,QAAQb,GAAQ0sB,SAAS2W,GAC/BhuC,EAAMwL,QAAQb,GAAQ1S,MAAMkX,OAAOC,kBAI3C,GAAIlN,EAAKm0B,YAAY,WACjBn0B,EAAKg0B,aAAa,UAAWh0B,QAIjC,GAAKA,EAAKjK,MAAM4R,OAAhB,CAGA,IAAIokC,GAAY,EACZ5+B,EAAgBnN,EAAK6F,YAAY,iBAiBrC,GAfK0kC,GAAUvqC,KACX+rC,GAAY,GAEhB/rC,EAAK2N,SAASo+B,EAAWA,GAAW,EAAOA,EAAW/rC,EAAKG,gBAAgB,iBAAarJ,GAAW,GAEnGqW,EAAcC,UAAuB,QACrCD,EAAcI,YAAcw+B,EAAW,UAAW,SAClD5+B,EAAcE,UAAY,MAC1BF,EAAcxB,WAAa,MAC3BwB,EAAcK,YAAc,MAC5BL,EAAcG,aAAe,MAC7BtN,EAAK+iB,cAAc,QAAS,QAC5B/iB,EAAK+iB,cAAc,SAAU,QAC7B/iB,EAAK+iB,cAAc,YAAa,UAE3BgpB,EAAW,CACZ,IAAIjjC,EAAa9I,EAAKjK,MAAM4R,OAAOvD,UACnC+I,EAAcE,UAAd,WAA8BvE,EAAWpO,OAAS,GAAMoO,EAAWpO,QAAU,EAA7E,MAEAsF,EAAK+iB,cAAc,QAAS,OAC5B/iB,EAAK+iB,cAAc,SAAU,QAC7B/iB,EAAK+iB,cAAc,YAAnB,UAAmC,GAAMja,EAAWpO,OAApD,OAGJsF,EAAKgN,iBAAiBG,GACtBnN,EAAKjK,MAAMkX,OAAOC,gBAGf,SAASq9B,GAAUvqC,EAAMZ,GAC5B,GAAIY,EAAKm0B,YAAY,aACjB,OAAOn0B,EAAKg0B,aAAa,YAAah0B,EAAMZ,GAGhD,IAAKY,EAAKjK,MAAM4R,OACZ,OAAO,EAEX,IAAIwF,EAAgBnN,EAAK6F,YAAY,iBAErC,QAAqC,UAA5BsH,EAAcC,WAAuD,YAA9BD,EAAcI,aAC9B,QAA5BJ,EAAcE,WAAoD,QAA7BF,EAAcxB,YACrB,QAA9BwB,EAAcK,aAAwD,QAA/BL,EAAcG,cAGtD,SAAS0+B,GAAahsC,GACzB,QAAKA,EAAKjK,MAAM4R,SAGM,YAAlB3H,EAAKjK,MAAMmtB,IAAsC,WAAlBljB,EAAKjK,MAAMmtB,IAAqC,WAAlBljB,EAAKjK,MAAMmtB,KAGpEljB,EAAKjK,MAAMk2C,gBAyChB,SAASh3B,GAAmBjV,EAAMoV,EAAW82B,EAAShkC,GAAiC,IAAD,yDAAJ,GAAb8M,EAAiB,EAAjBA,UACxE,IAAK9M,EAAc,CACf,IAAIO,EAASzI,EAAKjK,MAAM+R,GACpB7J,EAASiuC,EAAQn2C,MAAM+R,GACvBqkC,EAAensC,EAAK6F,YAAY,WAAY,QAAS7F,EAAK6F,YAAY,oBAAsB,OAC5FumC,EAAepsC,EAAK6F,YAAY,yBACpC7F,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrBmX,GAAmBnX,EAAMwL,QAAQb,GAAS2M,EAAWtX,EAAMwL,QAAQrL,IAAS,EAAM,CAAC+W,iBACpF,SAAClX,GACAmX,GAAmBnX,EAAMwL,QAAQb,GAAS0jC,EAAcruC,EAAMwL,QAAQrL,IAAS,EAC3E,CAAC+W,UAAWo3B,OAIxB,GAAKpsC,EAAKjK,MAAM4R,OAAhB,CAGA,IAAI0kC,EAAarsC,EAAKG,gBAAgB,WAElCmsC,EAAgBtsC,EAAKG,gBAAgB,iBACzC,GAAIksC,GAA4B,UAAdj3B,GAAyBk3B,EAAe,CACtDtsC,EAAKjK,MAAM4R,OAAOU,aAAarI,GAC/B,IAAIusC,EAAWvsC,EAAKoE,SAAQ,GACxBooC,EAAgBxsC,EAAKjK,MAAMmf,QAAQ5V,QAClCvJ,MAAM4sB,aAAauH,kBAAkBqiB,EAASp1C,KAAMo1C,EAASn1C,KAElEo1C,EAAcjtC,UAAS,OAAMzI,OAAWA,OAAWA,GAAW,GAC9D01C,EAAczkC,eACdykC,EAAcjkC,YAAYvI,OAAMlJ,GAAW,GAAO,SAAC0R,GAC/CA,EAAQxK,SAAS,CAACwJ,kBAAc1Q,IAChCzB,OAAOwgB,uBAAsB,WACzBrN,EAAQjJ,UAAS,SAS7B,OAJAS,EAAKyT,YAAY,UAAyB,UAAd2B,GAC5BpV,EAAKwV,oBAAoB,kBAAmBJ,GAC5CpV,EAAKwV,oBAAoB,wBAAyBR,GAE1CI,GACJ,IAAK,OACDpV,EAAK+iB,cAAc,gBAAYjsB,GAC/BkJ,EAAK+iB,cAAc,WAAOjsB,GAC1BkJ,EAAK+iB,cAAc,qBAAiBjsB,GACpC,MACJ,IAAK,SACDkJ,EAAK+iB,cAAc,WAAY,UAC/B/iB,EAAK+iB,cAAc,MAAO/N,GAAa,GACvChV,EAAK+iB,cAAc,qBAAiBjsB,GACpC,MACJ,IAAK,QACIu1C,GACDI,GAAoBzsC,EAAMksC,KAM1C,SAASO,GAAoBzsC,EAAMksC,GAC/B,IAAIQ,EAAgB1sC,EAAKjK,MAAM4R,OAAOvD,SAAQ,GAC9CpE,EAAKoI,kBACLpI,EAAKyT,YAAY,gBAAiBzT,EAAKjK,MAAM4R,OAAO5R,MAAM+R,IAC1D9H,EAAKjK,MAAM4R,OAAOU,aAAarI,GAC/BksC,EAAQ3sC,UAAS,OAAMzI,OAAWA,OAAWA,GAAW,GACxD,IAAI61C,EAAWT,EAAQnkC,eACnBwkC,EAAWvsC,EAAKoE,SAAQ,GAE5B8nC,EAAQ3jC,YAAYvI,OAAMlJ,GAAW,GAAM,SAAC0R,GACxCnT,OAAOwgB,uBAAsB,WACzBrN,EAAQjJ,UAAS,SAIzB,IAAI4N,EAAgBnN,EAAK6F,YAAY,iBACrCsH,EAAc8V,SAAW,UAEzBjjB,EAAKgN,iBAAiBG,GAEtB,IAAIpR,EAAQiE,EAAKmG,qBAAqB,SAElCrB,EAAWynC,EAAS9xC,MAASiyC,EAAcjyC,MAAQkyC,EAASlyC,MAChEuF,EAAK+iB,cAAc,QAASpN,GAAoB7Q,EAAU4nC,EAAcjyC,MACpEoZ,GAAsB9X,EAAMtB,OAAQuF,IACxCA,EAAK+iB,cAAc,SAAUpN,GAAoB42B,EAAS7xC,OAAQgyC,EAAchyC,OAC5EmZ,GAAsB9X,EAAMrB,QAASsF,IACzCA,EAAK+iB,cAAc,gBAAYjsB,GAC/BkJ,EAAK+iB,cAAc,WAAOjsB,GAC1BkJ,EAAK+iB,cAAc,gBAAiB,QAGjC,SAAS8Y,GAAQ77B,GACpB,OAAOA,EAAKG,gBAAgB,WAGzB,SAASysC,GAAiB5sC,EAAMkI,GACnC,IAAKA,EAAc,CACf,IAAIO,EAASzI,EAAKjK,MAAM+R,GACxB9H,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrB8uC,GAAiB9uC,EAAMwL,QAAQb,IAAS,MACzC,SAAC3K,IAcL,SAAS+uC,EAAiB7sC,EAAMkI,GACnC,IAAKA,EAAc,CACf,IAAIO,EAASzI,EAAKjK,MAAM+R,GACxB9H,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrB+uC,EAAiB/uC,EAAMwL,QAAQb,IAAS,MACzC,SAAC3K,GACA8uC,GAAiB9uC,EAAMwL,QAAQb,IAAS,MAGhDzI,EAAK+iB,cAAc,eAAWjsB,GAC9B,IAAImsC,EAAWjjC,EAAK6F,YAAY,SAC5Bo9B,GAA6C,IAAjCjqC,OAAOM,KAAK2pC,GAAUlqC,QAClCiH,EAAKwV,oBAAoB,aAAS1e,GAEtCkJ,EAAKjK,MAAMmf,QAAQ5V,QAAQvJ,MAAM4sB,aAAa6G,kBAC9CxpB,EAAKjK,MAAMsH,OAAOwa,eA5BVg1B,CAAiB/uC,EAAMwL,QAAQb,IAAS,MAGhDzI,EAAK+iB,cAAc,UAAW,mBAC9B/iB,EAAKjK,MAAMmf,QAAQ5V,QAAQvJ,MAAM4sB,aAAa6G,kBAC9CxpB,EAAKjK,MAAMkX,OAAOC,eAClBlN,EAAKjK,MAAMsH,OAAOwa,eA0Jf,SAAStU,GAAWvD,EAAM8sC,GAC7B,IAAI9oC,EAAgBhE,EAAKjK,MAAMmL,kBAAkB5B,UAE7CkE,EAAc,IACbspC,GAAW9sC,EAAKjK,MAAMC,SAASE,OAAO8N,GACvCR,EAAY,GAAK,CACbS,OAAQD,EACRF,OAAQ9D,EAAKjK,MAAMC,SAASE,OAAO8N,GAAeF,OAClDC,WAAW,GAEV+oC,GACL9zC,OAAOM,KAAK0G,EAAKjK,MAAMC,SAASE,QAAQmM,SAAQ,SAACmJ,EAAKxI,GAClDQ,EAAYR,GAAS,CACjBiB,OAAQuH,EACR1H,OAAQ9D,EAAKjK,MAAMC,SAASE,OAAOsV,GAAK1H,WAKpD3E,QAAQC,IAAI,aAAcoE,GACtBA,EAAYzK,OAAS,GACrBiH,EAAKjK,MAAMmL,kBAAkBqC,WAAWC,EAAaxD,GA+DtD,SAAS+jC,GAAgB/jC,GAC5B,OAAOA,EAAKjK,MAAMkX,OAAOouB,MAGtB,SAAS0R,GAAa/sC,GAEzB,IADA,IAAI2H,EAAS3H,EAAKjK,MAAM4R,OACjBA,IAAWA,EAAO5R,MAAM+sB,WAC3Bnb,EAASA,EAAO5R,MAAM4R,OAG1B,OAAIA,EACOA,EAAO5R,MAAM+R,GAEjBklC,cAaJ,SAASC,GAAY7wB,EAAOlU,GAC/B,GAAKkU,KAASA,EAAMrjB,OAAS,GAA7B,CAGA,IAAIm0C,EAdD,SAA0BltC,GAE7B,IADA,IAAI2H,EAAS3H,EAAKjK,MAAM4R,OACjBA,IAAWA,EAAO5R,MAAM+sB,WAC3Bnb,EAASA,EAAO5R,MAAM4R,OAG1B,GAAIA,EACA,OAAOA,EAOOwlC,CAAiB/wB,EAAM,IAEzC,GAAK8wB,EAAL,CAGA,IAIIE,EAiCAvF,EArCAzwC,EAAM,SACND,EAAO,SACPk2C,EAAgB,EAChBhE,EAAgB,GAGpBjtB,EAAMvV,MAAK,SAACC,EAAElE,GACV,GAAIkE,GAAKlE,EAAE,CACP,IAAI0qC,EAAOxmC,EAAE1C,SAAQ,GAAOhN,IACxBm2C,EAAO3qC,EAAEwB,SAAQ,GAAOhN,IAC5B,OAAIk2C,EAAOC,GACC,EACDD,IAASC,EAET,EAEJ,EAEP,OAAO,KAIfnxB,EAAM/Z,SAAQ,SAACrC,GACX,IAAI2e,EAAO3e,EAAKoE,SAAQ,GACxBhN,EAAM8W,KAAKC,IAAIwQ,EAAKvnB,IAAKA,GACzBD,EAAO+W,KAAKC,IAAIwQ,EAAKxnB,KAAMA,GAC3Bk2C,EAAgBn/B,KAAKE,IAAIuQ,EAAKxnB,KAAOwnB,EAAKlkB,MAAO4yC,GAE7CD,GACA/D,EAAcvmC,KAAK,CACfpI,OAAQwT,KAAKE,IAAI,EAAGuQ,EAAKvnB,IAAMg2C,KAIvCA,EAAazuB,EAAKvnB,IAAMunB,EAAKjkB,UAIjC,IAAI8yC,EACA,kBAAC,GAAD,CACIzxC,MAAO,CACHtB,MAAM,GAAD,OAAK4yC,EAAgBl2C,EAArB,OAETgxC,oBAAqB,SAACsF,GAClB5F,EAAQ4F,GAEZpE,cAAeA,EACfhvC,SAAU+hB,EAAM,GAAGrmB,MAAMsE,WAG7ByO,EAAaokC,EAAYnlC,eAC7BmlC,EAAY/jB,SAASqkB,OAAW12C,OAAWA,OAAWA,GAAW,SAAC+T,GAC9D,IAAK3C,EAAc,CACf,IAAIwlC,EAAU7iC,EAAI9U,MAAM+R,GACpB6lC,EAAUvxB,EAAMhc,KAAI,SAAAJ,GACpB,OAAOA,EAAKjK,MAAM+R,MAEtB+C,EAAI9U,MAAMqT,SAASC,KAAI,SAACvL,GACpB,IAAI8vC,EAAWD,EAAQvtC,KAAI,SAAA0H,GACvB,OAAOhK,EAAMwL,QAAQxB,MAEzB8lC,EAASvrC,SAAQ,SAAArC,GACbA,EAAKT,UAAS,MAElB0tC,GAAYW,GAAU,MACvB,SAAC9vC,GACA+vC,GAAmB/vC,EAAMwL,QAAQokC,QAAU52C,GAAW,MAI9D+T,EAAItL,UAAS,GAnByD,IAoBjE4N,EACDtC,EAAI4xB,kBAAkBtlC,EAAO2R,EAAW3R,KAAMC,EAAM0R,EAAW1R,IAC3D81C,OAAap2C,OAAWA,EAAWo2C,EAAY9oC,SAAQ,IAF1D+I,cAGLtC,EAAImC,iBAAiBG,GACrBtC,EAAI9C,eAEJ9N,YAAW,YAKU,SAAb6zC,EAAc1xB,GACd,IAAIpc,EAAOoc,EAAMoL,QACZxnB,IAGLA,EAAKjK,MAAM4R,OAAOU,aAAarI,GAC/B6K,EAAItC,YAAYvI,OAAMlJ,OAAWA,GAAW,WACxCg3C,EAAW1xB,OAGnB0xB,CAdA1xB,EAAQA,EAAMxV,QAAO,SAAA5G,GACjB,OAAOA,EAAKjK,MAAM+R,KAAO+C,EAAI9U,MAAM+R,OAcvC7N,YAAW,WACP4tC,EAAMO,WACNnuC,YAAW,WACP,IAAIQ,EAAQoQ,EAAIzG,SAAQ,GAAO,GAAM3J,MACjCszC,EAAcljC,EAAI9U,MAAM4R,OAAOvD,SAAQ,GAAO3J,MAClDoQ,EAAIgwB,SAAS,QAAb,UAAyBpgC,EAAQszC,EAAc,IAA/C,MACAljC,EAAItL,UAAS,KACd,KACJ,KACJ,QAQJ,SAASsuC,GAAmBG,EAAUC,EAAU/lC,GAEnD,GADA8lC,EAAS5D,UAAW,EACf4D,GAAaA,EAASj4C,MAAM20C,QAAjC,CAGA,IAAKxiC,EAAc,CACf,IAAIwlC,EAAUM,EAASj4C,MAAM+R,GAC7BkmC,EAASj4C,MAAMqT,SAASC,KAAI,SAACvL,GACzB+vC,GAAmB/vC,EAAMwL,QAAQokC,GAAUO,GAAU,MACtD,SAACnwC,GAIAmvC,GAHegB,EAAS7tC,KAAI,SAAA0H,GACxB,OAAOhK,EAAMwL,QAAQxB,OAEH,MAI9B,IAAIG,EAAY+lC,EAASj4C,MAAM4R,OAC/BqmC,EAAS/U,YAET,IAAI6P,EAAS9vC,OAAOuR,OAAOyjC,EAAS1tC,cAAcuG,MAAK,SAACC,EAAElE,GACtD,GAAIkE,GAAKA,EAAExH,SAAWsD,GAAKA,EAAEtD,QAAQ,CACjC,IAAIypC,EAAajiC,EAAExH,QAAQuG,YAAY,aACnCmjC,EAAapmC,EAAEtD,QAAQuG,YAAY,aACvC,OAAIkjC,EAAaC,EACN,EACAD,IAAeC,EAEf,GAEH,EAER,OAAO,KAIf/gC,EAAU1I,UAAS,GACnB0I,EAAUF,gBAES,SAAfmmC,EAAgBpF,GAChB,IAAI9oC,EAAO8oC,EAAOthB,QAEbxnB,EAML/F,YAAW,WACH+F,GAAQA,EAAKV,UACbU,EAAKV,QAAQvJ,MAAM4R,OAAOU,aAAarI,EAAKV,SAC5C2I,EAAUM,YAAYvI,EAAKV,UAE/B4uC,EAAapF,KACd,GAXC7uC,YAAW,WACPgO,EAAUI,aAAa2lC,KACxB,GAYXE,CAAapF,IAUV,SAAS9P,GAAWrxB,EAAQ1H,EAAWiI,EAAciF,EAAepR,EAAO05B,GAC9Ex1B,EAAUlK,MAAQD,EAAY6R,EAAO9H,cAAP,eAAyBI,EAAUlK,QAAQ,IACzEkK,EAAUH,OAAS6H,EAAO4sB,iBAAiB,GAAGD,WAAa,EAEvDnnB,GACAxF,EAAO6N,oBACH,gBAAiBrI,EAAelN,EAAUlK,MAAMC,SAChD2R,EAAO5R,MAAMmL,kBAAkBgF,oBAEnCnK,GACA4L,EAAO6N,oBACH,QAASzZ,EAAOkE,EAAUlK,MAAMC,SAChC2R,EAAO5R,MAAMmL,kBAAkBgF,oBAGvC,IAAIwE,EAAQ/C,EAAOgtB,kBACf10B,EAAYmtB,QAAmBt2B,GAAW,SAAC0R,GAK3C,GAJAA,EAAQjJ,UAAS,GAEjBk2B,GAAkBA,EAAejtB,IAE5BN,EAAc,CACf,IAAIO,EAASD,EAAQzS,MAAM+R,GACvBoB,EAAWvB,EAAO5R,MAAM+R,GACxB7H,EAAYnK,EAAY6R,EAAOoxB,aAAatwB,IAChDd,EAAO5R,MAAMqT,SAASC,KAAI,SAACvL,GACvBk7B,GAAWl7B,EAAMwL,QAAQJ,GAAWjJ,GAAW,EAAMkN,EAAepR,MACrE,SAAC+B,GACAA,EAAMwL,QAAQb,GAAQqwB,QAAO,UAKzCnxB,EAAO7F,SAAS7B,EAAUlK,MAAM+R,IAAM,CAClC4C,MAAOA,EACP5K,OAAQG,EAAUH,QAGF6H,EAAOxH,gBAAgB,iBAC7BF,EAAUlK,MAAM+R,IAAM7H,EAEpC0H,EAAOkQ,eAGJ,SAASrC,GAAoBnf,EAAMuL,EAAO5B,EAAMmuC,EAAW1oC,EAAgBoS,GAC9E,GAAIs2B,EAAW,CACX,IAAIrgC,EAAW9N,EAAK6F,YAAYxP,OAAMS,EAAW2O,GACjDqI,EAAWhY,EAAYgY,GACvB,IAAIsgC,EAAYt4C,EAAY8L,GACxB6G,EAASzI,EAAKjK,MAAM+R,GACxB9H,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrB0X,GAAoBnf,EAAM+3C,EAAWtwC,EAAMwL,QAAQb,IAAS,EAAOhD,EAAgBoS,MACpF,SAAC/Z,GACA0X,GAAoBnf,EAAMyX,EAAUhQ,EAAMwL,QAAQb,IAAS,EAAOhD,EAAgBoS,KACnFs2B,GAEPnuC,EAAKwV,oBAAoBnf,EAAMuL,OAAO9K,EAAW2O,GAEjDoS,GAAgB7X,EAAK6X,eAGlB,SAASpE,GAAYpd,EAAMuL,EAAO5B,EAAMmuC,GAC3C,GAAIA,EAAW,CACX,IAAIrgC,EAAW9N,EAAKG,gBAAgB9J,GACpCyX,EAAWhY,EAAYgY,GACvB,IAAIsgC,EAAYt4C,EAAY8L,GACxB6G,EAASzI,EAAKjK,MAAM+R,GACxB9H,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrB2V,GAAYpd,EAAM+3C,EAAWtwC,EAAMwL,QAAQb,OAC5C,SAAC3K,GACA2V,GAAYpd,EAAMyX,EAAUhQ,EAAMwL,QAAQb,OAGlDzI,EAAKyT,YAAYpd,EAAMuL,GAGpB,SAASuzB,GAAS8N,EAAUjjC,EAAMmuC,EAAW1oC,EAAgBoS,GAChE,GAAIs2B,EAAW,CACX,IAAIxM,EAAW3hC,EAAK6F,YAAY,aAAS/O,EAAW2O,GACpDk8B,EAAW7rC,EAAY6rC,GACvB,IAAImK,EAAYh2C,EAAYmtC,GACxBx6B,EAASzI,EAAKjK,MAAM+R,GACxB9H,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrBq3B,GAAS2W,EAAWhuC,EAAMwL,QAAQb,OACnC,SAAC3K,GACAq3B,GAASwM,EAAU7jC,EAAMwL,QAAQb,OAGzCzI,EAAKm1B,SAAS8N,GACdprB,GAAgB7X,EAAK6X,eAGlB,SAASkL,GAAevd,EAAO5D,EAAO5B,EAAMmuC,EAAW1oC,EAAgBi8B,GAC1E,GAAIyM,EAAW,CACX,IAAIxM,EAAW3hC,EAAK6F,YAAY,aAAS/O,EAAW2O,GACpDk8B,EAAW7rC,EAAY6rC,GACvB,IAAIl5B,EAASzI,EAAKjK,MAAM+R,GACxB9H,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrBilB,GAAcvd,EAAO5D,EAAO9D,EAAMwL,QAAQb,IAAS,EAAOhD,EAAgBi8B,MAC3E,SAAC5jC,GACAq3B,GAASwM,EAAU7jC,EAAMwL,QAAQb,MAClC0lC,GAGP,IAAIpyC,EAAQiE,EAAKwG,oBAAoB,aAAS1P,EAAW2O,IAAmB,GAC5E1J,EAAMyJ,GAAS5D,OACD9K,IAAV8K,UACO7F,EAAMyJ,GACjBxF,EAAKm1B,SAASp5B,OAAOjF,EAAW2O,OAAgB3O,EAAW4qC,GAGxD,SAASnxB,GAAWla,EAAMuL,EAAO5B,EAAMmuC,EAAW1oC,EAAgBoS,GACrE,GAAIs2B,EAAW,CACX,IAAIrgC,EAAW9N,EAAK6F,YAAL,gBAA0BxP,QAAQS,EAAW2O,GACxDqmC,EAAYh2C,EAAYkK,EAAK6F,YAAY,WACzC4C,EAASzI,EAAKjK,MAAM+R,GACxB9H,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrBq3B,GAAS2W,EAAWhuC,EAAMwL,QAAQb,OACnC,SAAC3K,GACAyS,GAAWla,EAAMyX,EAAUhQ,EAAMwL,QAAQb,OAGjDzI,EAAKuQ,WAAWla,EAAMuL,GACtBiW,GAAgB7X,EAAK6X,eAGlB,SAAS7K,GAAiBo1B,EAAkBpiC,EAAMmuC,EAAW1oC,GAChE,GAAI0oC,EAAW,CACX,IAAIhQ,EAAmBn+B,EAAK6F,YAAY,qBAAiB/O,EAAW2O,GACpE04B,EAAmBroC,EAAYqoC,GAC/B,IAAIpxB,EAAoBjX,EAAYssC,GAChC35B,EAASzI,EAAKjK,MAAM+R,GACxB9H,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrBkP,GAAiBD,EAAmBjP,EAAMwL,QAAQb,OACnD,SAAC3K,GACAkP,GAAiBmxB,EAAkBrgC,EAAMwL,QAAQb,OAGzDzI,EAAKgN,iBAAiBo1B,GACtBpiC,EAAK4V,gBAAe,GAAM,GAAM,GAgD7B,SAAS6hB,GAAaz3B,EAAM0K,EAAOlO,EAAM2xC,GAC5C,GAAIA,EAAW,CACX,IAAI1lC,EAASzI,EAAKjK,MAAM+R,GACpBzH,EAAUqK,EAAM3U,MAAM+R,GACtBumC,EAAmB,YAAT7xC,EAAoB,WACrB,aAATA,EAAqB,eAAW1F,EAChCw3C,EAAYtuC,EAAKG,gBAAgB,iBAAiBE,GAASP,OAC/DE,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrB25B,GAAa35B,EAAMwL,QAAQb,GAAS3K,EAAMwL,QAAQjJ,GAAU7D,MAC7D,SAACsB,GACIuwC,EACA5W,GAAa35B,EAAMwL,QAAQb,GAAS3K,EAAMwL,QAAQjJ,GAAUguC,GAQrE,SAAStW,EAAa/3B,EAAM0K,EAAO1H,EAAOmrC,GAC7C,GAAIA,EAAW,CACX,IAAI1lC,EAASzI,EAAKjK,MAAM+R,GACpBzH,EAAUqK,EAAM3U,MAAM+R,GACtBwmC,EAAYtuC,EAAKG,gBAAgB,iBAAiBE,GAASP,OAC/DE,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrBi6B,EAAYj6B,EAAMwL,QAAQb,GAAS3K,EAAMwL,QAAQjJ,GAAU2C,MAC5D,SAAClF,GACAi6B,EAAYj6B,EAAMwL,QAAQb,GAAS3K,EAAMwL,QAAQjJ,GAAUiuC,MAGnEtuC,EAAK+3B,YAAYrtB,EAAO1H,GAjBZ+0B,CAAYj6B,EAAMwL,QAAQb,GAAS3K,EAAMwL,QAAQjJ,GAAUiuC,MAGvEtuC,EAAKy3B,aAAa/sB,EAAOlO,GAiBtB,SAASub,GAAmB/X,EAAMwL,EAAK5J,GAC1C,IAAI2sC,EAAiBvuC,EAAKjK,MAAMmL,kBAIhC,GAHK2E,EAAY7F,EAAKjK,MAAMC,SAAU,SAAUu4C,EAAgBA,EAAeroC,qBAC3EZ,EAAQtF,EAAKjK,MAAMC,SAAU,SAAU,GAAIu4C,EAAgBA,EAAeroC,oBAEzEsF,EAAL,CAGA,IAAI1H,EAAS+B,EAAY7F,EAAKjK,MAAMC,SAAU,SAAUu4C,EAAgBA,EAAeroC,oBAClFpC,EAAO0H,KACR1H,EAAO0H,GAAO5J,GAAS,KAGxB,SAAS8W,GAAwB1Y,GACpC,IAAIuuC,EAAiBvuC,EAAKjK,MAAMmL,kBAKhC,OAJKiF,EAAqBnG,EAAKjK,MAAMC,SAAU,SAAUu4C,IACrDjpC,EAAQtF,EAAKjK,MAAMC,SAAU,SAAU,GAAIu4C,EAAgBA,EAAeroC,oBAE9E/G,QAAQC,IAAI,yBAA0BY,EAAKjK,MAAM+R,GAAI9H,EAAKjK,MAAMC,SAAUu4C,GACnEpoC,EAAqBnG,EAAKjK,MAAMC,SAAU,SAAUu4C,GAmBxD,SAASj+B,GAAmB1O,GAC/B,OAAIA,EAAMiG,SAAS,MACT,QAAN,OAAcjG,EAAd,uBACAA,EAAMiG,SAAS,MACT,QAAN,OAAcjG,EAAd,uBAEGA,EAGJ,SAASyT,GAAsBzT,GAClC,OAAKA,EAGDA,EAAMiG,SAAS,KACRqG,KAAKU,MAA2C,IAArCZ,WAAWpM,EAAMlG,QAAQ,IAAK,MAAc,IAG9DkG,EAAMiG,SAAS,MACRqG,KAAKU,MAA4C,IAAtCZ,WAAWpM,EAAMlG,QAAQ,KAAM,MAAc,IAG/DkG,EAAMiG,SAAS,OAMfjG,EAAMiG,SAAS,MALRqG,KAAKU,MAER,IAFcZ,WACdpM,EAAMlG,QAAQ,YAAa,MACpB,IASRkG,EAtBI,GAyBR,SAAS8O,GAAwB9O,EAAO4O,EAAaxQ,GACxD,GAAK4B,EAEL,OAAKqM,MAAMrM,GAGPA,EAAMiG,SAAS,KACDqG,KAAKU,MAA2C,IAArCZ,WAAWpM,EAAMlG,QAAQ,IAAK,MAAc,IACpD8U,EAAc,IAG/B5O,EAAMiG,SAAS,MACRqG,KAAKU,MAA4C,IAAtCZ,WAAWpM,EAAMlG,QAAQ,KAAM,MAAc,IAG/DkG,EAAMiG,SAAS,MACDqG,KAAKU,MAEf,IAFqBZ,WACrBpM,EAAMlG,QAAQ,YAAa,MACpB,IAEMsE,EAAKjK,MAAMmL,kBAAkBiD,kBAAoB,IAGlEvC,EAAMiG,SAAS,MACAqG,KAAKU,MAEhB,IAFsBZ,WACtBpM,EAAMlG,QAAQ,YAAa,MACpB,IAEMsE,EAAKjK,MAAMmL,kBAAkBgD,iBAAmB,IAG9DtC,EA3BIA,EA8BR,SAAS+T,GAAqB/T,EAAO4O,EAAapB,EAAMpP,GAI3D,OAHKoP,IACDA,EAAO,MAEE,OAATA,EACM,GAAN,OAAUxN,GAAV,OAAkBwN,GAET,MAATA,EACM,GAAN,OAAUxN,EAAQ4O,EAAc,KAAhC,OAAsCpB,GAE7B,OAATA,GACAxN,EAAK,UAAMA,EAAQ5B,EAAKjK,MAAMmL,kBAAkBiD,kBAAoB,IAA/D,MACC,QAAN,OAAevC,EAAf,wBAES,OAATwN,GACAxN,EAAK,UAAMA,EAAQ5B,EAAKjK,MAAMmL,kBAAkBgD,iBAAmB,IAA9D,MACC,QAAN,OAAetC,EAAf,wBAGGwN,EAGJ,SAASyE,GAAuBjS,GACnC,OAAKA,EAGDA,EAAMiG,SAAS,KACR,IAGPjG,EAAMiG,SAAS,MACR,KAGPjG,EAAMiG,SAAS,MACR,KAGPjG,EAAMiG,SAAS,MACR,KAGJjG,EAlBI,OAqBR,SAAS4sC,GAAkB9pC,EAAG1E,EAAM2P,GACvC,IAAI3P,EAAKjK,MAAMs0B,OAAf,CAGA,IAAIvR,EAAO,GAEX9Y,EAAKgmC,kBAAoBltB,EAAKhW,KAAK9C,EAAKgmC,kBAGxC,IAAIyI,EAAc,CACd,CACIh2C,KAAM,OACN8S,QAAS,SAAC7G,GACN1E,EAAKjK,MAAMihC,QAAQp+B,KAAKoH,IAE5B4rC,SAAU,YAEd,CACInzC,KAAM,QACN8S,QAAS,SAAC7G,GACN1E,EAAKjK,MAAMihC,QAAQ0X,MAAM1uC,IAE7B4rC,SAAU,YAEd,CACInzC,KAAM,YACN8S,QAAS,SAAC7G,GACN1E,EAAKjK,MAAMihC,QAAQ2X,UAAU3uC,IAEjC4rC,SAAU,YAEd,CACInzC,KAAM,sBACN+yC,QAAS,CACL,CACI/yC,KAAM,uBACN8S,QAAS,SAAC7G,GACNnB,GAAWvD,KAGnB,CACIvH,KAAM,sBACN8S,QAAS,SAAC7G,GACNnB,GAAWvD,GAAM,QAMjC4uC,EAAiB5uC,EAAKjK,MAAMmL,kBAAkByC,gBAC9CirC,GAqKD,SAAsBC,EAAOC,GAChC,GAAID,EAAM94C,MAAM6J,UAAYkvC,EAAM/4C,MAAM6J,QACpC,OAAO,EAEX,GAAIivC,EAAM94C,MAAMC,SAAS8sB,WAAagsB,EAAM/4C,MAAMC,SAAS8sB,UACvD,OAAO,EA1KWisB,CAAaH,EAAenrC,WAAYzD,IAC1DyuC,EAAY3rC,KAAK,CACbrK,KAAM,eACN8S,QAAS,SAAC7G,IA1rBf,SAAqB1E,EAAMkI,GAC9B,IAAKA,EAAc,CACf,IAAIO,EAASzI,EAAKjK,MAAM+R,GACpBvE,EAAazN,EAAYkK,EAAKjK,MAAMmL,kBAAkByC,gBAAgBH,aACtEwrC,EAAel5C,EAAYkD,OAAOM,KAAK0G,EAAKjK,MAAMC,SAASE,QAAQkK,KAAI,SAAAoL,GACvE,MAAO,CACHvH,OAAQuH,EACR1H,OAAQ9D,EAAKjK,MAAMC,SAASE,OAAOsV,GAAK1H,YAGhD9D,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrB,IAAIkC,EAAOlC,EAAMwL,QAAQb,GACzBtJ,QAAQC,IAAI,KACZ,IAAItC,EAAOhH,EAAYkK,EAAKjK,MAAMmL,kBAAkByC,gBAAgBH,aAChEyrC,EAAiBjvC,EAAKjK,MAAMmL,kBAAkByC,gBAAgBF,WAClEtE,QAAQC,IAAI,KACZY,EAAKjK,MAAMmL,kBAAkBwC,iBAAmB,CAC5CF,YAAaD,EACbE,WAAYzD,GAEhBA,EAAKjK,MAAMmL,kBAAkB0C,YAAY5D,GACzCb,QAAQC,IAAI,KACZY,EAAKjK,MAAMmL,kBAAkBwC,iBAAmB,CAC5CF,YAAa1G,EACb2G,WAAYwrC,GAGhBjvC,EAAKgC,mBACDhC,EAAKjK,MAAMmL,kBAAkBgD,iBAC7BlE,EAAKjK,MAAMmL,kBAAkB5B,WAEjCU,EAAKjK,MAAM4sB,aAAalK,cACpBzY,EAAKjK,MAAM4sB,aAAalK,aAAazY,EAAKmG,qBAAqB,WAEnEnG,EAAK6X,eACL1Y,QAAQC,IAAI,QACb,SAACtB,GACA,IAAIkC,EAAOlC,EAAMwL,QAAQb,GACzBumC,EAAa3sC,SAAQ,SAAAwB,GACjB7D,EAAKjK,MAAMC,SAASE,OAAO2N,EAAWI,QAAQH,OAAShO,EAAY+N,EAAWC,WAGlF9D,EAAKgC,mBACDhC,EAAKjK,MAAMmL,kBAAkBgD,iBAC7BlE,EAAKjK,MAAMmL,kBAAkB5B,cAIzCU,EAAKjK,MAAMmL,kBAAkB0C,YAAY5D,GAEzCA,EAAKgC,mBACDhC,EAAKjK,MAAMmL,kBAAkBgD,iBAC7BlE,EAAKjK,MAAMmL,kBAAkB5B,WAEjCU,EAAKjK,MAAM4sB,aAAalK,cACpBzY,EAAKjK,MAAM4sB,aAAalK,aAAazY,EAAKmG,qBAAqB,WAEnEnG,EAAK6X,eAkoBOjU,CAAY5D,MAGxB,IAAIkvC,EAAc,GACdlrC,EAAgBhE,EAAKjK,MAAMmL,kBAAkB5B,UACjDtG,OAAOM,KAAK0G,EAAKjK,MAAMC,SAASE,QAAQmM,SAAQ,SAAA4B,GACxCA,IAAWD,GACXhE,EAAKjK,MAAMmL,kBAAkBgF,qBAAuBjC,GAGpDjE,EAAKjK,MAAMC,SAASE,OAAO+N,IAAWjE,EAAKjK,MAAMC,SAASE,OAAO+N,GAAQH,SACpE9D,EAAKjK,MAAMC,SAASE,OAAO8N,IAC3B6nC,GAAU7rC,EAAKjK,MAAMC,SAASE,OAAO+N,GAAQH,OAC1C9D,EAAKjK,MAAMC,SAASE,OAAO8N,GAAeF,SAC9CorC,EAAYpsC,KAAKmB,OAIzBirC,EAAYn2C,OAAS,GACrB01C,EAAY3rC,KAAK,CACbrK,KAAM,wBACN+yC,QAAS0D,EAAY9uC,KAAI,SAAA6D,GACrB,MAAO,CACHxL,KAAMwL,EACNsH,QAAS,SAAC7G,IAv2BvB,SAASyqC,EAA0BnvC,EAAMovC,EAAUC,EAAQnnC,GAC9D,IAAIonC,EAAWtvC,EAAKjK,MAAMC,SAASE,OAAOk5C,GAAUtrC,OACpD,QAAiBhN,IAAbw4C,EAAJ,CAGKD,IACDA,EAASrvC,EAAKjK,MAAMmL,kBAAkB5B,WAErCU,EAAKjK,MAAMC,SAASE,OAAOm5C,KAC5BrvC,EAAKjK,MAAMC,SAASE,OAAOm5C,GAAU,IAEzC,IAAIE,EAAcvvC,EAAKjK,MAAMC,SAASE,OAAOm5C,GAAQvrC,OAErD,IAAKoE,EAAc,CACf,IAAIO,EAASzI,EAAKjK,MAAM+R,GACpB0nC,EAAU15C,EAAYy5C,GAC1BvvC,EAAKjK,MAAMqT,SAASC,KAAI,SAACvL,GACrBqxC,EAA0BrxC,EAAMwL,QAAQb,GAAS2mC,EAAUC,GAAQ,MACpE,SAACvxC,GACAA,EAAMwL,QAAQb,GAAQ1S,MAAMC,SAASE,OAAOm5C,GAAQvrC,OAAS0rC,EAC7D1xC,EAAMwL,QAAQb,GAAQzG,mBAClBlE,EAAMwL,QAAQb,GAAQ1S,MAAMmL,kBAAkBgD,iBAC9CpG,EAAMwL,QAAQb,GAAQ1S,MAAMmL,kBAAkB5B,cAIrDiwC,IACDA,EAAc,IAClBhpC,IAAMgpC,EAAaD,GACnBtvC,EAAKjK,MAAMC,SAASE,OAAOm5C,GAAQvrC,OAASyrC,EAE5CvvC,EAAKgC,mBACDhC,EAAKjK,MAAMmL,kBAAkBgD,iBAC7BlE,EAAKjK,MAAMmL,kBAAkB5B,YAu0Bb6vC,CAA0BnvC,EAAMiE,EAAQD,UAM5D8U,EAAKhW,KAAK2rC,GAEV,IAAIgB,EAAgB,GACfhmB,GAAmBzpB,IACpByvC,EAAc3sC,KACV,CACIrK,KAAM,qBACN8S,QAAS,SAAC7G,GACNkoC,GAAiB5sC,MAIjCyvC,EAAc3sC,KAAK,CACfrK,KAAM,SACN8S,QAAS,SAAC7G,GACN1E,EAAK84B,UAET8S,SAAU,WAGV5nC,IAAkBhE,EAAKjK,MAAMmL,kBAAkBgF,oBAC3ClG,EAAKjK,MAAMC,SAASE,OAAO8N,IAC3BhL,OAAOM,KAAK0G,EAAKjK,MAAMC,SAASE,OAAO8N,IAAgBjL,OAAS,GAEhE02C,EAAc1zB,QAAQ,CAClBtjB,KAAM,8BACN8S,QAAS,SAAC7G,UAEC1E,EAAKjK,MAAMC,SAASE,OAAO8N,GAClChE,EAAKgC,mBACDhC,EAAKjK,MAAMmL,kBAAkBgD,iBAC7BlE,EAAKjK,MAAMmL,kBAAkB5B,WACjCU,EAAKjK,MAAMkX,OAAOC,kBAKlC4L,EAAKhW,KAAK2sC,GAEV,IAAIC,EAAkB,GACjB1vC,EAAKjK,MAAMC,SAAS8sB,WACrB4sB,EAAgB5sC,KAAK,CACjBrK,KAAM,UACN+yC,QAAS,CACL,CACI/yC,KAAM,eACNmzC,SAAU,sBACVrgC,QAAS,SAAC7G,GACN+yB,GAAaz3B,EAAKjK,MAAM4R,OAAQ3H,EAAM,WAAW,KAGzD,CACIvH,KAAM,gBACNmzC,SAAU,gBACVrgC,QAAS,SAAC7G,GACN+yB,GAAaz3B,EAAKjK,MAAM4R,OAAQ3H,EAAM,SAAS,KAGvD,CACIvH,KAAM,gBACNmzC,SAAU,sBACVrgC,QAAS,SAAC7G,GACN+yB,GAAaz3B,EAAKjK,MAAM4R,OAAQ3H,EAAM,YAAY,KAG1D,CACIvH,KAAM,eACNmzC,SAAU,gBACVrgC,QAAS,SAAC7G,GACN+yB,GAAaz3B,EAAKjK,MAAM4R,OAAQ3H,EAAM,QAAQ,QAMlE8Y,EAAKhW,KAAK4sC,GAEV,IAAIC,EAAiB,GACjB3vC,EAAKjK,MAAM+sB,YACP9iB,EAAKjK,MAAMwtB,mBACXosB,EAAe7sC,KAAK,CAChBrK,KAAM,YACN8S,QAAS,SAAC7G,GACN1E,EAAKjK,MAAM4R,OAAO5R,MAAM4sB,aAAasC,SAASjlB,EAAKjK,MAAM+R,OAGjE6nC,EAAe7sC,KAAK,CAChBrK,KAAM,aACN8S,QAAS,SAAC7G,GACN1E,EAAKjK,MAAM4R,OAAO5R,MAAM4sB,aAAauC,UAAUllB,EAAKjK,MAAM+R,SAIlE6nC,EAAe7sC,KAAK,CAChBrK,KAAM,UACN8S,QAAS,SAAC7G,GACN1E,EAAKjK,MAAM4R,OAAO5R,MAAM4sB,aAAamC,OAAO9kB,EAAKjK,MAAM+R,OAG/D6nC,EAAe7sC,KAAK,CAChBrK,KAAM,YACN8S,QAAS,SAAC7G,GACN1E,EAAKjK,MAAM4R,OAAO5R,MAAM4sB,aAAaoC,SAAS/kB,EAAKjK,MAAM+R,SAKzEgR,EAAKiD,QAAQ4zB,GAKb,OAAO,kBAAC,GAAD,CACH72B,KAAMA,EACNnJ,QAASA,EACToP,QAASra,EAAEqa,QACXC,QAASta,EAAEsa,WAIZ,SAASyK,GAAmBzpB,GAC/B,QAAKA,IAGqD,kBAA/CA,EAAKmG,qBAAqB,SAAS6F,SACnChM,EAAKmG,qBAAqB,SAAS6F,QAAQnE,SAAS,SAa5D,SAASwoB,GAAa3rB,GACzB,OAAiB,IAAbA,EAAE+rB,OAMH,SAASoT,GAAcn/B,GAC1B,OAAiB,IAAbA,EAAE+rB,OAuEH,SAASmf,GAAQC,EAAOrqC,GAS3B,OARAqqC,EAAQA,EAAMhpC,MAAK,SAACC,EAAGlE,GACnB,OAAIkE,EAAEtB,GAAS5C,EAAE4C,IACL,EACDsB,EAAEtB,KAAW5C,EAAE4C,GACf,EAEJ,KAKR,SAASsqC,GAAgBC,GAC5B,MAAO,CACH,EAAKtzB,KAAOszB,GAAWC,UAAU,MAAOx1C,MACxC,EAAKiiB,KAAOszB,GAAWC,UAAU,KAAMx1C,MACvC,EAAKiiB,KAAOszB,GAAWC,UAAU,KAAMx1C,MACvC,EAAKiiB,KAAOszB,GAAWC,UAAU,KAAMx1C,MACvC,EAAKiiB,KAAOszB,GAAWC,UAAU,KAAMx1C,OAIxC,SAAS6hB,GAAY7M,EAAO4N,EAAO/f,GAOtC,GANA8B,QAAQC,IAAI,aAAcoQ,EAAO4N,GAC5B5N,IACDA,EAAQ,UACR4N,EAAQA,GAAS,GAGjB5N,aAAiBxW,OAAQ,CACzB,IAAIi3C,EAAcxzB,KAAOpf,EAAOif,gBAAgBhd,QAAQid,SAAS/M,EAAMgN,YAAahN,EAAMhE,MAK1F,OAHIykC,OADUn5C,IAAVsmB,QAAuCtmB,IAAhB0Y,EAAM4N,MACf6yB,EAAY7yB,MAAMA,GAAS5N,EAAM4N,OAEjC6yB,EAAY7yB,MAAM,IACjB5iB,MAEnB,IAAIy1C,EAAcxzB,KAAOjN,GAIzB,YAFc1Y,IAAVsmB,IACA6yB,EAAcA,EAAY7yB,MAAMA,IAC7B6yB,EAAYz1C,M,IkFt3CN01C,GACjB,aAAe,IAAD,2BACV76C,OAAO0R,iBAAiB,WAAU,SAACrC,GAE/B,IAAI8G,GADJ9G,EAAIA,GAAKrP,OAAOgvB,OACJC,OAAS5f,EAAE6f,QACvB,EAAKC,KAAO9f,EAAE+f,QAAU/f,EAAE+f,QAAmB,KAARjZ,KAEzCnW,OAAO0R,iBAAiB,SAAQ,SAACrC,GAGjB,OAFZA,EAAIA,GAAKrP,OAAOgvB,OACJC,OAAS5f,EAAE6f,WAEnB,EAAKC,MAAO,MAIpB3iB,KAAK2iB,MAAO,EACZ3iB,KAAK2lB,OAAQ,EACb3lB,KAAKsuC,KAAM,EAEXtuC,KAAK0uB,UAAY,EACjBl7B,OAAO0R,iBAAiB,aAAY,SAACrC,GAC7B2rB,GAAY3rB,KACZ,EAAK6rB,UAAY,MAEzBl7B,OAAO0R,iBAAiB,WAAU,SAACrC,GAC3B2rB,GAAY3rB,IAAM,EAAK6rB,UAAY,IACnC,EAAKA,UAAY,O,oBCpBZ2f,GACjB,WAAYE,EAAcC,EAAgBC,EAAYC,EAC1CC,EAAcC,EAAWC,EAAcC,GAAW,IAAD,gCAqC7DC,WAAa,SAACC,GACV,EAAK9rC,QAAU8rC,GAtC0C,KAyC7Drd,mBAAqB,WACjB,GAAI,EAAK8c,WAAWhxC,QAChB,OAAO,EAAKgxC,WAAWhxC,QAAQ2wB,YAAY3wB,SA3CU,KA8C7D6lC,SAAW,SAACnlC,GACH,EAAK4kB,cAEE5kB,IACRA,EAAO,EAAK4kB,eAFZ,EAAKD,aAAe3kB,EAKnBA,GAGLA,EAAKmlC,YAxDoD,KA2D7DZ,WAAa,SAACvkC,EAAMokC,EAAS0M,GACpB,EAAKlsB,gBACN,EAAKD,aAAe3kB,GAGpB,EAAKowC,aAAa5rB,MAAQ4f,GAAW2I,GAAa,EAAKpoB,gBAAkBooB,GAAa/sC,GACtF,EAAK+wC,YAAY/wC,IAEV,EAAKowC,aAAa5rB,KAEzB,EAAKwsB,aAKL,EAAKrsB,aAAa5uB,MAAM+R,KAAO9H,EAAKjK,MAAM+R,IAC1C,EAAK6c,aAAaplB,UAAS,OAAOzI,GAAW,GAG5Cg6C,IACG,EAAKnsB,aAAa5uB,MAAM+R,KAAO9H,EAAKjK,MAAM+R,IAC1C,EAAKiR,aAGT,EAAKsjB,eAAer8B,GACpB,EAAKy5B,aACDz5B,EAAKjK,MAAM4iB,gBAEf,EAAK7E,kBAAkB9T,EAAMA,EAAKoE,SAAQ,KAG9C,EAAKugB,aAAe3kB,IA1FqC,KA6F7Dm5B,cAAgB,WACZ,EAAKoX,kBAAkBjxC,QAAQ65B,iBA9F0B,KAiG7D+K,cAAgB,SAACx/B,EAAG1E,GAChB,EAAKuwC,kBAAkBjxC,QAAQ4kC,cAAcx/B,EAAG1E,IAlGS,KAqG7Dq8B,eAAiB,SAACr8B,GACVA,IACAA,EAAO,EAAK4kB,eAEZ5kB,GAAQA,EAAK41B,cACb,EAAK2a,kBAAkBjxC,QAAQ2xC,YAAYjxC,GAE3C,EAAKm5B,iBA5GgD,KA+G7DpgB,WAAa,SAACD,GACV,EAAKy3B,kBAAkBjxC,QAAQ4xC,QAAQp4B,IAhHkB,KAmH7D2gB,aAAe,SAAC0X,GACZ,EAAKX,aAAalxC,QAAQ8xC,QAAQD,IApHuB,KAuH7DH,WAAa,WACJ,EAAK3V,QAGV,EAAKA,MAAMh5B,SAAQ,SAAArC,GACfA,EAAKhC,SAAS,CAACimC,eAAe,EAC1BtI,oBAAgB7kC,EAChBklC,eAAWllC,EACXolC,mBAAeplC,IAEnBkJ,EAAKT,UAAS,OAAOzI,GAAW,MAGpC,EAAKukC,WAAQvkC,EAEb,EAAKu6C,oBAtIoD,KAyI7DN,YAAc,SAAC/wC,GACX,IAAI2kB,EAAe,EAAKA,aACxB,EAAKA,kBAAe7tB,EAEf,EAAKukC,QACN,EAAKA,MAAQ,GACb1W,GAAgB,EAAK0W,MAAMv4B,KAAK6hB,IAGpC3kB,GAAQ,EAAKq7B,MAAMv4B,KAAK9C,GAExB,EAAK8T,oBAEL,EAAKunB,MAAMh5B,SAAQ,SAAArC,GACfA,EAAKhC,SAAS,CAACimC,eAAe,EAC1BtI,eAAgB,EAAKA,eACrBK,UAAW,EAAKA,UAChBE,cAAe,EAAKA,mBAI5B,EAAKmV,kBACL,EAAKlY,gBACL,EAAKpgB,cAhKoD,KAmK7D4iB,eAAiB,SAACj3B,EAAG4sC,GACjB,EAAKjW,MAAMh5B,SAAQ,SAAArC,GACXsxC,IAAatxC,GACbA,EAAK4wB,YAAYlsB,GAAG,OAtK6B,KA0K7Ds3B,UAAY,SAACt3B,EAAG4sC,GACZ,EAAKjW,MAAMh5B,SAAQ,SAAArC,GACXsxC,IAAatxC,GACbA,EAAK2wB,OAAOjsB,GAAG,MAGvB,EAAK2sC,mBAhLoD,KAmL7DnV,cAAgB,SAACx3B,EAAG4sC,GAChB,EAAKjW,MAAMh5B,SAAQ,SAAArC,GACXsxC,IAAatxC,GACbA,EAAK6wB,WAAWnsB,GAAG,MAG3B,EAAK2sC,mBAzLoD,KA4L7DE,YAAc,WACL,EAAKlW,QAIV,EAAKA,MAAMh5B,SAAQ,SAAArC,GACfA,EAAK84B,YAGT,EAAKkY,eArMoD,KAwM7DK,gBAAkB,WACd,GAAK,EAAKhW,MAAV,CAKA,IAAImW,EAAY,EAAKnW,MAAM,GAAGj3B,SAAQ,GAAO,GACzChN,EAAMo6C,EAAUp6C,IAChBD,EAAOq6C,EAAUr6C,KACjBG,EAASjC,OAAOuP,YAAc4sC,EAAUp6C,IAAMo6C,EAAU92C,OACxDrD,EAAShC,OAAOiJ,WAAakzC,EAAUr6C,KAAOq6C,EAAU/2C,MAE5D,EAAK4gC,MAAMr1B,MAAM,EAAG,EAAKq1B,MAAMtiC,QAAQsJ,SAAQ,SAAArC,GAC3C,IAAI2e,EAAO3e,EAAKoE,SAAQ,GAAO,GAC/BhN,EAAM8W,KAAKC,IAAI/W,EAAKunB,EAAKvnB,KACzBD,EAAO+W,KAAKC,IAAIhX,EAAMwnB,EAAKxnB,MAC3BG,EAAS4W,KAAKC,IAAI7W,EAAQjC,OAAOuP,YAAc+Z,EAAKvnB,IAAMunB,EAAKjkB,QAC/DrD,EAAQ6W,KAAKC,IAAI9W,EAAOhC,OAAOiJ,WAAaqgB,EAAKxnB,KAAOwnB,EAAKlkB,UAGjE,EAAK41C,eAAe/wC,QAAQmyC,WAAW,CACnCr6C,MAAKD,OAAMG,SAAQD,SACpB,EAAKgkC,YApBJ,EAAKgV,eAAe/wC,QAAQmyC,cA1MyB,KAiO7D7sB,YAAc,WACV,OAAO,EAAKD,cAlO6C,KAqO7D+f,kBAAoBlrC,GAAiB,WACjC,GAAK,EAAKorB,eAAkB,EAAKA,cAAc1kB,QAA/C,CAGA,IAAIF,EAAO,EAAK4kB,cAEZ5kB,EAAKjK,MAAM4R,QACX3H,EAAKjK,MAAM4R,OAAOI,cAAa,GAAM,GACrC/H,EAAKhI,MAAMsb,iBAAmBtT,EAAKhI,MAAMsb,kBAAoBtT,EAAKjK,MAAM4R,QACxE3H,EAAKhI,MAAMsb,gBAAgBvL,cAAa,GAAM,MACnD,IA/O0D,KAiP7D2tB,SAAW,WACP,OAAQ,EAAK3wB,QAAQpH,SAlPoC,KAsP7DuP,aAAe1T,GAAiB,WAC5B,GAAK,EAAKk8B,aAGV,EAAK2b,kBAEA,EAAKzsB,eAAkB,EAAKA,cAAc1kB,SAA/C,CAGA,IAAIF,EAAO,EAAK4kB,cAEZ5kB,EAAKjK,MAAM4R,QACX3H,EAAKjK,MAAM4R,OAAOI,eAClB/H,EAAKhI,MAAMsb,iBAAmBtT,EAAKhI,MAAMsb,kBAAoBtT,EAAKjK,MAAM4R,QACxE3H,EAAKhI,MAAMsb,gBAAgBvL,eAE/B,IAAI3C,EAAOpF,EAAKoE,SAAQ,GAAO,GAC/BpE,EAAK+7B,gBACD32B,EAAKhO,IAAKgO,EAAKjO,KACf9B,OAAOuP,YAAcQ,EAAKhO,IAAMgO,EAAK1K,OACrCrF,OAAOiJ,WAAa8G,EAAKjO,KAAOiO,EAAK3K,MACrC,KAEJuF,EAAKqlC,mBACL,EAAKhJ,iBACL,EAAKvoB,kBAAkB9T,EAAMoF,GAE7B,EAAKo0B,oBAAoBx5B,EAAMA,EAAKhI,MAAMsb,gBAAiBlO,EAAMpF,EAAKhI,MAAMub,SACxEvT,EAAK81B,iBAAgB,IACzB,EAAKiE,YAAY/5B,EAAMoF,MACxB,IApR0D,KAuR7D0iC,WAAatuC,GAAiB,WAC1B,GAAK,EAAKorB,eAAkB,EAAKA,cAAc1kB,QAA/C,CAGA,IAAIF,EAAO,EAAK4kB,cAEZxf,EAAOpF,EAAKoE,SAAQ,GAAM,GAE9B,EAAK0P,kBAAkB9T,EAAMoF,MAC9B,KAhS0D,KAkS7D0O,kBAAoB,SAAC9T,EAAM6M,GACvB,EAAK4jC,UAAUnxC,QAAQpB,OAAO8B,EAAM6M,EAAM7M,GAAQA,EAAK2iC,wBAnSE,KAsS7DtvB,gBAAkBq+B,MAAS,SAAC1xC,EAAM2xC,EAAgBpF,EAAUh5B,GACxD,EAAKimB,oBAAoBx5B,EAAM2xC,EAAgBpF,EAAUh5B,EACrDvT,EAAK81B,qBACV,IAzS0D,KA2S7D5kB,wBAA0B,WACtB,GAAI,EAAKw/B,aAAapxC,QAClB,OAAO,EAAKoxC,aAAapxC,QAAQ4R,2BA7SoB,KAgT7D6oB,YAAc,SAAC/5B,EAAMoF,EAAMrH,GACvB,EAAK4yC,SAASrxC,QAAQpB,OAAO8B,EAAMoF,EAAMrH,IAjTgB,KAoT7DohC,cAAgB,SAAC1L,GACb,EAAKkd,SAASrxC,QAAQsyC,SAASne,IArT0B,KAwT7DmS,eAAiB,SAACnS,GACd,EAAKgd,UAAUnxC,QAAQsyC,SAASne,IAzTyB,KA4T7D+F,oBAAsB,SAACx5B,EAAM2xC,EAAgBpF,EAAUh5B,EAAUs+B,GACzD,EAAKnB,aAAapxC,SAClB,EAAKoxC,aAAapxC,QAAQpB,OAAO8B,EAAM2xC,EAAgBpF,EAAUh5B,EAAUs+B,IA9TtB,KAiU7DC,MAAQ,WACJ7E,GAAY,EAAK5R,QAlUwC,KAqU7D0W,MAAQ,WACJ,IAAI/xC,EAAO,EAAK4kB,cAChB,GAAK5kB,EAAL,CAGA,IAAI0K,EACA,kBAAC,GAAD,CACI3O,MAAO,CACHtB,MAAO,MACPC,OAAQ,OACRoX,UAAW,QAEfjF,KAAM,CACF3W,OAAQ,CACJ4N,OAAO,CACHid,UAAU,QAAD,OAAU7S,KAAK8jC,MAAsB,GAAhB9jC,KAAK+jC,UAAiB,SAMxEjyC,EAAKmpB,SAASze,OAAO5T,OAAWA,OAAWA,GAAW,SAAC+T,WACpD/T,GAAW,KA3V2C,KA8V7Do7C,MAAQ,WACJ,IAAIlyC,EAAO,EAAK4kB,cACX5kB,GAGLA,EAAKmhB,iBAlWLtf,KAAKuuC,aAAeA,EACpBvuC,KAAKwuC,eAAiBA,EACtBxuC,KAAKyuC,WAAaA,EAClBzuC,KAAK0uC,kBAAoBA,EACzB1uC,KAAK2uC,aAAeA,EACpB3uC,KAAK4uC,UAAYA,EACjB5uC,KAAK6uC,aAAeA,EACpB7uC,KAAK8uC,SAAWA,EAChBt7C,OAAO0R,iBAAiB,WAAU,SAACrC,GAE/B,IAAI8G,GADJ9G,EAAIA,GAAKrP,OAAOgvB,OACJC,OAAS5f,EAAE6f,QACnBC,EAAO9f,EAAE+f,QAAU/f,EAAE+f,QAAmB,KAARjZ,EAEvB,KAARA,GAAcgZ,IACf9f,EAAEggB,iBACFvlB,QAAQC,IAAI,YACZ,EAAK+lC,YAEI,KAAR35B,GAAcgZ,IACf9f,EAAEggB,iBACFvlB,QAAQC,IAAI,YACZ,EAAK0yC,SAEI,KAARtmC,GAAcgZ,IACf9f,EAAEggB,iBACFvlB,QAAQC,IAAI,YACZ,EAAK2yC,SAEI,KAARvmC,GAAcgZ,IACf9f,EAAEggB,iBACFvlB,QAAQC,IAAI,YACZ,EAAK8yC,aC5CAC,GACjB,WAAaC,EAAeC,GAAa,IAAD,gCAMxCrc,QAAU,SAACluB,GAAqD,IAAjDwuB,EAAgD,uDAAlC,GAAIC,EAA8B,uDAAlB,GAAIJ,EAAc,uCAC3D,EAAKE,MAAMvuB,GAAM,CACbwuB,cAAaC,YAAWzuB,KAAIquB,cARI,KAYxCoD,WAAa,SAACzxB,UACH,EAAKuuB,MAAMvuB,IAbkB,KAgBxCy1B,UAAY,SAACnmC,EAAKD,EAAMm7C,GAAoC,IACpDnV,EAAOF,EADmBsV,EAAyB,uDAAP,GAE5CC,EAAQp7C,EAAM,EAAKg7C,cACnBK,EAAUr7C,EAAM,EAAKg7C,cACrBM,EAASv7C,EAAO,EAAKi7C,cACrBO,EAAWx7C,EAAO,EAAKi7C,cAEvB/b,EAAQr9B,OAAOuR,OAAO,EAAK8rB,OAC/BA,EAAQA,EAAMuc,OAAOL,GAErB,IAAK,IAAI15C,EAAI,EAAGA,EAAIw9B,EAAMt9B,OAAQF,IAAK,CACnC,IAAIk9B,EAAOM,EAAMx9B,GACjB,GAAKk9B,IAGDA,EAAKjuB,KAAOwqC,KAEZvc,EAAKI,YAAaJ,EAAKI,UAAUtuB,SAASyqC,KAA9C,CAGA,IAAKnV,EACD,IAAK,IAAIvmC,EAAI,EAAGA,EAAIm/B,EAAKO,YAAYv9B,OAAQnC,IAAK,CAC9C,IAAI4V,EAAaupB,EAAKO,YAAY1/B,GAClC,GAAK4V,IAEDA,EAAW5K,OAAS4wC,GAAShmC,EAAW5K,OAAS6wC,GAAS,CAC1DtV,EAAQ3wB,EACR,OAKZ,IAAKywB,EACD,IAAK,IAAI5lB,EAAI,EAAGA,EAAI0e,EAAKQ,UAAUx9B,OAAQse,IAAK,CAC5C,IAAIzK,EAAWmpB,EAAKQ,UAAUlf,GAC9B,GAAKzK,IAEDA,EAAShL,OAAS8wC,GAAU9lC,EAAShL,OAAS+wC,GAAU,CACxD1V,EAAQrwB,EACR,OAKZ,GAAIuwB,GAASF,EACT,OAGR,MAAO,CAACE,QAAOF,UAhEqB,KAmExCd,SAAW,SAACgB,EAAOF,EAAOG,EAAcC,GACpC,EAAKgV,WAAW/yC,QAAQpB,OAAOi/B,EAAOF,EAAOG,EAAcC,IAnE3Dx7B,KAAKw0B,MAAQ,GACbx0B,KAAKuwC,cAAgBA,GAAiB,GACtCvwC,KAAKwwC,WAAaA,GCALQ,GACjB,WAAYC,EAAeC,EAAStpC,GAAW,IAAD,gCA4B9C7Q,KAAO,SAACoH,GACCA,IACDA,EAAO,EAAK8yC,cAAcluB,eACzB5kB,IAGL,EAAKgzC,SAAWhzC,IAlC0B,KAqC9CizC,YAAc,WACV,OAAO,EAAKD,UAtC8B,KAyC9CtE,MAAQgD,MAAS,SAAC/sB,GACd,GAAK,EAAKquB,SAAV,CAEA,IAAIE,EAIJ,IAHKvuB,IACDA,EAAe,EAAKmuB,cAAcluB,eAAiB,EAAKmuB,QAAQzzC,UAE5D4zC,GACAvuB,EAAaxkB,gBAAgB,eAC7B+yC,EAAkBvuB,EAElBA,EAAeA,EAAa5uB,MAAM4R,OAI1C,IAAI5L,EAAQjG,EAAY,EAAKm9C,cAAcptC,YAAY,UACnDsH,EAAgBrX,EAAY,EAAKm9C,cAAcptC,YAAY,kBAC3DstC,EAAW,EAAKF,cAAc7uC,SAAQ,GACtC0E,EAAaoqC,EAAgB9uC,SAAQ,GACrC8uC,IAAoB,EAAKD,cAAcl9C,MAAM4R,QACzCwF,EAAcxB,aACdwB,EAAcxB,YACTqC,WAAWb,EAAcxB,WAAWjQ,QAAQ,KAAM,IAAIA,QAAQ,IAAK,KAAO,IAAIo4B,WAC7E,MACN3mB,EAAcxB,aACdwB,EAAcE,WACTW,WAAWb,EAAcE,UAAU3R,QAAQ,KAAM,IAAIA,QAAQ,IAAK,KAAO,IAAIo4B,WAC5E,MACN3mB,EAAcK,cACdL,EAAcK,aACTQ,WAAWb,EAAcK,YAAY9R,QAAQ,KAAM,IAAIA,QAAQ,IAAK,KAAO,IAAIo4B,WAC9E,MACN3mB,EAAcG,eACdH,EAAcG,cACTU,WAAWb,EAAcG,aAAa5R,QAAQ,KAAM,IAAIA,QAAQ,IAAK,KAAO,IAAIo4B,WAC/E,MAEL3mB,EAAcxB,YAAewB,EAAcK,cAC5CL,EAAcxB,WAAa,QAC1BwB,EAAcE,WAAcF,EAAcG,eAC3CH,EAAcE,UAAY,iBAEvBF,EAAcxB,kBACdwB,EAAcE,iBACdF,EAAcK,mBACdL,EAAcG,aAErBH,EAAcI,YAAc,SAC5BJ,EAAcC,UAAY,SAEtBrR,EAAMtB,MAAMq5B,WAAWjsB,SAAS,OAChC9L,EAAMtB,OAAS04C,EAAS14C,MAAQqO,EAAWrO,MAAQ,KAAKq5B,WAAa,KAErE/3B,EAAMrB,OAAOo5B,WAAWjsB,SAAS,OACjC9L,EAAMrB,QAAUy4C,EAASz4C,OAASoO,EAAWpO,OAAS,KAAKo5B,WAAa,MAIhFkF,GAAWka,EAAiB,CACxBn9C,MAAO,EAAKk9C,cAAcl9C,MAC1B6J,QAAS,EAAKqzC,cAAcl9C,MAAM6J,cACnC9I,EAAWqW,EAAepR,MAC9B,KAvG2C,KAyG9C4yC,UAAY,SAAC3uC,GACJA,IACDA,EAAO,EAAK8yC,cAAcluB,eACzB5kB,IAGL,EAAKpH,KAAKoH,GACV,EAAK0uC,MAAM1uC,EAAKjK,MAAM4R,QACtB,EAAKqrC,UAAW,IAjH0B,KAoH9Cla,OAAS,SAAC94B,GACDA,IACDA,EAAO,EAAK8yC,cAAcluB,gBACzB5kB,GAAS,EAAK8yC,cAAczX,SAGjC,EAAKyX,cAAcvB,cAEdvxC,GAGLA,EAAK84B,WA9HLj3B,KAAKixC,cAAgBA,EACrBjxC,KAAKkxC,QAAUA,EACflxC,KAAK4H,SAAWA,EAEhBpU,OAAO0R,iBAAiB,WAAU,SAACrC,GAE/B,IAAI8G,GADJ9G,EAAIA,GAAKrP,OAAOgvB,OACJC,OAAS5f,EAAE6f,QACnBC,EAAO9f,EAAE+f,QAAU/f,EAAE+f,QAAmB,KAARjZ,EAEvB,KAARA,GAAcgZ,GACfrlB,QAAQC,IAAI,YACZ,EAAKsvC,SACW,KAARljC,GAAcgZ,GACtBrlB,QAAQC,IAAI,YACZ,EAAKxG,QACW,KAAR4S,GAAcgZ,GACtB9f,EAAEggB,iBACFvlB,QAAQC,IAAI,YACZ,EAAKuvC,aACW,KAARnjC,IACRrM,QAAQC,IAAI,UACZ,EAAK05B,cC3BAsa,GACjB,WAAYC,GAAS,IAAD,gCAKpBt1C,MAAQ,WACJ,EAAKu1C,MAAQ,IANG,KASpBzc,MAAQ,SAAC0c,EAAYC,GAKjB,IAJA,IAAIxuC,EACAyuC,EAAUD,GAAS,EAAKH,OAASE,EACjCzrC,EAAK2rC,EACLC,EAAS,GACL1uC,GACA,EAAKsuC,MAAMxrC,IACXA,EAAK2rC,EAAS,IAAMC,EACpBA,KAEA1uC,EAAS8C,EAMjB,OAFA,EAAKwrC,MAAMxrC,IAAM,EAEV9C,GAzBS,KA4BpBmhC,QAAU,SAACr+B,EAAI9H,GACXb,QAAQC,IAAI,gBAAiB0I,EAAI9H,EAAKjK,MAAM+R,IAC5C,EAAKwrC,MAAMxrC,GAAM9H,GA9BD,KAkCpBsJ,QAAU,SAACxB,GAEP,OADA3I,QAAQC,IAAI,QAASpG,OAAOM,KAAK,EAAKg6C,QAC/B,EAAKA,MAAMxrC,IApCF,KAuCpBuxB,SAAW,SAACvxB,UACD,EAAKwrC,MAAMxrC,IAvClBjG,KAAKwxC,OAASA,EAAS,IACvBxxC,KAAKyxC,MAAQ,ICDAK,GACjB,WAAYvlC,EAAK/T,EAAUyD,GAAQ,IAAD,gCAmBlC81C,eAAiB,SAACr2C,EAAMs2C,EAAMloB,GAC1B,MAAO,CACHmoB,KAAMv2C,EACNs2C,KAAMA,EACNloB,MAAyB,kBAAVA,EAAsBA,OAAQ70B,IAvBnB,KA2BlCuS,IAAM,SAAC9L,EAAMs2C,EAAMloB,GACf,EAAKooB,UAAUh4B,QAAQ,EAAK63B,eAAer2C,EAAMs2C,EAAMloB,IACnD,EAAKooB,UAAUh7C,OAAS,EAAKqV,KAC7B,EAAK2lC,UAAUC,MACnB,EAAKC,UAAY,IA/Ba,KAkClCJ,KAAOnC,MAAS,WACZ,EAAKwC,aACN,KApC+B,KAsClCA,SAAW,WACP,GAA8B,IAA1B,EAAKH,UAAUh7C,OAAnB,CAGA,IAAIo7C,EAAS,EAAKJ,UAAUvsB,QACxBmE,EAAQwoB,EAAOxoB,OAAS,EAM5B,IAJAA,IACAwoB,EAAON,KAAK,EAAK/1C,OACjB,EAAKm2C,UAAUl4B,QAAQo4B,GAEhBxoB,EAAQ,GACXA,IACA,EAAKuoB,aAnDqB,KAuDlCE,QAAU,WACN,OAAO,EAAKL,UAAUh7C,OAAS,GAxDD,KA2DlC+6C,KAAOpC,MAAS,WACZ,GAA8B,IAA1B,EAAKuC,UAAUl7C,OAAnB,CAGA,IAAIo7C,EAAS,EAAKF,UAAUzsB,QAC5B2sB,EAAOL,KAAK,EAAKh2C,OACjB,EAAKi2C,UAAUh4B,QAAQo4B,MACxB,KAlE+B,KAoElCE,QAAU,WACN,OAAO,EAAKJ,UAAUl7C,OAAS,GApE/B8I,KAAKkyC,UAAY,GACjBlyC,KAAKoyC,UAAY,GACjBpyC,KAAKuM,IAAMA,GAAO,GAClBvM,KAAK/D,MAAQA,EAEbzD,EAAS0M,iBAAiB,WAAW,SAACsd,GAC9BA,EAAMI,SAAyB,MAAdJ,EAAM7Y,KACvB,EAAKqoC,UAIbx5C,EAAS0M,iBAAiB,WAAW,SAACsd,GAC9BA,EAAMI,SAAyB,MAAdJ,EAAM7Y,KACvB,EAAKsoC,WCjBAQ,GACjB,WAAYC,GAAmB,IAAD,gCAI9BtY,QAAU,SAACn0B,EAAIrR,EAAGC,EAAG0jC,EAAUlW,EAAkBC,EAAqBqwB,EAAWp3C,GAC7E,EAAKm3C,iBAAiBj1C,QAAQ28B,QAAQn0B,EAAIrR,EAAGC,EAAG0jC,EAAUlW,EAAkBC,EAAqBqwB,EAAWp3C,IALlF,KAQ9Bq3C,WAAa,SAACra,GACV,OAAO,EAAKma,iBAAiBj1C,QAAQm1C,WAAWra,IATtB,KAY9B3D,YAAc,SAAC3uB,GACX,OAAO,EAAKysC,iBAAiBj1C,QAAQm3B,YAAY3uB,IAbvB,KAgB9BqgB,YAAc,SAACrgB,GACX,OAAO,EAAKysC,iBAAiBj1C,QAAQ6oB,YAAYrgB,IAjBvB,KAoB9BwxB,eAAiB,SAACxxB,GACd,EAAKysC,iBAAiBj1C,QAAQg6B,eAAexxB,IArBnB,KAwB9B08B,qBAAuB,SAAChoC,GACpB,EAAK+3C,iBAAiBj1C,QAAQklC,qBAAqBhoC,IAzBzB,KA4B9BuL,aAAe,SAACD,GACZ,EAAKysC,iBAAiBj1C,QAAQyI,aAAaD,IA7BjB,KAgC9B6B,YAAc,SAAC7B,EAAIsyB,GACf,GAAI,EAAKma,iBAAiBj1C,QACtB,OAAO,EAAKi1C,iBAAiBj1C,QAAQqK,YAAY7B,EAAIsyB,IAlC/B,KAqC9BC,WAAa,SAACvyB,GACV,GAAI,EAAKysC,iBAAiBj1C,QACtB,OAAO,EAAKi1C,iBAAiBj1C,QAAQ+6B,WAAWvyB,IAtCpDjG,KAAK0yC,iBAAmBA,G,UCCXG,GACjB,WAAY91C,GAAW,IAAD,gCAKtBoY,UAAY,SAACve,EAAMuH,GACf,IAAI/B,EAAS+B,EAAKjK,MAAMmf,QAAQ5V,QAAQvJ,MAAMkI,OAC1C6J,EAAKklC,cACT,EAAK2H,WAAW7sC,GAAM,CAAC7J,SAAQxF,OAAMqP,MACrC9H,EAAKslC,UAAU,EAAKqP,WAAW7sC,KATb,KAYtBsP,aAAe,SAACtP,EAAIqP,EAASnX,GACzB,IAAI8W,EAAS,EAAK69B,WAAW7sC,GACxBgP,GAKLA,EAAOre,KAAO0e,EAEdnX,EAAKslC,UAAUxuB,IANX,EAAKE,UAAUG,EAASnX,IAfV,KAwBtBiX,aAAe,SAACnP,EAAI9H,UACT,EAAK20C,WAAW7sC,GACvB9H,EAAKslC,aA1Ba,KA6BtBsP,WAAa,SAAC9sC,EAAI+sC,GACdD,sBAAW9sC,EAAI+sC,IA5BfhzC,KAAK8yC,WAAa,ICHLG,G,uKACN,IAAD,EAC2BjzC,KAAK9L,MAAjCqB,EADC,EACDA,IAAKD,EADJ,EACIA,KAAMG,EADV,EACUA,OAAQD,EADlB,EACkBA,MACxB,OACI,yBACIyQ,GAAG,qBACHuD,UAAU,qBACVtP,MAAO,CAAC3E,MAAKD,OAAMG,SAAQD,UAGvBwK,KAAK9L,MAAM+L,c,GAViB9E,IAAMqqC,eCCjC0N,G,uKAEN,IAAD,EACgClzC,KAAK9L,MAAtCi/C,EADC,EACDA,gBAAiBvsC,EADhB,EACgBA,OAAQsb,EADxB,EACwBA,KAC1BkxB,EAAWD,EAAgB7sB,YAAY1f,GAC3C,OACI,yBACI4C,UAAU,2BAGN,IAAI1S,MAAMorB,EAAKttB,GAAGgwB,KAAK,GAAGrmB,KAAI,SAAC3J,EAAGuM,GAC9B,IACIkyC,EADUD,EAASjyC,GACG1D,QAAQqf,KAC9Bw2B,EAAkBF,EAASjyC,EAAQ,GAAG1D,QAAQqf,KAC9Cy2B,EAAYrxB,EAAKG,iBAAiBve,MAAM,KAAK3C,GAC7CgM,EAAUC,IACV,8BACU,IAAVjM,GAAe,iCACfA,IAAU+gB,EAAKttB,EAAI,GAAK,qCAE5B,OACQ,yBACI+U,IAAG,cAASxI,GACZqI,UAAW2D,EACXjT,MAAO,CACHrB,OAAQy6C,EAAgB/9C,IAAM89C,EAAY99C,MAG9C,uBAAG2E,MAAO,CACNxE,OAAQ,EACR89C,WAAY,SAEXD,Y,GAhCMp4C,IAAM+E,WCChCuzC,G,kDACjB,aAAe,IAAD,8BACV,gBAQJlQ,QAAU,SAACplC,GACP,IAAI+jB,EAAO/jB,EAAK6F,YAAY,QACxBmvC,EAAkBh1C,EAAKjK,MAAM2T,SACjC,EAAK1L,SAAS,CAACgC,OAAM+jB,OAAMixB,qBAZjB,EAed92C,OAAS,SAAC8B,GACFA,IAASA,GACT,EAAK0tB,eAjBC,EAoBd6nB,OAAS,SAACvyC,GACN,GAAK,EAAKhL,MAAMgI,MAGD,MAAX+jB,EAAKttB,EAAT,CAJgB,MAOG,EAAKuB,MAAnB+rB,EAPW,EAOXA,KAAM/jB,EAPK,EAOLA,KAEX+jB,EAAKttB,IACL,IAAI++C,EAAazxB,EAAKG,iBAAiBve,MAAM,KAE7C6vC,EAAWtyC,OAAOF,EAAO,EAAG,6BAC5B+gB,EAAKG,iBAAmBsxB,EAAWh0B,KAAK,KAExCxhB,EAAK0mB,QAAQ3C,GACb,EAAK/lB,SAAS,CAAC+lB,WApCL,EAuCd0xB,UAAY,SAACzyC,GACT,GAAK,EAAKhL,MAAMgI,KAAhB,CADmB,MAIA,EAAKhI,MAAnB+rB,EAJc,EAIdA,KAAM/jB,EAJQ,EAIRA,KAEX,GAAe,MAAX+jB,EAAKrtB,EAAT,CAGAqtB,EAAKrtB,IACL,IAAIg/C,EAAe3xB,EAAKI,oBAAoBxe,MAAM,KAElD+vC,EAAaxyC,OAAOF,EAAO,EAAG,OAC9B+gB,EAAKI,oBAAsBuxB,EAAal0B,KAAK,KAE7CxhB,EAAK0mB,QAAQ3C,GACb,EAAK/lB,SAAS,CAAC+lB,YAvDL,EA0Dd4xB,kBAAoB,SAAC3yC,EAAO8+B,GACxB,GAAK,EAAK9pC,MAAMgI,KAAhB,CADqC,MAIlB,EAAKhI,MAAnB+rB,EAJgC,EAIhCA,KAAM/jB,EAJ0B,EAI1BA,KAEP01C,EAAe3xB,EAAKI,oBAAoBxe,MAAM,KAElD+vC,EAAaxyC,OAAOF,EAAO,EAAG8+B,GAC9B/d,EAAKI,oBAAsBuxB,EAAal0B,KAAK,KAE7CxhB,EAAK0mB,QAAQ3C,GACb,EAAK/lB,SAAS,CAAC+lB,WAtEL,EAyEd6xB,gBAAkB,SAAC5yC,EAAO8+B,GACtB,GAAK,EAAK9pC,MAAMgI,KAAhB,CADmC,MAIhB,EAAKhI,MAAnB+rB,EAJ8B,EAI9BA,KAAM/jB,EAJwB,EAIxBA,KAEPw1C,EAAazxB,EAAKG,iBAAiBve,MAAM,KAE7C6vC,EAAWtyC,OAAOF,EAAO,EAAG8+B,GAC5B/d,EAAKG,iBAAmBsxB,EAAWh0B,KAAK,KAExCxhB,EAAK0mB,QAAQ3C,GACb,EAAK/lB,SAAS,CAAC+lB,WArFL,EAwFd8xB,UAAY,SAAC7yC,GACT,GAAK,EAAKhL,MAAMgI,KAAhB,CADmB,MAIA,EAAKhI,MAAnB+rB,EAJc,EAIdA,KAAM/jB,EAJQ,EAIRA,KAEX,GAAe,IAAX+jB,EAAKttB,EAAT,CAGAstB,EAAKttB,IACL,IAAI++C,EAAazxB,EAAKG,iBAAiBve,MAAM,KAE7C6vC,EAAWtyC,OAAOF,EAAO,GACzB+gB,EAAKG,iBAAmBsxB,EAAWh0B,KAAK,KAExCxhB,EAAK0mB,QAAQ3C,GACb,EAAK/lB,SAAS,CAAC+lB,YAxGL,EA2Gd+xB,aAAe,SAAC9yC,GACZ,GAAK,EAAKhL,MAAMgI,KAAhB,CADsB,MAIH,EAAKhI,MAAnB+rB,EAJiB,EAIjBA,KAAM/jB,EAJW,EAIXA,KAEX,GAAe,IAAX+jB,EAAKrtB,EAAT,CAGAqtB,EAAKrtB,IACL,IAAIg/C,EAAe3xB,EAAKI,oBAAoBxe,MAAM,KAElD+vC,EAAaxyC,OAAOF,EAAO,GAC3B+gB,EAAKI,oBAAsBuxB,EAAal0B,KAAK,KAE7CxhB,EAAK0mB,QAAQ3C,GACb,EAAK/lB,SAAS,CAAC+lB,YAzHf,EAAK/rB,MAAQ,CACTgI,UAAMlJ,EACNitB,UAAMjtB,EACNk+C,qBAAiBl+C,GALX,E,qDA8HH,IAAD,EAC8B+K,KAAK7J,MAApCg9C,EADC,EACDA,gBAAiBh1C,EADhB,EACgBA,KAAM+jB,EADtB,EACsBA,KAC5B,IAAK/jB,EACD,OAAO,KAEX,IAAIw0C,EAAYQ,EAAgBP,WAAW,KAAKD,UAChD,OACI,kBAAC,GAAD,CACIp9C,IAAKo9C,EAAUp9C,IACfD,KAAMq9C,EAAUr9C,KAChBG,OAAQk9C,EAAUl9C,OAClBD,MAAOm9C,EAAUn9C,OAEjB,kBAAC,GAAD,CACI29C,gBAAiBA,EACjBvsC,OAAQzI,EAAKjK,MAAM+R,GACnBic,KAAMA,S,GA/IkB/mB,IAAMqqC,eCF7B0O,G,uKACN,IAAD,EAC2Cl0C,KAAK9L,MAAjDonC,EADC,EACDA,MAAOF,EADN,EACMA,MAAOG,EADb,EACaA,aAAcC,EAD3B,EAC2BA,aACjC,OAAKF,GAAUF,EAGXE,EAEI,0BACI1X,GAAIvX,KAAKC,IAAIgvB,EAAMlH,GAAIkH,EAAMjH,GAAIkH,EAAanH,GAAImH,EAAalH,IAC/DvQ,GAAIzX,KAAKE,IAAI+uB,EAAMlH,GAAIkH,EAAMjH,GAAIkH,EAAanH,GAAImH,EAAalH,IAC/DtP,GAAIuW,EAAMv7B,MACVilB,GAAIsW,EAAMv7B,MACV7F,MAAO,CACHi6C,OAAQ,aAMhB,0BACIvwB,GAAIwX,EAAMr7B,MACV+jB,GAAIsX,EAAMr7B,MACVglB,GAAI1Y,KAAKC,IAAI8uB,EAAMhH,GAAIgH,EAAM/G,GAAImH,EAAapH,GAAIoH,EAAanH,IAC/DrP,GAAI3Y,KAAKE,IAAI6uB,EAAMhH,GAAIgH,EAAM/G,GAAImH,EAAapH,GAAIoH,EAAanH,IAC/Dn6B,MAAO,CACHi6C,OAAQ,aAtBb,S,GAJ8Bh5C,IAAM+E,WCClCk0C,G,kDACjB,WAAYlgD,GAAQ,IAAD,8BACf,cAAMA,IAMVmI,OAAS,SAACi/B,EAAOF,EAAOG,EAAcC,GAClC,EAAKr/B,SAAS,CACVm/B,QAAOF,QAAOG,eAAcC,kBAPhC,EAAKrlC,MAAQ,GAFE,E,qDAaR,IAAD,EAC2C6J,KAAK7J,MAAjDmlC,EADC,EACDA,MAAOF,EADN,EACMA,MAAOG,EADb,EACaA,aAAcC,EAD3B,EAC2BA,aACjC,OACI,yBACIv1B,GAAG,sBACHuD,UAAU,2BAEV,yBAAKA,UAAU,0BACX,kBAAC,GAAD,CACI8xB,MAAOA,EACPC,aAAcA,IAElB,kBAAC,GAAD,CACIH,MAAOA,EACPI,aAAcA,U,GA5BMrgC,IAAMqqC,e,8BCD7B6O,G,kDACjB,WAAYngD,GAAQ,IAAD,8BACf,cAAMA,IACDiC,MAAQ,GAFE,E,qDAMR,IAAD,EACqB6J,KAAK9L,MAA3B+R,EADC,EACDA,GAAIquC,EADH,EACGA,QAASp6C,EADZ,EACYA,MAClB,OACI,yBACIsP,UAAWxJ,KAAK9L,MAAMsV,UACtBvD,GAAIA,EACJuH,IAAK8mC,EACLp6C,MAAOA,Q,GAdeiB,IAAM+E,WCGvBq0C,G,4MACjB5oB,WAAah0B,GAAiB,WAC1B,EAAKk0B,gBACN,K,uDAEQ,IAAD,EACsC7rB,KAAK9L,MAA5CsgD,EADC,EACDA,IAAKC,EADJ,EACIA,IAAK5f,EADT,EACSA,SAAUF,EADnB,EACmBA,SAAU+f,EAD7B,EAC6BA,MAKnC,OAHIF,GAAO,GAAKC,GAAO,IAAMj8C,SAAS8gB,eAAT,UAA2Bo7B,EAA3B,gBACzB10C,KAAK2rB,aAGL,oCAEQ,IAAI70B,MAAM09C,EAAM,GAAG5vB,KAAK,GAAGrmB,KAAI,SAAC1J,EAAGsM,GAC/B,OAAc,IAAVA,GAAeA,IAAUqzC,EAClB,KACJ,kBAAC,KAAD,CACH7qC,IAAKxI,EACLinC,UAAW5vC,SAAS8gB,eAAT,UAA2Bo7B,EAA3B,gBAEX,kBAAC,GAAD,CACIlrC,UAAU,uBACVvD,GAAE,YAAO9E,EAAP,YAAgBuzC,GAClBJ,QAASzf,EAAS1zB,GAClBjH,MAAO,CACH3E,IAAK4L,IAAUqzC,EAAM,QAAU,EAC/B/+C,OAAQ0L,IAAUqzC,EAAM,EAAI,QAC5BpzB,SAAS,GAAD,OAAKjgB,EAAQ,EAAb,cAAoBA,EAAQ,EAA5B,YAAiCszC,EAAM,UAO/D,IAAI39C,MAAM29C,EAAM,GAAG7vB,KAAK,GAAGrmB,KAAI,SAAC3J,EAAGuM,GAC/B,OAAc,IAAVA,GAAeA,IAAUszC,EAClB,KACJ,kBAAC,KAAD,CACH9qC,IAAKxI,EACLinC,UAAW5vC,SAAS8gB,eAAT,UAA2Bo7B,EAA3B,gBAEX,kBAAC,GAAD,CACIlrC,UAAU,uBACVvD,GAAE,YAAO9E,EAAP,YAAgBuzC,GAClBJ,QAAS3f,EAASxzB,GAClBjH,MAAO,CACH5E,KAAM6L,IAAUszC,EAAK,QAAS,EAC9Bj/C,MAAO2L,IAAUszC,EAAK,EAAG,QACzBrzB,SAAS,KAAD,OAAOjgB,EAAQ,EAAf,YAAoBqzC,EAAM,EAA1B,YAA+BrzC,EAAQ,e,GAjD1BhG,IAAMqqC,eCD1CmP,G,kDACjB,WAAYzgD,GAAQ,IAAD,8BACf,cAAMA,IAoBV0gD,WAAa,SAAChgD,EAAGC,EAAG0jC,GAChB,IAAK,IAAIvhC,EAAI,EAAGA,GAAKpC,EAAGoC,IACf,oBAAgBuhC,IAAYvhC,KAC7B,oBAAgBuhC,IAAYvhC,GAAKmE,IAAM+R,aAE/C,IAAK,IAAIlW,EAAI,EAAGA,GAAKnC,EAAGmC,IACf,oBAAgBuhC,IAAYvhC,KAC7B,oBAAgBuhC,IAAYvhC,GAAKmE,IAAM+R,cA5BhC,EAgCnBktB,QAAU,SAACn0B,EAAIpR,EAAGD,EAAG2jC,EAAUlW,EAAkBC,EAAqBqwB,EAAWp3C,GAE7E,GADA,EAAKq5C,WAAWhgD,EAAGC,EAAG0jC,GAClB,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,GAAmB,MAAbsyB,EACpD,EAAKuc,eAAe7uC,EAAI,IAAK,CACzBoc,mBAAkBC,sBAAqBqwB,YAAW/9C,IAAGC,KACtD0G,QAEF,GAAI,EAAKs5C,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,GAAmB,MAAbsyB,EACzD,EAAKuc,eAAe7uC,EAAI,IAAK,CACzBoc,mBAAkBC,sBAAqBqwB,YAAW/9C,IAAGC,KACtD0G,QAEF,GAAI,EAAKs5C,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,GAAmB,MAAbsyB,EACzD,EAAKuc,eAAe7uC,EAAI,IAAK,CACzBoc,mBAAkBC,sBAAqBqwB,YAAW/9C,IAAGC,KACtD0G,OAEF,CAAC,IAAD,EACD,EAAKs5C,QAAQtc,GAAY,CAACtyB,KAAIoc,mBAAkBC,sBAAqBqwB,YAAW/9C,IAAGC,KAEnF,EAAKsH,UAAL,iCACWo8B,GAAa3jC,GADxB,4BAEW2jC,GAAa1jC,GAFxB,IAGG,WAEK0G,GACAA,SA1DG,EA+DnBu5C,eAAiB,SAAC7uC,EAAIsyB,GAAuF,IAAD,2DAAjB,GAA1DlW,EAA2E,EAA3EA,iBAAkBC,EAAyD,EAAzDA,oBAAqBqwB,EAAoC,EAApCA,UAAW/9C,EAAyB,EAAzBA,EAAGC,EAAsB,EAAtBA,EAAS0G,EAAa,uCACxG,IAAKg9B,EACD,GAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAC9CsyB,EAAW,SACV,GAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EACnDsyB,EAAW,QACV,KAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAElD,OADDsyB,EAAW,IAInBlW,IAAqB,EAAKwyB,QAAQtc,GAAUlW,iBAAmBA,GAC/DC,IAAwB,EAAKuyB,QAAQtc,GAAUjW,oBAAsBA,GACrEqwB,IAAc,EAAKkC,QAAQtc,GAAUoa,UAAYA,GACjD/9C,IAAM,EAAKigD,QAAQtc,GAAU3jC,EAAIA,GACjCC,IAAM,EAAKggD,QAAQtc,GAAU1jC,EAAIA,GAE5BD,GAAMC,GAKPD,GAAKC,IACL,EAAKsH,UAAL,iCACWo8B,GAAa3jC,GADxB,4BAEW2jC,GAAa1jC,GAFxB,GAGG0G,GARH,EAAKY,SAAS,CAACG,QAAQ,GAAOf,IAjFnB,EA4FnBq3C,WAAa,SAACra,GACV,OAAO,EAAKsc,QAAQtc,IA7FL,EAgGnB3D,YAAc,SAAC3uB,EAAIsyB,GACf,IAAKA,EACD,GAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAC9CsyB,EAAW,SACV,GAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EACnDsyB,EAAW,QACV,KAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAElD,OADDsyB,EAAW,IAInB,OAAO,oBAAgBA,IAAYp0B,MAAM,EAAG,EAAK0wC,QAAQtc,GAAU3jC,EAAI,IA3GxD,EA8GnB0xB,YAAc,SAACrgB,EAAIsyB,GACf,IAAKA,EACD,GAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAC9CsyB,EAAW,SACV,GAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EACnDsyB,EAAW,QACV,KAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAElD,OADDsyB,EAAW,IAInB,OAAO,oBAAgBA,IAAYp0B,MAAM,EAAG,EAAK0wC,QAAQtc,GAAU1jC,EAAI,IAzHxD,EA4HnB4iC,eAAiB,SAACxxB,EAAIsyB,GAAc,IAAD,EAC/B,IAAKA,EACD,GAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAC9CsyB,EAAW,SACV,GAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EACnDsyB,EAAW,QACV,KAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAElD,OADDsyB,EAAW,WAIZ,EAAKsc,QAAQtc,GAEpB,EAAKp8B,UAAL,iCACWo8B,IAAc,GADzB,4BAEWA,IAAc,GAFzB,KAzIe,EA+InBzwB,YAAc,SAAC7B,EAAIsyB,GACf,GAAKA,GAUD,GAAI,EAAKsc,QAAQtc,IAAa,EAAKsc,QAAQtc,GAAUtyB,KAAOA,EACxD,OAAOsyB,MAXA,CACX,GAAI,EAAKsc,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAC9C,MAAO,IAEX,GAAI,EAAK4uC,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAC9C,MAAO,IAEX,GAAI,EAAK4uC,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAC9C,MAAO,MAxJA,EA+JnBuyB,WAAa,SAACvyB,GACV,SAAI,EAAK4uC,QAAL,IAAqB,EAAKA,QAAL,EAAkBE,eAElC,EAAKF,QAAL,IAAqB,EAAKA,QAAL,EAAkBE,eAEvC,EAAKF,QAAL,IAAqB,EAAKA,QAAL,EAAkBE,gBAA3C,KApKU,EAwKnB7uC,aAAe,SAACD,GACZ,IAAI0uB,EAAW,EAAKC,YAAY3uB,GAChC,GAAI0uB,EACA,IAAI,IAAI39B,EAAI,EAAGA,EAAI29B,EAASz9B,OAAQF,IAAK,CACrC,IAAIyG,EAAUk3B,EAAS39B,GAAGyG,QACrBA,IAGLA,EAAQqf,KAAO4T,GAAsB,YAAD,OAAa15B,EAAb,YAAkBiP,GAAMxI,IAEpE,IAAIo3B,EAAW,EAAKvO,YAAYrgB,GAChC,GAAI4uB,EACA,IAAI,IAAI79B,EAAI,EAAGA,EAAI69B,EAAS39B,OAAQF,IAAK,CACrC,IAAIyG,EAAUo3B,EAAS79B,GAAGyG,QACrBA,IAGLA,EAAQqf,KAAO4T,GAAsB,YAAD,OAAa15B,EAAb,YAAkBiP,GAAMxI,IAGhE,EAAKo3C,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EAC9C,EAAK4uC,QAAL,EAAkBE,UAAW,EACxB,EAAKF,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,EACnD,EAAK4uC,QAAL,EAAkBE,UAAW,EACxB,EAAKF,QAAL,GAAqB,EAAKA,QAAL,EAAkB5uC,KAAOA,IACnD,EAAK4uC,QAAL,EAAkBE,UAAW,IAjMlB,EAoMnBpS,qBAAuB,SAACpK,GAAc,IAAD,SAC1B,EAAKsc,QAAQtc,GAEpB,EAAKp8B,UAAL,iCACWo8B,IAAc,GADzB,4BAEWA,IAAc,GAFzB,KArMA,EAAKpiC,MAAQ,CACT6+C,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,GAGX,EAAKC,UAAY,IAAIx+C,MAAM,KAC3B,EAAKy+C,UAAY,IAAIz+C,MAAM,KAC3B,EAAK0+C,UAAY,IAAI1+C,MAAM,KAC3B,EAAK2+C,UAAY,IAAI3+C,MAAM,KAC3B,EAAK4+C,UAAY,IAAI5+C,MAAM,KAC3B,EAAK6+C,UAAY,IAAI7+C,MAAM,KAE3B,EAAK+9C,QAAU,GAlBA,E,qDA8Mf,OACI,yBACI5uC,GAAG,0BACHuD,UAAU,2BAEV,kBAAC,GAAD,CACIvD,GAAI,uBACJyuC,MAAO10C,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkB5uC,GAC9CwuC,IAAKz0C,KAAK7J,MAAM6+C,KAChBR,IAAKx0C,KAAK7J,MAAM8+C,KAChBtgB,SAAU30B,KAAKs1C,UACfzgB,SAAU70B,KAAKu1C,UACflzB,iBAAkBriB,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBxyB,iBACzDC,oBAAqBtiB,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBvyB,oBAC5D/sB,IAAKyK,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUp9C,IACtDE,OAAQuK,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUl9C,OACzDH,KAAM0K,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUr9C,KACvDE,MAAOwK,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUn9C,QAG5D,kBAAC,GAAD,CACIyQ,GAAI,uBACJyuC,MAAO10C,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkB5uC,GAC9CwuC,IAAKz0C,KAAK7J,MAAM++C,KAChBV,IAAKx0C,KAAK7J,MAAMg/C,KAChBxgB,SAAU30B,KAAKw1C,UACf3gB,SAAU70B,KAAKy1C,UACfpzB,iBAAkBriB,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBxyB,iBACzDC,oBAAqBtiB,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBvyB,oBAC5D/sB,IAAKyK,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUp9C,IACtDE,OAAQuK,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUl9C,OACzDH,KAAM0K,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUr9C,KACvDE,MAAOwK,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUn9C,QAG5D,kBAAC,GAAD,CACIyQ,GAAI,uBACJyuC,MAAO10C,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkB5uC,GAC9CwuC,IAAKz0C,KAAK7J,MAAMi/C,KAChBZ,IAAKx0C,KAAK7J,MAAMk/C,KAChB1gB,SAAU30B,KAAK01C,UACf7gB,SAAU70B,KAAK21C,UACftzB,iBAAkBriB,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBxyB,iBACzDC,oBAAqBtiB,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBvyB,oBAC5D/sB,IAAKyK,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUp9C,IACtDE,OAAQuK,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUl9C,OACzDH,KAAM0K,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUr9C,KACvDE,MAAOwK,KAAK60C,QAAL,GAAqB70C,KAAK60C,QAAL,EAAkBlC,UAAUn9C,a,GA9P3B2F,IAAM+E,WCDlC01C,G,4MACjB/4B,YAAc,SAACha,GACP,EAAK2rB,YAAY3rB,KACjBA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK6L,WAAY,EACjBl7B,OAAO0R,iBAAiB,cAAe,EAAK8X,aAC5CxpB,OAAO0R,iBAAiB,YAAa,EAAK+X,a,EAIlDuR,YAAc,SAAC3rB,GACX,MAAsB,UAAlBA,EAAE8rB,aAAwC,IAAb9rB,EAAE+rB,Q,EAOvC5R,YAAc,SAACna,GACN,EAAK6rB,YAEV7rB,EAAE4rB,kBAEG,EAAKI,OAIN,EAAKC,OAAOjsB,IAHZ,EAAKgsB,QAAS,EACd,EAAKE,YAAYlsB,M,EAMzBoa,UAAY,SAACpa,GACJ,EAAK6rB,YAGV,EAAKA,WAAY,EAEb,EAAKG,SACLhsB,EAAE4rB,kBACF,EAAKO,WAAWnsB,IAGpB,EAAKgsB,QAAS,EAEdr7B,OAAO2R,oBAAoB,cAAe,EAAK6X,aAC/CxpB,OAAO2R,oBAAoB,YAAa,EAAK8X,a,EAGjD8R,YAAc,SAAClsB,GACX,EAAKiE,SAAW,CACZmoB,WAAYpsB,EAAEqa,QACdgS,WAAYrsB,EAAEsa,SAElB,EAAKiJ,MAAQ,CACTxxB,EAAG,EACHC,EAAG,GAEP,EAAKX,MAAMi7B,cAActsB,EAAG,EAAK3O,MAAMod,KAAM,EAAK8U,Q,EAGtD0I,OAAS,SAACjsB,GACN,EAAKujB,MAAMxxB,GAAMiO,EAAEqa,QAAU,EAAKpW,SAASmoB,WAC3C,EAAK7I,MAAMvxB,GAAMgO,EAAEsa,QAAU,EAAKrW,SAASooB,WAC3C,EAAKh7B,MAAMoM,SAASuC,EAAG,EAAK3O,MAAMod,KAAM,EAAK8U,OAC7C,EAAKtf,SAASmoB,WAAapsB,EAAEqa,QAC7B,EAAKpW,SAASooB,WAAarsB,EAAEsa,S,EAGjC6R,WAAa,SAACnsB,GACV,EAAKujB,MAAMxxB,GAAMiO,EAAEqa,QAAU,EAAKpW,SAASmoB,WAC3C,EAAK7I,MAAMvxB,GAAMgO,EAAEsa,QAAU,EAAKrW,SAASooB,WAC3C,EAAKh7B,MAAMk7B,aAAavsB,EAAG,EAAK3O,MAAMod,KAAM,EAAK8U,Q,EAGrDiJ,SAAW,WACP,OAAkC,IAA3B,EAAKn7B,MAAMod,KAAKpa,Q,uDAGvB,IAAIiW,EAAUC,IAAW,cAAD,OACNpN,KAAK9L,MAAMod,KADL,SAEpBtR,KAAK9L,MAAM+3B,SAAX,qBAAoCjsB,KAAK9L,MAAMod,KAA/C,gBAFoB,qBAGNtR,KAAK9L,MAAMod,KAHL,cAIpB,CAAC,0BAA2BtR,KAAK9L,MAAM+3B,SAAWjsB,KAAKqvB,YACvD,mBACCrvB,KAAK9L,MAAM+3B,SAAW,yBAEvB/xB,EAAQ,GAIZ,OAHI8F,KAAK9L,MAAMo7B,gBACXp1B,EAAM2Y,cAAgB,QAGtB,yBACI5M,GAAIjG,KAAK9L,MAAM+R,GACfspB,cAAevvB,KAAK9L,MAAM+3B,QAAUjsB,KAAK6c,iBAAc5nB,EACvDuU,UAAW2D,EACXjT,MAAK,2BAAMA,GAAU8F,KAAK9L,MAAMgG,a,GAhGRiB,IAAM+E,WCCzB21C,G,kDACjB,WAAY3hD,GAAQ,IAAD,8BACf,cAAMA,IAQV07C,WAAa,SAAC9yB,EAAM0c,GAChB,EAAKr9B,SAAS,CAAC2gB,OAAM0c,WAVN,EAanBrK,cAAgB,SAACtsB,EAAGsjB,EAAKC,GACrB,IAAI,EAAKsT,SAAT,CAEA,EAAKA,UAAW,EAEhB,EAAKv9B,SAAS,CAACmzB,eAAe,IAC9B,EAAKn5B,MAAMqjC,MAAMh5B,SAAQ,SAAArC,GACrBA,EAAKgxB,cAActsB,EAAGsjB,EAAKC,GAAO,MAPP,IAU1BtJ,EAAQ,EAAK3mB,MAAb2mB,KACL,EAAKqgB,WAAa,CACdC,OAAQ5pC,OAAOiJ,WAAaqgB,EAAKxnB,KAAOwnB,EAAKtnB,MAC7CioC,OAAQjqC,OAAOuP,YAAc+Z,EAAKvnB,IAAMunB,EAAKrnB,OAC7CioC,SAAU5gB,EAAKvnB,IACf8nC,UAAWvgB,EAAKxnB,QA5BL,EAgCnBgL,SAAW,SAACuC,EAAGsjB,EAAKC,GAChB,EAAKjwB,MAAMqjC,MAAMh5B,SAAQ,SAAArC,GACrBA,EAAKmC,SAASuC,EAAGsjB,EAAKC,GAAO,MAGjC,IAAItJ,EAAO7oB,EAAY,EAAKkC,MAAM2mB,aAC3BA,EAAKjkB,cACLikB,EAAKlkB,MAEZ,IAAIyiC,EAASjV,EAAMvxB,EACfsmC,EAAS/U,EAAMxxB,EACfuxB,EAAIngB,SAAS,OACT,EAAKm3B,WAAWM,QAAUpC,IAC1BA,EAAS,EAAK8B,WAAWM,QAC7B3gB,EAAKjkB,OAAS,EAAKskC,WAAWM,OAASpC,EACvCve,EAAKvnB,IAAM,EAAK4nC,WAAWO,SAAWrC,GAEtClV,EAAIngB,SAAS,OACT,EAAKm3B,WAAWM,SAAWpC,IAC3BA,GAAU,EAAK8B,WAAWM,QAC9B3gB,EAAKjkB,OAAS,EAAKskC,WAAWM,OAASpC,GAEvClV,EAAIngB,SAAS,OACT,EAAKm3B,WAAWC,SAAWjC,IAC3BA,GAAU,EAAKgC,WAAWC,QAC9BtgB,EAAKlkB,MAAQ,EAAKukC,WAAWC,OAASjC,GAEtChV,EAAIngB,SAAS,OACT,EAAKm3B,WAAWC,QAAUjC,IAC1BA,EAAS,EAAKgC,WAAWC,QAC7BtgB,EAAKlkB,MAAQ,EAAKukC,WAAWC,OAASjC,EACtCre,EAAKxnB,KAAO,EAAK6nC,WAAWE,UAAYlC,GAGxCre,EAAKjkB,SACLikB,EAAKrnB,OAASjC,OAAOiJ,WAAaqgB,EAAKvnB,IAAMunB,EAAKjkB,QAClDikB,EAAKlkB,QACTkkB,EAAKtnB,MAAQhC,OAAOiJ,WAAaqgB,EAAKxnB,KAAOwnB,EAAKlkB,OAElD,EAAKuD,SAAS,CAAC2gB,UAvEA,EA0EnBsS,aAAe,SAACvsB,EAAGsjB,EAAKC,GACpB,EAAKjwB,MAAMqjC,MAAMh5B,SAAQ,SAAArC,GACrBA,EAAKixB,aAAavsB,EAAGsjB,EAAKC,GAAO,MAGrC,EAAKsT,UAAW,EAEhB,EAAKv9B,SAAS,CAACmzB,eAAe,KAjFf,EAoFnBP,YAAc,SAAClsB,GACX,EAAK1M,MAAMqjC,MAAMh5B,SAAQ,SAAArC,GACrBA,EAAK4wB,YAAYlsB,GAAG,MAExB,EAAK1G,SAAS,CAACmzB,eAAe,IAJb,IAMZxS,EAAQ,EAAK3mB,MAAb2mB,KAEL,EAAKhW,SAAW,CACZlS,EAAGkoB,EAAKxnB,KACRT,EAAGioB,EAAKvnB,IACR05B,WAAYpsB,EAAEqa,QACdgS,WAAYrsB,EAAEsa,UAhGH,EAoGnB2R,OAAS,SAACjsB,GACN,EAAK1M,MAAMqjC,MAAMh5B,SAAQ,SAAArC,GACrBA,EAAK2wB,OAAOjsB,GAAG,MAEnB,EAAK1G,SAAS,CAACmzB,eAAe,IAE9B,IAAI6L,EAAUt4B,EAAEqa,QAAU,EAAKpW,SAASmoB,WACpCoM,EAAUx4B,EAAEsa,QAAU,EAAKrW,SAASooB,WACxC,EAAKpoB,SAASlS,GAAKumC,EACnB,EAAKr0B,SAASjS,GAAKwmC,EACnB,EAAKv0B,SAASmoB,WAAapsB,EAAEqa,QAC7B,EAAKpW,SAASooB,WAAarsB,EAAEsa,QAE7B,IAAIL,EAAO7oB,EAAY,EAAKkC,MAAM2mB,MAElCA,EAAKvnB,IAAM,EAAKuR,SAASjS,EACzBioB,EAAKxnB,KAAO,EAAKwR,SAASlS,EAC1BkoB,EAAKtnB,OAAS2lC,EACdre,EAAKrnB,QAAU4lC,EAEf,EAAKl/B,SAAS,CAAC2gB,UAxHA,EA2HnBkS,WAAa,SAACnsB,GACV,EAAK1M,MAAMqjC,MAAMh5B,SAAQ,SAAArC,GACrBA,EAAK6wB,WAAWnsB,GAAG,MAEvB,EAAK1G,SAAS,CAACmzB,eAAe,KA7H9B,EAAKn5B,MAAQ,CACT2mB,UAAM7nB,EACNukC,WAAOvkC,EACPq6B,eAAe,GALJ,E,qDAkIR,IAAD,OACDxS,EAAQ9c,KAAK7J,MAAb2mB,KACL,OAAKA,EAID,yBACI7W,GAAG,sBACH/L,MAAO4iB,EACPtT,UAAU,wBAGN,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,MAAMjL,KAAI,SAAC+S,EAAMnQ,GAC7C,OAAO,kBAAC,GAAD,CACHwI,IAAKxI,EACLmQ,KAAMA,EACN6d,cAAe,EAAKA,cACpB7uB,SAAU,EAAKA,SACf8uB,aAAc,EAAKA,aACnBE,cAAe,EAAKn5B,MAAMm5B,oBAhBnC,S,GAtI8Bn0B,IAAM+E,WCFlC41C,I,mNACjBpsC,QAAU,SAAC7G,GACP,EAAK3O,MAAMwV,SAAW,EAAKxV,MAAMwV,QAAQ7G,I,uDAIzC,OACI,kBAAC,EAAD,CACI6G,QAAS1J,KAAK0J,SAEd,yBACIpT,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,Y,GAdO3P,IAAM+E,YCAzB61C,G,uKAEb,OACI,yBAAKvsC,UAAU,gC,GAH0BrO,IAAM+E,WCCtC81C,G,4MACjBtsC,QAAU,SAAC7G,K,uDAIP,OACI,kBAAC,EAAD,CACI6G,QAAS1J,KAAK0J,SAEd,yBACIpT,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,Y,GAbC3P,IAAM+E,WCKnB+1C,G,kDACjB,WAAY/hD,GAAQ,IAAD,8BACf,cAAMA,IAOVgI,MAAQ,WACJ,EAAKC,SAAS,CAACD,OAAO,KATP,EAYnBG,OAAS,SAACuK,EAAQmjC,EAAUmM,EAAS/3C,GACjC,EAAKhC,SAAS,CACVyK,SACEmjC,WAAUmM,UAASh6C,OAAO,EAC5BiC,UAhBW,EAoBnButB,UAAY,WACR,OAAOlzB,SAAS8gB,eAAT,UAA2B,EAAKnjB,MAAMyQ,OAAtC,mBACHpO,SAAS8gB,eAAe,EAAKnjB,MAAMyQ,SAnBvC,EAAKzQ,MAAQ,CACT+F,OAAO,GAJI,E,qDA0Bf,OAAI8D,KAAK7J,MAAM+F,MACJ,KACN8D,KAAK7J,MAAMyQ,QAAW5G,KAAK0rB,cAC5B9D,GAAmB5nB,KAAK7J,MAAMgI,MAG9B,kBAAC,KAAD,CACIwL,IAAK,WACLkE,MAAM,EACNhB,SAAU7M,KAAK0rB,YACfnT,UAAU,eACVre,MAAO,CACH+D,OAAQ,SAEZ8tB,UAAW,CACP+d,KAAM,CACF7d,SAAS,GAEbD,gBAAiB,CACbC,SAAS,EACTC,kBAAmB,kBAI3B,yBAAK1iB,UAAU,eACVvD,GArDF,eAsDE/L,MAAO,CACJ2W,QAAW7Q,KAAK7J,MAAM+F,MAAU,EAAH,IAGjC,yBAAKsN,UAAU,sBAGNxJ,KAAK7J,MAAM+F,OACZ8D,KAAK7J,MAAM4zC,SAASxrC,KAAI,SAAA+T,GACpB,OAAOA,MAKVtS,KAAK7J,MAAM+F,OACZ8D,KAAK7J,MAAM4zC,SAAS7yC,OAAS,GAAK,kBAAC,GAAD,OAIjC8I,KAAK7J,MAAM+F,OACZ8D,KAAK7J,MAAM+/C,QAAQ33C,KAAI,SAAA+T,GACnB,OAAOA,MAKVtS,KAAK7J,MAAM+F,OACZ8D,KAAK7J,MAAM+/C,QAAQh/C,OAAS,GAAK,kBAAC,GAAD,MAGrC,kBAAC,GAAD,MACA,kBAAC,GAAD,SArDL,S,GA/BmBiE,IAAMqqC,eCHvB2Q,G,kDACjB,WAAYjiD,GAAQ,IAAD,8BACf,cAAMA,IASVojC,cAAgB,WACZ,EAAKnhC,MAAMy7B,QAAU,EAAKwkB,YAAY34C,QAAQvB,SAX/B,EAcnBkzC,YAAc,SAACjxC,GACPA,GAAQ,EAAKhI,MAAMy7B,QACnB,EAAKwkB,YAAY34C,QAAQpB,OACrB8B,EAAKjK,MAAM+R,GACX9H,EAAK21B,sBAAwB,GAC7B31B,EAAKkiB,qBAAuB,GAC5BliB,IApBO,EAwBnBkxC,QAAU,SAACp4B,GACP,EAAK9a,SAAS,CACV8a,UAAMhiB,IAENgiB,GACA7e,YAAW,WACP,EAAK+D,SAAS,CACV8a,WAEL,IAjCQ,EAqCnBorB,cAAgB,SAACx/B,EAAG1E,GAChB,EAAKhC,SAAS,CACVk6C,YAAa1J,GAAkB9pC,EAAG1E,GAAM,WACpC,EAAKhC,SAAS,CAACk6C,iBAAaphD,UAxCrB,EA6CnB86C,SAAW,SAACne,GACR,EAAKz1B,SAAS,CAACy1B,YA3Cf,EAAKz7B,MAAQ,CACTy7B,QAAQ,GAGZ,EAAKwkB,YAAcj7C,IAAM+R,YAPV,E,qDAkDf,OAAKlN,KAAK7J,MAAMy7B,OAIZ,yBACI3rB,GAzDS,iBA0DT0D,IA1DS,iBA2DTH,UAAU,kBAEV,kBAAC,GAAD,CACI5C,OAAQ5G,KAAK7J,MAAMmgD,cAAgBt2C,KAAK7J,MAAMmgD,aAAapiD,MAAM+R,GACjE0D,IAAK,WACL6D,IAAKxN,KAAKo2C,eAGTp2C,KAAK7J,MAAMkgD,aACZr2C,KAAK7J,MAAM8gB,KAGXjX,KAAK7J,MAAMkgD,aAlBZ,S,GApDqBl7C,IAAM+E,WCNzBq2C,I,MACjB,WAAYC,EAAQC,EAASC,EAAaC,GAAY,IAAD,gCAmBrDC,uBAAyB,SAACp0B,GACtB,IAAIxX,EAAOwX,EAAMxX,KAEjB,GAAKA,GAAQA,EAAKyrC,UAAY,EAAKA,QAGnC,GAAIzrC,GAAQA,EAAKgQ,EAAG,CAChB,IAAIA,EAAIhQ,EAAKgQ,EACb,EAAK67B,UAAU77B,GAAGhQ,UACX,EAAK6rC,UAAU77B,OAG1B,CACI,IAAI87B,EAAe,aACnB,GAAI9rC,GAAQA,EAAKrC,EAAG,CAChB,IAAIA,EAAIqC,EAAKrC,EACbmuC,EAAe,EAAKC,UAAUpuC,GAAK,SAACxF,GAChC,IAAI5J,EAAU,CAACyhB,EAAGrS,EAAGxF,UACrB,EAAK6zC,KAAKz9C,IAIlB,EAAKo9C,UAAUn0B,EAAMxX,KAAM8rC,KAzCkB,KA6CrDE,KAAO,SAAChsC,EAAMzP,GACNA,IACA,EAAK07C,UACLjsC,EAAKrC,EAAI,EAAKsuC,QACd,EAAKJ,UAAU7rC,EAAKrC,GAAKpN,GAG7ByP,EAAKyrC,QAAU,EAAKA,SAE2B,oBAAtB,EAAKC,YAA8B,EAAKA,cAAgB,EAAKA,aAE1Ej7C,YAAYuP,EAAM,EAAKwrC,QAAU,MAvD7Cx2C,KAAK22C,UAAYA,EACjB32C,KAAKw2C,OAASA,EACdx2C,KAAK02C,YAAcA,EACnB12C,KAAKi3C,QAAU,EACfj3C,KAAKy2C,QAAUA,EACfz2C,KAAK62C,UAAY,GACjB72C,KAAK+2C,UAAY,GAEjBvjD,OAAO0R,iBAAiB,WAAW,SAACsd,GAChCllB,QAAQC,IAAI,UAAWilB,GACnB,EAAKg0B,QAAUh0B,EAAMg0B,SAAW,EAAKA,QAIzC,EAAKI,uBAAuBp0B,Q,UChBpC00B,GAAmB,GACnBC,GAAiB,GAErBD,GAAiBP,UAAY,SAAC3rC,EAAMosC,EAAK57C,GACnB,eAAdwP,EAAKrQ,MAAyBw8C,GAAensC,EAAKtP,MAClD07C,EAAID,GAAensC,EAAKtP,MAApB,MAAAy7C,GAAc,aAAensC,EAAKrP,QAApB,QAA4BH,MAIhC,WAAdwP,EAAKrQ,MAAqBa,EAAOwP,EAAKtP,OACtCF,EAAOwP,EAAKtP,MAAZ,MAAAF,EAAM,aAAewP,EAAKrP,QAApB,QAA4By7C,MAyE3BF,UC9EMG,G,kDAGjB,WAAYnjD,GAAQ,IAAD,8BACf,cAAMA,IAkBV2Z,KAAO,WACH,EAAKypC,SAAU,EACfC,cAAc,EAAKC,eACnBD,cAAc,EAAKE,cACnB,EAAKt7C,SAAS,CAAE0R,MAAM,IACtB,EAAK4pC,aAAeC,aAAY,WAC5B,GAAK,EAAKr5C,QAAV,CAIA,IAAIs5C,EAAU,EAAKxhD,MAAMwhD,SAAY,EAAKzjD,MAAM0jD,MAAQ,EAAK1jD,MAAM2jD,SAAW,IAC1EF,GAAW,MACX,EAAKL,SAAU,EACfC,cAAc,EAAKE,eAEvBE,EAAUtrC,KAAKC,IAAI,IAAKqrC,GACxB,EAAKx7C,SAAS,CAACw7C,iBATXJ,cAAc,EAAKE,gBAUxB,EAAKvjD,MAAM2jD,WApCC,EAuCnBjgC,MAAQ,SAAC5a,GACL,EAAK86C,SAAU,EACfP,cAAc,EAAKC,eACnBD,cAAc,EAAKE,cACnB,EAAKt7C,SAAS,CAAE0R,MAAM,IAClB7Q,EACA,EAAKb,SAAS,CAACw7C,QAAS,IAG5B,EAAKH,cAAgBE,aAAY,WAC7B,GAAK,EAAKr5C,QAAV,CAIA,IAAIs5C,EAAU,EAAKxhD,MAAMwhD,SAAY,EAAKzjD,MAAM0jD,MAAQ,EAAK1jD,MAAM2jD,SAAW,IAC1EF,GAAW,IACX,EAAKG,SAAU,EACfP,cAAc,EAAKC,gBAEvBG,EAAUtrC,KAAKE,IAAI,EAAGorC,GACtB,EAAKx7C,SAAS,CAACw7C,iBATXJ,cAAc,EAAKC,iBAUxB,EAAKtjD,MAAM2jD,WA5DC,EA+DnB14C,OAAS,SAACnC,GACN,GAAI,EAAKkG,QAAQxG,gBAGb,OAFA,EAAKxI,MAAM6jD,oBACX,EAAKngC,MAAM5a,GAIf,IAAIg7C,GAAe,EAAK7hD,MAAM0X,KAG9B,OAFA,EAAK1X,MAAM0X,KAAO,EAAK+J,MAAM5a,GAAS,EAAK6Q,OAEpCmqC,GAzEQ,EA4EnBzI,QAAU,SAACD,GACP,EAAKnzC,SAAS,CAACmzC,mBA7EA,EAgFnB2I,eAAiB,WACb,OAAO,yBACHzuC,UAAU,4BAEV,sEAlFJ,EAAKrT,MAAQ,CACTwhD,QAASzjD,EAAM2Z,KAAM,IAAK,EAC1ByhC,mBAAer6C,GAGnB,EAAKqiD,SAAU,EACf,EAAKQ,SAAU,EARA,E,gEAYf93C,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BA0ER,IAAD,OACN,OACI,oCACI,yBACImL,UAAU,gBACVtP,MAAK,2BACA8F,KAAKkD,QAAQxG,gBAGV,CAAClH,MAAO,KAAMqb,QAAS,GAHK,CAC5Brb,MAAM,GAAD,OAAKwK,KAAK7J,MAAMwhD,QAAU,IAA1B,KACL9mC,QAAS7Q,KAAK7J,MAAMwhD,QAAU,MAE/B,IAGPtV,cAAe,SAACx/B,GACZA,EAAE4rB,kBACF5rB,EAAEggB,mBAGN,yBAAK3oB,MAAO,IAEZ,yBAAKsP,UAAU,gBACX,kBAAC,EAAD,CACIS,gBAAiB,CACbH,WAAY,EACZC,aAAc,MACd+G,gBAAiB9Q,KAAKkD,QAAQxG,iBAAmB,WAErDgN,QAAS,SAAC7G,GACN,EAAK3O,MAAM6jD,iBAGf,yBACIzhD,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK7K,KAAKkD,QAAQxG,gBACd,6BACI,2BAKhBsD,KAAK7J,MAAMm5C,eAAiBtvC,KAAKi4C,mBAKrCj4C,KAAKkD,QAAQxG,iBAEb,yBACI8M,UAAU,0B,GA/IKrO,IAAM+E,WAAxBm3C,GACVx8B,YAAc3f,EAwJzBm8C,GAAU/mC,aAAe,CACrBzC,MAAM,EACN+pC,MAAO,IACPC,SAAU,G,IC7JOK,G,4MACjBxuC,QAAU,SAAC7G,GAAO,IAAD,EACS,EAAK3O,MAAtB0S,EADQ,EACRA,OACL6hC,GAFa,EACAxsC,MACCwL,QAAQb,K,EAG1BiW,YAAc,SAACha,GACXA,EAAE4rB,kBACF5rB,EAAEggB,kB,EAGN2L,YAAc,SAAC3rB,GACX,MAAsB,UAAlBA,EAAE8rB,aAAwC,IAAb9rB,EAAE+rB,Q,uDAM5B,IACF8Z,EAAa1oC,KAAK9L,MAAlBw0C,UACL,OACI,yBACIziC,GAAG,mBACHuD,UAAU,wBACV+lB,cAAevvB,KAAK6c,YACpBnT,QAAS1J,KAAK0J,QACdxP,MAAO8F,KAAK9L,MAAMgG,OAGdwuC,GAAa,yBAAKpyC,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GAAIgS,IAAKC,EAAQ,QAGvE49B,GAAa,yBAAKpyC,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GAAIgS,IAAKC,EAAQ,Y,GAhC9C3P,IAAM+E,WCGhCi4C,G,kDACjB,WAAajkD,GAAQ,uCACXA,G,kEAEYgV,EAAWC,EAAWC,GACxC,OAAK/R,EAAa6R,EAAU8B,KAAMhL,KAAKgL,QAGlC3T,EAAa6R,EAAWlJ,KAAK9L,S,+BAM3B,IAAD,SACsF8L,KAAK9L,MAA5F8W,EADC,EACDA,KAAMm/B,EADL,EACKA,aAAcluC,EADnB,EACmBA,MAAO2K,EAD1B,EAC0BA,OAAQ8hC,EADlC,EACkCA,UAAWpZ,EAD7C,EAC6CA,cAAe8oB,EAD5D,EAC4DA,iBAAkBj6C,EAD9E,EAC8EA,KACpF6B,KAAKgL,KAAO/W,EAAY+W,GACxB,IAAIqtC,EAAe,GACdlO,IAAckO,EAAaluC,QAAU,QAE1C,IAAIgD,EAAUC,IACV,uBACAgrC,GAEJ,OACI,yBACInyC,GAAG,mBACH/L,MAAO,CACHtB,MAAOoS,EAAKpS,MACZC,OAAQmS,EAAKnS,OACbtD,IAAKyV,EAAKzV,IACVD,KAAM0V,EAAK1V,MAGfkU,UAAW2D,IAGNu7B,GACD,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,MAAMnqC,KAAI,SAAC+S,EAAMnQ,GAC7C,OAAO,kBAAC,GAAD,CACH8qB,QAAS,EAAK/3B,MAAMu7B,MAAMzpB,SAASsL,GACnC3H,IAAKxI,EACLmQ,KAAMA,EACN6d,cAAe,EAAKj7B,MAAMi7B,cAC1B7uB,SAAU,EAAKpM,MAAMoM,SACrB8uB,aAAc,EAAKl7B,MAAMk7B,aACzBE,cAAeA,SAKrBnxB,EAAKmG,qBAAqB,cAAgB,IAAI86B,cAChD,kBAAC,GAAD,CACIllC,MAAOm+C,EACP3P,UAAWA,EACXzsC,MAAOA,EACP2K,OAAQA,S,GAxDczL,IAAM+E,WCF/Bo4C,G,kDACjB,WAAYpkD,GAAQ,IAAD,8BACf,cAAMA,IAOVmI,OAAS,SAAC8B,EAAM6M,EAAMotC,GAClB,EAAKj8C,SAAS,CAACgC,OAAM6M,OAAMotC,sBATZ,EAYnBrI,SAAW,SAACne,GACR,EAAKz1B,SAAS,CAACy1B,YAVf,EAAKz7B,MAAQ,CACTy7B,QAAQ,GAJG,E,qDAiBf,IAAK5xB,KAAK7J,MAAMy7B,OACZ,OAAO,KAEX,IAAK5xB,KAAK7J,MAAMgI,KACZ,OAAO,KALL,MAOa6B,KAAK7J,MAAnBgI,EAPC,EAODA,KAAM6M,EAPL,EAOKA,KAEX,OACI,oCAEQ7M,EAAKG,gBAAgB,eACpBH,EAAKhI,MAAM0tC,gBACX3B,GAAgB/jC,KAChBypB,GAAmBzpB,IACpB,kBAAC,GAAD,CACI8H,GAAI9H,EAAKjK,MAAM+R,GACf0D,IAAG,SACH8lB,MAAOtxB,EAAKjK,MAAMmzB,aAAe,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,MACjE8H,cAAehxB,EAAKgxB,cACpB7uB,SAAUnC,EAAKmC,SACf8uB,aAAcjxB,EAAKixB,aACnBE,cAAenxB,EAAKhI,MAAMm5B,cAC1BoZ,UAAWA,GAAUvqC,GACrBgsC,aAAcA,GAAahsC,GAC3ByI,OAAQzI,EAAKjK,MAAM+R,GACnB9H,KAAMA,EACNlC,MAAOkC,EAAKjK,MAAM+H,MAClBm8C,iBAAkBp4C,KAAK7J,MAAMiiD,iBAC7BptC,KAAMA,S,GA/CuB7P,IAAM+E,WCDtCq4C,G,kDACjB,WAAYrkD,GAAQ,IAAD,8BACf,cAAMA,IA+BVyY,SAAW,SAAC5M,GACR,OAAIA,EAAMiG,SAAS,MACT,GAAN,OAAUmG,WAAWpM,EAAMlG,QAAQ,KAAM,KAAKmZ,QAAQ,GAAtD,MAEAjT,EAAMiG,SAAS,KACT,GAAN,OAAUmG,WAAWpM,EAAMlG,QAAQ,IAAK,KAAKmZ,QAAQ,GAArD,KAGGjT,GAxCQ,EA2CnBy4C,UAAY,WAAO,IAAD,EACiE,EAAKtkD,MAA/Eud,EADS,EACTA,gBAAiBtT,EADR,EACQA,KAAMusC,EADd,EACcA,SAAU9xC,EADxB,EACwBA,MAAOC,EAD/B,EAC+BA,OAAQ6Y,EADvC,EACuCA,SAAUs+B,EADjD,EACiDA,aAM/D,OAJA,EAAK/oC,WAAawK,EAAgBvL,eAE9B8pC,IACAtF,EAAWsF,GACR,2BACA7xC,EAAKy8B,kBAAkB8P,EAASp1C,KAAO,EAAK2R,WAAW3R,KACtDo1C,EAASn1C,IAAM,EAAK0R,WAAW1R,IAAKkc,EACpC7Y,GAAS8xC,EAAS9xC,MAAOC,GAAU6xC,EAAS7xC,OAAQ,EAAKoO,YAAY,GAAOyK,IAHpF,IAIIg5B,WAAUzjC,WAAY,EAAKA,cAtDhB,EA0DnBoI,wBAA0B,WACtB,OAAO,EAAK/D,eA3DG,E,kEAGGpC,EAAWC,EAAWC,GACxC,GAAIF,EAAUuI,gBAAiB,CAC3B,IAAIrK,EAAgB8B,EAAUuI,gBAAgBlP,SAAQ,GAEtD,IAAKlL,EAAa2I,KAAKiH,WAAYhT,EAAYmT,IAE3C,OADApH,KAAKiH,WAAaG,GACX,EAIf,OAAIpH,KAAK9L,MAAM0E,QAAUsQ,EAAUtQ,OAC/BoH,KAAK9L,MAAM2E,SAAWqQ,EAAUrQ,QAChCmH,KAAK9L,MAAM+5B,OAAS/kB,EAAU+kB,MAC9BjuB,KAAK9L,MAAMwd,WAAaxI,EAAUwI,YAGjCra,EAAa2I,KAAK9L,MAAMw2C,SAAUxhC,EAAUwhC,aAG5CrzC,EAAa2I,KAAK9L,MAAM87C,aAAc9mC,EAAU8mC,gBAGhD34C,EAAa6R,EAAU/K,KAAKmG,qBAAqB,iBAAkBtE,KAAKsL,mB,+BAqCtE,IAAD,EACsCtL,KAAK9L,MAA5C+5B,EADC,EACDA,KAAM9vB,EADL,EACKA,KAAiB6xC,GADtB,EACWp/B,UADX,EACsBo/B,cAC5B,IAAK/hB,EACD,OAAO,KAEX,IAAK9vB,EAAKE,QACN,OAAO,KANL,MAQmE2B,KAAKw4C,YAAzEltC,EARC,EAQDA,cAA4Bo/B,GAR3B,EAQc/R,YARd,EAQ2B+R,UAAsBtO,GARjD,EAQqCn1B,WARrC,EAQiDm1B,gBAIvD,OAHAp8B,KAAKsL,cAAgBrX,EAAYqX,GAC7B0kC,IACAtF,EAAWsF,GAEX,yBACI/pC,GAAG,sBACHuD,UAAU,0BACVtP,MAAO,CACHtB,MAAOwjC,EAAeF,IAAME,EAAeH,IAC3CpjC,OAAQujC,EAAeJ,IAAMI,EAAeL,IAC5CxmC,IAAK6mC,EAAeL,IACpBzmC,KAAM8mC,EAAeH,MAGzB,yBAAKzyB,UAAU,0BAA0BtP,MAAO,CAC5C3E,IAAKm1C,EAASn1C,IAAM6mC,EAAeL,IACnCzmC,KAAMo1C,EAASp1C,KAAO8mC,EAAeH,IACrCrjC,MAAO8xC,EAAS9xC,MAChBC,OAAQ6xC,EAAS7xC,UAErB,yBAAK2Q,UAAU,0BAIP,0BACIivC,WAA2C,UAA9BntC,EAAcI,aAAyD,YAA9BJ,EAAcI,aACpC,eAA5BJ,EAAcC,UAA6B,UAAW,SAC1DqY,GAAI,EACJE,GAAI4mB,EAASp1C,KAAO8mC,EAAeH,IACnClX,GAAI2lB,EAASn1C,IAAM6mC,EAAeL,IAAM2O,EAAS7xC,OAAS,EAC1DmsB,GAAI0lB,EAASn1C,IAAM6mC,EAAeL,IAAM2O,EAAS7xC,OAAS,EAC1DqB,MAAO,CACHi6C,OAAQ,UACRuE,gBAAiB,aAQzB,4BACID,WAA4C,UAA9BntC,EAAcI,aAAyD,YAA9BJ,EAAcI,aACrC,eAA5BJ,EAAcC,WACbvL,KAAK9L,MAAMwd,SAAuB,SAAZ,UAC3B2sB,GAAI,EACJC,GAAIoM,EAASn1C,IAAM6mC,EAAeL,IAAM2O,EAAS7xC,OAAS,EAC1DmiB,EAAG,EACH9gB,MAAO,CACHi6C,OAAQ,OACRvvB,KAAM,aAOd,0BACI6zB,WAA2C,QAA9BntC,EAAcI,aAAuD,YAA9BJ,EAAcI,aAClC,aAA5BJ,EAAcC,UAA4B,UAAY,SAC1DqY,GAAI8mB,EAASp1C,KAAO8mC,EAAeH,IAAMyO,EAAS9xC,MAClDkrB,GAAIsY,EAAeF,IAAME,EAAeH,IACxClX,GAAI2lB,EAASn1C,IAAM6mC,EAAeL,IAAM2O,EAAS7xC,OAAS,EAC1DmsB,GAAI0lB,EAASn1C,IAAM6mC,EAAeL,IAAM2O,EAAS7xC,OAAS,EAC1DqB,MAAO,CACHi6C,OAAQ,UACRuE,gBAAiB,aAQzB,4BACID,WAA4C,QAA9BntC,EAAcI,aAAuD,YAA9BJ,EAAcI,aACnC,aAA5BJ,EAAcC,WACbvL,KAAK9L,MAAMwd,SAAwB,SAAZ,UAC5B2sB,GAAIjC,EAAeF,IAAME,EAAeH,IACxCqC,GAAIoM,EAASn1C,IAAM6mC,EAAeL,IAAM2O,EAAS7xC,OAAS,EAC1DmiB,EAAG,EACH9gB,MAAO,CACHi6C,OAAQ,OACRvvB,KAAM,aAMd,0BACI6zB,WAAyC,UAA5BntC,EAAcC,WAAqD,YAA5BD,EAAcC,UAChE,UAAY,SACdqY,GAAI8mB,EAASp1C,KAAO8mC,EAAeH,IAAMyO,EAAS9xC,MAAQ,EAC1DkrB,GAAI4mB,EAASp1C,KAAO8mC,EAAeH,IAAMyO,EAAS9xC,MAAQ,EAC1DmsB,GAAI,EACJC,GAAI0lB,EAASn1C,IAAM6mC,EAAeL,IAClC7hC,MAAO,CACHi6C,OAAQ,UACRuE,gBAAiB,aAOzB,4BACID,WAA0C,UAA5BntC,EAAcC,WAAqD,YAA5BD,EAAcC,WAC9DvL,KAAK9L,MAAMwd,SAAwB,SAAZ,UAC5B2sB,GAAIqM,EAASp1C,KAAO8mC,EAAeH,IAAMyO,EAAS9xC,MAAQ,EAC1D0lC,GAAI,EACJtjB,EAAG,EACH9gB,MAAO,CACHi6C,OAAQ,OACRvvB,KAAM,aAMd,0BACI6zB,WAAyC,QAA5BntC,EAAcC,WAAmD,YAA5BD,EAAcC,UAC9D,UAAY,SACdqY,GAAI8mB,EAASp1C,KAAO8mC,EAAeH,IAAMyO,EAAS9xC,MAAQ,EAC1DkrB,GAAI4mB,EAASp1C,KAAO8mC,EAAeH,IAAMyO,EAAS9xC,MAAQ,EAC1DmsB,GAAI2lB,EAASn1C,IAAM6mC,EAAeL,IAAM2O,EAAS7xC,OACjDmsB,GAAIoX,EAAeJ,IAAMI,EAAeL,IACxC7hC,MAAO,CACHi6C,OAAQ,UACRuE,gBAAiB,aAOzB,4BACID,WAA0C,QAA5BntC,EAAcC,WAAmD,YAA5BD,EAAcC,WAC5DvL,KAAK9L,MAAMwd,SAAwB,SAAZ,UAC5B2sB,GAAIqM,EAASp1C,KAAO8mC,EAAeH,IAAMyO,EAAS9xC,MAAQ,EAC1D0lC,GAAIlC,EAAeJ,IAAMI,EAAeL,IACxC/gB,EAAG,EACH9gB,MAAO,CACHi6C,OAAQ,OACRvvB,KAAM,cAUlB,uBACI1qB,MAAO,CACHiQ,QAAyC,UAA9BmB,EAAcI,aAAyD,YAA9BJ,EAAcI,aAClC,eAA5BJ,EAAcC,YACdvL,KAAK9L,MAAMwd,SAAsB,OAAV,QAC3B5Y,SAAU,WACVvD,IAAKm1C,EAASn1C,IAAM6mC,EAAeL,IAAM2O,EAAS7xC,OAAS,EAC/DvD,MAAOo1C,EAASp1C,KAAO8mC,EAAeH,KAAO,EAC7CrrB,UAAW,qCACXlb,OAAQ,EACR0c,SAAU,SACVzE,MAAO,UACP6lC,WAAY,SAGPxzC,KAAK2M,SAASrB,EAAcxB,aAQrC,uBACI5P,MAAO,CACHiQ,QAAyC,QAA9BmB,EAAcI,aAAuD,YAA9BJ,EAAcI,aAChC,aAA5BJ,EAAcC,YACdvL,KAAK9L,MAAMwd,SAAsB,OAAV,QAC3B5Y,SAAU,WACVvD,IAAKm1C,EAASn1C,IAAM6mC,EAAeL,IAAM2O,EAAS7xC,OAAS,EAC3DrD,OAAQ4mC,EAAeF,IAAMwO,EAASp1C,KAAOo1C,EAAS9xC,OAAS,EAC/DgY,UAAW,oCACXlb,OAAQ,EACR0c,SAAU,SACVzE,MAAO,UACP6lC,WAAY,SAGfxzC,KAAK2M,SAASrB,EAAcK,cAOjC,uBACIzR,MAAO,CACHiQ,QAAuC,UAA5BmB,EAAcC,WAAqD,YAA5BD,EAAcC,YAC5DvL,KAAK9L,MAAMwd,SAAsB,OAAV,QAC3B5Y,SAAU,WACVvD,KAAMm1C,EAASn1C,IAAM6mC,EAAeL,KAAO,EAC3CzmC,KAAMo1C,EAASp1C,KAAO8mC,EAAeH,IAAMyO,EAAS9xC,MAAQ,EAC5DgY,UAAW,mCACXlb,OAAQ,EACR0c,SAAU,SACVzE,MAAO,UACP6lC,WAAY,SAGfxzC,KAAK2M,SAASrB,EAAcE,YAOjC,uBACItR,MAAO,CACHiQ,QAAuC,QAA5BmB,EAAcC,WAAmD,YAA5BD,EAAcC,YAC1DvL,KAAK9L,MAAMwd,SAAsB,OAAV,QAC3B5Y,SAAU,WACVrD,QAAS2mC,EAAeJ,IAAM0O,EAASn1C,IAAMm1C,EAAS7xC,QAAU,EAChEvD,KAAMo1C,EAASp1C,KAAO8mC,EAAeH,IAAMyO,EAAS9xC,MAAQ,EAC5DgY,UAAW,kCACXlb,OAAQ,EACR0c,SAAU,SACVzE,MAAO,UACP6lC,WAAY,SAGfxzC,KAAK2M,SAASrB,EAAcG,oB,GAjTJtQ,IAAM+E,WCClCy4C,G,kDACjB,WAAYzkD,GAAQ,IAAD,8BACf,cAAMA,IASVmI,OAAS,SAAC8B,EAAM2xC,EAAgBpF,EAAUh5B,EAAUs+B,GAChD,EAAK7zC,SAAS,CAACgC,OAAMusC,WAAUh5B,WAAUs+B,kBAX1B,EAcnBD,SAAW,SAACne,GACR,EAAKz1B,SAAS,CAACy1B,YAfA,EAkBnBviB,wBAA0B,WACtB,GAAI,EAAKupC,YAAYn7C,QACjB,OAAO,EAAKm7C,YAAYn7C,QAAQ4R,2BAjBpC,EAAKlZ,MAAQ,CACTy7B,QAAQ,GAGZ,EAAKgnB,YAAcz9C,IAAM+R,YAPV,E,qDAwBf,IAAKlN,KAAK7J,MAAMy7B,OACZ,OAAO,KAEX,IAAK5xB,KAAK7J,MAAMgI,KACZ,OAAO,KALL,MAOyC6B,KAAK7J,MAA/CgI,EAPC,EAODA,KAAMusC,EAPL,EAOKA,SAAUh5B,EAPf,EAOeA,SAAUs+B,EAPzB,EAOyBA,aAC/B,OACI,qCAES7xC,EAAKhI,MAAM0tC,gBACXjc,GAAmBzpB,IACpB,kBAAC,GAAD,CACIqP,IAAKxN,KAAK44C,YACV3qB,MAAO9vB,EAAKjK,MAAMqtB,aAClBpjB,EAAKhI,MAAMsb,kBAAoBtT,EAAKG,gBAAgB,gBACnD4jC,GAAgB/jC,GACjBsT,gBAAiBtT,EAAKhI,MAAMsb,gBAC5BtT,KAAMA,EACNuT,SAAUA,EACVg5B,SAAUA,EACVsF,aAAcA,EACdp3C,MAAO8xC,EAAS9xC,MAChBC,OAAQ6xC,EAAS7xC,c,GAhDesC,IAAM+E,WCDzC24C,G,kDACjB,WAAY3kD,GAAQ,IAAD,8BACf,cAAMA,IAOVmI,OAAS,SAAC8B,EAAMoF,EAAMrH,GACbA,EAMG,EAAK/F,MAAMyQ,SAAWzI,EAAKjK,MAAM+R,IACjC,EAAK9J,SAAS,CAACgC,OAAMoF,OAAMqD,YAAQ3R,IANlCkJ,EAAKhI,MAAM63B,SAGZ,EAAK7xB,SAAS,CAACgC,OAAMoF,OAAMqD,YAAQ3R,IAFnC,EAAKkH,SAAS,CAACgC,OAAMoF,OAAMqD,OAAQzI,EAAKjK,MAAM+R,MAXvC,EAqBnB8pC,SAAW,SAACne,GACR,EAAKz1B,SAAS,CAACy1B,YAnBf,EAAKz7B,MAAQ,CACTy7B,QAAQ,GAJG,E,qDA0Bf,OAAK5xB,KAAK7J,MAAMy7B,QAGX5xB,KAAK7J,MAAMyQ,OAGZ,kBAAC,KAAD,CACIiH,MAAM,EACNhB,SAAUrU,SAAS8gB,eAAetZ,KAAK7J,MAAMyQ,QAC7C2R,UAAU,YACVre,MAAO,CACH+D,OAAQ,QACR4U,cAAe,QAEnBimC,eAAe,EACf/sB,UAAW,CACP+d,KAAM,CACF7d,SAAS,GAEbD,gBAAiB,CACbC,SAAS,GAEbE,KAAM,CACFF,SAAS,KAKbjsB,KAAK7J,MAAMyQ,OACP,yBACI4C,UAAU,6BACVG,IAAG,QACHzP,MAAO,CACHtB,MAAOoH,KAAK7J,MAAMoN,KAAOvD,KAAK7J,MAAMoN,KAAK3K,MAAQ,EACjDC,OAAQmH,KAAK7J,MAAMoN,KAAOvD,KAAK7J,MAAMoN,KAAK1K,OAAS,IAGvD,0BAAM2Q,UAAU,oBACXxJ,KAAK7J,MAAMgI,KAAKjK,MAAM6J,UAI/B,+BAzCL,S,GA5B0B5C,IAAM+E,WCG9B64C,I,yDACjB,WAAY7kD,GAAQ,IAAD,8BACf,cAAMA,IAkBV2Z,KAAO,WACH,EAAKypC,SAAU,EACfC,cAAc,EAAKC,eACnBD,cAAc,EAAKE,cACnB,EAAKA,aAAeC,aAAY,WAC5B,GAAK,EAAKr5C,QAAV,CAIA,IAAIs5C,EAAU,EAAKxhD,MAAMwhD,SAAY,EAAKzjD,MAAM0jD,MAAQ,EAAK1jD,MAAM2jD,SAAW,IAC1EF,EAAU,MACV,EAAKL,SAAU,EACfC,cAAc,EAAKE,eAEvBE,EAAUtrC,KAAKC,IAAI,IAAKqrC,GACxB,EAAKx7C,SAAS,CAACw7C,UAAS9pC,KAAmB,MAAZ8pC,SAT3BJ,cAAc,EAAKE,gBAUxB,EAAKvjD,MAAM2jD,WAnCC,EAsCnBjgC,MAAQ,WACJ,EAAKkgC,SAAU,EACfP,cAAc,EAAKC,eACnBD,cAAc,EAAKE,cACnB,EAAKD,cAAgBE,aAAY,WAC7B,GAAK,EAAKr5C,QAAV,CAIA,IAAIs5C,EAAU,EAAKxhD,MAAMwhD,SAAY,EAAKzjD,MAAM0jD,MAAQ,EAAK1jD,MAAM2jD,SAAW,IAC1EF,EAAU,IACV,EAAKG,SAAU,EACfP,cAAc,EAAKC,gBAEvBG,EAAUtrC,KAAKE,IAAI,EAAGorC,GACtB,EAAKx7C,SAAS,CAACw7C,UAAS9pC,KAAmB,IAAZ8pC,SAT3BJ,cAAc,EAAKC,iBAUxB,EAAKtjD,MAAM2jD,WAtDC,EAyDnBmB,UAAY,SAACC,GACT,EAAKC,cAAcD,IA1DJ,EA6DnBC,cAAgB,SAACD,GACb,GAAKA,EAAL,CADwB,IAInBh9C,EAAS,EAAK/H,MAAd+H,MAeL,EAAKE,SAAS,CACVg9C,SAAU,CAdI,SAAdC,EAAeC,GACf,IAAIl7C,EAAOlC,EAAMwL,QAAQ4xC,EAAWj7C,UAAUlK,MAAM+R,IACpD,MAAO,CACHmI,MAAOirC,EAAWj7C,UAAUL,QAC5Bs7C,WAAYA,EACZp5C,SAAUo5C,EAAWlmB,aAAa50B,KAAI,SAAA+6C,GAClC,OAAOF,EAAYE,MAEvBC,SAAUp7C,EAAKG,gBAAgB,sBAC/Bk7C,aAAcr7C,EAAKjK,MAAM4R,QAAU3H,EAAKjK,MAAM4R,OAAO5R,MAAM+R,IAKpDmzC,CAAYH,EAAO,SAjFnB,EAqFnBQ,QAAU,SAACN,GAAc,IAChBl9C,EAAS,EAAK/H,MAAd+H,OACY,SAAby9C,EAAcC,GACd,IAAIx7C,EAAOlC,EAAMwL,QAAQkyC,EAASN,WAAWj7C,UAAUlK,MAAM+R,IAC7D9H,EAAKyT,YAAY,qBAAsB+nC,EAASJ,UAChDI,EAAS15C,SAASO,SAAQ,SAACo5C,EAAez4C,GACtChD,EAAKq4B,eAAeojB,EAAcP,WAAWj7C,UAAUlK,MAAM+R,GAAI9E,EAAQ,MAE7EhD,EAAK6X,eACL2jC,EAAS15C,SAAS1B,KAAI,SAAAq7C,GAClBF,EAAWE,MAInBF,CAAWP,EAAS,IAEpB,EAAKh9C,SAAS,CAACg9C,cAnGf,EAAKhjD,MAAQ,CACTwhD,QAASzjD,EAAM2Z,KAAO,IAAM,EAC5BsrC,SAAU,IAGd,EAAK7B,SAAU,EACf,EAAKQ,SAAU,EARA,E,gEAYf93C,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAyFD2B,KAAK9L,MAAd+H,MACL,OACI,oCACI,yBACIuN,UAAU,aACVtP,MAAO,CACH5E,KAAK,GAAD,OAAK0K,KAAK7J,MAAMwhD,QAAU,IAA1B,KACJ9mC,QAAS7Q,KAAK7J,MAAMwhD,QAAU,KAElCtV,cAAe,SAACx/B,GACZA,EAAE4rB,kBACF5rB,EAAEggB,mBAGN,yBACIrZ,UAAU,wBAGV,yBACIA,UAAU,iCAEV,0BAAMA,UAAU,6BAAhB,UAIA,kBAAC,EAAD,CACIE,QAAS1J,KAAK4X,OAEd,yBACIthB,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,SAM7B,yBACItB,UAAU,kBADd,yB,GAhJgBrO,IAAM+E,YAgP1C64C,GAAOzoC,aAAe,CAClBzC,MAAM,EACN+pC,MAAO,IACPC,SAAU,G,WCrPOgC,G,kDACjB,WAAY3lD,GAAQ,IAAD,8BACf,cAAMA,IASV4lD,aAAe,SAAC37C,GAIZ,MAAO,CACHvF,OAJY,EAAKmhD,QAAQt8C,QACzB,EAAKs8C,QAAQt8C,QAAQke,wBAAwB/iB,MAAQ,GAAI,MAGrCuF,EAAK67C,YAAc,GAEvCnhD,OAAQ,gBAjBG,EA6BnBohD,gBAAkB,SAACz0C,EAAc3C,GAC7BA,EAAEq3C,UACF,EAAK/9C,SAAS,CAACqJ,iBAEfnN,aAAa,EAAK8hD,gBAClB,EAAKA,eAAiB/hD,YAAW,WACxB,EAAKiG,SAGN,EAAKlI,MAAMqP,eACX,EAAKtR,MAAMkmD,WAAU,GACrB,EAAKC,kBAAkB,EAAKlkD,MAAMqP,aAAc3C,MAErD,MA1CY,EA6CnBw3C,kBAAoB,SAACl8C,EAAM0E,GAAO,IAAD,EACL,EAAK3O,MAAxBg9C,EADwB,EACxBA,QACDpuB,EAFyB,EACftnB,OACY4P,OAAO2X,cAEjCoU,GAAW+Z,EAAQzzC,QAAS,CACxBM,QAASI,EAAKJ,QACd7J,MAAOD,EAAYkK,EAAKm8C,mBACzBrlD,OAAWA,OAAWA,GAAW,SAAC+T,GACjC1L,QAAQC,IAAI,YAAayL,EAAI9U,MAAMghC,MAAMxG,WACrC1lB,EAAI9U,MAAMghC,MAAMxG,UAChBl7B,OAAOwgB,uBAAsB,WACzBhL,EAAI6T,YAAYha,GAAG,MAGvBrP,OAAOwgB,uBAAsB,WACzB,EAAKumC,iBAAiBvxC,EAAK8Z,UA5DxB,EAiEnBy3B,iBAAmB,SAACvxC,EAAK8Z,GACrB,IAAIvf,EAAOyF,EAAIzG,SAAQ,GAElBugB,IAAgBA,EAAa5uB,MAAMs0B,SACpC1F,EAAe,EAAK5uB,MAAMsH,OAAOgC,cAAcC,QAAQvJ,MAAM4sB,aAAauH,kBACtE9kB,EAAKjO,KAAMiO,EAAKhO,IAAKgO,EAAK3K,MAAO2K,EAAK1K,SAG9C,IAAI0nC,EAAmB,CACnBh1B,UAAW,SACXG,YAAa,SACb5S,SAAU,WACVgR,WAAY,EACZ6B,YAAa,EACbH,UAAW,EACXC,aAAc,EACd2V,SAAU,WAGdpY,EAAI9U,MAAM0T,SAASzB,SAAS6C,EAAKA,EAAI9U,MAAM4R,OAAQgd,GAAc,SAACnc,GAC9DA,EAAQwE,iBAAiBo1B,EAAkB55B,EAAQzS,MAAMmL,kBAAkBgF,wBArFhE,EAyFnB8yB,WAAa,SAACh5B,EAAM0E,GAChB,EAAK3O,MAAMkmD,WAAU,GADC,MAEE,EAAKlmD,MAAxBg9C,EAFiB,EAEjBA,QACDpuB,EAHkB,EAERtnB,OACY4P,OAAO2X,cAEjCoU,GAAW+Z,EAAQzzC,QAAS,CACxBM,QAASI,EAAKJ,QACd7J,MAAOD,EAAYkK,EAAKm8C,mBACzBrlD,OAAWA,OAAWA,GAAW,SAAC+T,GACjCxV,OAAOwgB,uBAAsB,WACzB,EAAKumC,iBAAiBvxC,EAAK8Z,UAnGpB,EAwGnB03B,eAAiB,WACb,EAAKr+C,SAAS,CAACqJ,kBAAcvQ,KAtG7B,EAAKkB,MAAQ,GAIb,EAAK4jD,QAAU5+C,IAAM+R,YAPN,E,gEAsBflN,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAkFT,IAAD,SACgB2B,KAAK9L,MAArBumD,EADA,EACAA,SAAUx0C,EADV,EACUA,GACf,OAAKw0C,EAID,kBAAC,IAAMC,SAAP,CAAgB/wC,IAAK1D,GACjB,yBACIuD,UAAU,uBACVgE,IAAKxN,KAAK+5C,QACVpwC,IAAK1D,GAGD8nC,GAAO0M,EAAU,SAASl8C,KAAI,SAACJ,EAAMgD,GACjC,OACI,kBAAC,IAAMu5C,SAAP,CAAgB/wC,IAAKxI,GACjB,yBACIqI,UAAU,2BACVtP,MAAO,EAAK4/C,aAAa37C,GACzB4wB,YAAa,SAAClsB,GACV,EAAKo3C,gBAAgB97C,EAAM0E,IAE/B83C,UAAW,SAAC93C,GACR,EAAK23C,kBAET9wC,QAAS,SAAC7G,GACN,EAAKs0B,WAAWh5B,EAAM0E,IAE1BvM,WAAS,GAET,yBACIkT,UAAU,gCACVqB,IAAK1M,EAAKy8C,UAAY,yBACtBhiD,MAAO,OACPtC,WAAW,IAGX6H,EAAK08C,OACL,yBACIrxC,UAAU,iCAETrL,EAAK08C,cAtCnC,S,GAhHwB1/C,IAAM+E,WCE5B46C,G,kDACjB,WAAY5mD,GAAQ,IAAD,8BACf,cAAMA,IAqBV2Z,KAAO,WACH,EAAKypC,SAAU,EACfC,cAAc,EAAKC,eACnBD,cAAc,EAAKE,cACnB,EAAKt7C,SAAS,CAAE0R,MAAM,IACtB,EAAK4pC,aAAeC,aAAY,WAC5B,GAAK,EAAKr5C,QAAV,CAIA,IAAIs5C,EAAU,EAAKxhD,MAAMwhD,SAAY,EAAKzjD,MAAM0jD,MAAQ,EAAK1jD,MAAM2jD,SAAW,IAC1EF,GAAW,MACX,EAAKL,SAAU,EACfC,cAAc,EAAKE,eAEvBE,EAAUtrC,KAAKC,IAAI,IAAKqrC,GACxB,EAAKx7C,SAAS,CAACw7C,iBATXJ,cAAc,EAAKE,gBAUxB,EAAKvjD,MAAM2jD,WAvCC,EA0CnBjgC,MAAQ,SAAC5a,GACL,EAAK86C,SAAU,EACfP,cAAc,EAAKC,eACnBD,cAAc,EAAKE,cACnB,EAAKt7C,SAAS,CAAE0R,MAAM,IAClB7Q,EACA,EAAKb,SAAS,CAACw7C,QAAS,IAG5B,EAAKH,cAAgBE,aAAY,WAC7B,GAAK,EAAKr5C,QAAV,CAIA,IAAIs5C,EAAU,EAAKxhD,MAAMwhD,SAAY,EAAKzjD,MAAM0jD,MAAQ,EAAK1jD,MAAM2jD,SAAW,IAC1EF,GAAW,IACX,EAAKG,SAAU,EACfP,cAAc,EAAKC,gBAEvBG,EAAUtrC,KAAKE,IAAI,EAAGorC,GACtB,EAAKx7C,SAAS,CAACw7C,iBATXJ,cAAc,EAAKC,iBAUxB,EAAKtjD,MAAM2jD,WA/DC,EAkEnB14C,OAAS,SAACnC,GACN,IAAIg7C,GAAe,EAAK7hD,MAAM0X,KAG9B,OAFA,EAAK1X,MAAM0X,KAAO,EAAK+J,MAAM5a,GAAS,EAAK6Q,OAEpCmqC,GAtEQ,EAyEnB+C,6BAA+B/mB,KAAS,SAACgnB,GACrC,EAAKC,qBAAqBD,KAC3B,KA3EgB,EA6EnBE,0BAA4B,SAACF,GACrB,EAAK7kD,MAAMglD,yBAA2BH,GACtC,EAAK7+C,SAAS,CAACg/C,4BAAwBlmD,KA/E5B,EAmFnBgmD,qBAAuB,SAACD,GAChBA,IAAsB,EAAK7kD,MAAM6kD,mBACjCA,IAAsB,EAAK7kD,MAAMglD,wBACjC,EAAKh/C,SAAS,CAAC6+C,oBACXI,qBAAsBJ,EAAkBK,SAAWlkD,OAAOuR,OAAOsyC,EAAkBK,SAAS,GACxFlkD,OAAOuR,OAAOsyC,EAAkBK,SAAS,GAAG,QAAIpmD,KAxF7C,EA4FnBqmD,gCAAkCtnB,KAAS,SAAConB,GACxC,EAAKG,wBAAwBH,KAC9B,KA9FgB,EAgGnBI,6BAA+B,SAACJ,GACxB,EAAKjlD,MAAMslD,4BAA8BL,GACzC,EAAKj/C,SAAS,CAACs/C,+BAA2BxmD,KAlG/B,EAsGnBsmD,wBAA0B,SAACH,GACnBA,IAAyB,EAAKjlD,MAAMilD,sBACpCA,EAAqBM,WAAa,EAAKvlD,MAAM6kD,kBAAkBpkD,MAC/DwkD,IAAyB,EAAKjlD,MAAMslD,2BACpC,EAAKt/C,SAAS,CAACi/C,0BAxGnB,EAAKjlD,MAAQ,CACTwhD,QAASzjD,EAAM2Z,KAAO,IAAM,EAC5BmtC,uBAAmB/lD,EACnBmmD,0BAAsBnmD,EACtBkmD,4BAAwBlmD,EACxBwmD,+BAA2BxmD,GAG/B,EAAKqiD,SAAU,EACf,EAAKQ,SAAU,EAXA,E,gEAef93C,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BA0FT,IAKFo8C,EALC,OACA17C,EAAoBiB,KAAK9L,MAAzB6K,iBACL,OAAKA,GAIDiB,KAAK7J,MAAM6kD,mBAAqBh7C,KAAK7J,MAAM6kD,kBAAkBP,WAC7DA,EAAWz6C,KAAK7J,MAAM6kD,kBAAkBP,UACxCz6C,KAAK7J,MAAMilD,sBAAwBp7C,KAAK7J,MAAMilD,qBAAqBX,WACnEA,EAAWz6C,KAAK7J,MAAMilD,qBAAqBX,UAE1Cz6C,KAAK7J,MAAM6kD,oBACZP,OAAWxlD,GAGX,oCACI,yBACIuU,UAAU,mBACVtP,MAAO,CACH5E,KAAK,GAAD,OAAK0K,KAAK7J,MAAMwhD,QAAU,IAA1B,KACJ9mC,QAAS7Q,KAAK7J,MAAMwhD,QAAU,KAElCtV,cAAe,SAACx/B,GACZA,EAAE4rB,kBACF5rB,EAAEggB,mBAGN,yBACIrZ,UAAU,oBAGNukC,GAAO52C,OAAOuR,OAAO3J,EAAiB48C,SAAU,SAASp9C,KAAI,SAAAy8C,GACzD,IAAI9gD,EAAQ,GAGZ,OAFI8gD,IAAsB,EAAK7kD,MAAM6kD,oBACjC9gD,EAAM4W,gBAAkB,WAExB,yBACInH,IAAKqxC,EAAkBpkD,KACvB4S,UAAU,uBACV2uB,aAAc,SAACt1B,GACX,EAAK1G,SAAS,CAACg/C,uBAAwBH,IACvC,EAAKD,6BAA6BC,IAEtCnjB,YAAa,SAACh1B,GACV,EAAK1G,SAAS,CAACg/C,uBAAwBH,IACvC,EAAKD,6BAA6BC,IAEtCtxC,QAAS,SAAC7G,GACN,EAAKo4C,qBAAqBD,IAE9BhjB,WAAY,SAACn1B,GACT,EAAKq4C,0BAA0BF,IAEnC9gD,MAAOA,GAEN8gD,EAAkBpkD,SAKnC,kBAAC,GAAD,MAEIm3C,GAAO52C,OAAOuR,OAAO3J,EAAiB68C,MAAO,SAASr9C,KAAI,SAAAy8C,GACtD,IAAI9gD,EAAQ,GAGZ,OAFI8gD,IAAsB,EAAK7kD,MAAM6kD,oBACjC9gD,EAAM4W,gBAAkB,WAExB,yBACInH,IAAKqxC,EAAkBpkD,KACvB4S,UAAU,uBACV2uB,aAAc,SAACt1B,GACX,EAAK1G,SAAS,CAACg/C,uBAAwBH,IACvC,EAAKD,6BAA6BC,IAEtCnjB,YAAa,SAACh1B,GACV,EAAK1G,SAAS,CAACg/C,uBAAwBH,IACvC,EAAKD,6BAA6BC,IAEtCtxC,QAAS,SAAC7G,GACN,EAAKo4C,qBAAqBD,IAE9BhjB,WAAY,SAACn1B,GACT,EAAKq4C,0BAA0BF,IAEnC9gD,MAAOA,GAEN8gD,EAAkBpkD,UAQnCoJ,KAAK7J,MAAM6kD,mBACXh7C,KAAK7J,MAAM6kD,kBAAkBK,SAC7B,yBACI7xC,UAAU,uBAGNukC,GAAO52C,OAAOM,KAAKsH,EAAiB48C,QAAQ37C,KAAK7J,MAAM6kD,kBAAkBpkD,MAAMykD,SAAU,SACpF98C,KAAI,SAAAs9C,GACD,IAAIC,EACA/8C,EAAiB48C,QAAQ,EAAKxlD,MAAM6kD,kBAAkBpkD,MAAMykD,QAAQQ,GACxE,OACI,kBAAC,IAAMnB,SAAP,CAAgB/wC,IAAKkyC,GACjB,yBACIlyC,IAAKkyC,EACLryC,UAAU,4BAETqyC,GAGD9N,GAAO+N,EAAuB,SAASv9C,KAAI,SAAA68C,GACvC,IAAIlhD,EAAQ,GAGZ,OAFIkhD,IAAyB,EAAKjlD,MAAMilD,uBACpClhD,EAAM4W,gBAAkB,WAExB,yBACInH,IAAKyxC,EAAqBxkD,KAC1B4S,UAAU,0BACV2uB,aAAc,SAACt1B,GACX,EAAK1G,SAAS,CAACs/C,0BAA2BL,IAC1C,EAAKE,gCAAgCF,IAEzCvjB,YAAa,SAACh1B,GACV,EAAK1G,SAAS,CAACs/C,0BAA2BL,IAC1C,EAAKE,gCAAgCF,IAEzC1xC,QAAS,SAAC7G,GACN,EAAK04C,wBAAwBH,IAEjCpjB,WAAY,SAACn1B,GACT,EAAK24C,6BAA6BJ,IAEtClhD,MAAOA,GAENkhD,EAAqBxkD,cAYlE,kBAAC,GAAD,CACI6jD,SAAUA,EACVx0C,GAAIjG,KAAK7J,MAAMilD,qBAAsBp7C,KAAK7J,MAAMilD,qBAAqBxkD,KACjEoJ,KAAK7J,MAAM6kD,kBAAmBh7C,KAAK7J,MAAM6kD,kBAAkBpkD,KAAM,KACrEwjD,UAAWp6C,KAAK4X,MAChBs5B,QAASlxC,KAAK9L,MAAMg9C,QACpB11C,OAAQwE,KAAK9L,MAAMsH,YAxJxB,S,GAjHuBL,IAAM+E,WAiRhD46C,GAAaxqC,aAAe,CACxBzC,MAAM,EACN+pC,MAAO,IACPC,SAAU,G,iBCvROkE,G,kDACjB,WAAY7nD,GAAQ,IAAD,8BACf,cAAMA,IAEDiC,MAAQ,CACT0X,KAAM3Z,EAAMia,cAAe,GAJhB,E,qDAQR,IAAD,OACN,OACI,kBAAC,IAAD,CAAY3E,UAAU,gBAAgBE,QAAS,SAAC7G,GACxC,EAAK3O,MAAMsY,UACX,EAAKtY,MAAMsY,UAAU,EAAKrW,MAAM0X,MACpC,EAAK1R,SAAS,CAAC0R,MAAO,EAAK1X,MAAM0X,SAE7B,8BACK7N,KAAK9L,MAAMka,OAGhB,yBAAK5E,UAAU,2BAEPxJ,KAAK7J,MAAM0X,MACX,yBAAKvX,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,iCAGT7K,KAAK7J,MAAM0X,MACZ,yBAAKvX,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GACrCgS,IAAK,uC,GA7BK1P,IAAM+E,W,+ECG5B87C,G,kDAGjB,WAAY9nD,GAAQ,IAAD,8BACf,cAAMA,IAMV+nD,SAAW,SAACp5C,GACR,EAAKq5C,YAAcr5C,EAAE4J,OAAO1M,OARb,EAWnBo8C,OAAS,WAAO,IACPpgD,EAAY,EAAK7H,MAAjB6H,SAED,EAAKmgD,cAAgBngD,EAAS7H,MAAMkoD,UAGnC,EAAKF,cAKVngD,EAAS7H,MAAMkoD,SAAW,EAAKF,YAC/B,EAAKA,iBAAcjnD,EAEnB,EAAKiO,QAAQ7G,WAzBE,EA4BnBggD,cAAgB,WAAO,IACdtgD,EAAY,EAAK7H,MAAjB6H,SACDgB,EAAW,EAAKmG,QAAQnG,SAExBu/C,EAAOnlD,OAAOuR,OAAO3L,EAASE,UAAU6D,MAAK,SAAAsD,GAAM,OAAOA,EAAElQ,MAAMqoD,UAElED,UACOA,EAAKpoD,MAAMqoD,OACtBxgD,EAAS7H,MAAMqoD,QAAS,EAExB,EAAKr5C,QAAQ7G,UAnCb,EAAKlG,MAAQ,GAHE,E,qDAyCR,IAAD,OACD4F,EAAYiE,KAAK9L,MAAjB6H,SACL,OACI,yBAAKyN,UAAU,2BACX,yBAAKA,UAAU,eACX,0BAAMA,UAAU,oBAAhB,2CAGA,2BACIoF,aAAc7S,EAAS7H,MAAMkoD,SAC7B5yC,UAAU,uDACV7O,KAAK,OACL6R,SAAUxM,KAAKi8C,SACfO,OAAQx8C,KAAKm8C,OACbM,WAAY,SAAC55C,GACqB,MAA1BA,EAAE6f,SAAW7f,EAAE4f,QACf,EAAK05B,aAOrB,yBAAK3yC,UAAU,eACX,0BAAMA,UAAU,oBACZ,kBAAC,GAAD,CACIlT,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,wBACL3Q,MAAO,CACHsR,UAAW,EACXG,YAAa,MAIjB5P,EAAS7H,MAAMqoD,QACf,+BAGCxgD,EAAS7H,MAAMqoD,QAChB,mCAGCxgD,EAAS7H,MAAMqoD,QAChB,kBAAC,KAAD,CAAQ/yC,UAAU,yBAAyBkzC,QAAQ,YAC/ChzC,QAAS1J,KAAKq8C,eADlB,2B,GAzFUlhD,IAAM+E,WAAvB87C,GACVnhC,YAAc3f,E,mECOVyhD,GAZEnsC,MAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACFpG,QAAS,EACT,UAAW,CACPwG,gBAAiB,gBAGzBI,QAAS,CACLvD,MAAO,cARE6C,CAUbosC,M,qBCAiBC,G,kDAGjB,WAAY3oD,GAAQ,IAAD,8BACf,cAAMA,IAMV4oD,iBAAmB,SAACniD,GAAD,OAAU,SAACkI,GACT,EAAK3O,MAAjB6H,SACI7H,MAAM6oD,YAAYC,YAAYriD,KAAOA,EAE9C,EAAKuI,QAAQ7G,WAXE,EAcnB4gD,cAAgB,SAACp6C,GACI,EAAK3O,MAAjB6H,SACI7H,MAAM6oD,YAAYC,YAAYE,SAAWr6C,EAAE4J,OAAO1M,MAE3D,EAAKmD,QAAQ7G,UAlBE,EAqBnB8gD,mBAAqB,SAACt6C,GACD,EAAK3O,MAAjB6H,SACI7H,MAAM6oD,YAAYC,YAAYI,WAAav6C,EAAE4J,OAAO1M,MAE7D,EAAKmD,QAAQ7G,UAzBE,EA4BnBghD,aAAe,SAACnsC,EAASosC,GAAU,IAC1BvhD,EAAY,EAAK7H,MAAjB6H,SACL,GAAImV,EACInV,EAAS7H,MAAM6oD,YAAYC,YAAYO,YAAYn8C,WAAU,SAAA4Z,GAAC,OAAIA,IAAMsiC,KAAQ,GAChFvhD,EAAS7H,MAAM6oD,YAAYC,YAAYO,YAAYt8C,KAAKq8C,QAE5D,GAAIvhD,EAAS7H,MAAM6oD,YAAYC,YAAYO,YAAYn8C,WAAU,SAAA4Z,GAAC,OAAIA,IAAMsiC,MAAS,EAAG,CACpF,IAAIn8C,EAAQpF,EAAS7H,MAAM6oD,YAAYC,YAAYO,YAAYn8C,WAAU,SAAA4Z,GAAC,OAAIA,IAAMsiC,KACpFvhD,EAAS7H,MAAM6oD,YAAYC,YAAYO,YAAYl8C,OAAOF,EAAO,GAIzE,EAAK+B,QAAQ7G,UArCb,EAAKlG,MAAQ,GAHE,E,qDA2CR,IAAD,OACD4F,EAAYiE,KAAK9L,MAAjB6H,SACDgB,EAAWiD,KAAKkD,QAAQnG,SAC5B,OACI,yBAAKyM,UAAU,2BACX,yBAAKA,UAAU,eACX,0BAAMA,UAAU,oBAAhB,2BAIA,kBAAC,GAAD,KACI,yBAAKA,UAAS,0BACsC,aAAhDzN,EAAS7H,MAAM6oD,YAAYC,YAAYriD,KACnC,0BAA2B,IAC9B+O,QAAS1J,KAAK88C,iBAAiB,aAEhC,kBAAC,GAAD,CACItzC,UAAU,uBACVlT,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,2BAGT,0BAAMrB,UAAU,wBAAhB,aAIJ,yBAAKA,UAAS,0BACsC,oBAAhDzN,EAAS7H,MAAM6oD,YAAYC,YAAYriD,KACnC,0BAA2B,IAC9B+O,QAAS1J,KAAK88C,iBAAiB,oBAEhC,kBAAC,GAAD,CACItzC,UAAU,uBACVlT,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,8BAGT,0BAAMrB,UAAU,wBAAhB,oBAIJ,yBAAKA,UAAS,0BACsC,gBAAhDzN,EAAS7H,MAAM6oD,YAAYC,YAAYriD,KACnC,0BAA2B,IAC9B+O,QAAS1J,KAAK88C,iBAAiB,gBAEhC,kBAAC,GAAD,CACItzC,UAAU,uBACVlT,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,2BAGT,0BAAMrB,UAAU,wBAAhB,iBAMR,0BAAMA,UAAU,0BAEwC,aAAhDzN,EAAS7H,MAAM6oD,YAAYC,YAAYriD,MACvC,6BAGgD,oBAAhDoB,EAAS7H,MAAM6oD,YAAYC,YAAYriD,MACvC,6CAGgD,gBAAhDoB,EAAS7H,MAAM6oD,YAAYC,YAAYriD,MACvC,8CAMwC,oBAAhDoB,EAAS7H,MAAM6oD,YAAYC,YAAYriD,MACvC,yBAAK6O,UAAU,eACX,0BAAMA,UAAU,oBAAhB,+BAIA,2BACIoF,aAAc7S,EAAS7H,MAAM6oD,YAAYC,YAAYE,SACrD1zC,UAAU,uDACV7O,KAAK,OACL6R,SAAUxM,KAAKi9C,iBAOyB,gBAAhDlhD,EAAS7H,MAAM6oD,YAAYC,YAAYriD,MACvC,yBAAK6O,UAAU,eACX,0BAAMA,UAAU,oBAAhB,sCAIA,kBAAC,KAAD,CAAYA,UAAU,wBACVzJ,MAAOhE,EAAS7H,MAAM6oD,YAAYC,YAAYI,WAC9C5wC,SAAUxM,KAAKm9C,oBAEvB,kBAAC,KAAD,CACIp9C,MAAM,MAAMy9C,QAAS,kBAAC,GAAD,CAAU7vC,MAAM,YACrCktC,MAAO,0BAAMrxC,UAAU,wBAAhB,iBAIX,kBAAC,KAAD,CACIA,UAAU,uBACVzJ,MAAM,OAAOy9C,QAAS,kBAAC,GAAD,CAAU7vC,MAAM,YACtCktC,MAAO,0BAAMrxC,UAAU,wBAAhB,4BAIX,kBAAC,KAAD,CACIU,UAAQ,EACRV,UAAU,uBACVzJ,MAAM,MAAMy9C,QAAS,kBAAC,GAAD,CAAU7vC,MAAM,YACrCktC,MAAO,0BAAMrxC,UAAU,wBAAhB,uBAO2C,SAAtDzN,EAAS7H,MAAM6oD,YAAYC,YAAYI,YACvC,yBAAK5zC,UAAU,eACX,0BAAMA,UAAU,oBAAhB,iCAIA,yBAAKA,UAAU,2DACXE,QAAS,SAAC7G,GACN,EAAK1G,SAAS,CAACshD,WAAY56C,EAAE4J,WAI7B1Q,EAAS7H,MAAM6oD,YAAYC,YAAYO,YAAYh/C,KAAI,SAAA++C,GACnD,OAAOA,KACR39B,KAAK,OAOpB3f,KAAK7J,MAAMsnD,YACX,kBAAC,IAAD,CACIvjD,MAAO,CACH+D,OAAQ,aAEZ4O,SAAU7M,KAAK7J,MAAMsnD,WACrB5vC,UAAgC5Y,IAA1B+K,KAAK7J,MAAMsnD,WACjB3vC,QAAS,SAACjL,GACN,EAAK1G,SAAS,CAACshD,gBAAYxoD,KAE/B8Y,cAAe,CACX7T,MAAO,CACHoQ,QAAS,KAIjB,kBAAC,IAAD,CAAU0D,OAAK,EAAC9D,UAAQ,EAAChQ,MAAO,CAC5B2W,QAAS,IAET,0BAAMrH,UAAU,yBAAhB,iBAMAzM,EAAS2gD,QAAQC,OAAOC,QAAQC,MAAMt/C,KAAI,SAAA++C,GACtC,OACI,kBAAC,IAAD,CAAUtvC,OAAK,EAACtE,QAAS,SAAC7G,GACtB,EAAKw6C,eAAethD,EAAS7H,MAAM6oD,YAAYC,YAAYO,YACtDn8C,WAAU,SAAA4Z,GAAC,OAAIA,IAAMsiC,MAAS,GAAIA,IAEjC3zC,IAAK2zC,EACLpjD,MAAO,CACH8yB,WAAY,EACZE,cAAe,IAGzB,kBAAC,KAAD,CACI3pB,KAAM,QACN2N,QACInV,EAAS7H,MAAM6oD,YAAYC,YAAYO,YAClCn8C,WAAU,SAAA4Z,GAAC,OAAIA,IAAMsiC,MAAS,EAEvC9wC,SAAU,SAAC3J,GACP,EAAKw6C,aAAax6C,EAAE4J,OAAOyE,QAASosC,IAExC3vC,MAAM,YAEV,0BAAMnE,UAAU,mBACX8zC,OAOrB,kBAAC,IAAD,CAAUtvC,OAAK,EAACtE,QAAS,SAAC7G,GAEtBvF,QAAQC,IAAI,UAGZ,0BAAMiM,UAAU,sBAAhB,kBAQ8C,QAAtDzN,EAAS7H,MAAM6oD,YAAYC,YAAYI,YACvC,yBAAK5zC,UAAU,eACX,0BAAMA,UAAU,oBAAhB,sB,GA9QSrO,IAAM+E,WAA1B28C,GACVhiC,YAAc3f,E,ICRJ4iD,G,kDAGjB,WAAY5pD,GAAQ,IAAD,8BACf,cAAMA,IAMV6pD,mBAAqB,SAACp6C,GAAD,OAAW,SAACd,EAAG9C,GAAW,IACtChE,EAAY,EAAK7H,MAAjB6H,SAIL,GAFAgE,EAAQA,GAAS8C,EAAE4J,OAAO1M,MAC1BzC,QAAQC,IAAI,qBAAsBwC,EAAO4D,GAC3B,WAAVA,EAAoB,CACpB,IAAK,EAAKq6C,UACN,OAEJj+C,EAAQ,EAAKi+C,UAAUnkD,QAAQ,OAAQ,IAAIE,cAC3C,IAAIgD,EAAW,EAAKmG,QAAQnG,SAE5B,GADW5F,OAAOuR,OAAO3L,EAASE,UAAU6D,MAAK,SAAAsD,GAAC,OAAIA,EAAElQ,MAAM6oD,YAAYkB,UAAUC,SAAWn+C,KAK3F,OAHAzC,QAAQC,IAAI,uBACZ,EAAKpB,SAAS,CAACgiD,aAAa,gBACrB,EAAKH,iBAIT,EAAKA,UAGhBjiD,EAAS7H,MAAM6oD,YAAYkB,UAAUt6C,GAAS5D,EAE9C,EAAKmD,QAAQ7G,WA5Bb,EAAKlG,MAAQ,GAHE,E,qDAkCR,IAAD,OACD4F,EAAYiE,KAAK9L,MAAjB6H,SACDgB,EAAWiD,KAAKkD,QAAQnG,SAC5B,OACI,yBAAKyM,UAAU,2BACX,yBAAKA,UAAU,eACX,0BAAMA,UAAU,oBAAhB,4BAIA,yBAAKA,UAAU,wBACX,0BAAMA,UAAU,yBAERzN,EAAS7H,MAAM6oD,YAAYkB,UAAUG,WACjCriD,EAAS7H,MAAMkoD,UAG3B,0BAAM5yC,UAAU,uBAERzM,EAAS6gD,QAAQS,SACbtiD,EAAS7H,MAAM6oD,YAAYkB,UAAUC,QACrCniD,EAAS7H,MAAMkoD,SAASriD,gBAIpC,0BAAMyP,UAAU,wBAERzN,EAAS7H,MAAM6oD,YAAYkB,UAAUK,mBAMrD,yBAAK90C,UAAU,eACX,0BAAMA,UAAU,oBAAhB,yCAIA,2BACIoF,aAAc7S,EAAS7H,MAAM6oD,YAAYkB,UAAUC,QAAUniD,EAAS7H,MAAMkoD,SAASriD,cACrFyP,UAAS,oEACLxJ,KAAK7J,MAAMgoD,YAAa,yBAA0B,IAEtDxjD,KAAK,OACL6R,SAAU,SAAC3J,GACP,EAAKm7C,UAAYn7C,EAAE4J,OAAO1M,MAC1B,EAAK5D,SAAS,CAACgiD,iBAAalpD,KAEhCunD,OAAQx8C,KAAK+9C,mBAAmB,UAChCtB,WAAY,SAAC55C,GACqB,MAA1BA,EAAE6f,SAAW7f,EAAE4f,QACf,EAAKs7B,mBAAmB,SAAxB,CAAkCl7C,OAOlD,yBAAK2G,UAAU,eACX,0BAAMA,UAAU,oBAAhB,+DAIA,2BACIoF,aAAc7S,EAAS7H,MAAM6oD,YAAYkB,UAAUG,WAAariD,EAAS7H,MAAMkoD,SAC/E5yC,UAAU,4DACV7O,KAAK,OACL6R,SAAU,SAAC3J,GACP,EAAK07C,aAAe17C,EAAE4J,OAAO1M,OAEjCy8C,OAAQ,SAAC35C,GACL,EAAKk7C,mBAAmB,YAAxB,CAAqCl7C,EAAG,EAAK07C,eAEjD9B,WAAY,SAAC55C,GACqB,MAA1BA,EAAE6f,SAAW7f,EAAE4f,QACf,EAAKs7B,mBAAmB,YAAxB,CAAqCl7C,EAAG,EAAK07C,kBAO7D,yBAAK/0C,UAAU,eACX,0BAAMA,UAAU,oBAAhB,4CAIA,8BACIoF,aAAc7S,EAAS7H,MAAM6oD,YAAYkB,UAAUK,gBACnD90C,UAAU,4DACVtP,MAAO,CACHskD,OAAQ,OACRvuC,UAAW,KAEfzD,SAAU,SAAC3J,GACP,EAAK47C,mBAAqB57C,EAAE4J,OAAO1M,OAEvCy8C,OAAQ,SAAC35C,GACL,EAAKk7C,mBAAmB,kBAAxB,CAA2Cl7C,EAAG,EAAK47C,qBAEvDhC,WAAY,SAAC55C,GACqB,MAA1BA,EAAE6f,SAAW7f,EAAE4f,QACf,EAAKs7B,mBAAmB,kBAAxB,CAA2Cl7C,EAAG,EAAK47C,qBAG3DC,KAAM,KAKd,yBAAKl1C,UAAU,eACX,0BAAMA,UAAU,oBAAhB,oCAIA,kBAAC,KAAD,CACIA,UAAU,wBACV0H,QACoD,aAAhDnV,EAAS7H,MAAM6oD,YAAYC,YAAYriD,MACvCoB,EAAS7H,MAAM6oD,YAAYkB,UAAUU,aAEzCz0C,SAA0D,aAAhDnO,EAAS7H,MAAM6oD,YAAYC,YAAYriD,KACjD6R,SAAU,SAAC3J,GACP,IAAIqO,EAAUrO,EAAE4J,OAAOyE,QACvB,EAAK6sC,mBAAmB,eAAxB,CAAwCl7C,EAAGqO,OAMH,aAAhDnV,EAAS7H,MAAM6oD,YAAYC,YAAYriD,MACvC,yBAAK6O,UAAU,eACX,0BAAMA,UAAU,oBAAhB,sJ,GAzKerO,IAAM+E,WAAxB49C,GACVjjC,YAAc3f,E,ICAJ0jD,G,kDAGjB,WAAY1qD,GAAQ,IAAD,8BACf,cAAMA,IAMV2qD,2BAA6B,SAACl7C,GAAD,OAAW,SAACd,EAAG9C,GAAW,IAC9ChE,EAAY,EAAK7H,MAAjB6H,SAELgE,EAAQA,GAAS8C,EAAE4J,OAAO1M,MAC1BhE,EAAS7H,MAAM6oD,YAAY+B,YAAYn7C,GAAS5D,EAEhD,EAAKmD,QAAQ7G,WAVb,EAAKlG,MAAQ,GAHE,E,qDAgBR,IAAD,OACD4F,EAAYiE,KAAK9L,MAAjB6H,SACDgB,EAAWiD,KAAKkD,QAAQnG,SAC5B,OACI,yBAAKyM,UAAU,2BACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,oBAAf,wBAGA,0BAAMA,UAAU,oBAAhB,uHAIJ,yBAAKA,UAAU,eACX,0BAAMA,UAAU,oBAAhB,qBAIA,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,qBACX,0BAAMA,UAAU,6BAERzN,EAAS7H,MAAM6oD,YAAY+B,YAAYlE,UACvC,kBAAC,GAAD,CACIpxC,UAAU,qBACVqB,IAAK9O,EAAS7H,MAAM6oD,YAAY+B,YAAYlE,WAIpD,kBAAC,KAAD,CACIpxC,UAAU,4BADd,8BAMJ,yBAAKA,UAAU,0BACX,0BAAMA,UAAU,oBAERzM,EAAS6gD,QAAQS,QAAQU,UAAU,EAAGhiD,EAAS6gD,QAAQS,QAAQW,YAAY,MACtEnlD,QAAQ,gBAAiB,KAItC,0BAAM2P,UAAU,sBAERzN,EAAS7H,MAAM6oD,YAAY+B,YAAY1wC,OACvCrS,EAAS7H,MAAM6oD,YAAYkB,UAAUG,WAG7C,0BAAM50C,UAAU,4BAERzN,EAAS7H,MAAM6oD,YAAY+B,YAAYG,aACvCljD,EAAS7H,MAAM6oD,YAAYkB,UAAUK,qBAQ7D,yBAAK90C,UAAU,eACX,0BAAMA,UAAU,oBAAhB,+CAIA,2BACIoF,aAAc7S,EAAS7H,MAAM6oD,YAAY+B,YAAY1wC,OACjDrS,EAAS7H,MAAM6oD,YAAYkB,UAAUG,WAAariD,EAAS7H,MAAMkoD,SACrE5yC,UAAU,4DACV7O,KAAK,OACL6R,SAAU,SAAC3J,GACP,EAAKq8C,SAAWr8C,EAAE4J,OAAO1M,OAE7By8C,OAAQ,SAAC35C,GACL,EAAKg8C,2BAA2B,QAAhC,CAAyCh8C,EAAG,EAAKq8C,WAErDzC,WAAY,SAAC55C,GACqB,MAA1BA,EAAE6f,SAAW7f,EAAE4f,QACf,EAAKo8B,2BAA2B,QAAhC,CAAyCh8C,EAAG,EAAKq8C,cAOjE,yBAAK11C,UAAU,eACX,0BAAMA,UAAU,oBAAhB,4CAIA,8BACIoF,aAAc7S,EAAS7H,MAAM6oD,YAAY+B,YAAYG,aACjDljD,EAAS7H,MAAM6oD,YAAYkB,UAAUK,gBACzC90C,UAAU,4DACVtP,MAAO,CACHskD,OAAQ,OACRvuC,UAAW,KAEfzD,SAAU,SAAC3J,GACP,EAAKs8C,eAAiBt8C,EAAE4J,OAAO1M,OAEnCy8C,OAAQ,SAAC35C,GACL,EAAKg8C,2BAA2B,cAAhC,CAA+Ch8C,EAAG,EAAKs8C,iBAE3D1C,WAAY,SAAC55C,GACqB,MAA1BA,EAAE6f,SAAW7f,EAAE4f,QACf,EAAKo8B,2BAA2B,cAAhC,CAA+Ch8C,EAAG,EAAKs8C,iBAG/DT,KAAM,U,GAhIWvjD,IAAM+E,WAA1B0+C,GACV/jC,YAAc3f,E,ICIJkkD,G,kDACjB,WAAYlrD,GAAQ,IAAD,8BACf,cAAMA,IAOVmrD,YAAc,SAACx8C,EAAGy8C,GACd,EAAKnjD,SAAS,CAACmjD,cANf,EAAKnpD,MAAQ,CACTmpD,SAAU,aAJC,E,qDAYR,IACFvjD,EAAYiE,KAAK9L,MAAjB6H,SACL,OACI,kBAACwjD,GAAA,EAAD,CACI1xC,KAAM7N,KAAK9L,MAAM2Z,KACjBC,QAAS9N,KAAK9L,MAAM4Z,QACpB0xC,kBAAgB,qBAChBC,mBAAiB,2BACjBj2C,UAAU,mBACVk2C,sBAAoB,GAEpB,yBAAKl2C,UAAU,mBAEX,yBAAKA,UAAU,qBACX,yBACIA,UAAU,8BAEV,0BAAMA,UAAU,0BAAhB,iBACmBzN,EAAS7H,MAAMkoD,SADlC,KAIA,kBAAC,EAAD,CACI1yC,QAAS1J,KAAK9L,MAAM4Z,SAEpB,yBACIxX,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,SAM7B,kBAAC,KAAD,CACItB,UAAU,oBACVzJ,MAAOC,KAAK7J,MAAMmpD,SAClBK,eAAe,UACfC,UAAU,UACVpzC,SAAUxM,KAAKq/C,YACfx1C,aAAW,yBAEX,kBAAC,KAAD,CAAKgxC,MAAM,YAAY96C,MAAM,YAAYyJ,UAAU,mBACnD,kBAAC,KAAD,CAAKqxC,MAAM,cAAc96C,MAAM,cAAcyJ,UAAU,mBACvD,kBAAC,KAAD,CAAKqxC,MAAM,eAAe96C,MAAM,eAAeyJ,UAAU,mBACzD,kBAAC,KAAD,CAAKqxC,MAAM,eAAe96C,MAAM,eAAeyJ,UAAU,mBACzD,kBAAC,KAAD,CAAKqxC,MAAM,eAAe96C,MAAM,eAAeyJ,UAAU,oBAKjC,cAAxBxJ,KAAK7J,MAAMmpD,UACX,kBAAC,GAAD,CACIvjD,SAAUA,IAKU,gBAAxBiE,KAAK7J,MAAMmpD,UACX,kBAAC,GAAD,CACIvjD,SAAUA,IAKU,iBAAxBiE,KAAK7J,MAAMmpD,UACX,kBAAC,GAAD,CACIvjD,SAAUA,IAKU,iBAAxBiE,KAAK7J,MAAMmpD,UACX,kBAAC,GAAD,CACIvjD,SAAUA,IAKU,iBAAxBiE,KAAK7J,MAAMmpD,UACX,yBAAKplD,MAAO,CACRrB,OAAQ,OACRsR,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBgI,SAAU,GACVohC,WAAY,SANhB,qB,GA7FiBr4C,IAAM+E,WCA1B2/C,G,kDAGjB,WAAY3rD,GAAQ,IAAD,8BACf,cAAMA,IASV44C,UAAY,WAAM,MAEW,EAAK54C,MAAzB6H,EAFS,EAETA,SAAUP,EAFD,EAECA,OAEX8Z,EAAO,UAAMvZ,EAAS7H,MAAMkoD,SAArB,UACPtnB,EAAQqW,cAEZ,EAAKjoC,QAAQnG,SAASE,SAAS63B,GAAS7gC,EAAY8H,GACpD,EAAKmH,QAAQnG,SAASE,SAAS63B,GAAO5gC,MAAMkoD,SAAW9mC,EACvD,EAAKpS,QAAQnG,SAASE,SAAS63B,GAAO5gC,MAAMkI,OAAS04B,SAC9C,EAAK5xB,QAAQnG,SAASE,SAAS63B,GAAO5gC,MAAMqoD,OAEnD,EAAKpgD,SAAS,CAAC2jD,sBAAkB7qD,IACjCuG,EAAOW,SAAS,CAACG,QAAQ,KAvBV,EA0BnB26B,OAAS,WAAM,MAEc,EAAK/iC,MAAzB6H,EAFM,EAENA,SAAUP,EAFJ,EAEIA,cAER,EAAK0H,QAAQnG,SAASE,SAASlB,EAAS7H,MAAMkI,QAErD,EAAKD,SAAS,CAAC2jD,sBAAkB7qD,IACjCuG,EAAOukD,aAAa5oD,OAAOM,KAAK,EAAKyL,QAAQnG,SAASE,UAAU,IAAI,IAjCrD,EAoCnB+iD,UAAY,WAAO,IAAD,EACW,EAAK9rD,MAAzB6H,EADS,EACTA,SAAUP,EADD,EACCA,OACX8gD,EAAOnlD,OAAOuR,OAAO,EAAKxF,QAAQnG,SAASE,UAAU6D,MAAK,SAAAsD,GAAM,OAAOA,EAAElQ,MAAMqoD,UAE/ED,UACOA,EAAKpoD,MAAMqoD,OACtBxgD,EAAS7H,MAAMqoD,QAAS,EAExB,EAAKpgD,SAAS,CAAC2jD,sBAAkB7qD,IACjCuG,EAAOW,SAAS,CAACG,QAAQ,KA7CV,EAgDnBshD,QAAU,SAAChsB,GACP,EAAKz1B,SAAS,CAACyhD,QAAShsB,EAAQkuB,sBAAkB7qD,KAjDnC,EAoDnBknD,OAAS,SAACvqB,GAMN,GALA,EAAKz1B,SAAS,CAACggD,OAAQvqB,EAAQkuB,sBAAkB7qD,IAAY,WACrD28B,GACA,EAAKquB,YAAYxiD,QAAQyiD,YAG5BtuB,EAAQ,CAAC,IAAD,EACgB,EAAK19B,MAAzB6H,EADI,EACJA,SAAUP,EADN,EACMA,OAEf,GAAI,EAAK0gD,cAAgBngD,EAAS7H,MAAMkoD,SACpC,OAEJ,IAAK,EAAKF,YAEN,OAGJngD,EAAS7H,MAAMkoD,SAAW,EAAKF,YAC/B,EAAKA,iBAAcjnD,EAEnBuG,EAAOW,SAAS,CAACG,QAAQ,MAxEd,EA4EnB2/C,SAAW,SAACp5C,GACR,EAAKq5C,YAAcr5C,EAAE4J,OAAO1M,OA1E5B,EAAK5J,MAAQ,CACT2pD,sBAAkB7qD,GAGtB,EAAKgrD,YAAc9kD,IAAM+R,YAPV,E,qDAgFR,IAAD,SAC4BlN,KAAK9L,MAAlC6H,EADC,EACDA,SAAU2N,EADT,EACSA,QAASlO,EADlB,EACkBA,OACpB2kD,EAAa/yC,IACb,2BACApN,KAAKkD,QAAQnH,WAAaA,GAAY,oCAE1C,OACI,yBAAKyN,UAAW22C,EAAYx2C,IAAK5N,EAAS7H,MAAMkI,SAGvC4D,KAAK7J,MAAMgmD,QACZ,0BAAM3yC,UAAU,8BACXzN,EAAS7H,MAAMkoD,UAIxB,yBAAK5yC,UAAU,6BAA6BE,QAASA,IAKjD1J,KAAK7J,MAAMgmD,QACX,2BACI3uC,IAAKxN,KAAKigD,YACVrxC,aAAc7S,EAAS7H,MAAMkoD,SAC7B5yC,UAAU,qCACV7O,KAAK,OACL6R,SAAUxM,KAAKi8C,SACfO,OAAQ,SAAC35C,GAAD,OAAO,EAAKs5C,QAAO,IAC3BM,WAAY,SAAC55C,GACqB,MAA1BA,EAAE6f,SAAW7f,EAAE4f,QACf,EAAK05B,QAAO,IAGpBzyC,QAAS,SAAC7G,GACNA,EAAE4rB,kBACF5rB,EAAEggB,oBAQV9mB,EAAS7H,MAAMqoD,QACf,kBAAC,EAAD,CACI/yC,UAAU,8BACVE,QAAS,SAAC7G,KAGVqH,UAAQ,GAER,kBAAC,GAAD,CACIW,IAAK,uBACLjS,MAAO,GACPC,OAAQ,MAKpB,kBAAC,EAAD,CACI2Q,UAAU,8BACVE,QAAS,SAAC7G,GACNA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK1mB,SAAS,CAAC2jD,iBAAkBj9C,EAAE4J,WAGvC,kBAAC,GAAD,CACI5B,IAAK,6BACLjS,MAAO,GACPC,OAAQ,MAKZmH,KAAK7J,MAAM2pD,kBACX,kBAAC,IAAD,CACI5lD,MAAO,CACH+D,OAAQ,aAEZ4O,SAAU7M,KAAK7J,MAAM2pD,iBACrBjyC,UAAsC5Y,IAAhC+K,KAAK7J,MAAM2pD,iBACjBhyC,QAAS,SAACjL,GACNA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK1mB,SAAS,CAAC2jD,sBAAkB7qD,KAErC8Y,cAAe,CACX7T,MAAO,CACHoQ,QAAS,KAIjB,kBAAC,IAAD,CAAU0D,OAAK,EAACtE,QAAS,SAAC7G,GACtBA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK+6B,SAAQ,KAHjB,WAQA,kBAAC,IAAD,CAAU5vC,OAAK,EAACtE,QAAS,SAAC7G,GACtBA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAKs5B,QAAO,KAHhB,UAOA,kBAAC,IAAD,CAAUnuC,OAAK,EAACtE,QAAS,SAAC7G,GACtBA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAKiqB,WAAU,KAHnB,cASK/wC,EAAS7H,MAAMqoD,QAChB,kBAAC,IAAD,CAAUvuC,OAAK,EAACtE,QAAS,SAAC7G,GACtBA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAKoU,WAHT,WAUCl7B,EAAS7H,MAAMqoD,SAAWxgD,EAAS7H,MAAMksD,WAC1C,kBAAC,IAAD,CAAUpyC,OAAK,EAACtE,QAAS,SAAC7G,GACtBA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAKm9B,cAHT,oBASJ,kBAAC,IAAD,CAAUhyC,OAAK,EAACtE,QAAS,SAAC7G,GACtBA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK1mB,SAAS,CAAC2jD,sBAAkB7qD,IACjCyU,MAJJ,cAYJ1J,KAAK7J,MAAMynD,SACX,kBAAC,GAAD,CACI/vC,UAA6B5Y,IAAvB+K,KAAK7J,MAAMynD,QACjB9vC,QAAS,kBAAM,EAAK3R,SAAS,CAACyhD,aAAS3oD,KACvC8G,SAAUA,EACVP,OAAQA,S,GA/OML,IAAM+E,WAAvB2/C,GACVhlC,YAAc3f,E,WCVJmlD,G,uKAEb,OACI,yBAAK72C,UAAU,4BACX,0BAAMA,UAAU,6BACXxJ,KAAK9L,MAAMka,OAGhB,0BAAM5E,UAAU,4BACXxJ,KAAK9L,MAAM+qD,aAGhB,0BAAMz1C,UAAU,2BAAhB,Y,GAZkCrO,IAAM+E,WCGnCogD,G,4MACjBC,cAAgB,WACZ,EAAKrsD,MAAM4Z,UACX,EAAK5Z,MAAMssD,mB,EAGfC,eAAiB,WACb,EAAKvsD,MAAM4Z,UACX,EAAK5Z,MAAMwsD,oB,uDAGJ,IAAD,OACN,OACI,kBAAC,IAAD,CACIxmD,MAAO,CACH+D,OAAQ,aAEZ4O,SAAU7M,KAAK9L,MAAM2Y,SACrBgB,KAAM7N,KAAK9L,MAAM2Z,KACjBC,QAAS,SAACjL,GACN,EAAK3O,MAAM4Z,WAEfC,cAAe,CACX7T,MAAO,CACHoQ,QAAS,KAIjB,kBAAC,IAAD,CAAU0D,OAAK,EAACtE,QAAS,SAAC7G,GACtB,EAAK09C,kBAGL,kBAAC,GAAD,CACInyC,MAAO,OACP6wC,YAAa,+BAGrB,kBAAC,IAAD,CAAUjxC,OAAK,EAACtE,QAAS,SAAC7G,GACtB,EAAK49C,mBAEL,kBAAC,GAAD,CACIryC,MAAO,eACP6wC,YAAa,2D,GA1CS9jD,IAAM+E,WCK/BygD,G,kDAGjB,WAAYzsD,GAAQ,IAAD,8BACf,cAAMA,IAqBV2Z,KAAO,WACH,EAAKypC,SAAU,EACfC,cAAc,EAAKC,eACnBD,cAAc,EAAKE,cACnB,EAAKt7C,SAAS,CAAE0R,MAAM,IACtB,EAAK4pC,aAAeC,aAAY,WAC5B,GAAK,EAAKr5C,QAAV,CAIA,IAAIs5C,EAAU,EAAKxhD,MAAMwhD,SAAY,EAAKzjD,MAAM0jD,MAAQ,EAAK1jD,MAAM2jD,SAAW,IAC1EF,GAAW,MACX,EAAKL,SAAU,EACfC,cAAc,EAAKE,eAEvBE,EAAUtrC,KAAKC,IAAI,IAAKqrC,GACxB,EAAKx7C,SAAS,CAACw7C,iBATXJ,cAAc,EAAKE,gBAUxB,EAAKvjD,MAAM2jD,WAvCC,EA0CnBjgC,MAAQ,SAAC5a,GACL,EAAK86C,SAAU,EACfP,cAAc,EAAKC,eACnBD,cAAc,EAAKE,cACnB,EAAKt7C,SAAS,CAAE0R,MAAM,IAClB7Q,EACA,EAAKb,SAAS,CAACw7C,QAAS,IAG5B,EAAKH,cAAgBE,aAAY,WAC7B,GAAK,EAAKr5C,QAAV,CAIA,IAAIs5C,EAAU,EAAKxhD,MAAMwhD,SAAY,EAAKzjD,MAAM0jD,MAAQ,EAAK1jD,MAAM2jD,SAAW,IAC1EF,GAAW,IACX,EAAKG,SAAU,EACfP,cAAc,EAAKC,gBAEvBG,EAAUtrC,KAAKE,IAAI,EAAGorC,GACtB,EAAKx7C,SAAS,CAACw7C,iBATXJ,cAAc,EAAKC,iBAUxB,EAAKtjD,MAAM2jD,WA/DC,EAkEnB14C,OAAS,SAACnC,GACN,IAAIg7C,GAAe,EAAK7hD,MAAM0X,KAG9B,OAFA,EAAK1X,MAAM0X,KAAO,EAAK+J,MAAM5a,GAAS,EAAK6Q,OAEpCmqC,GAtEQ,EAyEnB4I,eAAiB,SAAC/9C,GACd,IAAIg+C,EAAch+C,EAAE4J,OAAO1M,MAC3B,EAAK5D,SAAS,CAAC0kD,iBA3EA,EA8EnBC,iBAAmB,WAAO,IACjB/jD,EAAY,EAAKmG,QAAjBnG,SACL,OAAO5F,OAAOM,KAAKsF,EAASE,UAAU8H,QAAO,SAAAg8C,GACzC,OAAK,EAAK5qD,MAAM0qD,aAGD9jD,EAASE,SAAS8jD,GAEjB7sD,MAAMkoD,SAASriD,cAAciM,SAAS,EAAK7P,MAAM0qD,YAAY9mD,kBAC9EwE,KAAI,SAAAwiD,GACH,OAAOhkD,EAASE,SAAS8jD,OAxFd,EA4FnBC,YAAc,SAACjlD,GACX,EAAKmH,QAAQlH,YAAYD,EAAS7H,MAAMkI,SA7FzB,EAgGnBokD,gBAAkB,WAAO,IAChBzjD,EAAY,EAAKmG,QAAjBnG,SAEA,EAAK7I,MAAM+sD,gBACZC,MAAM,iCACDC,MAAK,SAACnmC,GAAD,OAAOA,EAAEomC,UACdD,MAAK,SAACplD,GACH,IACI+4B,EAAQqW,cAEZpvC,EAAS7H,MAAMkoD,SAHD,WAIdrgD,EAAS7H,MAAMkI,OAAS04B,EAExB/3B,EAASE,SAAS63B,GAAS/4B,EAE3B,EAAKilD,YAAYjkD,EAASE,SAAS63B,QA/GhC,EAqHnB4rB,iBAAmB,SAAC11C,KAnHhB,EAAK7U,MAAQ,CACTwhD,QAASzjD,EAAM2Z,KAAO,IAAM,EAC5BwzC,gBAAgB,EAChBC,iBAAiB,GAGrB,EAAKhK,SAAU,EACf,EAAKQ,SAAU,EATA,E,gEAaf93C,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAwGT,IAAD,OAGL,OAFiB2B,KAAKkD,QAAjBnG,SAMD,oCACI,yBACIyM,UAAU,kBACVtP,MAAO,CACH5E,KAAK,GAAD,OAAK0K,KAAK7J,MAAMwhD,QAAU,IAA1B,KACJ9mC,QAAS7Q,KAAK7J,MAAMwhD,QAAU,KAElCtV,cAAe,SAACx/B,GACZA,EAAE4rB,kBACF5rB,EAAEggB,mBAIN,yBAAKrZ,UAAU,qBACX,yBACIA,UAAU,8BAEV,0BAAMA,UAAU,0BAAhB,cAIA,kBAAC,EAAD,CACIE,QAAS,WACL,EAAKxG,QAAQlE,gBAAgB,eAAe,KAGhD,yBACI1I,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,SAO7B,yBAAKtB,UAAU,wBACX,2BACIA,UAAU,qCACV7O,KAAK,OACL6R,SAAUxM,KAAK4gD,iBAInB,kBAAC,GAAD,CACIp3C,UAAU,yBACVqB,IAAK,4BAMb,kBAAC,GAAD,CACIsD,YAAanO,KAAK7J,MAAMkrD,eACxBjzC,MAAM,aAAa5B,SAAU,SAAC60C,GAC9B,EAAKllD,SAAS,CAACklD,sBAGnB,yBAAK73C,UAAU,6BAEPxJ,KAAK7J,MAAMkrD,gBACXrhD,KAAK8gD,mBAAmBviD,KAAI,SAAAxC,GACxB,OACI,kBAAC,GAAD,CACI4N,IAAK5N,EAAS7H,MAAMkI,OACpBL,SAAUA,EACV2N,QAAS,SAAC7G,GACN,EAAKm+C,YAAYjlD,IAErBP,OAAQ,EAAKtH,MAAMsH,aAQvC,kBAAC,IAAD,CAAYgO,UAAU,2BAClBE,QAAS,SAAC7G,GACN,EAAK1G,SAAS,CAAColD,YAAa1+C,EAAE4J,WAFtC,gBASIzM,KAAK7J,MAAMorD,aACX,kBAAC,GAAD,CACI10C,SAAU7M,KAAK7J,MAAMorD,YACrB1zC,UAAiC5Y,IAA3B+K,KAAK7J,MAAMorD,YACjBzzC,QAAS,SAACjL,GACN,EAAK1G,SAAS,CAAColD,iBAAatsD,KAEhCyrD,iBAAkB1gD,KAAK0gD,iBACvBF,gBAAiBxgD,KAAKwgD,oBAlG/B,S,GAhIsBrlD,IAAM+E,WAA1BygD,GACV9lC,YAAc3f,EA0OzBylD,GAAYrwC,aAAe,CACvBzC,MAAM,EACN+pC,MAAO,IACPC,SAAU,G,ICnPO2J,G,kDAGjB,WAAYttD,GAAQ,IAAD,8BACf,cAAMA,IAaVutD,YAAc,SAAC5+C,KAZX,EAAK1M,MAAQ,GAFE,E,gEAOf6J,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAOT,IACDF,EAAQ6B,KAAK9L,MAAbiK,KAEL,OADiB6B,KAAKkD,QAAjBnG,SAKD,yBAAKyM,UAAU,qBACX,0BAAMA,UAAU,qBACXrL,EAAKvH,MAEV,0BAAM4S,UAAU,uBACXrL,EAAKujD,KADV,KACkBvjD,EAAKiU,SADvB,MAGA,0BAAMlY,MAAO,CACTynD,WAAW,GAAD,OAAKxjD,EAAKujD,KAAV,UACVlO,WAAYr1C,EAAKq1C,WACjBoO,UAAWzjD,EAAKyjD,UAChBxvC,SAAU/F,KAAKC,IAAInO,EAAKiU,SAAU,IAClCzE,MAAOxP,EAAKwP,MACZk0C,WAAY,UANhB,qBAWA,kBAAC,EAAD,CACIr4C,UAAU,oBACVE,QAAS1J,KAAKyhD,aAEd,kBAAC,GAAD,CACI7oD,MAAO,GACPC,OAAQ,GACRgS,IAAK,2BA5BV,S,GAzBwB1P,IAAM+E,WAA5BshD,GACV3mC,YAAc3f,E,ICAJ4mD,G,kDAGjB,WAAY5tD,GAAQ,IAAD,8BACf,cAAMA,IAaVutD,YAAc,SAAC9mC,EAAahR,EAAKgE,GAAnB,OAA6B,SAAC9K,GACxC,EAAK1G,SAAS,CACV4lD,SAAU,CACNpnC,cAAahR,MAAKgE,aAjBX,EAsBnBkU,cAAgB,SAAClU,GAAW,IACnBnS,EAAU,EAAKtH,MAAfsH,OACAuB,EAAY,EAAKmG,QAAjBnG,SACAglD,EAAY,EAAK5rD,MAAjB4rD,SACLhlD,EAAS0T,MAAM6J,OAAOC,MAAMwnC,EAASpnC,aAAaonC,EAASp4C,KAAOgE,EAE7C,SAAjBo0C,EAASp4C,MACT5M,EAAS0T,MAAM6J,OAAO0nC,YAAa,GAGvCD,EAASp0C,MAAQA,EACjB,EAAKxR,SAAS,CAAC4lD,aACfvmD,EAAOW,SAAS,CAACG,QAAQ,KAhCzB,EAAKnG,MAAQ,GAFE,E,gEAOf6J,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BA0BT,IAAD,OACAF,EAAQ6B,KAAK9L,MAAbiK,KAEL,OADiB6B,KAAKkD,QAAjBnG,SAKD,yBAAKyM,UAAU,uBACX,0BAAMA,UAAU,qBACXrL,EAAKvH,MAGV,yBAAK4S,UAAU,yBACX,yBAAKA,UAAU,4BAA4BtP,MAAO,CAC1C4W,gBAAiBm9B,GAAe9vC,EAAK8jD,MAAM,IAE/Cv4C,QAAS1J,KAAKyhD,YAAYtjD,EAAKvH,KAAM,OAAQq3C,GAAe9vC,EAAK8jD,MAAM,KAGvE,kBAAC,GAAD,CACIz4C,UAAU,+BACVtP,MAAO,CAAC2W,QAAS,GACjBhG,IAAK,6BACLjS,MAAO,GACPC,OAAQ,MAGhB,yBAAK2Q,UAAU,kCACX,yBAAKA,UAAU,qCAAqCtP,MAAO,CACvD4W,gBAAiB3S,EAAK,IAAQ8vC,GAAe9vC,EAAK8jD,MAAM,GACxDxlC,qBAAsB,EACtBE,wBAAyB,GAExBjT,QAAS1J,KAAKyhD,YAAYtjD,EAAKvH,KAAM,IAAKuH,EAAK,IAAQ8vC,GAAe9vC,EAAK8jD,MAAM,KAGlF,kBAAC,GAAD,CACIz4C,UAAU,+BACVqB,IAAK,6BACLjS,MAAO,GACPC,OAAQ,MAGhB,yBAAK2Q,UAAU,qCAAqCtP,MAAO,CACvD4W,gBAAiB3S,EAAK,IAAQ8vC,GAAe9vC,EAAK8jD,MAAM,IAEvDv4C,QAAS1J,KAAKyhD,YAAYtjD,EAAKvH,KAAM,IAAKuH,EAAK,IAAQ8vC,GAAe9vC,EAAK8jD,MAAM,KAGlF,kBAAC,GAAD,CACIz4C,UAAU,+BACVqB,IAAK,6BACLjS,MAAO,GACPC,OAAQ,MAGhB,yBAAK2Q,UAAU,qCAAqCtP,MAAO,CACvD4W,gBAAiB3S,EAAK,IAAQ8vC,GAAe9vC,EAAK8jD,MAAM,IAEvDv4C,QAAS1J,KAAKyhD,YAAYtjD,EAAKvH,KAAM,IAAKuH,EAAK,IAAQ8vC,GAAe9vC,EAAK8jD,MAAM,KAGlF,kBAAC,GAAD,CACIz4C,UAAU,+BACVqB,IAAK,uBACLjS,MAAO,GACPC,OAAQ,MAGhB,yBAAK2Q,UAAU,qCAAqCtP,MAAO,CACvD4W,gBAAiB3S,EAAK,IAAQ8vC,GAAe9vC,EAAK8jD,MAAM,IAEvDv4C,QAAS1J,KAAKyhD,YAAYtjD,EAAKvH,KAAM,IAAKuH,EAAK,IAAQ8vC,GAAe9vC,EAAK8jD,MAAM,KAGlF,kBAAC,GAAD,CACIz4C,UAAU,+BACVqB,IAAK,uBACLjS,MAAO,GACPC,OAAQ,MAGhB,yBAAK2Q,UAAU,qCAAqCtP,MAAO,CACvD4W,gBAAiB3S,EAAK,IAAQ8vC,GAAe9vC,EAAK8jD,MAAM,GACxDzlC,oBAAqB,EACrBE,uBAAwB,GAEvBhT,QAAS1J,KAAKyhD,YAAYtjD,EAAKvH,KAAM,IAAKuH,EAAK,IAAQ8vC,GAAe9vC,EAAK8jD,MAAM,KAGlF,kBAAC,GAAD,CACIz4C,UAAU,+BACVqB,IAAK,uBACLjS,MAAO,GACPC,OAAQ,QAOpBmH,KAAK7J,MAAM4rD,UACX,kBAAC,GAAD,CACIj0C,QAAS,kBAAM,EAAK3R,SAAS,CAAC4lD,cAAU9sD,KACxC0Y,MAAO3N,KAAK7J,MAAM4rD,SAASp0C,MAC3B+L,iBAAmB1Z,KAAK6hB,cACxBjI,cAAY,EACZhhB,MAAO,OAvGZ,S,GA5C0BuC,IAAM+E,WAA9B4hD,GACVjnC,YAAc3f,ECAzB,IAAM2e,GAAY,CACd,IAAI,IAAI,IAAI,IAAI,KAECqoC,G,kDAGjB,WAAYhuD,GAAQ,IAAD,8BACf,cAAMA,IAqBV2Z,KAAO,WACH,EAAKypC,SAAU,EACfC,cAAc,EAAKC,eACnBD,cAAc,EAAKE,cACnB,EAAKt7C,SAAS,CAAE0R,MAAM,IACtB,EAAK4pC,aAAeC,aAAY,WAC5B,GAAK,EAAKr5C,QAAV,CAIA,IAAIs5C,EAAU,EAAKxhD,MAAMwhD,SAAY,EAAKzjD,MAAM0jD,MAAQ,EAAK1jD,MAAM2jD,SAAW,IAC1EF,GAAW,MACX,EAAKL,SAAU,EACfC,cAAc,EAAKE,eAEvBE,EAAUtrC,KAAKC,IAAI,IAAKqrC,GACxB,EAAKx7C,SAAS,CAACw7C,iBATXJ,cAAc,EAAKE,gBAUxB,EAAKvjD,MAAM2jD,WAvCC,EA0CnBjgC,MAAQ,SAAC5a,GACL,EAAK86C,SAAU,EACfP,cAAc,EAAKC,eACnBD,cAAc,EAAKE,cACnB,EAAKt7C,SAAS,CAAE0R,MAAM,IAClB7Q,EACA,EAAKb,SAAS,CAACw7C,QAAS,IAG5B,EAAKH,cAAgBE,aAAY,WAC7B,GAAK,EAAKr5C,QAAV,CAIA,IAAIs5C,EAAU,EAAKxhD,MAAMwhD,SAAY,EAAKzjD,MAAM0jD,MAAQ,EAAK1jD,MAAM2jD,SAAW,IAC1EF,GAAW,IACX,EAAKG,SAAU,EACfP,cAAc,EAAKC,gBAEvBG,EAAUtrC,KAAKE,IAAI,EAAGorC,GACtB,EAAKx7C,SAAS,CAACw7C,iBATXJ,cAAc,EAAKC,iBAUxB,EAAKtjD,MAAM2jD,WA/DC,EAkEnB14C,OAAS,SAACnC,GACN,IAAIg7C,GAAe,EAAK7hD,MAAM0X,KAG9B,OAFA,EAAK1X,MAAM0X,KAAO,EAAK+J,MAAM5a,GAAS,EAAK6Q,OAEpCmqC,GAtEQ,EAyEnBmK,YAAc,SAACC,GAAD,OAAc,SAACv/C,GACrBu/C,IAAa,EAAKjsD,MAAMisD,UACxB,EAAKjmD,SAAS,CAACimD,eA3EJ,EA8EnBC,eAAiB,WAAO,IAGhB5xC,EAFa,EAAKvN,QAAjBnG,SAEgB0T,MAEhBA,EAAM6J,OAAO0nC,aACd7qD,OAAOuR,OAAO+H,EAAM6J,OAAOC,OAAO/Z,SAAQ,SAAArC,GACtC,IAAImkD,EAASrU,GAAe9vC,EAAK8jD,MACjCpoC,GAAUrZ,SAAQ,SAAAmJ,GACdxL,EAAKwL,GAAO24C,EAAO34C,SAI3B8G,EAAM6J,OAAO0nC,YAAa,IA3Ff,EA+FnBtnC,SAAW,SAACC,EAAahR,GAAS,IAG1B8G,EAFa,EAAKvN,QAAjBnG,SAEgB0T,MAIrB,OAFA,EAAK4xC,iBAEE5xC,EAAM6J,OAAOC,MAAMI,GAAahR,IApGvC,EAAKxT,MAAQ,CACTwhD,QAASzjD,EAAM2Z,KAAO,IAAM,GAIhC,EAAKypC,SAAU,EACf,EAAKQ,SAAU,EARA,E,gEAYf93C,KAAK3B,SAAU,EACf2B,KAAK7D,SAAS,CACVimD,SAAUrU,GAAO52C,OAAOuR,OAAO1I,KAAKkD,QAAQnG,SAAS0T,OAAQ,SAAS,O,6CAK1EzQ,KAAK3B,SAAU,I,+BAsFT,IAAD,OACA7C,EAAUwE,KAAK9L,MAAfsH,OADA,EAEsBwE,KAAKkD,QAA3BnG,EAFA,EAEAA,SAFA,EAEUhB,SACf,OAAKgB,EAID,oCACI,yBACIyM,UAAU,mBACVtP,MAAO,CACH5E,KAAK,GAAD,OAAK0K,KAAK7J,MAAMwhD,QAAU,IAA1B,KACJ9mC,QAAS7Q,KAAK7J,MAAMwhD,QAAU,KAElCtV,cAAe,SAACx/B,GACZA,EAAE4rB,kBACF5rB,EAAEggB,mBAGN,yBACIrZ,UAAU,oBAGNukC,GAAO52C,OAAOuR,OAAO3L,EAAS0T,OAAQ,SAASlS,KAAI,SAAA6jD,GAC/C,IAAIloD,EAAQ,GAGZ,OAFIkoD,IAAa,EAAKjsD,MAAMisD,WACxBloD,EAAM4W,gBAAkB,WAExB,yBACInH,IAAKy4C,EAASxrD,KACd4S,UAAU,2BACVE,QAAS,EAAKy4C,YAAYC,GAC1BloD,MAAOA,GAENkoD,EAASxrD,UAQ1BoJ,KAAK7J,MAAMisD,UACX,yBAAK54C,UAAU,wBAEX,yBACIA,UAAU,mCAEd,0BAAMA,UAAU,+BAAhB,SAII,kBAAC,EAAD,CACIE,QAAS,WACL,EAAKxG,QAAQlE,gBAAgB,gBAAgB,KAGjD,yBACI1I,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAKC,EAAQ,QAKzB,yBAAKtB,UAAU,0BAEPrS,OAAOM,KAAKuI,KAAK7J,MAAMisD,SAAS7nC,OAAOhc,KAAI,SAAAoL,GACvC,MAAiC,SAA7B,EAAKxT,MAAMisD,SAASxrD,KAEhB,kBAAC,GAAD,CACI+S,IAAKA,EACLxL,KAAM,EAAKhI,MAAMisD,SAAS7nC,MAAM5Q,GAChCnO,OAAQA,IAIa,WAA7B,EAAKrF,MAAMisD,SAASxrD,KAEhB,kBAAC,GAAD,CACI+S,IAAKA,EACLxL,KAAM,EAAKhI,MAAMisD,SAAS7nC,MAAM5Q,GAChCnO,OAAQA,EACR+mD,kBAAmB,EAAKF,wBANpC,SA1ErB,S,GAhHuBlnD,IAAM+E,WAA3BgiD,GACVrnC,YAAc3f,EA8MzBgnD,GAAa5xC,aAAe,CACxBzC,MAAM,EACN+pC,MAAO,KACPC,SAAU,G,wBCtNO2K,G,kDACjB,WAAYtuD,GAAQ,IAAD,8BACf,cAAMA,IACDiC,MAAQ,GAFE,E,gEAOf6J,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAGR,IAAD,OACN,OACI,kBAACnD,EAAcunD,SAAf,MACK,SAAAzT,GAAa,OACV,oCACA,kBAAC,EAAD,CACI/kC,gBAAiB,CACbH,WAAY,EACZ6B,YAAa,GACbmF,gBAAiB,EAAK3a,MAAMusD,aAAe,WAE/Ch5C,QAAS,SAAC7G,GACN,EAAK1G,SAAS,CAACumD,YAAa7/C,EAAEiK,kBAGlC,yBACIxW,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,8BAMT,EAAK1U,MAAMusD,aACX,kBAAC,IAAD,CACIxoD,MAAO,CACH+D,OAAQ,aAEZ4O,SAAU,EAAK1W,MAAMusD,YACrBC,aAAc,CACV53C,SAAU,MACVJ,WAAY,SAEhBi4C,mBAAoB,KACpBC,eAAgB,CAAEvtD,KAAM,EAAGC,IAAK,GAChCutD,WAAY,CACR5oD,MAAM,CACF8wB,gBAAiB,YACjBpa,UAAU,SAAD,OAAW,EAAEo+B,EAAcnyC,UAA3B,OAGjBkmD,gBAAiB,EACjB/3B,gBAAiB,CACbjgB,SAAU,MACVJ,WAAY,SAEhBkD,MAAM,EACNC,QAAS,SAACjL,GACNA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK1mB,SAAS,CAACumD,iBAAaztD,KAEhC8Y,cAAe,CACX7T,MAAO,CACHoQ,QAAS,IAGjB04C,mBAAoB,GAEpB,kBAAC,KAAD,CAAO9oD,MAAO,CACVoQ,QAAS,GACTH,QAAS,OACTE,WAAY,WAEZ,kBAAC,EAAD,CACIJ,gBAAiB,CACbH,WAAY,EACZ6B,YAAa,GACbkH,cAAe,QAEnBtI,oBAAqB,CACjBD,QAAS,IAEbZ,QAAS,SAAC7G,GACNA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK3uB,MAAM+uD,aAAa52C,KAAKC,IAAI,IAAK0iC,EAAcnyC,UAAY,OAGpE,yBACIvG,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,0BAGb,0BAAM3Q,MAAO,CACTtB,MAAO,GACPyU,UAAW,YAEiB,IAA1B2hC,EAAcnyC,WAAiBmW,QAAQ,GAJ7C,KAMA,kBAAC,EAAD,CACI/I,gBAAiB,CACbH,WAAY,GACZ6B,YAAa,GACbkH,cAAe,QAEnBtI,oBAAqB,CACjBD,QAAS,IAEbZ,QAAS,SAAC7G,GACNA,EAAE4rB,kBACF5rB,EAAEggB,iBACF,EAAK3uB,MAAM+uD,aAAa52C,KAAKE,IAAI,GAAKyiC,EAAcnyC,UAAY,OAGpE,yBACIvG,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,4BAGb,kBAAC,KAAD,CAAQrB,UAAU,wBACdE,QAAS,SAAC7G,GACN,EAAK3O,MAAM+uD,aAAa,KAFhC,mB,GAnIc9nD,IAAM+E,WCD/BgjD,I,yDACjB,WAAYhvD,GAAQ,IAAD,8BACf,cAAMA,IAaV+qB,WAAa,SAAC+vB,GACV,IAAIp8B,EAAUzb,OAAOuR,OAAOsmC,EAAcjyC,SAASE,UAAUsB,KAAI,SAAAxC,GAC7D,OAAOA,EAAS7H,MAAMkoD,YAc1B,OAXCpN,EAAclzC,SAAW8W,EAAQ3R,KAC9B,yBACIuI,UAAU,0CACVE,QAAS,WACLslC,EAAchwC,gBAAgB,eAAe,KAHrD,iBAUG4T,GA5BP,EAAKzc,MAAQ,GAFE,E,gEAOf6J,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAsBR,IAAD,OACN,OACI,kBAACnD,EAAcunD,SAAf,MACK,SAAAzT,GAAa,OACV,wBACQ,EAAK96C,MAET,kBAAC,GAAD,CACI0e,QAASo8B,EAAcjyC,SAAW,EAAKkiB,WAAW+vB,GAAiB,CAAC,OACpExiC,SAAU,SAACgJ,GACP,IAAIzZ,EAAW5E,OAAOuR,OAAOsmC,EAAcjyC,SAASE,UAAU6D,MAAK,SAAAqiD,GAC/D,OAAOA,EAAGjvD,MAAMkoD,WAAa5mC,KAG7BzZ,GACAizC,EAAchzC,YAAYD,EAAS7H,MAAMkI,SAEjD2D,MAAOivC,EAAcjzC,SAAWizC,EAAcjzC,SAAS7H,MAAMkoD,SAAW,MACxE3pC,UAAW,CACP7Z,MAAO,IACPwZ,SAAU,GACV4J,OAAQ,+B,GAvDY7gB,IAAM+E,YCHrCkjD,I,yDACjB,WAAYlvD,GAAQ,IAAD,8BACf,cAAMA,IAOV8X,YAAc,SAACjM,EAAOkM,GAClB,MAAI,QAAQ8G,KAAKhT,IACbA,EAAQoM,WAAWpM,GAAOiT,QAAQ,GAClCjT,EAAQsM,KAAKC,IAAI,EAAKpY,MAAMqY,IAAKxM,GACjCA,EAAQsM,KAAKE,IAAI,EAAKrY,MAAMoY,IAAKvM,IAEhB,KAAVA,EACA,IAGJkM,GAlBQ,EAqBnBO,SAAW,SAAC3J,GACR,IAAI,EAAK3O,MAAMmvD,KAAf,CAGA,IAAItjD,EAAQ,EAAKiM,YAAY,EAAK7V,MAAMmtD,UAAW,EAAKpvD,MAAM6L,OAC9D,EAAK7L,MAAMsY,SAASzM,GACpB,EAAK5D,SAAS,CAACmnD,eAAWruD,MA3BX,EA8BnBsuD,aAAe,SAAC1gD,GACZ,IAAIygD,EAAYzgD,EAAE4J,OAAO1M,MACzB,EAAK5D,SAAS,CAACmnD,cAEX,EAAKpvD,MAAMmvD,MACX,EAAKnvD,MAAMsY,SAAS82C,IAhCxBhmD,QAAQC,IAAI,YAAarJ,EAAMoY,KAE/B,EAAKnW,MAAQ,GALE,E,qDAsCR,IAAD,OACN,OACI,2BACIqT,UAAW,eAAiBxJ,KAAK9L,MAAMsV,YAAa,EACpDzJ,MAAOC,KAAK7J,MAAMmtD,WAAatjD,KAAK9L,MAAM6L,OAAS,EACnDyM,SAAUxM,KAAKujD,aACf/G,OAAQx8C,KAAKwM,SACbiwC,WAAY,SAAC55C,GACqB,MAA1BA,EAAE6f,SAAW7f,EAAE4f,SACf,EAAKjW,WACD,EAAKtY,MAAMuoD,YACX,EAAKvoD,MAAMuoD,eAGvB9hD,KAAK,OACLT,MAAO8F,KAAK9L,MAAMoZ,iB,GAtDoBnS,IAAM+E,Y,mBCD/CsjD,I,OAAoB,SAACnvD,GAC9B,OAAIA,EAAOsM,OAAS,KACT,yBAAKrK,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GAAIgS,IAAK,8BAC1DxW,EAAOsM,OAAS,KACT,yBAAKrK,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GAAIgS,IAAK,4BAC1DxW,EAAOsM,OAAS,IACT,yBAAKrK,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GAAIgS,IAAK,0BAEvD,yBAAKvU,WAAW,EAAOsC,MAAO,GAAIC,OAAQ,GAAIgS,IAAK,6BAGjD44C,GAAoB,SAACpvD,GAC9B,OAAIA,EAAOsM,OAAS,KACT,UACPtM,EAAOsM,OAAS,KACT,SACPtM,EAAOsM,OAAS,IACT,SAEJ,U,UCZU+iD,G,kDACjB,WAAYxvD,GAAQ,IAAD,8BACf,cAAMA,IAcVyvD,YAAc,SAAC3U,GAAmB,IACzB36C,EAAU,EAAKH,MAAfG,OACL,OAAO26C,EAAcxzC,OAAO6D,kBAAkBgF,qBAAuBhQ,EAAOuC,MAjB7D,EAoBnBgtD,KAAO,SAAC5U,GAAmB,IAClB36C,EAAU,EAAKH,MAAfG,OAED+X,MAAM,EAAKy3C,WAIf,EAAKA,QAAUhgC,SAAS,EAAKggC,SAE7B7U,EAAcxzC,OAAO6D,kBAAkBqB,iBACnCrM,EAAOuC,UAAM3B,EAAW,EAAK4uD,SAGjC,EAAK1nD,SAAS,CAAC2nD,UAAU,IAEzB9U,EAAc3yC,WAnCC,EAsCnBysB,OAAS,SAACkmB,GAIN,GAHK,EAAK6U,UACN,EAAKA,QAAU7U,EAAczvC,WAE7B6M,MAAM,EAAKy3C,SAAf,CAIA,EAAKA,QAAUhgC,SAAS,EAAKggC,SARL,MAUM7U,EAAcxzC,OAAO6D,kBAAkBqB,iBACjEyqC,cAAU,EAAK0Y,aAAS5uD,GADvB2I,EAVmB,EAUnBA,UAAWC,EAVQ,EAURA,WAIhB,EAAK3J,MAAM6vD,WAEX/U,EAAcrxC,aAAaC,EAAWC,KAtDvB,EAyDnBo5B,OAAS,SAAC+X,GAAmB,IACpB36C,EAAU,EAAKH,MAAfG,OAEL26C,EAAcxzC,OAAO6D,kBAAkB6B,iBAAiB7M,EAAOuC,MAE/Do4C,EAAc3yC,UA9DC,EAiEnB2nD,eAAiB,WACb,EAAK7nD,SAAS,CAAC2nD,UAAU,KAhEzB,EAAK3tD,MAAQ,CACT2tD,UAAU5vD,EAAMG,OAAOuC,MAHZ,E,gEAQfoJ,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAyDR,IAAD,SACqB2B,KAAK9L,MAA3BG,EADC,EACDA,OAAQ4vD,EADP,EACOA,WACb,OACI,kBAAC/oD,EAAcunD,SAAf,MACK,SAAAzT,GAAa,OACV,yBAAKxlC,UAAU,6BACX,yBAAKA,UAAU,6BAEPg6C,GAAkBnvD,IAKtBA,EAAOuC,MACP,uBAAG4S,UAAU,8BACRnV,EAAOsM,MADZ,IAEQ,EAAKgjD,YAAY3U,GAAiB,QAAU,OAMnD,EAAK74C,MAAM2tD,WACX,EAAKH,YAAY3U,IAClB,uBAAGxlC,UAAU,gCACRnV,EAAOoM,KAKZ,EAAKtK,MAAM2tD,WACV,EAAKH,YAAY3U,IAClB,kBAAC,GAAD,CACIxlC,UAAU,gCACV8D,WAAY,CACRxD,WAAY,GAEhBwC,IAAKjY,EAAOuC,KAAMvC,EAAOsM,MAAQ,EAAG,IACpC4L,IAAKlY,EAAOuC,KAAMqtD,EAAWxjD,IAAM,EAAI,KACvCV,MAAO1L,EAAOoM,KAAOuuC,EAAczvC,SACnCiN,SAAU,SAACq3C,GACP,EAAKA,QAAUA,GAEnBpH,WAAY,WACRpoD,EAAOuC,KACH,EAAKgtD,KAAK5U,GACV,EAAKlmB,OAAOkmB,IAEpBqU,MAAI,KAKP,EAAKM,YAAY3U,IAClB,uBAAGxlC,UAAU,2BACR,OAKJ,EAAKrT,MAAM2tD,WACX,EAAKH,YAAY3U,IAClB,yBAAKxlC,UAAU,iCACX,kBAAC,EAAD,CACIE,QAAS,WACL,EAAKutB,OAAO+X,KAGhB,yBACI14C,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,6BAGb,kBAAC,EAAD,CACInB,QAAS,WACL,EAAKxV,MAAMgwD,YAAc,EAAKhwD,MAAMgwD,aACpC,EAAK/nD,SAAS,CAAC2nD,UAAU,IACzB,EAAKD,QAAUxvD,EAAOoM,MAG1B,yBACInK,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,6BAOjB,EAAK1U,MAAM2tD,WACV,EAAKH,YAAY3U,IAClB,yBAAKxlC,UAAU,iCAEPnV,EAAOuC,MACP,kBAAC,KAAD,CACI8lD,QAAQ,YACRlzC,UAAU,yDACVE,QAAS,WACL,EAAKk6C,KAAK5U,KAJlB,SAWC36C,EAAOuC,MACR,kBAAC,KAAD,CACI8lD,QAAQ,YACRlzC,UAAU,yDACVE,QAAS,WACL,EAAKof,OAAOkmB,KAJpB,UAUJ,kBAAC,KAAD,CACIxlC,UAAU,2DACVE,QAAS,WACLrV,EAAOuC,KACH,EAAKuF,SAAS,CAAC2nD,UAAU,IACzB,EAAK5vD,MAAM6vD,aALvB,mB,GA9LgC5oD,IAAM+E,WCDjDikD,G,kDACjB,WAAYjwD,GAAQ,IAAD,8BACf,cAAMA,IAaVkwD,cAAgB,WACZ9mD,QAAQC,IAAI,iBACZpG,OAAOuR,OAAO,EAAK27C,aAAa7jD,SAAQ,SAAA8jD,GACpChnD,QAAQC,IAAI,iBAAkB+mD,GAC1BA,EAAU7mD,SACV6mD,EAAU7mD,QAAQumD,qBAnBX,EAuBnBO,aAAe,SAAC3tD,GAOZ,OANK,EAAKytD,cACN,EAAKA,YAAc,IAElB,EAAKA,YAAYztD,KAClB,EAAKytD,YAAYztD,GAAQuE,IAAM+R,aAE5B,EAAKm3C,YAAYztD,IA5BxB,EAAKT,MAAQ,GAFE,E,gEAOf6J,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAsBR,IAAD,OACN,OACI,kBAACnD,EAAcunD,SAAf,MACK,SAAAzT,GAAa,OACV,kBAAC,KAAD,CACI90C,MAAO,CACH+D,OAAQ,aAEZ4O,SAAU,EAAK3Y,MAAM2Y,SACrBgB,MAAM,EACNC,QAAS,SAACjL,GACN,EAAK3O,MAAM4Z,WAEfC,cAAe,CACX7T,MAAO,CACHoQ,QAAS,KAIjB,yBAAKd,UAAU,iBAEX,yBAAKA,UAAU,mBACX,yBACIA,UAAU,4BAElB,0BAAMA,UAAU,wBAAhB,yBAIQ,kBAAC,EAAD,CACIE,QAAS,EAAKxV,MAAM4Z,SAEpB,yBACIxX,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,8BAMrB,uBAAGrB,UAAU,sBAAb,uFAKIwlC,EAAcxzC,OAAO6D,kBAAkBnC,YAAYqB,KAAI,SAAClK,EAAQ8M,GAC5D,OACI,kBAAC,GAAD,CACIwI,IAAKtV,EAAOuC,KACZvC,OAAQA,EACR4vD,WAAYjV,EAAcxzC,OAAO6D,kBAAkBnC,YAAYiE,EAAQ,GACvE+iD,WAAY,EAAKE,cACjB52C,IAAK,EAAK+2C,aAAalwD,EAAOuC,WAO1C,EAAKT,MAAMyH,WACX,kBAAC,GAAD,CACIvJ,OAAQ,EAAK8B,MAAMyH,UACnBmmD,SAAU,WACN,EAAK5nD,SAAS,CAACyB,eAAW3I,OAKtC,kBAAC,KAAD,CACIuU,UAAU,iBACVE,QAAS,WACL,EAAK06C,gBACL,EAAKjoD,SAAS,CAACyB,UAAW,OAJlC,+B,GAxGgCzC,IAAM+E,WCE7CskD,G,kDACjB,WAAYtwD,GAAQ,IAAD,8BACf,cAAMA,IAaVmrD,YAAc,SAACrQ,GAAD,OAAmB,SAACnsC,EAAGT,GAIjC,GAHA,EAAKjG,SAAS,CAACmjD,SAAUl9C,IACzB9E,QAAQC,IAAI,SAAU6E,EAAQ4sC,EAAcxzC,OAAO6D,kBAAkB5B,WAEjEuxC,EAAcxzC,OAAO6D,kBAAkB5B,YAAc2E,EAAzD,CAGA,IAKIxJ,EALAvE,EAAS26C,EAAcxzC,OAAO6D,kBAAkBmD,UAAUJ,GAE9D,GAAK/N,EAKDuE,EADAvE,EAAO+Q,QAAU/Q,EAAOsM,OAAStM,EAAO+Q,QAAU/Q,EAAOoM,IACjDpM,EAAO+Q,OAEP/Q,EAAOsM,MAEnBquC,EAAcxzC,OAAOm4B,aAAa/6B,MAhCnB,EAmCnB6rD,YAAc,SAACzV,GACX,IAAIp2C,EAAQo2C,EAAcxzC,OAAOgC,cAAcC,QAAQ8E,SAAQ,GAAO3J,MACtE,OAAOo2C,EAAcxzC,OAAO6D,kBAAkB5B,QAAQ7E,IAnCtD,EAAKzC,MAAQ,GAFE,E,gEAOf6J,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BA6BR,IAAD,OACN,OACI,kBAACnD,EAAcunD,SAAf,MACK,SAAAzT,GAAa,OACV,wBACQ,EAAK96C,MAGL86C,EAAcxzC,QAAUwzC,EAAcxzC,OAAOgC,cAAcC,SAC3D,kBAAC,KAAD,CACI+L,UAAU,iCACVzJ,MACI,EAAK0kD,YAAYzV,GAErB2Q,eAAe,UACfC,UAAU,UACVpzC,SAAU,EAAK6yC,YAAYrQ,GAC3BnlC,aAAW,yBAGPmlC,EAAcxzC,OAAO6D,kBAAkBnC,YAAYqB,KAAI,SAAClK,EAAQ8M,GAC5D,OACI,kBAAC,KAAD,CACIwI,IAAKtV,EAAOuC,KACZ4S,UAAU,6BACVqxC,MAAO2I,GAAkBnvD,GACzB0L,MAAO1L,EAAOuC,WAUlCo4C,EAAcxzC,QAAUwzC,EAAcxzC,OAAOgC,cAAcC,SAC3D,kBAAC,EAAD,CACIwM,gBAAiB,CAACH,WAAY,IAC9BJ,QAAS,SAAC7G,GACN,EAAK1G,SAAS,CAACuoD,cAAe7hD,EAAEiK,kBAGpC,yBACIxW,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,gCAKjB,yBAAK3Q,MAAO,CACR4W,gBAAiB,UACjBjY,OAAQ,OACRD,MAAO,EACPkR,WAAY,MAMZklC,EAAcxzC,QAAUwzC,EAAcxzC,OAAOgC,cAAcC,SAC3D,oCACI,0BACIvD,MAAO,CACH4P,WAAY,GACZK,QAAQ,OACRE,WAAY,SACZ+H,SAAU,KALlB,SAUA,kBAAC,GAAD,CACI9E,WAAY,CACRxD,WAAY,IAEhBwC,IAAK0iC,EAAcxzC,OAAO6D,kBAAkBwF,cAC5C0H,IAAK,KACLxM,MAAOivC,EAAcxzC,OAAOgC,cAAcC,QAAQ8E,SAAQ,GAAO3J,MACjE4T,SAAU,SAAC5T,GACPo2C,EAAc5vC,iBAAiBxG,OAO3C,EAAKzC,MAAMuuD,eACX,kBAAC,GAAD,CACI73C,SAAU,EAAK1W,MAAMuuD,cACrB52C,QAAS,SAACjL,GACN,EAAK1G,SAAS,CAACuoD,mBAAezvD,e,GAtIbkG,IAAM+E,WCFtCykD,G,kDAGjB,WAAYzwD,GAAQ,IAAD,8BACf,cAAMA,IAcV0wD,iBAAmB,SAACC,EAAU1uD,GAC1B,IAAI2uD,EAAe,GACnB,CACI,sBACA,sBACA,sBACFtkD,SAAQ,SAAA5J,GACF,EAAKT,MAAL,UAAcS,EAAd,WAA8B,UAAGA,EAAH,WAAmBiuD,IACjDvnD,QAAQC,IAAI,mBAAoB3G,GAChC,EAAK1C,MAAM0C,IAAM,IAGrBkuD,EAAa,GAAD,OAAIluD,EAAJ,WAAmB,KAEnC,EAAKuF,SAAL,2BACO2oD,GADP,mBAEKD,EAAW1uD,MA7BhB,EAAKA,MAAQ,CACT4uD,uBAAuB,GAHZ,E,gEAQf/kD,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAuBR,IAAD,OACN,OACI,yBAAKmL,UAAU,mBAAmBtP,MAAO,CACrCtB,MAAM,GAAD,OAA4B,IAAvBoH,KAAKkD,QAAQrG,UAAlB,OAEL,yBAAK2M,UAAU,8BACX,kBAAC,EAAD,CACIS,gBAAiB,CAACH,WAAY,EAC1BgH,gBAAiB9Q,KAAKkD,QAAQhE,WAAWS,aAAaxJ,OAAS,WAEnEuT,QAAS,SAAC7G,GACN,EAAKK,QAAQlE,gBAAgB,kBAKjC,yBACI1I,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,0BAGb,kBAAC,EAAD,CACIZ,gBAAiB,CAACH,WAAY,EAC1BgH,gBAAiB9Q,KAAKkD,QAAQhE,WAAWU,YAAYzJ,OAAS,WAElEuT,QAAS,SAAC7G,GACN,EAAKK,QAAQlE,gBAAgB,iBAKjC,yBACI1I,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,2BAGb,kBAAC,EAAD,CACIZ,gBAAiB,CAACH,WAAY,EAC1BgH,gBAAiB9Q,KAAKkD,QAAQhE,WAAWW,aAAa1J,OAAS,WAEnEuT,QAAS,SAAC7G,GACN,EAAKK,QAAQlE,gBAAgB,kBAKjC,yBACI1I,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,6BAIjB,yBAAKrB,UAAU,+BACX,kBAAC,GAAD,CACIA,UAAU,wBACVtP,MAAO,CACHtB,MAAO,OAGf,kBAAC,GAAD,CACI4Q,UAAU,6EAGlB,yBAAKA,UAAU,6BACX,kBAAC,EAAD,CACIS,gBAAiB,CACbH,WAAY,EACZ6B,YAAa,GACbmF,gBAAiB9Q,KAAK7J,MAAM4uD,uBAAyB,WAEzDr7C,QAAS,SAAC7G,GACN,IAAIkiD,EAAwB,EAAK7wD,MAAM8wD,iBAAiBniD,GACxD,EAAK1G,SAAS,CAAC4oD,4BAGnB,yBACIzuD,WAAW,EACXsC,MAAO,GACPC,OAAQ,GACRgS,IAAK,gCAGb,kBAAC,GAAD,CACIo4C,aAAc,SAACpmD,GACX,EAAK3I,MAAM+wD,iBAAiBpoD,Y,GAhId1B,IAAM+E,WAA3BykD,GACV9pC,YAAc3f,E,ICEJgqD,G,kDAGjB,WAAYhxD,GAAQ,uCACVA,G,gEAIN8L,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAIf,OACI,yBAAKmL,UAAU,qBACVxJ,KAAK9L,MAAM+L,c,GAlBe9E,IAAM+E,WAA5BglD,GACVrqC,YAAc3f,G,kDCJrB,WAAYhH,GAAQ,uCACVA,G,gEAIN8L,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAIf,OAAI2B,KAAK9L,MAAM4H,QAEP,kBAAC,GAAD,KACKkE,KAAK9L,MAAM+L,UAKhB,yBAAKuJ,UAAU,yBACVxJ,KAAK9L,MAAM+L,c,GAzBQ9E,IAAM+E,YACnC2a,YAAc3f,E,WCCJiqD,G,kDACjB,WAAYjxD,GAAQ,IAAD,8BACf,cAAMA,IAcVkxD,gBAAkB,SAACpW,GACf,IAAKA,EAAcxzC,OAAOgC,cAAcC,QACpC,MAAO,MAEX,IAAI7E,EAAQo2C,EAAcxzC,OAAOgC,cAAcC,QAAQ8E,SAAQ,GAAO3J,MAElEvE,EAAS,EAAK4qB,WAAW+vB,GAAejqC,QAAO,SAAA1Q,GAE/C,OADAiJ,QAAQC,IAAI,kBAAmBlJ,EAAOuC,KAAMvC,EAAOsG,KAAMtG,EAAOsM,MAAO/H,EAAuB,WAAhBvE,EAAOsG,MAAqBtG,EAAOsM,QAAU/H,GACpG,WAAhBvE,EAAOsG,MAAqBtG,EAAOsM,QAAU/H,KACrD,GAEH,OAAIvE,EACQ,EAAK8B,MAAMkvD,YAA6C,WAA/B,EAAKlvD,MAAMkvD,WAAW1qD,MAAqB,EAAKxE,MAAMkvD,YAAehxD,EAGnG26C,EAAcxzC,OAAO6D,kBAAkBmE,cAAc5K,IA9B7C,EAiCnBqmB,WAAa,SAAC+vB,GACV,IAAIp8B,EAAU,CAAC,CACXxE,MAAO,mBAAoBlE,UAAS,IAGxC,OAAK8kC,EAAcxzC,OAAO6D,mBAER2vC,EAAcxzC,OAAO6D,kBAAkB1I,uBAAuB8S,UAEpEjJ,SAAQ,SAAAnM,GAChBue,EAAQ3R,KAAK5M,MAGjBue,EAAQ3R,KAAK,CACTmN,MAAO,iBAAkBlE,UAAS,KAGrC,EAAKhW,MAAMoxD,SAAW,IAAItgD,MAAK,SAACC,EAAGlE,GAChC,OAAIkE,EAAEtE,MAAQI,EAAEJ,OACJ,EACDsE,EAAEtE,QAAUI,EAAEJ,MAEd,EAEJ,KACRH,SAAQ,SAAAnM,GACPA,EAAOsG,KAAO,SACdiY,EAAQ3R,KAAK5M,MAGVue,GAzB6C,IApCpD,EAAKzc,MAAQ,CACTkvD,gBAAYpwD,GAHD,E,gEAQf+K,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAsDR,IAAD,OACN,OACI,kBAACnD,EAAcunD,SAAf,MACK,SAAAzT,GAAa,OACV,wBACQ,EAAK96C,MAET,kBAAC,GAAD,CACI0e,QAASo8B,EAAcjyC,SAAW,EAAKkiB,WAAW+vB,GAAiB,CAAC,OACpExiC,SAAU,SAACnY,GACP,EAAK8H,SAAS,CAACkpD,WAAYhxD,IAC3B26C,EAAc5vC,iBAAiB/K,EAAO+Q,QAAU/Q,EAAOsM,QAE3DZ,MAAOivC,EAAcjzC,SAAW,EAAKqpD,gBAAgBpW,GAAiB,MACtEv8B,UAAW,CACP7Z,MAAO,IACPwZ,SAAU,GACV4J,OAAQ,qBAEZxJ,SAAU,SAACne,GACP,OACI,yBAAKmV,UAAU,oCAEPnV,EAAOuC,MACP,yBAAK4S,UAAU,wCAEPg6C,GAAkBnvD,IAK1BA,EAAOuC,MACP,yBAAK4S,UAAU,wCAES,WAAhBnV,EAAOsG,KAAoBtG,EAAOuC,KAClC6sD,GAAkBpvD,IAK1BA,EAAOuC,MACP,yBAAK4S,UAAU,wCAEPnV,EAAOsM,MAAQ,QAKtBtM,EAAOuC,MACR,yBAAK4S,UAAU,yCAEPnV,EAAO+Z,SAO/BmE,cAAe,SAACle,GACZ,OACI,yBAAKmV,UAAU,oCAEPnV,EAAOuC,MACP,yBAAK4S,UAAU,wCAEPg6C,GAAkBnvD,IAK1BA,EAAOuC,MACP,yBAAK4S,UAAU,wCAES,WAAhBnV,EAAOsG,KAAoBtG,EAAOuC,KAClC6sD,GAAkBpvD,KAKzBA,EAAOuC,MACR,yBAAK4S,UAAU,yCAEPnV,EAAO+Z,WASnC,yBAAKlU,MAAO,CACR4W,gBAAiB,UACjBjY,OAAQ,OACRD,MAAO,EACPkR,WAAY,MAMZklC,EAAcxzC,QAAUwzC,EAAcxzC,OAAOgC,cAAcC,SAC3D,oCACI,0BACIvD,MAAO,CACH4P,WAAY,GACZK,QAAQ,OACRE,WAAY,SACZ+H,SAAU,KALlB,SAUA,kBAAC,GAAD,CACI9E,WAAY,CACRxD,WAAY,IAEhBwC,IAAK0iC,EAAcxzC,OAAO6D,kBAAkBwF,cAC5C0H,IAAK,KACLxM,MAAOivC,EAAcxzC,OAAOgC,cAAcC,QAAQ8E,SAAQ,GAAO3J,MACjE4T,SAAU,SAAC5T,GACPo2C,EAAc5vC,iBAAiBxG,e,GA5LjBuC,IAAM+E,WCIvCqlD,G,kDAGjB,WAAYrxD,GAAQ,uCACVA,G,gEAIN8L,KAAK3B,SAAU,I,6CAIf2B,KAAK3B,SAAU,I,+BAGR,IAAD,OACN,OACI,yBAAKmL,UAAU,mBAAmBtP,MAAO,CACrCtB,MAAM,GAAD,OAA4B,IAAvBoH,KAAKkD,QAAQrG,UAAlB,OAEL,yBAAK2M,UAAU,+BAEf,yBAAKA,UAAU,+BACX,kBAAC,GAAD,CACIA,UAAU,wBACVtP,MAAO,CACHtB,MAAO,OAGf,kBAAC,GAAD,CACI4Q,UAAU,0EACV87C,QRjBb,CACH,CACI1uD,KAAM,YACN+J,MAAO,KAEX,CACI/J,KAAM,eACN+J,MAAO,KAEX,CACI/J,KAAM,OACN+J,MAAO,KAEX,CACI/J,KAAM,WACN+J,MAAO,MAEX,CACI/J,KAAM,eACN+J,MAAO,KAEX,CACI/J,KAAM,oBACN+J,MAAO,KAEX,CACI/J,KAAM,WACN+J,MAAO,KAEX,CACI/J,KAAM,UACN+J,MAAO,KAEX,CACI/J,KAAM,aACN+J,MAAO,SQfH,yBAAK6I,UAAU,8BACX,kBAAC,KAAD,CAAQA,UAAU,gBAAgBE,QAAS,WACvC,EAAKxG,QAAQrH,uBADjB,WAKA,kBAAC,KAAD,CAAQ2N,UAAU,gBAAgBE,QAAS,WACvC,EAAKxG,QAAQ5H,oBADjB,c,GAxCuBH,IAAM+E,WAA5BqlD,GACV1qC,YAAc3f,E,IC4BJsqD,G,kDAGjB,WAAYtxD,GAAQ,IAAD,8BACf,cAAMA,IASVq+B,KAAO,SAACr+B,GACJ,EAAKsJ,cAAgBrC,IAAM+R,YAC3B,EAAKsjC,WAAar1C,IAAM+R,YACxB,EAAKwlC,iBAAmBv3C,IAAM+R,YAC9B,EAAKkoB,cAAgBj6B,IAAM+R,YAC3B,EAAKshC,eAAiBrzC,IAAM+R,YAC5B,EAAKwhC,kBAAoBvzC,IAAM+R,YAC/B,EAAK0hC,UAAYzzC,IAAM+R,YACvB,EAAK2hC,aAAe1zC,IAAM+R,YAC1B,EAAKyhC,aAAexzC,IAAM+R,YAC1B,EAAK4hC,SAAW3zC,IAAM+R,YACtB,EAAKu4C,UAAYtqD,IAAM+R,YACvB,EAAKw4C,gBAAkBvqD,IAAM+R,YAC7B,EAAKy4C,eAAiBxqD,IAAM+R,YAC5B,EAAKuN,gBAAkBtf,IAAM+R,YAC7B,EAAKtF,SAAW,IAAItC,EACpB,EAAKipC,aAAe,IAAIqX,GACxB,EAAKx6C,OAAS,IAAIijC,GAAc,EAAKE,aAAc,EAAKC,eACpD,EAAKhxC,cAAe,EAAKkxC,kBAAmB,EAAKC,aAAc,EAAKC,UACpE,EAAKC,aAAc,EAAKC,UAC5B,EAAK5a,KAAO,IAAIoc,GAAY,EAAG,EAAKE,YACpC,EAAKrb,QAAU,IAAI6b,GAAY,EAAK5lC,OAAQ,EAAK5N,eACjD,EAAKvB,MAAQ,IAAIs1C,GAAU,QAC3B,EAAKhqC,SAAW,IAAIuqC,GAAS,IAAKt5C,SAAU,EAAKyD,OACjD,EAAK4L,SAAW,IAAI4qC,GAAgB,EAAKC,kBACzC,EAAKx9B,UAAY,IAAI29B,GnFtDzBtnB,GAAiB,cAAoBnL,GACrCmL,GAAiB,SAAezJ,GAChCyJ,GAAiB,OAAavK,GAC9BuK,GAAiB,OAAa/J,GAC9B+J,GAAiB,QAAc9J,GAC/B8J,GAAiB,MAAY4a,GAC7B5a,GAAiB,eAAqB7C,GAQtC3I,GAAiB,OAAa4I,GAC9B5I,GAAiB,SAAeoJ,GAChCpJ,GAAiB,QAAcsJ,GAC/BtJ,GAAiB,QAAc4J,GAC/B5J,GAAiB,SAAe8J,GAChC9J,GAAiB,OAAaiK,GAC9BjK,GAAiB,MAAYqK,GAC7BrK,GAAiB,OAAawK,GAC9BxK,GAAiB,MAAY4K,GAC7B5K,GAAiB,OAAa8K,GAC9B9K,GAAiB,OAAagL,GAC9BhL,GAAiB,OAAamL,GAC9BnL,GAAiB,OAAaqL,GmFiC1B,EAAKy6B,mBAAqB,IAAItP,QAAmBthD,EAAW,8BACxDzB,OAAOsS,OAAQ,EAAK6wC,WAGxBnjD,OAAO0R,iBAAiB,WAAU,SAACrC,GAE/B,IAAI8G,GADJ9G,EAAIA,GAAKrP,OAAOgvB,OACJC,OAAS5f,EAAE6f,QACnBC,EAAO9f,EAAE+f,QAAU/f,EAAE+f,QAAmB,KAARjZ,EAEvB,KAARA,GAAcgZ,IACf9f,EAAEggB,iBACFvlB,QAAQC,IAAI,YACZ,EAAKw6C,gBAEI,KAARpuC,GAAcgZ,IACf9f,EAAEggB,iBACFvlB,QAAQC,IAAI,YACZ,EAAKuoD,oBAAmB,IAEf,KAARn8C,GAAcgZ,IACf9f,EAAEggB,iBACFvlB,QAAQC,IAAI,YACZ,EAAKuoD,oBAAmB,IAEf,KAARn8C,GAAcgZ,IACf9f,EAAEggB,iBACFvlB,QAAQC,IAAI,YACZ,EAAKwoD,sBAnEE,EA0EnBxpD,YAAc,WACV,EAAK2G,QAAQ3G,YAAY,CACrBf,OAAO,eACP0D,WAAY,CACRS,aAAc,CACVxJ,OAAO,EACPgJ,OAAQ,EAAK6mD,oBAEjBpmD,YAAa,CACTzJ,OAAO,EACPgJ,OAAQ,EAAK8mD,mBAEjBpmD,aAAc,CACV1J,OAAO,EACPgJ,OAAQ,EAAK2mD,uBAKzB,EAAK16C,OAAO2jC,WAAW,EAAK7rC,UA7Fb,EA4GnBgjD,eAAiB,SAACl7C,GACd,EAAKm7C,eAAen7C,EAAKnO,YA7GV,EAgHnB85C,UAAY,SAAC3rC,EAAMosC,GACfF,GAAiBP,UAAU3rC,EAAMosC,EAAjC,iBAjHe,EAoHnB37C,YAAc,SAACuP,EAAMzP,GACjB,EAAKsqD,mBAAmB7O,KAAKhsC,EAAMzP,IArHpB,EAwHnBK,WAAa,SAACE,EAASP,GACnBA,GAAYA,IACZ,EAAK2H,QAAQtH,WAAWE,IA1HT,EA6HnBsqD,YAAc,WACV,IAAIrpD,EAAW9I,EAAYoyD,IACvBtnD,EAAmB9K,EAAYqyD,IAEnC,EAAKC,uBAAuBxnD,GAC5B,EAAKynD,kBAAkBzpD,IAlIR,EAqInBypD,kBAAoB,SAACzpD,GACZA,IACDA,EAAW9I,EAAYoyD,KAG3B,EAAKnjD,QAAQpG,YAAYC,GAAU,WAC/B,IAAIhB,EAAWgB,EAASE,SAAS9F,OAAOM,KAAKsF,EAASE,UAAU,IAChE,EAAKiG,QAAQlH,YAAYD,EAAS7H,MAAMkI,QAAQ,EAAO,EAAKiE,mBAIhE,IAAItB,EAAmB9K,EAAYqyD,IACnC,EAAKC,uBAAuBxnD,IAjJb,EAoJnB1B,eAAiB,SAACH,GACd,EAAKmC,kBAAoB,IAAIlC,EAAkBD,EAAtB,oBACrBjI,EAAW,EAAKmL,kBAChB,EAAKC,eAAgB,EAAKC,WAvJf,EA0JnBimD,uBAAyB,SAACxnD,GACtB,EAAK5C,SAAS,CAAC4C,sBA3JA,EA8JnBghD,aAAe,SAAC3jD,EAAQY,IACfA,GAAS,EAAKkG,QAAQnH,SAAS7H,MAAMkI,SAAWA,KAIrDkB,QAAQC,IAAI,gBACZ,EAAKC,cAAcC,QAAQC,UAAS,GAAM,WACtC,EAAKzB,MAAMC,QAEX,EAAKgH,QAAQlH,iBAAY/G,GAAY,WACjC,IAAI8G,EAAW,EAAKmH,QAAQnG,SAASE,SAASb,GAC9C,EAAK8G,QAAQlH,YAAYD,WAzKlB,EA8KnB0qD,cAAgB,SAAC3qD,GACb,EAAKK,SAAS,CAACL,aA/KA,EAkLnB4qD,aAAe,SAACC,GACZ,EAAKxqD,SAAS,CAACwqD,UAAWA,GAAa,OAnLxB,EA0LnB1B,iBAAmB,SAACpoD,GAChB,EAAKpB,YAAY,CACbd,KAAM,SACNe,KAAM,iBACNC,OAAQ,CAACkB,KACV,SAACmO,GACA,EAAKm7C,eAAen7C,EAAK7H,YAhMd,EAoMnBgjD,eAAiB,SAACtpD,GACdrE,SAASouD,gBAAgB1sD,MAAM2sD,YAAY,eAAgBhqD,GAE3D,EAAKqG,QAAQtG,aAAaC,EAAW,EAAKuD,oBAvM3B,EA2MnBD,mBAAqB,SAACvH,EAAOo+B,EAAmBn4B,GACxC,EAAKrB,cAAcC,UACnB7E,EAAQ,EAAK4E,cAAcC,QAAQ8E,SAAQ,GAAO3J,OAEtD,EAAK+6B,aAAa/6B,EAAO,EAAK4E,cAAcC,UA/M7B,EAkNnBqpD,uBAAyB,SAACluD,EAAOo+B,EAAmBn4B,GAChD,EAAKrB,cAAcC,QAAQvJ,MAAM4sB,aAAa6G,kBAC9C,EAAKnqB,cAAcC,QAAQ0C,mBAAmBvH,EAAOo+B,EAAmBn4B,IApNzD,EAuNnBuB,kBAAoB,SAAC2mD,GACZ,EAAKvpD,cAAcC,WAEvB,EAAKupD,aAAe,EAAKxpD,cAAcC,QAAQsW,gBAAe,GAAM,GAAM,IAC1E,EAAKizC,aAAe,EAAK57C,OAAOC,eACjC,EAAK7N,cAAcC,QAAQi4B,uBA5NZ,EA+NnBsxB,UAAY,WACR,OAAO,EAAK9jD,QAAQpH,SAhOL,EAmOnBuE,eAAiB,SAACwC,GACT,EAAKrF,cAAcC,UAExB,EAAKD,cAAcC,QAAQsW,gBAAe,GAAM,GAAM,IACrD,EAAKizC,aAAe,EAAK57C,OAAOC,eACjC,EAAK7N,cAAcC,QAAQi4B,qBAC3B,EAAKl4B,cAAcC,QAAQuY,eAE3B,EAAK1V,SAASuC,KA3OC,EA8OnBokD,gBAAkB,WACd,OAAO,EAAKtY,aAAalxC,QAAQ0B,UA/OlB,EAkPnB44C,aAAe,WACX,EAAK70C,QAAQxE,oBAAoB,EAAKwE,QAAQxG,iBAAiB,WAC3D,EAAK0O,OAAOC,eACZ,EAAK7N,cAAcC,QAAQsW,oBAM/B,EAAKmzC,mBACL,EAAK1pD,cAAcC,QAAQuY,gBA5PZ,EA+PnB2d,aAAe,SAAC/6B,EAAOyxC,EAASrtC,GAC5B,IAAImG,EAAS,EAAK9D,kBAAkB+D,sBAAsBxK,GAE1D,EAAK0H,cAASrL,EAAW2D,GAEzB0E,QAAQC,IAAI,eAAgB3E,GAC5B,EAAKsK,QAAQ9D,iBAAiBxG,IAE1BuK,EAAOR,SAAW3F,IAClB,EAAK8pD,uBAAuBluD,EAAOuK,EAAOE,sBACtC,EAAKhE,kBAAkBoD,wBAzQhB,EA6QnBnC,SAAW,SAACuC,EAAGjK,GACN,EAAK4E,cAAcC,UAGxB,EAAK0pD,UAAUtkD,EAAGjK,GAClB,EAAKwuD,UAAUvkD,EAAGjK,KAlRH,EAqRnBuuD,UAAYnzB,KAAS,SAACnxB,EAAGjK,GAChBA,IACDA,EAAQ,EAAK4E,cAAcC,QAAQ8E,SAAQ,GAAO,GAAM3J,OAC5DJ,SAASouD,gBAAgB1sD,MAAM2sD,YAAY,aAAcjuD,EAAQpF,OAAOiJ,cACzE,KAzRgB,EA2RnB2qD,UAAYvX,MAAS,SAAChtC,EAAGjK,GAChBA,IACDA,EAAQ,EAAK4E,cAAcC,QAAQ8E,SAAQ,GAAO,GAAM3J,OAE5DJ,SAASouD,gBAAgB1sD,MAAM2sD,YAAY,aAAcjuD,EAAQpF,OAAOiJ,cACzE,KAhSgB,EAkSnB8gC,kBAAoB,WACZ,EAAKypB,cACT,EAAKpY,UAAUnxC,QAAQsyC,UAAS,GAChC,EAAKlB,aAAapxC,QAAQsyC,UAAS,GACnC,EAAKrB,kBAAkBjxC,QAAQsyC,UAAS,KAtSzB,EAySnBvQ,iBAAmB,WACX,EAAKwnB,cACT,EAAKpY,UAAUnxC,QAAQsyC,UAAS,GAChC,EAAKlB,aAAapxC,QAAQsyC,UAAS,GACnC,EAAKrB,kBAAkBjxC,QAAQsyC,UAAS,KA7SzB,EAgTnBmX,iBAAmB,SAACrkD,IACf,EAAKmkD,aAAe,EAAKxpD,cAAcC,QAAQsW,gBAAe,GAAM,GAAM,IAC1E,EAAKizC,aAAc,EAAK57C,OAAOC,eAEhC,EAAK7N,cAAcC,QAAQi4B,sBApTZ,EAuTnB1f,aAAe,WACX,GAAK,EAAKxY,cAAcC,QAAxB,CAGA,IAAIw7C,EAAS,GAqBTn7C,EAAgB,CAChBC,QAAS,EAAKP,cAAcC,QAAQvJ,MAAM6J,QAC1C7J,MAAO,EAAKsJ,cAAcC,QAAQO,cAA3B,eAA6C,EAAKR,cAAcC,QAAQvJ,QAC/E+J,OAAQ,GAGZg7C,EAAOh4C,KAzBa,SAAhBomD,EAAiBlpD,EAAMC,GACvB,GAAKD,GAASA,EAAKE,QAGnB,MAAO,CACH4H,GAAI7H,EAAUlK,MAAM+R,GACpB7H,UAAWA,EACX+0B,aAAch8B,OAAOM,KAAK0G,EAAKG,gBAAgB,kBAAkBC,KAAI,SAAAC,GACjE,IAAIJ,EAAYD,EAAKG,gBAAgB,iBAAiBE,GACtD,OAAO6oD,EACHlpD,EAAKM,aAAaD,GAASf,QAC3BW,MAEL2G,QAAO,SAAAuiD,GACN,OAAOA,MAWPD,CAAc,EAAK7pD,cAAcC,QAASK,IAEtD,EAAK2nD,UAAUhoD,QAAQu7C,UAAUC,KAxVlB,EA2VnBsO,WAAa,WACT,EAAK9B,UAAUhoD,QAAQoQ,QA5VR,EA+VnB25C,YAAc,WACV,EAAK/B,UAAUhoD,QAAQma,SAhWR,EAmWnBouC,mBAAqB,SAAChpD,EAAO7G,GACzB,OAAc,IAAVA,GACA,EAAKuvD,gBAAgBjoD,QAAQoQ,QACtB,GAEJ,EAAK63C,gBAAgBjoD,QAAQ0B,OAAOnC,IAxW5B,EA2WnBipD,kBAAoB,SAACjpD,EAAO7G,GACxB,OAAc,IAAVA,GACA,EAAKwvD,eAAeloD,QAAQoQ,QACrB,GAEJ,EAAK83C,eAAeloD,QAAQ0B,OAAOnC,IAhX3B,EAmXnB8oD,mBAAqB,SAAC9oD,EAAO7G,GACzB,OAAc,IAAVA,GACA,EAAKskB,gBAAgBhd,QAAQoQ,QACtB,GAEJ,EAAK4M,gBAAgBhd,QAAQ0B,OAAOnC,IAxX5B,EA4XnByqD,gBAAkB,WACd,MAAO,CACH1pD,QAAS,WACT7J,MAAO,EAAKsJ,cAAcC,QAAQO,cAA3B,eAA6C,EAAKR,cAAcC,QAAQvJ,UA/XpE,EAmYnBwzD,gBAAkB,WACd,IAAI3qD,EAAW,EAAKmG,QAAQnG,UAAY,CAACE,SAAU,IAInD,OAFAF,EAASE,SAASkuC,eAAY,EAAKsc,kBAE5B1qD,GAxYQ,EA2YnBgpD,eAAiB,WACb,IAAIhpD,EAAW,EAAK2qD,kBAGdtG,EAAO/3C,KAAKC,UAAUvM,GACtB4qD,EAAO,IAAIC,KAAK,CAACxG,GAAM,CAACzmD,KAAK,qBAC7BktD,EAAOC,IAAIC,gBAAgBJ,GAC3BvrC,EAAO5jB,SAASE,cAAc,KACpC0jB,EAAKyrC,KAAOA,EACZzrC,EAAK4rC,SAAWC,gBAChBzvD,SAASS,KAAKC,YAAYkjB,GAC1BA,EAAK8rC,QACL1vD,SAASS,KAAKI,YAAY+iB,IAvZX,EA0ZnB+rC,YAAc,SAAC5sD,GAEX,OADAA,GAAYA,EAAS,EAAK2H,QAAQnG,UAC3B,EAAKmG,QAAQnG,UA1ZpB,EAAK5G,MAAQ,CACT2F,SAAS,GAGb,EAAKy2B,KAAKr+B,GANK,E,gEAgGC,IAAD,OACf8L,KAAKzD,cACLyD,KAAKvE,YAAY,CACbd,KAAM,SACNe,KAAM,kBACNC,OAAQ,KACT,SAACqP,GACA1N,QAAQC,IAAI,mCAAoCyN,GAChD,EAAKk7C,eAAel7C,EAAK7H,a,6CA+E7BnD,KAAKX,kBAAkB+oD,Y,+BAwOjB,IAAD,OAEL,OACQ,yBAAK5+C,UAAU,qBAAqB64B,cAAe,SAACx/B,GAChDA,EAAEggB,iBACFhgB,EAAE4rB,qBAGGzuB,KAAKgnD,aACN,yBAAKx9C,UAAU,wBACX,kBAAC,GAAD,CACI6+C,oBAAqBroD,KAAKgmD,mBAC1BhB,iBAAkBhlD,KAAKinD,gBACvBqB,oBAAqBtoD,KAAK8lD,mBAC1ByC,mBAAoBvoD,KAAKimD,kBACzBhB,iBAAkBjlD,KAAKilD,oBAK/BjlD,KAAKgnD,aACL,yBAAKx9C,UAAU,wBACX,kBAAC,GAAD,CACI6+C,oBAAqBroD,KAAKgmD,mBAC1BhB,iBAAkBhlD,KAAKinD,gBACvBqB,oBAAqBtoD,KAAK8lD,mBAC1ByC,mBAAoBvoD,KAAKimD,kBACzBhB,iBAAkBjlD,KAAKilD,oBAInC,yBAAKz7C,UAAU,0BAENxJ,KAAKgnD,aACN,oCACI,kBAAC,GAAD,CACIx5C,IAAKxN,KAAKo1B,gBAEd,kBAAC,GAAD,CACI5nB,IAAKxN,KAAKwwC,aAEd,kBAAC,GAAD,CACIhjC,IAAKxN,KAAK0yC,mBAEd,kBAAC,GAAD,CACIllC,IAAKxN,KAAKwuC,iBAGd,kBAAC,GAAD,CACIhhC,IAAKxN,KAAK2lD,eACVnqD,OAAQwE,KACR+/C,aAAc//C,KAAK+/C,gBAM3B//C,KAAKkD,QAAQnH,UACb,yBACIyN,UAAU,2BACVtP,MAAO,CAEHoQ,QAAS,UAEb+jB,SAAUruB,KAAKknD,iBACf7kB,cAAe,SAACx/B,GACZA,EAAE4rB,kBACF5rB,EAAEggB,mBAGN,yBACIrZ,UAAU,gCACVtP,MAAO,CACHzE,OAAQ8C,KAEZmR,QAAS,WACL,EAAKlM,cAAcC,QAAQC,UAAS,MAG5C,yBAAK8L,UAAU,0BAA0BtP,MAAO,CAC5CsR,UAAU,GAAD,OAAK,EAAExL,KAAKkD,QAAQrG,UAApB,QAET,kBAAC,GAAD,eACI8M,IAAK3J,KAAKkD,QAAQnH,SAAS7H,MAAMkI,OACjC6J,GAAG,OACHwQ,OAAQzW,KAAKxC,cACb6V,QAASrT,KAAKxC,cACd6B,kBAAmBW,KAAKX,kBACxBkI,SAAUvH,KAAKuH,SACfK,SAAU5H,KAAK4H,SACfwD,OAAQpL,KAAKoL,OACb8oB,KAAMl0B,KAAKk0B,KACXgB,MAAOl1B,KAAKuuC,aACZtyC,MAAO+D,KAAK/D,MACZ4L,SAAU7H,KAAK6H,SACfutB,cAAep1B,KAAKo1B,cACpBlgB,UAAWlV,KAAKkV,UAChBigB,QAASn1B,KAAKm1B,QACd1zB,WAAYzB,KAAKyB,WACjBkyB,aAAc3zB,KAAK2zB,aACnB4J,kBAAmBv9B,KAAKu9B,kBACxBiC,iBAAkBx/B,KAAKw/B,iBACvBhkC,QAASwE,KAAKgnD,aAAehnD,KAC7BnB,iBAAkBmB,KAAK7J,MAAM0I,kBACzBmB,KAAKkD,QAAQnH,SAAS7H,MAtB9B,CAuBIqL,SAAUS,KAAKkD,QAAQ3D,eAOlCS,KAAKgnD,aACN,qCAEShnD,KAAKkD,QAAQnH,UACd,8BAKJ,kBAAC,GAAD,CACIyR,IAAKxN,KAAK8uC,WAGd,kBAAC,GAAD,CACIthC,IAAKxN,KAAK6uC,eAGd,kBAAC,GAAD,CACIrhC,IAAKxN,KAAK4uC,YAIV5uC,KAAKkD,QAAQnH,UACb,kBAAC,GAAD,CACIyR,IAAKxN,KAAKylD,UACVxpD,MAAO+D,KAAK/D,QAKhB+D,KAAKkD,QAAQnG,UACbiD,KAAKkD,QAAQnH,UACb,kBAAC,GAAD,CACIyR,IAAKxN,KAAKya,gBACVjf,OAAQwE,OAIhB,kBAAC,GAAD,CACIwN,IAAKxN,KAAK0lD,gBACV3mD,iBAAkBiB,KAAK7J,MAAM4I,iBAC7BmyC,QAASlxC,KAAKxC,cACdhC,OAAQwE,OAGZ,kBAAC,GAAD,CACIwN,IAAKxN,KAAK2uC,aACVoJ,aAAc/3C,KAAK+3C,eAEvB,kBAAC,GAAD,CACIvqC,IAAKxN,KAAK0uC,2B,GApkBFvzC,IAAM+E,WAA7BslD,GACV3qC,YAAc3f,EClCzBqe,IAASf,OACL,kBAAC,EAAD,KACI,kBAAC,GAAD,OAENhgB,SAAS8gB,eAAe,SzJwHpB,kBAAmBkvC,WACrBA,UAAUC,cAAcC,MACrBvH,MAAK,SAAAwH,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxrD,QAAQwrD,MAAMA,EAAMC,a,6D0JzI5B11D,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.d7cb1d01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paint.b4611be4.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.4ffb5b5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-left.0a5b083d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-center.c06baa72.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-right.47dacf61.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-top.a4e81be5.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-middle.18bded08.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-bottom.b15149df.svg\";","module.exports = __webpack_public_path__ + \"static/media/chain.91ca2215.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlink.91af3919.svg\";","module.exports = __webpack_public_path__ + \"static/media/more.7e1c1c4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.910508a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/minimize.d1b14794.svg\";","module.exports = __webpack_public_path__ + \"static/media/maximize.c16a073e.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {Resizable} from \"re-resizable\";\r\nimport css from 'dom-css';\r\nimport {exist, getFromData, getSortedBreakPoints, setData} from \"./BreakPointManager\";\r\nimport debounce from 'lodash.debounce';\r\n// import {css, StyleSheet} from 'aphrodite'\r\n\r\nlet CalculateLayout = (griddatas, layoutType, parentSize, dir, compactType, scrollType, snap\r\n                       , breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    parentGriddata = parentGriddata || getDefaultChildgriddata(breakpointdata);\r\n\r\n    let dummy;\r\n    let childContainers = griddatas.map((griddata) => {\r\n        if (griddata.id === undefined)\r\n            console.error(\"direct child must have a id props\");\r\n\r\n        let result = {\r\n            griddata: griddata,\r\n        };\r\n\r\n        result.griddata.id = griddata.id;\r\n        result.isContainer = griddata.isContainer;\r\n        result.selected = griddata.selected;\r\n        result.resizable = griddata.resizable;\r\n        result.draggable = griddata.draggable;\r\n        result.dragging = griddata.dragging;\r\n\r\n        result.w = getPxFromPercent(\r\n            getFromData(result.griddata, \"w\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.h = getPxFromPercent(\r\n            getFromData(result.griddata, \"h\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.x = getPxFromPercent(\r\n            getFromData(result.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.y = getPxFromPercent(\r\n            getFromData(result.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.rotate = getFromData(result.griddata, \"rotate\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.absolute = getFromData(result.griddata, \"absolute\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.fix = getFromData(result.griddata, \"fix\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.zIndex = getFromData(result.griddata, \"zIndex\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        if (result.griddata.dragging) {\r\n            dummy = {};\r\n            dummy.griddata = cloneObject(result.griddata);\r\n            // dummy.griddata.dragging = false;\r\n            dummy.griddata.id = \"dummy\";\r\n            dummy.x = result.x;\r\n            dummy.y = result.y;\r\n            dummy.w = result.w;\r\n            dummy.h = result.h;\r\n            dummy.griddata.draggable = false;\r\n            dummy.griddata.resizable = false;\r\n            dummy.absolute = result.absolute;\r\n            dummy.fix = result.fix;\r\n            dummy.zIndex = result.zIndex;\r\n            dummy.dragging = result.dragging;\r\n\r\n            dummy.isDummy = true;\r\n        }\r\n\r\n        return result;\r\n    });\r\n\r\n    if (!childContainers)\r\n        childContainers = [];\r\n\r\n    if (dummy)\r\n        childContainers.push(dummy);\r\n\r\n    sortChilds(childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints);\r\n\r\n    let layouts = [];\r\n    let layoutContainers = [];\r\n\r\n    let maxHeight = scatter(childContainers, layoutContainers, layouts, layoutType, parentSize\r\n        , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n    return {childContainers: childContainers, layouts: layouts, maxHeight: maxHeight};\r\n};\r\n\r\nlet getDummy = (w, h) => {\r\n    return (\r\n        <Resizable\r\n            enable={false}\r\n            size={{\r\n                width: w,\r\n                height: h,\r\n            }}\r\n        >\r\n            <div style={{\r\n                backgroundColor: \"rgba(201, 76, 76, 0.3)\",\r\n                width: \"100%\",\r\n                height: \"100%\"\r\n            }}>\r\n            </div>\r\n        </Resizable>\r\n    );\r\n};\r\n\r\nlet scatter = (childContainers, layoutContainers, layouts, layoutType, parentSize\r\n               , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let notCompareChilds = [];\r\n    let maxHeight = 0;\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        if (childContainer.griddata.dragging) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (childContainer.absolute || childContainer.fix) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (layoutType === \"free\") {\r\n            maxHeight = scatterFree(childContainer, childContainers, layoutContainers\r\n                , parentSize, compactType, scrollType, snap, maxHeight, breakpointdata\r\n                , hasOwnBreakPoints, parentGriddata);\r\n        }\r\n\r\n        layoutContainers.push(childContainer);\r\n    }\r\n\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        layouts.push(childContainer.griddata);\r\n    }\r\n\r\n    notCompareChilds.forEach(childContainer => {\r\n        if (childContainer.absolute)\r\n            fixAbsoluteChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n        if (childContainer.fix)\r\n            fixFixChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n        setChildPosition(childContainer, {x:childContainer.x, y:childContainer.y}\r\n             , parentSize, breakpointdata, hasOwnBreakPoints);\r\n\r\n        layoutContainers.push(childContainer);\r\n        layouts.push(childContainer.griddata);\r\n    });\r\n\r\n    return maxHeight;\r\n};\r\n\r\nlet fixFixChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    if (left)\r\n        left += parentSize.scrollLeft;\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    if (top)\r\n        top += parentSize.scrollTop;\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    if (right)\r\n        right += (parentSize.x - parentSize.clientWidth - parentSize.scrollLeft);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n    if (bottom)\r\n        bottom += (parentSize.y - parentSize.clientHeight - parentSize.scrollTop);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet fixAbsoluteChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet scatterFree = (childContainer, childContainers, layoutContainers, parentSize, compactType, scrollType\r\n                   , snap, maxHeight, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let autoWidth =\r\n        getFromData(parentGriddata, \"autoWidth\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    if (!autoWidth) {\r\n        if (childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n        }\r\n    }\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.x > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.x -= snap.x;\r\n        }\r\n    }\r\n    if (compactType === \"vertical\")\r\n    {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.y > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.y -= snap.y;\r\n        }\r\n    }\r\n\r\n    childContainer.x = Math.max(0, childContainer.x);\r\n    childContainer.y = Math.max(0, childContainer.y);\r\n\r\n    let collide;\r\n    while (checkCollide(childContainer, layoutContainers)) {\r\n        collide = checkCollide(childContainer, layoutContainers);\r\n        if (compactType === \"horizontal\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.x + collide.w, \"x\");\r\n        }\r\n        if (compactType === \"vertical\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.y + collide.h, \"y\");\r\n        }\r\n        // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\r\n        if ((compactType === \"horizontal\") &&\r\n            childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n            childContainer.y++;\r\n        }\r\n    }\r\n\r\n    if (childContainer.y + childContainer.h > maxHeight)\r\n        maxHeight = childContainer.y + childContainer.h;\r\n\r\n    return maxHeight;\r\n};\r\n\r\nconst heightWidth = { x: \"w\", y: \"h\" };\r\nlet resolveCompactionCollision = (layout, item, moveToCoord, axis) => {\r\n    const sizeProp = heightWidth[axis];\r\n    item[axis] += 1;\r\n    const itemIndex = layout\r\n        .map(layoutItem => {\r\n            return layoutItem.griddata.id;\r\n        })\r\n        .indexOf(item.griddata.id);\r\n\r\n    // Go through each item we collide with.\r\n    for (let i = itemIndex + 1; i < layout.length; i++) {\r\n        const otherItem = layout[i];\r\n        // Ignore static items\r\n        if (otherItem.static || otherItem.griddata.dragging) continue;\r\n\r\n        // Optimization: we can break early if we know we're past this el\r\n        // We can do this b/c it's a sorted layout\r\n        if (otherItem.y > item.y + item.h) break;\r\n\r\n        if (collide(item, otherItem)) {\r\n            resolveCompactionCollision(\r\n                layout,\r\n                otherItem,\r\n                moveToCoord + item[sizeProp],\r\n                axis\r\n            );\r\n        }\r\n    }\r\n\r\n    item[axis] = moveToCoord;\r\n};\r\n\r\nlet bottom = (layoutContainers) => {\r\n    let max = 0,\r\n        bottomY;\r\n    for (let i = 0, len = layoutContainers.length; i < len; i++) {\r\n        bottomY = layoutContainers[i].y + layoutContainers[i].h;\r\n        if (bottomY > max) max = bottomY;\r\n    }\r\n    return max;\r\n};\r\n\r\nlet checkCollide = (childContainer, layoutContainers) => {\r\n    for (let i = 0; i < layoutContainers.length; i++) {\r\n        if (collide(childContainer, layoutContainers[i]))\r\n            return layoutContainers[i];\r\n    }\r\n    return false;\r\n};\r\n\r\nlet collide = (child1, child2) => {\r\n    if (child1.griddata.id === child2.griddata.id) return false; // same element\r\n    if (child1.x + child1.w <= child2.x) return false; // l1 is left of l2\r\n    if (child1.x >= child2.x + child2.w) return false; // l1 is right of l2\r\n    if (child1.y + child1.h <= child2.y) return false; // l1 is above l2\r\n    if (child1.y >= child2.y + child2.h) return false; // l1 is below l2\r\n    return true; // boxes overlap\r\n};\r\n\r\nlet sortChilds = (childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints) => {\r\n    childContainers.forEach(childContainer => {\r\n            childContainer.x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.x);\r\n            childContainer.y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.y);\r\n    });\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainers.sort((a, b) => {\r\n            if (a.x > b.x || (a.x === b.x && a.y > b.y)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    } else {\r\n        childContainers.sort((a, b) => {\r\n            if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    }\r\n};\r\n\r\nlet getPxFromPercent = (val, parentVal) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (getUnit(val) === \"%\") {\r\n            let percent = parseFloat(val.replace(\"%\", \"\")) / 100;\r\n            return parentVal * percent;\r\n        }\r\n        return val;\r\n    } else {\r\n        return val;\r\n    }\r\n};\r\n\r\nlet getUnit = (val) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (val.includes(\"%\"))\r\n            return \"%\";\r\n    }\r\n    return \"\";\r\n};\r\n\r\nlet hasDir = (dir, target) => {\r\n    return dir.toLowerCase().includes(target);\r\n};\r\n\r\nlet setChildSize = (childContainer, newSize, parentSize, breakpointdata, hasOwnBreakPoints\r\n                    , dir, delta) => {\r\n    setData(childContainer.griddata, \"w\", newSize.w, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.w\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"w\",\r\n            (getFromData(childContainer.griddata, \"w\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.w\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"h\", newSize.h, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.h\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"h\",\r\n            (getFromData(childContainer.griddata, \"h\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.h\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    if (delta) {\r\n        if (hasDir(dir, \"right\") || hasDir(dir, \"left\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            if (hasDir(dir, \"right\"))\r\n                x = x + delta.width / 2;\r\n            else\r\n                x = x - delta.width / 2;\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n        if (hasDir(dir, \"top\") || hasDir(dir, \"bottom\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n            if (hasDir(dir, \"bottom\"))\r\n                y = y + delta.height / 2;\r\n            else\r\n                y = y - delta.height / 2;\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n    }\r\n};\r\n\r\nlet setChildPosition = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints) => {\r\n    setData(childContainer.griddata, \"x\", newPosition.x, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.x\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"x\",\r\n            (getFromData(childContainer.griddata, \"x\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.x\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"y\", newPosition.y, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.y\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"y\",\r\n            (getFromData(childContainer.griddata, \"y\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.y\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n};\r\n\r\n/*let updateConstraints = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints\r\n                        , parentGridSystem) =>\r\n{\r\n    if (!parentGridSystem)\r\n        parentGridSystem = getDefaultGridSystem();\r\n};*/\r\n\r\n/*let getDefaultGridSystem = () => {\r\n    return {\r\n        xNumber: 1,\r\n        yNumber: 1,\r\n        widths: [100],\r\n        widthUnits: [\"%\"],\r\n        heights: [100],\r\n        heightUnits: [\"%\"]\r\n    }\r\n};*/\r\n\r\nlet fixGriddata = (griddata, breakpointdata) => {\r\n    if (!griddata)\r\n        return;\r\n\r\n    if (griddata.initialized) {\r\n        let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            let name = sortedBreakPoints[i].name;\r\n\r\n            if (!griddata[name])\r\n                continue;\r\n\r\n            if (!griddata[name].units)\r\n                griddata[name].units = {};\r\n\r\n            griddata[name].units.x = getUnit(griddata[name].x);\r\n            griddata[name].units.y = getUnit(griddata[name].y);\r\n            griddata[name].units.w = getUnit(griddata[name].w);\r\n            griddata[name].units.h = getUnit(griddata[name].h);\r\n        }\r\n    } else {\r\n        if (!griddata.units)\r\n            griddata.units = {};\r\n\r\n        griddata.units.x = getUnit(griddata.x);\r\n        griddata.units.y = getUnit(griddata.y);\r\n        griddata.units.w = getUnit(griddata.w);\r\n        griddata.units.h = getUnit(griddata.h);\r\n\r\n    }\r\n};\r\n\r\nlet initGriddata = (griddataProp, breakpointdata) => {\r\n    if (griddataProp && griddataProp.initialized)\r\n        return griddataProp;\r\n\r\n    if (!griddataProp)\r\n        griddataProp = {};\r\n\r\n    let clone = cloneObject(griddataProp);\r\n\r\n    for (let props in griddataProp) delete griddataProp[props];\r\n\r\n    let griddata = getDefaultChildgriddata(breakpointdata);\r\n    if (clone.bpData) {\r\n        for (let props in griddata.bpData) {\r\n            if (exist(props, breakpointdata)) {\r\n                    for(let props2 in clone.bpData) {\r\n                        griddata.bpData[props][props2] = cloneObject(clone.bpData[props2]);\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    for (let prop in clone) {\r\n        if (clone.hasOwnProperty(prop) && prop !== \"bpData\") {\r\n            griddata[prop] = clone[prop];\r\n        }\r\n    }\r\n\r\n    for(let k in griddata) griddataProp[k]=griddata[k];\r\n\r\n    return griddataProp;\r\n};\r\n\r\nlet getDefaultChildgriddata = (breakpointdata) => {\r\n    let sample = {\r\n        x: \"50%\",\r\n        y: \"50%\",\r\n        w: \"100%\",\r\n        h: \"100%\",\r\n        minW: undefined,\r\n        maxW: undefined,\r\n        minH: undefined,\r\n        maxH: undefined,\r\n        constraints: {\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined,\r\n        },\r\n        margin: {\r\n            all: undefined,\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined\r\n        },\r\n        units: {\r\n            x: \"%\",\r\n            y: \"%\",\r\n            w: \"%\",\r\n            h: \"%\",\r\n        },\r\n        scrollType: \"vertical\",\r\n        absolute: true,\r\n        fix: false,\r\n        autoHeight: false,\r\n        autoWidth: false,\r\n        overflowData: {\r\n            state: 'hide',\r\n            overflowY: 'scroll'\r\n        },\r\n    };\r\n    let griddata = {\r\n        initialized: true,\r\n        resizable: true,\r\n        draggable: true,\r\n        hasOwnBreakPoints: false,\r\n        isContainer: false,\r\n        autoDock: true,\r\n        bpData: {}\r\n    };\r\n    let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n    griddata.bpData[sortedBreakPoints[0].name] = cloneObject(sample);\r\n    return griddata;\r\n};\r\n\r\nlet cloneObject = (obj) => {\r\n    if (obj instanceof Array) {\r\n        let copy = [];\r\n        for (let i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = cloneObject(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n    if (obj instanceof Object) {\r\n        if (null == obj) return obj;\r\n        let copy = {};\r\n        for (let attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = cloneObject(obj[attr]);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nlet shallowEqual = (objA, objB) => {\r\n    if (objA === objB) {\r\n        return true;\r\n    }\r\n\r\n    if (typeof objA !== 'object' || objA === null ||\r\n        typeof objB !== 'object' || objB === null) {\r\n        return false;\r\n    }\r\n\r\n    let keysA = Object.keys(objA);\r\n    let keysB = Object.keys(objB);\r\n\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n\r\n    // Test for A's keys different from B.\r\n    for (let i = 0; i < keysA.length; i++) {\r\n        if (!objB.hasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nfunction throttleDebounce(fn, ms) {\r\n    let deTimer;\r\n    let dontCall;\r\n\r\n    return _ => {\r\n        let args = arguments;\r\n\r\n        if (!dontCall) {\r\n            dontCall = true;\r\n            fn.apply(this, args);\r\n            setTimeout(_ => {\r\n                dontCall = false;\r\n            }, ms);\r\n        }\r\n\r\n        clearTimeout(deTimer);\r\n        deTimer = setTimeout(_ => {\r\n            fn.apply(this, args);\r\n        }, ms);\r\n    };\r\n}\r\n\r\nfunction throttleDebounce2(fn, threshold) {\r\n    threshold = threshold || 250;\r\n    let last, deferTimer;\r\n\r\n    let db = debounce(fn);\r\n    return function() {\r\n        let now = +new Date, args = arguments;\r\n        if(!last || (last && now < last + threshold)) {\r\n            clearTimeout(deferTimer);\r\n            db.apply(this, args);\r\n            deferTimer = setTimeout(function() {\r\n                last = now;\r\n                fn.apply(this, args);\r\n            }, threshold);\r\n        } else {\r\n            last = now;\r\n            fn.apply(this, args);\r\n        }\r\n    }\r\n}\r\n\r\nlet getOverFlow = (griddata, parent, breakpointdata) => {\r\n    if (!griddata)\r\n        return {x:\"hidden\", y:\"hidden\"};\r\n    let parentSizeX;\r\n    if (parent)\r\n        parentSizeX = parent.getSize().x;\r\n\r\n    let scrollType;\r\n    if (parentSizeX) {\r\n        scrollType = getFromData(griddata, \"scrollType\", parentSizeX\r\n                , griddata? griddata.hasOwnBreakPoints: false, breakpointdata);\r\n    } else {\r\n        scrollType = getFromData(griddata, \"scrollType\", 0\r\n                , false, breakpointdata);\r\n    }\r\n    switch (scrollType) {\r\n        case \"hide\":\r\n            return {x:\"hidden\", y:\"hidden\"};\r\n        case \"show\":\r\n            return {x:\"visible\", y:\"visible\"};\r\n        case \"horizontal\":\r\n            return {x:\"overlay\", y:\"hidden\"};\r\n        case \"vertical\":\r\n            return {x:\"hidden\", y:\"overlay\"};\r\n        case \"both\":\r\n            return {x:\"overlay\", y:\"overlay\"};\r\n        default:\r\n            return {x:\"visible\", y:\"visible\"};\r\n    }\r\n};\r\n\r\nlet scrollbarWidth = false;\r\nlet getScrollbarWidth = () => {\r\n    if (scrollbarWidth !== false) return scrollbarWidth;\r\n    /* istanbul ignore else */\r\n    if (typeof document !== 'undefined') {\r\n        const div = document.createElement('div');\r\n        css(div, {\r\n            width: 100,\r\n            height: 100,\r\n            position: 'absolute',\r\n            top: -9999,\r\n            overflow: 'scroll',\r\n            MsOverflowStyle: 'scrollbar'\r\n        });\r\n        document.body.appendChild(div);\r\n        scrollbarWidth = (div.offsetWidth - div.clientWidth);\r\n        document.body.removeChild(div);\r\n    } else {\r\n        scrollbarWidth = 0;\r\n    }\r\n    return scrollbarWidth || 0;\r\n};\r\n\r\nexport let assignData = (griddata, newData) => {\r\n    if (!griddata)\r\n        griddata = {};\r\n    return Object.assign(griddata, newData || {})\r\n};\r\n\r\nexport function getOffsetLeft( elem )\r\n{\r\n    let offsetLeft = 0;\r\n    do {\r\n        let elemOffsetLeft = elem.offsetLeft;\r\n        if ( !isNaN( elemOffsetLeft ) )\r\n        {\r\n            offsetLeft += elemOffsetLeft;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetLeft;\r\n}\r\n\r\nexport function getOffsetTop( elem )\r\n{\r\n    let offsetTop = 0;\r\n    do {\r\n        let elemOffsetTop = elem.offsetTop;\r\n        if ( !isNaN( elemOffsetTop ) )\r\n        {\r\n            offsetTop += elemOffsetTop;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetTop;\r\n}\r\n\r\n\r\nexport function JSToCSS(JS){\r\n    let cssString = \"\";\r\n    for (let objectKey in JS) {\r\n        cssString += objectKey.replace(/([A-Z])/g, (g) => `-${g[0].toLowerCase()}`) + \": \" + JS[objectKey] + \"; \";\r\n    }\r\n    return cssString;\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n\r\n    styleNode.innerHTML = \"\";\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n};\r\n\r\nexport function appendStyle(style, styleId, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n    let styleNode = document.createElement('style');\r\n    styleNode.setAttribute(\"id\", styleId);\r\n    // styleNode.setAttribute(\"title\", styleId);\r\n\r\n    styleNode.type = 'text/css';\r\n\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n\r\n    document.getElementsByTagName('head')[0].appendChild(styleNode);\r\n};\r\n\r\n/*export function appendStyle(style, styleId, styleName){\r\n    return StyleSheet.create({\r\n        [styleId]: style\r\n    })[styleId];\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    return StyleSheet.create({\r\n        [styleName]: style\r\n    });\r\n};*/\r\n\r\nexport function getScrollParent(node) {\r\n    if (node == null) {\r\n        return null;\r\n    }\r\n\r\n    if (node.scrollHeight > node.clientHeight) {\r\n        return node;\r\n    } else {\r\n        return getScrollParent(node.parentNode);\r\n    }\r\n}\r\n\r\nexport function swapArrayElements(arr, indexA, indexB) {\r\n    let temp = arr[indexA];\r\n    arr[indexA] = arr[indexB];\r\n    arr[indexB] = temp;\r\n}\r\n\r\nexport {CalculateLayout, cloneObject, getPxFromPercent, shallowEqual\r\n        ,throttleDebounce, setChildSize, fixGriddata, setChildPosition\r\n        ,getDefaultChildgriddata, initGriddata, getOverFlow, getScrollbarWidth, getDummy}\r\n","import React from 'react';\r\nimport BreakPointManager from \"../BreakPointManager\";\r\n\r\nexport const EditorContext = React.createContext({});\r\n\r\nexport default class EditorContextProvider extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            update: this.update,\r\n            initContext: this.initContext,\r\n            zoomScale: 1,\r\n            editor: undefined,\r\n            setZoomScale: this.setZoomScale,\r\n            siteData: undefined,\r\n            setSiteData: this.setSiteData,\r\n            pageSize: 1006,\r\n            setPageSize: this.setPageSize,\r\n            setPageSizeWidth: this.setPageSizeWidth,\r\n            pageData: undefined,\r\n            setPageData: this.setPageData,\r\n            inspectorPinned: true,\r\n            setInspectorPinned: this.setInspectorPinned,\r\n            inspectorWidth: 260,\r\n            getInnerWith: this.getInnerWidth,\r\n            setInspectorWidth: this.setInspectorWidth,\r\n            devicePixelRatio: window.devicePixelRatio,\r\n            setDevicePixelRatio: this.setDevicePixelRatio,\r\n            allComponentData: undefined,\r\n            setAllComponentData: this.setAllComponentData,\r\n            rightMenus: {\r\n                addComponent: {\r\n                    state: false,\r\n                },\r\n                pageManager: {\r\n                    state: false,\r\n                },\r\n                themeManager: {\r\n                    state: false,\r\n                }\r\n            },\r\n            setRightMenus: this.setRightMenus,\r\n            toggleRightMenu: this.toggleRightMenu,\r\n            onNewBpAdded: this.onNewBpAdded,\r\n            preview: false,\r\n            setPreview: this.setPreview,\r\n            sendEditCommand: this.sendEditCommand,\r\n            sendPublishCommand: this.sendPublishCommand\r\n        };\r\n    }\r\n\r\n    sendEditCommand = (callback) => {\r\n        this.state.editor.postMessage({\r\n            type: \"Holder\",\r\n            func: \"onEditMode\",\r\n            inputs: []\r\n        });\r\n        this.setPreview(false, callback);\r\n    }\r\n\r\n    sendPublishCommand = () => {\r\n        this.sendEditCommand(() => {\r\n            this.state.editor.postMessage({\r\n                type: \"Holder\",\r\n                func: \"onPublishClick\",\r\n                inputs: []\r\n            });\r\n        });\r\n    }\r\n\r\n    setPreview = (preview, callback) => {\r\n        let pageData = this.state.pageData;\r\n        this.setPageData(undefined, false, () => {\r\n            this.state.editor.idMan.clear();\r\n            this.setState({preview}, () => {\r\n                this.setPageData(pageData.props.pageId, false, callback);\r\n            });\r\n        });\r\n    }\r\n\r\n    update = (callback) => {\r\n        this.setState({reload: true}, callback);\r\n    };\r\n\r\n    initContext = (state, callback) => {\r\n        this.setState(state, callback);\r\n    };\r\n\r\n    getInnerWidth = () => {\r\n        return window.innerWidth - this.state.inspectorPinned ? this.state.inspectorWidth : 0;\r\n    };\r\n\r\n    setZoomScale = (zoomScale, callback) => {\r\n        this.setState({zoomScale}, callback);\r\n    };\r\n\r\n    setSiteData = (siteData, callback) => {\r\n        this.setState({siteData}, callback);\r\n    };\r\n\r\n    setPageData = (pageId, force, callback) => {\r\n        if (this.state.pageData && !force && this.state.pageData.props.pageId === pageId) {\r\n            return;\r\n        }\r\n\r\n        if (!pageId) {\r\n            this.setState({pageData: undefined}, callback);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.pageData) {\r\n            let pageData = this.state.siteData.allPages[pageId];\r\n\r\n            if (!pageData.breakpoints) {\r\n                pageData.breakpoints = BreakPointManager.getDefault();\r\n            }\r\n\r\n            this.state.editor.setBreakpoints(pageData.breakpoints);\r\n            this.setState({pageData}, callback);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.preview) {\r\n            this.state.editor.rootLayoutRef.current.onSelect(true, () => {\r\n                this.state.editor.idMan.clear();\r\n\r\n                this.state.setPageData(undefined, false , () => {\r\n                    let pageData = this.state.siteData.allPages[pageId];\r\n\r\n                    if (!pageData.breakpoints) {\r\n                        pageData.breakpoints = BreakPointManager.getDefault();\r\n                    }\r\n\r\n                    this.state.editor.setBreakpoints(pageData.breakpoints);\r\n                    this.setState({pageData}, callback);\r\n                });\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.state.editor.idMan.clear();\r\n\r\n            console.log(\"setPageData\", 62)\r\n            this.state.setPageData(undefined, false , () => {\r\n                let pageData = this.state.siteData.allPages[pageId];\r\n\r\n                if (!pageData.breakpoints) {\r\n                    pageData.breakpoints = BreakPointManager.getDefault();\r\n                }\r\n\r\n                console.log(\"setPageData\", 72)\r\n                this.state.editor.setBreakpoints(pageData.breakpoints);\r\n                this.setState({pageData}, callback);\r\n            });\r\n        }\r\n    };\r\n\r\n    onNewBpAdded = (newBpData, prevBpData) => {\r\n        if (!prevBpData){\r\n            this.update();\r\n            return;\r\n        }\r\n\r\n        console.log(\"newBpData\", newBpData.name, prevBpData.name)\r\n\r\n        let changeGriddata = (item, childData) => {\r\n            if (!item || !item.mounted)\r\n                return;\r\n\r\n            let bpData = childData.props.griddata.bpData;\r\n            bpData[newBpData.name] = bpData[prevBpData.name];\r\n            delete bpData[prevBpData.name];\r\n\r\n            Object.keys(item.getFromTempData(\"savedChildren\")).map(childId => {\r\n                let childData = item.getFromTempData(\"savedChildren\")[childId];\r\n                changeGriddata(\r\n                    item.allChildRefs[childId].current,\r\n                    childData\r\n                );\r\n            })\r\n        };\r\n\r\n        let pageChildData = {\r\n            tagName: this.state.editor.rootLayoutRef.current.props.tagName,\r\n            props: this.state.editor.rootLayoutRef.current.getClearProps({...this.state.editor.rootLayoutRef.current.props}),\r\n            zIndex: 0\r\n        };\r\n\r\n        changeGriddata(this.state.editor.rootLayoutRef.current, pageChildData);\r\n\r\n        this.update();\r\n    }\r\n\r\n    setInspectorPinned = (inspectorPinned, callback) => {\r\n        this.setState({inspectorPinned}, callback);\r\n    };\r\n\r\n    setInspectorWidth = (inspectorWidth, callback) => {\r\n        this.setState({inspectorWidth}, callback);\r\n    };\r\n\r\n    setDevicePixelRatio = (devicePixelRatio, callback) => {\r\n        this.setState({devicePixelRatio}, callback);\r\n    };\r\n\r\n    setAllComponentData = (allComponentData, callback) => {\r\n        this.setState({allComponentData}, callback);\r\n    };\r\n\r\n    toggleRightMenu = (menuName, state) => {\r\n        let {rightMenus} = this.state;\r\n\r\n        if (state === rightMenus[menuName].state)\r\n            return;\r\n\r\n        for(let props in rightMenus) {\r\n            if (rightMenus[props].state) {\r\n                rightMenus[props].state = false;\r\n                rightMenus[props].toggle(true);\r\n            }\r\n        }\r\n\r\n        rightMenus[menuName].state = rightMenus[menuName].toggle(false, state);\r\n\r\n        this.setState({rightMenus: {...rightMenus}});\r\n    };\r\n\r\n    setPageSizeWidth = (width) => {\r\n        this.state.editor.rootLayoutRef.current.setPageSizeWidth(width);\r\n        this.state.editor.breakpointmanager.setWindowWidth(width);\r\n        this.setState({pageSize: width});\r\n    };\r\n\r\n    setPageSize = (pageSize) => {\r\n        this.setState({pageSize});\r\n    };\r\n\r\n    setRightMenus = (rightMenus, callback) => {\r\n        this.setState({rightMenus}, callback);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </EditorContext.Provider>\r\n        )\r\n    }\r\n}\r\n","import {cloneObject, throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from \"lodash.merge\";\r\nimport {EditorContext} from \"./Editor/EditorContext\";\r\nimport {useContext} from \"react\";\r\n\r\nexport default class BreakPointManager {\r\n    constructor(breakpoints, editor, onBreakpointChange, onZoomLevelChange, onHeightChange, onResize) {\r\n        if (!breakpoints)\r\n            breakpoints = BreakPointManager.getDefault();\r\n\r\n        this.fixBreakpointRules(breakpoints);\r\n\r\n        // TODO test\r\n\r\n        this.breakpoints = breakpoints;\r\n        this.editor = editor;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        this.lastWidth = window.innerWidth;\r\n        this.onBreakpointChange = onBreakpointChange || (() => {});\r\n        this.onZoomLevelChange = onZoomLevelChange || (() => {});\r\n        this.onHeightChange = onHeightChange || (() => {});\r\n\r\n        window.addEventListener(\"resize\", onResize);\r\n        if (onBreakpointChange)\r\n            window.addEventListener(\"resize\", this.onWindowResize);\r\n        if (onZoomLevelChange)\r\n            window.addEventListener(\"resize\", this.onDevicePixelRatioChange);\r\n        if (onHeightChange)\r\n            window.addEventListener(\"resize\", this.onHeightResize);\r\n    }\r\n\r\n    fixBreakpointRules = (breakpoints) => {\r\n        breakpoints.forEach(bpData => {\r\n            if (!bpData.end)\r\n                bpData.end = 99999;\r\n        });\r\n    }\r\n\r\n    updateBreakpoint = (name, start, end) => {\r\n        let bp = this.breakpoints.find(b => b.name === name);\r\n        if (bp) {\r\n            bp.end = end;\r\n            let upperBP = this.getUpperBreakPoint(name);\r\n            if (upperBP) this.getUpperBreakPoint(name).start = end + 1;\r\n            return;\r\n        }\r\n\r\n        start++;\r\n        bp = {name, start, end};\r\n        let prevBp;\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bp.start === sortedBreakPoints[i].start + 1) {\r\n                bp.start++;\r\n            }\r\n            if (bp.start >= sortedBreakPoints[i].start) {\r\n                bp.end = sortedBreakPoints[i].end;\r\n                sortedBreakPoints[i].end = bp.start - 1;\r\n                prevBp = sortedBreakPoints[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.breakpoints.push(bp);\r\n\r\n        return {newBpData: bp, prevBpData: prevBp};\r\n    };\r\n\r\n    deleteBreakpoint = (name) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (name === sortedBreakPoints[i].name) {\r\n                let upper = sortedBreakPoints[i - 1];\r\n                upper.start = sortedBreakPoints[i].start;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let index = this.breakpoints.findIndex(bp => {\r\n            return bp.name === name;\r\n        });\r\n\r\n        this.breakpoints.splice(index, 1);\r\n    };\r\n\r\n    fromClone = (clone) => {\r\n        this.breakpoints = clone.breakpoints;\r\n        this.windowInnerWidth = clone.windowInnerWidth;\r\n        this.lastWidth = clone.lastWidth;\r\n        this.editor = clone.editorData;\r\n\r\n        return this;\r\n    };\r\n\r\n    copyDesign = (designDatas, sourceItem) => {\r\n        this.cloneDesignDatas = {\r\n            designDatas: cloneObject(designDatas),\r\n            sourceItem\r\n        };\r\n    };\r\n\r\n    getCopyDesign = () => {\r\n        return this.cloneDesignDatas;\r\n    };\r\n\r\n    pasteDesign = (item) => {\r\n        if (!this.getCopyDesign())\r\n            return;\r\n\r\n        this.getCopyDesign().designDatas.forEach((designData, index) => {\r\n            let design = designData.design;\r\n            if (!designData.justOneBp) {\r\n                let bpName = designData.bpName;\r\n                if (!item.props.griddata.bpData[bpName])\r\n                    item.props.griddata.bpData[bpName] = {};\r\n                item.props.griddata.bpData[bpName].design = cloneObject(design);\r\n            } else {\r\n                let currentBpName = item.props.breakpointmanager.current();\r\n                if (!item.props.griddata.bpData[currentBpName])\r\n                    item.props.griddata.bpData[currentBpName] = {};\r\n                item.props.griddata.bpData[currentBpName].design = cloneObject(design);\r\n            }\r\n        });\r\n    };\r\n\r\n    getWindowWidth = () => {\r\n        return this.lastWidth\r\n    };\r\n\r\n    getWindowHeight = () => {\r\n        return this.editor.rootLayoutRef.current.getSize(false).height;\r\n        // return window.innerHeight * 0.8;\r\n    };\r\n\r\n    setWindowWidth = (width) => {\r\n        this.lastWidth = width;\r\n    };\r\n\r\n    getBpData = (bpName) => {\r\n        return this.breakpoints.find(bp => {\r\n            return bp.name === bpName;\r\n        });\r\n    };\r\n\r\n    dispose() {\r\n        window.removeEventListener(\"resize\", this.onWindowResize);\r\n    }\r\n\r\n    getDevicePixelRatio = () => {\r\n        return window.devicePixelRatio;\r\n    };\r\n\r\n    onDevicePixelRatioChange = () => {\r\n        let changed = this.devicePixelRatio !== window.devicePixelRatio;\r\n\r\n        this.devicePixelRatio = window.devicePixelRatio;\r\n\r\n        if (changed) {\r\n            this.onZoomLevelChange(this.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onHeightResize = throttleDebounce((e) => {\r\n        if (this.lastHeight !== window.innerHeight) {\r\n            this.lastHeight = window.innerHeight;\r\n            this.onHeightChange(e);\r\n        }\r\n    }, 100);\r\n\r\n    onWindowResize = throttleDebounce(() => {\r\n        let newWidth = window.innerWidth -\r\n            this.editor.context.inspectorPinned ? this.editor.context.inspectorWidth : 0;\r\n\r\n        let result = this.checkBreakPointChange(newWidth);\r\n\r\n        this.setWindowWidth(newWidth);\r\n\r\n        if (result.changed) {\r\n            this.onBreakpointChange(newWidth, result.currentBreakpointName, this.getDevicePixelRatio());\r\n        }\r\n    }, 100);\r\n\r\n    checkBreakPointChange = (newWidth) => {\r\n        let lastBreakpointName = this.current(this.getWindowWidth());\r\n        let currentBreakpointName = this.current(newWidth);\r\n\r\n        return {\r\n            changed: (lastBreakpointName !== currentBreakpointName),\r\n            currentBreakpointName\r\n        }\r\n    };\r\n\r\n    current = (size) => {\r\n        if (!size)\r\n            size = this.getWindowWidth();\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (this.getSize(size) >= sortedBreakPoints[i].start)\r\n                return sortedBreakPoints[i].name;\r\n        }\r\n\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].name;\r\n    };\r\n\r\n    currentBpData = (size) => {\r\n        if (!size)\r\n            size = this.getWindowWidth();\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (this.getSize(size) >= sortedBreakPoints[i].start)\r\n                return sortedBreakPoints[i];\r\n        }\r\n\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1];\r\n    };\r\n\r\n    getUpperBreakPoint = (bpName) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bpName === sortedBreakPoints[i].name)\r\n                return sortedBreakPoints[i - 1] && sortedBreakPoints[i - 1];\r\n        }\r\n    };\r\n\r\n    setData = (dataSet, param, value, breakpointName) => {\r\n        let params = param.split('.');\r\n        let name = breakpointName ||\r\n            this.current(this.getSize());\r\n        if (!dataSet.bpData[name]) {\r\n            dataSet.bpData[name] = {};\r\n        }\r\n        if (params.length === 1) {\r\n            if (value !== undefined)\r\n                dataSet.bpData[name][params[0]] = value;\r\n            else\r\n                delete dataSet.bpData[name][params[0]];\r\n        } else {\r\n            if (dataSet.bpData[name][params[0]] === undefined)\r\n                dataSet.bpData[name][params[0]] = {};\r\n            let override = dataSet.bpData[name][params[0]];\r\n            for(let i = 1; i < params.length; i++) {\r\n                if (i === params.length - 1) { // Last index\r\n                    if (value !== undefined)\r\n                        override[params[i]] = value;\r\n                    else\r\n                        delete override[params[i]];\r\n                }\r\n                else\r\n                {\r\n                    if (override[params[i]] === undefined)\r\n                        override[params[i]] = {};\r\n                    override = override[params[i]];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getFromData = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n        else {\r\n            firstParamResult = this.findFirstUpperBreakPointParam(dataSet, params[0]\r\n                , this.getSize());\r\n        }\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    getHighestBpName = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[0].name;\r\n    };\r\n\r\n    getCompositeFromData = (dataSet, param) => {\r\n        let params = param.split('.');\r\n        let results = [];\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints(this.getWindowWidth());\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            let checkBreakpointName = sortedBreakPoints[i].name;\r\n\r\n            let firstParamResult;\r\n            if (dataSet.bpData[checkBreakpointName] &&\r\n                dataSet.bpData[checkBreakpointName][params[0]] !== undefined)\r\n                firstParamResult = dataSet.bpData[checkBreakpointName][params[0]];\r\n\r\n            if (firstParamResult === undefined)\r\n                continue;\r\n\r\n            if (params.length === 1) {\r\n                results.push(firstParamResult);\r\n            } else {\r\n                params.slice(1).forEach(p => {\r\n                    if (firstParamResult)\r\n                        firstParamResult = firstParamResult[p];\r\n                });\r\n\r\n                results.push(firstParamResult);\r\n            }\r\n        }\r\n\r\n        if (!(results[0] instanceof Object))\r\n            return results[0];\r\n\r\n        let composite = {};\r\n        for (let i = results.length - 1; i >= 0; i--) {\r\n            composite = merge(composite, results[i]);\r\n        }\r\n\r\n        return composite;\r\n    };\r\n\r\n    hasDataInBreakPoint = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    findFirstUpperBreakPointParam = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name] &&\r\n                    dataSet.bpData[sortedBreakPoints[i].name][param] !== undefined)\r\n                    return dataSet.bpData[sortedBreakPoints[i].name][param];\r\n            }\r\n        }\r\n    };\r\n\r\n    findFirstUpperBreakPointName = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name]/* && dataSet[sortedBreakPoints[i].name][param] !== undefined*/)\r\n                    return sortedBreakPoints[i].name;\r\n            }\r\n        }\r\n    };\r\n\r\n    getMinWidth = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].start;\r\n    };\r\n\r\n    getSortedBreakPoints = (minSize) => {\r\n        let breakpoints = this.breakpoints;\r\n        if (minSize) {\r\n            breakpoints = this.breakpoints.filter(bp => {\r\n                return bp.end >= minSize;\r\n            });\r\n        }\r\n        // console.log(\"breakpoints.length\", breakpoints.length, minSize)\r\n        return breakpoints.sort((a,b) => {\r\n            if (a.start > b.start) {\r\n                return -1;\r\n            } else if (a.start === b.start) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        });\r\n    };\r\n\r\n    exist = (name) => {\r\n        return this.breakpoints.find(b => {\r\n            return b.name === name;\r\n        });\r\n    };\r\n\r\n    static getDefault = () => {\r\n        return [\r\n            {\r\n                name: \"laptop\",\r\n                start: 1001,\r\n                end: 99999,\r\n                prefer: 1006\r\n            },\r\n            {\r\n                name: \"tablet\",\r\n                start: 751,\r\n                end: 1000,\r\n                prefer: 768\r\n            },\r\n            {\r\n                name: \"mobile\",\r\n                start: 320,\r\n                end: 750,\r\n                prefer: 360\r\n            },\r\n        ]\r\n    };\r\n\r\n    getSize = (size) => {\r\n        return size || this.getWindowWidth();\r\n    };\r\n};\r\n\r\nexport let setData = (dataSet, param, value, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    breakPointManager.setData(dataSet, param, value, breakpointName);\r\n};\r\n\r\nexport let getFromData = (dataSet, param, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getFromData(dataSet, param, breakpointName);\r\n};\r\n\r\nexport let getCompositeFromData = (dataSet, param, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getCompositeFromData(dataSet, param);\r\n};\r\n\r\nexport let getSortedBreakPoints = (breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.getSortedBreakPoints();\r\n};\r\n\r\nexport let exist = (name, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.exist(name);\r\n};\r\n","import {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\n\r\nexport default class DragDropManager {\r\n    setDragging = (item) => {\r\n        this.draggingItem = item;\r\n    };\r\n\r\n    getDragging = () => {\r\n        return this.draggingItem;\r\n    };\r\n\r\n    isDraggingItemFixed = () => {\r\n        if (!this.draggingItem)\r\n            return false;\r\n        return this.draggingItem.state.portalNodeId === \"page_fixed_holder\";\r\n    };\r\n\r\n    // return true if dropping on another parent\r\n    setDraggingStop = () => {\r\n        if (this.draggingItem && this.mouseOver &&\r\n            this.draggingItem.props.parent !== this.mouseOver &&\r\n            !this.mouseOver.getParentsId().includes(this.draggingItem.props.id) &&\r\n            !this.isDraggingItemFixed())\r\n        {\r\n            this.mouseOver.prepareRects();\r\n            this.dropItem(this.draggingItem, this.draggingItem.props.parent, this.mouseOver);\r\n\r\n            this.draggingItem = undefined;\r\n            return true;\r\n        }\r\n\r\n        this.draggingItem = undefined;\r\n        return false;\r\n    };\r\n\r\n    dropItem = (item, parent, newParent, callback, fromUndoRedo, undoPower) => {\r\n        item.toggleHelpLines();\r\n        parent.onChildLeave(item);\r\n\r\n        let drop = () => {\r\n            newParent.onChildDrop(item, undefined, undefined, (newItem) => {\r\n                if (callback)\r\n                    callback(newItem);\r\n\r\n                if (!fromUndoRedo) {\r\n                    let itemId = item.props.id;\r\n                    let firstRelativeX =\r\n                        (item.dragData? item.dragData.firstPos.left : newItem.getSize(false).left)\r\n                        - parent.getSize(false).left;\r\n                    let firstRelativeY =\r\n                        (item.dragData? item.dragData.firstPos.top : newItem.getSize(false).top)\r\n                        - parent.getSize(false).top;\r\n                    let parentRect = cloneObject(parent.getSize(false));\r\n                    let lastRelativeX = newItem.getSize(false).left - newParent.getSize(false).left;\r\n                    let lastRelativeY = newItem.getSize(false).top - newParent.getSize(false).top;\r\n                    let newParentRect = cloneObject(newParent.getSize(false));\r\n                    let width = newItem.getSize(false).width;\r\n                    let height = newItem.getSize(false).height;\r\n\r\n                    let parentId = parent.props.id;\r\n                    let newParentId = newParent.props.id;\r\n                    item.props.undoredo.add((idMan) => {\r\n                        idMan.getItem(itemId).onSelect(true);\r\n                        this.setMouseOver(idMan.getItem(newParentId));\r\n                        this.dropItem(idMan.getItem(itemId), idMan.getItem(parentId), idMan.getItem(newParentId),\r\n                            (newItem) => {\r\n                                setTimeout(() => {\r\n                                    idMan.getItem(itemId).setPosition(false, lastRelativeX, lastRelativeY, undefined, undefined,\r\n                                        width, height, newParentRect, true);\r\n                                }, 0);\r\n                            }, true);\r\n                    }, (idMan) => {\r\n                        idMan.getItem(itemId).onSelect(true);\r\n                        this.setMouseOver(idMan.getItem(parentId));\r\n                        this.dropItem(idMan.getItem(itemId), idMan.getItem(newParentId), idMan.getItem(parentId),\r\n                            (newItem) => {\r\n                                setTimeout(() => {\r\n                                    idMan.getItem(itemId).setPosition(false, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                                        width, height, parentRect, true);\r\n                                }, 0);\r\n                            }, true);\r\n                    }, undoPower);\r\n                }\r\n            });\r\n        };\r\n        if (item.props.dragdrop.mouseOver === newParent &&\r\n            item.props.gridLine.hasGridLine(newParent.props.id)) {\r\n            drop();\r\n        } else {\r\n            item.props.dragdrop.setMouseOver(newParent, undefined, drop);\r\n        }\r\n    };\r\n\r\n    removeMouseOver = () => {\r\n        delete this.mouseOver;\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.isDraggingItemFixed())\r\n            return;\r\n\r\n        if (this.mouseOver) {\r\n            if (!this.mouseOver.getFromTempData(\"selected\")) {\r\n                if (this.mouseOver !== item)\r\n                    this.mouseOver.toggleGridLines(false);\r\n            }\r\n        }\r\n\r\n        this.mouseOver = item;\r\n\r\n        if(this.draggingItem)\r\n            this.draggingItem.toggleHelpLines();\r\n\r\n        item.toggleGridLines(true, () => {\r\n            if(this.draggingItem)\r\n                this.draggingItem.toggleHelpLines(item);\r\n            if (callback)\r\n                callback(this.draggingItem, this.mouseOver);\r\n        }, \"B\");\r\n    };\r\n\r\n    setMouseOverForNonDragging = (item) => {\r\n        this.mouseOverNonDragging = item;\r\n    };\r\n\r\n    getMouseOverForNonDragging = () => {\r\n        return this.mouseOverNonDragging;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport {shallowEqual} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerChildren extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(JSON.stringify(this.allChildIndex),\r\n                JSON.stringify(Object.values(nextProps.allChildren).map(c => {\r\n                    return {\r\n                        z: c.zIndex,\r\n                        i: c.child.props.id\r\n                    }\r\n                })))\r\n        )\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => {\r\n            return {\r\n                z: c.zIndex,\r\n                i: c.child.props.id\r\n            }\r\n        });\r\n    };\r\n\r\n    getSorted = (children) => {\r\n        return children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex)\r\n                return 1;\r\n            if (a.zIndex < b.zIndex)\r\n                return -1;\r\n\r\n            return 0;\r\n        })\r\n    };\r\n\r\n    getChildren = (allChildren, agl) => {\r\n        if (this.props.getChildrenOverride)\r\n            return this.props.getChildrenOverride(this.getSorted(Object.values(allChildren)), agl);\r\n\r\n        return this.getSorted(Object.values(allChildren)).map((child) => {\r\n            return child.child;\r\n        })\r\n    };\r\n\r\n    render () {\r\n        this.saveState();\r\n        let {allChildren, agl} = this.props;\r\n        return (\r\n            this.getChildren(allChildren, agl)\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorBreadcrumbs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div\r\n                className=\"InspectorOptionRoot\"\r\n            >\r\n                <div\r\n                    className=\"InspectorBreadcrumbsParentsRoot\"\r\n                >\r\n                        {\r\n                            item.getParentsId().slice(0, 2).reverse().map(parentId => {\r\n                                let parent = item.props.idMan.getItem(parentId);\r\n                                return (\r\n                                    <ButtonBase\r\n                                        className={\"InspectorBreadcrumbsParentsButton\"}\r\n                                        onClick={(e) => {\r\n                                            parent.onSelect(true);\r\n                                        }}\r\n                                        key={parent.props.id}\r\n                                    >\r\n                                        {\r\n                                            parent.props.tagName + \" >\"\r\n                                        }\r\n                                    </ButtonBase>\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n\r\n                <span\r\n                    className=\"InspectorBreadcrumbsTagName\"\r\n                >\r\n                    {item.props.tagName}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class IconButton extends React.Component {\r\n    render () {\r\n        return (\r\n            <ButtonBase\r\n                aria-label={this.props[\"aria-label\"] || \"aria-label\"}\r\n                onClick={this.props.onClick}\r\n                style={{...{\r\n                    marginLeft: 4,\r\n                    borderRadius: 4,\r\n                    boxSizing: \"border-box\"\r\n                }, ...this.props.buttonBaseStyle}}\r\n                className={this.props.className}\r\n                disabled={this.props.disabled}\r\n            >\r\n                <div style={{...{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    padding: 6,\r\n                }, ...this.props.imageContainerStyle}}>\r\n                    {\r\n                        this.props.icon\r\n                    }\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {alignItem} from \"../../AwesomwGridLayoutHelper\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class InspectorAligns extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                name: \"Align to left\",\r\n                horizontal: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-left.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to center\",\r\n                horizontal: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-center.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to right\",\r\n                horizontal: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-right.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to top\",\r\n                vertical: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-top.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to middle\",\r\n                vertical: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-middle.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to bottom\",\r\n                vertical: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-bottom.svg')}\r\n                />\r\n            },\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div className=\"InspectorOptionRoot\">\r\n                <span className=\"InspectorOptionTextTitle\">\r\n                    Alignment\r\n                </span>\r\n                <div\r\n                    className=\"InspectorAlignsRoot\"\r\n                >\r\n                    {\r\n                        this.getButtonsData().map((data, i) => {\r\n                            return (\r\n                                <IconButton\r\n                                    key={data.name}\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 0,\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 6\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        alignItem(item, data.vertical, data.horizontal)\r\n                                    }}\r\n                                    className=\"InspectorAlignsButtons\"\r\n                                >\r\n                                    {data.img}\r\n                                </IconButton>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from 'lodash.merge';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport Stack from \"./Components/Stack/Stack\";\r\nimport DynamicComponents from \"./Dynamic/DynamicComponents\";\r\nimport {getCompositeFromData, getFromData, setData} from \"./BreakPointManager\";\r\nimport ContextMenu from \"./Test/ContextMenu\";\r\nimport chroma from \"chroma-js\";\r\n\r\nlet deepEqual = require('fast-deep-equal/es6');\r\n\r\nexport function stretch(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let saveStyle = cloneObject(item.getFromData(\"style\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            stretch(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).setStyle(saveStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (item.hasOverride(\"stretch\")) {\r\n        item.callOverride(\"stretch\", item);\r\n        return;\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let beStretch = false;\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (!isStretch(item))\r\n        beStretch = true;\r\n\r\n    item.setDocks(beStretch, beStretch, false, beStretch, item.getFromTempData(\"autoDock\"), undefined, true);\r\n\r\n    gridItemStyle.alignSelf = beStretch? \"start\": \"start\";\r\n    gridItemStyle.justifySelf = beStretch? \"stretch\": \"center\";\r\n    gridItemStyle.marginTop = \"0px\";\r\n    gridItemStyle.marginLeft = \"0px\";\r\n    gridItemStyle.marginRight = \"0px\";\r\n    gridItemStyle.marginBottom = \"0px\";\r\n    item.setStyleParam(\"width\", \"auto\");\r\n    item.setStyleParam(\"height\", \"100%\");\r\n    item.setStyleParam(\"minHeight\", \"unset\");\r\n\r\n    if (!beStretch) {\r\n        let parentRect = item.props.parent.getSize();\r\n        gridItemStyle.marginTop = `${(parentRect.height - 0.8 * parentRect.height) / 2}px`;\r\n\r\n        item.setStyleParam(\"width\", \"80%\");\r\n        item.setStyleParam(\"height\", \"auto\");\r\n        item.setStyleParam(\"minHeight\", `${0.8 * parentRect.height}px`);\r\n    }\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function isStretch(item, log) {\r\n    if (item.hasOverride(\"isStretch\")) {\r\n        return item.callOverride(\"isStretch\", item, log);\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    return !(gridItemStyle.alignSelf !== \"start\" || gridItemStyle.justifySelf !== \"stretch\" ||\r\n        gridItemStyle.marginTop !== \"0px\" || gridItemStyle.marginLeft !== \"0px\" ||\r\n        gridItemStyle.marginRight !== \"0px\" || gridItemStyle.marginBottom !== \"0px\");\r\n}\r\n\r\nexport function allowStretch(item) {\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    if (item.props.as === \"section\" || item.props.as === \"header\" || item.props.as === \"footer\")\r\n        return false;\r\n\r\n    return !item.props.disableStretch;\r\n}\r\n\r\nexport function alignItem(item, vertical, horizontal, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            alignItem(idMan.getItem(itemId), vertical, horizontal, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (vertical) {\r\n        gridItemStyle.alignSelf = vertical;\r\n        gridItemStyle.marginTop = \"0px\";\r\n        gridItemStyle.marginBottom = \"0px\";\r\n    }\r\n    if (horizontal) {\r\n        gridItemStyle.justifySelf = horizontal;\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n    }\r\n\r\n    let baseDocks = item.getBaseDocks();\r\n    item.setDocks(\r\n        baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n        item.getFromTempData(\"autoDock\"), undefined, true\r\n    );\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function setScrollBehaviour(item, behaviour, pageAgl, fromUndoRedo, {offsetTop} = {}) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let pageId = pageAgl.props.id;\r\n        let oldBehaviour = item.getFromData(\"isFixed\")? \"fixed\": item.getFromData(\"scrollBehaviour\") || \"none\";\r\n        let oldOffsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        item.props.undoredo.add((idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), behaviour, idMan.getItem(pageId), true, {offsetTop});\r\n        }, (idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), oldBehaviour, idMan.getItem(pageId), true,\r\n                {offsetTop: oldOffsetTop});\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let oldIsFixed = item.getFromTempData(\"isFixed\");\r\n\r\n    let lastSectionId = item.getFromTempData(\"lastSectionId\");\r\n    if (oldIsFixed && behaviour !== \"fixed\" && lastSectionId) {\r\n        item.props.parent.onChildLeave(item);\r\n        let itemRect = item.getSize(false);\r\n        let sectionParent = item.props.viewRef.current\r\n            .props.aglComponent.getSectionOfPoint(itemRect.left, itemRect.top);\r\n\r\n        sectionParent.onSelect(true, undefined, undefined, undefined, true);\r\n        sectionParent.prepareRects();\r\n        sectionParent.onChildDrop(item, undefined, false, (newItem) => {\r\n            newItem.setState({portalNodeId: undefined});\r\n            window.requestAnimationFrame(() => {\r\n                newItem.onSelect(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    item.setTempData(\"isFixed\", behaviour === \"fixed\");\r\n    item.setDataInBreakpoint(\"scrollBehaviour\", behaviour);\r\n    item.setDataInBreakpoint(\"scrollStickyOffsetTop\", offsetTop);\r\n\r\n    switch (behaviour) {\r\n        case \"none\":\r\n            item.setStyleParam(\"position\", undefined);\r\n            item.setStyleParam(\"top\", undefined);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"sticky\":\r\n            item.setStyleParam(\"position\", \"sticky\");\r\n            item.setStyleParam(\"top\", offsetTop || 0);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"fixed\":\r\n            if (!oldIsFixed) {\r\n                addFixedChildToRoot(item, pageAgl);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\nfunction addFixedChildToRoot(item, pageAgl) {\r\n    let oldParentRect = item.props.parent.getSize(false);\r\n    item.toggleHelpLines();\r\n    item.setTempData(\"lastSectionId\", item.props.parent.props.id);\r\n    item.props.parent.onChildLeave(item);\r\n    pageAgl.onSelect(true, undefined, undefined, undefined, true);\r\n    let pageRect = pageAgl.prepareRects();\r\n    let itemRect = item.getSize(false);\r\n\r\n    pageAgl.onChildDrop(item, undefined, true, (newItem) => {\r\n        window.requestAnimationFrame(() => {\r\n            newItem.onSelect(true);\r\n        });\r\n    });\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n    gridItemStyle.gridArea = \"1/1/2/2\";\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n\r\n    let style = item.getCompositeFromData(\"style\");\r\n\r\n    let newWidth = itemRect.width *  oldParentRect.width / pageRect.width;\r\n    item.setStyleParam(\"width\", getStyleValueFromPx(newWidth, oldParentRect.width,\r\n        getUnitFromStyleValue(style.width), item));\r\n    item.setStyleParam(\"height\", getStyleValueFromPx(itemRect.height, oldParentRect.height,\r\n        getUnitFromStyleValue(style.height), item));\r\n    item.setStyleParam(\"position\", undefined);\r\n    item.setStyleParam(\"top\", undefined);\r\n    item.setStyleParam(\"pointerEvents\", \"auto\");\r\n}\r\n\r\nexport function isFixed(item) {\r\n    return item.getFromTempData(\"isFixed\");\r\n}\r\n\r\nexport function hideInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", \"none !important\");\r\n    item.props.viewRef.current.props.aglComponent.updateTemplates();\r\n    item.props.select.onScrollItem();\r\n    item.props.editor.updateLayout();\r\n}\r\n\r\nexport function isHideInBreakPoint(item, fromUndoRedo) {\r\n    return item.getCompositeFromData(\"style\").display === \"none !important\";\r\n}\r\n\r\nexport function showInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", undefined);\r\n    let newStyle = item.getFromData(\"style\");\r\n    if (newStyle && Object.keys(newStyle).length === 0) {\r\n        item.setDataInBreakpoint(\"style\", undefined);\r\n    }\r\n    item.props.viewRef.current.props.aglComponent.updateTemplates();\r\n    item.props.editor.updateLayout();\r\n}\r\n\r\nexport function hasBreakpointDesign(fromName, item) {\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n    return !(fromData === undefined);\r\n}\r\n\r\nexport function pasteFromBreakpointDesign(item, fromName, toName, fromUndoRedo) {\r\n    let fromData = item.props.griddata.bpData[fromName].design;\r\n    if (fromData === undefined)\r\n        return;\r\n\r\n    if (!toName)\r\n        toName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[toName])\r\n        item.props.griddata.bpData[toName] = {};\r\n\r\n    let currentData = item.props.griddata.bpData[toName].design;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(currentData);\r\n        item.props.undoredo.add((idMan) => {\r\n            pasteFromBreakpointDesign(idMan.getItem(itemId), fromName, toName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[toName].design = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    if (!currentData)\r\n        currentData = {};\r\n    merge(currentData, fromData);\r\n    item.props.griddata.bpData[toName].design = currentData;\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function deepAssign(fromData, currentData) {\r\n    Object.keys(fromData).map(key => {\r\n        let currentValue = currentData[key];\r\n        let fromValue = fromData[key];\r\n        if (currentValue === undefined) {\r\n            currentData[key] = cloneObject(fromValue);\r\n        } else {\r\n            if (fromValue instanceof Object) {\r\n                if (!currentValue)\r\n                    currentData[key] = {};\r\n                deepAssign(fromValue, currentValue)\r\n            } else {\r\n                currentData[key] = cloneObject(fromValue);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function removeOverrides(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (fromName === \"laptop\")\r\n        return;\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(item.props.griddata.bpData[fromName] || {});\r\n        item.props.undoredo.add((idMan) => {\r\n            removeOverrides(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[fromName] = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.griddata.bpData[fromName] = {};\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function applyOnAllBreakPoint(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n\r\n    let undoData = {};\r\n\r\n    let sortedBreakPoints = item.props.breakpointmanager.getSortedBreakPoints();\r\n    for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n        let toName = sortedBreakPoints[i].name;\r\n        if (fromData !== toName) {\r\n            undoData[toName] = cloneObject(item.props.griddata.bpData[toName] || {});\r\n            item.props.griddata.bpData[toName] = cloneObject(fromData);\r\n        }\r\n    }\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            applyOnAllBreakPoint(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            Object.keys(undoData).forEach(key => {\r\n                idMan.getItem(itemId).props.griddata.bpData[key] = undoData[key];\r\n            });\r\n\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function copyDesign(item, fromAll) {\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n\r\n    let designDatas = [];\r\n    if (!fromAll && item.props.griddata.bpData[currentBpName])\r\n        designDatas[0] = {\r\n            bpName: currentBpName,\r\n            design: item.props.griddata.bpData[currentBpName].design,\r\n            justOneBp: true\r\n        };\r\n    else if (fromAll) {\r\n        Object.keys(item.props.griddata.bpData).forEach((key, index) => {\r\n            designDatas[index] = {\r\n                bpName: key,\r\n                design: item.props.griddata.bpData[key].design\r\n            };\r\n        });\r\n    }\r\n\r\n    console.log(\"copyDesign\", designDatas);\r\n    if (designDatas.length > 0)\r\n        item.props.breakpointmanager.copyDesign(designDatas, item);\r\n}\r\n\r\nexport function pasteDesign(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let copyDesign = cloneObject(item.props.breakpointmanager.getCopyDesign().designDatas);\r\n        let allOldDesign = cloneObject(Object.keys(item.props.griddata.bpData).map(key => {\r\n            return {\r\n                bpName: key,\r\n                design: item.props.griddata.bpData[key].design\r\n            }\r\n        }));\r\n        item.props.undoredo.add((idMan) => {\r\n            let item = idMan.getItem(itemId);\r\n            console.log(111);\r\n            let temp = cloneObject(item.props.breakpointmanager.getCopyDesign().designDatas);\r\n            let sourceItemTemp = item.props.breakpointmanager.getCopyDesign().sourceItem;\r\n            console.log(222);\r\n            item.props.breakpointmanager.cloneDesignDatas = {\r\n                designDatas: copyDesign,\r\n                sourceItem: item\r\n            };\r\n            item.props.breakpointmanager.pasteDesign(item);\r\n            console.log(333);\r\n            item.props.breakpointmanager.cloneDesignDatas = {\r\n                designDatas: temp,\r\n                sourceItem: sourceItemTemp\r\n            };\r\n\r\n            item.onBreakpointChange(\r\n                item.props.breakpointmanager.getWindowWidth(),\r\n                item.props.breakpointmanager.current());\r\n\r\n            item.props.aglComponent.updateDesign &&\r\n                item.props.aglComponent.updateDesign(item.getCompositeFromData(\"design\"));\r\n\r\n            item.updateLayout();\r\n            console.log(444);\r\n        }, (idMan) => {\r\n            let item = idMan.getItem(itemId);\r\n            allOldDesign.forEach(designData => {\r\n                item.props.griddata.bpData[designData.bpName].design = cloneObject(designData.design);\r\n            });\r\n\r\n            item.onBreakpointChange(\r\n                item.props.breakpointmanager.getWindowWidth(),\r\n                item.props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.breakpointmanager.pasteDesign(item);\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n\r\n    item.props.aglComponent.updateDesign &&\r\n        item.props.aglComponent.updateDesign(item.getCompositeFromData(\"design\"));\r\n\r\n    item.updateLayout();\r\n}\r\n\r\nexport function isGroupSelected(item) {\r\n    return item.props.select.group;\r\n}\r\n\r\nexport function getSectionId(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent.props.id;\r\n\r\n    return uuidv4();\r\n}\r\n\r\nexport function getSectionParent(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent;\r\n}\r\n\r\nexport function createStack(items, fromUndoRedo) {\r\n    if (!items || items.length < 2)\r\n        return;\r\n\r\n    let itemsParent = getSectionParent(items[0]);\r\n\r\n    if (!itemsParent)\r\n        return;\r\n\r\n    let top = 99999999;\r\n    let left = 99999999;\r\n    let rightFromLeft = 0;\r\n    let allSpacerData = [];\r\n    let lastBottom;\r\n\r\n    items.sort((a,b) => {\r\n        if (a && b){\r\n            let topA = a.getSize(false).top;\r\n            let topB = b.getSize(false).top;\r\n            if (topA < topB) {\r\n                return -1;\r\n            } else if (topA === topB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    items.forEach((item) => {\r\n        let rect = item.getSize(false);\r\n        top = Math.min(rect.top, top);\r\n        left = Math.min(rect.left, left);\r\n        rightFromLeft = Math.max(rect.left + rect.width, rightFromLeft);\r\n\r\n        if (lastBottom) {\r\n            allSpacerData.push({\r\n                height: Math.max(0, rect.top - lastBottom)\r\n            });\r\n        }\r\n\r\n        lastBottom = rect.top + rect.height;\r\n    });\r\n\r\n    let stack;\r\n    let stackNode =\r\n        <Stack\r\n            style={{\r\n                width: `${rightFromLeft - left}px`,\r\n            }}\r\n            lateMountedComplete={(_stack) => {\r\n                stack = _stack;\r\n            }}\r\n            allSpacerData={allSpacerData}\r\n            document={items[0].props.document}\r\n        />;\r\n\r\n    let parentRect = itemsParent.prepareRects();\r\n    itemsParent.addChild(stackNode, undefined, undefined, undefined, (agl) => {\r\n        if (!fromUndoRedo) {\r\n            let stackId = agl.props.id;\r\n            let itemIds = items.map(item => {\r\n                return item.props.id;\r\n            });\r\n            agl.props.undoredo.add((idMan) => {\r\n                let newItems = itemIds.map(id => {\r\n                    return idMan.getItem(id);\r\n                });\r\n                newItems.forEach(item => {\r\n                    item.onSelect(true);\r\n                });\r\n                createStack(newItems, true);\r\n            }, (idMan) => {\r\n                removeStackFromAGL(idMan.getItem(stackId), undefined, true);\r\n            });\r\n        }\r\n\r\n        agl.onSelect(true);\r\n        let {gridItemStyle} =\r\n            agl.calculateGridItem(left - parentRect.left, top - parentRect.top,\r\n                itemsParent, undefined, undefined, itemsParent.getSize(false));\r\n        agl.setGridItemStyle(gridItemStyle);\r\n        agl.prepareRects();\r\n        // agl.prepareRects(true);\r\n        setTimeout(() => {\r\n            items = items.filter(item => {\r\n                return item.props.id !== agl.props.id;\r\n            });\r\n\r\n            let addToStack = (items) => {\r\n                let item = items.shift();\r\n                if (!item)\r\n                    return;\r\n\r\n                item.props.parent.onChildLeave(item);\r\n                agl.onChildDrop(item, undefined, undefined, () => {\r\n                    addToStack(items);\r\n                });\r\n            };\r\n            addToStack(items);\r\n            setTimeout(() => {\r\n                stack.setOrder();\r\n                setTimeout(() => {\r\n                    let width = agl.getSize(false, true).width;\r\n                    let parentWidth = agl.props.parent.getSize(false).width;\r\n                    agl.setProps(\"width\", `${width / parentWidth * 100}%`);\r\n                    agl.onSelect(true);\r\n                }, 0);\r\n            }, 0);\r\n        }, 0);\r\n    });\r\n}\r\n\r\nexport function removeStack(stack, childIds, fromUndoRedo) {\r\n    removeStackFromAGL (stack.aglRef.current, childIds, fromUndoRedo);\r\n}\r\n\r\nexport function removeStackFromAGL(stackAgl, childIds, fromUndoRedo) {\r\n    stackAgl.removing = true;\r\n    if (!stackAgl || !stackAgl.props.isStack)\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let stackId = stackAgl.props.id;\r\n        stackAgl.props.undoredo.add((idMan) => {\r\n            removeStackFromAGL(idMan.getItem(stackId), childIds, true);\r\n        }, (idMan) => {\r\n            let newItems = childIds.map(id => {\r\n                return idMan.getItem(id);\r\n            });\r\n            createStack(newItems, true);\r\n        });\r\n    }\r\n\r\n    let newParent = stackAgl.props.parent;\r\n    stackAgl.clearItem();\r\n\r\n    let sorted = Object.values(stackAgl.allChildRefs).sort((a,b) => {\r\n        if (a && a.current && b && b.current){\r\n            let relativeYA = a.current.getFromData(\"relativeY\");\r\n            let relativeYB = b.current.getFromData(\"relativeY\");\r\n            if (relativeYA < relativeYB) {\r\n                return 1;\r\n            } else if (relativeYA === relativeYB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    newParent.onSelect(true);\r\n    newParent.prepareRects();\r\n    // newParent.prepareRects(true);\r\n    let removeChilds = (sorted) => {\r\n        let item = sorted.shift();\r\n\r\n        if (!item) {\r\n            setTimeout(() => {\r\n                newParent.onChildLeave(stackAgl);\r\n            }, 0);\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            if (item && item.current) {\r\n                item.current.props.parent.onChildLeave(item.current);\r\n                newParent.onChildDrop(item.current);\r\n            }\r\n            removeChilds(sorted, newParent);\r\n        }, 0);\r\n    };\r\n\r\n    removeChilds(sorted);\r\n    /*sorted.forEach(item => {\r\n        if (item && item.current) {\r\n            console.log(\"onChildDrop\", item.current.props.id);\r\n            item.current.props.parent.onChildLeave(item.current);\r\n            newParent.onChildDrop(item.current);\r\n        }\r\n    });*/\r\n}\r\n\r\nexport function createItem(parent, childData, fromUndoRedo, gridItemStyle, style, onChildMounted) {\r\n    childData.props = cloneObject(parent.getClearProps({...childData.props}, true));\r\n    childData.zIndex = parent.getNextIndexData(0).lastZIndex + 1;\r\n\r\n    if (gridItemStyle) {\r\n        parent.setDataInBreakpoint(\r\n            \"gridItemStyle\", gridItemStyle, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n    if (style) {\r\n        parent.setDataInBreakpoint(\r\n            \"style\", style, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n\r\n    let child = parent.createChildByData(\r\n        childData , DynamicComponents, undefined, (newItem) => {\r\n        newItem.onSelect(true);\r\n\r\n        onChildMounted && onChildMounted(newItem);\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = newItem.props.id;\r\n            let parentId = parent.props.id;\r\n            let childData = cloneObject(parent.getChildData(itemId));\r\n            parent.props.undoredo.add((idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true, gridItemStyle, style);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            });\r\n        }\r\n    });\r\n\r\n    parent.children[childData.props.id] = {\r\n        child: child,\r\n        zIndex: childData.zIndex\r\n    };\r\n\r\n    let savedChildren = parent.getFromTempData(\"savedChildren\");\r\n    savedChildren[childData.props.id] = childData;\r\n\r\n    parent.updateLayout();\r\n}\r\n\r\nexport function setDataInBreakpoint(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(prop, undefined, breakpointName);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setDataInBreakpoint(prop, saveValue, idMan.getItem(itemId), false, breakpointName, updateLayout);\r\n        }, (idMan) => {\r\n            setDataInBreakpoint(prop, oldValue, idMan.getItem(itemId), false, breakpointName, updateLayout);\r\n        }, addToUndo);\r\n    }\r\n    item.setDataInBreakpoint(prop, value, undefined, breakpointName);\r\n\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setTempData(prop, value, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromTempData(prop);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setTempData(prop, saveValue, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setTempData(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setTempData(prop, value);\r\n}\r\n\r\nexport function setStyle(newStyle, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let saveStyle = cloneObject(newStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setStyle(newStyle);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setStyleParam (param, value, item, addToUndo, breakpointName, dontAddToSnap) {\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyleParam(param, value, idMan.getItem(itemId), false, breakpointName, dontAddToSnap);\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        }, addToUndo);\r\n    }\r\n\r\n    let style = item.hasDataInBreakPoint(\"style\", undefined, breakpointName) || {};\r\n    style[param] = value;\r\n    if (value === undefined)\r\n        delete style[param];\r\n    item.setStyle(style, undefined, breakpointName, undefined, dontAddToSnap);\r\n}\r\n\r\nexport function setNewSize(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(`style.${prop}`, undefined, breakpointName);\r\n        let saveStyle = cloneObject(item.getFromData(\"style)\"));\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setNewSize(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setNewSize(prop, value);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setGridItemStyle(newGridItemStyle, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGridItemStyle = item.getFromData(\"gridItemStyle\", undefined, breakpointName);\r\n        oldGridItemStyle = cloneObject(oldGridItemStyle);\r\n        let saveGridItemStyle = cloneObject(newGridItemStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridItemStyle(saveGridItemStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridItemStyle(oldGridItemStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridItemStyle(newGridItemStyle);\r\n    item.invalidateSize(true, true, true);\r\n}\r\n\r\nexport function setGridArea(newGridArea, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldGridArea = item.getGridArea();\r\n        oldGridArea = cloneObject(oldGridArea);\r\n        let saveGridArea = cloneObject(newGridArea);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridArea(saveGridArea, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridArea(oldGridArea, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridArea(newGridArea);\r\n}\r\n\r\nexport function setGrid(newGrid, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGrid = item.getFromData(\"grid\", undefined, breakpointName);\r\n        oldGrid = cloneObject(oldGrid);\r\n        let saveGrid = cloneObject(newGrid);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGrid(saveGrid, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGrid(oldGrid, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGrid(newGrid);\r\n}\r\n\r\nexport function setAnchor(newAnchor, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldAnchor = item.getFromTempData(\"anchor\");\r\n        oldAnchor = cloneObject(oldAnchor);\r\n        let saveAnchor = cloneObject(newAnchor);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setAnchor(saveAnchor, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setAnchor(oldAnchor, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setAnchor(newAnchor);\r\n}\r\n\r\nexport function arrangeIndex(item, child, type, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldType = type === \"forward\"? \"backward\":\r\n            type === \"backward\"? \"forward\": undefined;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), type);\r\n        }, (idMan) => {\r\n            if (oldType)\r\n                arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldType);\r\n            else\r\n                changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.arrangeIndex(child, type);\r\n}\r\n\r\nexport function changeIndex (item, child, index, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), index);\r\n        }, (idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.changeIndex(child, index);\r\n}\r\n\r\nexport function resolveDesignData (item, key, value){\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName()))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    if (!key)\r\n        return;\r\n\r\n    let design = getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName());\r\n    if (!design[key])\r\n        design[key] = value || {};\r\n}\r\n\r\nexport function getCompositeDesignData (item) {\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getCompositeFromData(item.props.griddata, \"design\", breakpointData))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    console.log(\"getCompositeDesignData\", item.props.id, item.props.griddata, breakpointData);\r\n    return getCompositeFromData(item.props.griddata, \"design\", breakpointData);\r\n}\r\n\r\nexport function rotate (item, degree, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldDegree = item.getFromData(\"rotateDegree\");\r\n        item.props.undoredo.add((idMan) => {\r\n            rotate(idMan.getItem(itemId), degree, true);\r\n        }, (idMan) => {\r\n            rotate(idMan.getItem(itemId), oldDegree || 0, true);\r\n        });\r\n    }\r\n\r\n    item.setDataInBreakpoint(\"transform.rotateDegree\", degree);\r\n    item.setTransformStyle(item.getFromData(\"transform\"));\r\n    item.updateLayout(item.props.select.onScrollItem);\r\n}\r\n\r\nexport function getViewRatioStyle (value) {\r\n    if (value.includes('vh'))\r\n        return`calc(${value} * var(--vh-ratio))`;\r\n    if (value.includes('vw'))\r\n        return`calc(${value} * var(--vw-ratio))`;\r\n\r\n    return value;\r\n}\r\n\r\nexport function getValueFromCSSValue (value) {\r\n    if (!value)\r\n        return \"\";\r\n\r\n    if (value.includes(\"%\")) {\r\n        return Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        return Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        return Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function getPxValueFromCSSValue (value, parentValue, item) {\r\n    if (!value)\r\n        return;\r\n    if (!isNaN(value))\r\n        return value;\r\n\r\n    if (value.includes(\"%\")) {\r\n        let percent = Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n        return percent * parentValue / 100;\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        let percent = Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n\r\n        return percent * item.props.breakpointmanager.getWindowHeight() / 100;\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        let percent =  Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n\r\n        return percent * item.props.breakpointmanager.getWindowWidth() / 100;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function getStyleValueFromPx (value, parentValue, unit, item) {\r\n    if (!unit)\r\n        unit = \"px\";\r\n\r\n    if (unit === \"px\") {\r\n        return `${value}${unit}`;\r\n    }\r\n    if (unit === \"%\") {\r\n        return `${value / parentValue * 100}${unit}`;\r\n    }\r\n    if (unit === \"vh\") {\r\n        value = `${value / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n        return `calc(${value} * var(--vh-ratio))`;\r\n    }\r\n    if (unit === \"vw\") {\r\n        value = `${value / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n        return `calc(${value} * var(--vw-ratio))`;\r\n    }\r\n\r\n    return unit;\r\n}\r\n\r\nexport function getUnitFromStyleValue (value) {\r\n    if (!value)\r\n        return \"none\";\r\n\r\n    if (value.includes(\"%\")) {\r\n        return \"%\";\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return \"px\";\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        return \"vw\";\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        return \"vh\";\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function createContextMenu(e, item, onClose) {\r\n    if (item.props.isPage)\r\n        return;\r\n\r\n    let menu = [];\r\n\r\n    item.getContextMenu() && menu.push(item.getContextMenu());\r\n\r\n    // Copy section\r\n    let copySection = [\r\n        {\r\n            name: \"Copy\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.copy(item);\r\n            },\r\n            shortcut: \"Ctrl + C\"\r\n        },\r\n        {\r\n            name: \"Paste\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.paste(item);\r\n            },\r\n            shortcut: \"Ctrl + V\"\r\n        },\r\n        {\r\n            name: \"Duplicate\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.duplicate(item);\r\n            },\r\n            shortcut: \"Ctrl + D\"\r\n        },\r\n        {\r\n            name: \"Copy Element Design\",\r\n            subMenu: [\r\n                {\r\n                    name: \"From this breakpoint\",\r\n                    onClick: (e) => {\r\n                        copyDesign(item);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"From all breakpoint\",\r\n                    onClick: (e) => {\r\n                        copyDesign(item, true);\r\n                    }\r\n                },\r\n            ]\r\n        },\r\n    ];\r\n    let copyDesignItem = item.props.breakpointmanager.getCopyDesign();\r\n    if (copyDesignItem && isSameFamily(copyDesignItem.sourceItem, item))\r\n        copySection.push({\r\n            name: \"Paste Design\",\r\n            onClick: (e) => {\r\n                pasteDesign(item);\r\n            }\r\n        });\r\n    let overrideBps = [];\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n    Object.keys(item.props.griddata.bpData).forEach(bpName => {\r\n        if (bpName === currentBpName ||\r\n            item.props.breakpointmanager.getHighestBpName() === bpName)\r\n            return;\r\n\r\n        if (item.props.griddata.bpData[bpName] && item.props.griddata.bpData[bpName].design) {\r\n            if (!item.props.griddata.bpData[currentBpName] ||\r\n                !deepEqual(item.props.griddata.bpData[bpName].design,\r\n                    item.props.griddata.bpData[currentBpName].design)) {\r\n                overrideBps.push(bpName);\r\n            }\r\n        }\r\n    });\r\n    if (overrideBps.length > 0) {\r\n        copySection.push({\r\n            name: \"Paste From Breakpoint\",\r\n            subMenu: overrideBps.map(bpName => {\r\n                return {\r\n                    name: bpName,\r\n                    onClick: (e) => {\r\n                        pasteFromBreakpointDesign(item, bpName, currentBpName);\r\n                    }\r\n                };\r\n            })\r\n        });\r\n    }\r\n    menu.push(copySection);\r\n\r\n    let deleteSection = [];\r\n    if (!isHideInBreakpoint(item)) {\r\n        deleteSection.push(\r\n            {\r\n                name: \"Hide In Breakpoint\",\r\n                onClick: (e) => {\r\n                    hideInBreakPoint(item);\r\n                }\r\n            });\r\n    }\r\n    deleteSection.push({\r\n        name: \"Delete\",\r\n        onClick: (e) => {\r\n            item.delete();\r\n        },\r\n        shortcut: \"Delete\"\r\n    });\r\n\r\n    if (currentBpName !== item.props.breakpointmanager.getHighestBpName()) {\r\n        if (item.props.griddata.bpData[currentBpName] &&\r\n            Object.keys(item.props.griddata.bpData[currentBpName]).length > 0)\r\n        {\r\n            deleteSection.unshift({\r\n                name: \"Remove Breakpoint Overrides\",\r\n                onClick: (e) => {\r\n                    // TODO add these lines to a function with undo support\r\n                    delete item.props.griddata.bpData[currentBpName];\r\n                    item.onBreakpointChange(\r\n                        item.props.breakpointmanager.getWindowWidth(),\r\n                        item.props.breakpointmanager.current());\r\n                    item.props.select.onScrollItem();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    menu.push(deleteSection);\r\n\r\n    let shortcutSection = [];\r\n    if (!item.props.griddata.isSection) {\r\n        shortcutSection.push({\r\n            name: \"Arrange\",\r\n            subMenu: [\r\n                {\r\n                    name: \"Move Forward\",\r\n                    shortcut: \"Ctrl + Alt + ↑\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"forward\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move to Front\",\r\n                    shortcut: \"Ctrl + ↑\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"front\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move Backward\",\r\n                    shortcut: \"Ctrl + Alt + ↓\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"backward\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move to Back\",\r\n                    shortcut: \"Ctrl + ↓\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"back\", true);\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    menu.push(shortcutSection);\r\n\r\n    let sectionSection = [];\r\n    if (item.props.isSection) {\r\n        if (item.props.isVerticalSection) {\r\n            sectionSection.push({\r\n                name: \"Move Left\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveLeft(item.props.id);\r\n                },\r\n            });\r\n            sectionSection.push({\r\n                name: \"Move Right\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveRight(item.props.id);\r\n                },\r\n            });\r\n        } else {\r\n            sectionSection.push({\r\n                name: \"Move Up\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveUp(item.props.id);\r\n                },\r\n            });\r\n            sectionSection.push({\r\n                name: \"Move Down\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveDown(item.props.id);\r\n                },\r\n            });\r\n        }\r\n    }\r\n    menu.unshift(sectionSection);\r\n\r\n    let masterSection = [\r\n    ];\r\n\r\n    return <ContextMenu\r\n        menu={menu}\r\n        onClose={onClose}\r\n        clientX={e.clientX}\r\n        clientY={e.clientY}\r\n    />\r\n}\r\n\r\nexport function isHideInBreakpoint(item) {\r\n    if (!item)\r\n        return false;\r\n\r\n    if (typeof item.getCompositeFromData(\"style\").display === 'string')\r\n        return item.getCompositeFromData(\"style\").display.includes(\"none\");\r\n\r\n    return false;\r\n}\r\n\r\nexport function isSameFamily(item1, item2) {\r\n    if (item1.props.tagName === item2.props.tagName)\r\n        return true;\r\n\r\n    if (item1.props.griddata.isSection && item2.props.griddata.isSection)\r\n        return true;\r\n}\r\n\r\nexport function isLeftClick (e) {\r\n    if (e.button === 0)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport function isRightClick (e) {\r\n    if (e.button === 2)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport function getResizeDelta (degree, dir, delta) {\r\n    let rad = degree * Math.PI / 180;\r\n    let cx = delta.x, cy = delta.y;\r\n    let cxy = Math.sqrt(cx * cx + cy * cy);\r\n    let cxp = cy !== 0 ? cy / Math.tan(rad) : 0;\r\n    let cyp = cx !== 0 ? -cx / Math.tan(rad) : 0;\r\n\r\n    let thetaH = Math.atan(Math.abs(cy) / Math.abs(cx));\r\n    let thetaW = Math.atan(Math.abs(cy) / Math.abs(cx));\r\n\r\n    if (cx * cy > 0)\r\n        thetaW = -thetaW;\r\n    if (cx * cy > 0)\r\n        thetaH = -thetaH;\r\n\r\n    let Dh = Math.abs(Math.sin(rad + thetaH) * cxy);\r\n    let Dw = Math.abs(Math.cos(rad + thetaW) * cxy);\r\n\r\n    if (cxp < cx)\r\n        Dh = -Dh;\r\n    if (cyp > cy)\r\n        Dw = -Dw;\r\n\r\n    if (degree > 180) {\r\n        Dh = -Dh;\r\n        Dw = -Dw;\r\n    }\r\n\r\n    let dxH = Dh * Math.sin(rad);\r\n    let dyH = Dh * Math.cos(rad);\r\n    let dxW = Dw * Math.cos(rad);\r\n    let dyW = Dw * Math.sin(rad);\r\n\r\n    let finalDelta = {\r\n        top: 0, left: 0, width: 0, height: 0\r\n    };\r\n\r\n    if (dir.includes('n')) {\r\n        finalDelta.height -= Dh;\r\n        finalDelta.top += ((Dh + dyH) / 2);\r\n        finalDelta.left -= (dxH / 2);\r\n    }\r\n\r\n    if (dir.includes('s')) {\r\n        finalDelta.height += Dh;\r\n        finalDelta.top -= ((Dh - dyH) / 2);\r\n        finalDelta.left -= (dxH / 2);\r\n    }\r\n\r\n    if (dir.includes('w')) {\r\n        finalDelta.width -= Dw;\r\n        finalDelta.top += (dyW / 2);\r\n        finalDelta.left += ((Dw + dxW) / 2);\r\n    }\r\n\r\n    if (dir.includes('e')) {\r\n        finalDelta.width += Dw;\r\n        finalDelta.top += (dyW / 2);\r\n        finalDelta.left -= ((Dw - dxW) / 2);\r\n    }\r\n\r\n    console.log(\"finalDelta\", finalDelta, Dw, dyW, dxW);\r\n    return finalDelta;\r\n}\r\n\r\nexport function sortBy (array, param) {\r\n    array = array.sort((a, b) => {\r\n        if (a[param] < b[param]) {\r\n            return -1;\r\n        } else if (a[param] === b[param]) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    });\r\n    return array;\r\n}\r\n\r\nexport function getColorScheme (baseColor) {\r\n    return {\r\n        \"1\": chroma(baseColor).luminance(0.025).css(),\r\n        \"2\": chroma(baseColor).luminance(0.06).css(),\r\n        \"3\": chroma(baseColor).luminance(0.15).css(),\r\n        \"4\": chroma(baseColor).luminance(0.35).css(),\r\n        \"5\": chroma(baseColor).luminance(0.55).css(),\r\n    }\r\n}\r\n\r\nexport function parseColor (color, alpha, editor) {\r\n    console.log(\"parseColor\", color, alpha)\r\n    if (!color) {\r\n        color = '#000000';\r\n        alpha = alpha || 0;\r\n    }\r\n\r\n    if (color instanceof Object) {\r\n        let chromaColor = chroma(editor.themeManagerRef.current.getColor(color.paletteName, color.key));\r\n        if (alpha === undefined || color.alpha !== undefined)\r\n            chromaColor = chromaColor.alpha(alpha || color.alpha);\r\n        else\r\n            chromaColor = chromaColor.alpha(1);\r\n        return chromaColor.css();\r\n    } else {\r\n        let chromaColor = chroma(color);\r\n        // chromaColor = chromaColor.alpha(alpha || 1);\r\n        if (alpha !== undefined)\r\n            chromaColor = chromaColor.alpha(alpha);\r\n        return chromaColor.css();\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class NumberInputWithUnit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    inputFilter = (value, oldValue) => {\r\n        let okay = false;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (!isNaN(value))\r\n                okay = true;\r\n        } catch {}\r\n        if (okay) {\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\" || isNaN(value)) {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (value.endsWith(\".\"))\r\n            value += \"0\";\r\n        value = this.inputFilter(value, this.getValue(this.props.value));\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    onShowUnits = (e) => {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    getValue = (value) => {\r\n        if (!value)\r\n            return \"\";\r\n\r\n        if (typeof value !== 'string')\r\n            return value;\r\n\r\n        if (value.includes(\"%\")) {\r\n            return Math.round(parseFloat(value.replace(\"%\", \"\")) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return Math.round(parseFloat(value.replace(\"px\", \"\")) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return Math.round(parseFloat(\r\n                value.replace(/[^0-9\\.]/g, '')\r\n            ) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return Math.round(parseFloat(\r\n                value.replace(/[^0-9\\.]/g, '')\r\n            ) * 10) / 10;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let classes = classNames(\r\n            \"NumberInputWithUnit\",\r\n            this.props.className\r\n        );\r\n\r\n        return (\r\n            <div className={classes}>\r\n                <input\r\n                    style={{...{\r\n                        textAlign: \"left\",\r\n                        width: 64\r\n                    }, ...this.props.inputStyle}}\r\n                    className=\"NumberInput\"\r\n                    value={![\"%\", \"px\", \"vw\", \"vh\", \"°\"].includes(this.props.unit) ? \"\" :\r\n                        (this.getValue(this.props.value) || 0)}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    disabled={![\"%\", \"px\", \"vw\", \"vh\", \"°\"].includes(this.props.unit) || this.props.disabled}\r\n                >\r\n                </input>\r\n\r\n                <IconButton\r\n                    ref={this.unitIconButton}\r\n                    className=\"InputUnitButton\"\r\n                    buttonBaseStyle={{\r\n                        marginLeft: 0,\r\n                    }}\r\n                    imageContainerStyle={{\r\n                        padding: 6\r\n                    }}\r\n                    onClick={!this.props.disabled ? this.onShowUnits : undefined}\r\n                    style={this.props.unitButtonStyle}\r\n                    disabled={this.props.disableUnit}\r\n                >\r\n                    <span style={{\r\n                        color: \"#0a108b\"\r\n                    }}>\r\n                        {this.props.unit || \"none\"}\r\n                    </span>\r\n                </IconButton>\r\n\r\n                <Menu\r\n                    style={{...{\r\n                            zIndex: 99999999999\r\n                        }, ...this.props.unitMenuStyle}}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.units.map((unit, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onUnitChange)\r\n                                            this.props.onUnitChange(unit);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                >\r\n                                    <span style={{\r\n                                        color: \"#0a108b\"\r\n                                    }}>\r\n                                        {unit}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n\r\n                {\r\n                    this.props.disabled &&\r\n                    <div\r\n                        className=\"NumberInputWithUnitDisabled\"\r\n                        style={{...{\r\n                                textAlign: \"left\",\r\n                                width: 64\r\n                            }, ...this.props.inputStyle}}\r\n                    >\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: props.defaultOpen || false\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ButtonBase className=\"InspectorOptionTitle\" onClick={(e) => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(!this.state.open);\r\n                this.setState({open: !this.state.open});\r\n            }}>\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n\r\n                    <div className=\"InspectorOptionTitleExpandIcon\">\r\n                        {\r\n                            this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={'/static/icon/down-arrow.svg'} />\r\n                        }\r\n                        {\r\n                            !this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={'/static/icon/right-arrow.svg'} />\r\n                        }\r\n                    </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue,\r\n    getViewRatioStyle,\r\n    setNewSize\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorSize extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let oldValue = item.getCompositeFromData(\"style\")[prop];\r\n        if ([\"%\", \"px\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n        } else if ([\"vh\", \"vw\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n            value = getViewRatioStyle(value);\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    onUnitChange = (prop, unit, parentValue, defaultValue) => {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n\r\n        if (isNaN(defaultValue))\r\n            defaultValue = 0;\r\n\r\n        let value;\r\n        if (unit === \"px\") {\r\n            value = `${item.getSize(false)[prop] ||\r\n            getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            parentValue * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n            value = getViewRatioStyle(value);\r\n        } else if (unit === \"vw\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n            value = getViewRatioStyle(value);\r\n        } else if (unit === \"none\") {\r\n            value = undefined;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value || value === \"unset\")\r\n            return \"none\";\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return \"px\";\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return \"vw\";\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return \"vh\";\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    runtimeValueToStyleValue = (propName, parentValue, value, style,) => {\r\n        let unit = this.getUnit(style[propName]);\r\n        let {item} = this.props;\r\n\r\n        if (unit === \"px\") {\r\n            value = `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${value /\r\n            parentValue * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${value / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n            value = `calc(${value} * var(--vh-ratio))`;\r\n        } else if (unit === \"vw\") {\r\n            value = `${value / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n            value = `calc(${value} * var(--vw-ratio))`;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n        let runtimeStyle = item.state.runtimeStyle;\r\n        let runtimeGridItemStyle = item.getRuntimeGridItemStyle() || {\r\n            widthForPercent: item.props.breakpointmanager.getWindowWidth(),\r\n            heightForPercent: item.props.breakpointmanager.getWindowHeight(),\r\n        };\r\n        return (\r\n            <>\r\n                <InspectorTitle defaultOpen title=\"Size\" onChange={(open)=>{\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorSizeRow\">\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Width\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('width')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"width\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.width}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"width\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        this.onUnitChange(\"width\", unit, parentRect.scrollWidthMinusPadding);\r\n                                    }}\r\n                                    units={this.props.widthUnits}\r\n                                    unit={this.getUnit(style.width)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Height\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('height')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"height\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.height}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"height\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        this.onUnitChange(\"height\", unit, parentRect.scrollHeightMinusPadding);\r\n                                    }}\r\n                                    units={this.props.heightUnits}\r\n                                    unit={this.getUnit(style.height)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"InspectorSizeRow\">\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min W\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('minWidth')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"minWidth\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.minWidth}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"minWidth\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 1;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let width = getPxValueFromCSSValue(style.width, parentRect.scrollWidthMinusPadding, item);\r\n                                        let maxWidth = getPxValueFromCSSValue(style.maxWidth, parentRect.scrollWidthMinusPadding, item);\r\n                                        if (isNaN(width) && !isNaN(maxWidth))\r\n                                            defaultValue = maxWidth;\r\n                                        else if (!isNaN(width) && isNaN(maxWidth))\r\n                                            defaultValue = width;\r\n                                        else if (!isNaN(width) && !isNaN(maxWidth))\r\n                                            defaultValue = Math.min(width, maxWidth);\r\n\r\n                                        this.onUnitChange(\"minWidth\", unit, parentRect.scrollWidthMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.minWidthUnits}\r\n                                    unit={this.getUnit(style.minWidth)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min H\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('minHeight')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"minHeight\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.minHeight}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"minHeight\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 1;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let height = getPxValueFromCSSValue(style.height, parentRect.scrollHeightMinusPadding, item);\r\n                                        let maxHeight = getPxValueFromCSSValue(style.maxHeight, parentRect.scrollHeightMinusPadding, item);\r\n                                        if (isNaN(height) && !isNaN(maxHeight))\r\n                                            defaultValue = maxHeight;\r\n                                        else if (!isNaN(height) && isNaN(maxHeight))\r\n                                            defaultValue = height;\r\n                                        else if (!isNaN(height) && !isNaN(maxHeight))\r\n                                            defaultValue = Math.min(height, maxHeight);\r\n\r\n                                        this.onUnitChange(\"minHeight\", unit, parentRect.scrollHeightMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.minHeightUnits}\r\n                                    unit={this.getUnit(style.minHeight)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"InspectorSizeRow\" style={{\r\n                            marginBottom: 0\r\n                        }}>\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max W\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('maxWidth')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"maxWidth\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.maxWidth}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"maxWidth\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 200;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let width = getPxValueFromCSSValue(style.width, parentRect.scrollWidthMinusPadding, item);\r\n                                        let minWidth = getPxValueFromCSSValue(style.minWidth, parentRect.scrollWidthMinusPadding, item);\r\n                                        if (isNaN(width) && !isNaN(minWidth))\r\n                                            defaultValue = minWidth;\r\n                                        else if (!isNaN(width) && isNaN(minWidth))\r\n                                            defaultValue = width;\r\n                                        else if (!isNaN(width) && !isNaN(minWidth))\r\n                                            defaultValue = Math.max(width, minWidth);\r\n\r\n                                        this.onUnitChange(\"maxWidth\", unit, parentRect.scrollWidthMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.maxWidthUnits}\r\n                                    unit={this.getUnit(style.maxWidth)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max H\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('maxHeight')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"maxHeight\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.maxHeight}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"maxHeight\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 200;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let height = getPxValueFromCSSValue(style.height, parentRect.scrollHeightMinusPadding, item);\r\n                                        let minHeight = getPxValueFromCSSValue(style.minHeight, parentRect.scrollHeightMinusPadding, item);\r\n                                        if (isNaN(height) && !isNaN(minHeight))\r\n                                            defaultValue = minHeight;\r\n                                        else if (!isNaN(height) && isNaN(minHeight))\r\n                                            defaultValue = height;\r\n                                        else if (!isNaN(height) && !isNaN(minHeight))\r\n                                            defaultValue = Math.max(height, minHeight);\r\n\r\n                                        this.onUnitChange(\"maxHeight\", unit, parentRect.scrollHeightMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.maxHeightUnits}\r\n                                    unit={this.getUnit(style.maxHeight)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspectorSize.defaultProps = {\r\n    disabledProps: []\r\n};\r\n","import Switch from \"@material-ui/core/Switch/Switch\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst DockSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 42,\r\n        height: 10,\r\n        padding: 4,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 0,\r\n        color: \"#d2d2d2\",\r\n        '&$checked': {\r\n            transform: 'translateX(28px) scale(1)',\r\n            color: \"#849dff\",\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: \"#849dff\",\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 10,\r\n        height: 10,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: \"#a2a2a2\",\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n\r\nexport default DockSwitch;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue,\r\n    getUnitFromStyleValue,\r\n    setGridItemStyle,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport DockSwitch from \"./DockSwitch\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorPosition extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onDockActiveChange = (side, value) => {\r\n        let {item} = this.props;\r\n        let oldDocks = cloneObject(item.getFromData(\"docks\") || {});\r\n\r\n        oldDocks[side] = value;\r\n        if (side === \"top\" && value) {\r\n            oldDocks.bottom = false;\r\n        }\r\n        if (side === \"bottom\" && value) {\r\n            oldDocks.top = false;\r\n        }\r\n\r\n        item.setDocks(oldDocks.top, oldDocks.left, oldDocks.bottom, oldDocks.right,\r\n            item.getFromTempData(\"autoDeck\"));\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n    };\r\n\r\n    onDockAutoChange = () => {\r\n        let {item} = this.props;\r\n        setTempData(\"autoDock\", !item.getFromTempData(\"autoDock\"), item, true);\r\n    };\r\n\r\n    onUnitChange = (prop, parentProp, unit) => {\r\n        let {item} = this.props;\r\n        let gridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let compositeGridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        if (!gridItemStyle)\r\n            gridItemStyle = {};\r\n\r\n        let parentRect = item.props.parent.getSize(false);\r\n        let value = getPxValueFromCSSValue(compositeGridItemStyle[prop], parentRect.scrollWidthMinusPadding, item);\r\n\r\n        if (unit === \"px\") {\r\n            gridItemStyle[prop] = `${value}${unit}`;\r\n        } else if (unit === \"%\") {\r\n            // let runtimeGridItemStyle = item.getRuntimeGridItemStyle();\r\n            gridItemStyle[prop] = `${value / parentRect.scrollWidthMinusPadding * 100}${unit}`;\r\n        }\r\n\r\n        setGridItemStyle(gridItemStyle, item, true);\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n    };\r\n\r\n    onValueChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let gridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let compositeGridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        if (!gridItemStyle)\r\n            gridItemStyle = {};\r\n        gridItemStyle[prop] = `${value}${getUnitFromStyleValue(compositeGridItemStyle[prop])}`;\r\n\r\n        setGridItemStyle(gridItemStyle, item, true);\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n        item.props.select.updateResizePanes(item, item.getSize(false));\r\n    };\r\n\r\n    runtimeValueToStyleValue = (propName, parentValue, value, style) => {\r\n        if (!style)\r\n            return;\r\n\r\n        let unit = getUnitFromStyleValue(style[propName]);\r\n        let {item} = this.props;\r\n\r\n        if (unit === \"px\") {\r\n            value = `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${value /\r\n            parentValue * 100}%`;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let docks = item.getCompositeFromData(\"docks\");\r\n        let auto = item.getFromTempData(\"autoDock\");\r\n        let gridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        let runtimeStyle = item.state.runtimeStyle;\r\n        let runtimeGridItemStyle = item.getRuntimeGridItemStyle();\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Position\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorDockingRoot\">\r\n                            <span className=\"InspectorDockingRootTitle\">\r\n                                Docking\r\n                            </span>\r\n\r\n                            <div className=\"InspectorDockingDocks\">\r\n                                <div className=\"InspectorDockingLeft\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch\"\r\n                                        checked={docks.left || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('left', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingRight\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch\"\r\n                                        checked={docks.right || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('right', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingTop\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch90\"\r\n                                        checked={docks.top || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('top', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingBottom\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch90\"\r\n                                        checked={docks.bottom || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('bottom', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    auto &&\r\n                                    <div className=\"InspectorDockingDisable\"/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"InspectorOverflowDir\">\r\n                        <span className=\"InspectorOverflowDirTitle\">\r\n                            Auto docking\r\n                        </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={auto || false}\r\n                                onChange={(e) => {\r\n                                    this.onDockAutoChange();\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"InspectorOverflowMarginRoot\">\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.top || auto}\r\n                                value={docks.top && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginTop : gridItemStyle.marginTop)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginTop\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginTop\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={\r\n                                    docks.top &&\r\n                                    getUnitFromStyleValue(\r\n                                        runtimeStyle && runtimeGridItemStyle ?\r\n                                            runtimeGridItemStyle.marginTop : gridItemStyle.marginTop)\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.left || auto}\r\n                                value={docks.left && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginLeft : gridItemStyle.marginLeft)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginLeft\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginLeft\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.left &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginLeft : gridItemStyle.marginLeft)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.bottom || auto}\r\n                                value={docks.bottom && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginBottom : gridItemStyle.marginBottom)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginBottom\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginBottom\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.bottom &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginBottom : gridItemStyle.marginBottom)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.right || auto}\r\n                                value={docks.right && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginRight : gridItemStyle.marginRight)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginRight\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginRight\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.right &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginRight : gridItemStyle.marginRight)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\n\r\nexport default class DropDown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    onChange = (option) => {\r\n        this.props.onChange(option);\r\n    };\r\n\r\n    getValue = () => {\r\n        if (this.props.valueRenderer) {\r\n            return this.props.valueRenderer(this.props.value) ||\r\n                (this.props.renderer && this.props.renderer(this.props.value)) ||\r\n                this.props.value || \"\";\r\n        } else {\r\n            return this.props.value || \"\";\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"DropDownRoot\">\r\n                <span\r\n                    className=\"DropDownSpan\"\r\n                    style={{...this.props.spanStyle, ...{\r\n                        cursor: \"pointer\"\r\n                    }}}\r\n                    onClick={this.onClick}\r\n                >\r\n                    {console.log(\"DropDown\", this.getValue())}\r\n                    {this.getValue()}\r\n                </span>\r\n\r\n                <Menu\r\n                    style={{...{\r\n                            zIndex: 99999999999\r\n                        }, ...this.props.menuStyle}}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0,\r\n                            width: this.props.spanStyle? this.props.spanStyle.width: \"auto\"\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.options.map((option, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onChange)\r\n                                            this.props.onChange(option);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                    style={{...(option.disabled && {\r\n                                        pointerEvents: \"none\"\r\n                                    })}}\r\n                                >\r\n                                    <span style={{\r\n                                        width: \"100%\"\r\n                                    }}>\r\n                                        {this.props.renderer ? this.props.renderer(option) : option}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n\r\n                <div\r\n                    className=\"DropDOwnArrow\"\r\n                >\r\n                    <img width={10} height={10} src={\"/static/icon/down-arrow.svg\"}/>\r\n                </div>\r\n\r\n                {\r\n                    this.props.disabled &&\r\n                    <div\r\n                        className=\"DropDOwnDisabled\"\r\n                        style={this.props.spanStyle}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class NumberInput extends React.Component {\r\n    inputFilter = (value, oldValue) => {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = parseFloat(value).toFixed(0);\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = this.inputFilter(e.target.value, this.props.value);\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className=\"NumberInput\"\r\n                value={this.props.value || 0}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport {getValueFromCSSValue, setScrollBehaviour} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInput from \"../../Menus/CommonComponents/NumberInput\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorScroll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeScrollEffect = (option) => {\r\n        let {item} = this.props;\r\n        let offsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        setScrollBehaviour(item, option, item.props.viewRef.current, false, {offsetTop});\r\n    };\r\n\r\n    onChangeOffsetTop = (offsetTop) => {\r\n        offsetTop = `${offsetTop}px`;\r\n        let {item} = this.props;\r\n        let behaviour = item.getFromData(\"scrollBehaviour\");\r\n        setScrollBehaviour(item, behaviour, item.props.viewRef.current, false, {offsetTop});\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let behaviour = item.getFromData(\"scrollBehaviour\");\r\n        let offsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Scroll\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorScrollEffect\"\r\n                             style={{\r\n                                 marginBottom: behaviour === 'sticky' ? 12 : 0\r\n                             }}\r\n                        >\r\n                            <div className=\"InspectorScrollTitle\">\r\n                                Scroll effect\r\n                            </div>\r\n\r\n                            <DropDown\r\n                                options={this.props.options || ['none', 'fixed', 'sticky']}\r\n                                onChange={this.onChangeScrollEffect}\r\n                                value={behaviour || 'none'}\r\n                                spanStyle={{\r\n                                    width: 96,\r\n                                    fontSize: 12\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            behaviour === 'sticky' &&\r\n                            <div className=\"InspectorScrollEffect\">\r\n                                <div className=\"InspectorScrollTitle\">\r\n                                    Offset top\r\n                                </div>\r\n\r\n                                <NumberInput\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    value={getValueFromCSSValue(offsetTop)}\r\n                                    onChange={this.onChangeOffsetTop}\r\n                                    inputStyle={{\r\n                                        width: 96,\r\n                                        fontSize: 12,\r\n                                        textAlign: \"left\"\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue, getStyleValueFromPx,\r\n    getUnitFromStyleValue,\r\n    setDataInBreakpoint,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorPadding extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onUnitChange = (prop, parentProp, unit) => {\r\n        let {item} = this.props;\r\n        let padding = cloneObject(item.getFromData(\"padding\")) || {};\r\n        let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n\r\n        let parentRect = item.props.parent.getSize(false);\r\n        let value = getPxValueFromCSSValue(compositePadding[prop], parentRect.width, item);\r\n\r\n        if (unit === \"px\") {\r\n            padding[prop] = `${value}${unit}`;\r\n        } else if (unit === \"%\") {\r\n            padding[prop] = `${value / item.props.parent.getSize(false).width * 100}${unit}`;\r\n        }\r\n        else if (unit === \"vh\") {\r\n            padding[prop] = `${value / item.props.breakpointmanager.getWindowHeight() * 100}${unit}`;\r\n        }\r\n        else if (unit === \"vw\") {\r\n            padding[prop] = `${value / item.props.breakpointmanager.getWindowWidth() * 100}${unit}`;\r\n        }\r\n\r\n        setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n    };\r\n\r\n    onValueChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let equalPadding = item.getFromTempData(\"equalPadding\");\r\n        let padding = cloneObject(item.getFromData(\"padding\")) || {};\r\n        let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n        padding[prop] = `${value}${getUnitFromStyleValue(compositePadding[prop] || \"px\")}`;\r\n        if (equalPadding) {\r\n            let parentRect = item.props.parent? item.props.parent.getSize(false):\r\n                {\r\n                    scrollWidthMinusPadding: item.props.breakpointmanager.getWindowWidth()\r\n                };\r\n            let pxValue = getPxValueFromCSSValue(padding[prop], parentRect.scrollWidthMinusPadding, item);\r\n            padding = {\r\n                top: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.top || \"px\"), item)}`,\r\n                left: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.left || \"px\"), item)}`,\r\n                bottom: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.bottom || \"px\"), item)}`,\r\n                right: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.right || \"px\"), item)}`,\r\n            };\r\n        }\r\n\r\n        setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n\r\n        item.invalidateSize(true, true, true, undefined, true);\r\n\r\n        window.requestAnimationFrame(() => {\r\n            item.props.select.onScrollItem();\r\n        })\r\n    };\r\n\r\n    onEqualPadding = (equalPadding) => {\r\n        let {item} = this.props;\r\n\r\n        setTempData(\"equalPadding\", equalPadding, item, true);\r\n        if (equalPadding) {\r\n            let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n\r\n            let parentRect = item.props.parent? item.props.parent.getSize(false):\r\n                {\r\n                    scrollWidthMinusPadding: item.props.breakpointmanager.getWindowWidth()\r\n                };\r\n            let max = Math.max(\r\n                getPxValueFromCSSValue(compositePadding.top, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.left, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.bottom, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.right, parentRect.scrollWidthMinusPadding, item) || 0,\r\n            );\r\n\r\n            let padding = {\r\n                top: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.top || \"px\"), item)}`,\r\n                left: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.left || \"px\"), item)}`,\r\n                bottom: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.bottom || \"px\"), item)}`,\r\n                right: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.right || \"px\"), item)}`,\r\n            };\r\n\r\n            setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n\r\n            item.invalidateSize(true, true, true, undefined, true);\r\n        }\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let padding = item.getCompositeFromData(\"padding\") || {};\r\n        let equalPadding = item.getFromTempData(\"equalPadding\") || false;\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Padding\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorOverflowMarginRoot\">\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.top || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"top\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"top\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.top || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.left || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"left\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"left\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.left || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.bottom || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"bottom\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"bottom\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.bottom || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.right || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"right\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"right\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.right || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"InspectorAdjustRotate\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Equal padding\r\n                                </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={equalPadding}\r\n                                onChange={(e) => {\r\n                                    let checked = e.target.checked;\r\n                                    this.onEqualPadding(checked);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport {setDataInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorOverflow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeState = (e, value) => {\r\n        let {item} = this.props;\r\n        let thisBpOverflowData = item.getFromData(\"overflowData\");\r\n        let compositOverflowData = item.getCompositeFromData(\"overflowData\");\r\n        if (value === 'scroll' &&\r\n            (!compositOverflowData ||\r\n            ((!compositOverflowData.overflowY || compositOverflowData.overflowY === \"hidden\")&&\r\n            (!compositOverflowData.overflowX || compositOverflowData.overflowX === \"hidden\"))))\r\n        {\r\n            let newOverflowData = cloneObject(thisBpOverflowData || {});\r\n            newOverflowData.state = 'scroll';\r\n            newOverflowData.overflowY = 'scroll';\r\n            console.log(\"onChangeState\", JSON.stringify(newOverflowData));\r\n            setDataInBreakpoint(\"overflowData\", newOverflowData, item, true, undefined, true);\r\n            return;\r\n        }\r\n\r\n        setDataInBreakpoint(\"overflowData.state\", value, item, true, undefined, true);\r\n    };\r\n\r\n    changeScrollDirection = (propName, checked) => {\r\n        let {item} = this.props;\r\n        setDataInBreakpoint(`overflowData.${propName}`, checked? 'scroll': undefined\r\n            , item, true, undefined, true);\r\n    };\r\n\r\n    onChangeAuto = (e, value) => {\r\n        let {item} = this.props;\r\n        setDataInBreakpoint(\"overflowData.auto\", value, item, true, undefined, true);\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let overflowData = item.getCompositeFromData(\"overflowData\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Overflow content\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorAnchorNameTitle\">\r\n                            Overflow\r\n                        </div>\r\n                        <ToggleButtonGroup\r\n                            className=\"InspectorOverflowType\"\r\n                            size='small'\r\n                            value={overflowData.state}\r\n                            exclusive\r\n                            onChange={this.onChangeState}\r\n                        >\r\n                            <ToggleButton value=\"show\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                        style={{\r\n                                            padding: 3\r\n                                        }}\r\n                            >\r\n                                Show\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"hide\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                          style={{\r\n                                              padding: 3\r\n                                          }}\r\n                            >\r\n                                Hide\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"scroll\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                          style={{\r\n                                              padding: 3\r\n                                          }}\r\n                            >\r\n                                Scroll\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n\r\n                        {\r\n                            overflowData.state === 'scroll' &&\r\n                            <>\r\n                                <div className=\"InspectorOverflowDir\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scroll vertically\r\n                                </span>\r\n                                    <Switch\r\n                                        className=\"InspectorOverflowDirSwitch\"\r\n                                        checked={overflowData.overflowY === \"scroll\" || overflowData.overflowY === \"auto\"}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.changeScrollDirection('overflowY', checked);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorOverflowDir\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scroll horizontally\r\n                                </span>\r\n                                    <Switch\r\n                                        className=\"InspectorOverflowDirSwitch\"\r\n                                        checked={overflowData.overflowX === \"scroll\" || overflowData.overflowX === \"auto\"}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.changeScrollDirection('overflowX', checked);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorOverflowAuto\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scrollbar visibility\r\n                                </span>\r\n                                </div>\r\n                                <ToggleButtonGroup\r\n                                    className=\"InspectorOverflowAutoToggles\"\r\n                                    size='small'\r\n                                    value={overflowData.auto || \"always\"}\r\n                                    exclusive\r\n                                    onChange={this.onChangeAuto}\r\n                                >\r\n                                    <ToggleButton value=\"hide\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Hide\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"auto\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Auto\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"always\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Show\r\n                                    </ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class TextInput extends React.Component {\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (this.props.onChange)\r\n            this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                {...this.props}\r\n                className=\"NumberInput\"\r\n                value={this.props.value || \"\"}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport TextInput from \"../../Menus/CommonComponents/TextInput\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorAnchor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onEnableAnchor = (enable) => {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        if (enable) {\r\n            item.props.anchorMan.addAnchor(item.props.id.replace(\"comp_\", ''), item);\r\n        }\r\n        else {\r\n            item.props.anchorMan.removeAnchor(anchor.id, item);\r\n        }\r\n    };\r\n\r\n    onChangeName = (newName) => {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        item.props.anchorMan.modifyAnchor(anchor.id, newName, item);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Anchor\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n\r\n                        <div className=\"InspectorOverflowDir\">\r\n                        <span className=\"InspectorOverflowDirTitle\">\r\n                            Enable Anchor\r\n                        </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={anchor !== undefined}\r\n                                onChange={(e) => {\r\n                                    this.onEnableAnchor(e.target.checked);\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            anchor &&\r\n                            <div className=\"InspectorAnchorName\">\r\n                                <div className=\"InspectorAnchorNameTitle\">\r\n                                    Anchor name\r\n                                </div>\r\n                                <TextInput\r\n                                    value={anchor.name}\r\n                                    onChange={(v) => this.onChangeName(v)}\r\n                                    inputStyle={{\r\n                                        width: \"auto\",\r\n                                        textAlign: \"left\"\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {rotate} from \"../../AwesomwGridLayoutHelper\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\n\r\nexport default class InspectorAdjustment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onRotationChange = (degree) => {\r\n        console.warn(\"onRotationChange\", degree)\r\n        let {item} = this.props;\r\n\r\n        rotate(item, degree);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let rotate = item.getFromData(\"transform.rotateDegree\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Adjust\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorAdjustRotate\">\r\n                            <span className=\"InspectorOverflowDirTitle\">\r\n                                Rotate\r\n                            </span>\r\n                            <NumberInputWithUnit\r\n                                min={0}\r\n                                max={360}\r\n                                value={rotate || 0}\r\n                                onChange={(value) => {\r\n                                    this.onRotationChange(value);\r\n                                }}\r\n                                units={[\"°\"]}\r\n                                unit={\"°\"}\r\n                                inputStyle={{\r\n                                    width: 64,\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                                disableUnit\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {assignData, cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport {getCompositeDesignData, setDataInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorPosition from \"../../Test/Inspector/InspectorPosition\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport InspectorAdjustment from \"../../Test/Inspector/InspectorAdjustment\";\r\n\r\nexport default class AGLComponent extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    resolveDesignData = () => {\r\n        // Must Override\r\n    };\r\n\r\n    getData = () => {\r\n        let componentData = this.getDefaultData && this.getDefaultData();\r\n        let componentBpData = componentData.bpData;\r\n        componentData = assignData(componentData, cloneObject(this.props.data));\r\n        if (componentBpData) {\r\n            let tempBpData = componentData.bpData;\r\n            componentData.bpData = assignData(componentBpData, tempBpData);\r\n        }\r\n\r\n        return componentData;\r\n    };\r\n\r\n    getAgl = () => {\r\n        return this.props.aglRef.current;\r\n    };\r\n\r\n    onDesignChange = (designKey, value) => {\r\n        console.log(\"onDesignChange\", designKey, value)\r\n        setDataInBreakpoint(designKey, value, this.getAgl(), true, undefined, true);\r\n        this.updateDesign(getCompositeDesignData(this.getAgl()));\r\n    };\r\n\r\n    getInspector = () => {\r\n        if (this.getInspectorOverride)\r\n            return this.getInspectorOverride();\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPosition\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAdjustment\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class MenuButton extends React.Component {\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    onClick = (e) => {\r\n        let {menu} = this.props;\r\n        this.props.select.updateMenu((typeof menu === \"function\") ? menu(e) : menu);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                {\r\n                    this.props.icon\r\n                }\r\n                {\r\n                    this.props.children\r\n                }\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport '../../HelperStyle.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class MenuBaseIndexTitle extends React.Component {\r\n    render () {\r\n        return (\r\n            <div\r\n                className=\"MenuBaseIndexTitle\"\r\n            >\r\n                <ButtonBase\r\n                    disableRipple={!this.props.onIndexClick}\r\n                    onClick={(e) => {\r\n                        this.props.onIndexClick &&\r\n                        this.props.onIndexClick(e, this.props.title, this.props.index)\r\n                    }}\r\n                >\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n                </ButtonBase>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst LightTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#fff\",\r\n        color: '#000000',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 14,\r\n    },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip\r\n\r\nexport const LightMenuTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#fff\",\r\n        color: '#000000',\r\n        boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n        fontSize: 14,\r\n        padding: 0\r\n    },\r\n}))(Tooltip);\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport Draggable from 'react-draggable';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport '../../HelperStyle.css';\r\nimport MenuBaseIndexTitle from \"./MenuBaseIndexTitle\";\r\nimport LightTooltip from \"../../Components/Containers/Menus/Components/LightTooltip\";\r\n\r\nexport default class MenuBase extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedIndexNo: props.defaultIndexNo\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        this.props.select.updateMenu();\r\n    };\r\n\r\n    onIndexClick = (e, key, selectedIndexNo) => {\r\n        this.setState({selectedIndexNo})\r\n    };\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Draggable\r\n                handle=\".MenuBaseHeaderTitle\"\r\n                bounds=\"parent\"\r\n                defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n            >\r\n                <div\r\n                    className=\"MenuBaseRoot\"\r\n                    style={this.props.styles.root}\r\n                >\r\n                    {/*Header*/}\r\n                    <div\r\n                        className=\"MenuBaseHeaderContainer\"\r\n                    >\r\n                        <span className=\"MenuBaseHeaderTitle\">\r\n                            {this.props.menuTitle || \"Menu Title\"}\r\n                        </span>\r\n\r\n                        <IconButton\r\n                            onClick={this.close}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={16}\r\n                                height={16}\r\n                                src={require('../../icons/close.svg')}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                    {/*Body*/}\r\n                    <div\r\n                        className=\"MenuBaseBodyContainer\"\r\n                    >\r\n                        <div className=\"MenuBaseBodyIndex\">\r\n                            {\r\n                                this.props.index.map((indexData, i) => {\r\n                                    return (\r\n                                        <LightTooltip\r\n                                            key={i}\r\n                                            title={indexData.key}\r\n                                            PopperProps={{\r\n                                                style: {\r\n                                                    zIndex: 999999999999999\r\n                                                }\r\n                                            }}\r\n                                            placement=\"right\"\r\n                                        >\r\n                                            <div\r\n                                                key={i}\r\n                                                style={{\r\n                                                    backgroundColor: this.state.selectedIndexNo === i &&\r\n                                                        'rgba(115, 115, 115, 0.36)'\r\n                                                }}\r\n                                            >\r\n                                                <IconButton\r\n                                                    key={indexData.key}\r\n                                                    onClick={(e) => {\r\n                                                        this.onIndexClick(e, indexData.key, i);\r\n                                                    }}\r\n                                                    buttonBaseStyle={{\r\n                                                        marginLeft: 0\r\n                                                    }}\r\n                                                >\r\n                                                    {indexData.icon}\r\n                                                </IconButton>\r\n                                            </div>\r\n                                        </LightTooltip>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"MenuBaseBodyOptions\">\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                <MenuBaseIndexTitle\r\n                                    index={this.state.selectedIndexNo}\r\n                                    key={this.props.options[this.state.selectedIndexNo].key}\r\n                                    title={this.props.options[this.state.selectedIndexNo].key}\r\n                                />\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                this.props.options[this.state.selectedIndexNo].render\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo === undefined &&\r\n                                this.props.options.map((option, i) => {\r\n                                    return (\r\n                                        <MenuBaseIndexTitle\r\n                                            index={i}\r\n                                            key={option.key}\r\n                                            title={option.key}\r\n                                            onIndexClick={this.onIndexClick}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nMenuBase.defaultProps = {\r\n    styles: {}\r\n};\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport RCSlider from 'rc-slider';\r\n\r\nexport default class Slider extends React.Component {\r\n    render () {\r\n        return (\r\n            <RCSlider\r\n                {...this.props}\r\n                min={this.props.min}\r\n                max={this.props.max}\r\n                step={this.props.step}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInputControlled extends React.Component {\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 24 }}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                    handleStyle={{\r\n                        marginLeft: 7\r\n                    }}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class Image extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            src: props.src,\r\n            hasError: false,\r\n        };\r\n    }\r\n\r\n    onError = (e) => {\r\n        if (!this.state.hasError) {\r\n            let {errorsrc} = this.props;\r\n            this.setState({\r\n                src: errorsrc,\r\n                hasError: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <img\r\n                {...this.props}\r\n                onError={this.onError}\r\n                src={this.state.src || this.props.errorsrc}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends React.Component {\r\n    componentWillUnmount() {\r\n        if (this.defaultNode) {\r\n            document.body.removeChild(this.defaultNode);\r\n        }\r\n        this.defaultNode = null;\r\n    }\r\n\r\n    canUseDOM = !!(\r\n        typeof window !== 'undefined' &&\r\n        window.document &&\r\n        window.document.createElement\r\n    );\r\n\r\n    render() {\r\n        if (!this.canUseDOM) {\r\n            return null;\r\n        }\r\n        let node = this.props.node;\r\n        if (this.props.disabled) {\r\n            return this.props.children;\r\n        }\r\n        if (this.props.nodeId) {\r\n            node = document && document.getElementById(this.props.nodeId);\r\n        }\r\n        if (!node && !this.defaultNode) {\r\n            this.defaultNode = document.createElement('div');\r\n            document.body.appendChild(this.defaultNode);\r\n        }\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            node || this.defaultNode\r\n        );\r\n    }\r\n}\r\n\r\nPortal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    node: PropTypes.any\r\n};\r\n\r\nexport default Portal;\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport './ThemeColorPicker.css';\r\n// import {SketchPicker} from \"react-color\";\r\nimport SketchPicker from \"react-color/lib/components/sketch/Sketch\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class HexColorPicker extends React.Component {\r\n    onChangeComplete = (color) => {\r\n        this.props.onChangeComplete(color.hex);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Portal node={document.body}>\r\n                <div style={ {\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                    zIndex: 999999999999\r\n                }} onClick={ this.props.onClose }/>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    left: \"50%\",\r\n                    top: \"50%\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                    zIndex: 999999999999\r\n                }}>\r\n                    <SketchPicker\r\n                        color={this.props.color}\r\n                        onChangeComplete={ this.onChangeComplete }\r\n                        disableAlpha={this.props.disableAlpha}\r\n                        width={this.props.width || 224}\r\n                    />\r\n                </div>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport './ThemeColorPicker.css';\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport Draggable from \"react-draggable\";\r\nimport Portal from \"../../Portal\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport chroma from \"chroma-js\";\r\nimport HexColorPicker from \"./HexColorPicker\";\r\nimport {parseColor} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nconst colorKeys = [\r\n    \"1\",\"2\",\"3\",\"4\",\"5\",\r\n];\r\n\r\nexport default class ThemeColorPicker extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: props.color\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    onSelectColor = (color) => {\r\n        this.setState({color});\r\n        this.props.onChangeComplete && this.props.onChangeComplete(color);\r\n    };\r\n\r\n    onAddColor = (color) => {\r\n        let siteData = this.context.siteData;\r\n        if (!siteData.myColors.find(c => c === color))\r\n            siteData.myColors.unshift(color);\r\n\r\n        siteData.myColors = siteData.myColors.slice(0, 17);\r\n\r\n        this.onSelectColor(color);\r\n        this.context.update();\r\n    };\r\n\r\n    onAddColorClick = () => {\r\n        this.setState({addColor: true});\r\n    };\r\n\r\n    render() {\r\n        let {editor} = this.context;\r\n        let siteData = this.context.siteData;\r\n        let themeColorCategoryItems = siteData.theme.Colors.items;\r\n        return (\r\n            <Portal node={document.body}>\r\n                <div style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                    zIndex: 999999999999999\r\n                }}>\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        top: '0px',\r\n                        right: '0px',\r\n                        bottom: '0px',\r\n                        left: '0px',\r\n                    }} onClick={ (e) => this.props.onClose && this.props.onClose() }/>\r\n\r\n                    <Draggable\r\n                        handle=\".ThemeColorPickerHeaderTitle\"\r\n                        bounds=\"parent\"\r\n                        defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n                    >\r\n                        <div className=\"ThemeColorPickerRoot\"\r\n                             style={{\r\n                                 zIndex: 99999999999999999,\r\n                             }}>\r\n                            <div className=\"ThemeColorPickerHeaderRoot\">\r\n                                <div className=\"ThemeColorPickerHeaderTitle\">\r\n                                    Color Picker\r\n                                </div>\r\n\r\n                                <IconButton\r\n                                    onClick={(e) => this.props.onClose && this.props.onClose()}\r\n                                    className=\"ThemeColorPickerHeaderClose\"\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={require('../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                Site Colors\r\n                                <div className=\"ThemeColorPickerSiteColorEdit\">\r\n                                    Edit\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorGrid\">\r\n                                {\r\n                                    colorKeys.map(key => {\r\n                                        return (\r\n                                            Object.values(themeColorCategoryItems).map(item => {\r\n                                                console.log(\"this.state.color\", this.state.color, parseColor(this.state.color, undefined, editor))\r\n                                               return (\r\n                                                   <div\r\n                                                       key={item.name + key}\r\n                                                       className={`ThemeColorPickerSiteColorItem ${\r\n                                                           parseColor(this.state.color, undefined, editor) ===\r\n                                                           editor.themeManagerRef.current.getColor(item.name, key) ?\r\n                                                               \"ThemeColorPickerSiteColorItemSelected\": ''\r\n                                                           }`}\r\n                                                       style={{\r\n                                                           backgroundColor:\r\n                                                               editor.themeManagerRef.current.getColor(item.name, key)\r\n                                                       }}\r\n                                                       onClick={(e) => {\r\n                                                           this.onSelectColor(\r\n                                                               {\r\n                                                                   paletteName: item.name,\r\n                                                                   key: key\r\n                                                               }\r\n                                                           )\r\n                                                       }}\r\n                                                   >\r\n\r\n                                                   </div>\r\n                                               )\r\n                                            })\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                My Colors\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerMyColorGrid\">\r\n                                <div className=\"ThemeColorPickerMyColorItemAdd\" onClick={this.onAddColorClick}>\r\n                                    <Image\r\n                                        width={10}\r\n                                        height={10}\r\n                                        src={'static/icon/add.svg'}\r\n                                    />\r\n                                </div>\r\n\r\n                                {\r\n                                    Object.values(siteData.myColors).map(color => {\r\n                                        return (\r\n                                            <div className={`ThemeColorPickerMyColorItem ${\r\n                                                    this.state.color === color ?\r\n                                                        \"ThemeColorPickerMyColorItemSelected\": ''\r\n                                                    }`}\r\n                                                 key={color}\r\n                                                 style={{\r\n                                                backgroundColor: color\r\n                                            }}\r\n                                                 onClick={(e) => {\r\n                                                     this.onSelectColor(\r\n                                                         color\r\n                                                     )\r\n                                                 }}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                <div className=\"ThemeColorPickerSiteColorHexTitle\">\r\n                                    <div className=\"ThemeColorPickerSiteColorHexAddColor\" onClick={this.onAddColorClick}>\r\n                                        Add Color\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"ThemeColorPickerSiteColorHex\">\r\n                                    {chroma(parseColor(this.state.color, 1, editor)).hex()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Draggable>\r\n\r\n                    {/*{\r\n                        this.state.addColor &&\r\n                        <>\r\n                            <div style={ {\r\n                                position: 'fixed',\r\n                                top: '0px',\r\n                                right: '0px',\r\n                                bottom: '0px',\r\n                                left: '0px',\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.2)'\r\n                            }} onClick={ () => this.setState({addColor: undefined}) }/>\r\n                            <div style={{\r\n                                position: 'absolute',\r\n                                left: \"50%\",\r\n                                top: \"50%\",\r\n                                transform: \"translate(-50%, -50%)\",\r\n                                zIndex: '2',\r\n                            }}>\r\n                                <SketchPicker\r\n                                    color={this.state.color}\r\n                                    onChangeComplete={ this.onAddColor }\r\n                                    disableAlpha={this.props.disableAlpha}\r\n                                    width={224}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    }*/}\r\n                    {\r\n                        this.state.addColor &&\r\n                        <HexColorPicker\r\n                            onClose={() => this.setState({addColor: undefined})}\r\n                            color={this.state.color}\r\n                            onChangeComplete={ this.onAddColor }\r\n                            disableAlpha={this.props.disableAlpha}\r\n                            width={224}\r\n                        />\r\n                    }\r\n                </div>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport SliderInputControlled from \"./SliderInputControlled\";\r\nimport ThemeColorPicker from \"../../Test/Theme/ThemeColorPicker\";\r\nimport chroma from \"chroma-js\";\r\nimport {parseColor} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class ColorPicker extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.lastValue = props.color || 'rgba(0,0,0,0)';\r\n    }\r\n\r\n    getRgbA = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if (value instanceof Object) {\r\n            value = this.props.editor.themeManagerRef.current.getColor(value.paletteName, value.key);\r\n        }\r\n\r\n        let color = chroma(value);\r\n        return {\r\n            r: color.rgba()[0],\r\n            g: color.rgba()[1],\r\n            b: color.rgba()[2],\r\n            a: color.rgba()[3]\r\n        }\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        if (this.state.displayColorPicker)\r\n            this.setState({ displayColorPicker: false });\r\n        else\r\n            this.setState({ displayColorPicker: e.target })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        if (color instanceof Object) {\r\n            console.log(\"handlehangeComplete1 this.lastValue\", this.lastValue, parseColor(this.lastValue, this.lastValue.alpha, this.props.editor));\r\n            color.alpha = chroma(parseColor(this.lastValue, this.lastValue.alpha, this.props.editor)).alpha();\r\n            console.log(\"handlehangeComplete1 alpha\", color.alpha);\r\n            this.lastValue = color;\r\n            // color.alpha = chroma(parseColor(color, undefined, this.props.editor)).alpha();\r\n            this.props.onDesignChange(this.props.designKey, color);\r\n            return;\r\n        }\r\n\r\n        console.log(\"handleChangeComplete\", this.getColorAndAlpha().alpha)\r\n        let alpha = this.getColorAndAlpha().alpha || 100;\r\n\r\n        let value = this.lastValue = chroma(color).alpha(alpha / 100).css();\r\n\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n    };\r\n\r\n    getColorAndAlpha = () => {\r\n        console.log(\"getColorAndAlpha\",\r\n            this.props.color, parseColor(this.props.color, 1, this.props.editor), parseColor(this.props.color, this.props.color && this.props.color.alpha, this.props.editor));\r\n\r\n        let result = {\r\n            color: chroma(parseColor(this.props.color, 1, this.props.editor)).alpha(0).hex(),\r\n            alpha: chroma(parseColor(this.props.color, this.props.color && this.props.color.alpha, this.props.editor)).alpha() * 100\r\n        };\r\n\r\n        console.log(\"getColorAndAlpha result\", result)\r\n        return result;\r\n    };\r\n\r\n    handleAlphaChange = (alpha) => {\r\n        if (this.lastValue instanceof Object) {\r\n            this.lastValue.alpha = alpha / 100;\r\n        } else {\r\n            console.log(\"handleAlphaChange\", alpha)\r\n            this.lastValue = chroma(this.lastValue).alpha(alpha / 100).css();\r\n        }\r\n        this.props.onDesignChange(this.props.designKey, this.lastValue);\r\n    };\r\n\r\n    render () {\r\n        let {color, alpha} = this.getColorAndAlpha();\r\n        console.log(\"colorpicker\", color, alpha)\r\n        return (\r\n                <div className=\"CommonMenuRoot ColorPickerRoot\">\r\n                    <ButtonBase\r\n                        style={{\r\n                            background: `url('/static/icon/transparency.png')`,\r\n                        }}\r\n                        className=\"ColorPickerRGB\"\r\n                        onClick={ this.handleClick }\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                background: parseColor(this.props.color, alpha/100, this.props.editor),\r\n                            }}\r\n                        />\r\n                    </ButtonBase>\r\n\r\n                    <div\r\n                        className=\"ColorPickerAlpha\"\r\n                    >\r\n                        <SliderInputControlled\r\n                            min={0}\r\n                            max={100}\r\n                            value={alpha || 0}\r\n                            onChange={this.handleAlphaChange}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.displayColorPicker &&\r\n                            <ThemeColorPicker\r\n                                color={color}\r\n                                onClose={this.handleClose}\r\n                                onChangeComplete={ this.handleChangeComplete }\r\n                                disableAlpha\r\n                                editor={this.props.editor}\r\n                                defaultPosition={\r\n                                    this.state.displayColorPicker.getBoundingClientRect()\r\n                                }\r\n                            />\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nexport default class Background extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Background</p>\r\n\r\n                <ColorPicker\r\n                    color={this.props.color}\r\n                    designKey={this.props.designKey}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.editor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class Divider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"Divider\" style={this.props.style}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 24 }}\r\n                    step={this.props.step}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value || 0}\r\n                    onChange={this.onChange}\r\n                    handleStyle={{\r\n                        marginLeft: 7\r\n                    }}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value || 0}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\nimport 'rc-slider/assets/index.css';\r\nimport '../style.css';\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\n\r\nexport default class Border extends React.Component {\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.border.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Width (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={15}\r\n                            value={this.props.border.width}\r\n                            designKey={`${this.props.designKey}.width`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport NumberInput from \"../../../../Menus/CommonComponents/NumberInput\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\nimport {cloneObject} from \"../../../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class Corners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            radius: cloneObject(props.radius),\r\n            link: true\r\n        }\r\n    }\r\n\r\n    onChange = (value, side) => {\r\n        let radius = this.state.radius;\r\n        let changeSide = [side];\r\n        if (this.state.link)\r\n            changeSide = [\"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"];\r\n        changeSide.forEach(_side => {\r\n            radius[_side] = value;\r\n            this.props.onDesignChange(`${this.props.designKey}.${_side}`, value);\r\n        });\r\n        this.setState({radius});\r\n    };\r\n\r\n    onLinkClick = () => {\r\n        this.setState({link: !this.state.link});\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Radius (px)</p>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"topLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"topRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{position: \"relative\"}}>\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowTopLeft\"\r\n                             style={{\r\n                                 borderTopLeftRadius: this.state.radius[\"topLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowTopRight\"\r\n                             style={{\r\n                                 borderTopRightRadius: this.state.radius[\"topRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowBottomLeft\"\r\n                             style={{\r\n                                 borderBottomLeftRadius: this.state.radius[\"bottomLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowBottomRight\"\r\n                             style={{\r\n                                 borderBottomRightRadius: this.state.radius[\"bottomRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersLink\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginLeft: 0\r\n                            }}\r\n                            onClick={this.onLinkClick}\r\n                        >\r\n                            {\r\n                                this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../../icons/chain.svg')} />\r\n                            }\r\n                            {\r\n                                !this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../../icons/unlink.svg')} />\r\n                            }\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class CircularSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.rect = this.rootDivRef.current.getBoundingClientRect();\r\n        window.addEventListener(\"pointermove\", this.onMouseMove);\r\n        window.addEventListener(\"pointerup\", this.onMouseUp);\r\n\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                className={`CircularSliderRoot ${this.props.className}`}\r\n                style={{\r\n                    transform: `rotate(${this.props.value}deg)`\r\n                }}\r\n                onMouseDown={this.onMouseDown}\r\n                ref={this.rootDivRef}\r\n            >\r\n                <div\r\n                    className=\"CircularSliderBg\"\r\n                    style={{\r\n                        width: this.props.width || 90,\r\n                        height: this.props.width || 90\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"CircularSliderLine\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderCenter\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderKnob\"\r\n                    />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport CircularSlider from \"./CircularSlider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class Angle extends React.Component {\r\n    onChange = (value) => {\r\n        if (this.props.loop && value === 360)\r\n            value = 0;\r\n\r\n        this.props.onChange(value.toFixed(0));\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"AngleRoot\">\r\n                <CircularSlider\r\n                    {...this.props}\r\n                    className=\"AngleSlider\"\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                    min={0}\r\n                    max={360}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"AngleInput\"\r\n                    min={0}\r\n                    max={360}\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport '../style.css';\r\nimport Angle from \"../../../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nconst deg2rad = Math.PI/180;\r\nconst rad2deg = 180/Math.PI;\r\nexport default class Shadow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange = (key, value) => {\r\n        let shadow = this.props.shadow;\r\n        shadow[key] = value;\r\n        this.setState({shadow});\r\n        this.props.onDesignChange(`${this.props.designKey}.${key}`, value);\r\n    };\r\n\r\n    getDegree = (xOffset, yOffset) => {\r\n        if (xOffset === undefined) xOffset = -1;\r\n        if (yOffset === undefined) yOffset = 1;\r\n        let ratio = (xOffset) / (yOffset);\r\n        let degree;\r\n        if (xOffset < 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg;\r\n        if (xOffset < 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 360;\r\n\r\n        return Math.round(degree);\r\n    };\r\n\r\n    getRatio = (degree) => {\r\n        return Math.tan( degree * deg2rad );\r\n    };\r\n\r\n    calcDegree = (degree) => {\r\n        let ratio = this.getRatio(degree);\r\n        let xO, yO;\r\n        if (ratio === 0) {\r\n            xO = 0;\r\n            yO = 1;\r\n        } else if (ratio === Infinity) {\r\n            xO = 1;\r\n            yO = 0;\r\n        } else {\r\n            xO = ratio;\r\n            yO = 1;\r\n            if (Math.abs(ratio) > 1) {\r\n                xO /= Math.abs(ratio);\r\n                yO /= Math.abs(ratio);\r\n            }\r\n        }\r\n        this.onChange(\"xOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? -xO : xO);\r\n        this.onChange(\"yOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? yO : -yO);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                    <div className=\"ShadowRoot\">\r\n                        <Angle\r\n                            className=\"ShadowAngle\"\r\n                            angle={this.getDegree(this.props.shadow.xOffset , this.props.shadow.yOffset)}\r\n                            onChange={this.calcDegree}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Distance (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.distance}\r\n                            designKey={`${this.props.designKey}.distance`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Size (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.size}\r\n                            designKey={`${this.props.designKey}.size`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Blur (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.blur}\r\n                            designKey={`${this.props.designKey}.blur`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.shadow.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Components/Background\";\r\nimport Border from \"./Components/Border\";\r\nimport Corners from \"./Components/Corners\";\r\nimport Shadow from \"./Components/Shadow\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class BorderDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/water.svg'} />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/border.svg'} />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/corner.svg'} />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                icon: <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" className=\"symbol symbol-shadowDesign\">\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M11.5 14.5h-8v-2h8c.55 0 1-.45 1-1v-9h2v9c0 1.65-1.35 3-3 3zm-3-4h-7c-1.1 0-2-.9-2-2v-7c0-1.1.9-2 2-2h7c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2z\"/>\r\n                </svg>\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                render: <Border\r\n                    border={design.border}\r\n                    designKey={\"design.border\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                render: <Corners\r\n                    radius={design.border.radius}\r\n                    designKey={\"design.border.radius\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                render: <Shadow\r\n                    shadow={design.border.shadow}\r\n                    designKey={\"design.border.shadow\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport classNames from \"classnames\";\r\n\r\nexport default class GridViewer extends React.Component {\r\n    render () {\r\n        let classes = classNames(\r\n            \"GridViewerRoot\",\r\n            this.props.className\r\n        );\r\n        return (\r\n            <div className={classes}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport GridViewer from \"../../../../Menus/CommonComponents/GridViewer\";\r\nimport classNames from \"classnames\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class AnimationSelector extends React.Component {\r\n    onSelectAnimation = (name) => {\r\n        this.props.onDesignChange(this.props.designKey, name);\r\n        window.requestAnimationFrame(() => {\r\n            this.props.item.playAnimation();\r\n        });\r\n    };\r\n\r\n    render () {\r\n        let {allAnimationNames, animation} = this.props;\r\n        let noneClasses = classNames(\r\n            \"MenuOptionAnimationItem\",\r\n            (!animation || !animation.name) && \"MenuOptionAnimationItemSelected\"\r\n        );\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n\r\n                <GridViewer>\r\n                    <ButtonBase\r\n                        className={noneClasses}\r\n                        key='none'\r\n                        onClick={(e) => this.onSelectAnimation()}\r\n                    >\r\n                        <img\r\n                            className=\"MenuOptionAnimationItemImage\"\r\n                            draggable={false} width={48} height={48}\r\n                            // src={`/static/icons/animation/${name}.svg`} />\r\n                            src={`/static/icon/animation-black.svg`}\r\n                        />\r\n                        <span>\r\n                            none\r\n                        </span>\r\n                    </ButtonBase>\r\n                    {\r\n                        allAnimationNames.map(name => {\r\n                            let classes = classNames(\r\n                                \"MenuOptionAnimationItem\",\r\n                                animation && name === animation.name && \"MenuOptionAnimationItemSelected\"\r\n                            );\r\n                            let displayName = name.split(/(?=[A-Z])/).join(' ');\r\n                            displayName = displayName.charAt(0).toUpperCase() + displayName.slice(1);\r\n                            return (\r\n                                <ButtonBase\r\n                                    className={classes}\r\n                                    key={name}\r\n                                    onClick={(e) => this.onSelectAnimation(name)}\r\n                                >\r\n                                    <img\r\n                                        className=\"MenuOptionAnimationItemImage\"\r\n                                        draggable={false} width={48} height={48}\r\n                                        // src={`/static/icons/animation/${name}.svg`} />\r\n                                        src={`/static/icon/animation-black.svg`}\r\n                                    />\r\n                                    <span className=\"MenuOptionAnimationItemTitle\">\r\n                                        {displayName}\r\n                                    </span>\r\n                                </ButtonBase>\r\n                            )\r\n                        })\r\n                    }\r\n                </GridViewer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {DynamicAnimations} from \"../../../../Dynamic/DynamicComponents\";\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\n\r\nexport default class AnimationOptions extends React.Component {\r\n\r\n    render () {\r\n        let {animation, onDesignChange, designKey, item} = this.props;\r\n        if (!animation || !animation.name) {\r\n            return <div className=\"MenuOptionSectionTitle\" style={{\r\n                textAlign: \"center\"\r\n            }}>\r\n                Select an Animation to See Options\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection MenuOptionGrid2\">\r\n                    <span className=\"MenuOptionSectionTitleNoMargin\">Play animation</span>\r\n\r\n                    <IconButton onClick={(e) => {\r\n                                    item.playAnimation();\r\n                                }}\r\n                                imageContainerStyle={{\r\n                                    padding: 0\r\n                                }}\r\n                                buttonBaseStyle={{\r\n                                    borderRadius: 999\r\n                                }}\r\n                    >\r\n                        <img draggable={false} width={24} height={24}\r\n                                   src={'/static/icon/play-button.svg'}\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                {\r\n                    animation.name &&\r\n                        DynamicAnimations[animation.name].getOptions(this.props)\r\n                }\r\n\r\n                {\r\n                    animation.name && DynamicAnimations[animation.name].getOptions(this.props) &&\r\n                    <Divider/>\r\n                }\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Duration</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={5}\r\n                            step={0.1}\r\n                            value={animation.options? animation.options.duration !== undefined?\r\n                                animation.options.duration: 1 : 1}\r\n                            designKey={`${designKey}.duration`}\r\n                            onDesignChange={onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Delay</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={10}\r\n                            step={0.1}\r\n                            value={animation.options? animation.options.delay !== undefined?\r\n                                animation.options.delay: 0 : 0}\r\n                            designKey={`${designKey}.delay`}\r\n                            onDesignChange={onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionAnimationOnceRoot\">\r\n                    <p className=\"MenuOptionSectionTitle\">Only animate first time</p>\r\n                    <Switch\r\n                        className=\"InspectorOverflowDirSwitch\"\r\n                        checked={animation.options && animation.options.once ? animation.options.once : false}\r\n                        onChange={(e) => {\r\n                            onDesignChange(`${designKey}.once`, e.target.checked);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\nimport AnimationSelector from \"./Components/AnimationSelector\";\r\nimport AnimationOptions from \"./Components/AnimationOptions\";\r\n\r\nexport default class AnimationDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Animation Type\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/animation-black.svg'} />\r\n            },\r\n            {\r\n                key: \"Animation Options\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/time.svg'} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Animation Type\",\r\n                render: <AnimationSelector\r\n                    animation={design.animation}\r\n                    designKey={\"design.animation.name\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    allAnimationNames={[\r\n                        'fadeIn',\r\n                        'bounceIn',\r\n                        'glideIn',\r\n                        'floatIn',\r\n                        'expandIn',\r\n                        'spinIn',\r\n                        'flyIn',\r\n                        'turnIn',\r\n                        'arcIn',\r\n                        'puffIn',\r\n                        'foldIn',\r\n                        'flipIn',\r\n                        'reveal',\r\n                    ]}\r\n                    item={this.props.item}\r\n                />\r\n            },\r\n            {\r\n                key: \"Animation Options\",\r\n                render: <AnimationOptions\r\n                    animation={design.animation}\r\n                    designKey={\"design.animation.options\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    item={this.props.item}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n                defaultIndexNo={0}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport BorderDesign from \"./Menus/BorderDesign\";\r\nimport '../../HelperStyle.css';\r\nimport './ContainerBase.css';\r\nimport {getCompositeDesignData, parseColor, resolveDesignData} from \"../../AwesomwGridLayoutHelper\";\r\nimport AnimationDesign from \"./Menus/AnimationDesign\";\r\n\r\nexport default class ContainerBase extends AGLComponent{\r\n    resolveDesignData = () => {\r\n        resolveDesignData(this, \"border\", {shadow: {\r\n                xOffset: -1,\r\n                yOffset: 1,\r\n                distance: 1,\r\n                size: 0,\r\n                blur: 4\r\n        }, radius: {}});\r\n    };\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <BorderDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />,\r\n            <MenuButton\r\n                key={2}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={'static/icon/animation.svg'} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <AnimationDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n    };\r\n\r\n    getStaticChildren = () => {\r\n        this.resolveDesignData();\r\n\r\n        let border = getCompositeDesignData(this).border;\r\n        let fillColor = getCompositeDesignData(this).fillColor;\r\n        if (fillColor)\r\n            fillColor = parseColor(fillColor, fillColor.alpha, this.props.editor);\r\n\r\n        border.radius = border.radius || {};\r\n        border.shadow = border.shadow || {};\r\n\r\n        let shadowColor = border.shadow.color;\r\n        if (shadowColor)\r\n            shadowColor = parseColor(shadowColor, shadowColor.alpha, this.props.editor);\r\n        let borderColor = border.color;\r\n        if (borderColor)\r\n            borderColor = parseColor(borderColor, borderColor.alpha, this.props.editor);\r\n\r\n        return <div\r\n            className=\"ContainerBaseBorderRoot\"\r\n            style={{\r\n                border:\r\n                    `${border.width || 0}px solid ${borderColor || 'rgba(186,218,85,0.63)'}`,\r\n                backgroundColor: fillColor,\r\n                borderRadius:\r\n                    `${border.radius.topLeft || 0}px ${border.radius.topRight || 0}px ${border.radius.bottomRight || 0}px ${border.radius.bottomLeft || 0}px`,\r\n                boxShadow: `${(border.shadow.xOffset) * (border.shadow.distance)}px ${(border.shadow.yOffset) * (border.shadow.distance)}px ${border.shadow.blur}px ${border.shadow.size}px ${shadowColor || 'rgba(186,218,85,0.63)'}`\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"ContainerBase\"\r\n                aglComponent={this}\r\n                {...this.props}\r\n                data={this.getData()}\r\n                getPrimaryOptions={this.getPrimaryOptions}\r\n                getInspector={this.getInspector}\r\n                getStaticChildren={this.getStaticChildren}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nContainerBase.defaultProps = {\r\n    tagName: \"ContainerBase\"\r\n};\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Components/Background\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class SectionDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/water.svg'} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle={this.props.menuTitle || \"Box Design\"}\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class Header extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Header Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        console.log(\"updateDesign\", compositeDesign.fillColor)\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.props.editor);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={[\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Header\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"1/1/2/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{\r\n                            // backgroundColor: \"#bcbcbc\",\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"150px\",\r\n                            zIndex: \"50\"\r\n                        }}\r\n                        as=\"header\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.defaultProps = {\r\n    tagName: \"Header\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class Footer extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Footer Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.props.editor);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={[\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Footer\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"3/1/4/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"100px\",\r\n                            zIndex: \"51\"\r\n                        }}\r\n                        as=\"footer\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nFooter.defaultProps = {\r\n    tagName: \"Footer\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport {getCompositeDesignData, parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\n\r\nexport default class Section extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Section Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.props.editor);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={!this.props.isVerticalSection ? [\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ] : [\r\n                        'height', 'minHeight', 'maxHeight'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Section\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"2/1/3/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{...{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"500px\",\r\n                        }, ...this.props.style}}\r\n                        designStyle={{...{\r\n                                // backgroundColor: \"#b3faf5\",\r\n                        }, ...this.props.designStyle}}\r\n                        data={this.getData()}\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        as={\"section\"}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nSection.defaultProps = {\r\n    tagName: \"Section\"\r\n};\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport ColorPicker from \"../../Menus/CommonComponents/ColorPicker\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\nimport Background from \"../../Components/Containers/Menus/Components/Background\";\r\n\r\nexport default class InspectorBackground extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { open: true};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeColor = (key, value) => {\r\n        let {item} = this.props;\r\n        setStyleParam(\"backgroundColor\", value,\r\n            item, true, undefined, true);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let style = item.getFromData(\"style\") || {};\r\n        return (\r\n            <>\r\n                <InspectorTitle defaultOpen title=\"Background\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <span className=\"InspectorBackgroundColorTitle\">\r\n                            Color\r\n                        </span>\r\n                        <ColorPicker\r\n                            color={style.backgroundColor || 'rgba(0, 0, 0, 0)'}\r\n                            designKey={\"design.fillColor\"}\r\n                            // onDesignChange={this.onChangeColor}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                            editor={this.props.item.props.editor}\r\n                        />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport Section from \"../Containers/Section\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {initGriddata, swapArrayElements} from \"../../AwesomeGridLayoutUtils\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorBackground from \"../../Test/Inspector/InspectorBackground\";\r\nimport './PageBase.css';\r\nimport {isHideInBreakpoint, parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport BorderDesign from \"../Containers/Menus/BorderDesign\";\r\n\r\nconst mainColTemplate = \"minmax(0px,1fr)\";\r\n\r\nexport default class PageBase extends AGLComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.gridTemplateRows = \"auto\";\r\n        this.gridTemplateColumns = mainColTemplate;\r\n        this.gridX = 0;\r\n        this.gridY = 1;\r\n\r\n        this.allSectionsH = [];\r\n        this.allSectionsV = [null];\r\n\r\n        this.root = React.createRef();\r\n\r\n        this.initKeyboard();\r\n\r\n        this.initDataFromPageData(props);\r\n    }\r\n\r\n    initDataFromPageData = (props) => {\r\n        if (!props.griddata.initialized)\r\n            initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (!props.griddata.allSectionsH)\r\n            props.griddata.allSectionsH = [];\r\n        if (!props.griddata.allSectionsV)\r\n            props.griddata.allSectionsV = [null];\r\n\r\n        this.allSectionsH = props.griddata.allSectionsH;\r\n        this.allSectionsV = props.griddata.allSectionsV;\r\n        let grid = this.props.breakpointmanager.getFromData(props.griddata, \"grid\");\r\n        if (grid) {\r\n            this.gridX = grid.x;\r\n            this.gridY = grid.y;\r\n            this.gridTemplateRows = grid.gridTemplateRows;\r\n            this.gridTemplateColumns = grid.gridTemplateColumns;\r\n        }\r\n    };\r\n\r\n    initKeyboard = () => {\r\n        window.addEventListener(\"keydown\", (e) => {\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if (key === 38 && ctrl) {\r\n                e.preventDefault();\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveUp(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 40 && ctrl) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Down\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveDown(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 37 && ctrl) {\r\n                e.preventDefault();\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveLeft(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 39 && ctrl) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Right\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveRight(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        // TODO remove tests\r\n        // this.addSectionQueue(0, \"Header\", DynamicComponents, undefined, false);\r\n        // this.addSectionQueue(1, \"Section\", DynamicComponents, undefined, false);\r\n        // this.addSectionQueue(2, \"Footer\", DynamicComponents, undefined, false);\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            draggable: false,\r\n            resizable: true,\r\n            pageResize: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"scroll\",\r\n                    overflowY: \"scroll\",\r\n                    auto: true\r\n                },\r\n                grid: {\r\n                    x: this.gridX,\r\n                    y: this.gridY,\r\n                    gridTemplateRows: this.gridTemplateRows,\r\n                    gridTemplateColumns: this.gridTemplateColumns\r\n                },\r\n                containerHeight: \"max-content\",\r\n            }\r\n        };\r\n    };\r\n\r\n    getHorizontalSection = (id) => {\r\n        return this.props.idMan.getItem(this.allSectionsH.find(h => {\r\n            return h === id;\r\n        }));\r\n    };\r\n\r\n    deleteHorizontalSection = (id) => {\r\n        let index = this.allSectionsH.findIndex(h => {\r\n            return h === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        if (this.allSectionsH.length === 1)\r\n            return false;\r\n\r\n        this.gridX--;\r\n\r\n        let currentSection = this.allSectionsH[index];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (firstRow >= x12 && lastRow <= x22) {\r\n                x22--;\r\n            } else if (lastRow <= x12) {\r\n                x22--;\r\n                x12--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (lastRow <= x13) {\r\n                x13--;\r\n                x23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        index >= 0 && this.allSectionsH.splice(index, 1);\r\n\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n        return true;\r\n    };\r\n\r\n    getVerticalSection = (id) => {\r\n        return this.props.idMan.getItem(this.allSectionsV.find(h => {\r\n            if (h === null)\r\n                return false;\r\n\r\n            return h === id;\r\n        })) || null;\r\n    };\r\n\r\n    deleteVerticalSection = (id) => {\r\n        let index = this.allSectionsV.findIndex(h => {\r\n            if (h === null)\r\n                return false;\r\n            return h === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        this.gridY--;\r\n\r\n        let currentSection = this.allSectionsV[index];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n        let firstCol = y1;\r\n        let lastCol = y2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (y12 >= firstCol) {\r\n                y12--;\r\n                y22--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (y13 >= lastCol) {\r\n                // fully right\r\n                y13--;\r\n                y23--;\r\n            } else if (y23 >= lastRow) {\r\n                // partially right\r\n                y23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.allSectionsV.splice(index, 1);\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n        return true;\r\n    };\r\n\r\n    addSectionQueue = (index, tagName, dynamicComponents, as, isVertical, callback) => {\r\n        if (!this.addQueue)\r\n            this.addQueue = [];\r\n\r\n        this.addQueue.push({\r\n            index, tagName, dynamicComponents, as, isVertical, callback\r\n        });\r\n\r\n        if (!this.checkingAddQueue) {\r\n            let nextOne = this.addQueue.shift();\r\n            this.checkAddQueue(nextOne);\r\n        }\r\n    };\r\n\r\n    checkAddQueue = (nextOne) => {\r\n        this.checkingAddQueue = true;\r\n        if (!nextOne.isVertical) {\r\n            this.addHorizontalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        } else {\r\n            this.addVerticalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        }\r\n    };\r\n\r\n    onItemPreDelete = (item) => {\r\n        let allow = this.deleteHorizontalSection(item.props.id);\r\n        if (!allow)\r\n            allow = this.deleteVerticalSection(item.props.id);\r\n\r\n        return allow;\r\n    };\r\n\r\n    // Just for vertical items\r\n    onItemPreResizeStop = (item, e, dir, delta, runtimeStyle) => {\r\n        console.log(\"small from top0\", this.allSectionsH, this.allSectionsV)\r\n        if (dir === 'e' || dir === 'w')\r\n            return;\r\n\r\n        let gridArea = item.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        this.root.current.prepareRects(false, true);\r\n        let yLineRefs = this.props.gridLine.getYlineRef(this.root.current.props.id);\r\n        let firstLineTop =\r\n            this.root.current.getGridLineRect(yLineRefs[0], 0, 'y', this.root.current).top;\r\n\r\n        console.log(\"small from top1\", this.allSectionsH, this.allSectionsV)\r\n        if (dir === 'n') {\r\n            if (delta.y > 0) { // small from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                console.log(\"small from top\", this.allSectionsH, this.allSectionsV)\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x1 && x12 < selectedX1) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n            else { // big from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x22 <= x1 && x12 >= selectedX1) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n        }\r\n        else { // dir === 's'\r\n            if (delta.y > 0) { // big from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x2 && x12 < selectedX2) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n            else { // small from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 < x2 && x12 >= selectedX2) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = -1;\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n        }\r\n\r\n        item.setGridArea(\r\n            `${x1}/${y1}/${x2}/${y2}`\r\n            , this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    addHorizontalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridX++;\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length + 1).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        let currentSectionIndex = index !== 0 ? index - 1 : 0;\r\n\r\n        let currentSection = this.allSectionsH[currentSectionIndex];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea ? `${index + 1}/${\r\n                currentSectionGridArea.split('/')[1]\r\n                }/${index + 2}/${\r\n                currentSectionGridArea.split('/')[3]\r\n                }` :\r\n            \"1/1/2/2\"\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            isSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n            }}\r\n            resizeSides={['s', 'n']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n        />;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstRow = index + 1;\r\n\r\n            if (x2 >= firstRow)\r\n                x2++;\r\n            if (x1 >= firstRow)\r\n                x1++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (x1 >= firstCol)\r\n                x1++;\r\n            if (x2 > firstCol)\r\n                x2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsH.splice(index, 0, agl.props.id);\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    getMainColIndex = (insertIndex) => {\r\n        let index = this.allSectionsV.findIndex(v => {\r\n            return v === null;\r\n        });\r\n\r\n        if (insertIndex !== undefined && index >= insertIndex)\r\n            return index + 1;\r\n\r\n        return index;\r\n    };\r\n\r\n    addVerticalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridY++;\r\n\r\n        let currentSectionIndex = index !== 0 ? index - 1 : 0;\r\n\r\n        let currentSection = this.allSectionsV[currentSectionIndex] || null;\r\n        if (currentSection === null)\r\n            currentSection = this.allSectionsV[currentSectionIndex + 1];\r\n\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea ? `${\r\n                currentSectionGridArea.split('/')[0]\r\n                }/${index + 1}/${\r\n                currentSectionGridArea.split('/')[2]\r\n                }/${index + 2}` :\r\n            `${1}/${index + 1}/${this.gridX + 1}/${index + 2}`\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            isSection\r\n            isVerticalSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n                isVerticalSection: true,\r\n            }}\r\n            style={{\r\n                width: \"200px\",\r\n                height: \"auto\",\r\n                minHeight: \"auto\",\r\n            }}\r\n            resizeSides={['e', 'w', 'n', 's']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n            onItemPreResizeStop={this.onItemPreResizeStop}\r\n        />;\r\n\r\n        console.log(\"this.allSectionsH\", this.allSectionsH)\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        let mainColIndex = this.getMainColIndex(index);\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length + 1).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsV.splice(index, 0, agl.props.id);\r\n            this.props.select.onScrollItem();\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    moveUp = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex - 1];\r\n        sideSection = this.props.idMan.getItem(sideSection);\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 + 1}/${y1}/${x22 + 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 - 1}/${y12}/${x2 - 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveDown = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex + 1];\r\n        sideSection = this.props.idMan.getItem(sideSection);\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 - 1}/${y1}/${x22 - 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 + 1}/${y12}/${x2 + 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveRight = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex + 1];\r\n        if (sideSection !== null){\r\n            sideSection = this.props.idMan.getItem(sideSection);\r\n        }\r\n        // sideSection = this.props.idMan.getItem(sideSection) || null;\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 - 1}/${x2}/${y22 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 + 1}/${x22}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n\r\n            this.getAgl().invalidateSize();\r\n            this.props.select.onScrollItem();\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 + 1}/${x2}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                console.log(\"moveRight firstRow:\", firstRow, \"lastRow:\", lastRow, \"x13:\", x13, \"x23:\", x23);\r\n                if (x13 >= firstRow && x23 <= lastRow) {\r\n                    console.log(\"moveRight yes\");\r\n                    y13--;\r\n                    y23--;\r\n\r\n                    if (y23 > y1 + 1)\r\n                        y23 = y1 + 1;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveLeft = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex - 1];\r\n        if (sideSection !== null){\r\n            sideSection = this.props.idMan.getItem(sideSection);\r\n        }\r\n        // sideSection = this.props.idMan.getItem(sideSection) || null;\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 + 1}/${x2}/${y22 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 - 1}/${x22}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n\r\n            this.getAgl().invalidateSize();\r\n            this.props.select.onScrollItem();\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 - 1}/${x2}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                if (x13 >= firstRow && x23 <= lastRow) {\r\n                    y13++;\r\n                    y23++;\r\n\r\n                    if (y13 < y2 - 1)\r\n                        y13 = y2 - 1;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    updateTemplates = () => {\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            if (isHideInBreakpoint(this.props.idMan.getItem(this.allSectionsV[i])))\r\n                return \"0px\";\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map((a, i) => {\r\n            if (isHideInBreakpoint(this.props.idMan.getItem(this.allSectionsH[i])))\r\n                return \"0px\";\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    hasMiniMenuOverride = () => {\r\n        return false;\r\n    };\r\n\r\n    invalidateSizeOverride = (agl, self, updateParent, updateChildren, sourceId) => {\r\n        if (self)\r\n            delete this.tempSize;\r\n\r\n        Object.values(agl.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current && sourceId !== childRef.current.props.id) {\r\n                childRef.current.invalidateSize(true, false, true);\r\n            }\r\n        });\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorBackground\r\n                    item={this.getAgl()}\r\n                    onDesignChange={this.onDesignChange}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    getSectionOfPoint = (left, top, width, height) => {\r\n        let childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n            if (childRef && childRef.current) {\r\n                if (childRef.current.isPointInclude(left, top))\r\n                    return true;\r\n            }\r\n        });\r\n\r\n        if (!childRef)\r\n            childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n                if (childRef && childRef.current) {\r\n                    if (childRef.current.isPointInclude(left + width, top + height))\r\n                        return true;\r\n                }\r\n            });\r\n\r\n        if (!childRef)\r\n            childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n                return (childRef && childRef.current);\r\n            });\r\n\r\n        return childRef.current;\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        console.log(\"updateDesign\", compositeDesign.fillColor)\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.props.editor);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n    // White Background\r\n    getStaticChildren = () => {\r\n\r\n        return <div\r\n            className=\"PageBaseWhiteBackground\"\r\n            style={{\r\n\r\n            }}\r\n        />\r\n    };\r\n\r\n    render() {\r\n        // let fullWidth = (this.getAgl() && this.getAgl().getSize(false)) || (1002);\r\n        let fullWidth = this.props.pageSize;\r\n        console.log(\"fullWidth\", fullWidth)\r\n        return (\r\n            <AGLWrapper tagName=\"PageBase\"\r\n                        aglRef={!this.props.aglRef ? this.root : this.root = this.props.aglRef}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        className=\"Page1Root\"\r\n                        style={{\r\n                            width: `${fullWidth}px`,\r\n                            height: \"100%\",\r\n                            boxShadow: \"0 2px 12px 6px rgba(134,138,165,.41)\",\r\n                            display: \"inline-block\",\r\n                        }}\r\n                        data={this.getData()}\r\n                        isPage\r\n                        resizeSides={[]}\r\n                        page={this}\r\n                        hasMiniMenuOverride={this.hasMiniMenuOverride}\r\n                        getInspector={this.getInspector}\r\n                        invalidateSizeOverride={this.invalidateSizeOverride}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nPageBase.defaultProps = {\r\n    tagName: \"PageBase\",\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\n\r\nexport default class VerticalSpacer extends AGLComponent{\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"VerticalSpacer\"\r\n                {...this.props}\r\n                data={this.getData()}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"20px\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\n\r\nlet FadeInAnimation = {};\r\n\r\nFadeInAnimation.getOptions = (props) => {\r\n    return null;\r\n};\r\n\r\nFadeInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {duration, delay} = options;\r\n    let animationStyles = StyleSheet.create({\r\n        fadeIn: {\r\n            animationName: {\r\n                \"0%\": {\r\n                    opacity: 0\r\n                },\r\n                \"100%\": {\r\n                    opacity: 1\r\n                }\r\n            },\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.fadeIn);\r\n};\r\n\r\nFadeInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FadeInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet BounceInAnimation = {};\r\n\r\nBounceInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From center',\r\n                    'From top left',\r\n                    'From top right',\r\n                    'From bottom left',\r\n                    'From bottom right'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nBounceInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `scale3d(0, 0, 0) translate3d(${\r\n                direction.includes('center')? '0': direction.includes('left')? '-100%': direction.includes('right')?\r\n                    '100%': '0'\r\n            }, ${\r\n                direction.includes('center')? '0': direction.includes('top')? '-100%': direction.includes('bottom')?\r\n                    '100%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['20%'] = {\r\n        opacity: 0.33,\r\n        transform: `scale3d(1.1, 1.1, 1.1) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '7%': direction.includes('right')?\r\n                '-7%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '7%': direction.includes('bottom')?\r\n                '-7%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['40%'] = {\r\n        opacity: 0.66,\r\n        transform: `scale3d(0.9, 0.9, 0.9) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '-5%': direction.includes('right')?\r\n                '5%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '-5%': direction.includes('bottom')?\r\n                '5%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['60%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(1.03, 1.03, 1.03) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '3%': direction.includes('right')?\r\n                '-3%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '3%': direction.includes('bottom')?\r\n                '-3%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['80%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(0.97, 0.97, 0.97) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '-1%': direction.includes('right')?\r\n                '1%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '-1%': direction.includes('bottom')?\r\n                '1%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(1, 1, 1)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        bounceIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.bounceIn);\r\n};\r\n\r\nBounceInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default BounceInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\nimport SliderInput from \"../../Menus/CommonComponents/SliderInput\";\r\nimport Angle from \"../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\n\r\nlet GlideInAnimation = {};\r\n\r\nGlideInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <>\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                <Angle\r\n                    className=\"ShadowAngle\"\r\n                    angle={options.angle || 90}\r\n                    onChange={(d) => {\r\n                        onDesignChange(`${designKey}.angle`, d);\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Distance</p>\r\n\r\n                <div\r\n                    className=\"BorderWidth\"\r\n                >\r\n                    <SliderInput\r\n                        className=\"BorderWidthSlider\"\r\n                        min={0}\r\n                        max={300}\r\n                        value={options.distance || 100}\r\n                        designKey={`${designKey}.distance`}\r\n                        onDesignChange={onDesignChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nGlideInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {distance, angle, duration, delay} = options;\r\n    distance = distance || 100;\r\n    angle = angle || 90;\r\n\r\n    let animationName = {};\r\n    let tx = - distance * Math.sin(angle * Math.PI / 180);\r\n    let ty = distance * Math.cos(angle * Math.PI / 180);\r\n    animationName['0%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(${tx}px, ${ty}px, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        glideIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.glideIn);\r\n};\r\n\r\nGlideInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default GlideInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FloatInAnimation = {};\r\n\r\nFloatInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFloatInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n                direction.includes('left')? '-20%': direction.includes('right')? '20%': 0\r\n            }, ${\r\n                direction.includes('top')? '-20%': direction.includes('bottom')? '20%': 0\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        floatIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.floatIn);\r\n};\r\n\r\nFloatInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FloatInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet ExpandInAnimation = {};\r\n\r\nExpandInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'Soft',\r\n                    'Medium',\r\n                    'Hard'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.power`, v);\r\n                }}\r\n                value={options.power || 'Hard'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nExpandInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, duration, delay} = options;\r\n    power = power || 'Hard';\r\n\r\n    let animationName = {};\r\n    animationName[\"0%\"] = {\r\n        opacity: 0,\r\n        transform: `scale3d(${\r\n                power === \"Hard\"? '0.2': power === \"Medium\"? '0.5': '0.8'\r\n            }, ${\r\n                power === \"Hard\"? '0.2': power === \"Medium\"? '0.5': '0.8'\r\n            }, 0)`\r\n    };\r\n    animationName[\"100%\"] = {\r\n        opacity: 1,\r\n        transform: 'scale3d(1,1,1)'\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        expandIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.expandIn);\r\n};\r\n\r\nExpandInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default ExpandInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../Menus/CommonComponents/SliderInput\";\r\n\r\nlet SpinInAnimation = {};\r\n\r\nSpinInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <>\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n                <DropDown\r\n                    options={[\r\n                        'Soft',\r\n                        'Medium',\r\n                        'Hard'\r\n                    ]}\r\n                    onChange={(v) => {\r\n                        onDesignChange(`${designKey}.power`, v);\r\n                    }}\r\n                    value={options.power || 'Hard'}\r\n                    spanStyle={{\r\n                        width: \"100%\",\r\n                        fontSize: 14,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n                <DropDown\r\n                    options={[\r\n                        'Clockwise',\r\n                        'Counter clockwise',\r\n                    ]}\r\n                    onChange={(v) => {\r\n                        onDesignChange(`${designKey}.direction`, v);\r\n                    }}\r\n                    value={options.direction || 'Clockwise'}\r\n                    spanStyle={{\r\n                        width: \"100%\",\r\n                        fontSize: 14,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Spin number</p>\r\n\r\n                <div\r\n                    className=\"BorderWidth\"\r\n                >\r\n                    <SliderInput\r\n                        className=\"BorderWidthSlider\"\r\n                        min={0}\r\n                        max={15}\r\n                        step={0.1}\r\n                        value={options.spinNo || 2}\r\n                        designKey={`${designKey}.spinNo`}\r\n                        onDesignChange={onDesignChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nSpinInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, direction, spinNo, duration, delay} = options;\r\n    power = power || 'Hard';\r\n    direction = direction || 'Clockwise';\r\n    spinNo = spinNo || 2;\r\n\r\n    let animationName = {};\r\n    let firstRotate = 360 * spinNo * (direction === 'Clockwise'? -1: 1);\r\n    animationName[\"0%\"] = {\r\n        opacity: 0,\r\n        transform: `rotate(${firstRotate}deg) scale3d(${\r\n                power === \"Hard\"? '0.3': power === \"Medium\"? '0.6': '1'\r\n            }, ${\r\n                power === \"Hard\"? '0.3': power === \"Medium\"? '0.6': '1'\r\n            }, 1)`\r\n    };\r\n    animationName[\"100%\"] = {\r\n        opacity: 1,\r\n        transform: 'rotate(0deg) scale3d(1,1,1)'\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        spinIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.spinIn);\r\n};\r\n\r\nSpinInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default SpinInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FlyInAnimation = {};\r\n\r\nFlyInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                    'From top left',\r\n                    'From top right',\r\n                    'From bottom left',\r\n                    'From bottom right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFlyInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let size = item.getSize(true);\r\n    let windowSize = {\r\n        width: item.props.breakpointmanager.getWindowWidth(),\r\n        height: item.props.breakpointmanager.getWindowHeight(),\r\n    };\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n                direction.includes('left')? `${-size.left}px`: direction.includes('right')? `${\r\n                    windowSize.width - size.left - size.width\r\n                }px`: 0\r\n            }, ${\r\n                direction.includes('top')? `${-size.top}px`: direction.includes('bottom')? `${\r\n                    windowSize.height - size.top - size.height\r\n                }px`: 0\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        flyIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.flyIn);\r\n};\r\n\r\nFlyInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FlyInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet TurnInAnimation = {};\r\n\r\nTurnInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From left',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nTurnInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let size = item.getSize(true);\r\n    let viewSize = item.props.viewRef.current.getSize(false);\r\n    let windowSize = {\r\n        width: item.props.breakpointmanager.getWindowWidth(),\r\n        height: item.props.breakpointmanager.getWindowHeight(),\r\n    };\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n                -(size.left - viewSize.left)\r\n                }px`: `${\r\n            windowSize.width - (size.left - viewSize.left) - size.width\r\n                }px`\r\n            }, -200%, 0) rotate(${\r\n            direction.includes('left')? '-45': '45'\r\n            }deg) `\r\n    };\r\n    animationName['30%'] = {\r\n        opacity: 0.3,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n            -(size.left - viewSize.left) * 0.7\r\n                }px`: `${\r\n            (windowSize.width - (size.left - viewSize.left) - size.width) * 0.7\r\n                }px`\r\n            }, -${200*0.85}%, 0) rotate(${\r\n            direction.includes('left')? -45 * 0.7: 45 * 0.7\r\n            }deg) `\r\n    };\r\n    animationName['60%'] = {\r\n        opacity: 0.6,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n            -(size.left - viewSize.left) * 0.4\r\n                }px`: `${\r\n            (windowSize.width - (size.left - viewSize.left) - size.width) * 0.4\r\n                }px`\r\n            }, -${200*0.55}%, 0) rotate(${\r\n            direction.includes('left')? -45 * 0.4: 45 * 0.4\r\n            }deg) `\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0) rotate(0deg) `\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        turnIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            animationTimingFunction: 'linear',\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.turnIn);\r\n};\r\n\r\nTurnInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default TurnInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\n\r\nlet ArcInAnimation = {};\r\n\r\nArcInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From left',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From right'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nArcInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From right';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) scale(0) rotateY(${\r\n            direction.includes('left') ? '-' : ''\r\n            }180deg) translateZ(600px)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) scale(1) rotateY(0deg) translateZ(0px)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        arcIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            animationTimingFunction: 'linear',\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.arcIn);\r\n};\r\n\r\nArcInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default ArcInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet PuffInAnimation = {};\r\n\r\nPuffInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'Soft',\r\n                    'Medium',\r\n                    'Hard'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.power`, v);\r\n                }}\r\n                value={options.power || 'Hard'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nPuffInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, duration, delay} = options;\r\n    power = power || 'Hard';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) translateZ(${\r\n            power === \"Hard\"? 400: power === \"Medium\"? 200: 100\r\n            }px)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) translateZ(0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        puffIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.puffIn);\r\n};\r\n\r\nPuffInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default PuffInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FoldInAnimation = {};\r\n\r\nFoldInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFoldInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) rotateY(${\r\n                direction.includes('left')? 90: direction.includes('right')? -90: 0\r\n            }deg) rotateX(${\r\n                direction.includes('top')? -90: direction.includes('bottom')? 90: 0\r\n            }deg)`,\r\n        transformOrigin: `${\r\n            direction.includes('left')? 'left': direction.includes('right')? 'right': 'center'\r\n            } ${\r\n            direction.includes('top')? 'top': direction.includes('bottom')? 'bottom': 'center'\r\n            } 0`,\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) rotateY(0deg) rotateX(0deg)`,\r\n        transformOrigin: `${\r\n            direction.includes('left')? 'left': direction.includes('right')? 'right': 'center'\r\n            } ${\r\n            direction.includes('top')? 'top': direction.includes('bottom')? 'bottom': 'center'\r\n            } 0`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        foldIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.foldIn);\r\n};\r\n\r\nFoldInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FoldInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FlipInAnimation = {};\r\n\r\nFlipInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFlipInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) rotateY(${\r\n                direction.includes('left')? -90: direction.includes('right')? 90: 0\r\n            }deg) rotateX(${\r\n                direction.includes('top')? 90: direction.includes('bottom')? -90: 0\r\n            }deg)`,\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) rotateY(0deg) rotateX(0deg)`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        flipIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.flipIn);\r\n};\r\n\r\nFlipInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FlipInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet RevealAnimation = {};\r\n\r\nRevealAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From center',\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From center'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nRevealAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From center';\r\n\r\n    let animationName = {};\r\n    switch (direction) {\r\n        case 'From center':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)`,\r\n            };\r\n            break;\r\n        case 'From left':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 0, 0 0, 0 100%, 0 100%)`,\r\n            };\r\n            break;\r\n        case 'From right':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(100% 0, 100% 0, 100% 100%, 100% 100%)`,\r\n            };\r\n            break;\r\n        case 'From top':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 0, 0 100%, 0 100%, 0 0)`,\r\n            };\r\n            break;\r\n        case 'From bottom':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 100%, 100% 100%, 100% 100%, 0 100%)`,\r\n            };\r\n            break;\r\n    }\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        clipPath: `polygon(0 0, 100% 0, 100% 100%, 0 100%)`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        reveal: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.reveal);\r\n};\r\n\r\nRevealAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default RevealAnimation;\r\n","import ContainerBase from \"../Components/Containers/ContainerBase\";\r\nimport Header from \"../Components/Containers/Header\";\r\nimport Footer from \"../Components/Containers/Footer\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport Section from \"../Components/Containers/Section\";\r\nimport Stack from \"../Components/Stack/Stack\";\r\nimport VerticalSpacer from \"../Components/Stack/VerticalSpacer\";\r\nimport FadeInAnimation from \"../Test/Animations/FadeInAnimation\";\r\nimport BounceInAnimation from \"../Test/Animations/BounceInAnimation\";\r\nimport GlideInAnimation from \"../Test/Animations/GlideInAnimation\";\r\nimport FloatInAnimation from \"../Test/Animations/FloatInAnimation\";\r\nimport ExpandInAnimation from \"../Test/Animations/ExpandInAnimation\";\r\nimport SpinInAnimation from \"../Test/Animations/SpinInAnimation\";\r\nimport FlyInAnimation from \"../Test/Animations/FlyInAnimation\";\r\nimport TurnInAnimation from \"../Test/Animations/TurnInAnimation\";\r\nimport ArcInAnimation from \"../Test/Animations/ArcInAnimation\";\r\nimport PuffInAnimation from \"../Test/Animations/PuffInAnimation\";\r\nimport FoldInAnimation from \"../Test/Animations/FoldInAnimation\";\r\nimport FlipInAnimation from \"../Test/Animations/FlipInAnimation\";\r\nimport RevealAnimation from \"../Test/Animations/RevealAnimation\";\r\n\r\nlet DynamicComponents = {};\r\n\r\nexport let initDynamicComponents = () => {\r\n    DynamicComponents[\"ContainerBase\"] = ContainerBase;\r\n    DynamicComponents[\"PageBase\"] = PageBase;\r\n    DynamicComponents[\"Header\"] = Header;\r\n    DynamicComponents[\"Footer\"] = Footer;\r\n    DynamicComponents[\"Section\"] = Section;\r\n    DynamicComponents[\"Stack\"] = Stack;\r\n    DynamicComponents[\"VerticalSpacer\"] = VerticalSpacer;\r\n};\r\n\r\nexport default DynamicComponents;\r\n\r\nexport let DynamicAnimations = {};\r\n\r\nexport let initDynamicAnimations = () => {\r\n    DynamicAnimations[\"fadeIn\"] = FadeInAnimation;\r\n    DynamicAnimations[\"bounceIn\"] = BounceInAnimation;\r\n    DynamicAnimations[\"glideIn\"] = GlideInAnimation;\r\n    DynamicAnimations[\"floatIn\"] = FloatInAnimation;\r\n    DynamicAnimations[\"expandIn\"] = ExpandInAnimation;\r\n    DynamicAnimations[\"spinIn\"] = SpinInAnimation;\r\n    DynamicAnimations[\"flyIn\"] = FlyInAnimation;\r\n    DynamicAnimations[\"turnIn\"] = TurnInAnimation;\r\n    DynamicAnimations[\"arcIn\"] = ArcInAnimation;\r\n    DynamicAnimations[\"puffIn\"] = PuffInAnimation;\r\n    DynamicAnimations[\"foldIn\"] = FoldInAnimation;\r\n    DynamicAnimations[\"flipIn\"] = FlipInAnimation;\r\n    DynamicAnimations[\"reveal\"] = RevealAnimation;\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\nimport DynamicComponents from \"../Dynamic/DynamicComponents\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport '../HelperStyle.css';\r\n\r\nexport default class AdjustmentPageControllers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    addSection = (index, isVertical) => {\r\n        let {page} = this.props;\r\n        page.addSectionQueue(index, \"Section\", DynamicComponents, undefined, isVertical);\r\n    };\r\n\r\n    getAnchor = (index) => {\r\n        return  document.getElementById(`page_add_horizontal_${index}`)\r\n    };\r\n\r\n    needUpdate = () => {\r\n        clearTimeout(this.updateTimeout);\r\n        this.updateTimeout = setTimeout(() => {\r\n            if (!this.mounted) {\r\n                clearTimeout(this.updateTimeout);\r\n                return;\r\n            }\r\n            this.forceUpdate();\r\n        }, 500);\r\n    };\r\n\r\n    render () {\r\n        let {grid} = this.props;\r\n        return (\r\n                [\r\n                    new Array(grid.y + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `1/${index}/2/${index + 1}`\r\n                        };\r\n                        index === 0 && (style.justifySelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                        >\r\n                            <div\r\n                                className={containerClasses}\r\n                                onClick={(e) => {\r\n                                    this.addSection(index, true);\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={8} height={8} src={require('./icons/plus.svg')} />\r\n                            </div>\r\n                        </div>\r\n                    }),\r\n                    new Array(grid.x + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `${index}/1/${index + 1}/2`,\r\n                            pointerEvents: \"auto\"\r\n                        };\r\n                        index === 0 && (style.alignSelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddHorizontalSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddHorizontalSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddHorizontalSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                            id={`page_add_horizontal_${index}`}\r\n                            onClick={(e) => {\r\n                                this.setState({anchorEl: e.currentTarget})\r\n                            }}\r\n                        >\r\n                            {!this.getAnchor(index) && this.needUpdate()}\r\n                            <Popper open={Boolean(document.getElementById(`page_add_horizontal_${index}`))}\r\n                                    anchorEl={\r\n                                        () => {\r\n                                            return this.getAnchor(index);\r\n                                        }\r\n                                    }\r\n                                    modifiers={{\r\n                                        preventOverflow: {\r\n                                            enabled: false,\r\n                                            boundariesElement: 'scrollParent',\r\n                                        },\r\n                                        hide: {\r\n                                            enabled: false,\r\n                                        },\r\n                                    }}\r\n                            >\r\n                                <div\r\n                                    className={containerClasses}\r\n                                    onClick={(e) => {\r\n                                        this.addSection(index, false);\r\n                                    }}\r\n                                >\r\n                                    <img draggable={false} className=\"IconImage\" width={8} height={8} src={require('./icons/plus.svg')} />\r\n                                </div>\r\n                            </Popper>\r\n                        </div>\r\n                    })\r\n                ]\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerFixedHolder extends React.Component {\r\n    render () {\r\n        let {size, id} = this.props;\r\n        return (\r\n            <div\r\n                className=\"fixed-holder\"\r\n                style={{\r\n                    top: size? size.top: 0,\r\n                    left: size? size.left: 0,\r\n                    width: size? size.width: 0,\r\n                    height: size? size.clientHeight || size.height: 0,\r\n                }}\r\n                id={`${id}_fixed_holder`}\r\n            >\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class PaddingInterface extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    borderTop: this.props.padding.top ? `${this.props.padding.top} solid rgba(2, 242, 255, 0.3` : \"unset\",\r\n                    borderLeft: this.props.padding.left ? `${this.props.padding.left} solid rgba(2, 242, 255, 0.3)` : \"unset\",\r\n                    borderBottom: this.props.padding.bottom ? `${this.props.padding.bottom} solid rgba(2, 242, 255, 0.3)` : \"unset\",\r\n                    borderRight: this.props.padding.right ? `${this.props.padding.right} solid rgba(2, 242, 255, 0.3)` : \"unset\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ParentSelectInterface extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    border: '1px solid rgb(2 50 255 / 40%)'\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {appendStyle, cloneObject, shallowEqual, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\nimport GridChildContainerChildren from \"./GridChildContainerChildren\";\r\nimport classNames from \"classnames\";\r\nimport AdjustmentPageControllers from \"./Adjustment/AdjustmentPageControllers\";\r\nimport GridChildContainerFixedHolder from \"./GridChildContainerFixedHolder\";\r\nimport PaddingInterface from \"./Test/PaddingInterface\";\r\nimport ParentSelectInterface from \"./Test/ParentSelectInterface\";\r\n\r\nexport default class GridChildContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.controllerRef = React.createRef();\r\n        this.fixedHolderRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.modifyOverflowStyle(this.props.overflowData, this.props.aglStyle);\r\n        this.modifyContainerStyle(this.props.grid, this.props.aglStyle, this.props.padding);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(this.grid, nextProps.grid) ||\r\n            !shallowEqual(this.size, nextProps.size) ||\r\n            this.props.selectAsParent !== nextProps.selectAsParent ||\r\n            this.props.selected !== nextProps.selected ||\r\n            !shallowEqual(this.padding, nextProps.padding) ||\r\n            !shallowEqual(JSON.stringify(this.allChildIndex),\r\n                JSON.stringify(Object.values(nextProps.allChildren).map(c => {\r\n                    return {\r\n                        z: c.zIndex,\r\n                        i: c.child.props.id\r\n                    }\r\n                })))\r\n        ) {\r\n            if (!shallowEqual(this.overflowData, nextProps.overflowData))\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n\r\n            if (!shallowEqual(this.grid, nextProps.grid) || !shallowEqual(this.padding, nextProps.padding))\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n\r\n            if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!shallowEqual(this.overflowData, nextProps.overflowData)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            return true;\r\n        }\r\n        if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren, grid, overflowData, aglStyle, size, padding} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => {\r\n            return {\r\n                z: c.zIndex,\r\n                i: c.child.props.id\r\n            }\r\n        });\r\n        this.grid = cloneObject(grid);\r\n        this.overflowData = cloneObject(overflowData);\r\n        this.aglStyle = cloneObject(aglStyle);\r\n        this.size = cloneObject(size);\r\n        this.padding = cloneObject(padding);\r\n    };\r\n\r\n    modifyContainerStyle = (grid, aglStyle, padding) => {\r\n        if (!grid)\r\n            grid = this.props.grid;\r\n\r\n        let {modifyContainerStyleOverride, agl} = this.props;\r\n\r\n        if (modifyContainerStyleOverride){\r\n            modifyContainerStyleOverride(this, agl, grid, aglStyle);\r\n            return;\r\n        }\r\n\r\n        let style = {\r\n            width: (aglStyle && aglStyle.width === \"auto\") ? \"auto\": \"100%\",\r\n            height: (aglStyle && aglStyle.height === \"auto\") ? \"auto\":\r\n                agl.getFromData(\"containerHeight\") || \"100%\",\r\n            display: \"grid\",\r\n            position: \"relative\",\r\n            boxSizing: \"border-box\",\r\n            gridTemplateRows: grid.gridTemplateRows,\r\n            gridTemplateColumns: grid.gridTemplateColumns,\r\n        };\r\n\r\n        if (padding) {\r\n            if (padding.top) style.paddingTop = padding.top;\r\n            if (padding.left) style.paddingLeft = padding.left;\r\n            if (padding.bottom) style.paddingBottom = padding.bottom;\r\n            if (padding.right) style.paddingRight = padding.right;\r\n\r\n            /*style.backgroundImage = \"\";\r\n            Object.keys(padding).forEach(key => {\r\n                if (key === \"top\")\r\n                    style.backgroundImage += `linear-gradient(to bottom, #00f3ffa8 ${padding.top}, transparent 10px),`\r\n                if (key === \"bottom\")\r\n                    style.backgroundImage += `linear-gradient(to top, #00f3ffa8 ${padding.bottom}, transparent 10px),`\r\n                if (key === \"left\")\r\n                    style.backgroundImage += `linear-gradient(to right, #00f3ffa8 ${padding.left}, transparent 10px),`\r\n                if (key === \"right\")\r\n                    style.backgroundImage += `linear-gradient(to left, #00f3ffa8 ${padding.right}, transparent 10px),`\r\n            });\r\n\r\n            if (style.backgroundImage)\r\n                style.backgroundImage = style.backgroundImage.slice(0, -1);*/\r\n        }\r\n\r\n        let styleNode = document.getElementById(this.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, this.getContainerStyleId(), this.getContainerStyleId());\r\n        } else {\r\n            updateStyle(styleNode, style, this.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    modifyOverflowStyle = (overflowData, aglStyle) => {\r\n        let styleNode = document.getElementById(this.getOverflowStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId()\r\n                , this.getOverflowStyleId());\r\n        } else {\r\n            updateStyle(styleNode, this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId());\r\n        }\r\n\r\n        let webkitScrollbarStyle = {};\r\n        let webkitScrollbarStyleId = this.getOverflowStyleId() + '::-webkit-scrollbar';\r\n        if (overflowData.auto === 'hide') webkitScrollbarStyle.display = \"none\";\r\n\r\n        let scrollStyleNode = document.getElementById(webkitScrollbarStyleId);\r\n\r\n        if (!scrollStyleNode) {\r\n            appendStyle(webkitScrollbarStyle, webkitScrollbarStyleId, webkitScrollbarStyleId);\r\n        } else {\r\n            updateStyle(scrollStyleNode, webkitScrollbarStyle, webkitScrollbarStyleId);\r\n        }\r\n    };\r\n\r\n    getOverflowStyle = (overflowData, aglStyle) => {\r\n        let style = {\r\n            display: \"grid\",\r\n            gridTemplateRows: \"1fr\",\r\n            gridTemplateColumns: \"1fr\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n        };\r\n\r\n        if (aglStyle && aglStyle.width === \"auto\") {\r\n            style.position = \"relative\";\r\n            delete style.left;\r\n            delete style.right;\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n        if (aglStyle && aglStyle.height === \"auto\") {\r\n            style.position = \"relative\";\r\n            delete style.left;\r\n            delete style.right;\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n\r\n        if (!overflowData)\r\n            overflowData = this.props.overflowData;\r\n\r\n        if (!overflowData)\r\n            return style;\r\n\r\n        if (overflowData.state === 'show') {\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'hide') {\r\n            style.overflowX = \"hidden\";\r\n            style.overflowY = \"hidden\";\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'scroll') {\r\n            style.overflowX = overflowData.overflowX? overflowData.auto === 'auto'? \"auto\" : \"scroll\" : \"hidden\" ;\r\n            style.overflowY = overflowData.overflowY? overflowData.auto === 'auto'? \"auto\" : \"scroll\" : \"hidden\" ;\r\n        }\r\n\r\n        if (overflowData.auto === 'hide') {\r\n            // TODO hide scrollbar with webkit\r\n            style.scrollbarWidth = 'none';\r\n            style.overflow = '-moz-scrollbars-none';\r\n            style['-ms-overflow-style'] = 'none';\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    getOverflowStyleId = () => {\r\n        return `style_overflow_${this.props.id}`\r\n    };\r\n\r\n    getContainerStyleId = () => {\r\n        return `style_container_${this.props.id}`\r\n    };\r\n\r\n    updateAdjustments = () => {\r\n        this.controllerRef.current && this.controllerRef.current.forceUpdate();\r\n        this.fixedHolderRef.current && this.fixedHolderRef.current.forceUpdate();\r\n    };\r\n\r\n    needOverflow = () => {\r\n        let overflowData = this.props.overflowData;\r\n\r\n        if (overflowData.state !== 'scroll')\r\n            return false;\r\n\r\n        if (overflowData.overflowX === 'scroll')\r\n                return true;\r\n        if (overflowData.overflowY === 'scroll')\r\n                return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        if (!this.props.show)\r\n            return null;\r\n        this.saveState();\r\n        let {allChildren, id, grid, isPage, page, size, getChildrenOverride, agl, editor} = this.props;\r\n\r\n        let overflowClasses = classNames(\r\n            this.getOverflowStyleId()\r\n        );\r\n        let containerClasses = classNames(\r\n            this.getContainerStyleId()\r\n        );\r\n\r\n        if (!isPage) {\r\n            if (this.needOverflow()) {\r\n                return (\r\n                    <div\r\n                        id={`${id}_overflow`}\r\n                        className={overflowClasses}\r\n                        ref={this.props.overflowRef}\r\n                        onScroll={this.props.onScroll}\r\n                    >\r\n                        <div\r\n                            id={`${id}_container`}\r\n                            className={containerClasses}\r\n                            ref={this.props.containerRef}\r\n                        >\r\n                            {\r\n                                this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                                <PaddingInterface padding={this.props.padding} />\r\n                            }\r\n                            {\r\n                                this.props.selectAsParent &&\r\n                                <ParentSelectInterface />\r\n                            }\r\n                            <GridChildContainerChildren\r\n                                allChildren={allChildren}\r\n                                getChildrenOverride={getChildrenOverride}\r\n                                agl={agl}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        id={`${id}_container`}\r\n                        className={containerClasses}\r\n                        ref={this.props.containerRef}\r\n                    >\r\n                        {\r\n                            this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                            <PaddingInterface padding={this.props.padding} />\r\n                        }\r\n                        {\r\n                            this.props.selectAsParent &&\r\n                            <ParentSelectInterface />\r\n                        }\r\n                        <GridChildContainerChildren\r\n                            allChildren={allChildren}\r\n                            getChildrenOverride={getChildrenOverride}\r\n                            agl={agl}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                    <div\r\n                        id={`${id}_container`}\r\n                        className={containerClasses}\r\n                        ref={this.props.containerRef}\r\n                    >\r\n                        {\r\n                            this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                            <PaddingInterface padding={this.props.padding} />\r\n                        }\r\n                        {\r\n                            this.props.selectAsParent &&\r\n                            <ParentSelectInterface />\r\n                        }\r\n                        <GridChildContainerChildren\r\n                            allChildren={allChildren}\r\n                            getChildrenOverride={getChildrenOverride}\r\n                            agl={agl}\r\n                        />\r\n\r\n                        {\r\n                            editor &&\r\n                            <AdjustmentPageControllers\r\n                                grid={grid}\r\n                                page={page}\r\n                                editor={editor}\r\n                                ref={this.controllerRef}\r\n                            />\r\n                        }\r\n\r\n                        <GridChildContainerFixedHolder\r\n                            ref={this.fixedHolderRef}\r\n                            size={size}\r\n                            id={id}\r\n                        />\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomeGridLayout.css';\r\n\r\nexport default class AGLAnchor extends React.Component {\r\n    render () {\r\n        let {anchor} = this.props;\r\n\r\n        if (!anchor)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                className=\"AGLAnchor\"\r\n                id={anchor.id}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ResizePanePage extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane-page`,\r\n            \"Adjustment-Pane\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.onMouseDown}\r\n                className={classes}\r\n                style={style}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePanePage from \"./ResizePanePage\";\r\n\r\nexport default class AdjustmentResizePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render () {\r\n        let {top, left, width, height} = this.props;\r\n        if (top === undefined || left === undefined || width === undefined || height === undefined)\r\n            return null;\r\n\r\n        return (\r\n                <div\r\n                    id=\"AdjustmentResizePage\"\r\n                    style={{\r\n                        width: width,\r\n                        height: \"80vh\",\r\n                        // left: left? left: 0,\r\n                        // top: top? top : 0,\r\n                        // bottom: top? window.innerHeight - top - height: 0,\r\n                        // right: left? window.innerWidth - left - width: 0,\r\n                    }}\r\n                    // className=\"AdjustmentResizeRootPage\"\r\n                    className=\"AdjustmentResizeRoot\"\r\n                >\r\n                    {\r\n                        this.props.sides.map((side, index) => {\r\n                            return <ResizePanePage\r\n                                key={index}\r\n                                side={side}\r\n                                onResizeStart={this.props.onResizeStart}\r\n                                onResize={this.props.onResize}\r\n                                onResizeStop={this.props.onResizeStop}\r\n                                draggingStart={this.props.draggingStart}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class EventTrigger {\r\n    constructor(owner, defaultListener) {\r\n        this.owner = owner;\r\n        this.listeners = [];\r\n        if (defaultListener)\r\n            this.listeners.push(defaultListener);\r\n    }\r\n\r\n    addListener = (listener) => {\r\n        if (!this.listeners.find(l => { return l === listener; })) {\r\n            this.listeners.push(listener);\r\n        }\r\n    };\r\n\r\n    trigger = throttleDebounce((data) => {\r\n        this.listeners.forEach(l => {\r\n            l(this.owner, data);\r\n        });\r\n    }, 50);\r\n\r\n    removeListener = (listener) => {\r\n        let index = this.listeners.findIndex(l => { return l === listener; })\r\n        if (index >= 0)\r\n            this.listeners.splice(index, 1);\r\n    };\r\n}\r\n","let windowCache = {\r\n    boundingRects: {},\r\n    clientsWidth: {},\r\n    clientsHeight: {},\r\n    scrollsTop: {},\r\n    scrollsLeft: {},\r\n    scrollsWidth: {},\r\n    scrollsHeight: {}\r\n};\r\n\r\nlet clearCache = () => {\r\n    windowCache.boundingRects = {};\r\n    windowCache.clientsWidth = {};\r\n    windowCache.clientsHeight = {};\r\n    windowCache.scrollsTop = {};\r\n    windowCache.scrollsLeft = {};\r\n    windowCache.scrollsWidth = {};\r\n    windowCache.scrollsHeight = {};\r\n    delete windowCache.clearCacheTimeuot;\r\n};\r\n\r\nexport let getCachedBoundingRect = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.boundingRects[id])\r\n        windowCache.boundingRects[id] = node.getBoundingClientRect();\r\n\r\n    return windowCache.boundingRects[id];\r\n};\r\n\r\nexport let getCachedClientWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.clientsWidth[id])\r\n        windowCache.clientsWidth[id] = node.clientWidth;\r\n\r\n    return windowCache.clientsWidth[id];\r\n};\r\n\r\nexport let getCachedClientHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.clientsHeight[id])\r\n        windowCache.clientsHeight[id] = node.clientHeight;\r\n\r\n    return windowCache.clientsHeight[id];\r\n};\r\n\r\nexport let getCachedScrollTop = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsTop[id])\r\n        windowCache.scrollsTop[id] = node.scrollTop;\r\n\r\n    return windowCache.scrollsTop[id];\r\n};\r\n\r\nexport let getCachedScrollLeft = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsLeft[id])\r\n        windowCache.scrollsLeft[id] = node.scrollLeft;\r\n\r\n    return windowCache.scrollsLeft[id];\r\n};\r\n\r\nexport let getCachedScrollWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsWidth[id])\r\n        windowCache.scrollsWidth[id] = node.scrollWidth;\r\n\r\n    return windowCache.scrollsWidth[id];\r\n};\r\n\r\nexport let getCachedScrollHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsHeight[id])\r\n        windowCache.scrollsHeight[id] = node.scrollHeight;\r\n\r\n    return windowCache.scrollsHeight[id];\r\n};\r\n\r\nexport let addToCache = (id, rect, propName) => {\r\n    windowCache[propName][id] = rect;\r\n};\r\n","import React from \"react\";\r\nexport default class AnimationHolder extends React.Component {\r\n    render () {\r\n        if (!this.props.disabled)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <div\r\n                    className={this.props.className}\r\n                    id={this.props.id}\r\n                    ref={this.props.transformRef}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nexport default class VisibilitySensorWrapper extends React.Component {\r\n    render () {\r\n        if (!this.props.animation)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <VisibilitySensor\r\n                    partialVisibility onChange={(v) => {\r\n                        if (this.props.animation.name &&\r\n                            (this.props.animation.options && this.props.animation.options.once)\r\n                            && v) {\r\n                            !this.props.editor && this.props.playAnimation(true);\r\n                            return;\r\n                        }\r\n\r\n                        if (this.props.animation.name && v)\r\n                            !this.props.editor && this.props.playAnimation();\r\n                    }}\r\n                    containment={this.props.select.getPageOverflowRef()}\r\n                    active={this.props.animation.name && !this.props.disableVS}\r\n                >\r\n                    {this.props.children}\r\n                </VisibilitySensor>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentHelpSize extends React.Component {\r\n    getText = () => {\r\n        let {width, height} = this.props.resizeHelpData;\r\n\r\n        return `${width? \"W: \" + width.toFixed(0).toString() + \"  \": \"\"}\r\n        ${height? \"H: \" + height.toFixed(0).toString() + \"\": \"\"}`;\r\n    };\r\n    render () {\r\n        let {x, y} = this.props.resizeHelpData;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpSize\"\r\n                className=\"AdjustmentHelpSizeRoot\"\r\n            >\r\n                <p\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: y,\r\n                        left: x,\r\n                        margin: 0,\r\n                        transform: \"translateX(20px) translateY(20px)\",\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#ffffff\",\r\n                        backgroundColor: \"#4b4b4b\",\r\n                        padding: 4,\r\n                        borderRadius: 4,\r\n                        width: \"fit-content\"\r\n                    }}\r\n                >\r\n                    {this.getText()}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport debounce from 'lodash.debounce';\r\nimport {appendStyle, cloneObject, initGriddata, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './AwesomeGridLayout.css';\r\nimport GridChildContainer from \"./GridChildContainer\";\r\nimport DynamicComponents, {DynamicAnimations} from \"./Dynamic/DynamicComponents\";\r\nimport classNames from \"classnames\";\r\nimport Portal from \"./Portal\";\r\nimport {\r\n    createItem,\r\n    getCompositeDesignData, getPxValueFromCSSValue, getResizeDelta, getViewRatioStyle,\r\n    isFixed,\r\n    isGroupSelected, isRightClick,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport AGLAnchor from \"./AGLAnchor\";\r\nimport AdjustmentResizePage from \"./Adjustment/AdjustmentResizePage\";\r\nimport EventTrigger from \"./Test/EventTrigger\";\r\nimport {\r\n    addToCache,\r\n    getCachedBoundingRect,\r\n    getCachedClientHeight, getCachedScrollLeft,\r\n    getCachedScrollTop,\r\n    getCachedClientWidth, getCachedScrollHeight, getCachedScrollWidth\r\n} from \"./Test/WindowCache\";\r\nimport ChildHolder from \"./AnimationHolder\";\r\nimport VisibilitySensorWrapper from \"./Test/VisibilitySensorWrapper\";\r\nimport AdjustmentHelpSize from \"./Adjustment/AdjustmentHelpSize\";\r\n\r\nexport default class AwesomeGridLayout2 extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            childContainers: [],\r\n            grid: {x: 1, y: 1, gridTemplateRows: \"1fr\", gridTemplateColumns: \"1fr\"},\r\n            portalNodeId: props.portalNodeId,\r\n            windowWidth: props.breakpointmanager.getWindowWidth()\r\n        };\r\n\r\n        this.rootDivRef = React.createRef();\r\n        this.overflowRef = !props.isPage? React.createRef(): this.rootDivRef;\r\n        this.containerRef = React.createRef();\r\n        this.backContainerRef = React.createRef();\r\n        this.transformRef = React.createRef();\r\n        this.allChildRefs = {};\r\n\r\n        this.children = {};\r\n\r\n        initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        this.props.idMan.setItem(this.props.id, this);\r\n\r\n        this.onPropsChange = new EventTrigger(this);\r\n\r\n        props.id === \"comp_ContainerBase_1_1_1_1_1_1\" && console.log(\"AwesomeGridLayout2 constructor\", props.griddata)\r\n\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n        this.init();\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n        if (this.needRender) {\r\n            delete this.needRender;\r\n            this.updateLayout(() => {\r\n                this.isEditor() ? this.onSelect(this.getFromTempData(\"selected\"), this.lateMounted) : this.lateMounted();\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.isEditor() && this.props.editor.updateLayout();\r\n    }\r\n\r\n    callOverride = (funcName, ...args) => {\r\n        let override = this.getOverrideProp(funcName);\r\n        if (override) {\r\n            return override(this, ...args);\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    hasOverride = (funcName) => {\r\n        return this.getOverrideProp(funcName);\r\n    };\r\n\r\n    init = () => {\r\n        this.needRender = true;\r\n\r\n        this.children = {};\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let savedChildren = this.props.griddata.savedChildren;\r\n        if (!savedChildren) {\r\n            this.props.griddata.savedChildren = {};\r\n            savedChildren = this.props.griddata.savedChildren;\r\n\r\n            React.Children.map(this.props.children, (child, i)=> {\r\n                if (child) {\r\n                    let props = {...child.props};\r\n                    let createdChild = this.createChildByData({\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: props\r\n                    }, DynamicComponents);\r\n                    this.children[props.id] = {\r\n                        // child: this.getChildClone(child),\r\n                        child: createdChild,\r\n                        zIndex: lastZIndex + 1\r\n                    };\r\n\r\n                    savedChildren[props.id] = {\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: this.getClearProps(props),\r\n                        zIndex: this.children[props.id].zIndex\r\n                    };\r\n\r\n                    lastZIndex++;\r\n                }\r\n            });\r\n\r\n            if (this.renderChild) {\r\n                let childs = this.renderChild();\r\n                if (childs instanceof Array) {\r\n                    childs.forEach(c => {\r\n                        if (c) {\r\n                            let props = {...c.props};\r\n                            let createdChild = this.createChildByData({\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: props\r\n                            }, DynamicComponents);\r\n                            this.children[props.id] = {\r\n                                child: createdChild,\r\n                                zIndex: lastZIndex + 1\r\n                            };\r\n\r\n                            savedChildren[props.id] = {\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: this.getClearProps(props),\r\n                                zIndex: this.children[props.id].zIndex\r\n                            };\r\n\r\n                            lastZIndex++;\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (childs) {\r\n                        let props = {...childs.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.props.childrenData) {\r\n                let childs = this.props.childrenData();\r\n                childs.forEach(c => {\r\n                    if (c) {\r\n                        let props = {...c.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: c.tagName,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: c.tagName,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            let savedChildrenArray = Object.values(savedChildren);\r\n            savedChildrenArray.sort((a, b) => {\r\n                if (a.zIndex > b.zIndex) {\r\n                    return 1;\r\n                } else if (a.zIndex === b.zIndex) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    return 0;\r\n                }\r\n                return -1;\r\n            });\r\n            savedChildrenArray.forEach(childData => {\r\n                let oldId = childData.props.id;\r\n                let child = this.createChildByData(childData, DynamicComponents);\r\n                this.children[childData.props.id] = {\r\n                    child: child,\r\n                    zIndex: childData.zIndex\r\n                };\r\n\r\n                if (oldId !== childData.props.id) {\r\n                    delete savedChildren[oldId];\r\n                    savedChildren[childData.props.id] = childData;\r\n                }\r\n            })\r\n        }\r\n\r\n        this.initLayout();\r\n    };\r\n\r\n    initLayout = () => {\r\n        if (this.callOverride(\"initLayout\"))\r\n            return;\r\n\r\n        let style = this.getCompositeFromData(\"style\") || this.getDefaultStyle();\r\n\r\n        this.setTransformStyle(this.getCompositeFromData(\"transform\"), undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGridItemStyle(this.getCompositeFromData(\"gridItemStyle\") ||\r\n            this.props.defaultGridItemStyle,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        if (this.props.isPage)\r\n            style.width = this.props.style.width;\r\n\r\n        this.setStyle(style, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGrid(this.getCompositeFromData(\"grid\") || this.props.defaultGrid, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    getDefaultStyle = () => {\r\n        let style = { ...this.props.defaultStyle, ...this.props.style};\r\n\r\n        if ((this.props.defaultGridItemStyle).justifySelf === \"stretch\" &&\r\n            (this.getFromTempData(\"resizable\") &&\r\n                (!this.props.resizeSides || (!this.props.resizeSides.includes(\"w\") &&\r\n                    !this.props.resizeSides.includes(\"e\"))))) {\r\n            style.width = \"auto\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    lateMounted = () => {\r\n        if (this.hasOverride(\"lateMounted\")) {\r\n            return this.callOverride(\"lateMounted\");\r\n        }\r\n\r\n        let size = this.getSize(false, true, true);\r\n        this.addToSnap();\r\n\r\n        let baseDocks = this.getBaseDocks();\r\n        this.setDocks(baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n            this.getFromTempData(\"autoDock\"),\r\n            this.props.breakpointmanager.getHighestBpName(), true);\r\n\r\n        console.log(\"AwesomeGridLayout2 lateMounted\", this.props.id)\r\n        if (this.props.onPageResize) {\r\n            console.log(\"AwesomeGridLayout2 lateMounted.onPageResize\", this.props.id)\r\n            this.props.onPageResize(size.width, this, true);\r\n        }\r\n\r\n        this.props.onChildMounted && this.props.onChildMounted(this);\r\n        this.isEditor() && this.props.editor.updateLayout();\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        return this.props.getPrimaryOptions && this.props.getPrimaryOptions();\r\n    };\r\n\r\n    getShortcutOptions = () => {\r\n        return this.props.getShortcutOptions && this.props.getShortcutOptions();\r\n    };\r\n\r\n    hasMiniMenu = () => {\r\n        if (this.hasOverride(\"hasMiniMenu\")) {\r\n            return this.callOverride(\"hasMiniMenu\");\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    addToSnap = debounce(() => {\r\n        if (this.callOverride(\"addToSnap\"))\r\n            return;\r\n\r\n        // let rect = this.getSize(false);\r\n        let rect = this.getBoundarySize() || this.getSize(false);\r\n        if (rect) {\r\n            this.props.snap.addSnap(this.props.id,\r\n                [\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    },\r\n                    !this.props.isPage && {\r\n                        id: this.props.id,\r\n                        value: rect.top + rect.height / 2,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top + rect.height,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    }\r\n                ],\r\n                [\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    },\r\n                    !this.props.isPage && {\r\n                        id: this.props.id,\r\n                        value: rect.left + rect.width / 2,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left + rect.width,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    }\r\n                ],\r\n                this.getParentsId()\r\n            );\r\n        }\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current){\r\n                childRef.current.addToSnap();\r\n            }\r\n        });\r\n    }, 500);\r\n\r\n    getParentsId = () => {\r\n        let parentsId = [];\r\n        let parent = this.props.parent;\r\n\r\n        while (parent) {\r\n            parentsId.push(parent.props.id);\r\n            parent = parent.props.parent;\r\n        }\r\n\r\n        return parentsId;\r\n    };\r\n\r\n    getGridLineSnaps = () => {\r\n        let snaps = {\r\n            horizontals: [],\r\n            verticals: [],\r\n            id: this.props.id\r\n        };\r\n        this.prepareRects();\r\n        let xLineRef = this.props.gridLine.getXlineRef(this.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            // let current = xLineRef[i].current;\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.verticals.push({\r\n                id: this.props.id,\r\n                value: rect.left + ((i === xLineRef.length - 1)? 1: 0),\r\n                p1: rect.top,\r\n                p2: rect.top + rect.height\r\n            });\r\n        }\r\n        let yLineRef = this.props.gridLine.getYlineRef(this.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let current = yLineRef[i].current;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.horizontals.push({\r\n                id: this.props.id,\r\n                value: rect.top + ((i === yLineRef.length - 1)? 1: 0),\r\n                p1: rect.left,\r\n                p2: rect.left + rect.width\r\n            });\r\n        }\r\n\r\n        return [snaps];\r\n    };\r\n\r\n    createChildByData = (childData, dynamicComponents, newId, onChildMounted, fixed) => {\r\n        if (this.callOverride(\"addToSnap\", childData, dynamicComponents, newId, onChildMounted, fixed))\r\n            return;\r\n\r\n        let tagName = childData.tagName;\r\n        let props = childData.props;\r\n\r\n        let griddata = initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (newId)\r\n            props.id = newId;\r\n        if (!props.id)\r\n            props.id = this.props.idMan.getId(tagName);\r\n        else\r\n            props.id = this.props.idMan.getId(tagName, props.id);\r\n\r\n        griddata.id = props.id;\r\n        if (!props.griddata || newId)\r\n            props.griddata = griddata;\r\n\r\n        this.allChildRefs[props.id] = React.createRef();\r\n\r\n        if (this.getFromTempData(\"isFixed\", props.griddata))\r\n            fixed = true;\r\n\r\n        let AGLProps = {};\r\n        if (tagName[0] == tagName[0].toUpperCase()) {\r\n            console.log(\"createChildByData portalNodeId\",props.portalNodeId, (fixed && `${this.props.id}_fixed_holder`))\r\n            AGLProps = {\r\n                aglRef: this.allChildRefs[props.id],\r\n                viewRef: this.props.viewRef,\r\n                breakpointmanager: this.props.breakpointmanager,\r\n                undoredo: this.props.undoredo,\r\n                dragdrop: this.props.dragdrop,\r\n                select: this.props.select,\r\n                snap: this.props.snap,\r\n                idMan: this.props.idMan,\r\n                input: this.props.input,\r\n                copyMan: this.props.copyMan,\r\n                window: this.props.window,\r\n                document: this.props.document,\r\n                editorData: this.props.editorData,\r\n                anchorMan: this.props.anchorMan,\r\n                gridLine: this.props.gridLine,\r\n                gridEditorRef: this.props.gridEditorRef,\r\n                parent: this,\r\n                editor: this.props.editor,\r\n                onChildMounted: onChildMounted,\r\n                portalNodeId: (fixed && `${this.props.id}_fixed_holder`),\r\n                ...this.getAllChildOverrideProps()\r\n            };\r\n        }\r\n\r\n        let component = tagName[0] === tagName[0].toUpperCase()? dynamicComponents[tagName]: tagName;\r\n\r\n        if (tagName[0] !== tagName[0].toUpperCase())\r\n            delete props.griddata;\r\n\r\n        return React.createElement(\r\n            component,\r\n            {\r\n                ...props,\r\n                key: props.id,\r\n                ...AGLProps,\r\n            }\r\n        );\r\n    };\r\n\r\n    getSize = (updateState = true, force, fullForce) => {\r\n        if (!this.rootDivRef.current)\r\n            return;\r\n\r\n        if (this.tempSize && !force)\r\n            return cloneObject(this.tempSize);\r\n\r\n        let rect = fullForce ? this.rootDivRef.current.getBoundingClientRect() :\r\n            getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n\r\n        let clientWidth = rect.width;\r\n        let clientHeight = rect.height;\r\n        let scrollTop = 0;\r\n        let scrollLeft = 0;\r\n        let scrollWidth = rect.width;\r\n        let scrollHeight = rect.height;\r\n        if (this.overflowRef.current) {\r\n            clientWidth = fullForce ? this.overflowRef.current.clientWidth :\r\n                getCachedClientWidth(this.props.id, this.overflowRef.current);\r\n            clientHeight = fullForce ? this.overflowRef.current.clientHeight :\r\n                getCachedClientHeight(this.props.id, this.overflowRef.current);\r\n            scrollTop = fullForce ? this.overflowRef.current.scrollTop :\r\n                getCachedScrollTop(this.props.id, this.overflowRef.current);\r\n            scrollLeft = fullForce ? this.overflowRef.current.scrollLeft :\r\n                getCachedScrollLeft(this.props.id, this.overflowRef.current);\r\n            scrollWidth = fullForce ? this.overflowRef.current.scrollWidth :\r\n                getCachedScrollWidth(this.props.id, this.overflowRef.current);\r\n            scrollHeight = fullForce ? this.overflowRef.current.scrollHeight :\r\n                getCachedScrollHeight(this.props.id, this.overflowRef.current);\r\n        }\r\n\r\n        let padding = cloneObject(this.getCompositeFromData(\"padding\")) || {};\r\n        ['top', 'left', 'bottom', 'right'].forEach(key => {\r\n            padding[key] = getPxValueFromCSSValue(padding[key], 0, this) || 0;\r\n        });\r\n        let temp = {\r\n            x: rect.width,\r\n            y: rect.height,\r\n            clientWidth: clientWidth,\r\n            clientHeight: clientHeight,\r\n            scrollTop: scrollTop,\r\n            scrollLeft: scrollLeft,\r\n            scrollWidth: scrollWidth,\r\n            scrollHeight: scrollHeight,\r\n            top: rect.top,\r\n            left: rect.left,\r\n            bottom: rect.bottom,\r\n            right: rect.right,\r\n            width: rect.width,\r\n            height: rect.height,\r\n            widthMinusPadding: rect.width - (padding.left||0)- (padding.right||0),\r\n            heightMinusPadding: rect.height - (padding.top||0)- (padding.bottom||0),\r\n            scrollWidthMinusPadding: scrollWidth - (padding.left||0)- (padding.right||0),\r\n            scrollHeightMinusPadding: scrollHeight - (padding.top||0)- (padding.bottom||0)\r\n        };\r\n\r\n        this.tempSize = temp;\r\n\r\n        if (fullForce) {\r\n            addToCache(this.props.id, this.tempSize, \"boundingRects\");\r\n            addToCache(this.props.id, clientWidth, \"clientsWidth\");\r\n            addToCache(this.props.id, clientHeight, \"clientsHeight\");\r\n            addToCache(this.props.id, scrollTop, \"scrollsTop\");\r\n            addToCache(this.props.id, scrollLeft, \"scrollsLeft\");\r\n            addToCache(this.props.id, scrollWidth, \"scrollsWidth\");\r\n            addToCache(this.props.id, scrollHeight, \"scrollsHeight\");\r\n        }\r\n\r\n        return temp;\r\n    };\r\n\r\n    getBoundarySize = (force) => {\r\n        if (this.transformRef.current) {\r\n            if (!force)\r\n                return getCachedBoundingRect(`${this.props.id}_transform`, this.transformRef.current);\r\n            else\r\n                return this.transformRef.current.getBoundingClientRect();\r\n        }\r\n    };\r\n\r\n    invalidateSize = (self = true, updateParent = true, updateChildren = true, sourceId,\r\n                      addToSnap = false) => {\r\n        if (this.callOverride(\"invalidateSize\", self, updateParent, updateChildren, sourceId))\r\n            return;\r\n\r\n        if (addToSnap)\r\n            this.addToSnap();\r\n\r\n        if (!sourceId)\r\n            sourceId = this.props.id;\r\n\r\n        if (self)\r\n            delete this.tempSize;\r\n\r\n        if (updateChildren) {\r\n            Object.values(this.allChildRefs).forEach(childRef => {\r\n                if (childRef && childRef.current && sourceId !== childRef.current.props.id) {\r\n                    childRef.current.invalidateSize(true, false, true, sourceId, addToSnap);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (updateParent) {\r\n            this.getParentsId().forEach(id => {\r\n                let parent = this.props.idMan.getItem(id);\r\n                if (parent && parent.mounted && sourceId !== parent.props.id) {\r\n                    parent.invalidateSize(true, false, false, sourceId, addToSnap);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onWindowSizeChange = () => {\r\n        this.addToSnap();\r\n        this.prepareRects();\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onWindowSizeChange();\r\n            }\r\n        });\r\n    };\r\n\r\n    getRenderChildData = (id) => {\r\n        return this.children[id];\r\n    };\r\n\r\n    arrangeIndex = (child, type) => {\r\n        let childData = this.getFromTempData(\"savedChildren\")[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let indexData = this.getNextIndexData(currentIndex);\r\n        switch (type) {\r\n            case \"forward\":\r\n                childData.zIndex = indexData.nextZIndex;\r\n                if (indexData.nextChild) {\r\n                    indexData.nextChild.zIndex = currentIndex;\r\n                    this.getRenderChildData(indexData.nextChild.props.id).zIndex = currentIndex;\r\n                }\r\n                break;\r\n            case \"backward\":\r\n                childData.zIndex = indexData.prevZIndex;\r\n                if (indexData.prevChild) {\r\n                    indexData.prevChild.zIndex = currentIndex;\r\n                    this.getRenderChildData(indexData.prevChild.props.id).zIndex = currentIndex;\r\n                }\r\n                break;\r\n            case \"front\":\r\n                childData.zIndex = indexData.lastZIndex + 1;\r\n                break;\r\n            case \"back\":\r\n                childData.zIndex = indexData.firstZIndex - 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    changeIndex = (child, index) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (currentIndex === index)\r\n            return;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let findIndex = (zIndex) => {\r\n            return allChildData.findIndex(a => {\r\n                return a.zIndex === zIndex;\r\n            });\r\n        };\r\n\r\n        let change = currentIndex < index ? -1 : 1;\r\n\r\n        if (findIndex(index)) // if false, means index is free to set\r\n        {\r\n            let startIndex = currentIndex < index ? findIndex(currentIndex) || 0 : findIndex(index);\r\n            let lastIndex = currentIndex < index ? findIndex(index) : findIndex(currentIndex) || 0 ;\r\n\r\n            for (let i = startIndex; i < lastIndex + 1; i++) {\r\n                let testChildData = allChildData[i];\r\n                testChildData.zIndex += change;\r\n                this.getRenderChildData(testChildData.props.id).zIndex = testChildData.zIndex;\r\n            }\r\n        }\r\n\r\n        childData.zIndex = index;\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    setChildZIndex = (childId, zIndex) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[childId];\r\n        childData.zIndex = zIndex;\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n    };\r\n\r\n    getNextIndexData = (currentIndex) => {\r\n        let children = Object.values(this.getFromTempData(\"savedChildren\") || {});\r\n        children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex) {\r\n                return 1;\r\n            } else if (a.zIndex === b.zIndex) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n        let result = {};\r\n        for (let i = 0; i < children.length; i++){\r\n            let child = children[i];\r\n\r\n            let childZIndex = child.zIndex;\r\n\r\n            if (i === 0) {\r\n                result.firstZIndex = childZIndex;\r\n            }\r\n\r\n            if (i === children.length - 1) {\r\n                result.lastZIndex = childZIndex;\r\n            }\r\n\r\n            if (result.nextChild === undefined && childZIndex > currentIndex){\r\n                result.nextChild = child;\r\n                result.nextZIndex = childZIndex;\r\n                continue;\r\n            }\r\n\r\n            if (childZIndex < currentIndex){\r\n                result.prevChild = child;\r\n                result.prevZIndex = childZIndex;\r\n                // continue;\r\n            }\r\n        }\r\n\r\n        if (!result.nextChild)\r\n            result.nextZIndex = result.lastZIndex + 1;\r\n        if (!result.prevChild)\r\n            result.prevZIndex = result.firstZIndex - 1;\r\n\r\n        if (result.lastZIndex === undefined)\r\n            result.lastZIndex = 0;\r\n\r\n        return result;\r\n    };\r\n\r\n    updateLayout = (callback) => {\r\n        if (this.callOverride(\"updateLayout\", callback))\r\n            return;\r\n\r\n        this.setState({reload: true}, callback);\r\n    };\r\n\r\n    isPointInclude = (x, y, forceCalculate) => {\r\n        let rect = this.getSize(false, forceCalculate);\r\n        return x >= rect.left && x <= rect.left + rect.width &&\r\n            y >= rect.top && y <= rect.top + rect.height;\r\n    };\r\n\r\n    addChild = (childElement, newId, newProps, callback, onChildMounted, fixed, keepChildren) => {\r\n        if (this.callOverride(\"addChild\", childElement, newId, newProps, callback, onChildMounted, fixed))\r\n            return;\r\n\r\n        if (!childElement.props.tagName && !childElement.type) {\r\n            throw new Error(\"childElement must pass tagName prop to AGL or be primitive type\");\r\n        }\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let props = newId? newProps: {...childElement.props};\r\n        let createdChild = this.createChildByData({\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props, keepChildren)\r\n        }, DynamicComponents, newId, onChildMounted, fixed);\r\n        this.children[props.id] = {\r\n            child: createdChild,\r\n            zIndex: lastZIndex + 1\r\n        };\r\n\r\n        this.props.griddata.savedChildren[props.id] = {\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props),\r\n            zIndex: this.children[props.id].zIndex\r\n        };\r\n\r\n        this.updateLayout(callback);\r\n        this.props.onChildAdd && this.props.onChildAdd();\r\n    };\r\n\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.callOverride(\"onBreakpointChange\", width, newBreakpointName, devicePixelRatio))\r\n            return;\r\n\r\n        let style = this.getCompositeFromData(\"style\");\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let transform = this.getCompositeFromData(\"transform\");\r\n        this.setStyle(style, undefined, undefined, true);\r\n        this.setGridItemStyle(gridItemStyle, undefined, true);\r\n        this.setTransformStyle(transform, undefined, undefined, true);\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n            }\r\n        });\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    delete = (fromUndoRedo) => {\r\n        if (this.callOverride(\"delete\"))\r\n            return;\r\n\r\n        if (!this.props.parent)\r\n            return;\r\n\r\n        if (this.props.onItemPreDelete) {\r\n            let allow = this.props.onItemPreDelete(this);\r\n            if (!allow)\r\n                return;\r\n        }\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let childData = cloneObject(this.props.parent.getChildData(itemId));\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            }, (idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true);\r\n            });\r\n        }\r\n\r\n        this.clearItem();\r\n\r\n        this.props.parent.removeChildElement(this);\r\n\r\n        this.props.select.clearMiniMenu();\r\n    };\r\n\r\n    getChildData = (childId) => {\r\n        return this.props.griddata.savedChildren[childId];\r\n    };\r\n\r\n    getOverrideProp = (funcName) => {\r\n        let key = Object.keys(this.props).find(key => {\r\n            return key === `${funcName}Override`;\r\n        });\r\n\r\n        return this.props[key];\r\n    };\r\n\r\n    getAllOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"Override\")) {\r\n                result[key] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    getAllChildOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"ChildOverride\")) {\r\n                result[key.replace(\"ChildOverride\", \"Override\")] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    clearItem = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        this.props.gridLine.removeGridLine(this.props.id);\r\n        this.props.snap.removeSnap(this.props.id);\r\n        this.state.selected && this.props.select.updateResizePanes();\r\n        this.state.selected && this.props.select.updateHelpSizeLines();\r\n        this.state.selected && this.props.select.setInspector();\r\n        if (this.state.selected)\r\n            this.props.select.selectedItem = false;\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.clearItem();\r\n            }\r\n        });\r\n    };\r\n\r\n    getClearProps = (props, keepChildren) => {\r\n        delete props.breakpointmanager;\r\n        delete props.undoredo;\r\n        delete props.dragdrop;\r\n        delete props.select;\r\n        delete props.editor;\r\n        delete props.snap;\r\n        delete props.idMan;\r\n        delete props.input;\r\n        delete props.copyMan;\r\n        delete props.anchorMan;\r\n        delete props.aglRef;\r\n        delete props.parent;\r\n        delete props.window;\r\n        delete props.document;\r\n        delete props.viewRef;\r\n        delete props.aglComponent;\r\n        if (!keepChildren)\r\n            delete props.children;\r\n        delete props.allChildRefs;\r\n        delete props.gridLine;\r\n        delete props.page;\r\n        delete props.gridEditorRef;\r\n        delete props.onChildMounted;\r\n\r\n        Object.keys(this.getAllOverrideProps(props)).forEach(key => {\r\n            delete props[key];\r\n        });\r\n\r\n        Object.keys(props).forEach(key => {\r\n            if (typeof props[key] === \"function\")\r\n                delete props[key];\r\n        });\r\n\r\n        return props;\r\n    };\r\n\r\n    removeChildElement = (childElement, callback) => {\r\n        if (this.hasOverride(\"removeChildElement\"))\r\n            return this.callOverride(\"removeChildElement\", childElement);\r\n\r\n        delete this.children[childElement.props.id];\r\n        delete this.allChildRefs[childElement.props.id];\r\n        delete this.props.griddata.savedChildren[childElement.props.id];\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n            this.updateLayout(callback);\r\n        }, 0);\r\n    };\r\n\r\n    // Can be remove carefully\r\n    hide = () => {\r\n        this.setState({hide: true});\r\n    };\r\n\r\n    // Can be remove carefully\r\n    show = () => {\r\n        this.setState({hide: false});\r\n    };\r\n\r\n    onMouseOver = (e, fromEnter) => {\r\n        if (!this.props.dragdrop.getDragging()) {\r\n            e.stopPropagation();\r\n\r\n            // if (this.getFromTempData(\"selected\"))\r\n            //     return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            this.setMouseOverForNonDragging(this);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n        } else {\r\n            if (this.props.isPage)\r\n                return;\r\n\r\n            if (this.props.dragdrop.getDragging().props.id === this.props.id)\r\n                return;\r\n\r\n            e.stopPropagation();\r\n\r\n            let rect = getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n            if (e.clientX < rect.x - 1 || e.clientX > (rect.x + rect.width) ||\r\n                e.clientY < rect.y - 1 || e.clientY > (rect.y + rect.height))\r\n                return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n\r\n            this.setMouseOver(this, {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            }, (draggingItem, mouseOver) => {\r\n                // on new parent state changed\r\n                draggingItem.toggleHelpLines(this);\r\n            });\r\n        }\r\n    };\r\n\r\n    setMouseOverForNonDragging = () => {\r\n        if (this.hasOverride(\"setMouseOverForNonDragging\"))\r\n            return this.callOverride(\"setMouseOverForNonDragging\");\r\n\r\n        this.props.dragdrop.setMouseOverForNonDragging(this);\r\n    };\r\n\r\n    setItemHover = (hover) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        if (hover)\r\n            this.props.select.updateHover(this, this.getSize(false));\r\n        else\r\n            this.props.select.updateHover(this, undefined, true);\r\n    };\r\n\r\n    onMouseEnter = (e) => {\r\n        this.onMouseOver(e, true);\r\n    };\r\n\r\n    onMouseOut = (e, outAllParent) => {\r\n        if (outAllParent && this.props.parent && this.props.parent.onMouseOut)\r\n            this.props.parent.onMouseOut(e);\r\n\r\n        this.setItemHover(false);\r\n    };\r\n\r\n    prepareRects = (forceRect, forceGridLines, callback, gridType) => {\r\n        if (this.hasOverride(\"prepareRects\"))\r\n            return this.callOverride(\"prepareRects\", forceRect, forceGridLines);\r\n\r\n        let rect = this.getSize(false, forceRect);\r\n\r\n        if (forceGridLines || !this.props.gridLine.isPrepared(this.props.id)) {\r\n            this.isEditor() && this.props.gridLine.prepareRects(this.props.id);\r\n        }\r\n\r\n        return rect;\r\n    };\r\n\r\n    onChildDrop = (child, newId, fixed, onNewChildMounted) => {\r\n        if (this.callOverride(\"onChildDrop\", child, newId, fixed, onNewChildMounted))\r\n            return;\r\n\r\n        let childRect = child.getSize(false);\r\n        let thisRect = this.getSize(false, true);\r\n\r\n        let calcResult, gridItemStyle, coordinates, newProps;\r\n\r\n        if (!newId) {\r\n            let relativeY = childRect.top - thisRect.top;\r\n            // if (fixed) {\r\n            //     // relativeY = childRect.top - this.props.breakpointmanager.getWindowHeight() / 8;\r\n            //     relativeY = childRect.top - thisRect.top;\r\n            // }\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                childRect.left - thisRect.left, relativeY, this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n        else\r\n        {\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                thisRect.width / 2 - childRect.width / 2,\r\n                thisRect.height / 2 - childRect.height / 2,\r\n                this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n\r\n        gridItemStyle = calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n        if (!newId) {\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                child.setProps(\"width\", childRect.width, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                child.setProps(\"width\", \"auto\", undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                child.setProps(\"height\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n                child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        } else {\r\n            newProps = {...child.props};\r\n            newProps.griddata = cloneObject(newProps.griddata);\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, newProps.griddata, undefined,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            this.setTempData(\"selected\", true, newProps.griddata);\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                this.setProps(\"width\", childRect.width, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                this.setProps(\"width\", \"auto\", undefined, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                this.setProps(\"height\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        }\r\n\r\n        child.clearFromAllBp(\"style\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n        child.clearFromAllBp(\"gridItemStyle\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.addChild(child, newId, newProps, () => {\r\n            let newChild = this.allChildRefs[newId? newProps.id: child.props.id].current;\r\n            newChild.setGridItemStyle(gridItemStyle,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            if (!newId) {\r\n                newChild.state.selected && newChild.toggleHelpLines(this);\r\n            }\r\n\r\n        }, (agl) => {\r\n            window.requestAnimationFrame(() => {\r\n                this.invalidateSize(true, true, true);\r\n                window.requestAnimationFrame(() => {\r\n                    this.props.select.onScrollItem();\r\n                });\r\n            });\r\n            if (onNewChildMounted)\r\n                onNewChildMounted(agl);\r\n        }, fixed, undefined);\r\n    };\r\n\r\n    onChildLeave = (child, callback) => {\r\n        if (this.hasOverride(\"onChildLeave\"))\r\n            return this.callOverride(\"onChildLeave\", child);\r\n\r\n        this.removeChildElement(child, callback);\r\n        child.removeIdAndChildrenId();\r\n    };\r\n\r\n    removeIdAndChildrenId = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.removeIdAndChildrenId();\r\n            }\r\n        });\r\n    };\r\n\r\n    nonePointerEventForChildren = (parentDragging) => {\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onParentDragging(parentDragging);\r\n            }\r\n        });\r\n    };\r\n\r\n    onParentDragging = (parentDragging) => {\r\n        this.nonePointerEventForChildren(parentDragging);\r\n        if (!parentDragging) {\r\n            this.setRuntimeStyle();\r\n            return;\r\n        }\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.pointerEvents = \"none\";\r\n        this.setRuntimeStyle(runtimeStyle);\r\n    };\r\n\r\n    onDragStart = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDragStart\", e, group, callGroup))\r\n            return;\r\n\r\n        if (this.getFromTempData(\"dontMove\") || this.resizing || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        if (!group)\r\n            this.props.dragdrop.setDragging(this);\r\n\r\n        this.nonePointerEventForChildren(true);\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        if (!this.moveWithMouse) {\r\n            runtimeStyle.top = thisRect.top;\r\n            runtimeStyle.left = thisRect.left;\r\n        } else {\r\n            runtimeStyle.top = e.clientY - thisRect.height / 2;\r\n            runtimeStyle.left = e.clientX - thisRect.width / 2;\r\n        }\r\n\r\n        this.dragData = {\r\n            firstPos: {\r\n                top: runtimeStyle.top,\r\n                left: runtimeStyle.left\r\n            },\r\n            firstBoundaryPos: this.getBoundarySize() && {\r\n                top: this.moveWithMouse? e.clientX - thisRect.width / 2 : this.getBoundarySize().top,\r\n                left: this.moveWithMouse? e.clientY - thisRect.height / 2 : this.getBoundarySize().left\r\n            },\r\n            x: runtimeStyle.left,\r\n            y: runtimeStyle.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n        this.draggingStart = true;\r\n        this.setDraggingState(true, true, undefined, runtimeStyle);\r\n\r\n        this.props.select.updateMenu();\r\n        this.props.select.clearMiniMenu();\r\n\r\n        if (this.props.dragdrop.getMouseOverForNonDragging()) {\r\n            this.props.dragdrop.getMouseOverForNonDragging().onMouseOver(e);\r\n        }\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStart(e, this);\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.hasOverride(\"setMouseOver\"))\r\n            return this.callOverride(\"setMouseOver\", item, positionData, callback);\r\n\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    onDrag = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDrag\", e, group, callGroup))\r\n            return;\r\n\r\n        if (!this.props.parent.children[this.props.id]) {\r\n            return;\r\n        }\r\n        if (this.resizing || !this.state.draggingStart) {\r\n            if (this.props.dragdrop.getDragging()) {\r\n                this.props.dragdrop.setDragging();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.dragData.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.dragData.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.top = this.dragData.y;\r\n        runtimeStyle.left = this.dragData.x;\r\n\r\n        // For snaps\r\n        let boundarySize = this.getBoundarySize();\r\n        if (boundarySize)\r\n            boundarySize = {\r\n                top: this.dragData.firstBoundaryPos.top + (this.dragData.y - this.dragData.firstPos.top),\r\n                left: this.dragData.firstBoundaryPos.left + (this.dragData.x - this.dragData.firstPos.left),\r\n                width: boundarySize.width,\r\n                height: boundarySize.height\r\n            };\r\n        else\r\n            boundarySize = runtimeStyle;\r\n\r\n        if (!isFixed(this) && !group)\r\n            this.checkSnapOnDrag(runtimeStyle, boundarySize);\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.props.select.updateResizePanes(this, runtimeStyle);\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                runtimeStyle.top,\r\n                runtimeStyle.left,\r\n                window.innerHeight - runtimeStyle.top - runtimeStyle.height,\r\n                window.innerWidth - runtimeStyle.left - runtimeStyle.width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                cloneObject(runtimeStyle), this.state.dragging);\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDrag(e, this);\r\n    };\r\n\r\n    updateGridLines = (top, left, bottom, right, gridType) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        let grid = this.getFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top,\r\n                left,\r\n                bottom,\r\n                right,\r\n            }\r\n        )\r\n    };\r\n\r\n    onDragStop = (e, group, callGroup) => {\r\n        if (this.hasOverride(\"onDragStop\"))\r\n            return this.callOverride(\"onDragStop\", e, group, callGroup);\r\n\r\n        if (this.resizing || !this.state.draggingStart || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStop(e, this);\r\n\r\n        if (group)\r\n            // this.props.parent.prepareRects(true);\r\n            this.props.parent.prepareRects();\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n\r\n        this.props.snap.drawSnap();\r\n        this.getSize(true, true);\r\n        if (group || !this.props.dragdrop.setDraggingStop()){\r\n            let parentRect = this.props.parent.getSize(false);\r\n            this.setPosition(\r\n                group,\r\n                left - parentRect.left,\r\n                top - parentRect.top,\r\n                this.dragData.firstPos.left - parentRect.left,\r\n                this.dragData.firstPos.top - parentRect.top, width, height, parentRect);\r\n            return;\r\n        } else if (!group) {\r\n            this.dropped = true;\r\n        }\r\n\r\n        // this.setState({dragging: false, draggingStart: false});\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                top, left,\r\n                window.innerHeight - top - height,\r\n                window.innerWidth - left - width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateMiniMenu();\r\n    };\r\n\r\n    setPosition = (group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                   width, height, parentRect, fromUndoRedo) => {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let redoData = [group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect];\r\n            let undoData = [group, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                width, height, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setPosition\"))\r\n            return this.callOverride(\"setPosition\",\r\n                group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect, fromUndoRedo);\r\n\r\n        let {gridItemStyle, coordinates} = this.calculateGridItem(relativeX, relativeY, this.props.parent,\r\n            width, height, parentRect);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\"){\r\n            this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n        } else {\r\n            this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n        }\r\n        if (this.getCompositeFromData(\"style\").height === \"auto\")\r\n            this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        else {\r\n            this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n            this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        }\r\n\r\n        this.setGridItemStyle(gridItemStyle);\r\n\r\n        this.nonePointerEventForChildren(false);\r\n        this.setRuntimeStyle();\r\n        // this.setState({dragging: false, draggingStart: false}, () => {\r\n        //     this.addToSnap();\r\n        // });\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                {top, left, width, height}, this.state.dragging);\r\n\r\n        this.dropped = false;\r\n\r\n        // this.props.select.updateSize();\r\n        // this.props.select.updateResizePanes(this, {top, left, width, height});\r\n        // this.props.select.updateMiniMenu();\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.invalidateSize(false, true, true);\r\n    };\r\n\r\n    setDraggingState = (dragging, draggingStart, callback, rect) => {\r\n        let fakeStyle = cloneObject({\r\n            ...this.getCompositeFromData(\"style\"),\r\n            ...this.getCompositeFromData(\"gridItemStyle\"),\r\n        });\r\n        this.setState({dragging, draggingStart, fakeStyle}, callback);\r\n    };\r\n\r\n    checkSnapOnDrag = (runtimeStyle, boundarySize) => {\r\n        if (this.callOverride(\"checkSnapOnDrag\", runtimeStyle, boundarySize))\r\n            return;\r\n\r\n        let snapDelta1 = this.getSnapDelta(\r\n            boundarySize.top, boundarySize.left);\r\n        let snapDelta2 = this.getSnapDelta(\r\n            boundarySize.top + boundarySize.height/2, boundarySize.left + boundarySize.width/2);\r\n        let snapDelta3 = this.getSnapDelta(\r\n            boundarySize.top + boundarySize.height, boundarySize.left + boundarySize.width);\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2.snapV? snapDelta2.deltaX:\r\n                snapDelta1.snapV? snapDelta1.deltaX:\r\n                    snapDelta3.snapV? snapDelta3.deltaX: 0,\r\n            deltaY: snapDelta2.snapH? snapDelta2.deltaY:\r\n                snapDelta1.snapH? snapDelta1.deltaY:\r\n                    snapDelta3.snapH? snapDelta3.deltaY: 0,\r\n            snapH: (snapDelta2.snapH || snapDelta1.snapH) || snapDelta3.snapH,\r\n            snapV: (snapDelta2.snapV || snapDelta1.snapV) || snapDelta3.snapV\r\n        };\r\n\r\n        runtimeStyle.left += snapDelta.deltaX;\r\n        runtimeStyle.top += snapDelta.deltaY;\r\n        if (boundarySize !== runtimeStyle) {\r\n            boundarySize.left += snapDelta.deltaX;\r\n            boundarySize.top += snapDelta.deltaY;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: boundarySize.left,\r\n            p2: boundarySize.left + boundarySize.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: boundarySize.top,\r\n            p2: boundarySize.top + boundarySize.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    getSnapDelta = (top, left) => {\r\n        let parentGridLines = [];\r\n        if (this.props.parent) {\r\n            if (this.resizing) {\r\n                parentGridLines = this.props.parent.getGridLineSnaps();\r\n            } else {\r\n                // dragging\r\n                if (this.props.dragdrop.mouseOver &&\r\n                    this.props.gridLine.hasGridLine(this.props.dragdrop.mouseOver.props.id))\r\n                    parentGridLines = this.props.dragdrop.mouseOver &&\r\n                        this.props.dragdrop.mouseOver.getGridLineSnaps();\r\n            }\r\n        }\r\n\r\n        let {snapH, snapV} =\r\n            this.props.snap.checkSnap(top, left, this.props.id, parentGridLines);\r\n\r\n        let deltaX = 0;\r\n        let deltaY = 0;\r\n        if (snapH) {\r\n            deltaY = snapH.value - top;\r\n        }\r\n        if (snapV) {\r\n            deltaX = snapV.value - left;\r\n        }\r\n\r\n        return {\r\n            deltaX, deltaY, snapH, snapV\r\n        }\r\n    };\r\n\r\n    setDocks = (top, left, bottom, right, auto, breakpointName, dontCalculate) => {\r\n        this.setDataInBreakpoint(\"docks\", {top, left, bottom, right}, undefined, breakpointName);\r\n        this.setTempData(\"autoDock\", auto);\r\n\r\n        if (!this.props.parent || dontCalculate)\r\n            return;\r\n\r\n        this.props.parent.prepareRects();\r\n        let thisRect = this.getSize(false);\r\n        let parentRect = this.props.parent.getSize(false);\r\n        let {gridItemStyle} =\r\n            this.calculateGridItem(\r\n                thisRect.left - parentRect.left,\r\n                thisRect.top - parentRect.top,\r\n                this.props.parent,\r\n                thisRect.width,\r\n                thisRect.height,\r\n                parentRect\r\n            );\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width === \"auto\")\r\n        {\r\n            this.setStyleParam(\"width\", `${this.getSize(false).width}px`, undefined, undefined, true);\r\n        }\r\n        else if (gridItemStyle.justifySelf === \"stretch\")\r\n        {\r\n            this.setStyleParam(\"width\", \"auto\", undefined, undefined, true);\r\n        }\r\n    };\r\n\r\n    getDocks = () => {\r\n        return this.getFromData(\"docks\");\r\n    };\r\n\r\n    getBaseDocks = () => {\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return {\r\n            top: gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\",\r\n            bottom: gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\",\r\n            left: gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\",\r\n            right: gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\",\r\n        }\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        return this.props.select.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    calculateGridItem = (relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateGridItem\", relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = this.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let gridArea, coordinates;\r\n        if (isFixed(this)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.height,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.width\r\n            }\r\n        } else {\r\n            let result = this.calculateGridArea(\r\n                parentRect.left + relativeX,\r\n                parentRect.top + relativeY,\r\n                width,\r\n                height,\r\n                parent,\r\n                parentRect\r\n            );\r\n            gridArea = result.gridArea;\r\n            coordinates = result.coordinates;\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        this.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let oldGridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let gridItemStyle = cloneObject(oldGridItemStyle);\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(this);\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        let cx2IsLastLine = gridArea.x2 === xLineRef.length || isFixed(this);\r\n\r\n        let widthForPercent = coordinates.cx2 - coordinates.cx1/* + (cx2IsLastLine?1:0)*/;\r\n        let heightForPercent = coordinates.cy2 - coordinates.cy1/* + (cy2IsLastLine?1:0)*/;\r\n\r\n        let autoDock = this.getFromTempData(\"autoDock\");\r\n        let docks = this.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2) && relativeY >= 0) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                widthForPercent,\r\n                \"px\");\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                `${(relativeY - coordinates.cy1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginTop) || \"px\");\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginLeft) || \"%\");\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginBottom) || \"px\");\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginRight) || \"%\");\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        gridItemStyle.widthForPercent = widthForPercent;\r\n        gridItemStyle.heightForPercent = heightForPercent;\r\n\r\n        /*if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // this is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n            `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    getPxOrPcOrValue = (value, parentValue, unit) => {\r\n        if (unit === \"px\") {\r\n            return `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            return `${parseFloat(value) / parentValue * 100}%`;\r\n        } else {\r\n            return value\r\n        }\r\n    };\r\n\r\n    calculateChildGridItem = (child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateChildGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateChildGridItem\",child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        if (isFixed(child)) {\r\n            if (relativeY < 0) relativeY = 0;\r\n            if (relativeY > parentRect.scrollHeightMinusPadding - height)\r\n                relativeY = parentRect.scrollHeightMinusPadding - height;\r\n            if (relativeX < 0) relativeX = 0;\r\n            if (relativeX > parentRect.scrollWidthMinusPadding - width)\r\n                relativeX = parentRect.scrollWidthMinusPadding - width;\r\n        }\r\n\r\n        let gridArea, coordinates;\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.height,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.width\r\n            }\r\n        } else {\r\n            let result = this.calculateGridArea(\r\n                parentRect.left + relativeX,\r\n                parentRect.top + relativeY,\r\n                width,\r\n                height,\r\n                parent,\r\n                parentRect\r\n            );\r\n            gridArea = result.gridArea;\r\n            coordinates = result.coordinates;\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let oldGridItemStyle = child.getCompositeFromData(\"gridItemStyle\");\r\n        let gridItemStyle = cloneObject(oldGridItemStyle);\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        let cx2IsLastLine = gridArea.x2 === xLineRef.length || isFixed(child);\r\n\r\n        let widthForPercent = coordinates.cx2 - coordinates.cx1 + (cx2IsLastLine?1:0);\r\n        let heightForPercent = coordinates.cy2 - coordinates.cy1 + (cy2IsLastLine?1:0);\r\n\r\n        let autoDock = child.getFromTempData(\"autoDock\");\r\n        let docks = child.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2) && relativeY >= 0) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                widthForPercent,\r\n                \"px\");\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeY - coordinates.cy1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginTop) || \"px\");\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginLeft) || \"%\");\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginBottom) || \"px\");\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginRight) || \"%\");\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        gridItemStyle.widthForPercent = widthForPercent;\r\n        gridItemStyle.heightForPercent = heightForPercent;\r\n\r\n        /*\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n                `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    coordinateToRelative = (coordinates, parentRect) => {\r\n        coordinates.cx1 -= parentRect.left;\r\n        coordinates.cx2 -= parentRect.left;\r\n        coordinates.cy1 -= parentRect.top;\r\n        coordinates.cy2 -= parentRect.top;\r\n    };\r\n\r\n    coordinateToAbsolute = (coordinates, parentRect) => {\r\n        coordinates.cx1 += parentRect.left;\r\n        coordinates.cx2 += parentRect.left;\r\n        coordinates.cy1 += parentRect.top;\r\n        coordinates.cy2 += parentRect.top;\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        } else {\r\n            return \"px\";\r\n        }\r\n    };\r\n\r\n    getTopLeft = (force) => {\r\n        let size = this.getSize(false, force);\r\n        return {\r\n            top: size.top,\r\n            left: size.left\r\n        }\r\n    };\r\n\r\n    pageResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n\r\n        this.resizing = true;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.width = this.getSize().x;\r\n        runtimeStyle.height = this.getSize().y;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstLeft: this.getSize().left,\r\n            top: this.getSize().top,\r\n            left: this.getSize().left\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        this.isEditor() && this.props.select.activateHover(false);\r\n\r\n        if (this.props.onPageResizeStart)\r\n            this.props.onPageResizeStart();\r\n\r\n        window.requestAnimationFrame(this.pageResizeCalculate);\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResizeStart\", e, dir, delta, group))\r\n            return;\r\n\r\n        if (this.resizing)\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        this.resizing = true;\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.maxWidth = \"unset\";\r\n        runtimeStyle.maxHeight = \"unset\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        runtimeStyle.top = thisRect.top;\r\n        runtimeStyle.left = thisRect.left;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstY: runtimeStyle.height,\r\n            firstTop: runtimeStyle.top,\r\n            firstLeft: runtimeStyle.left,\r\n            lastWidth: runtimeStyle.width,\r\n            lastHeight: runtimeStyle.height,\r\n            firstBoundaryWidth: this.getBoundarySize() && this.getBoundarySize().width,\r\n            firstBoundaryHeight: this.getBoundarySize() && this.getBoundarySize().height,\r\n            firstBoundaryTop: this.getBoundarySize() && this.getBoundarySize().top,\r\n            firstBoundaryLeft: this.getBoundarySize() && this.getBoundarySize().left\r\n        };\r\n\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        this.props.select.clearMiniMenu();\r\n        this.props.select.activateHover(false);\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    pageResize = (e, dir, delta) => {\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let deltaX = delta.x;\r\n        let minWidth = this.props.breakpointmanager.getMinWidth();\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= (-deltaX* 2 + minWidth))\r\n                deltaX = -(this.resizeData.firstX - minWidth) / 2;\r\n\r\n            runtimeStyle.width = this.resizeData.firstX + deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft - deltaX;\r\n            if (this.resizeData.firstLeft - deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= (deltaX * 2 + minWidth))\r\n                deltaX = (this.resizeData.firstX - minWidth) / 2;\r\n            runtimeStyle.width = this.resizeData.firstX - deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft + deltaX;\r\n            if (this.resizeData.firstLeft + deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n\r\n        this.updateGridLines(\r\n            this.resizeData.top,\r\n            this.resizeData.left,\r\n            window.innerHeight - this.resizeData.top - runtimeStyle.height,\r\n            window.innerWidth - this.resizeData.left - runtimeStyle.width,\r\n            \"A\"\r\n        );\r\n\r\n        this.updatePageAdjustments();\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n        };\r\n    };\r\n\r\n    updatePageAdjustments = () => {\r\n        this.backContainerRef.current.updateAdjustments();\r\n    };\r\n\r\n    pageResizeCalculate = () => {\r\n        if (this.callOverride(\"pageResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.pageResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle} = this.resizeData.onResizeData;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        if (this.props.onPageResize) {\r\n            this.props.onPageResize(runtimeStyle.width, this);\r\n        }\r\n\r\n        window.requestAnimationFrame(this.pageResizeCalculate);\r\n    };\r\n\r\n    onResize = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResize\", e, dir, delta, group))\r\n            return;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let degree = (this.getCompositeFromData(\"transform\") || {}).rotateDegree || 0;\r\n\r\n        let finalDelta = getResizeDelta(degree, dir, delta);\r\n        runtimeStyle.left = this.resizeData.firstLeft + finalDelta.left;\r\n        runtimeStyle.top = this.resizeData.firstTop + finalDelta.top;\r\n        runtimeStyle.width = this.resizeData.firstX + finalDelta.width;\r\n        runtimeStyle.height = this.resizeData.firstY + finalDelta.height;\r\n\r\n        // For snaps\r\n        let boundarySize = this.getBoundarySize();\r\n\r\n        if (!group && !boundarySize)\r\n            this.checkSnapOnResize(runtimeStyle, dir, this.resizeData);\r\n        // this.checkSnapOnResize(rect, dir, this.resizeData);\r\n\r\n        let rect = {\r\n            top: runtimeStyle.top,\r\n            left: runtimeStyle.left,\r\n            width: runtimeStyle.width,\r\n            height: runtimeStyle.height\r\n        };\r\n\r\n        this.props.select.updateResizePanes(this, rect);\r\n\r\n        if (!group)\r\n            this.setResizeHelpData({\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                width: (dir.includes('w') || dir.includes('e')) && rect.width,\r\n                height: (dir.includes('n') || dir.includes('s')) && rect.height,\r\n            });\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                rect.top,\r\n                rect.left,\r\n                window.innerHeight - rect.top - rect.height,\r\n                window.innerWidth - rect.left - rect.width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n            rect, this.state.dragging);\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n        };\r\n    };\r\n\r\n    onResizeCalculate = () => {\r\n        if (this.callOverride(\"onResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.onResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle} = this.resizeData.onResizeData;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    setResizeHelpData = (resizeHelpData) => {\r\n        this.setState({resizeHelpData})\r\n    };\r\n\r\n    pageResizeStop = (e, dir, delta) => {\r\n        let {width, height} = this.state.runtimeStyle;\r\n        this.isEditor() && this.props.select.activateHover(true);\r\n        this.setPageSize(this.resizeData.top, this.resizeData.left, width, height);\r\n    };\r\n\r\n    setPageSize = (top, left, width, height) => {\r\n        this.setProps(\"width\", width, undefined, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.setRuntimeStyle();\r\n        this.invalidateSize();\r\n\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.resizing = false;\r\n\r\n        this.updateGridLines(\r\n            top, left,\r\n            window.innerHeight - top - height,\r\n            window.innerWidth - left - width,\r\n            \"A\"\r\n        );\r\n\r\n        this.isEditor() && this.props.select.onScrollItem(this);\r\n\r\n        this.prepareRects();\r\n\r\n        if (this.props.onPageResizeStop)\r\n            this.props.onPageResizeStop(width, this);\r\n\r\n        this.resizeData = undefined;\r\n    };\r\n\r\n    setPageSizeWidth = (width) => {\r\n        this.setProps(\"width\", width, undefined, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.invalidateSize();\r\n\r\n        this.addToSnap();\r\n\r\n        let rect = this.getSize(false);\r\n        let minWidth = this.props.breakpointmanager.getMinWidth();\r\n\r\n        if (width < minWidth)\r\n            width = minWidth;\r\n\r\n        let deltaX = width - rect.width;\r\n        let firstLeft = rect.left;\r\n        let left = firstLeft + deltaX;\r\n        if (left < 50)\r\n            left = 50;\r\n\r\n        let top = rect.top;\r\n\r\n        this.updateGridLines(\r\n            top, left,\r\n            window.innerHeight - top - rect.height,\r\n            window.innerWidth - left - width,\r\n            \"A\"\r\n        );\r\n\r\n        this.isEditor() && this.props.select.onScrollItem(this);\r\n\r\n        this.prepareRects();\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta, group) => {\r\n        if (this.hasOverride(\"onResizeStop\"))\r\n            return this.callOverride(\"onResizeStop\", e, dir, delta, group);\r\n        this.resizing = false;\r\n\r\n        if (this.props.onItemPreResizeStop) {\r\n            this.props.onItemPreResizeStop(this, e, dir, delta, this.state.runtimeStyle);\r\n        }\r\n        this.getSize(true, true);\r\n\r\n        if (group)\r\n            this.props.parent.prepareRects();\r\n        // this.props.parent.prepareRects(true);\r\n\r\n        let parentRect = this.props.parent.getSize(false);\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n        // width = this.resizeData.lastWidth;\r\n        // height = this.resizeData.lastHeight;\r\n        this.setSize(\r\n            dir, delta, group,\r\n            left - parentRect.left,\r\n            top - parentRect.top, width, height,\r\n            this.resizeData.firstLeft - parentRect.left,\r\n            this.resizeData.firstTop - parentRect.top,\r\n            this.resizeData.firstX,\r\n            this.resizeData.firstY, parentRect\r\n        );\r\n        this.props.select.updateMiniMenu();\r\n        this.props.select.activateHover(true);\r\n    };\r\n\r\n    setSize = (dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n               firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo) =>\r\n    {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let redoData = [dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect];\r\n            let undoData = [dir, delta, group, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, undefined,\r\n                undefined, undefined, undefined, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setSize\"))\r\n            return this.callOverride(\"setSize\",\r\n                dir, delta, group, relativeX, relativeY, height, width, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo);\r\n\r\n        let gridItemStyle, coordinates;\r\n        let calcResult = this.calculateGridItem(relativeX, relativeY, this.props.parent, width, height);\r\n\r\n        gridItemStyle = this.props.autoConstraintsOff?  this.getCompositeFromData(\"gridItemStyle\"):\r\n            calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width !== \"auto\")\r\n            this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n        else\r\n            this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n\r\n        if (this.getCompositeFromData(\"style\").minWidth) {\r\n            this.setProps(\"minWidth\", width, coordinates, undefined, undefined, true);\r\n        }\r\n        if (this.getCompositeFromData(\"style\").maxWidth) {\r\n            this.setProps(\"maxWidth\", width, coordinates, undefined, undefined, true);\r\n        }\r\n\r\n        if (this.getCompositeFromData(\"style\").height !== \"auto\") {\r\n            this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n        }\r\n        if (!this.getFromTempData(\"isVerticalSection\")) {\r\n            if (this.getCompositeFromData(\"style\").minHeight) {\r\n                this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n            }\r\n            if (this.getCompositeFromData(\"style\").maxHeight) {\r\n                this.setProps(\"maxHeight\", height, coordinates, undefined, undefined, true);\r\n            }\r\n        }\r\n\r\n        if (!this.getFromTempData(\"isSection\"))\r\n            this.setGridItemStyle(gridItemStyle);\r\n        this.setRuntimeStyle();\r\n        this.setResizeHelpData();\r\n\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.props.snap.drawSnap();\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                this.getSize(false).top, this.getSize(false).left,\r\n                window.innerHeight - this.getSize(false).top - height,\r\n                window.innerWidth - this.getSize(false).left - width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                this.getSize(false), this.state.dragging);\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.resizeData = undefined;\r\n\r\n        this.invalidateSize(false, true, true);\r\n    };\r\n\r\n    checkSnapOnResize = (runtimeStyle, dir, resizeData) => {\r\n        if (this.callOverride(\"checkSnapOnResize\", runtimeStyle, dir, resizeData))\r\n            return;\r\n\r\n        let snapDelta1, snapDelta2;\r\n        if (dir.includes(\"n\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"s\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top + runtimeStyle.height, runtimeStyle.left);\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"e\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left + runtimeStyle.width);\r\n        }\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2? snapDelta2.deltaX: 0,\r\n            deltaY: snapDelta1? snapDelta1.deltaY: 0,\r\n            snapH: snapDelta1 && snapDelta1.snapH,\r\n            snapV: snapDelta2 && snapDelta2.snapV\r\n        };\r\n\r\n        if (dir.includes(\"n\")) {\r\n            runtimeStyle.height -= snapDelta.deltaY;\r\n            runtimeStyle.top += snapDelta.deltaY;\r\n        } else if (dir.includes(\"s\")) {\r\n            runtimeStyle.height += snapDelta.deltaY;\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            runtimeStyle.width -= snapDelta.deltaX;\r\n            runtimeStyle.left += snapDelta.deltaX;\r\n        } else if (dir.includes(\"e\")) {\r\n            runtimeStyle.width += snapDelta.deltaX;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: runtimeStyle.left,\r\n            p2: runtimeStyle.left + runtimeStyle.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: runtimeStyle.top,\r\n            p2: runtimeStyle.top + runtimeStyle.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    setProps = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setProps\"))\r\n            return this.callOverride(\"setProps\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        if (prop === \"width\" || prop === \"height\" ||\r\n            prop === \"minWidth\" || prop === \"minHeight\" ||\r\n            prop === \"maxWidth\" || prop === \"maxHeight\")\r\n        {\r\n            this.setNewSize(prop, value, gridCoordinates, data, breakpointName, dontAddToSnap);\r\n        } else {\r\n            this.setDataInBreakpoint(prop, value, data, breakpointName);\r\n        }\r\n    };\r\n\r\n    setDataInBreakpoint = (prop, value, data, breakpointName) => {\r\n        this.props.breakpointmanager.setData(data || this.props.griddata, prop, value, breakpointName);\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setTempData = (prop, value, data) => {\r\n        let dataToWrite = data || this.props.griddata;\r\n        dataToWrite[prop] = value;\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getFromTempData = (prop, data) => {\r\n        let dataToRead = data || this.props.griddata;\r\n        return dataToRead[prop];\r\n    };\r\n\r\n    hasDataInBreakPoint = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .hasDataInBreakPoint(data || this.props.griddata, prop, breakpointName);\r\n    };\r\n\r\n    getFromData = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .getFromData(data || this.props.griddata, prop, breakpointName)\r\n    };\r\n\r\n    getCompositeFromData = (prop, data) => {\r\n        return this.props.breakpointmanager\r\n            .getCompositeFromData(data || this.props.griddata, prop, undefined)\r\n    };\r\n\r\n    setNewSize = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setNewSize\"))\r\n            return this.callOverride(\"setNewSize\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        let oldStyle = this.getCompositeFromData(\"style\", data, breakpointName);\r\n        let oldValue = oldStyle && oldStyle[prop];\r\n\r\n        if (value === undefined) {\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        if (!oldValue || (!this.isPercent(oldValue) && !this.isViewRatio(oldValue)) ||\r\n            value === \"auto\" || isNaN(value)) {\r\n            if (!isNaN(value)) {\r\n                value+=\"px\";\r\n            }\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        if (isNaN(value) && value.includes('px'))\r\n            value = parseFloat(value.replace('px', ''));\r\n\r\n        if (this.isPercent(oldValue)) {\r\n            let parentRect = {\r\n                width: gridCoordinates? (gridCoordinates.cx2 - gridCoordinates.cx1): window.innerWidth,\r\n                height: gridCoordinates?(gridCoordinates.cy2 - gridCoordinates.cy1): window.innerHeight\r\n            };\r\n            let newValue = (value / parentRect[this.getParentProps(prop)] * 100).toString() + \"%\";\r\n            this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n        } else if (this.isViewRatio(oldValue)) {\r\n            let parentValue;\r\n            let postFix;\r\n            if (oldValue.includes('vh')) {\r\n                parentValue = this.props.breakpointmanager.getWindowHeight();\r\n                postFix = 'vh'\r\n            }\r\n            if (oldValue.includes('vw')) {\r\n                parentValue = this.props.breakpointmanager.getWindowWidth();\r\n                postFix = 'vw'\r\n            }\r\n            let newValue = (value / parentValue * 100).toString() + postFix;\r\n            newValue = getViewRatioStyle(newValue);\r\n            this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n        }\r\n    };\r\n\r\n    getParentProps = (prop) => {\r\n        if (prop === \"width\" ||\r\n            prop === \"minWidth\" ||\r\n            prop === \"maxWidth\")\r\n        {\r\n            return \"width\";\r\n        }\r\n\r\n        return \"height\";\r\n    };\r\n\r\n    isPercent = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"%\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    isViewRatio = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"vh\") || value.includes(\"vw\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setRuntimeStyle = (newRuntimeStyle, animationCss) => {\r\n        if (this.callOverride(\"setRuntimeStyle\", newRuntimeStyle))\r\n            return;\r\n\r\n        let runtimeStyle = newRuntimeStyle && {...newRuntimeStyle};\r\n        this.setState({runtimeStyle, animationCss});\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getGridItemStyleId = () => {\r\n        return `style_grid_item_${this.props.id}`;\r\n    };\r\n\r\n    setGridItemStyle = (newGridItemStyle, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setGridItemStyle\", newGridItemStyle, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let gridItemStyle = {...newGridItemStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, undefined, breakpointName);\r\n\r\n        let styleNode = document.getElementById(this.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getCompositeFromData(\"gridItemStyle\"),\r\n                this.getGridItemStyleId(), this.getGridItemStyleId(), this);\r\n        } else {\r\n            updateStyle(styleNode, this.getCompositeFromData(\"gridItemStyle\"), this.getGridItemStyleId());\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setGridArea = (gridArea, breakpointName) => {\r\n        if (this.callOverride(\"setGridArea\", gridArea))\r\n            return;\r\n\r\n        let gridItemStyle = this.getFromData(\"gridItemStyle\");\r\n        gridItemStyle.gridArea = gridArea;\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n    };\r\n\r\n    getGridArea = () => {\r\n        if (this.callOverride(\"getGridArea\"))\r\n            return;\r\n\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return gridItemStyle.gridArea;\r\n    };\r\n\r\n    setStyleParam = (param, value, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setStyleParam\"))\r\n            return this.callOverride(\"setStyleParam\", param, value, data, breakpointName);\r\n\r\n        let style = this.hasDataInBreakPoint(\"style\", data, breakpointName) || {};\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        this.setStyle(style, data, breakpointName, undefined, dontAddToSnap);\r\n    };\r\n\r\n    getStyleId = () => {\r\n        return `style_${this.props.id}`;\r\n    };\r\n\r\n    getDesignStyleId = () => {\r\n        return `style_design_${this.props.id}`;\r\n    };\r\n\r\n    setDesignStyle = (newDesignStyle, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setDesignStyle\", newDesignStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let designStyle = {...newDesignStyle};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"designStyle\", designStyle, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let designStyleNode = document.getElementById(this.getDesignStyleId());\r\n\r\n            if (!designStyleNode) {\r\n                appendStyle(this.getCompositeFromData(\"designStyle\"),\r\n                    this.getDesignStyleId(), this.getDesignStyleId(), this);\r\n            } else {\r\n                updateStyle(designStyleNode, this.getCompositeFromData(\"designStyle\"), this.getDesignStyleId());\r\n            }\r\n\r\n            this.invalidateSize();\r\n            this.addToSnap();\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyleId = () => {\r\n        return `style-transform-${this.props.id}`;\r\n    };\r\n\r\n    setTransformStyle = (newTransform, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setTransformStyle\", newTransform, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let transform = {...newTransform};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"transform\", transform, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let transformStyleNode = document.getElementById(this.getTransformStyleId());\r\n\r\n            if (!transformStyleNode) {\r\n                appendStyle(this.getTransformStyle(),\r\n                    this.getTransformStyleId(), this.getTransformStyleId(), this);\r\n            } else {\r\n                updateStyle(transformStyleNode, this.getTransformStyle(), this.getTransformStyleId());\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyle = (compositeTransform) => {\r\n        if (!compositeTransform)\r\n            compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n\r\n        let rules = [];\r\n\r\n        // TODO add more rules\r\n        compositeTransform.rotateDegree && rules.push(`rotate(${compositeTransform.rotateDegree}deg)`);\r\n\r\n        return {transform: rules.join(' ')};\r\n    };\r\n\r\n    setStyle = (newStyle, data, breakpointName, dontOverride, dontAddToSnap) => {\r\n        if (this.callOverride(\"setStyle\", newStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let style = {...newStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"style\", style, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let styleNode = document.getElementById(this.getStyleId());\r\n\r\n            if (!styleNode) {\r\n                appendStyle(\r\n                    this.getCompositeFromData(\"style\"),\r\n                    this.getStyleId(), this.getStyleId(), this);\r\n            } else {\r\n                updateStyle(styleNode,\r\n                    this.getCompositeFromData(\"style\"),\r\n                    this.getStyleId());\r\n            }\r\n\r\n            if (!dontAddToSnap) {\r\n                this.invalidateSize();\r\n                this.addToSnap();\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    clearFromAllBp = (props, data, excludeBp) => {\r\n        let sortedBp = this.props.breakpointmanager.getSortedBreakPoints();\r\n        sortedBp.forEach( bp => {\r\n            if (excludeBp !== bp.name || !excludeBp.includes(bp.name))\r\n                this.setDataInBreakpoint(props, undefined, data, bp.name);\r\n        });\r\n    };\r\n\r\n    setGrid = (grid, callback, breakpointName) => {\r\n        if (this.callOverride(\"setGrid\", grid, callback, breakpointName))\r\n            return;\r\n\r\n        this.setDataInBreakpoint(\"grid\", grid, undefined, breakpointName);\r\n        this.setState({grid: grid}, () => {\r\n            if (this.props.gridLine.hasGridLine(this.props.id)) {\r\n                let size = this.getSize(false);\r\n                this.updateGridLines(\r\n                    size.top,\r\n                    size.left,\r\n                    size.top + size.clientHeight,\r\n                    size.left + size.clientWidth,\r\n                    this.props.gridLine.hasGridLine(this.props.id)\r\n                );\r\n            }\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    getGridLineRect = (ref, index, dir, item) => {\r\n        if (ref.current) {\r\n            return ref.current.rect;\r\n        }\r\n\r\n        let parentRect = item.props.parent && item.props.parent.getSize(false) || {\r\n            width: item.props.breakpointmanager.getWindowWidth()\r\n        };\r\n        let padding = cloneObject(item.getCompositeFromData(\"padding\")) || {};\r\n        ['top', 'left', 'bottom', 'right'].forEach(key => {\r\n            padding[key] = getPxValueFromCSSValue(padding[key], parentRect.width, item) || 0;\r\n        });\r\n\r\n        let thisRect = item.getSize(false);\r\n        if (dir === 'x') {\r\n            if (index === 0) {\r\n                return {\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left ,\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top,\r\n                    height: thisRect.scrollHeight - padding.top - padding.bottom,\r\n                    width: 1\r\n                }\r\n            } else {\r\n                return {\r\n                    left: thisRect.left - thisRect.scrollLeft + thisRect.scrollWidth - padding.right - 1,\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top,\r\n                    height: thisRect.scrollHeight - padding.top - padding.bottom,\r\n                    width: 1\r\n                }\r\n            }\r\n        } else {\r\n            if (index === 0) {\r\n                return {\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top ,\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left,\r\n                    height: 1,\r\n                    width: thisRect.scrollWidth - padding.left - padding.right,\r\n                }\r\n            } else {\r\n                return {\r\n                    top: thisRect.top - thisRect.scrollTop + thisRect.scrollHeight - padding.bottom - 1,\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left,\r\n                    height: 1,\r\n                    width: thisRect.scrollWidth - padding.left - padding.right,\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getGridLineOfPoint = (left, top, parent, after = false, parentRect) => {\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false);\r\n        let x;\r\n        let cx;\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', parent);\r\n            if (left < rect.left || (after && left <= rect.left)) {\r\n                x = i;\r\n                if (!after) {\r\n                    if (xLineRef[i - 1]) {\r\n                        // rect = xLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = xLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(xLineRef[i - 1], i - 1, 'x', parent);\r\n                        cx = rect.left;\r\n                    } else {\r\n                        // cx = parentRect.left - parentRect.scrollLeft;\r\n                        cx = rect.left;\r\n                    }\r\n                } else {\r\n                    cx = rect.left;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (x === undefined) {\r\n            x = xLineRef.length;\r\n            // let rect = xLineRef[xLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = xLineRef[xLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(xLineRef[xLineRef.length - 1], xLineRef.length - 1, 'x', parent);\r\n            cx = rect.left;\r\n        }\r\n\r\n        let y;\r\n        let cy;\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let rect = yLineRef[i].current.getBoundingClientRect();\r\n            // let rect = yLineRef[i].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', parent);\r\n            if (top < rect.top || (after && top <= rect.top)) {\r\n                y = i;\r\n                if (!after) {\r\n                    if (yLineRef[i - 1]) {\r\n                        // rect = yLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = yLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(yLineRef[i - 1], i - 1, 'y', parent);\r\n                        cy = rect.top;\r\n                    } else {\r\n                        // cy = parentRect.top - parentRect.scrollTop;\r\n                        cy = rect.top;\r\n                    }\r\n                } else {\r\n                    cy = rect.top;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (y === undefined) {\r\n            y = yLineRef.length;\r\n            // let rect = yLineRef[yLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = yLineRef[yLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[yLineRef.length - 1], yLineRef.length - 1, 'y', parent);\r\n            cy = rect.top;\r\n        }\r\n\r\n        if (after) {\r\n            x++;\r\n            y++;\r\n        }\r\n\r\n        x = Math.max(1, x);\r\n        x = Math.min(xLineRef.length, x);\r\n        y = Math.max(1, y);\r\n        y = Math.min(yLineRef.length, y);\r\n\r\n        if (x === xLineRef.length)\r\n            cx++;\r\n        if (y === yLineRef.length)\r\n            cy++;\r\n\r\n        return {x, y, cx, cy};\r\n    };\r\n\r\n    calculateGridArea = (left, top, width, height, parent, parentRect) => {\r\n        if (!this.props.gridLine.hasGridLine(parent.props.id)) {\r\n            return {\r\n                gridArea: {x1: 1, y1: 1, x2: 2, y2: 2},\r\n                coordinates: {cx1: 0, cy1: 0, cx2: 0, cy2: 0}\r\n            }\r\n        }\r\n        let gridLine1 = this.getGridLineOfPoint(left, top, parent, false, parentRect);\r\n        let gridLine2 = this.getGridLineOfPoint(left + width, top + height, parent, true, parentRect);\r\n        return {\r\n            gridArea: {x1: gridLine1.x, y1: gridLine1.y, x2: gridLine2.x, y2: gridLine2.y},\r\n            coordinates: {cx1: gridLine1.cx, cy1: gridLine1.cy, cx2: gridLine2.cx, cy2: gridLine2.cy}\r\n        };\r\n    };\r\n\r\n    onMouseDown = (e, moveWithMouse) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            this.moveWithMouse = moveWithMouse;\r\n            this.mouseMoved = {\r\n                deltaX: 0,\r\n                deltaY: 0,\r\n                lastClientX: e.clientX,\r\n                lastClientY: e.clientY,\r\n                startMillis: (new Date()).getTime()\r\n            };\r\n            window.addEventListener(\"mousemove\", this.onMouseMove);\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        } else if (isRightClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseMoved.deltaX += (e.clientX - this.mouseMoved.lastClientX);\r\n        this.mouseMoved.deltaY += (e.clientY - this.mouseMoved.lastClientY);\r\n        this.mouseMoved.lastClientX = e.clientX;\r\n        this.mouseMoved.lastClientY = e.clientY;\r\n\r\n        if (!this.moving) {\r\n            let currentMillis = new Date().getTime();\r\n            if (Math.abs(this.mouseMoved.deltaX) > 10 ||\r\n                Math.abs(this.mouseMoved.deltaY) > 10 ||\r\n                currentMillis - this.mouseMoved.startMillis > 500)\r\n            {\r\n                if (!this.state.groupSelected && this.getFromTempData(\"draggable\") && !this.state.selected) {\r\n                    this.onSelect(true);\r\n                }\r\n                this.moving = true;\r\n                this.canMove() && this.onDragStart(e, isGroupSelected(this), true);\r\n            }\r\n        } else {\r\n            this.canMove() && this.onDrag(e, isGroupSelected(this), true);\r\n        }\r\n    };\r\n\r\n    canMove = () => {\r\n        return (this.state.selected || this.state.groupSelected) && this.getFromTempData(\"draggable\");\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        delete this.moveWithMouse;\r\n\r\n        if (isRightClick(e)) {\r\n            this.onContextMenu(e);\r\n            this.mouseDown = false;\r\n            window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n            return;\r\n        }\r\n\r\n        let currentMillis = new Date().getTime();\r\n        if (!this.moving && currentMillis - this.mouseMoved.startMillis < 500) {\r\n            if (!this.dropped) {\r\n                e.stopPropagation();\r\n                this.onSelect(true, undefined, undefined, true);\r\n            } else {\r\n                this.dropped = false;\r\n            }\r\n        }\r\n\r\n        if (this.moving && this.canMove()) {\r\n            window.requestAnimationFrame(() => {\r\n                this.onDragStop(e, isGroupSelected(this), true);\r\n            });\r\n        }\r\n\r\n        this.moving = false;\r\n        this.mouseDown = false;\r\n\r\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\r\n        window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n    };\r\n\r\n    onSelect = (selected, callback, deselectParent, clicked, dontUpdateAdjustment) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        if (this.callOverride(\"onSelect\", selected, callback, deselectParent))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n        if (!this.props.isSelectable)\r\n            return;\r\n\r\n        if (selected) {\r\n            this.props.select.selectItem(this, clicked, dontUpdateAdjustment);\r\n            this.toggleGridLines(selected, undefined, \"A\");\r\n        } else {\r\n            this.props.select.updateHelpSizeLines();\r\n        }\r\n\r\n        if (this.props.parent) {\r\n            if (selected || deselectParent)\r\n                this.props.parent.toggleGridLines(selected, () => {\r\n                    this.toggleHelpLines(selected && this.props.parent);\r\n                }, \"B\");\r\n        } else {\r\n            selected && this.props.gridLine.removeGridLineByType(\"B\");\r\n            this.props.select.updateHelpSizeLines();\r\n        }\r\n\r\n        this.setTempData(\"selected\", selected);\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        this.setState({selected, groupSelected: false}, () => {\r\n            selected && this.setItemHover(true);\r\n\r\n            this.props.editor.updateLayout();\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    toggleGridLines = (showGridLines, callback, gridType) => {\r\n        if (this.callOverride(\"toggleGridLines\", showGridLines, callback, gridType))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        if (!showGridLines) {\r\n            this.props.gridLine.removeGridLine(this.props.id);\r\n            this.updateLayout();\r\n            return;\r\n        }\r\n\r\n        if (this.props.gridLine.hasGridLine(this.props.id, gridType)) {\r\n            if (callback)\r\n                callback();\r\n\r\n            this.updateLayout();\r\n\r\n            return;\r\n        }\r\n\r\n        let grid = this.getCompositeFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            },\r\n            () => {\r\n                if (callback)\r\n                    callback();\r\n\r\n                this.updateLayout();\r\n            }\r\n        );\r\n    };\r\n\r\n    toggleHelpLines = (helpLinesParent, callback) => {\r\n        if (this.callOverride(\"toggleHelpLines\", helpLinesParent, callback))\r\n            return;\r\n\r\n        if (this.mounted) {\r\n            this.setState({\r\n                helpLinesParent: helpLinesParent !== this && helpLinesParent\r\n            }, () => {\r\n                helpLinesParent &&\r\n                this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                    this.getSize(false), this.state.dragging);\r\n\r\n                if (callback)\r\n                    callback();\r\n            });\r\n        }\r\n    };\r\n\r\n    onScroll = (e) => {\r\n        console.log(\"onScroll\", this.props.id);\r\n        if (this.callOverride(\"onScroll\", e))\r\n            return;\r\n\r\n        this.isEditor() && this.invalidateSize(true, false, true);\r\n        this.isEditor() && this.props.select.updateParentsRect();\r\n        this.isEditor() && this.props.select.onScrollItem();\r\n        this.onScrollEnd(e);\r\n    };\r\n\r\n    onRootScroll = (e) => {\r\n        if (this.getFromTempData(\"isFixed\")) {\r\n            this.props.parent.forceScroll(e);\r\n        }\r\n    };\r\n\r\n    forceScroll = (e) => {\r\n        console.log(\"forceScroll\", this.props.id, this.rootDivRef.current.scrollTop, e.deltaY);\r\n\r\n        clearTimeout(this.scrollReset);\r\n\r\n        if (!this.targetScroll) this.targetScroll = {\r\n            top: this.rootDivRef.current.scrollTop\r\n        };\r\n\r\n        if (this.targetScroll.top < 0 && e.deltaY > 0)\r\n            this.targetScroll.top = 0;\r\n\r\n        let maxTop = this.rootDivRef.current.scrollHeight - this.getSize(false).height;\r\n        if (this.targetScroll.top > maxTop && e.deltaY < 0) {\r\n            this.targetScroll.top = maxTop;\r\n        }\r\n\r\n        this.targetScroll.top += e.deltaY;\r\n\r\n        this.rootDivRef.current.scrollTo({\r\n            top: this.targetScroll.top,\r\n            behavior: 'smooth'\r\n        });\r\n\r\n        this.scrollReset = setTimeout(() => {\r\n            this.targetScroll = {\r\n                top: this.rootDivRef.current.scrollTop\r\n            };\r\n        }, 500);\r\n    }\r\n\r\n    onScrollEnd = debounce((e) => {\r\n        if (this.callOverride(\"onScrollEnd\", e))\r\n            return;\r\n\r\n        this.isEditor() && this.invalidateSize();\r\n        this.isEditor() && this.addToSnap();\r\n    }, 500);\r\n\r\n    editGrid = () => {\r\n        this.props.gridEditorRef.current.editing(this);\r\n    };\r\n\r\n    updateGridEditor = () => {\r\n        this.props.gridEditorRef.current.update(this);\r\n    };\r\n\r\n    setAnchor = (anchor) => {\r\n        if (this.callOverride(\"setAnchor\", anchor))\r\n            return;\r\n\r\n        this.setTempData(\"anchor\", anchor);\r\n        this.updateLayout();\r\n    };\r\n\r\n    isEditor = () => {\r\n        return this.props.editor;\r\n    }\r\n\r\n    playAnimation = (disable) => {\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        if (!compositeDesign.animation || !compositeDesign.animation.name)\r\n            return;\r\n\r\n        if (this.getFromData(\"dontAnimate\"))\r\n            return;\r\n\r\n        // Component going to show animation, so add end listener for more action\r\n        let onAnimationEnd = DynamicAnimations[compositeDesign.animation.name].onAnimationEnd;\r\n\r\n        let stateChange = {\r\n            forceKey: \"animationReplay\",\r\n            showAnimation: true,\r\n            onAnimationEnd\r\n        };\r\n\r\n        if (disable) {\r\n            stateChange.disableVS = true;\r\n            this.setTempData(\"dontAnimate\", true);\r\n        }\r\n\r\n        this.isEditor() && this.props.select.activateHover(false);\r\n        this.isEditor() && this.props.select.activateResize(false);\r\n\r\n        this.setState(stateChange);\r\n    };\r\n\r\n    onAnimationEnd = () => {\r\n        this.setState({forceKey: undefined, showAnimation: undefined});\r\n        this.isEditor() && this.props.select.activateHover(true);\r\n        this.isEditor() && this.props.select.activateResize(true);\r\n    };\r\n\r\n    getCompositeAnimationCss = (compositeAnimation = {}) => {\r\n        if (!(compositeAnimation.name && this.state.forceKey && this.state.showAnimation))\r\n            return;\r\n\r\n        return DynamicAnimations[compositeAnimation.name]\r\n            .getAnimationCSS(this, compositeAnimation.options);\r\n    };\r\n\r\n    onContextMenu = (e) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        e.preventDefault();\r\n        this.onSelect(true);\r\n        this.props.select.onContextMenu(e, this);\r\n    };\r\n\r\n    getContextMenu = () => {\r\n        if (this.hasOverride(\"getContextMenu\"))\r\n            return this.callOverride(\"getContextMenu\");\r\n    };\r\n\r\n    render () {\r\n        let {className, animationCss, as, editor, select, id, getStaticChildren,\r\n            isPage, page, getChildrenOverride, modifyContainerStyleOverride} = this.props;\r\n        let {selected, runtimeStyle, portalNodeId, disableVS, showAnimation, forceKey, grid,\r\n            draggingStart, showGridLines, resizeHelpData} = this.state;\r\n        let isContainer = this.props.griddata.isContainer;\r\n        let children = this.children;\r\n        let resizeData = this.resizeData;\r\n        let size = runtimeStyle || this.getSize(false);\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        let compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n        let compositeStyle = this.getCompositeFromData(\"style\");\r\n        let overflowData = this.getCompositeFromData(\"overflowData\");\r\n        console.log(\"bpData\", this.props.griddata.bpData, this.props.id);\r\n        let anchor = this.getFromTempData(\"anchor\");\r\n        let selectAsParent = this.props.gridLine.hasGridLine(this.props.id, \"B\") !== undefined;\r\n\r\n        let classes = classNames(\r\n            \"AwesomeGridLayoutRoot\",\r\n            \"AwesomeGridLayoutGrid\",\r\n            className,\r\n            this.getDesignStyleId(),\r\n            this.getGridItemStyleId(),\r\n            this.getStyleId(),\r\n            this.getCompositeAnimationCss(compositeDesign.animation),\r\n            isPage && \"PageScrollBar\"\r\n        );\r\n\r\n        let holderClasses = classNames(\r\n            \"AwesomeGridLayoutHolder\",\r\n            this.getTransformStyleId(),\r\n        );\r\n\r\n        let TagAs = as || \"div\";\r\n\r\n        return (\r\n            <Portal nodeId={portalNodeId} disabled={!portalNodeId}>\r\n                <VisibilitySensorWrapper\r\n                    animation={compositeDesign.animation}\r\n                    editor={editor}\r\n                    playAnimation={this.playAnimation}\r\n                    select={select}\r\n                    disableVS={disableVS}\r\n                >\r\n                        <TagAs\r\n                            onMouseDown={!showAnimation ? this.onMouseDown : undefined}\r\n                            onMouseOver={this.onMouseOver}\r\n                            onMouseEnter={this.onMouseEnter}\r\n                            onMouseOut={this.onMouseOut}\r\n                            onScroll={this.onRootScroll}\r\n                            onWheel={this.onRootScroll}\r\n                            id={id}\r\n                            className={classes}\r\n                            style={{\r\n                                ...runtimeStyle,\r\n                                ...(this.canMove() && {cursor: \"move\"}),\r\n                                // ...(!this.isEditor() && this.getFromTempData(\"isFixed\") && {pointerEvents: \"none\"}),\r\n                                ...(isPage && {overflowY: \"auto\", overflowX: \"hidden\"}),\r\n                                ...(overflowData.state === 'hide' && {\r\n                                    overflowY: 'hidden',\r\n                                    overflowX: 'hidden',\r\n                                }),\r\n                                ...(showAnimation && {\r\n                                    opacity: 0\r\n                                })\r\n                            }}\r\n                            ref={this.rootDivRef}\r\n                            key={id}\r\n                            onAnimationEnd={this.onAnimationEnd}\r\n                        >\r\n                            {\r\n                                this.getFromTempData(\"pageResize\") &&\r\n                                !showAnimation &&\r\n                                <AdjustmentResizePage\r\n                                    id={id}\r\n                                    key={`${id}_resize`}\r\n                                    sides={['e','w']}\r\n                                    onResizeStart={this.pageResizeStart}\r\n                                    onResize={this.pageResize}\r\n                                    onResizeStop={this.pageResizeStop}\r\n                                    data={runtimeStyle || size}\r\n                                    top={(resizeData && resizeData.top) || (size && size.top)}\r\n                                    left={(resizeData && resizeData.left) || (size && size.left)}\r\n                                    width={(runtimeStyle && runtimeStyle.width) || (size && size.width)}\r\n                                    height={(runtimeStyle && runtimeStyle.height) || (size && size.height)}\r\n                                    draggingStart={draggingStart}\r\n                                    itemId={id}\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                selected && resizeHelpData &&\r\n                                !this.getFromTempData(\"pageResize\") &&\r\n                                !showAnimation &&\r\n                                !isGroupSelected(this) &&\r\n                                <AdjustmentHelpSize\r\n                                    resizeHelpData={resizeHelpData}\r\n                                />\r\n                            }\r\n\r\n                            <ChildHolder\r\n                                className={holderClasses}\r\n                                key={forceKey || `${id}_container`}\r\n                                id={`${id}_child_holder`}\r\n                                disabled={Object.keys(compositeTransform).length > 0}\r\n                                transformRef={this.transformRef}\r\n                            >\r\n                                {\r\n                                    getStaticChildren && getStaticChildren()\r\n                                }\r\n\r\n                                <GridChildContainer\r\n                                    id={id}\r\n                                    key={`${id}_container`}\r\n                                    allChildren={children}\r\n                                    grid={grid}\r\n                                    overflowData={overflowData}\r\n                                    showGridLines={showGridLines}\r\n                                    aglStyle={compositeStyle}\r\n                                    overflowRef={this.overflowRef}\r\n                                    containerRef={this.containerRef}\r\n                                    show={isContainer}\r\n                                    onScroll={this.onScroll}\r\n                                    isPage={isPage}\r\n                                    editor={editor}\r\n                                    page={page}\r\n                                    ref={this.backContainerRef}\r\n                                    size={runtimeStyle || size}\r\n                                    getChildrenOverride={getChildrenOverride}\r\n                                    agl={this}\r\n                                    padding={this.getCompositeFromData(\"padding\")}\r\n                                    modifyContainerStyleOverride={modifyContainerStyleOverride}\r\n                                    selectAsParent={selectAsParent}\r\n                                    selected={selected}\r\n                                />\r\n                            </ChildHolder>\r\n\r\n                            <AGLAnchor\r\n                                anchor={anchor}\r\n                            />\r\n\r\n                            {\r\n                                this.state.dragging && this.props.parent &&\r\n                                <Portal nodeId={this.state.portalNodeId ||\r\n                                    `${this.props.parent.props.id}_container`}\r\n                                >\r\n                                    <div\r\n                                        className={this.state.fakeStyle}\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            pointerEvents: \"none\",\r\n                                            ...this.state.fakeStyle\r\n                                        }}\r\n                                    />\r\n                                </Portal>\r\n                            }\r\n\r\n                        </TagAs>\r\n                </VisibilitySensorWrapper>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n\r\nAwesomeGridLayout2.defaultProps = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    childSize: {w: \"100%\", h: \"100%\"},\r\n    showSideResize: false,\r\n    isSelectable: true,\r\n    layoutType: \"free\", // free, grid\r\n    snap: {x: 1, y: 1},\r\n    dir: \"rtl\", // rtl, ltr,\r\n    compactType: \"vertical\", // none, vertical, horizontal\r\n    defaultGrid: {\r\n        x: 1,\r\n        y: 1,\r\n        gridTemplateRows: \"1fr\",\r\n        gridTemplateColumns: \"1fr\"\r\n    },\r\n    defaultStyle: {\r\n        width: \"50%\",\r\n        height: \"50%\",\r\n    },\r\n    defaultGridItemStyle: {\r\n        alignSelf: \"center\",\r\n        justifySelf: \"center\",\r\n        position: \"relative\",\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        gridArea: \"1/1/2/2\",\r\n    }\r\n};\r\n","import AwesomeGridLayout2 from \"../../AwesomeGridLayout2\";\r\nimport React from \"react\";\r\nimport {assignData, initGriddata} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AGLWrapper extends React.Component{\r\n    render() {\r\n        let griddata = this.props.aglRef.current && this.props.aglRef.current.props.griddata;\r\n        if (!griddata) griddata = this.props.griddata;\r\n        if (griddata && griddata.initialized) {\r\n            if (!griddata.fillWithData) {\r\n                griddata.fillWithData = true;\r\n                let bpData = this.props.data.bpData;\r\n                Object.keys(this.props.data).forEach(key => {\r\n                    if (key !== \"bpData\") {\r\n                        griddata[key] = this.props.data[key];\r\n                    }\r\n                });\r\n                assignData(griddata.bpData[\"laptop\"], bpData);\r\n            }\r\n        } else {\r\n            griddata = assignData(this.props.griddata, this.props.data);\r\n            initGriddata(griddata, this.props.breakpointmanager);\r\n        }\r\n\r\n        return (\r\n            <AwesomeGridLayout2\r\n                className={this.props.className}\r\n                {...this.props}\r\n                ref={this.props.aglRef}\r\n                griddata={griddata}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class StackSpacerContainer extends React.PureComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n    }\r\n\r\n    updateSpacers = (spacers) => {\r\n        setTimeout(() => {\r\n            this.setState({spacers});\r\n        }, 0);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.state.spacers.map((spacer, index) => {\r\n                return <Portal nodeId={`${this.props.aglRef.current.props.id}_container`}\r\n                               key={index}\r\n                               document={this.props.document}\r\n                >\r\n                    {spacer}\r\n                </Portal>\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentMove extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        let rect = this.rootDivRef.current.getBoundingClientRect();\r\n        if (this.isLeftClick(e) && e.clientX >= rect.left && e.clientX <= rect.left + rect.width &&\r\n            e.clientY >= rect.top && e.clientY <= rect.top + rect.height) {\r\n            e.stopPropagation();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        } else {\r\n            if (this.props.onClick)\r\n                this.props.onClick(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.props.onDragStart(e);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.props.onDrag(e);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentMove\"\r\n                className=\"AdjustmentMoveRoot\"\r\n                ref={this.rootDivRef}\r\n                onPointerDown={this.onMouseDown}\r\n                style={{\r\n                    cursor: this.props.cursor || \"move\"\r\n                }}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\n\r\nexport default class StackSpacerResizer extends React.PureComponent{\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerResizerRoot\"\r\n            >\r\n                <AdjustmentMove\r\n                    onDragStart={this.props.onDragStart}\r\n                    onDrag={this.props.onDrag}\r\n                    onDragStop={this.props.onDragStop}\r\n                    cursor={this.props.cursor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\nimport StackSpacerResizer from \"./StackSpacerResizer\";\r\n\r\nexport default class StackSpacer extends React.PureComponent{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            pointerEvents: \"auto\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setPointerEvents = (pointerEvents) => {\r\n        this.mounted && this.setState({pointerEvents});\r\n    };\r\n\r\n    updateSpacerData = (newHeight) => {\r\n        this.props.spacerData.height = newHeight;\r\n        this.props.stack.props.select.updateSize();\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClick = (e) => {\r\n        this.props.aglRef.current.onSelect(true);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        if (this.props.onDragStart)\r\n            this.props.onDragStart(e);\r\n\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n            firstHeight: this.props.spacerData.height\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        e.preventDefault();\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        let newHeight = this.dragData.firstHeight + deltaY;\r\n\r\n        newHeight = Math.max(0, newHeight);\r\n        this.updateSpacerData(newHeight);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerRoot\"\r\n                style={{\r\n                    height: `${this.props.spacerData.height}px`,\r\n                    order: this.props.order,\r\n                    pointerEvents: this.state.pointerEvents\r\n                }}\r\n                onClick={this.onClick}\r\n                onMouseOver={this.props.onMouseOver}\r\n                onMouseEnter={this.props.onMouseEnter}\r\n                onMouseOut={this.props.onMouseOut}\r\n            >\r\n\r\n                <StackSpacerResizer\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n\r\n                {\r\n                    this.props.aglRef.current.getSize(false).width > 150 &&\r\n                    <p\r\n                        className=\"StackSpacerText\"\r\n                    >\r\n                        Spacer\r\n                    </p>\r\n                }\r\n\r\n                <p\r\n                    className=\"StackSpacerSizeText\"\r\n                >\r\n                    {`${this.props.spacerData.height.toFixed(0)}px`}\r\n                </p>\r\n\r\n                <AdjustmentMove\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    onClick={this.onClick}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {isFixed, isStretch} from \"../../AwesomwGridLayoutHelper\";\r\nimport {appendStyle, cloneObject, updateStyle} from \"../../AwesomeGridLayoutUtils\";\r\nimport StackSpacerContainer from \"./StackSpacerContainer\";\r\nimport StackSpacer from \"./StackSpacer\";\r\n\r\nexport default class Stack extends AGLComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n        this.aglRef = React.createRef();\r\n        this.spacerContainerRef = React.createRef();\r\n\r\n        if (props.allSpacerData)\r\n            this.allSpacerData = props.allSpacerData;\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n        };\r\n    };\r\n\r\n    getChildrenOverride = (sortedChildrenArray, agl) => { // [{child: child, zIndex: zIndex}], agl\r\n        return sortedChildrenArray.map((child, index) => {\r\n            return child.child;\r\n        });\r\n    };\r\n\r\n    lateMountedOverride = (agl) => {\r\n        agl.invalidateSize();\r\n        agl.addToSnap();\r\n        agl.onSelect(agl.getFromTempData(\"selected\"));\r\n\r\n        if (agl.props.onPageResize) {\r\n            let rect = agl.getSize(false, true);\r\n            agl.props.onPageResize(rect.width, agl, true);\r\n        }\r\n\r\n        agl.props.onChildMounted && agl.props.onChildMounted(agl);\r\n        if (this.props.lateMountedComplete)\r\n            this.props.lateMountedComplete(this);\r\n\r\n        this.setOrder();\r\n    };\r\n\r\n    calculateGridItemChildOverride = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateChildGridItemOverride =\r\n        (child1, child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateWrapper = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) => {\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let {gridArea, coordinates} = child.calculateGridArea(\r\n            parentRect.left + relativeX,\r\n            parentRect.top + relativeY,\r\n            width,\r\n            height,\r\n            parent,\r\n            parentRect\r\n        );\r\n\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.clientHeight,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.clientWidth\r\n            }\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let gridItemStyle = {...(child.state.gridItemStyle || child.props.defaultGridItemStyle)};\r\n        delete gridItemStyle.marginLeft;\r\n        delete gridItemStyle.marginRight;\r\n\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.alignSelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.alignSelf = \"flex-end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"flex-start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            // if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n            // gridItemStyle.alignSelf = \"end\";\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // } else {\r\n            // gridItemStyle.alignSelf = \"start\";\r\n            // gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            // }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }\r\n\r\n        delete gridItemStyle.justifySelf;\r\n        delete gridItemStyle.marginTop;\r\n        delete gridItemStyle.marginBottom;\r\n        delete gridItemStyle.gridArea;\r\n\r\n        child.setDataInBreakpoint(\"relativeY\", relativeY);\r\n\r\n        this.setOrder(child.props.id, child, relativeY, height, fromState);\r\n\r\n        child.setStyleParam(\"height\", \"auto\");\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    setOrder = (childId, child, childRelativeY, childHeight, fromState) => {\r\n        let childFound = false;\r\n        let childOrderSet = false;\r\n        let sorted = Object.values(this.aglRef.current.allChildRefs).sort((a,b) => {\r\n            if (a && a.current && b && b.current){\r\n                if (a.current.props.id === childId || b.current.props.id === childId)\r\n                    childFound = true;\r\n\r\n                let relativeYA = a.current.getFromData(\"relativeY\");\r\n                let relativeYB = b.current.getFromData(\"relativeY\");\r\n                if (relativeYA < relativeYB) {\r\n                    return -1;\r\n                } else if (relativeYA === relativeYB) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    if (childId === a.current.props.id)\r\n                        return -1;\r\n                    else if (childId === b.current.props.id)\r\n                        return 1;\r\n                    else\r\n                        return 0;\r\n                }\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        let order = 1;\r\n        let relativeY = 0;\r\n        let spacers = [];\r\n        let length = sorted.filter(childRef => {\r\n            return (childRef && childRef.current);\r\n        }).length;\r\n\r\n        sorted.forEach((childRef, index) => {\r\n            if (childRef && childRef.current) {\r\n                if (childRelativeY && !childFound) {\r\n                    let relativeY2 = childRef.current.getFromData(\"relativeY\");\r\n                    if (!childOrderSet && relativeY2 > childRelativeY) {\r\n                        childOrderSet = true;\r\n                        child.setStyleParam(\"order\", order);\r\n                        child.setDataInBreakpoint(\"order\", order);\r\n                        order++;\r\n                    }\r\n                }\r\n                childRef.current.setStyleParam(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"relativeY\", relativeY);\r\n                let size = childRef.current.getSize(false);\r\n                relativeY += size.height;\r\n\r\n                if (childId === childRef.current.props.id) {\r\n                    childOrderSet = true;\r\n                }\r\n                order++;\r\n\r\n                if (length > index + 1) {\r\n                    spacers[index] = this.getSpacer(index, order);\r\n                    relativeY+= this.getSpacerData(index).height;\r\n                    order++;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (child && !childOrderSet) {\r\n            childOrderSet = true;\r\n            child.setStyleParam(\"order\", order);\r\n            child.setDataInBreakpoint(\"order\", order);\r\n            order++;\r\n        }\r\n\r\n        this.spacerContainerRef.current.updateSpacers(spacers);\r\n        setTimeout(() => {\r\n            this.props.select.updateSize();\r\n        }, 0);\r\n    };\r\n\r\n    getSpacer = (index, order) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        if (!this.allSpacerRef[index]) {\r\n            this.allSpacerRef[index] = React.createRef();\r\n        }\r\n\r\n        return <StackSpacer\r\n            key={index}\r\n            order={order}\r\n            spacerData={this.allSpacerData[index]}\r\n            ref={this.allSpacerRef[index]}\r\n            aglRef={this.aglRef}\r\n            onDragStart={this.onStackDragStart}\r\n            onDragStop={this.onStackDragStop}\r\n            stack={this}\r\n            onMouseOver={this.onMouseOverSpacer}\r\n            onMouseEnter={this.onMouseEnterSpacer}\r\n            onMouseOut={this.onMouseOutSpacer}\r\n        />;\r\n    };\r\n\r\n    onStackDragStart = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", true);\r\n    };\r\n\r\n    onStackDragStop = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", false);\r\n    };\r\n\r\n    getSpacerData = (index) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        return this.allSpacerData[index];\r\n    };\r\n\r\n    setMouseOverOverride = (agl, item, positionData, callback) => {\r\n        this.setPointerEventOfSpacers(\"none\");\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    setMouseOverForNonDraggingOverride = (agl) => {\r\n        this.setPointerEventOfSpacers(\"auto\");\r\n        agl.props.dragdrop.setMouseOverForNonDragging(agl);\r\n    };\r\n\r\n    setPointerEventOfSpacers = (pointerEvents) => {\r\n        if (!this.allSpacerRef)\r\n            this.allSpacerRef = [];\r\n\r\n        this.allSpacerRef.forEach((spacerRef) => {\r\n            if (spacerRef && spacerRef.current)\r\n                spacerRef.current.setPointerEvents(pointerEvents);\r\n        })\r\n    };\r\n\r\n    setGridItemStyleChildOverride = (child, newGridItemStyle) => {\r\n        let gridItemStyle = {...newGridItemStyle};\r\n        delete gridItemStyle.gridArea;\r\n        child.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle);\r\n        let styleNode = document.getElementById(child.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(gridItemStyle, child.getGridItemStyleId(), child.getGridItemStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, gridItemStyle, child.getGridItemStyleId());\r\n        }\r\n    };\r\n\r\n    modifyContainerStyleOverride = (container, agl, grid, aglStyle) => {\r\n        let style;\r\n\r\n        style = {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            position: \"relative\"\r\n        };\r\n\r\n        let styleNode = document.getElementById(container.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, container.getContainerStyleId(), container.getContainerStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, style, container.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    onChildLeaveOverride = (agl, child) => {\r\n        agl.removeChildElement(child);\r\n        child.removeIdAndChildrenId();\r\n\r\n        this.setOrder();\r\n\r\n        if (!agl.removing && Object.values(agl.allChildRefs).length === 1) {\r\n            agl.removing = true;\r\n            setTimeout(() => {\r\n                Object.values(agl.allChildRefs)[0] &&\r\n                this.props.dragdrop.dropItem(\r\n                    Object.values(agl.allChildRefs)[0].current,\r\n                    Object.values(agl.allChildRefs)[0].current.props.parent,\r\n                    this.props.parent, undefined, false, 2);\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    stretchChildOverride = (child, item) => {\r\n        if (!item.props.parent)\r\n            return;\r\n\r\n        let stretch = false;\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n\r\n        if (!isStretch(item, true)) {\r\n            stretch = true;\r\n        }\r\n\r\n        gridItemStyle.alignSelf = stretch? \"stretch\": \"center\";\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n        item.setStyleParam(\"width\", \"100%\");\r\n\r\n        if (!stretch) {\r\n            item.setStyleParam(\"width\", \"80%\");\r\n        }\r\n\r\n        item.setGridItemStyle(gridItemStyle);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    isStretchChildOverride = (child, item, log) => {\r\n        if (!item.props.parent)\r\n            return false;\r\n\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n        return !(gridItemStyle.alignSelf !== \"stretch\" ||\r\n            gridItemStyle.marginLeft !== \"0px\" ||\r\n            gridItemStyle.marginRight !== \"0px\");\r\n    };\r\n\r\n    setStyleParamOverride = (agl, param, value, data) => {\r\n        if (param === \"height\" || param === \"minHeight\")\r\n            return;\r\n\r\n        let style = !data? agl.getFromData(\"style\"): agl.getFromData(\"style\", data);\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        agl.setStyle(style, data);\r\n    };\r\n\r\n    onMouseOverSpacer = (e) => {\r\n        this.aglRef.current.onMouseOver(e);\r\n    };\r\n\r\n    onMouseEnterSpacer = (e) => {\r\n        this.aglRef.current.onMouseEnter(e);\r\n    };\r\n\r\n    onMouseOutSpacer = (e) => {\r\n        this.aglRef.current.onMouseOut(e);\r\n    };\r\n\r\n    onChildAdd = () => {\r\n        this.getAgl().removing = false;\r\n    };\r\n\r\n    render() {\r\n        return [\r\n            <AGLWrapper tagName=\"Stack\"\r\n                        key=\"Stack\"\r\n                        aglRef={!this.props.aglRef? this.aglRef: this.aglRef = this.props.aglRef}\r\n                        {...this.props}\r\n                        data={this.getData()}\r\n                        style={{...{\r\n                            height: \"auto\"\r\n                        }, ...this.props.style}}\r\n                        getChildrenOverride={this.getChildrenOverride}\r\n                        isStack={true}\r\n                        resizeSides={['e','w']}\r\n                        onDragStartChildOverride={this.onDragStartChildOverride}\r\n                        onDragChildOverride={this.onDragChildOverride}\r\n                        onDragStopChildOverride={this.onDragStopChildOverride}\r\n                        setGridItemStyleChildOverride={this.setGridItemStyleChildOverride}\r\n                        calculateGridItemChildOverride={this.calculateGridItemChildOverride}\r\n                        calculateChildGridItemOverride={this.calculateChildGridItemOverride}\r\n                        modifyContainerStyleOverride={this.modifyContainerStyleOverride}\r\n                        setMouseOverOverride={this.setMouseOverOverride}\r\n                        setMouseOverForNonDraggingOverride={this.setMouseOverForNonDraggingOverride}\r\n                        stretchChildOverride={this.stretchChildOverride}\r\n                        isStretchChildOverride={this.isStretchChildOverride}\r\n                        lateMountedOverride={this.lateMountedOverride}\r\n                        setStyleParamOverride={this.setStyleParamOverride}\r\n                        onChildLeaveOverride={this.onChildLeaveOverride}\r\n                        onChildAdd={this.onChildAdd}\r\n\r\n            >\r\n            </AGLWrapper>,\r\n            <StackSpacerContainer ref={this.spacerContainerRef} key=\"spacers\"\r\n                                  aglRef={this.aglRef}\r\n                                  document={this.props.document}\r\n            />\r\n        ]\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Divider from \"../Menus/CommonComponents/Divider\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport {LightMenuTooltip} from \"../Components/Containers/Menus/Components/LightTooltip\";\r\nimport {isLeftClick} from \"../AwesomwGridLayoutHelper\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener/ClickAwayListener\";\r\nimport MenuList from \"@material-ui/core/MenuList/MenuList\";\r\n\r\nexport default class ContextMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getFakeAnchor = (clientX, clientY) => {\r\n        return {\r\n            clientWidth: 0,\r\n            clientHeight: 0,\r\n            getBoundingClientRect: () => {\r\n                return {\r\n                    top: clientY,\r\n                    left: clientX,\r\n                    width: 0,\r\n                    height: 0,\r\n                    bottom: clientY,\r\n                    right: clientX\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let {menu, clientX, clientY, popperStyle, onClose} = this.props;\r\n        return (\r\n            <>\r\n                <Popper\r\n                    style={{...{\r\n                            zIndex: 99999999999999\r\n                        }, ...popperStyle}}\r\n                    // anchorReference=\"anchorPosition\"\r\n                    // anchorPosition={\r\n                    //     clientY !== null && clientX !== null\r\n                    //         ? { top: clientY, left: clientX }\r\n                    //         : undefined\r\n                    // }\r\n                    anchorEl={this.getFakeAnchor(clientX, clientY)}\r\n                    open={true}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                    placement=\"bottom-start\"\r\n                >\r\n                    <Paper style={{\r\n                        boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n                    }}>\r\n                        <ClickAwayListener onClickAway={onClose} mouseEvent='onMouseDown'>\r\n                            <MenuList autoFocusItem={true} style={{padding: 0}}\r\n                                      onPointerDown={(e) => {\r\n                                          e.preventDefault();\r\n                                          e.stopPropagation();\r\n                                      }}\r\n                            >\r\n                                {\r\n                                    menu.map((section, i) => {\r\n                                        let hasDivider = (i !== menu.length - 1);\r\n                                        return (\r\n                                            [\r\n                                                section.map((menuItem, j) => {\r\n                                                    return (\r\n                                                        <ContextMenuItem\r\n                                                            key={`${i}${j}`}\r\n                                                            onClose={onClose}\r\n                                                            menuItem={menuItem}\r\n                                                        />\r\n                                                    )\r\n                                                }),\r\n                                                hasDivider && <Divider style={{\r\n                                                    width: \"100%\",\r\n                                                    margin: 0,\r\n                                                    display: \"block\"\r\n                                                }}/>\r\n                                            ]\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                </Popper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport class ContextMenuItem extends React.Component {\r\n    render () {\r\n        let {menuItem, onClose} = this.props;\r\n\r\n        if (!menuItem.subMenu)\r\n            return (\r\n                <MenuItem\r\n                    dense\r\n                    onClick={(e) => {\r\n                        if (menuItem.onClick) {\r\n                            menuItem.onClick(e);\r\n                            onClose && onClose(e);\r\n                        }\r\n                    }}\r\n                    onPointerDown={(e) => {\r\n                        if (!isLeftClick(e)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }\r\n                    }}\r\n                >\r\n                    <span style={{\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"1fr auto\",\r\n                        alignItems: \"center\",\r\n                        width: \"100%\"\r\n                    }}>\r\n                        {menuItem.name}\r\n                        <span style={{\r\n                            fontSize: 10,\r\n                            marginLeft: 24,\r\n                            color: \"#9a9a9a\"\r\n                        }}>\r\n                            {\r\n                                menuItem.shortcut\r\n                            }\r\n                        </span>\r\n                    </span>\r\n                </MenuItem>\r\n            );\r\n        else\r\n            return (\r\n                <LightMenuTooltip\r\n                    title={\r\n                        menuItem.subMenu.map((menuItem, j) => {\r\n                            return (\r\n                                <ContextMenuItem\r\n                                    key={`${j}`}\r\n                                    onClose={onClose}\r\n                                    menuItem={menuItem}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    interactive\r\n                    placement=\"right\"\r\n                    leaveDelay={200}\r\n                    PopperProps={{\r\n                        style: {\r\n                            zIndex: 99999999999999,\r\n                        },\r\n                        modifiers:{\r\n                            flip: {\r\n                                enabled: true,\r\n                            },\r\n                            preventOverflow: {\r\n                                enabled: true,\r\n                                boundariesElement: 'viewport',\r\n                            },\r\n                        }}\r\n                    }\r\n                >\r\n                    <MenuItem\r\n                        dense\r\n                        onPointerDown={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation()\r\n                        }}\r\n                    >\r\n                        <span style={{\r\n                            display: \"grid\",\r\n                            gridTemplateColumns: \"1fr auto\",\r\n                            alignItems: \"center\",\r\n                            width: \"100%\"\r\n                        }}>\r\n                            {menuItem.name}\r\n                            <img draggable={false} width={8} height={8}\r\n                                 src={'/static/icon/right-arrow.svg'}\r\n                                style={{\r\n                                    marginLeft: 24,\r\n                                    color: \"#9a9a9a\"\r\n                                }}\r\n                            />\r\n                    </span>\r\n                    </MenuItem>\r\n                </LightMenuTooltip>\r\n            )\r\n    }\r\n}\r\n\r\n/*\r\n* Structure of input menu object\r\n* [\r\n*   [ // each section has one array\r\n    *   {\r\n    *       name: \"delete\",\r\n    *       onClick: function,\r\n    *       icon: <img ... />\r\n    *       shortcut: \"Ctrl + D\"\r\n    *       subMenu: {other Menu}\r\n    *   }\r\n*   ]\r\n* ]\r\n* */\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {isLeftClick} from \"./AwesomwGridLayoutHelper\";\r\n\r\nexport default class SelectManager {\r\n    constructor() {\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            this.ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n        });\r\n        window.addEventListener(\"keyup\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            if (key === 17) {\r\n                this.ctrl = false;\r\n            }\r\n        });\r\n\r\n        this.ctrl = false;\r\n        this.shift = false;\r\n        this.alt = false;\r\n\r\n        this.mouseDown = 0;\r\n        window.addEventListener(\"mousedown\",(e) =>{\r\n            if (isLeftClick(e))\r\n                this.mouseDown = 1;\r\n        });\r\n        window.addEventListener(\"mouseup\",(e) =>{\r\n            if (isLeftClick(e) && this.mouseDown > 0)\r\n                this.mouseDown = 0;\r\n        });\r\n    }\r\n}\r\n","import {throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport {\r\n    createStack,\r\n    getSectionId,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport ContainerBase from \"./Components/Containers/ContainerBase\";\r\nimport React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport throttle from \"lodash.throttle\";\r\n\r\nexport default class SelectManager {\r\n    constructor(inputManager, groupSelectRef, pageAglRef, miniMenuHolderRef,\r\n                inspectorRef, resizeRef, helpLinesRef, hoverRef) {\r\n        this.inputManager = inputManager;\r\n        this.groupSelectRef = groupSelectRef;\r\n        this.pageAglRef = pageAglRef;\r\n        this.miniMenuHolderRef = miniMenuHolderRef;\r\n        this.inspectorRef = inspectorRef;\r\n        this.resizeRef = resizeRef;\r\n        this.helpLinesRef = helpLinesRef;\r\n        this.hoverRef = hoverRef;\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 71 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + G\");\r\n                this.editGrid();\r\n            }\r\n            if ( key === 49 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 1\");\r\n                this.test1();\r\n            }\r\n            if ( key === 50 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 2\");\r\n                this.test2();\r\n            }\r\n            if ( key === 51 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 3\");\r\n                this.test3();\r\n            }\r\n        });\r\n    }\r\n\r\n    setContext = (editorContext) => {\r\n        this.context = editorContext;\r\n    }\r\n\r\n    getPageOverflowRef = () => {\r\n        if (this.pageAglRef.current)\r\n            return this.pageAglRef.current.overflowRef.current;\r\n    };\r\n\r\n    editGrid = (item) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        } else if (!item){\r\n            item = this.getSelected();\r\n        }\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.editGrid();\r\n    };\r\n\r\n    selectItem = (item, clicked, dontUpdateAdjustments) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        }\r\n\r\n        if (this.inputManager.ctrl && clicked && getSectionId(this.selectedItem) === getSectionId(item)) {\r\n            this.createGroup(item);\r\n            return;\r\n        } else if (this.inputManager.ctrl){\r\n            // TODO can notify to user that can't select multiple item from different section\r\n            this.clearGroup();\r\n        } else {\r\n            this.clearGroup();\r\n        }\r\n\r\n        if (this.selectedItem.props.id !== item.props.id){\r\n            this.selectedItem.onSelect(false, undefined, true);\r\n        }\r\n\r\n        if (!dontUpdateAdjustments) {\r\n            if (this.selectedItem.props.id !== item.props.id){\r\n                this.updateMenu();\r\n            }\r\n\r\n            this.updateMiniMenu(item);\r\n            this.setInspector(\r\n                item.props.getInspector()\r\n            );\r\n            this.updateResizePanes(item, item.getSize(false));\r\n        }\r\n\r\n        this.selectedItem = item;\r\n    };\r\n\r\n    clearMiniMenu = () => {\r\n        this.miniMenuHolderRef.current.clearMiniMenu();\r\n    };\r\n\r\n    onContextMenu = (e, item) => {\r\n        this.miniMenuHolderRef.current.onContextMenu(e, item);\r\n    };\r\n\r\n    updateMiniMenu = (item) => {\r\n        if(!item)\r\n            item = this.getSelected();\r\n\r\n        if (item && item.hasMiniMenu())\r\n            this.miniMenuHolderRef.current.addMiniMenu(item);\r\n        else\r\n            this.clearMiniMenu();\r\n    };\r\n\r\n    updateMenu = (menu) => {\r\n        this.miniMenuHolderRef.current.addMenu(menu);\r\n    };\r\n\r\n    setInspector = (inspectorMenu) => {\r\n        this.inspectorRef.current.setMenu(inspectorMenu);\r\n    };\r\n\r\n    clearGroup = () => {\r\n        if (!this.group)\r\n            return;\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: false,\r\n                groupDragStart: undefined,\r\n                groupDrag: undefined,\r\n                groupDragStop: undefined,\r\n            });\r\n            item.onSelect(false, undefined, true);\r\n        });\r\n\r\n        this.group = undefined;\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    createGroup = (item) => {\r\n        let selectedItem = this.selectedItem;\r\n        this.selectedItem = undefined;\r\n\r\n        if (!this.group) {\r\n            this.group = [];\r\n            selectedItem && this.group.push(selectedItem);\r\n        }\r\n\r\n        item && this.group.push(item);\r\n\r\n        this.updateResizePanes();\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: true,\r\n                groupDragStart: this.groupDragStart,\r\n                groupDrag: this.groupDrag,\r\n                groupDragStop: this.groupDragStop,\r\n            });\r\n        });\r\n\r\n        this.updateGroupRect();\r\n        this.clearMiniMenu();\r\n        this.updateMenu();\r\n    };\r\n\r\n    groupDragStart = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStart(e, true);\r\n        });\r\n    };\r\n\r\n    groupDrag = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDrag(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    groupDragStop = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStop(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    deleteGroup = () => {\r\n        if (!this.group) {\r\n            return;\r\n        }\r\n\r\n        this.group.forEach(item => {\r\n            item.delete();\r\n        });\r\n\r\n        this.clearGroup();\r\n    };\r\n\r\n    updateGroupRect = () => {\r\n        if (!this.group) {\r\n            this.groupSelectRef.current.updateRect();\r\n            return;\r\n        }\r\n\r\n        let firstRect = this.group[0].getSize(false, true);\r\n        let top = firstRect.top;\r\n        let left = firstRect.left;\r\n        let bottom = window.innerHeight - firstRect.top - firstRect.height;\r\n        let right =  window.innerWidth - firstRect.left - firstRect.width;\r\n\r\n        this.group.slice(1, this.group.length).forEach(item => {\r\n            let rect = item.getSize(false, true);\r\n            top = Math.min(top, rect.top);\r\n            left = Math.min(left, rect.left);\r\n            bottom = Math.min(bottom, window.innerHeight - rect.top - rect.height);\r\n            right = Math.min(right, window.innerWidth - rect.left - rect.width);\r\n        });\r\n\r\n        this.groupSelectRef.current.updateRect({\r\n            top, left, bottom, right\r\n        }, this.group);\r\n    };\r\n\r\n    getSelected = () => {\r\n        return this.selectedItem;\r\n    };\r\n\r\n    updateParentsRect = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects(true, true);\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects(true, true);\r\n    }, 40);\r\n\r\n    isEditor = () => {\r\n        return !this.context.preview;\r\n    }\r\n\r\n    // change grid line positions and resize panes\r\n    onScrollItem = throttleDebounce(() => {\r\n        if (!this.isEditor())\r\n            return;\r\n\r\n        this.updateGroupRect();\r\n\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects();\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects();\r\n\r\n        let size = item.getSize(false, true);\r\n        item.updateGridLines(\r\n            size.top, size.left,\r\n            window.innerHeight - size.top - size.height,\r\n            window.innerWidth - size.left - size.width,\r\n            \"A\"\r\n        );\r\n        item.updateGridEditor();\r\n        this.updateMiniMenu();\r\n        this.updateResizePanes(item, size);\r\n\r\n        this.updateHelpSizeLines(item, item.state.helpLinesParent, size, item.state.dragging,\r\n            item.getBoundarySize(true));\r\n        this.updateHover(item, size);\r\n    }, 50);\r\n\r\n    // updateSize\r\n    updateSize = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        let size = item.getSize(true, true);\r\n\r\n        this.updateResizePanes(item, size);\r\n    }, 100);\r\n\r\n    updateResizePanes = (item, data) => {\r\n        this.resizeRef.current.update(item, data, item && item.getTransformStyleId());\r\n    };\r\n\r\n    updateHelpLines = throttle((item, helpLineParent, itemRect, dragging) => {\r\n        this.updateHelpSizeLines(item, helpLineParent, itemRect, dragging,\r\n            item.getBoundarySize());\r\n    }, 50);\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        if (this.helpLinesRef.current)\r\n            return this.helpLinesRef.current.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    updateHover = (item, size, clear) => {\r\n        this.hoverRef.current.update(item, size, clear);\r\n    };\r\n\r\n    activateHover = (active) => {\r\n        this.hoverRef.current.activate(active);\r\n    };\r\n\r\n    activateResize = (active) => {\r\n        this.resizeRef.current.activate(active);\r\n    };\r\n\r\n    updateHelpSizeLines = (item, helpLineParent, itemRect, dragging, fakeItemRect) => {\r\n        if (this.helpLinesRef.current)\r\n            this.helpLinesRef.current.update(item, helpLineParent, itemRect, dragging, fakeItemRect);\r\n    };\r\n\r\n    test1 = () => {\r\n        createStack(this.group);\r\n    };\r\n\r\n    test2 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        let child =\r\n            <ContainerBase\r\n                style={{\r\n                    width: \"50%\",\r\n                    height: \"auto\",\r\n                    minHeight: \"75px\"\r\n                }}\r\n                data={{\r\n                    bpData: {\r\n                        design:{\r\n                            fillColor: `#5cff${Math.floor(Math.random() * 89) + 10  }`,\r\n                        },\r\n                    }\r\n                }}\r\n            />;\r\n\r\n        item.addChild(child, undefined, undefined, undefined, (agl) => {\r\n        }, undefined, true);\r\n    };\r\n\r\n    test3 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        item.playAnimation();\r\n    };\r\n}\r\n","export default class SnapManager {\r\n    constructor (snapThreshold, snapSvgRef) {\r\n        this.snaps = {};\r\n        this.snapThreshold = snapThreshold || 10;\r\n        this.snapSvgRef = snapSvgRef;\r\n    }\r\n\r\n    addSnap = (id, horizontals = [], verticals = [], parentsId) => {\r\n        this.snaps[id] = {\r\n            horizontals, verticals, id, parentsId\r\n        };\r\n    };\r\n\r\n    removeSnap = (id) => {\r\n        delete this.snaps[id];\r\n    };\r\n\r\n    checkSnap = (top, left, ignoreId, additionalSnaps = []) => {\r\n        let snapH, snapV;\r\n        let topUp = top + this.snapThreshold;\r\n        let topDown = top - this.snapThreshold;\r\n        let leftUp = left + this.snapThreshold;\r\n        let leftDown = left - this.snapThreshold;\r\n\r\n        let snaps = Object.values(this.snaps);\r\n        snaps = snaps.concat(additionalSnaps);\r\n\r\n        for (let i = 0; i < snaps.length; i++) {\r\n            let snap = snaps[i];\r\n            if (!snap)\r\n                continue;\r\n\r\n            if (snap.id === ignoreId)\r\n                continue;\r\n            if (snap.parentsId && snap.parentsId.includes(ignoreId))\r\n                continue;\r\n\r\n            if (!snapH){\r\n                for (let h = 0; h < snap.horizontals.length; h++) {\r\n                    let horizontal = snap.horizontals[h];\r\n                    if (!horizontal)\r\n                        continue;\r\n                    if (horizontal.value <= topUp && horizontal.value >= topDown) {\r\n                        snapH = horizontal;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!snapV) {\r\n                for (let v = 0; v < snap.verticals.length; v++) {\r\n                    let vertical = snap.verticals[v];\r\n                    if (!vertical)\r\n                        continue;\r\n                    if (vertical.value <= leftUp && vertical.value >= leftDown) {\r\n                        snapV = vertical;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (snapH && snapV)\r\n                break;\r\n        }\r\n\r\n        return {snapH, snapV};\r\n    }\r\n\r\n    drawSnap = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.snapSvgRef.current.update(snapH, snapV, pointOfSnapH, pointOfSnapV)\r\n    }\r\n}\r\n","import {createItem} from \"./AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport throttle from \"lodash.throttle\";\r\n\r\nexport default class CopyManager {\r\n    constructor(selectManager, pageRef, dragdrop) {\r\n        this.selectManager = selectManager;\r\n        this.pageRef = pageRef;\r\n        this.dragdrop = dragdrop;\r\n\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 86 && ctrl ) {\r\n                console.log(\"ctrl + V\");\r\n                this.paste();\r\n            } else if ( key === 67 && ctrl ) {\r\n                console.log(\"ctrl + C\");\r\n                this.copy();\r\n            } else if ( key === 68 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + D\");\r\n                this.duplicate();\r\n            } else if ( key === 46 ) {\r\n                console.log(\"delete\");\r\n                this.delete();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    copy = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copyItem = item;\r\n    };\r\n\r\n    getCopyItem = () => {\r\n        return this.copyItem;\r\n    };\r\n\r\n    paste = throttle((selectedItem) => {\r\n        if (!this.copyItem)\r\n            return;\r\n        let destinationItem;\r\n        if (!selectedItem)\r\n            selectedItem = this.selectManager.getSelected() || this.pageRef.current;\r\n\r\n        while (!destinationItem)  {\r\n            if (selectedItem.getFromTempData(\"isContainer\")) {\r\n                destinationItem = selectedItem;\r\n            } else {\r\n                selectedItem = selectedItem.props.parent;\r\n            }\r\n        }\r\n\r\n        let style = cloneObject(this.getCopyItem().getFromData(\"style\"));\r\n        let gridItemStyle = cloneObject(this.getCopyItem().getFromData(\"gridItemStyle\"));\r\n        let copyRect = this.getCopyItem().getSize(false);\r\n        let parentRect = destinationItem.getSize(false);\r\n        if (destinationItem === this.getCopyItem().props.parent) {\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginLeft =\r\n                    (parseFloat(gridItemStyle.marginLeft.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginTop =\r\n                    (parseFloat(gridItemStyle.marginTop.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginRight)\r\n                gridItemStyle.marginRight =\r\n                    (parseFloat(gridItemStyle.marginRight.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginBottom)\r\n                gridItemStyle.marginBottom =\r\n                    (parseFloat(gridItemStyle.marginBottom.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n\r\n            if (!gridItemStyle.marginLeft && !gridItemStyle.marginRight)\r\n                gridItemStyle.marginLeft = \"20px\";\r\n            if (!gridItemStyle.marginTop && !gridItemStyle.marginBottom)\r\n                gridItemStyle.marginTop = \"20px\";\r\n        } else {\r\n            delete gridItemStyle.marginLeft;\r\n            delete gridItemStyle.marginTop;\r\n            delete gridItemStyle.marginRight;\r\n            delete gridItemStyle.marginBottom;\r\n\r\n            gridItemStyle.justifySelf = \"center\";\r\n            gridItemStyle.alignSelf = \"center\";\r\n\r\n            if (style.width.toString().includes(\"%\")) {\r\n                style.width = (copyRect.width / parentRect.width * 100).toString() + \"%\";\r\n            }\r\n            if (style.height.toString().includes(\"%\")) {\r\n                style.height = (copyRect.height / parentRect.height * 100).toString() + \"%\";\r\n            }\r\n        }\r\n\r\n        createItem(destinationItem, {\r\n            props: this.getCopyItem().props,\r\n            tagName: this.getCopyItem().props.tagName\r\n        }, undefined, gridItemStyle, style);\r\n    }, 200);\r\n\r\n    duplicate = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copy(item);\r\n        this.paste(item.props.parent);\r\n        this.copyItem = false;\r\n    };\r\n\r\n    delete = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item && !this.selectManager.group)\r\n            return;\r\n\r\n        this.selectManager.deleteGroup();\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.delete();\r\n    };\r\n}\r\n","export default class IdManager {\r\n    constructor(prefix) {\r\n        this.prefix = prefix + '_';\r\n        this.allId = {};\r\n    }\r\n\r\n    clear = () => {\r\n        this.allId = {};\r\n    };\r\n\r\n    getId = (preferName, fixName) => {\r\n        let result;\r\n        let baseId = !fixName? this.prefix + preferName: fixName;\r\n        let id = baseId;\r\n        let postNo = 1;\r\n        while (!result) {\r\n            if (this.allId[id]) {\r\n                id = baseId + \"_\" + postNo;\r\n                postNo++;\r\n            } else {\r\n                result = id;\r\n            }\r\n        }\r\n\r\n        this.allId[id] = true;\r\n\r\n        return result;\r\n    };\r\n\r\n    setItem = (id, item) => {\r\n        console.log(\"IdMan setItem\", id, item.props.id)\r\n        this.allId[id] = item;\r\n    };\r\n\r\n    // return agl reference\r\n    getItem = (id) => {\r\n        console.log(\"IdMan\", Object.keys(this.allId))\r\n        return this.allId[id];\r\n    };\r\n\r\n    removeId = (id) => {\r\n        delete this.allId[id];\r\n    };\r\n}\r\n","import throttle from 'lodash.throttle';\r\n\r\nexport default class UndoRedo {\r\n    constructor(max, document, idMan) {\r\n        this.undoQueue = [];\r\n        this.redoQueue = [];\r\n        this.max = max || 20;\r\n        this.idMan = idMan;\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'z') {\r\n                this.undo();\r\n            }\r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'Z') {\r\n                this.redo();\r\n            }\r\n        });\r\n    }\r\n\r\n    getQueueObject = (func, undo, power) => {\r\n        return {\r\n            redo: func,\r\n            undo: undo,\r\n            power: (typeof power === 'number') ? power : undefined\r\n        }\r\n    };\r\n\r\n    add = (func, undo, power) => {\r\n        this.undoQueue.unshift(this.getQueueObject(func, undo, power));\r\n        if (this.undoQueue.length > this.max)\r\n            this.undoQueue.pop();\r\n        this.redoQueue = [];\r\n    };\r\n\r\n    undo = throttle(() => {\r\n        this.undoFunc();\r\n    }, 200);\r\n\r\n    undoFunc = () => {\r\n        if (this.undoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.undoQueue.shift();\r\n        let power = object.power || 1;\r\n\r\n        power--;\r\n        object.undo(this.idMan);\r\n        this.redoQueue.unshift(object);\r\n\r\n        while (power > 0) {\r\n            power--;\r\n            this.undoFunc();\r\n        }\r\n    };\r\n\r\n    hasUndo = () => {\r\n        return this.undoQueue.length > 0;\r\n    };\r\n\r\n    redo = throttle(() => {\r\n        if (this.redoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.redoQueue.shift();\r\n        object.redo(this.idMan);\r\n        this.undoQueue.unshift(object);\r\n    }, 100);\r\n\r\n    hasRedo = () => {\r\n        return this.redoQueue.length > 0;\r\n    };\r\n};\r\n","export default class GridLineManager {\r\n    constructor(gridContainerRef) {\r\n        this.gridContainerRef = gridContainerRef;\r\n    }\r\n\r\n    addGrid = (id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.gridContainerRef.current.addGrid(id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.gridContainerRef.current.getIdCache(gridType);\r\n    };\r\n\r\n    getXlineRef = (id) => {\r\n        return this.gridContainerRef.current.getXlineRef(id);\r\n    };\r\n\r\n    getYlineRef = (id) => {\r\n        return this.gridContainerRef.current.getYlineRef(id);\r\n    };\r\n\r\n    removeGridLine = (id) => {\r\n        this.gridContainerRef.current.removeGridLine(id);\r\n    };\r\n\r\n    removeGridLineByType = (type) => {\r\n        this.gridContainerRef.current.removeGridLineByType(type);\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        this.gridContainerRef.current.prepareRects(id);\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (this.gridContainerRef.current)\r\n            return this.gridContainerRef.current.hasGridLine(id, gridType);\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.gridContainerRef.current)\r\n            return this.gridContainerRef.current.isPrepared(id);\r\n    };\r\n}\r\n","import {v4 as uuidv4} from 'uuid';\r\nimport { goToAnchor } from 'react-scrollable-anchor'\r\n\r\nexport default class AnchorManager {\r\n    constructor(siteData) {\r\n        // TODO init all anchors\r\n        this.allAnchors = {};\r\n    }\r\n\r\n    addAnchor = (name, item) => {\r\n        let pageId = item.props.viewRef.current.props.pageId;\r\n        let id = uuidv4();\r\n        this.allAnchors[id] = {pageId, name, id};\r\n        item.setAnchor(this.allAnchors[id]);\r\n    };\r\n\r\n    modifyAnchor = (id, newName, item) => {\r\n        let anchor = this.allAnchors[id];\r\n        if (!anchor) {\r\n            this.addAnchor(newName, item);\r\n            return;\r\n        }\r\n\r\n        anchor.name = newName;\r\n\r\n        item.setAnchor(anchor);\r\n    };\r\n\r\n    removeAnchor = (id, item) => {\r\n        delete this.allAnchors[id];\r\n        item.setAnchor();\r\n    };\r\n\r\n    goToAnchor = (id, saveToHistory) => {\r\n        goToAnchor(id, saveToHistory);\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentGridRoot extends React.PureComponent {\r\n    render () {\r\n        let {top, left, bottom, right} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridRoot\"\r\n                className=\"AdjustmentGridRoot\"\r\n                style={{top, left, bottom, right}}\r\n            >\r\n                {\r\n                    this.props.children\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentGridRow extends React.Component {\r\n    // TODO BUG: first and last grid line is not provided, fix the bug\r\n    render () {\r\n        let {gridLineManager, itemId, grid} = this.props;\r\n        let rowLines = gridLineManager.getYlineRef(itemId);\r\n        return (\r\n            <div\r\n                className=\"AdjustmentGridRowEditor\"\r\n            >\r\n                {\r\n                    new Array(grid.x).fill(0).map((x, index) => {\r\n                        let rowLine = rowLines[index];\r\n                        let rowLineRect = rowLine.current.rect;\r\n                        let nextRowLineRect = rowLines[index + 1].current.rect;\r\n                        let rowHeight = grid.gridTemplateRows.split(' ')[index];\r\n                        let classes = classNames(\r\n                            \"AdjustmentGridRowEditorItem\",\r\n                            index === 0 && \"AdjustmentGridRowEditorItemTop\",\r\n                            index === grid.x - 1 && \"AdjustmentGridRowEditorItemBottom\",\r\n                        );\r\n                        return(\r\n                                <div\r\n                                    key={`row_${index}`}\r\n                                    className={classes}\r\n                                    style={{\r\n                                        height: nextRowLineRect.top - rowLineRect.top,\r\n                                    }}\r\n                                >\r\n                                    <p style={{\r\n                                        margin: 0,\r\n                                        fontWeight: \"bold\"\r\n                                    }}>\r\n                                        {rowHeight}\r\n                                    </p>\r\n                                </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentGridRoot from \"./AdjustmentGridRoot\";\r\nimport AdjustmentGridRow from \"./AdjustmentGridRow\";\r\n\r\nexport default class AdjustmentGrid extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item: undefined,\r\n            grid: undefined,\r\n            gridLineManager: undefined\r\n        };\r\n    }\r\n\r\n    editing = (item) => {\r\n        let grid = item.getFromData(\"grid\");\r\n        let gridLineManager = item.props.gridLine;\r\n        this.setState({item, grid, gridLineManager});\r\n    };\r\n\r\n    update = (item) => {\r\n        if (item === item)\r\n            this.forceUpdate();\r\n    };\r\n\r\n    addRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        if (grid.x === 100)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        grid.x++;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 0, \"minmax(100px,max-content)\");\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    addColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 100)\r\n            return;\r\n\r\n        grid.y++;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 0, \"1fr\");\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeColumnWidth = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1, newValue);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeRowHeight = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1, newValue);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.x === 1)\r\n            return;\r\n\r\n        grid.x--;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 1)\r\n            return;\r\n\r\n        grid.y--;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    render () {\r\n        let {gridLineManager, item, grid} = this.state;\r\n        if (!item)\r\n            return null;\r\n\r\n        let positions = gridLineManager.getIdCache(\"A\").positions;\r\n        return (\r\n            <AdjustmentGridRoot\r\n                top={positions.top}\r\n                left={positions.left}\r\n                bottom={positions.bottom}\r\n                right={positions.right}\r\n            >\r\n                <AdjustmentGridRow\r\n                    gridLineManager={gridLineManager}\r\n                    itemId={item.props.id}\r\n                    grid={grid}\r\n                />\r\n            </AdjustmentGridRoot>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentSnapLines extends React.Component {\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.props;\r\n        if (!snapH && !snapV)\r\n            return null;\r\n\r\n        if (snapH) {\r\n            return (\r\n                <line\r\n                    x1={Math.min(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    x2={Math.max(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    y1={snapH.value}\r\n                    y2={snapH.value}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <line\r\n                    x1={snapV.value}\r\n                    x2={snapV.value}\r\n                    y1={Math.min(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    y2={Math.max(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\n\r\nexport default class AdjustmentSnap extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    update = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.setState({\r\n            snapH, snapV, pointOfSnapH, pointOfSnapV\r\n        });\r\n    };\r\n\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.state;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentSnapLinesRoot\"\r\n            >\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    <AdjustmentSnapLines\r\n                        snapH={snapH}\r\n                        pointOfSnapH={pointOfSnapH}\r\n                    />\r\n                    <AdjustmentSnapLines\r\n                        snapV={snapV}\r\n                        pointOfSnapV={pointOfSnapV}\r\n                    />\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class GridLine extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render () {\r\n        let {id, lineRef, style} = this.props;\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                id={id}\r\n                ref={lineRef}\r\n                style={style}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\nimport Portal from \"@material-ui/core/Portal/Portal\";\r\nimport GridLine from \"./GridLine\";\r\n\r\nexport default class AdjustmentGridLinesWrapper2 extends React.PureComponent {\r\n    needUpdate = throttleDebounce(() => {\r\n        this.forceUpdate();\r\n    }, 100);\r\n\r\n    render () {\r\n        let {yNo, xNo, yLineRef, xLineRef, refId} = this.props;\r\n\r\n        if (yNo >= 0 && xNo >= 0 && !document.getElementById(`${refId}_container`))\r\n            this.needUpdate();\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    new Array(yNo + 1).fill(0).map((y, index) => {\r\n                        if (index === 0 || index === yNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesY\"\r\n                                id={`y_${index}_${refId}`}\r\n                                lineRef={yLineRef[index]}\r\n                                style={{\r\n                                    top: index === yNo ? \"unset\" : 0,\r\n                                    bottom: index === yNo ? 0 : \"unset\",\r\n                                    gridArea: `${index + 1}/1/${index + 1}/${xNo + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n                {\r\n                    new Array(xNo + 1).fill(0).map((x, index) => {\r\n                        if (index === 0 || index === xNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesX\"\r\n                                id={`x_${index}_${refId}`}\r\n                                lineRef={xLineRef[index]}\r\n                                style={{\r\n                                    left: index === xNo? \"unset\": 0,\r\n                                    right: index === xNo? 0: \"unset\",\r\n                                    gridArea: `1/${index + 1}/${yNo + 1}/${index + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {getCachedBoundingRect} from \"../Test/WindowCache\";\r\nimport AdjustmentGridLinesWrapper2 from \"./AdjustmentGridLinesWrapper2\";\r\n\r\nexport default class AdjustmentGridLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xNoA: -1,\r\n            yNoA: -1,\r\n            xNoB: -1,\r\n            yNoB: -1,\r\n            xNoT: -1,\r\n            yNoT: -1,\r\n        };\r\n\r\n        this.xLineRefA = new Array(100);\r\n        this.yLineRefA = new Array(100);\r\n        this.xLineRefB = new Array(100);\r\n        this.yLineRefB = new Array(100);\r\n        this.xLineRefT = new Array(100);\r\n        this.yLineRefT = new Array(100);\r\n\r\n        this.idCache = {};\r\n    }\r\n\r\n    fixLineRef = (x, y, gridType) => {\r\n        for (let i = 0; i <= x; i++) {\r\n            if (!this[`xLineRef${gridType}`][i])\r\n                this[`xLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n        for (let i = 0; i <= y; i++) {\r\n            if (!this[`yLineRef${gridType}`][i])\r\n                this[`yLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n    };\r\n\r\n    addGrid = (id, y, x, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.fixLineRef(x, y, gridType);\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id && gridType === \"A\") {\r\n            this.updateGridLine(id, \"A\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id && gridType === \"B\") {\r\n            this.updateGridLine(id, \"B\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id && gridType === \"T\") {\r\n            this.updateGridLine(id, \"T\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else {\r\n            this.idCache[gridType] = {id, gridTemplateRows, gridTemplateColumns, positions, x, y};\r\n\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, () => {\r\n                // this.prepareRects(id);\r\n                if (callback)\r\n                    callback();\r\n            })\r\n        }\r\n    };\r\n\r\n    updateGridLine = (id, gridType, {gridTemplateRows, gridTemplateColumns, positions, x, y} = {}, callback) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        gridTemplateRows && (this.idCache[gridType].gridTemplateRows = gridTemplateRows);\r\n        gridTemplateColumns && (this.idCache[gridType].gridTemplateColumns = gridTemplateColumns);\r\n        positions && (this.idCache[gridType].positions = positions);\r\n        x && (this.idCache[gridType].x = x);\r\n        y && (this.idCache[gridType].y = y);\r\n\r\n        if (!x && !y) {\r\n            this.setState({reload: true}, callback);\r\n            return;\r\n        }\r\n\r\n        if (x || y)\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.idCache[gridType];\r\n    };\r\n\r\n    getXlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        return this[`xLineRef${gridType}`].slice(0, this.idCache[gridType].x + 1);\r\n    };\r\n\r\n    getYlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        return this[`yLineRef${gridType}`].slice(0, this.idCache[gridType].y + 1);\r\n    };\r\n\r\n    removeGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                return \"A\";\r\n\r\n            if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                return \"B\";\r\n\r\n            if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                return \"T\";\r\n        } else {\r\n            if (this.idCache[gridType] && this.idCache[gridType].id === id)\r\n                return gridType;\r\n        }\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].prepared)\r\n            return true;\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        let xLineRef = this.getXlineRef(id);\r\n        if (xLineRef)\r\n            for(let i = 0; i < xLineRef.length; i++) {\r\n                let current = xLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`xLineRef_${i}_${id}`, current);\r\n            }\r\n        let yLineRef = this.getYlineRef(id);\r\n        if (yLineRef)\r\n            for(let i = 0; i < yLineRef.length; i++) {\r\n                let current = yLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`yLineRef_${i}_${id}`, current);\r\n            }\r\n\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n            this.idCache[\"A\"].prepared = true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n            this.idCache[\"B\"].prepared = true;\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n            this.idCache[\"T\"].prepared = true;\r\n    };\r\n\r\n    removeGridLineByType = (gridType) => {\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridLinesRoot\"\r\n                className=\"AdjustmentGridLinesRoot\"\r\n            >\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_A\"}\r\n                    refId={this.idCache[\"A\"] && this.idCache[\"A\"].id}\r\n                    xNo={this.state.xNoA}\r\n                    yNo={this.state.yNoA}\r\n                    xLineRef={this.xLineRefA}\r\n                    yLineRef={this.yLineRefA}\r\n                    gridTemplateRows={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateColumns}\r\n                    top={this.idCache[\"A\"] && this.idCache[\"A\"].positions.top}\r\n                    bottom={this.idCache[\"A\"] && this.idCache[\"A\"].positions.bottom}\r\n                    left={this.idCache[\"A\"] && this.idCache[\"A\"].positions.left}\r\n                    right={this.idCache[\"A\"] && this.idCache[\"A\"].positions.right}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_B\"}\r\n                    refId={this.idCache[\"B\"] && this.idCache[\"B\"].id}\r\n                    xNo={this.state.xNoB}\r\n                    yNo={this.state.yNoB}\r\n                    xLineRef={this.xLineRefB}\r\n                    yLineRef={this.yLineRefB}\r\n                    gridTemplateRows={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateColumns}\r\n                    top={this.idCache[\"B\"] && this.idCache[\"B\"].positions.top}\r\n                    bottom={this.idCache[\"B\"] && this.idCache[\"B\"].positions.bottom}\r\n                    left={this.idCache[\"B\"] && this.idCache[\"B\"].positions.left}\r\n                    right={this.idCache[\"B\"] && this.idCache[\"B\"].positions.right}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_T\"}\r\n                    refId={this.idCache[\"T\"] && this.idCache[\"T\"].id}\r\n                    xNo={this.state.xNoT}\r\n                    yNo={this.state.yNoT}\r\n                    xLineRef={this.xLineRefT}\r\n                    yLineRef={this.yLineRefT}\r\n                    gridTemplateRows={this.idCache[\"T\"] && this.idCache[\"T\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"T\"] && this.idCache[\"T\"].gridTemplateColumns}\r\n                    top={this.idCache[\"T\"] && this.idCache[\"T\"].positions.top}\r\n                    bottom={this.idCache[\"T\"] && this.idCache[\"T\"].positions.bottom}\r\n                    left={this.idCache[\"T\"] && this.idCache[\"T\"].positions.left}\r\n                    right={this.idCache[\"T\"] && this.idCache[\"T\"].positions.right}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ResizePane extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane`,\r\n            this.props.enabled && `Adjustment-${this.props.side}-pane-circle`,\r\n            `Adjustment-${this.props.side}-pane-line`,\r\n            {\"Adjustment-CornerCircle\": this.props.enabled && this.isCorner()},\r\n            \"Adjustment-Pane\",\r\n            !this.props.enabled && \"ResizePanePointerNone\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.props.enabled ? this.onMouseDown : undefined}\r\n                className={classes}\r\n                style={{...style, ...this.props.style}}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport {cloneObject} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentGroupRect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rect: undefined,\r\n            group: undefined,\r\n            draggingStart: false\r\n        }\r\n    }\r\n\r\n    updateRect = (rect, group) => {\r\n        this.setState({rect, group});\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n        this.resizing = true;\r\n\r\n        this.setState({draggingStart: true});\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStart(e, dir, delta, true);\r\n        });\r\n\r\n        let {rect} = this.state;\r\n        this.resizeData = {\r\n            firstX: window.innerWidth - rect.left - rect.right,\r\n            firstY: window.innerHeight - rect.top - rect.bottom,\r\n            firstTop: rect.top,\r\n            firstLeft: rect.left,\r\n        };\r\n    };\r\n\r\n    onResize = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResize(e, dir, delta, true);\r\n        });\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n        delete rect.height;\r\n        delete rect.width;\r\n\r\n        let deltaY = delta.y;\r\n        let deltaX = delta.x;\r\n        if (dir.includes('n')) {\r\n            if (this.resizeData.firstY <= deltaY)\r\n                deltaY = this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY - deltaY;\r\n            rect.top = this.resizeData.firstTop + deltaY;\r\n        }\r\n        if (dir.includes('s')) {\r\n            if (this.resizeData.firstY <= -deltaY)\r\n                deltaY = -this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY + deltaY;\r\n        }\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= -deltaX)\r\n                deltaX = -this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX + deltaX;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= deltaX)\r\n                deltaX = this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX - deltaX;\r\n            rect.left = this.resizeData.firstLeft + deltaX;\r\n        }\r\n\r\n        if (rect.height)\r\n            rect.bottom = window.innerWidth - rect.top - rect.height;\r\n        if (rect.width)\r\n        rect.right = window.innerWidth - rect.left - rect.width;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStop(e, dir, delta, true);\r\n        });\r\n\r\n        this.resizing = false;\r\n\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStart(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let {rect} = this.state;\r\n\r\n        this.dragData = {\r\n            x: rect.left,\r\n            y: rect.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDrag(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let deltaX = (e.clientX - this.dragData.lastMouseX);\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.x += deltaX;\r\n        this.dragData.y += deltaY;\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n\r\n        rect.top = this.dragData.y;\r\n        rect.left = this.dragData.x;\r\n        rect.right -= deltaX;\r\n        rect.bottom -= deltaY;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStop(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    render () {\r\n        let {rect} = this.state;\r\n        if (!rect)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGroupRect\"\r\n                style={rect}\r\n                className=\"AdjustmentResizeRoot\"\r\n            >\r\n                {\r\n                    ['n','s','e','w','ne','nw','se','sw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.onResizeStart}\r\n                            onResize={this.onResize}\r\n                            onResizeStop={this.onResizeStop}\r\n                            draggingStart={this.state.draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n\r\n                {/*<AdjustmentMove*/}\r\n                    {/*key={`${this.props.id}_move`}*/}\r\n                    {/*onDragStart={this.onDragStart}*/}\r\n                    {/*onDrag={this.onDrag}*/}\r\n                    {/*onDragStop={this.onDragStop}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\n\r\nexport default class RightClick extends React.Component {\r\n    onClick = (e) => {\r\n        this.props.onClick && this.props.onClick(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/more.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\n\r\nexport default class MiniMenuVerticalDivider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MiniMenuVerticalDivider\"/>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport '../../../HelperStyle.css';\r\n\r\nexport default class Help extends React.Component {\r\n    onClick = (e) => {\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/question.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\nimport RightClick from \"./Components/RightClick\";\r\nimport MiniMenuVerticalDivider from \"./MiniMenuVerticalDivider\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Help from \"./Components/Help\";\r\nimport {isHideInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nconst miniMenuId = \"wl_mini_menu\";\r\nexport default class MiniMenu extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            clear: true\r\n        };\r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({clear: true});\r\n    };\r\n\r\n    update = (itemId, shortcut, primary, item) => {\r\n        this.setState({\r\n            itemId\r\n            , shortcut, primary, clear: false,\r\n            item\r\n        })\r\n    };\r\n\r\n    getAnchor = () => {\r\n        return document.getElementById(`${this.state.itemId}_child_holder`) ||\r\n            document.getElementById(this.state.itemId);\r\n    };\r\n\r\n    render () {\r\n        if (this.state.clear)\r\n            return null;\r\n        if (!this.state.itemId || !this.getAnchor() ||\r\n            isHideInBreakpoint(this.state.item))\r\n            return null;\r\n        return (\r\n            <Popper\r\n                key={\"miniMenu\"}\r\n                open={true}\r\n                anchorEl={this.getAnchor()}\r\n                placement=\"bottom-start\"\r\n                style={{\r\n                    zIndex: 9999999\r\n                }}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'scrollParent',\r\n                    },\r\n                }}\r\n            >\r\n                <div className=\"MiniMenuRoot\"\r\n                     id={miniMenuId}\r\n                     style={{\r\n                        opacity:  !this.state.clear? 1: 0\r\n                     }}\r\n                >\r\n                    <div className=\"MiniMenuContainer\"\r\n                    >\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.shortcut.map(option => {\r\n                                return option;\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.shortcut.length > 0 && <MiniMenuVerticalDivider/>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.primary.map(option => {\r\n                                return option;\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.primary.length > 0 && <MiniMenuVerticalDivider/>\r\n                        }\r\n\r\n                        <Help/>\r\n                        <RightClick/>\r\n                    </div>\r\n                </div>\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Menu.css';\r\nimport MiniMenu from \"./MiniMenu/MiniMenu\";\r\nimport {createContextMenu} from \"../AwesomwGridLayoutHelper\";\r\n\r\nconst miniMenuHolderId = \"wl_menu_holder\";\r\nexport default class MenuHolder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n\r\n        this.miniMenuRef = React.createRef();\r\n    }\r\n\r\n    clearMiniMenu = () => {\r\n        this.state.active && this.miniMenuRef.current.clear();\r\n    };\r\n\r\n    addMiniMenu = (item) => {\r\n        if (item && this.state.active)\r\n            this.miniMenuRef.current.update(\r\n                item.props.id,\r\n                item.getShortcutOptions() || [],\r\n                item.getPrimaryOptions() || [],\r\n                item\r\n        );\r\n    };\r\n\r\n    addMenu = (menu) => {\r\n        this.setState({\r\n            menu: undefined,\r\n        });\r\n        if (menu) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    menu,\r\n                });\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    onContextMenu = (e, item) => {\r\n        this.setState({\r\n            contextMenu: createContextMenu(e, item, () => {\r\n                this.setState({contextMenu: undefined})\r\n            })\r\n        });\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id={miniMenuHolderId}\r\n                key={miniMenuHolderId}\r\n                className=\"MenuHolderRoot\"\r\n            >\r\n                <MiniMenu\r\n                    itemId={this.state.miniMenuItem && this.state.miniMenuItem.props.id}\r\n                    key={\"miniMenu\"}\r\n                    ref={this.miniMenuRef}\r\n                />\r\n                {\r\n                    !this.state.contextMenu &&\r\n                    this.state.menu\r\n                }\r\n                {\r\n                    this.state.contextMenu\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default class IFrameCommunicator {\r\n    constructor(origin, authKey, otherWindow, onMessage) {\r\n        this.onMessage = onMessage;\r\n        this.origin = origin;\r\n        this.otherWindow = otherWindow;\r\n        this.counter = 0;\r\n        this.authKey = authKey;\r\n        this.callbacks = {};\r\n        this.responses = {};\r\n\r\n        window.addEventListener(\"message\", (event) => {\r\n            console.log(\"message\", event);\r\n            if (this.origin && event.origin !== this.origin) {\r\n                return;\r\n            }\r\n\r\n            this.processIncomingMessage(event);\r\n        });\r\n    }\r\n\r\n    processIncomingMessage = (event) => {\r\n        let data = event.data;\r\n\r\n        if (!data || data.authKey !== this.authKey)\r\n            return;\r\n\r\n        if (data && data.r) {\r\n            let r = data.r;\r\n            this.callbacks[r](data);\r\n            delete this.callbacks[r];\r\n        }\r\n        else\r\n        {\r\n            let responseFunc = () => {};\r\n            if (data && data.c) {\r\n                let c = data.c;\r\n                responseFunc = this.responses[c] = (result) => {\r\n                    let newData = {r: c, result};\r\n                    this.post(newData);\r\n                }\r\n            }\r\n\r\n            this.onMessage(event.data, responseFunc);\r\n        }\r\n    };\r\n\r\n    post = (data, callback) => {\r\n        if (callback) {\r\n            this.counter++;\r\n            data.c = this.counter;\r\n            this.callbacks[data.c] = callback;\r\n        }\r\n\r\n        data.authKey = this.authKey;\r\n\r\n        let otherWindow = typeof(this.otherWindow) === 'function' ? this.otherWindow() : this.otherWindow;\r\n\r\n        otherWindow.postMessage(data, this.origin || \"*\");\r\n    };\r\n}\r\n","let EditorController = {};\r\nlet AllowFunctions = {};\r\n\r\nEditorController.onMessage = (data, res, editor) => {\r\n    if (data.type === 'Controller' && AllowFunctions[data.func]) {\r\n        res(AllowFunctions[data.func](...data.inputs, editor));\r\n        return;\r\n    }\r\n\r\n    if (data.type === 'Editor' && editor[data.func]) {\r\n        editor[data.func](...data.inputs, res);\r\n        return;\r\n    }\r\n};\r\n//\r\n// // TODO GET functions\r\n// AllowFunctions.getItemGridData = (itemId, editor) => {\r\n//     return editor.idMan.getItem(itemId).props.griddata;\r\n// };\r\n// AllowFunctions.getLayout = (editor) => {\r\n//     let layout = {\r\n//         id: editor.rootLayoutRef.current.props.id,\r\n//         griddata: editor.rootLayoutRef.current.props.griddata,\r\n//         children: []\r\n//     };\r\n//     let fillData = (item, parent) => {\r\n//         parent[item.props.id] = {\r\n//             id: item.props.id,\r\n//             griddata: item.props.griddata,\r\n//             children: []\r\n//         };\r\n//\r\n//         Object.values(item.allChildRefs).forEach(child => {\r\n//             if (child && child.current)\r\n//                 fillData(child.current, parent[item.props.id].children);\r\n//         });\r\n//     };\r\n//\r\n//     fillData(editor.rootLayoutRef.current, layout.children);\r\n//\r\n//     return layout;\r\n// };\r\n// AllowFunctions.getSiteData = (editor) => {\r\n//     return editor.state.siteData;\r\n// };\r\n// AllowFunctions.getBreakpointsData = (itemId, editor) => {\r\n//     let item = editor.idMan.getItem(itemId);\r\n//     return {\r\n//         breakpoints: item.props.breakpointmanager.breakpoints,\r\n//         currentWidth: item.props.breakpointmanager.lastWidth\r\n//     }\r\n// };\r\n//\r\n// // TODO POST functions\r\n// AllowFunctions.changePage = (pageId, editor) => {\r\n//     editor.onPageChange(pageId);\r\n//     return true;\r\n// };\r\n// AllowFunctions.addItem = (parentId, childData, gridItemStyle, style, editor) => {\r\n//     createItem(editor.idMan.getItem(parentId), childData, false, gridItemStyle, style);\r\n//     return true;\r\n// };\r\n//\r\n// AllowFunctions.undoRedoMethod = (method, inputs, editor) => {\r\n//     editor.undoredo[method](inputs);\r\n//     return true;\r\n// };\r\n// AllowFunctions.togglePreview = (preview, editor) => {\r\n//     editor.togglePreview(preview);\r\n//     return true;\r\n// };\r\n// AllowFunctions.setZoomLevel = (zoomLevel, editor) => {\r\n//     editor.setZoomLevel(zoomLevel);\r\n//     return true;\r\n// };\r\n//\r\n// // TODO Edit functions\r\n// AllowFunctions.setDataInBackground = (itemId, prop, value, editor) => {\r\n//     let item = editor.idMan.getItem(itemId);\r\n//     setDataInBreakpoint(prop, value, item, true);\r\n//     return item.props.griddata;\r\n// };\r\n\r\nexport default EditorController;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Inspector extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open? 100: 0,\r\n            inspectorMenu: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        if (this.context.inspectorPinned) {\r\n            this.props.pinInspector();\r\n            this.close(force);\r\n            return;\r\n        }\r\n\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setMenu = (inspectorMenu) => {\r\n        this.setState({inspectorMenu});\r\n    };\r\n\r\n    getDefaultMenu = () => {\r\n        return <div\r\n            className=\"InspectorDefaultMenuRoot\"\r\n        >\r\n            <span>\r\n                Select a component to show options\r\n            </span>\r\n        </div>\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"InspectorRoot\"\r\n                    style={{...\r\n                        !this.context.inspectorPinned ? {\r\n                            right: `${this.state.percent - 100}%`,\r\n                            opacity: this.state.percent / 100\r\n                        } : {right: \"0%\", opacity: 1},\r\n                        ...{\r\n                        }}\r\n                    }\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div style={{\r\n                    }}>\r\n                    <div className=\"InspectorPin\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginLeft: 0,\r\n                                borderRadius: \"50%\",\r\n                                backgroundColor: this.context.inspectorPinned && \"#8d8d8d\"\r\n                            }}\r\n                            onClick={(e) => {\r\n                                this.props.pinInspector();\r\n                            }}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={12}\r\n                                height={12}\r\n                                src={this.context.inspectorPinned ?\r\n                                    '/static/icon/pin-white.svg':\r\n                                        '/static/icon/pin.svg'}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n                    {\r\n                        this.state.inspectorMenu || this.getDefaultMenu()\r\n                    }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.context.inspectorPinned &&\r\n\r\n                    <div\r\n                        className=\"InspectorPinRoot\"\r\n                    >\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspector.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport {stretch} from \"../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AdjustmentStretch extends React.Component {\r\n    onClick = (e) => {\r\n        let {itemId, idMan} = this.props;\r\n        stretch(idMan.getItem(itemId));\r\n    };\r\n\r\n    onMouseDown = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        let {isStretch} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                className=\"AdjustmentStretchRoot\"\r\n                onPointerDown={this.onMouseDown}\r\n                onClick={this.onClick}\r\n                style={this.props.style}\r\n            >\r\n                {\r\n                    isStretch && <img draggable={false} width={16} height={16} src={require('./icons/minimize.svg')} />\r\n                }\r\n                {\r\n                    !isStretch && <img draggable={false} width={16} height={16} src={require('./icons/maximize.svg')} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport AdjustmentStretch from \"./AdjustmentStretch\";\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentResize extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(nextProps.data, this.data))\r\n            return true;\r\n\r\n        if (!shallowEqual(nextProps, this.props))\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    render () {\r\n        let {data, allowStretch, idMan, itemId, isStretch, draggingStart, transformStyleId, item} = this.props;\r\n        this.data = cloneObject(data);\r\n        let stretchStyle = {};\r\n        if (!allowStretch) stretchStyle.display = \"none\";\r\n\r\n        let classes = classNames(\r\n            \"AdjustmentResizeRoot\",\r\n            transformStyleId\r\n        );\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                style={{\r\n                    width: data.width,\r\n                    height: data.height,\r\n                    top: data.top,\r\n                    left: data.left,\r\n                    // transform: transform\r\n                }}\r\n                className={classes}\r\n            >\r\n                {\r\n                    !isStretch &&\r\n                    ['s','n','e','w','se','ne','sw','nw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            enabled={this.props.sides.includes(side)}\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.props.onResizeStart}\r\n                            onResize={this.props.onResize}\r\n                            onResizeStop={this.props.onResizeStop}\r\n                            draggingStart={draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n                {\r\n                    !(item.getCompositeFromData(\"transform\") || {}).rotateDegree &&\r\n                    <AdjustmentStretch\r\n                        style={stretchStyle}\r\n                        isStretch={isStretch}\r\n                        idMan={idMan}\r\n                        itemId={itemId}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {allowStretch, isGroupSelected, isHideInBreakpoint, isStretch} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentResize from \"./AdjustmentResize\";\r\n\r\nexport default class AdjustmentResizeWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n    }\r\n\r\n    update = (item, data, transformStyleId) => {\r\n        this.setState({item, data, transformStyleId});\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, data} = this.state;\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    item.getFromTempData(\"resizable\") &&\r\n                    !item.state.showAnimation &&\r\n                    !isGroupSelected(item) &&\r\n                    !isHideInBreakpoint(item) &&\r\n                    <AdjustmentResize\r\n                        id={item.props.id}\r\n                        key={`resize`}\r\n                        sides={item.props.resizeSides || ['n','s','e','w','ne','nw','se','sw']}\r\n                        onResizeStart={item.onResizeStart}\r\n                        onResize={item.onResize}\r\n                        onResizeStop={item.onResizeStop}\r\n                        draggingStart={item.state.draggingStart}\r\n                        isStretch={isStretch(item)}\r\n                        allowStretch={allowStretch(item)}\r\n                        itemId={item.props.id}\r\n                        item={item}\r\n                        idMan={item.props.idMan}\r\n                        transformStyleId={this.state.transformStyleId}\r\n                        data={data}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentHelpLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.helpLinesParent) {\r\n            let newParentRect = nextProps.helpLinesParent.getSize(false);\r\n\r\n            if (!shallowEqual(this.parentRect, cloneObject(newParentRect))) {\r\n                this.parentRect = newParentRect;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.props.width !== nextProps.width ||\r\n            this.props.height !== nextProps.height ||\r\n            this.props.show !== nextProps.show ||\r\n            this.props.dragging !== nextProps.dragging)\r\n            return true;\r\n\r\n        if (!shallowEqual(this.props.itemRect, nextProps.itemRect)) {\r\n            return true;\r\n        }\r\n        if (!shallowEqual(this.props.fakeItemRect, nextProps.fakeItemRect)) {\r\n            return true;\r\n        }\r\n        if (!shallowEqual(nextProps.item.getCompositeFromData(\"gridItemStyle\"), this.gridItemStyle)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getValue = (value) => {\r\n        if (value.includes(\"px\")) {\r\n            return `${parseFloat(value.replace(\"px\", \"\")).toFixed(1)}px`;\r\n        }\r\n        if (value.includes(\"%\")) {\r\n            return `${parseFloat(value.replace(\"%\", \"\")).toFixed(1)}%`;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    calculate = () => {\r\n        let {helpLinesParent, item, itemRect, width, height, dragging, fakeItemRect} = this.props;\r\n        // this.parentRect = this.parentRect || helpLinesParent.getSize(false);\r\n        this.parentRect = helpLinesParent.prepareRects();\r\n\r\n        if (fakeItemRect)\r\n            itemRect = fakeItemRect;\r\n        return {\r\n            ...item.calculateGridItem(itemRect.left - this.parentRect.left,\r\n                itemRect.top - this.parentRect.top, helpLinesParent,\r\n                width || itemRect.width, height || itemRect.height, this.parentRect, true, !dragging),\r\n            itemRect, parentRect: this.parentRect\r\n        };\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        return this.gridItemStyle;\r\n    };\r\n\r\n    render () {\r\n        let {show, item, transform, fakeItemRect} = this.props;\r\n        if (!show)\r\n            return null;\r\n\r\n        if (!item.mounted)\r\n            return null;\r\n\r\n        let {gridItemStyle, coordinates, itemRect, parentRect, coordinatesAbs} = this.calculate();\r\n        this.gridItemStyle = cloneObject(gridItemStyle);\r\n        if (fakeItemRect)\r\n            itemRect = fakeItemRect;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentHelpLinesRoot\"\r\n                style={{\r\n                    width: coordinatesAbs.cx2 - coordinatesAbs.cx1,\r\n                    height: coordinatesAbs.cy2 - coordinatesAbs.cy1,\r\n                    top: coordinatesAbs.cy1,\r\n                    left: coordinatesAbs.cx1,\r\n                }}\r\n            >\r\n                <div className=\"AdjustmentHelpLinesRect\" style={{\r\n                    top: itemRect.top - coordinatesAbs.cy1,\r\n                    left: itemRect.left - coordinatesAbs.cx1,\r\n                    width: itemRect.width,\r\n                    height: itemRect.height\r\n                }}/>\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&*/\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\")? \"visible\": \"hidden\"}\r\n                            x1={0}\r\n                            x2={itemRect.left - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&\r\n                        !this.props.dragging &&*/\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                !this.props.dragging)? \"visible\" : \"hidden\"}\r\n                            cx={0}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width}\r\n                            x2={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={0}\r\n                            y2={itemRect.top - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={0}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height}\r\n                            y2={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                </svg>\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-start\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                        left: (itemRect.left - coordinatesAbs.cx1) / 2,\r\n                        transform: \"translateY(-125%) translateX(-50%)\",\r\n                        margin: 0,\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#0013ff\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    >\r\n                            {this.getValue(gridItemStyle.marginLeft)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                            right: (coordinatesAbs.cx2 - itemRect.left - itemRect.width) / 2,\r\n                            transform: \"translateY(-125%) translateX(50%)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginRight)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: (itemRect.top - coordinatesAbs.cy1) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(-50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginTop)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            bottom: (coordinatesAbs.cy2 - itemRect.top - itemRect.height) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginBottom)}\r\n                    </p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {isGroupSelected, isHideInBreakpoint} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentHelpLines from \"./AdjustmentHelpLines\";\r\n\r\nexport default class AdjustmentHelpLinesWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n\r\n        this.helpLineRef = React.createRef();\r\n    }\r\n\r\n    update = (item, helpLineParent, itemRect, dragging, fakeItemRect) => {\r\n        this.setState({item, itemRect, dragging, fakeItemRect});\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        if (this.helpLineRef.current)\r\n            return this.helpLineRef.current.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, itemRect, dragging, fakeItemRect} = this.state;\r\n        return (\r\n            <>\r\n                {\r\n                    !item.state.showAnimation &&\r\n                    !isHideInBreakpoint(item) &&\r\n                    <AdjustmentHelpLines\r\n                        ref={this.helpLineRef}\r\n                        show={!item.props.helplineOff /*&& item.state.selected*/ &&\r\n                        item.state.helpLinesParent && !item.getFromTempData(\"pageResize\") &&\r\n                        !isGroupSelected(item)}\r\n                        helpLinesParent={item.state.helpLinesParent}\r\n                        item={item}\r\n                        dragging={dragging}\r\n                        itemRect={itemRect}\r\n                        fakeItemRect={fakeItemRect}\r\n                        width={itemRect.width}\r\n                        height={itemRect.height}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\n\r\nexport default class AdjustmentHover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n    }\r\n\r\n    update = (item, size, clear) => {\r\n        if (!clear)\r\n            if (!item.state.selected)\r\n                this.setState({item, size, itemId: item.props.id});\r\n            else\r\n                this.setState({item, size, itemId: undefined});\r\n        else {\r\n            if (this.state.itemId === item.props.id) {\r\n                this.setState({item, size, itemId: undefined});\r\n            }\r\n        }\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.itemId)\r\n            return null;\r\n        return (\r\n            <Popper\r\n                open={true}\r\n                anchorEl={document.getElementById(this.state.itemId)}\r\n                placement=\"top-start\"\r\n                style={{\r\n                    zIndex: 9999999,\r\n                    pointerEvents: \"none\"\r\n                }}\r\n                disablePortal={false}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: false\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: false,\r\n                    },\r\n                    hide: {\r\n                        enabled: false,\r\n                    },\r\n                }}\r\n            >\r\n                {\r\n                    this.state.itemId ?\r\n                        <div\r\n                            className=\"AwesomeGridLayoutRootHover\"\r\n                            key={`hover`}\r\n                            style={{\r\n                                width: this.state.size ? this.state.size.width : 0,\r\n                                height: this.state.size ? this.state.size.height : 0,\r\n                            }}\r\n                        >\r\n                            <span className=\"AGLHoverCompName\">\r\n                                {this.state.item.props.tagName}\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                }\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Layout.css';\r\n// import SortableTree from 'react-sortable-tree';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n// import {isHideInBreakpoint, showInBreakPoint} from \"../../AwesomwGridLayoutHelper\";\r\n// import Image from \"../../Menus/CommonComponents/Image\";\r\n\r\nexport default class Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            treeData: []\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent > 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent, open: (percent === 100)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = () => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent < 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent, open: (percent !== 0)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    setLayout = (layout) => {\r\n        this.processLayout(layout)\r\n    };\r\n\r\n    processLayout = (layout) => {\r\n        if (!layout)\r\n            return;\r\n\r\n        let {idMan} = this.props;\r\n\r\n        let getTreeItem = (layoutItem) => {\r\n            let item = idMan.getItem(layoutItem.childData.props.id);\r\n            return {\r\n                title: layoutItem.childData.tagName,\r\n                layoutItem: layoutItem,\r\n                children: layoutItem.childrenData.map(childLayout => {\r\n                    return getTreeItem(childLayout);\r\n                }),\r\n                expanded: item.getFromTempData(\"layoutTreeExpanded\"),\r\n                parentItemId: item.props.parent && item.props.parent.props.id\r\n            };\r\n        };\r\n\r\n        this.setState({\r\n            treeData: [getTreeItem(layout[0])]\r\n        });\r\n    };\r\n\r\n    setTree = (treeData) => {\r\n        let {idMan} = this.props;\r\n        let updateItem = (treeItem) => {\r\n            let item = idMan.getItem(treeItem.layoutItem.childData.props.id);\r\n            item.setTempData(\"layoutTreeExpanded\", treeItem.expanded);\r\n            treeItem.children.forEach((childTreeItem, index) => {\r\n                item.setChildZIndex(childTreeItem.layoutItem.childData.props.id, index + 1);\r\n            });\r\n            item.updateLayout();\r\n            treeItem.children.map(childTreeItem => {\r\n                updateItem(childTreeItem);\r\n            });\r\n        };\r\n\r\n        updateItem(treeData[0]);\r\n\r\n        this.setState({treeData});\r\n    };\r\n\r\n    render() {\r\n        let {idMan} = this.props;\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"LayoutRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"LayoutTreeRootHeader\"\r\n                    >\r\n                        {/*Header*/}\r\n                        <div\r\n                            className=\"LayoutTreeRootHeaderContainer\"\r\n                        >\r\n                            <span className=\"LayoutTreeRootHeaderTitle\">\r\n                                Layers\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.close}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"LayoutTreeRoot\"\r\n                    >\r\n                        Coming soon ...\r\n                        {/*<SortableTree\r\n                            className=\"LayoutSortableTree\"\r\n                            treeData={this.state.treeData}\r\n                            onChange={treeData => this.setTree(treeData)}\r\n                            innerStyle={{\r\n                                outline: 'none',\r\n                            }}\r\n                            generateNodeProps={rowInfo => {\r\n                                let layoutItem = rowInfo.node.layoutItem; // {tagName, childData, childrenData}\r\n                                let item = idMan.getItem(layoutItem.childData.props.id);\r\n                                let rowWrapperStyle = {};\r\n                                if (item.state.selected)\r\n                                    rowWrapperStyle.backgroundColor = \"#e4ffea\";\r\n\r\n                                let buttons = [\r\n                                    <IconButton\r\n                                        key={\"rightClick\"}\r\n                                        onClick={(e) => {\r\n                                            item.onContextMenu(e);\r\n                                        }}\r\n                                        imageContainerStyle={{\r\n                                            padding: 4\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={16}\r\n                                            height={16}\r\n                                            src={'static/icon/more-black.svg'}\r\n                                        />\r\n                                    </IconButton>\r\n                                ];\r\n                                if (isHideInBreakpoint(item)) {\r\n                                    buttons.unshift(\r\n                                        <IconButton\r\n                                            key={\"hidedInBp\"}\r\n                                            onClick={(e) => {\r\n                                                showInBreakPoint(item);\r\n                                            }}\r\n                                            imageContainerStyle={{\r\n                                                padding: 4\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                draggable={false}\r\n                                                width={16}\r\n                                                height={16}\r\n                                                src={'static/icon/hide.svg'}\r\n                                            />\r\n                                        </IconButton>\r\n                                    )\r\n                                }\r\n\r\n                                return ({\r\n                                    rowWrapperStyle: rowWrapperStyle,\r\n                                    onClick: (e) => {\r\n                                        let eClass = e.target.getAttribute(\"class\");\r\n                                        if (eClass !== \"expandButton\" && eClass !== \"collapseButton\")\r\n                                            item.onSelect(true, undefined, undefined, true);\r\n                                    },\r\n                                    icons: [\r\n                                        <Image\r\n                                            draggable={false}\r\n                                            width={16}\r\n                                            height={16}\r\n                                            src={item.props.favIconUrl}\r\n                                            style={{\r\n                                                marginTop: 2\r\n                                            }}\r\n                                            errorsrc={'/static/icon/rectangle.svg'}\r\n                                        />\r\n                                    ],\r\n                                    buttons: buttons,\r\n                                })\r\n                            }}\r\n                            canDrag={({ node, path, treeIndex, lowerSiblingCounts, isSearchMatch,\r\n                                          isSearchFocus}) => {\r\n                                let item = idMan.getItem(node.layoutItem.childData.props.id);\r\n                                return !item.props.isPage && !item.props.isSection;\r\n                            }}\r\n                            canDrop={({ node, nextParent, prevPath, nextPath }) => {\r\n                                return !!(nextParent && node.parentItemId === nextParent.layoutItem.childData.props.id);\r\n                            }}\r\n                        />*/}\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nLayout.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './AddComponent.css';\r\nimport {createItem, sortBy} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class ComponentGrid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.rootRef = React.createRef();\r\n    }\r\n\r\n    getItemStyle = (item) => {\r\n        let rootWidth = this.rootRef.current?\r\n            this.rootRef.current.getBoundingClientRect().width - 24: 400 - 24;\r\n\r\n        return {\r\n            width: rootWidth / (item.widthRatio || 2),\r\n            // height: rootWidth / (item.widthRatio || 2) / (item.aspectRatio || 2)\r\n            height: \"fit-content\"\r\n        };\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setDraggingItem = (draggingItem, e) => {\r\n        e.persist();\r\n        this.setState({draggingItem});\r\n\r\n        clearTimeout(this.closingTimeOut);\r\n        this.closingTimeOut = setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            if (this.state.draggingItem) {\r\n                this.props.closeMenu(true);\r\n                this.createItemAndDrag(this.state.draggingItem, e);\r\n            }\r\n        }, 200);\r\n    };\r\n\r\n    createItemAndDrag = (item, e) => {\r\n        let {pageRef, editor} = this.props;\r\n        let selectedItem = editor.select.getSelected();\r\n\r\n        createItem(pageRef.current, {\r\n            tagName: item.tagName,\r\n            props: cloneObject(item.presetProps)\r\n        }, undefined, undefined, undefined, (agl) => {\r\n            console.log(\"mouseDown\", agl.props.input.mouseDown);\r\n            if (agl.props.input.mouseDown)\r\n                window.requestAnimationFrame(() => {\r\n                    agl.onMouseDown(e, true);\r\n                });\r\n            else\r\n                window.requestAnimationFrame(() => {\r\n                    this.changeItemParent(agl, selectedItem);\r\n                });\r\n        });\r\n    };\r\n\r\n    changeItemParent = (agl, selectedItem) => {\r\n        let size = agl.getSize(false);\r\n\r\n        if (!selectedItem || selectedItem.props.isPage)\r\n            selectedItem = this.props.editor.rootLayoutRef.current.props.aglComponent.getSectionOfPoint(\r\n                size.left, size.top, size.width, size.height\r\n            );\r\n\r\n        let newGridItemStyle = {\r\n            alignSelf: \"center\",\r\n            justifySelf: \"center\",\r\n            position: \"relative\",\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            gridArea: \"1/1/2/2\",\r\n        };\r\n\r\n        agl.props.dragdrop.dropItem(agl, agl.props.parent, selectedItem, (newItem) => {\r\n            newItem.setGridItemStyle(newGridItemStyle, newItem.props.breakpointmanager.getHighestBpName());\r\n        });\r\n    };\r\n\r\n    createItem = (item, e) => {\r\n        this.props.closeMenu(true);\r\n        let {pageRef, editor} = this.props;\r\n        let selectedItem = editor.select.getSelected();\r\n\r\n        createItem(pageRef.current, {\r\n            tagName: item.tagName,\r\n            props: cloneObject(item.presetProps)\r\n        }, undefined, undefined, undefined, (agl) => {\r\n            window.requestAnimationFrame(() => {\r\n                this.changeItemParent(agl, selectedItem);\r\n            });\r\n        });\r\n    };\r\n\r\n    setDraggingEnd = () => {\r\n        this.setState({draggingItem: undefined});\r\n    };\r\n\r\n    render() {\r\n        let {allItems, id} = this.props;\r\n        if (!allItems)\r\n            return null;\r\n\r\n        return (\r\n            <React.Fragment key={id}>\r\n                <div\r\n                    className=\"AddComponentItemGrid\"\r\n                    ref={this.rootRef}\r\n                    key={id}\r\n                >\r\n                    {\r\n                        sortBy(allItems, \"order\").map((item, index) => {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <div\r\n                                        className=\"AddComponentItemGridItem\"\r\n                                        style={this.getItemStyle(item)}\r\n                                        onDragStart={(e) => {\r\n                                            this.setDraggingItem(item, e);\r\n                                        }}\r\n                                        onDragEnd={(e) => {\r\n                                            this.setDraggingEnd();\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.createItem(item, e);\r\n                                        }}\r\n                                        draggable\r\n                                    >\r\n                                        <img\r\n                                            className=\"AddComponentItemGridItemImage\"\r\n                                            src={item.imageUrl || '/static/image/box.webp'}\r\n                                            width={\"100%\"}\r\n                                            draggable={false}\r\n                                        />\r\n                                        {\r\n                                            item.label &&\r\n                                            <div\r\n                                                className=\"AddComponentItemGridItemLabel\"\r\n                                            >\r\n                                                {item.label}\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AddComponent.css';\r\nimport ComponentGrid from \"./ComponentGrid\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\nimport debounce from 'lodash.debounce';\r\nimport {sortBy} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AddComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            componentListItem: undefined,\r\n            componentSubListItem: undefined,\r\n            componentListItemHover: undefined,\r\n            componentSubListItemHover: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setComponentListItemDebounce = debounce((componentListItem) => {\r\n        this.setComponentListItem(componentListItem);\r\n    }, 500);\r\n\r\n    setComponentListItemLeave = (componentListItem) => {\r\n        if (this.state.componentListItemHover === componentListItem) {\r\n            this.setState({componentListItemHover: undefined});\r\n        }\r\n    };\r\n\r\n    setComponentListItem = (componentListItem) => {\r\n        if (componentListItem !== this.state.componentListItem &&\r\n            componentListItem === this.state.componentListItemHover)\r\n            this.setState({componentListItem,\r\n                componentSubListItem: componentListItem.subList && Object.values(componentListItem.subList)[0]?\r\n                    Object.values(componentListItem.subList)[0][0]: undefined\r\n            });\r\n    };\r\n\r\n    setComponentSubListItemDebounce = debounce((componentSubListItem) => {\r\n        this.setComponentSubListItem(componentSubListItem);\r\n    }, 500);\r\n\r\n    setComponentSubListItemLeave = (componentSubListItem) => {\r\n        if (this.state.componentSubListItemHover === componentSubListItem) {\r\n            this.setState({componentSubListItemHover: undefined});\r\n        }\r\n    };\r\n\r\n    setComponentSubListItem = (componentSubListItem) => {\r\n        if (componentSubListItem !== this.state.componentSubListItem &&\r\n            componentSubListItem.listName === this.state.componentListItem.name &&\r\n            componentSubListItem === this.state.componentSubListItemHover)\r\n            this.setState({componentSubListItem});\r\n    };\r\n\r\n    render() {\r\n        let {allComponentData} = this.props;\r\n        if (!allComponentData)\r\n            return null;\r\n\r\n        let allItems;\r\n        if (this.state.componentListItem && this.state.componentListItem.allItems)\r\n            allItems = this.state.componentListItem.allItems;\r\n        if (this.state.componentSubListItem && this.state.componentSubListItem.allItems)\r\n            allItems = this.state.componentSubListItem.allItems;\r\n\r\n        if (!this.state.componentListItem)\r\n            allItems = undefined;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"AddComponentRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"AddComponentList\"\r\n                    >\r\n                        {\r\n                            sortBy(Object.values(allComponentData.builtin), \"order\").map(componentListItem => {\r\n                                let style = {};\r\n                                if (componentListItem === this.state.componentListItem)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={componentListItem.name}\r\n                                        className=\"AddComponentListItem\"\r\n                                        onMouseEnter={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setComponentListItem(componentListItem);\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            this.setComponentListItemLeave(componentListItem);\r\n                                        }}\r\n                                        style={style}\r\n                                    >\r\n                                        {componentListItem.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <Divider/>\r\n                        {\r\n                            sortBy(Object.values(allComponentData.apps), \"order\").map(componentListItem => {\r\n                                let style = {};\r\n                                if (componentListItem === this.state.componentListItem)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={componentListItem.name}\r\n                                        className=\"AddComponentListItem\"\r\n                                        onMouseEnter={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setComponentListItem(componentListItem);\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            this.setComponentListItemLeave(componentListItem);\r\n                                        }}\r\n                                        style={style}\r\n                                    >\r\n                                        {componentListItem.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.componentListItem &&\r\n                        this.state.componentListItem.subList &&\r\n                        <div\r\n                            className=\"AddComponentSubList\"\r\n                        >\r\n                            {\r\n                                sortBy(Object.keys(allComponentData.builtin[this.state.componentListItem.name].subList), \"order\")\r\n                                    .map(groupName => {\r\n                                        let componentSubListItems =\r\n                                            allComponentData.builtin[this.state.componentListItem.name].subList[groupName];\r\n                                        return (\r\n                                            <React.Fragment key={groupName}>\r\n                                                <div\r\n                                                    key={groupName}\r\n                                                    className=\"AddComponentSubListGroup\"\r\n                                                >\r\n                                                    {groupName}\r\n                                                </div>\r\n                                                {\r\n                                                    sortBy(componentSubListItems, \"order\").map(componentSubListItem => {\r\n                                                        let style = {};\r\n                                                        if (componentSubListItem === this.state.componentSubListItem)\r\n                                                            style.backgroundColor = \"#e5ffff\";\r\n                                                        return (\r\n                                                            <div\r\n                                                                key={componentSubListItem.name}\r\n                                                                className=\"AddComponentSubListItem\"\r\n                                                                onMouseEnter={(e) => {\r\n                                                                    this.setState({componentSubListItemHover: componentSubListItem});\r\n                                                                    this.setComponentSubListItemDebounce(componentSubListItem);\r\n                                                                }}\r\n                                                                onMouseOver={(e) => {\r\n                                                                    this.setState({componentSubListItemHover: componentSubListItem});\r\n                                                                    this.setComponentSubListItemDebounce(componentSubListItem);\r\n                                                                }}\r\n                                                                onClick={(e) => {\r\n                                                                    this.setComponentSubListItem(componentSubListItem);\r\n                                                                }}\r\n                                                                onMouseOut={(e) => {\r\n                                                                    this.setComponentSubListItemLeave(componentSubListItem);\r\n                                                                }}\r\n                                                                style={style}\r\n                                                            >\r\n                                                                {componentSubListItem.name}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                    <ComponentGrid\r\n                        allItems={allItems}\r\n                        id={this.state.componentSubListItem? this.state.componentSubListItem.name:\r\n                            this.state.componentListItem? this.state.componentListItem.name: null}\r\n                        closeMenu={this.close}\r\n                        pageRef={this.props.pageRef}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nAddComponent.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport './PageTypeTitle.css';\r\n\r\nexport default class PageTypeTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: props.defaultOpen || false\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ButtonBase className=\"PageTypeTitle\" onClick={(e) => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(!this.state.open);\r\n                this.setState({open: !this.state.open});\r\n            }}>\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n\r\n                    <div className=\"PageTypeTitleExpandIcon\">\r\n                        {\r\n                            this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={'/static/icon/down-arrow.svg'} />\r\n                        }\r\n                        {\r\n                            !this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={'/static/icon/right-arrow.svg'} />\r\n                        }\r\n                    </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class PageInfo extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onRename = (e) => {\r\n        this.newPageName = e.target.value;\r\n    };\r\n\r\n    rename = () => {\r\n        let {pageData} = this.props;\r\n\r\n        if (this.newPageName === pageData.props.pageName)\r\n            return;\r\n\r\n        if (!this.newPageName) {\r\n            // TODO show error\r\n            return;\r\n        }\r\n\r\n        pageData.props.pageName = this.newPageName;\r\n        this.newPageName = undefined;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    setAsHomePage = () => {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n\r\n        let home = Object.values(siteData.allPages).find(p => {return p.props.isHome});\r\n\r\n        if (home)\r\n            delete home.props.isHome;\r\n        pageData.props.isHome = true;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's this page's name (on your menu)?\r\n                    </span>\r\n                    <input\r\n                        defaultValue={pageData.props.pageName}\r\n                        className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.onRename}\r\n                        onBlur={this.rename}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.rename()\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        <Image\r\n                            draggable={false}\r\n                            width={16}\r\n                            height={16}\r\n                            src={'/static/icon/home.svg'}\r\n                            style={{\r\n                                marginTop: 2,\r\n                                marginRight: 12\r\n                            }}\r\n                        />\r\n                        {\r\n                            pageData.props.isHome &&\r\n                            \"This page is your home page\"\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            \"Set this page as your home page\"\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            <Button className=\"PageInfoHomePageButton\" variant=\"contained\"\r\n                                onClick={this.setAsHomePage}\r\n                            >\r\n                                Set as Home Page\r\n                            </Button>\r\n                        }\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Radio from \"@material-ui/core/Radio/Radio\";\r\n\r\nconst AglRadio = withStyles((theme) => ({\r\n    root: {\r\n        padding: 6,\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    checked: {\r\n        color: '#137cbd',\r\n    },\r\n}))(Radio);\r\n\r\nexport default AglRadio;\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport GridViewer from \"../../../Menus/CommonComponents/GridViewer\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\r\nimport AglRadio from \"../../../Menus/CommonComponents/AglRadio\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class Permissions extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    changePermission = (type) => (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.type = type;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onSetPassword = (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.password = e.target.value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onChangeMemberType = (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.memberType = e.target.value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onRoleChange = (checked, role) => {\r\n        let {pageData} = this.props;\r\n        if (checked) {\r\n            if (pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role) < 0)\r\n                pageData.props.pageSetting.permissions.memberRoles.push(role);\r\n        } else {\r\n            if (pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role) >= 0) {\r\n                let index = pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role);\r\n                pageData.props.pageSetting.permissions.memberRoles.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Who can view this page?\r\n                    </span>\r\n\r\n                    <GridViewer>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Everyone\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={'/static/icon/world.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Everyone\r\n                            </span>\r\n                        </div>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Password Holder\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Password Holder\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={'/static/icon/password.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Password Holder\r\n                            </span>\r\n                        </div>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Member Only\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Member Only\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={'/static/icon/group.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Member Only\r\n                            </span>\r\n                        </div>\r\n                    </GridViewer>\r\n\r\n                    <span className=\"PermissionsDescription\">\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" &&\r\n                            \"Everyone can see this page\"\r\n                        }\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Password Holder\" &&\r\n                            \"Visitors with a password can see this page\"\r\n                        }\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Member Only\" &&\r\n                            \"Visitors need to sign up to see this page\"\r\n                        }\r\n                    </span>\r\n                </div>\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type === \"Password Holder\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            What's the page's password?\r\n                        </span>\r\n\r\n                        <input\r\n                            defaultValue={pageData.props.pageSetting.permissions.password}\r\n                            className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                            type=\"text\"\r\n                            onChange={this.onSetPassword}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type === \"Member Only\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            Which member can access this page?\r\n                        </span>\r\n\r\n                        <RadioGroup className=\"PermissionsRadioGroup\"\r\n                                    value={pageData.props.pageSetting.permissions.memberType}\r\n                                    onChange={this.onChangeMemberType}\r\n                        >\r\n                            <FormControlLabel\r\n                                value=\"all\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    All members\r\n                                </span>}\r\n                            />\r\n                            <FormControlLabel\r\n                                className=\"PermissionsFormLabel\"\r\n                                value=\"role\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    Members with some role\r\n                                </span>}\r\n                            />\r\n                            <FormControlLabel\r\n                                disabled\r\n                                className=\"PermissionsFormLabel\"\r\n                                value=\"pay\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    Paying customers\r\n                                </span>}\r\n                            />\r\n                        </RadioGroup>\r\n\r\n                        {\r\n                            pageData.props.pageSetting.permissions.memberType === \"role\" &&\r\n                            <div className=\"PageInfoBox\">\r\n                                <span className=\"PageInfoBoxTitle\">\r\n                                    Select from your member roles\r\n                                </span>\r\n\r\n                                <div className=\"PermissionsRolesInput NumberInput PageManagerRenameInput\"\r\n                                    onClick={(e) => {\r\n                                        this.setState({roleAnchor: e.target})\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        pageData.props.pageSetting.permissions.memberRoles.map(role => {\r\n                                            return role;\r\n                                        }).join(\" \")\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            this.state.roleAnchor &&\r\n                            <Menu\r\n                                style={{\r\n                                    zIndex: 99999999999,\r\n                                }}\r\n                                anchorEl={this.state.roleAnchor}\r\n                                open={this.state.roleAnchor !== undefined}\r\n                                onClose={(e) => {\r\n                                    this.setState({roleAnchor: undefined})\r\n                                }}\r\n                                MenuListProps={{\r\n                                    style: {\r\n                                        padding: 0,\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <MenuItem dense disabled style={{\r\n                                    opacity: 1\r\n                                }}>\r\n                                    <span className=\"PermissionsSelectRole\">\r\n                                        Select roles\r\n                                    </span>\r\n                                </MenuItem>\r\n\r\n                                {\r\n                                    siteData.allApps.member.setting.roles.map(role => {\r\n                                        return (\r\n                                            <MenuItem dense onClick={(e) => {\r\n                                                this.onRoleChange(!(pageData.props.pageSetting.permissions.memberRoles\r\n                                                    .findIndex(r => r === role) > -1), role);\r\n                                            }}\r\n                                                      key={role}\r\n                                                      style={{\r\n                                                          paddingTop: 0,\r\n                                                          paddingBottom: 0\r\n                                                      }}\r\n                                            >\r\n                                                <Checkbox\r\n                                                    size={'small'}\r\n                                                    checked={\r\n                                                        pageData.props.pageSetting.permissions.memberRoles\r\n                                                            .findIndex(r => r === role) > -1\r\n                                                    }\r\n                                                    onChange={(e) => {\r\n                                                        this.onRoleChange(e.target.checked, role);\r\n                                                    }}\r\n                                                    color=\"default\"\r\n                                                />\r\n                                                <span className=\"PermissionsRole\">\r\n                                                    {role}\r\n                                                </span>\r\n                                            </MenuItem>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                                <MenuItem dense onClick={(e) => {\r\n                                    // TODO connect to member manager\r\n                                    console.log(\"Soon\")\r\n                                }}\r\n                                >\r\n                                    <span className=\"PermissionsNewRole\">\r\n                                        Add New Role\r\n                                    </span>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        }\r\n\r\n                        {\r\n                            pageData.props.pageSetting.permissions.memberType === \"pay\" &&\r\n                            <div className=\"PageInfoBox\">\r\n                                <span className=\"PageInfoBoxTitle\">\r\n                                    Coming soon\r\n                                </span>\r\n\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class SeoGoogle extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChangeSeoSetting = (param) => (e, value) => {\r\n        let {pageData} = this.props;\r\n\r\n        value = value || e.target.value;\r\n        console.log(\"onChangeSeoSetting\", value, param);\r\n        if (param === \"endUrl\") {\r\n            if (!this.newEndUrl)\r\n                return;\r\n\r\n            value = this.newEndUrl.replace(/\\s+/g, '').toLowerCase();\r\n            let siteData = this.context.siteData;\r\n            let same = Object.values(siteData.allPages).find(p => p.props.pageSetting.seoGoogle.endUrl === value);\r\n            if (same) {\r\n                console.log(\"onChangeSeoSetting2\");\r\n                this.setState({endUrlError: true});\r\n                delete this.newEndUrl;\r\n                return;\r\n            }\r\n\r\n            delete this.newEndUrl;\r\n        }\r\n\r\n        pageData.props.pageSetting.seoGoogle[param] = value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Preview on Google search\r\n                    </span>\r\n\r\n                    <div className=\"SeoGooglePreviewRoot\">\r\n                        <span className=\"SeoGooglePreviewTitle\">\r\n                            {\r\n                                pageData.props.pageSetting.seoGoogle.pageTitle ||\r\n                                    pageData.props.pageName\r\n                            }\r\n                        </span>\r\n                        <span className=\"SeoGooglePreviewUrl\">\r\n                            {\r\n                                siteData.setting.baseUrl + (\r\n                                    pageData.props.pageSetting.seoGoogle.endUrl ||\r\n                                    pageData.props.pageName.toLowerCase()\r\n                                )\r\n                            }\r\n                        </span>\r\n                        <span className=\"SeoGooglePreviewDesc\">\r\n                            {\r\n                                pageData.props.pageSetting.seoGoogle.pageDescription\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the lat part (or slug) of url?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.endUrl || pageData.props.pageName.toLowerCase()}\r\n                        className={`PageSettingInput PageManagerRenameInput PageInfoNameInput ${\r\n                            this.state.endUrlError? 'PageInfoNameInputError': \"\"\r\n                        }`}\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newEndUrl = e.target.value;\r\n                            this.setState({endUrlError: undefined});\r\n                        }}\r\n                        onBlur={this.onChangeSeoSetting(\"endUrl\")}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"endUrl\")(e);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page's title on search results and browser tabs?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.pageTitle || pageData.props.pageName}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newPageTitle = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSeoSetting(\"pageTitle\")(e, this.newPageTitle);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"pageTitle\")(e, this.newPageTitle);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page about? Add a description\r\n                    </span>\r\n\r\n                    <textarea\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.pageDescription}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        style={{\r\n                            resize: \"none\",\r\n                            minHeight: 120\r\n                        }}\r\n                        onChange={(e) => {\r\n                            this.newPageDescription = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSeoSetting(\"pageDescription\")(e, this.newPageDescription);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"pageDescription\")(e, this.newPageDescription);\r\n                            }\r\n                        }}\r\n                        rows={5}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Show this page in search results\r\n                    </span>\r\n\r\n                    <Switch\r\n                        className=\"SeoGoogleShowInSearch\"\r\n                        checked={\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" ?\r\n                            pageData.props.pageSetting.seoGoogle.showInSearch: false\r\n                        }\r\n                        disabled={pageData.props.pageSetting.permissions.type !== \"Everyone\"}\r\n                        onChange={(e) => {\r\n                            let checked = e.target.checked;\r\n                            this.onChangeSeoSetting('showInSearch')(e, checked);\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type !== \"Everyone\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            Note: You’ve made changes to who can view this page, so it won’t show in search results. Go to the Permissions tab to change this.\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class SocialShare extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChangeSocialShareSetting = (param) => (e, value) => {\r\n        let {pageData} = this.props;\r\n\r\n        value = value || e.target.value;\r\n        pageData.props.pageSetting.socialShare[param] = value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <div className=\"SocialShareTitle\">\r\n                        What is Social Share\r\n                    </div>\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Add the text and image that display when this page is shared on social networks like Facebook, Instagram and more.\r\n                    </span>\r\n                </div>\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Preview on social\r\n                    </span>\r\n\r\n                    <div className=\"SocialPreviewBox\">\r\n                        <div className=\"SocialPreviewRoot\">\r\n                            <span className=\"SocialPreviewImageNoImage\">\r\n                                {\r\n                                    pageData.props.pageSetting.socialShare.imageUrl &&\r\n                                    <Image\r\n                                        className=\"SocialPreviewImage\"\r\n                                        src={pageData.props.pageSetting.socialShare.imageUrl}\r\n                                    />\r\n                                }\r\n\r\n                                <Button\r\n                                    className=\"SocialPreviewImageSelect\"\r\n                                >\r\n                                    Upload or Select an Image\r\n                                </Button>\r\n                            </span>\r\n                            <div className=\"SocialPreviewDetailBox\">\r\n                                <span className=\"SocialPreviewUrl\">\r\n                                    {\r\n                                        siteData.setting.baseUrl.substring(0, siteData.setting.baseUrl.lastIndexOf('/'))\r\n                                            .replace(/(^\\w+:|^)\\/\\//, '')\r\n\r\n                                    }\r\n                                </span>\r\n                                <span className=\"SocialPreviewTitle\">\r\n                                    {\r\n                                        pageData.props.pageSetting.socialShare.title ||\r\n                                        pageData.props.pageSetting.seoGoogle.pageTitle\r\n                                    }\r\n                                </span>\r\n                                <span className=\"SocialPreviewDescription\">\r\n                                    {\r\n                                        pageData.props.pageSetting.socialShare.description ||\r\n                                        pageData.props.pageSetting.seoGoogle.pageDescription\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page's title on social networks?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.socialShare.title ||\r\n                            pageData.props.pageSetting.seoGoogle.pageTitle || pageData.props.pageName}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newTitle = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSocialShareSetting(\"title\")(e, this.newTitle);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSocialShareSetting(\"title\")(e, this.newTitle);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page about? Add a description\r\n                    </span>\r\n\r\n                    <textarea\r\n                        defaultValue={pageData.props.pageSetting.socialShare.description ||\r\n                            pageData.props.pageSetting.seoGoogle.pageDescription}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        style={{\r\n                            resize: \"none\",\r\n                            minHeight: 120\r\n                        }}\r\n                        onChange={(e) => {\r\n                            this.newDescription = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSocialShareSetting(\"description\")(e, this.newDescription);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSocialShareSetting(\"description\")(e, this.newDescription);\r\n                            }\r\n                        }}\r\n                        rows={5}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab/Tab\";\r\nimport PageInfo from \"./PageInfo\";\r\nimport Permissions from \"./Permissions\";\r\nimport SeoGoogle from \"./SeoGoogle\";\r\nimport SocialShare from \"./SocialShare\";\r\n\r\nexport default class PageSetting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tabValue: \"Page Info\"\r\n        }\r\n    }\r\n\r\n    onChangeTab = (e, tabValue) => {\r\n        this.setState({tabValue});\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        return (\r\n            <Modal\r\n                open={this.props.open}\r\n                onClose={this.props.onClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                className=\"PageSettingModal\"\r\n                disableBackdropClick\r\n            >\r\n                <div className=\"PageSettingRoot\">\r\n                    {/*Header*/}\r\n                    <div className=\"PageSettingHeader\">\r\n                        <div\r\n                            className=\"PageManagerHeaderContainer\"\r\n                        >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                Page Setting ({pageData.props.pageName})\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.props.onClose}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Tabs\r\n                        className=\"PageSettingTabBox\"\r\n                        value={this.state.tabValue}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={this.onChangeTab}\r\n                        aria-label=\"disabled tabs example\"\r\n                    >\r\n                        <Tab label=\"Page Info\" value=\"Page Info\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Permissions\" value=\"Permissions\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"SEO (Google)\" value=\"SEO (Google)\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Social Share\" value=\"Social Share\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Advanced SEO\" value=\"Advanced SEO\" className=\"PageSettingTab\"/>\r\n\r\n                    </Tabs>\r\n\r\n                    {\r\n                        this.state.tabValue === \"Page Info\" &&\r\n                        <PageInfo\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Permissions\" &&\r\n                        <Permissions\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"SEO (Google)\" &&\r\n                        <SeoGoogle\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Social Share\" &&\r\n                        <SocialShare\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Advanced SEO\" &&\r\n                        <div style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\"\r\n                        }}>\r\n                            Coming Soon\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport PageSetting from \"./PageSetting/PageSetting\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class PageItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pageMenuAnchorEl: undefined\r\n        };\r\n\r\n        this.renameInput = React.createRef();\r\n    }\r\n\r\n    duplicate = () => {\r\n        // TODO ask verify\r\n        let {pageData, editor} = this.props;\r\n\r\n        let newName = `${pageData.props.pageName}(Copy)`;\r\n        let newId = uuidv4();\r\n\r\n        this.context.siteData.allPages[newId] = cloneObject(pageData);\r\n        this.context.siteData.allPages[newId].props.pageName = newName;\r\n        this.context.siteData.allPages[newId].props.pageId = newId;\r\n        delete this.context.siteData.allPages[newId].props.isHome;\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    delete = () => {\r\n        // TODO ask verify\r\n        let {pageData, editor} = this.props;\r\n\r\n        delete this.context.siteData.allPages[pageData.props.pageId];\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.onPageChange(Object.keys(this.context.siteData.allPages)[0], true);\r\n    };\r\n\r\n    setAsHome = () => {\r\n        let {pageData, editor} = this.props;\r\n        let home = Object.values(this.context.siteData.allPages).find(p => {return p.props.isHome});\r\n\r\n        if (home)\r\n            delete home.props.isHome;\r\n        pageData.props.isHome = true;\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    setting = (active) => {\r\n        this.setState({setting: active, pageMenuAnchorEl: undefined});\r\n    };\r\n\r\n    rename = (active) => {\r\n        this.setState({rename: active, pageMenuAnchorEl: undefined}, () => {\r\n            if (active)\r\n                this.renameInput.current.focus();\r\n        });\r\n\r\n        if (!active) {\r\n            let {pageData, editor} = this.props;\r\n\r\n            if (this.newPageName === pageData.props.pageName)\r\n                return;\r\n\r\n            if (!this.newPageName) {\r\n                // TODO show error\r\n                return;\r\n            }\r\n\r\n            pageData.props.pageName = this.newPageName;\r\n            this.newPageName = undefined;\r\n\r\n            editor.setState({reload: true});\r\n        }\r\n    };\r\n\r\n    onRename = (e) => {\r\n        this.newPageName = e.target.value;\r\n    };\r\n\r\n    render () {\r\n        let {pageData, onClick, editor} = this.props;\r\n        let boxClasses = classNames(\r\n            \"PageManagerNormalPageBox\",\r\n            this.context.pageData === pageData && \"PageManagerNormalPageBoxSelected\"\r\n        );\r\n        return (\r\n            <div className={boxClasses} key={pageData.props.pageId}\r\n            >\r\n                {\r\n                    !this.state.rename &&\r\n                    <span className=\"PageManagerNormalPageTitle\">\r\n                        {pageData.props.pageName}\r\n                    </span>\r\n                }\r\n\r\n                <div className=\"PageManagerNormalPageClick\" onClick={onClick}>\r\n\r\n                </div>\r\n\r\n                {\r\n                    this.state.rename &&\r\n                    <input\r\n                        ref={this.renameInput}\r\n                        defaultValue={pageData.props.pageName}\r\n                        className=\"NumberInput PageManagerRenameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.onRename}\r\n                        onBlur={(e) => this.rename(false)}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.rename(false)\r\n                            }\r\n                        }}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            // TODO\r\n                        }}\r\n                    >\r\n                    </input>\r\n                }\r\n\r\n                {\r\n                    pageData.props.isHome &&\r\n                    <IconButton\r\n                        className=\"PageManagerNormalSiteButton\"\r\n                        onClick={(e) => {\r\n                            // TODO\r\n                        }}\r\n                        disabled\r\n                    >\r\n                        <Image\r\n                            src={'static/icon/home.svg'}\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    </IconButton>\r\n                }\r\n\r\n                <IconButton\r\n                    className=\"PageManagerNormalSiteButton\"\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                        this.setState({pageMenuAnchorEl: e.target})\r\n                    }}\r\n                >\r\n                    <Image\r\n                        src={'static/icon/more-black.svg'}\r\n                        width={16}\r\n                        height={16}\r\n                    />\r\n                </IconButton>\r\n\r\n                {\r\n                    this.state.pageMenuAnchorEl &&\r\n                    <Menu\r\n                        style={{\r\n                            zIndex: 99999999999\r\n                        }}\r\n                        anchorEl={this.state.pageMenuAnchorEl}\r\n                        open={this.state.pageMenuAnchorEl !== undefined}\r\n                        onClose={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setState({pageMenuAnchorEl: undefined});\r\n                        }}\r\n                        MenuListProps={{\r\n                            style: {\r\n                                padding: 0,\r\n                            }\r\n                        }}\r\n                    >\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setting(true);\r\n                        }}\r\n                        >\r\n                            Setting\r\n                        </MenuItem>\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.rename(true)\r\n                        }}>\r\n                            Rename\r\n                        </MenuItem>\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.duplicate(true)\r\n                        }}\r\n                        >\r\n                            Duplicate\r\n                        </MenuItem>\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            <MenuItem dense onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.delete()\r\n                            }}\r\n                            >\r\n                                Delete\r\n                            </MenuItem>\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome && !pageData.props.isDynamic &&\r\n                            <MenuItem dense onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.setAsHome()\r\n                            }}\r\n                            >\r\n                                Set as Home Page\r\n                            </MenuItem>\r\n                        }\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setState({pageMenuAnchorEl: undefined});\r\n                            onClick();\r\n                        }} >\r\n                            Edit Page\r\n                        </MenuItem>\r\n                    </Menu>\r\n                }\r\n\r\n                {\r\n                    this.state.setting &&\r\n                    <PageSetting\r\n                        open={this.state.setting !== undefined}\r\n                        onClose={() => this.setState({setting: undefined})}\r\n                        pageData={pageData}\r\n                        editor={editor}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AddNewPageDialogItem.css';\r\n\r\nexport default class AddNewPageDialogItem extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"AddNewPageDialogItemRoot\">\r\n                <span className=\"AddNewPageDialogItemTitle\">\r\n                    {this.props.title}\r\n                </span>\r\n\r\n                <span className=\"AddNewPageDialogItemDesc\">\r\n                    {this.props.description}\r\n                </span>\r\n\r\n                <span className=\"AddNewPageDialogItemAdd\">\r\n                    Add\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport AddNewPageDialogItem from \"./AddNewPageDialogItem\";\r\n\r\nexport default class AddNewPageDialog extends React.Component {\r\n    addNormalPage = () => {\r\n        this.props.onClose();\r\n        this.props.onAddNormalPage();\r\n    };\r\n\r\n    addDynamicPage = () => {\r\n        this.props.onClose();\r\n        this.props.onAddDynamicPage();\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Menu\r\n                style={{\r\n                    zIndex: 99999999999,\r\n                }}\r\n                anchorEl={this.props.anchorEl}\r\n                open={this.props.open}\r\n                onClose={(e) => {\r\n                    this.props.onClose();\r\n                }}\r\n                MenuListProps={{\r\n                    style: {\r\n                        padding: 0,\r\n                    }\r\n                }}\r\n            >\r\n                <MenuItem dense onClick={(e) => {\r\n                    this.addNormalPage();\r\n                }}\r\n                >\r\n                    <AddNewPageDialogItem\r\n                        title={\"Page\"}\r\n                        description={\"Add a standard blank page\"}\r\n                    />\r\n                </MenuItem>\r\n                <MenuItem dense onClick={(e) => {\r\n                    this.addDynamicPage();\r\n                }}>\r\n                    <AddNewPageDialogItem\r\n                        title={\"Dynamic Page\"}\r\n                        description={\"Design once and generate a lot of different page\"}\r\n                    />\r\n                </MenuItem>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport PageTypeTitle from \"./PageTypeTitle\";\r\nimport PageItem from \"./PageItem\";\r\nimport AddNewPageDialog from \"./AddNewPageDialog\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class PageManager extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            openNormalPage: true,\r\n            openDynamicPage: false\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    onChangeSearch = (e) => {\r\n        let searchValue = e.target.value;\r\n        this.setState({searchValue});\r\n    };\r\n\r\n    getFilteredPages = () => {\r\n        let {siteData} = this.context;\r\n        return Object.keys(siteData.allPages).filter(siteId => {\r\n            if (!this.state.searchValue)\r\n                return true;\r\n\r\n            let pageData = siteData.allPages[siteId];\r\n\r\n            return pageData.props.pageName.toLowerCase().includes(this.state.searchValue.toLowerCase());\r\n        }).map(siteId => {\r\n            return siteData.allPages[siteId];\r\n        });\r\n    };\r\n\r\n    onPageClick = (pageData) => {\r\n        this.context.setPageData(pageData.props.pageId);\r\n    };\r\n\r\n    onAddNormalPage = () => {\r\n        let {siteData} = this.context;\r\n\r\n        if (!this.props.newPageDataUrl) {\r\n            fetch('/static/json/newPageData.json')\r\n                .then((r) => r.json())\r\n                .then((pageData) =>{\r\n                    let newName = \"New Page\";\r\n                    let newId = uuidv4();\r\n\r\n                    pageData.props.pageName = newName;\r\n                    pageData.props.pageId = newId;\r\n\r\n                    siteData.allPages[newId] = pageData;\r\n\r\n                    this.onPageClick(siteData.allPages[newId]);\r\n                });\r\n            // return;\r\n        }\r\n    };\r\n\r\n    onAddDynamicPage = (data) => {\r\n        // TODO\r\n    };\r\n\r\n    render() {\r\n        let {siteData} = this.context;\r\n\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"PageManagerRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    {/*Header*/}\r\n                    <div className=\"PageManagerHeader\">\r\n                        <div\r\n                            className=\"PageManagerHeaderContainer\"\r\n                        >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                Site Pages\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    this.context.toggleRightMenu(\"pageManager\", false);\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*Search box*/}\r\n                    <div className=\"PageManagerSearchBox\">\r\n                        <input\r\n                            className=\"NumberInput PageManagerSearchInput\"\r\n                            type=\"text\"\r\n                            onChange={this.onChangeSearch}\r\n                        >\r\n                        </input>\r\n\r\n                        <Image\r\n                            className=\"PageManagerSearchImage\"\r\n                            src={'static/icon/search.svg'}\r\n                        />\r\n                    </div>\r\n\r\n                    {/*Sites list*/}\r\n\r\n                    <PageTypeTitle\r\n                        defaultOpen={this.state.openNormalPage}\r\n                        title=\"Main Pages\" onChange={(openNormalPage) => {\r\n                        this.setState({openNormalPage});\r\n                    }}/>\r\n\r\n                    <div className=\"PageManagerNormalPageList\">\r\n                        {\r\n                            this.state.openNormalPage &&\r\n                            this.getFilteredPages().map(pageData => {\r\n                                return (\r\n                                    <PageItem\r\n                                        key={pageData.props.pageId}\r\n                                        pageData={pageData}\r\n                                        onClick={(e) => {\r\n                                            this.onPageClick(pageData);\r\n                                        }}\r\n                                        editor={this.props.editor}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <ButtonBase className=\"PageManagerAddPageButton\"\r\n                        onClick={(e) => {\r\n                            this.setState({showAddPage: e.target})\r\n                        }}\r\n                    >\r\n                        Add New Page\r\n                    </ButtonBase>\r\n\r\n                    {\r\n                        this.state.showAddPage &&\r\n                        <AddNewPageDialog\r\n                            anchorEl={this.state.showAddPage}\r\n                            open={this.state.showAddPage !== undefined}\r\n                            onClose={(e) => {\r\n                                this.setState({showAddPage: undefined})\r\n                            }}\r\n                            onAddDynamicPage={this.onAddDynamicPage}\r\n                            onAddNormalPage={this.onAddNormalPage}\r\n                        />\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nPageManager.defaultProps = {\r\n    open: false,\r\n    speed: 800,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ThemeTextItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onEditClick = (e) => {\r\n\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let {siteData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"ThemeTextItemRoot\">\r\n                <span className=\"ThemeTextItemName\">\r\n                    {item.name}\r\n                </span>\r\n                <span className=\"ThemeTextItemDetail\">\r\n                    {item.font}, {item.fontSize}px\r\n                </span>\r\n                <span style={{\r\n                    fontFamily: `${item.font} Arial`,\r\n                    fontWeight: item.fontWeight,\r\n                    fontStyle: item.fontStyle,\r\n                    fontSize: Math.min(item.fontSize, 40),\r\n                    color: item.color,\r\n                    lineHeight: '1.4em'\r\n                }}>\r\n                    For Bold Creators\r\n                </span>\r\n\r\n                <IconButton\r\n                    className=\"ThemeTextItemEdit\"\r\n                    onClick={this.onEditClick}\r\n                >\r\n                    <Image\r\n                        width={16}\r\n                        height={16}\r\n                        src={'static/icon/edit.svg'}\r\n                    />\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport {getColorScheme} from \"../../AwesomwGridLayoutHelper\";\r\nimport HexColorPicker from \"./HexColorPicker\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ThemeColorsItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onEditClick = (paletteName, key, color) => (e) => {\r\n        this.setState({\r\n            toChange: {\r\n                paletteName, key, color\r\n            }\r\n        })\r\n    };\r\n\r\n    onChangeColor = (color) => {\r\n        let {editor} = this.props;\r\n        let {siteData} = this.context;\r\n        let {toChange} = this.state;\r\n        siteData.theme.Colors.items[toChange.paletteName][toChange.key] = color;\r\n\r\n        if (toChange.key === \"main\") {\r\n            siteData.theme.Colors.calculated = false;\r\n        }\r\n\r\n        toChange.color = color;\r\n        this.setState({toChange});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let {siteData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"ThemeColorsItemRoot\">\r\n                <span className=\"ThemeTextItemName\">\r\n                    {item.name}\r\n                </span>\r\n\r\n                <div className=\"ThemeColorsItemDetail\">\r\n                    <div className=\"ThemeColorsItemDetailMain\" style={{\r\n                            backgroundColor: getColorScheme(item.main)[\"3\"]\r\n                        }}\r\n                        onClick={this.onEditClick(item.name, \"main\", getColorScheme(item.main)[\"3\"])}\r\n                    >\r\n\r\n                        <Image\r\n                            className=\"ThemeColorsItemDetailOverlay\"\r\n                            style={{opacity: 1}}\r\n                            src={'static/icon/edit-white.svg'}\r\n                            width={18}\r\n                            height={18}\r\n                        />\r\n                    </div>\r\n                    <div className=\"ThemeColorsItemDetailSecondary\">\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"1\"] || getColorScheme(item.main)[\"1\"],\r\n                            borderTopRightRadius: 4,\r\n                            borderBottomRightRadius: 4\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"1\", item[\"1\"] || getColorScheme(item.main)[\"1\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={'static/icon/edit-white.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"2\"] || getColorScheme(item.main)[\"2\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"2\", item[\"2\"] || getColorScheme(item.main)[\"2\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={'static/icon/edit-white.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"3\"] || getColorScheme(item.main)[\"3\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"3\", item[\"3\"] || getColorScheme(item.main)[\"3\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={'static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"4\"] || getColorScheme(item.main)[\"4\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"4\", item[\"4\"] || getColorScheme(item.main)[\"4\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={'static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"5\"] || getColorScheme(item.main)[\"5\"],\r\n                            borderTopLeftRadius: 4,\r\n                            borderBottomLeftRadius: 4\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"5\", item[\"5\"] || getColorScheme(item.main)[\"5\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={'static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.toChange &&\r\n                    <HexColorPicker\r\n                        onClose={() => this.setState({toChange: undefined})}\r\n                        color={this.state.toChange.color}\r\n                        onChangeComplete={ this.onChangeColor }\r\n                        disableAlpha\r\n                        width={224}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport {getColorScheme, sortBy} from \"../../AwesomwGridLayoutHelper\";\r\nimport ThemeTextItem from \"./ThemeTextItem\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport ThemeColorsItem from \"./ThemeColorsItem\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nconst colorKeys = [\r\n    \"1\",\"2\",\"3\",\"4\",\"5\",\r\n];\r\nexport default class ThemeManager extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            // category: sortBy(Object.values(props.siteData.theme), \"order\")[0],\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.setState({\r\n            category: sortBy(Object.values(this.context.siteData.theme), \"order\")[0],\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setCategory = (category) => (e) => {\r\n        if (category !== this.state.category)\r\n            this.setState({category});\r\n    };\r\n\r\n    calculateTheme = () => {\r\n        let {siteData} = this.context;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        if (!theme.Colors.calculated) {\r\n            Object.values(theme.Colors.items).forEach(item => {\r\n                let scheme = getColorScheme(item.main);\r\n                colorKeys.forEach(key => {\r\n                    item[key] = scheme[key];\r\n                })\r\n            });\r\n\r\n            theme.Colors.calculated = true;\r\n        }\r\n    };\r\n\r\n    getColor = (paletteName, key) => {\r\n        let {siteData} = this.context;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        this.calculateTheme();\r\n\r\n        return theme.Colors.items[paletteName][key];\r\n    };\r\n\r\n    render() {\r\n        let {editor} = this.props;\r\n        let {siteData, pageData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"ThemeManagerRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"ThemeManagerList\"\r\n                    >\r\n                        {\r\n                            sortBy(Object.values(siteData.theme), \"order\").map(category => {\r\n                                let style = {};\r\n                                if (category === this.state.category)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={category.name}\r\n                                        className=\"ThemeManagerCategoryItem\"\r\n                                        onClick={this.setCategory(category)}\r\n                                        style={style}\r\n                                    >\r\n                                        {category.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.category &&\r\n                        <div className=\"ThemeManagerItemRoot\">\r\n                            {/*Header*/}\r\n                            <div\r\n                                className=\"ThemeManagerItemHeaderContainer\"\r\n                            >\r\n                            <span className=\"ThemeManagerItemHeaderTitle\">\r\n                                Theme\r\n                            </span>\r\n\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.context.toggleRightMenu(\"themeManager\", false);\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={12}\r\n                                        height={12}\r\n                                        src={require('../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeManagerItemScroll\">\r\n                                {\r\n                                    Object.keys(this.state.category.items).map(key => {\r\n                                        if (this.state.category.name === \"Text\") {\r\n                                            return (\r\n                                                <ThemeTextItem\r\n                                                    key={key}\r\n                                                    item={this.state.category.items[key]}\r\n                                                    editor={editor}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                        if (this.state.category.name === \"Colors\") {\r\n                                            return (\r\n                                                <ThemeColorsItem\r\n                                                    key={key}\r\n                                                    item={this.state.category.items[key]}\r\n                                                    editor={editor}\r\n                                                    recalculateColors={this.calculateTheme()}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nThemeManager.defaultProps = {\r\n    open: false,\r\n    speed: 1200,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport {EditorContext} from \"../EditorContext\";\r\n\r\nexport default class EditorHeaderZoom extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <>\r\n                    <IconButton\r\n                        buttonBaseStyle={{\r\n                            marginLeft: 0,\r\n                            marginRight: 10,\r\n                            backgroundColor: this.state.zoomSetting && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.setState({zoomSetting: e.currentTarget});\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={'/static/icon/zoom-in.svg'}\r\n                        />\r\n\r\n                    </IconButton>\r\n\r\n                    {\r\n                        this.state.zoomSetting &&\r\n                        <Menu\r\n                            style={{\r\n                                zIndex: 99999999999,\r\n                            }}\r\n                            anchorEl={this.state.zoomSetting}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            getContentAnchorEl={null}\r\n                            anchorPosition={{ left: 0, top: 0 }}\r\n                            PaperProps={{\r\n                                style:{\r\n                                    transformOrigin: \"top right\",\r\n                                    transform: `scale(${1/editorContext.zoomScale})`\r\n                                }\r\n                            }}\r\n                            marginThreshold={0}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={true}\r\n                            onClose={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.setState({zoomSetting: undefined});\r\n                            }}\r\n                            MenuListProps={{\r\n                                style: {\r\n                                    padding: 0,\r\n                                }\r\n                            }}\r\n                            transitionDuration={0}\r\n                        >\r\n                            <Paper style={{\r\n                                padding: 10,\r\n                                display: \"flex\",\r\n                                alignItems: \"center\"\r\n                            }}>\r\n                                <IconButton\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 0,\r\n                                        marginRight: 10,\r\n                                        pointerEvents: \"auto\"\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 10\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        e.preventDefault();\r\n                                        this.props.onZoomChange(Math.min(1.3, editorContext.zoomScale + 0.1));\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={14}\r\n                                        height={14}\r\n                                        src={'/static/icon/add.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <span style={{\r\n                                    width: 70,\r\n                                    textAlign: \"center\"\r\n                                }}>\r\n                                    {(editorContext.zoomScale * 100).toFixed(0)}%\r\n                                </span>\r\n                                <IconButton\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 10,\r\n                                        marginRight: 10,\r\n                                        pointerEvents: \"auto\"\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 10\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        e.preventDefault();\r\n                                        this.props.onZoomChange(Math.max(0.5 ,editorContext.zoomScale - 0.1));\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={14}\r\n                                        height={14}\r\n                                        src={'/static/icon/minus.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <Button className=\"EditorHeaderZoomReset\"\r\n                                    onClick={(e) => {\r\n                                        this.props.onZoomChange(1);\r\n                                    }}\r\n                                >\r\n                                    Reset\r\n                                </Button>\r\n                            </Paper>\r\n                        </Menu>\r\n                    }\r\n                    </>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport './EditorHeaderPageSelect.css';\r\n\r\nexport default class EditorHeaderPageSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getOptions = (editorContext) => {\r\n        let options = Object.values(editorContext.siteData.allPages).map(pageData => {\r\n            return pageData.props.pageName;\r\n        });\r\n\r\n        !editorContext.preview && options.push(\r\n            <div\r\n                className=\"EditorHeaderPageSelectPageManagerButton\"\r\n                onClick={() => {\r\n                    editorContext.toggleRightMenu(\"pageManager\", true);\r\n                }}\r\n            >\r\n                Page Manager\r\n            </div>\r\n        );\r\n\r\n        return options;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        <DropDown\r\n                            options={editorContext.siteData ? this.getOptions(editorContext) : [\"...\"]}\r\n                            onChange={(v) => {\r\n                                let pageData = Object.values(editorContext.siteData.allPages).find(pd => {\r\n                                    return pd.props.pageName === v;\r\n                                });\r\n\r\n                                if (pageData)\r\n                                    editorContext.setPageData(pageData.props.pageId);\r\n                            }}\r\n                            value={editorContext.pageData ? editorContext.pageData.props.pageName : \"...\"}\r\n                            spanStyle={{\r\n                                width: 200,\r\n                                fontSize: 14,\r\n                                border: \"0px solid #cfcfcf\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class NumberInputEnterToChange extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"props.min\", props.min)\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    inputFilter = (value, oldValue) => {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = parseFloat(value).toFixed(0);\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        if (this.props.lazy)\r\n            return;\r\n\r\n        let value = this.inputFilter(this.state.tempValue, this.props.value);\r\n        this.props.onChange(value);\r\n        this.setState({tempValue: undefined});\r\n    };\r\n\r\n    onTempChange = (e) => {\r\n        let tempValue = e.target.value;\r\n        this.setState({tempValue});\r\n\r\n        if (this.props.lazy)\r\n            this.props.onChange(tempValue);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className={\"NumberInput \" + this.props.className || \"\"}\r\n                value={this.state.tempValue || this.props.value || 0}\r\n                onChange={this.onTempChange}\r\n                onBlur={this.onChange}\r\n                onKeyPress={(e) => {\r\n                    if((e.keyCode || e.which) === 13) {\r\n                        this.onChange();\r\n                        if (this.props.onKeyPress)\r\n                            this.props.onKeyPress();\r\n                    }\r\n                }}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport const getBreakpointIcon = (bpData) => {\r\n    if (bpData.start >= 1255)\r\n        return <img draggable={false} width={24} height={24} src={'/static/icon/computer.svg'} />\r\n    if (bpData.start >= 1001)\r\n        return <img draggable={false} width={24} height={24} src={'/static/icon/laptop.svg'} />\r\n    if (bpData.start >= 751)\r\n        return <img draggable={false} width={18} height={18} src={'/static/icon/ipad.svg'} />\r\n\r\n    return <img draggable={false} width={16} height={16} src={'/static/icon/phone.svg'} />\r\n};\r\n\r\nexport const getBreakpointName = (bpData) => {\r\n    if (bpData.start >= 1255)\r\n        return 'Desktop'\r\n    if (bpData.start >= 1001)\r\n        return 'Laptop'\r\n    if (bpData.start >= 751)\r\n        return 'Tablet'\r\n\r\n    return 'Mobile'\r\n};\r\n\r\nexport const getCommonDevices = () => {\r\n    return [\r\n        {\r\n            name: \"Galaxy S7\",\r\n            start: 360\r\n        },\r\n        {\r\n            name: \"Galaxy S8/S9\",\r\n            start: 360\r\n        },\r\n        {\r\n            name: \"iPad\",\r\n            start: 768\r\n        },\r\n        {\r\n            name: \"iPad Pro\",\r\n            start: 1024\r\n        },\r\n        {\r\n            name: \"iPhone 6/7/8\",\r\n            start: 375\r\n        },\r\n        {\r\n            name: \"iPhone 6/7/8 Plus\",\r\n            start: 414\r\n        },\r\n        {\r\n            name: \"iPhone X\",\r\n            start: 375\r\n        },\r\n        {\r\n            name: \"Pixel 2\",\r\n            start: 411\r\n        },\r\n        {\r\n            name: \"Pixel 2 XL\",\r\n            start: 411\r\n        }\r\n    ];\r\n};\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpointsSettingItem.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport {getBreakpointIcon} from \"./BreakpointHelper\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport default class EditorHeaderBreakpointsSettingItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: props.bpData.name? false: true\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    isHighestBp = (editorContext) => {\r\n        let {bpData} = this.props;\r\n        return editorContext.editor.breakpointmanager.getHighestBpName() === bpData.name;\r\n    };\r\n\r\n    done = (editorContext) => {\r\n        let {bpData} = this.props;\r\n\r\n        if (isNaN(this.tempEnd)) {\r\n            return;\r\n        }\r\n\r\n        this.tempEnd = parseInt(this.tempEnd);\r\n\r\n        editorContext.editor.breakpointmanager.updateBreakpoint(\r\n            bpData.name, undefined, this.tempEnd\r\n        );\r\n\r\n        this.setState({editMode: false})\r\n\r\n        editorContext.update();\r\n    };\r\n\r\n    create = (editorContext) => {\r\n        if (!this.tempEnd)\r\n            this.tempEnd = editorContext.pageSize;\r\n\r\n        if (isNaN(this.tempEnd)) {\r\n            return;\r\n        }\r\n\r\n        this.tempEnd = parseInt(this.tempEnd);\r\n\r\n        let {newBpData, prevBpData} = editorContext.editor.breakpointmanager.updateBreakpoint(\r\n            uuidv4(), this.tempEnd, undefined\r\n        );\r\n\r\n        this.props.onCancel();\r\n\r\n        editorContext.onNewBpAdded(newBpData, prevBpData);\r\n    };\r\n\r\n    delete = (editorContext) => {\r\n        let {bpData} = this.props;\r\n\r\n        editorContext.editor.breakpointmanager.deleteBreakpoint(bpData.name);\r\n\r\n        editorContext.update();\r\n    }\r\n\r\n    cancelEditMode = () => {\r\n        this.setState({editMode: false});\r\n    };\r\n\r\n    render () {\r\n        let {bpData, nextBpData} = this.props;\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div className=\"BreakpointSettingItemRoot\">\r\n                        <div className=\"BreakpointSettingItemIcon\">\r\n                            {\r\n                                getBreakpointIcon(bpData)\r\n                            }\r\n                        </div>\r\n\r\n                        {\r\n                            bpData.name &&\r\n                            <p className=\"BreakpointSettingItemStart\">\r\n                                {bpData.start} {\r\n                                    this.isHighestBp(editorContext) ? \" & Up\" : \" -\"\r\n                                }\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <p className=\"BreakpointSettingItemEndText\">\r\n                                {bpData.end}\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <NumberInputEnterToChange\r\n                                className=\"BreakpointSettingItemEndInput\"\r\n                                inputStyle={{\r\n                                    marginLeft: 0\r\n                                }}\r\n                                min={bpData.name? bpData.start + 1: 320}\r\n                                max={bpData.name? nextBpData.end - 2 : 9999}\r\n                                value={bpData.end || editorContext.pageSize}\r\n                                onChange={(tempEnd) => {\r\n                                    this.tempEnd = tempEnd;\r\n                                }}\r\n                                onKeyPress={() => {\r\n                                    bpData.name?\r\n                                        this.done(editorContext):\r\n                                        this.create(editorContext);\r\n                                }}\r\n                                lazy\r\n                            />\r\n                        }\r\n\r\n                        {\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <p className=\"BreakpointSettingItemPx\">\r\n                                {\"px\"}\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <div className=\"BreakpointSettingItemNoneEdit\">\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.delete(editorContext)\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={'/static/icon/delete.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.props.onEditMode && this.props.onEditMode();\r\n                                        this.setState({editMode: true})\r\n                                        this.tempEnd = bpData.end;\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={'/static/icon/edit2.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <div className=\"BreakpointSettingItemEditMode\">\r\n                                {\r\n                                    bpData.name &&\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className=\"BreakpointSettingItemButtons BreakpointSettingItemDone\"\r\n                                        onClick={() => {\r\n                                            this.done(editorContext);\r\n                                        }}\r\n                                    >\r\n                                        Done\r\n                                    </Button>\r\n                                }\r\n                                {\r\n                                    !bpData.name &&\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className=\"BreakpointSettingItemButtons BreakpointSettingItemDone\"\r\n                                        onClick={() => {\r\n                                            this.create(editorContext);\r\n                                        }}\r\n                                    >\r\n                                        Create\r\n                                    </Button>\r\n                                }\r\n                                <Button\r\n                                    className=\"BreakpointSettingItemButtons BreakpointSettingItemCancel\"\r\n                                    onClick={() => {\r\n                                        bpData.name ?\r\n                                            this.setState({editMode: false}) :\r\n                                            this.props.onCancel();\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpointsSetting.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport EditorHeaderBreakpointsSettingItem from \"./EditorHeaderBreakpointsSettingItem\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport default class EditorHeaderBreakpointsSetting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    clearEditMode = () => {\r\n        console.log(\"clearEditMode\")\r\n        Object.values(this.bpItemrRefs).forEach(bpItemRef => {\r\n            console.log(\"clearEditMode1\", bpItemRef)\r\n            if (bpItemRef.current)\r\n                bpItemRef.current.cancelEditMode();\r\n        });\r\n    };\r\n\r\n    getBpItemRef = (name) => {\r\n        if (!this.bpItemrRefs)\r\n            this.bpItemrRefs = {};\r\n\r\n        if (!this.bpItemrRefs[name])\r\n            this.bpItemrRefs[name] = React.createRef();\r\n\r\n        return this.bpItemrRefs[name];\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <Menu\r\n                        style={{\r\n                            zIndex: 99999999999\r\n                        }}\r\n                        anchorEl={this.props.anchorEl}\r\n                        open={true}\r\n                        onClose={(e) => {\r\n                            this.props.onClose();\r\n                        }}\r\n                        MenuListProps={{\r\n                            style: {\r\n                                padding: 0\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div className=\"BpSettingRoot\">\r\n                            {/*Header*/}\r\n                            <div className=\"BpSettingHeader\">\r\n                                <div\r\n                                    className=\"BpSettingHeaderContainer\"\r\n                                >\r\n                            <span className=\"BpSettingHeaderTitle\">\r\n                                Customize Breakpoints\r\n                            </span>\r\n\r\n                                    <IconButton\r\n                                        onClick={this.props.onClose}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={12}\r\n                                            height={12}\r\n                                            src={'/static/icon/close.svg'}\r\n                                        />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <p className=\"BpSettingGuideSpan\">\r\n                                Add, edit or delete this page's breakpoints to design for different viewport sizes.\r\n                            </p>\r\n\r\n                            {\r\n                                editorContext.editor.breakpointmanager.breakpoints.map((bpData, index) => {\r\n                                    return (\r\n                                        <EditorHeaderBreakpointsSettingItem\r\n                                            key={bpData.name}\r\n                                            bpData={bpData}\r\n                                            nextBpData={editorContext.editor.breakpointmanager.breakpoints[index - 1]}\r\n                                            onEditMode={this.clearEditMode}\r\n                                            ref={this.getBpItemRef(bpData.name)}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            {\r\n                                this.state.newBpData &&\r\n                                <EditorHeaderBreakpointsSettingItem\r\n                                    bpData={this.state.newBpData}\r\n                                    onCancel={() => {\r\n                                        this.setState({newBpData: undefined});\r\n                                    }}\r\n                                />\r\n                            }\r\n\r\n                            <Button\r\n                                className=\"BpSettingAddBp\"\r\n                                onClick={() => {\r\n                                    this.clearEditMode();\r\n                                    this.setState({newBpData: {}});\r\n                                }}\r\n                            >\r\n                                Add New Breakpoint\r\n                            </Button>\r\n                        </div>\r\n                    </Menu>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpoints.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab/Tab\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport EditorHeaderBreakpointsSetting from \"./EditorHeaderBreakpointsSetting\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {getBreakpointIcon} from \"./BreakpointHelper\";\r\n\r\nexport default class EditorHeaderBreakpoints extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onChangeTab = (editorContext) => (e, bpName) => {\r\n        this.setState({tabValue: bpName});\r\n        console.log(\"bpName\", bpName, editorContext.editor.breakpointmanager.current())\r\n\r\n        if (editorContext.editor.breakpointmanager.current() === bpName)\r\n            return;\r\n\r\n        let bpData = editorContext.editor.breakpointmanager.getBpData(bpName);\r\n\r\n        if (!bpData)\r\n            return;\r\n\r\n        let width;\r\n        if (bpData.prefer >= bpData.start && bpData.prefer <= bpData.end)\r\n            width = bpData.prefer;\r\n        else\r\n            width = bpData.start;\r\n\r\n        editorContext.editor.onPageResize(width);\r\n    };\r\n\r\n    getTabValue = (editorContext) => {\r\n        let width = editorContext.editor.rootLayoutRef.current.getSize(false).width;\r\n        return editorContext.editor.breakpointmanager.current(width);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <Tabs\r\n                                className=\"EditorHeaderBreakpointsTabRoot\"\r\n                                value={\r\n                                    this.getTabValue(editorContext)\r\n                                }\r\n                                indicatorColor=\"primary\"\r\n                                textColor=\"primary\"\r\n                                onChange={this.onChangeTab(editorContext)}\r\n                                aria-label=\"disabled tabs example\"\r\n                            >\r\n                                {\r\n                                    editorContext.editor.breakpointmanager.breakpoints.map((bpData, index) => {\r\n                                        return (\r\n                                            <Tab\r\n                                                key={bpData.name}\r\n                                                className=\"EditorHeaderBreakpointsTab\"\r\n                                                label={getBreakpointIcon(bpData)}\r\n                                                value={bpData.name}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </Tabs>\r\n                        }\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <IconButton\r\n                                buttonBaseStyle={{marginLeft: 10}}\r\n                                onClick={(e) => {\r\n                                    this.setState({settingAnchor: e.currentTarget});\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={18}\r\n                                    height={18}\r\n                                    src={'/static/icon/open-menu.svg'}\r\n                                />\r\n                            </IconButton>\r\n                        }\r\n\r\n                        <div style={{\r\n                            backgroundColor: \"#cfcfcf\",\r\n                            height: \"auto\",\r\n                            width: 1,\r\n                            marginLeft: 10\r\n                        }}>\r\n\r\n                        </div>\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <>\r\n                                <span\r\n                                    style={{\r\n                                        marginLeft: 10,\r\n                                        display:\"flex\",\r\n                                        alignItems: \"center\",\r\n                                        fontSize: 12\r\n                                    }}\r\n                                >\r\n                                    Width\r\n                                </span>\r\n                                <NumberInputEnterToChange\r\n                                    inputStyle={{\r\n                                        marginLeft: 10\r\n                                    }}\r\n                                    min={editorContext.editor.breakpointmanager.getMinWidth()}\r\n                                    max={9999}\r\n                                    value={editorContext.editor.rootLayoutRef.current.getSize(false).width}\r\n                                    onChange={(width) => {\r\n                                        editorContext.setPageSizeWidth(width);\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n\r\n                        {\r\n                            this.state.settingAnchor &&\r\n                            <EditorHeaderBreakpointsSetting\r\n                                anchorEl={this.state.settingAnchor}\r\n                                onClose={(e) => {\r\n                                    this.setState({settingAnchor: undefined});\r\n                                }}\r\n                            />\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\n\r\nexport default class EditorHeader extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onInspectorClickState: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    setRightMenuOpen = (openMenu, state) => {\r\n        let changedState = {};\r\n        [\r\n            \"onAddComponentClick\",\r\n            \"onThemeManagerClick\",\r\n            \"onPageManagerClick\"\r\n        ].forEach(name => {\r\n            if (this.state[`${name}State`] && `${name}State` !== openMenu) {\r\n                console.log(\"setRightMenuOpen\", name);\r\n                this.props[name](true);\r\n            }\r\n\r\n            changedState[`${name}State`] = false;\r\n        });\r\n        this.setState({\r\n            ...changedState,\r\n            [openMenu]: state\r\n        });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"EditorHeaderRoot\" style={{\r\n                width: `${this.context.zoomScale*100}%`,\r\n            }}>\r\n                <div className=\"EditorHeaderRightShortcuts\">\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.addComponent.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"addComponent\");\r\n                            // let onAddComponentClickState = this.props.onAddComponentClick();\r\n                            // this.setRightMenuOpen(\"onAddComponentClickState\", onAddComponentClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={'/static/icon/add.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.pageManager.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"pageManager\");\r\n                            // let onPageManagerClickState = this.props.onPageManagerClick();\r\n                            // this.setRightMenuOpen(\"onPageManagerClickState\", onPageManagerClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={'/static/icon/page.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.themeManager.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"themeManager\");\r\n                            // let onThemeManagerClickState = this.props.onThemeManagerClick();\r\n                            // this.setRightMenuOpen(\"onThemeManagerClickState\", onThemeManagerClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={'/static/icon/water.svg'}\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"EditorHeaderCenterShortcuts\">\r\n                    <EditorHeaderPageSelect\r\n                        className=\"EditorHeaderCenterDiv\"\r\n                        style={{\r\n                            width: 200\r\n                        }}\r\n                    />\r\n                    <EditorHeaderBreakpoints\r\n                        className=\"EditorHeaderCenterDiv EditorHeaderLastCenterDiv EditorHeaderBreakpoints\"\r\n                    />\r\n                </div>\r\n                <div className=\"EditorHeaderLeftShortcuts\">\r\n                    <IconButton\r\n                        buttonBaseStyle={{\r\n                            marginLeft: 0,\r\n                            marginRight: 10,\r\n                            backgroundColor: this.state.onInspectorClickState && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            let onInspectorClickState = this.props.onInspectorClick(e);\r\n                            this.setState({onInspectorClickState})\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={'/static/icon/inspector.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <EditorHeaderZoom\r\n                        onZoomChange={(zoomScale) => {\r\n                            this.props.onPageZoomChange(zoomScale);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport DropDown from \"../Menus/CommonComponents/DropDown\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\nimport {getScrollbarWidth} from \"../AwesomeGridLayoutUtils\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\n\r\nexport default class EditorPreview extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"EditorPreviewRoot\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorPreview from \"./EditorPreview\";\r\n\r\nexport default class EditorType extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        if (this.props.preview) {\r\n            return (\r\n                <EditorPreview>\r\n                    {this.props.children}\r\n                </EditorPreview>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"EditorBoundaryContent\">\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PreviewHeaderBreakpoints.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport {getBreakpointIcon, getBreakpointName} from \"./BreakpointHelper\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\n\r\nexport default class PreviewHeaderBreakpoints extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lastBpData: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getCurrentValue = (editorContext) => {\r\n        if (!editorContext.editor.rootLayoutRef.current)\r\n            return \"...\";\r\n\r\n        let width = editorContext.editor.rootLayoutRef.current.getSize(false).width;\r\n\r\n        let bpData = this.getOptions(editorContext).filter(bpData => {\r\n            console.log(\"getCurrentValue\", bpData.name, bpData.type, bpData.start, width, bpData.type === 'device' && bpData.start === width)\r\n            return bpData.type === 'device' && bpData.start === width;\r\n        })[0];\r\n\r\n        if (bpData) {\r\n            return (this.state.lastBpData && this.state.lastBpData.type === \"device\" && this.state.lastBpData) || bpData;\r\n        }\r\n\r\n        return editorContext.editor.breakpointmanager.currentBpData(width);\r\n    };\r\n\r\n    getOptions = (editorContext) => {\r\n        let options = [{\r\n            title: \"Page Breakpoints\", disabled:true\r\n        }];\r\n\r\n        if (!editorContext.editor.breakpointmanager) return [];\r\n\r\n        let breakpoints = editorContext.editor.breakpointmanager.getSortedBreakPoints().reverse();\r\n\r\n        breakpoints.forEach(bpData => {\r\n            options.push(bpData);\r\n        });\r\n\r\n        options.push({\r\n            title: \"Common Devices\", disabled:true\r\n        });\r\n\r\n        (this.props.devices || []).sort((a, b) => {\r\n            if (a.start > b.start) {\r\n                return -1;\r\n            } else if (a.start === b.start) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        }).forEach(bpData => {\r\n            bpData.type = 'device';\r\n            options.push(bpData);\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        <DropDown\r\n                            options={editorContext.siteData ? this.getOptions(editorContext) : [\"...\"]}\r\n                            onChange={(bpData) => {\r\n                                this.setState({lastBpData: bpData});\r\n                                editorContext.setPageSizeWidth(bpData.prefer || bpData.start);\r\n                            }}\r\n                            value={editorContext.pageData ? this.getCurrentValue(editorContext) : \"...\"}\r\n                            spanStyle={{\r\n                                width: 256,\r\n                                fontSize: 14,\r\n                                border: \"0px solid #cfcfcf\",\r\n                            }}\r\n                            renderer={(bpData) => {\r\n                                return (\r\n                                    <div className=\"PreviewHeaderBreakpointsRenderer\">\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererIcon\">\r\n                                                {\r\n                                                    getBreakpointIcon(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererName\">\r\n                                                {\r\n                                                    bpData.type === 'device' ? bpData.name :\r\n                                                    getBreakpointName(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererSize\">\r\n                                                {\r\n                                                    bpData.start + \" px\"\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            !bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererTitle\">\r\n                                                {\r\n                                                    bpData.title\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                            valueRenderer={(bpData) => {\r\n                                return (\r\n                                    <div className=\"PreviewHeaderBreakpointsRenderer\">\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererIcon\">\r\n                                                {\r\n                                                    getBreakpointIcon(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererName\">\r\n                                                {\r\n                                                    bpData.type === 'device' ? bpData.name :\r\n                                                    getBreakpointName(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            !bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererTitle\">\r\n                                                {\r\n                                                    bpData.title\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        />\r\n\r\n                        <div style={{\r\n                            backgroundColor: \"#cfcfcf\",\r\n                            height: \"auto\",\r\n                            width: 1,\r\n                            marginLeft: 10\r\n                        }}>\r\n\r\n                        </div>\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <>\r\n                                <span\r\n                                    style={{\r\n                                        marginLeft: 10,\r\n                                        display:\"flex\",\r\n                                        alignItems: \"center\",\r\n                                        fontSize: 12\r\n                                    }}\r\n                                >\r\n                                    Width\r\n                                </span>\r\n                                <NumberInputEnterToChange\r\n                                    inputStyle={{\r\n                                        marginLeft: 10\r\n                                    }}\r\n                                    min={editorContext.editor.breakpointmanager.getMinWidth()}\r\n                                    max={9999}\r\n                                    value={editorContext.editor.rootLayoutRef.current.getSize(false).width}\r\n                                    onChange={(width) => {\r\n                                        editorContext.setPageSizeWidth(width);\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport PreviewHeaderBreakpoints from \"./Breakpoints/PreviewHeaderBreakpoints\";\r\nimport {getCommonDevices} from \"./Breakpoints/BreakpointHelper\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport default class PreviewHeader extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"EditorHeaderRoot\" style={{\r\n                width: `${this.context.zoomScale*100}%`,\r\n            }}>\r\n                <div className=\"EditorHeaderRightShortcuts\">\r\n                </div>\r\n                <div className=\"EditorHeaderCenterShortcuts\">\r\n                    <EditorHeaderPageSelect\r\n                        className=\"EditorHeaderCenterDiv\"\r\n                        style={{\r\n                            width: 200\r\n                        }}\r\n                    />\r\n                    <PreviewHeaderBreakpoints\r\n                        className=\"EditorHeaderCenterDiv EditorHeaderLastCenterDiv EditorHeaderBreakpoints\"\r\n                        devices={getCommonDevices()}\r\n                    />\r\n                </div>\r\n                <div className=\"PreviewHeaderLeftShortcuts\">\r\n                    <Button className=\"PublishButton\" onClick={() => {\r\n                        this.context.sendPublishCommand();\r\n                    }}>\r\n                        Publish\r\n                    </Button>\r\n                    <Button className=\"PreviewButton\" onClick={() => {\r\n                        this.context.sendEditCommand();\r\n                    }}>\r\n                        Edit\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport BreakPointManager from \"../BreakPointManager\";\r\nimport DragDropManager from \"../DragDropManager\";\r\nimport InputManager from \"../InputManager\";\r\nimport SelectManager from \"../SelectManager\";\r\nimport SnapManager from \"../SnapManager\";\r\nimport CopyManager from \"../CopyManager\";\r\nimport IdManager from \"../IdManager\";\r\nimport UndoRedo from \"../UndoRedo\";\r\nimport GridLineManager from \"../GridLineManager\";\r\nimport AnchorManager from \"../AnchorManager\";\r\nimport {initDynamicAnimations, initDynamicComponents} from \"../Dynamic/DynamicComponents\";\r\nimport AdjustmentGrid from \"../Adjustment/AdjustmentGrid\";\r\nimport AdjustmentSnap from \"../Adjustment/AdjustmentSnap\";\r\nimport AdjustmentGridLines from \"../Adjustment/AdjustmentGridLines\";\r\nimport AdjustmentGroupRect from \"../Adjustment/AdjustmentGroupRect\";\r\nimport MenuHolder from \"../Menus/MenuHolder\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport './EditorBoundary.css';\r\nimport IFrameCommunicator from \"../Test/IFrameCommunicator\";\r\nimport EditorController from \"../Test/EditorController\";\r\nimport Inspector from \"../Test/Inspector/Inspector\";\r\nimport AdjustmentResizeWrapper from \"../Adjustment/AdjustmentResizeWrapper\";\r\nimport AdjustmentHelpLinesWrapper from \"../Adjustment/AdjustmentHelpLinesWrapper\";\r\nimport AdjustmentHover from \"../Adjustment/AdjustmentHover\";\r\nimport {cloneObject, getScrollbarWidth} from \"../AwesomeGridLayoutUtils\";\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from \"lodash.throttle\";\r\nimport Layout from \"../Test/Layout/Layout\";\r\nimport AddComponent from \"../Test/AddComponent/AddComponent\";\r\nimport PageManager from \"../Test/PageManager/PageManager\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport ThemeManager from \"../Test/Theme/ThemeManager\";\r\nimport defaultSiteData from \"../../data/defaultSiteData.json\";\r\nimport defaultAllComponentData from \"../../data/allComponentData.json\";\r\nimport EditorHeader from \"./EditorHeader\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorType from \"./EditorType\";\r\nimport PreviewHeader from \"./PreviewHeader\";\r\n\r\nexport default class EditorBoundary extends React.Component{\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            preview: true\r\n        };\r\n\r\n        this.init(props);\r\n    }\r\n\r\n    // Declare all managers & refs\r\n    init = (props) => {\r\n        this.rootLayoutRef = React.createRef();\r\n        this.snapSvgRef = React.createRef();\r\n        this.gridContainerRef = React.createRef();\r\n        this.gridEditorRef = React.createRef();\r\n        this.groupSelectRef = React.createRef();\r\n        this.miniMenuHolderRef = React.createRef();\r\n        this.resizeRef = React.createRef();\r\n        this.helpLinesRef = React.createRef();\r\n        this.inspectorRef = React.createRef();\r\n        this.hoverRef = React.createRef();\r\n        this.layoutRef = React.createRef();\r\n        this.addComponentRef = React.createRef();\r\n        this.pageManagerRef = React.createRef();\r\n        this.themeManagerRef = React.createRef();\r\n        this.dragdrop = new DragDropManager();\r\n        this.inputManager = new InputManager();\r\n        this.select = new SelectManager(this.inputManager, this.groupSelectRef,\r\n            this.rootLayoutRef, this.miniMenuHolderRef, this.inspectorRef, this.resizeRef,\r\n            this.helpLinesRef, this.hoverRef);\r\n        this.snap = new SnapManager(5, this.snapSvgRef);\r\n        this.copyMan = new CopyManager(this.select, this.rootLayoutRef);\r\n        this.idMan = new IdManager('comp');\r\n        this.undoredo = new UndoRedo(100, document, this.idMan);\r\n        this.gridLine = new GridLineManager(this.gridContainerRef);\r\n        this.anchorMan = new AnchorManager();\r\n\r\n        initDynamicComponents();\r\n        initDynamicAnimations();\r\n\r\n        this.iFrameCommunicator = new IFrameCommunicator(undefined, \"WeblancerIFrameCommunicator\",\r\n            window.parent, this.onMessage);\r\n\r\n        // TODO test, clean them after test finished\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 80 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + P\");\r\n                this.pinInspector();\r\n            }\r\n            if ( key === 76 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + L\");\r\n                this.toggleThemeManager(true);\r\n            }\r\n            if ( key === 79 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + O\");\r\n                this.toggleThemeManager(false);\r\n            }\r\n            if ( key === 69 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + E\");\r\n                this.exportSiteData();\r\n            }\r\n        });\r\n\r\n\r\n    };\r\n\r\n    initContext = () => {\r\n        this.context.initContext({\r\n            editor: this,\r\n            rightMenus: {\r\n                addComponent: {\r\n                    state: false,\r\n                    toggle: this.toggleAddComponent\r\n                },\r\n                pageManager: {\r\n                    state: false,\r\n                    toggle: this.togglePageManager\r\n                },\r\n                themeManager: {\r\n                    state: false,\r\n                    toggle: this.toggleThemeManager\r\n                }\r\n            }\r\n        });\r\n\r\n        this.select.setContext(this.context);\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.initContext();\r\n        this.postMessage({\r\n            type: \"Holder\",\r\n            func: \"onEditorMounted\",\r\n            inputs: []\r\n        }, (data) => {\r\n            console.log(\"componentDidMount initFromHolder\", data);\r\n            this.initFromHolder(data.result);\r\n        });\r\n    }\r\n\r\n    initFromHolder = (data) => {\r\n        this.onSetZoomScale(data.zoomScale);\r\n    };\r\n\r\n    onMessage = (data, res) => {\r\n        EditorController.onMessage(data, res, this);\r\n    };\r\n\r\n    postMessage = (data, callback) => {\r\n        this.iFrameCommunicator.post(data, callback);\r\n    };\r\n\r\n    setPreview = (preview, callback) => {\r\n        callback && callback();\r\n        this.context.setPreview(preview);\r\n    }\r\n\r\n    testWebsite = () => {\r\n        let siteData = cloneObject(defaultSiteData);\r\n        let allComponentData = cloneObject(defaultAllComponentData);\r\n\r\n        this.onComponentDataUpdated(allComponentData);\r\n        this.onSiteDataUpdated(siteData);\r\n    };\r\n\r\n    onSiteDataUpdated = (siteData) => {\r\n        if (!siteData) {\r\n            siteData = cloneObject(defaultSiteData);\r\n        }\r\n\r\n        this.context.setSiteData(siteData, () => {\r\n            let pageData = siteData.allPages[Object.keys(siteData.allPages)[0]];\r\n            this.context.setPageData(pageData.props.pageId, false, this.onHeightChange);\r\n        });\r\n\r\n        // TODO Test\r\n        let allComponentData = cloneObject(defaultAllComponentData);\r\n        this.onComponentDataUpdated(allComponentData);\r\n    };\r\n\r\n    setBreakpoints = (breakpoints) => {\r\n        this.breakpointmanager = new BreakPointManager(breakpoints, this,\r\n            undefined, this.onZoomLevelChange,\r\n            this.onHeightChange, this.onResize);\r\n    }\r\n\r\n    onComponentDataUpdated = (allComponentData) => {\r\n        this.setState({allComponentData});\r\n    };\r\n\r\n    onPageChange = (pageId, force) => {\r\n        if (!force && this.context.pageData.props.pageId === pageId) {\r\n            return;\r\n        }\r\n\r\n        console.log(\"onPageChange\");\r\n        this.rootLayoutRef.current.onSelect(true, () => {\r\n            this.idMan.clear();\r\n\r\n            this.context.setPageData(undefined , () => {\r\n                let pageData = this.context.siteData.allPages[pageId];\r\n                this.context.setPageData(pageData);\r\n            });\r\n        });\r\n    };\r\n\r\n    togglePreview = (preview) => {\r\n        this.setState({preview});\r\n    };\r\n\r\n    setZoomLevel = (zoomLevel) => {\r\n        this.setState({zoomLevel: zoomLevel || 100});\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.breakpointmanager.dispose();\r\n    }\r\n\r\n    onPageZoomChange = (zoomScale) => {\r\n        this.postMessage({\r\n            type: \"Holder\",\r\n            func: \"changePageZoom\",\r\n            inputs: [zoomScale]\r\n        }, (data) => {\r\n            this.onSetZoomScale(data.result)\r\n        });\r\n    };\r\n\r\n    onSetZoomScale = (zoomScale) => {\r\n        document.documentElement.style.setProperty('--zoom-scale', zoomScale);\r\n\r\n        this.context.setZoomScale(zoomScale, this.onZoomLevelChange);\r\n    };\r\n\r\n    // Just in editor\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.rootLayoutRef.current)\r\n            width = this.rootLayoutRef.current.getSize(false).width;\r\n\r\n        this.onPageResize(width, this.rootLayoutRef.current);\r\n    };\r\n\r\n    notifyBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        this.rootLayoutRef.current.props.aglComponent.updateTemplates();\r\n        this.rootLayoutRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n    };\r\n\r\n    onZoomLevelChange = (newDevicePixelRatio) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n        !this.isPreview() && this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() && this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n    };\r\n\r\n    isPreview = () => {\r\n        return this.context.preview;\r\n    }\r\n\r\n    onHeightChange = (e) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n        this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() && this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n        this.rootLayoutRef.current.updateLayout();\r\n\r\n        this.onResize(e);\r\n    };\r\n\r\n    toggleInspector = () => {\r\n        return this.inspectorRef.current.toggle();\r\n    };\r\n\r\n    pinInspector = () => {\r\n        this.context.setInspectorPinned(!this.context.inspectorPinned, () => {\r\n            this.select.onScrollItem();\r\n            this.rootLayoutRef.current.invalidateSize();\r\n        });\r\n\r\n        // this.editorData.innerWidth = window.innerWidth -\r\n        // this.context.inspectorPinned ? this.context.inspectorWidth : 0;\r\n\r\n        this.onScrollBoundary();\r\n        this.rootLayoutRef.current.updateLayout();\r\n    };\r\n\r\n    onPageResize = (width, pageAgl, force) => {\r\n        let result = this.breakpointmanager.checkBreakPointChange(width);\r\n\r\n        this.onResize(undefined, width);\r\n\r\n        console.log(\"onPageResize\", width)\r\n        this.context.setPageSizeWidth(width);\r\n\r\n        if (result.changed || force) {\r\n            this.notifyBreakpointChange(width, result.currentBreakpointName,\r\n                this.breakpointmanager.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onResize = (e, width) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        this.onResizeD(e, width);\r\n        this.onResizeT(e, width);\r\n    };\r\n\r\n    onResizeD = debounce((e, width) => {\r\n        if (!width)\r\n            width = this.rootLayoutRef.current.getSize(false, true).width;\r\n        document.documentElement.style.setProperty('--vw-ratio', width / window.innerWidth);\r\n    }, 100);\r\n\r\n    onResizeT = throttle((e, width) => {\r\n        if (!width)\r\n            width = this.rootLayoutRef.current.getSize(false, true).width;\r\n\r\n        document.documentElement.style.setProperty('--vw-ratio', width / window.innerWidth);\r\n    }, 100);\r\n\r\n    onPageResizeStart = () => {\r\n        if (this.isPreview()) return;\r\n        this.resizeRef.current.activate(false);\r\n        this.helpLinesRef.current.activate(false);\r\n        this.miniMenuHolderRef.current.activate(false);\r\n    };\r\n\r\n    onPageResizeStop = () => {\r\n        if (this.isPreview()) return;\r\n        this.resizeRef.current.activate(true);\r\n        this.helpLinesRef.current.activate(true);\r\n        this.miniMenuHolderRef.current.activate(true);\r\n    };\r\n\r\n    onScrollBoundary = (e) => {\r\n        !this.isPreview() && this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() &&this.select.onScrollItem();\r\n\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n    };\r\n\r\n    updateLayout = () => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        let layout = [];\r\n\r\n        let getLayoutItem = (item, childData) => {\r\n            if (!item || !item.mounted)\r\n                return;\r\n\r\n            return {\r\n                id: childData.props.id,\r\n                childData: childData,\r\n                childrenData: Object.keys(item.getFromTempData(\"savedChildren\")).map(childId => {\r\n                    let childData = item.getFromTempData(\"savedChildren\")[childId];\r\n                    return getLayoutItem(\r\n                        item.allChildRefs[childId].current,\r\n                        childData\r\n                    );\r\n                }).filter(il => {\r\n                    return il;\r\n                })\r\n            };\r\n        };\r\n\r\n        let pageChildData = {\r\n            tagName: this.rootLayoutRef.current.props.tagName,\r\n            props: this.rootLayoutRef.current.getClearProps({...this.rootLayoutRef.current.props}),\r\n            zIndex: 0\r\n        };\r\n\r\n        layout.push(getLayoutItem(this.rootLayoutRef.current, pageChildData));\r\n\r\n        this.layoutRef.current.setLayout(layout);\r\n    };\r\n\r\n    openLayout = () => {\r\n        this.layoutRef.current.open();\r\n    };\r\n\r\n    closeLayout = () => {\r\n        this.layoutRef.current.close();\r\n    };\r\n\r\n    toggleAddComponent = (force, state) => {\r\n        if (state === true) {\r\n            this.addComponentRef.current.open();\r\n            return true;\r\n        }\r\n        return this.addComponentRef.current.toggle(force);\r\n    };\r\n\r\n    togglePageManager = (force, state) => {\r\n        if (state === true) {\r\n            this.pageManagerRef.current.open();\r\n            return true;\r\n        }\r\n        return this.pageManagerRef.current.toggle(force);\r\n    };\r\n\r\n    toggleThemeManager = (force, state) => {\r\n        if (state === true) {\r\n            this.themeManagerRef.current.open();\r\n            return true;\r\n        }\r\n        return this.themeManagerRef.current.toggle(force);\r\n    };\r\n\r\n    // pageData is a childData that is for PageBase component\r\n    getLivePageData = () => {\r\n        return {\r\n            tagName: \"PageBase\",\r\n            props: this.rootLayoutRef.current.getClearProps({...this.rootLayoutRef.current.props})\r\n        };\r\n    };\r\n\r\n    getLiveSiteData = () => {\r\n        let siteData = this.context.siteData || {allPages: {}};\r\n\r\n        siteData.allPages[uuidv4()] = this.getLivePageData();\r\n\r\n        return siteData;\r\n    };\r\n\r\n    exportSiteData = () => {\r\n        let siteData = this.getLiveSiteData();\r\n\r\n        const fileName = \"siteData\";\r\n        const json = JSON.stringify(siteData);\r\n        const blob = new Blob([json],{type:'application/json'});\r\n        const href = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = href;\r\n        link.download = fileName + \".json\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    getSiteData = (callback) => {\r\n        callback && callback(this.context.siteData);\r\n        return this.context.siteData;\r\n    }\r\n\r\n    render() {\r\n        // TODO if this.context.siteData not loaded, show loading component\r\n        return (\r\n                <div className=\"EditorBoundaryRoot\" onContextMenu={(e) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }}>\r\n                    {\r\n                        !this.isPreview() &&\r\n                        <div className=\"EditorBoundaryHeader\">\r\n                            <EditorHeader\r\n                                onAddComponentClick={this.toggleAddComponent}\r\n                                onInspectorClick={this.toggleInspector}\r\n                                onThemeManagerClick={this.toggleThemeManager}\r\n                                onPageManagerClick={this.togglePageManager}\r\n                                onPageZoomChange={this.onPageZoomChange}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        this.isPreview() &&\r\n                        <div className=\"EditorBoundaryHeader\">\r\n                            <PreviewHeader\r\n                                onAddComponentClick={this.toggleAddComponent}\r\n                                onInspectorClick={this.toggleInspector}\r\n                                onThemeManagerClick={this.toggleThemeManager}\r\n                                onPageManagerClick={this.togglePageManager}\r\n                                onPageZoomChange={this.onPageZoomChange}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    <div className=\"EditorBoundaryContent\">\r\n                        {\r\n                            !this.isPreview() &&\r\n                            <>\r\n                                <AdjustmentGrid\r\n                                    ref={this.gridEditorRef}\r\n                                />\r\n                                <AdjustmentSnap\r\n                                    ref={this.snapSvgRef}\r\n                                />\r\n                                <AdjustmentGridLines\r\n                                    ref={this.gridContainerRef}\r\n                                />\r\n                                <AdjustmentGroupRect\r\n                                    ref={this.groupSelectRef}\r\n                                />\r\n\r\n                                <PageManager\r\n                                    ref={this.pageManagerRef}\r\n                                    editor={this}\r\n                                    onPageChange={this.onPageChange}\r\n                                />\r\n                            </>\r\n                        }\r\n\r\n                        {\r\n                            this.context.pageData &&\r\n                            <div\r\n                                className=\"EditorBoundaryPageHolder\"\r\n                                style={{\r\n                                    // TODO add scale support\r\n                                    padding: \"0 50px\"\r\n                                }}\r\n                                onScroll={this.onScrollBoundary}\r\n                                onContextMenu={(e) => {\r\n                                    e.stopPropagation();\r\n                                    e.preventDefault();\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    className=\"EditorBoundaryPageHolderHover\"\r\n                                    style={{\r\n                                        bottom: getScrollbarWidth()\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        this.rootLayoutRef.current.onSelect(true);\r\n                                    }}\r\n                                />\r\n                                <div className=\"PageBaseWhiteBackground\" style={{\r\n                                    marginTop: `${8*this.context.zoomScale}vh`\r\n                                }}>\r\n                                    <PageBase\r\n                                        key={this.context.pageData.props.pageId}\r\n                                        id=\"page\"\r\n                                        aglRef={this.rootLayoutRef}\r\n                                        viewRef={this.rootLayoutRef}\r\n                                        breakpointmanager={this.breakpointmanager}\r\n                                        undoredo={this.undoredo}\r\n                                        dragdrop={this.dragdrop}\r\n                                        select={this.select}\r\n                                        snap={this.snap}\r\n                                        input={this.inputManager}\r\n                                        idMan={this.idMan}\r\n                                        gridLine={this.gridLine}\r\n                                        gridEditorRef={this.gridEditorRef}\r\n                                        anchorMan={this.anchorMan}\r\n                                        copyMan={this.copyMan}\r\n                                        editorData={this.editorData}\r\n                                        onPageResize={this.onPageResize}\r\n                                        onPageResizeStart={this.onPageResizeStart}\r\n                                        onPageResizeStop={this.onPageResizeStop}\r\n                                        editor={!this.isPreview() && this}\r\n                                        devicePixelRatio={this.state.devicePixelRatio}\r\n                                        {...this.context.pageData.props}\r\n                                        pageSize={this.context.pageSize}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            !this.isPreview() &&\r\n                            <>\r\n                                {\r\n                                    !this.context.pageData &&\r\n                                    <div>\r\n                                        {/*Loading...*/}\r\n                                    </div>\r\n                                }\r\n\r\n                                <AdjustmentHover\r\n                                    ref={this.hoverRef}\r\n                                />\r\n\r\n                                <AdjustmentHelpLinesWrapper\r\n                                    ref={this.helpLinesRef}\r\n                                />\r\n\r\n                                <AdjustmentResizeWrapper\r\n                                    ref={this.resizeRef}\r\n                                />\r\n\r\n                                {\r\n                                    this.context.pageData &&\r\n                                    <Layout\r\n                                        ref={this.layoutRef}\r\n                                        idMan={this.idMan}\r\n                                    />\r\n                                }\r\n\r\n                                {\r\n                                    this.context.siteData &&\r\n                                    this.context.pageData &&\r\n                                    <ThemeManager\r\n                                        ref={this.themeManagerRef}\r\n                                        editor={this}\r\n                                    />\r\n                                }\r\n\r\n                                <AddComponent\r\n                                    ref={this.addComponentRef}\r\n                                    allComponentData={this.state.allComponentData}\r\n                                    pageRef={this.rootLayoutRef}\r\n                                    editor={this}\r\n                                />\r\n\r\n                                <Inspector\r\n                                    ref={this.inspectorRef}\r\n                                    pinInspector={this.pinInspector}\r\n                                />\r\n                                <MenuHolder\r\n                                    ref={this.miniMenuHolderRef}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport EditorBoundary from \"./AwesomeGridLayout/Editor/EditorBoundary\";\r\nimport EditorContextProvider from \"./AwesomeGridLayout/Editor/EditorContext\";\r\n\r\nReactDOM.render(\r\n    <EditorContextProvider>\r\n        <EditorBoundary />\r\n    </EditorContextProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/close.ebf2f3f4.svg\";"],"sourceRoot":""}