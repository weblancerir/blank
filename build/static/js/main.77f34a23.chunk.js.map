{"version":3,"sources":["AwesomeGridLayout/icons/paint.svg","AwesomeGridLayout/Adjustment/icons/plus.svg","AwesomeGridLayout/icons/align-left.svg","AwesomeGridLayout/icons/align-center.svg","AwesomeGridLayout/icons/align-right.svg","AwesomeGridLayout/icons/align-top.svg","AwesomeGridLayout/icons/align-middle.svg","AwesomeGridLayout/icons/align-bottom.svg","AwesomeGridLayout/icons/chain.svg","AwesomeGridLayout/icons/unlink.svg","AwesomeGridLayout/icons/more.svg","AwesomeGridLayout/icons/question.svg","AwesomeGridLayout/Adjustment/icons/minimize.svg","AwesomeGridLayout/Adjustment/icons/maximize.svg","serviceWorker.js","AwesomeGridLayout/AwesomeGridLayoutUtils.js","AwesomeGridLayout/BreakPointManager.js","AwesomeGridLayout/DragDropManager.js","AwesomeGridLayout/GridChildContainerChildren.js","AwesomeGridLayout/Test/Inspector/InspectorBreadcrumbs.js","AwesomeGridLayout/HelperComponents/IconButton.js","AwesomeGridLayout/Test/Inspector/InspectorAligns.js","AwesomeGridLayout/AwesomwGridLayoutHelper.js","AwesomeGridLayout/Menus/CommonComponents/NumberInputWithUnit.js","AwesomeGridLayout/Test/Inspector/InspectorTitle.js","AwesomeGridLayout/Test/Inspector/InspectorSize.js","AwesomeGridLayout/Test/Inspector/DockSwitch.js","AwesomeGridLayout/Test/Inspector/InspectorPosition.js","AwesomeGridLayout/Menus/CommonComponents/DropDown.js","AwesomeGridLayout/Menus/CommonComponents/NumberInput.js","AwesomeGridLayout/Test/Inspector/InspectorScroll.js","AwesomeGridLayout/Test/Inspector/InspectorPadding.js","AwesomeGridLayout/Test/Inspector/InspectorOverflow.js","AwesomeGridLayout/Menus/CommonComponents/TextInput.js","AwesomeGridLayout/Test/Inspector/InspectorAnchor.js","AwesomeGridLayout/Test/Inspector/InspectorAdjustment.js","AwesomeGridLayout/Components/Helpers/AGLComponent.js","AwesomeGridLayout/Menus/MenuBase/MenuButton.js","AwesomeGridLayout/Menus/MenuBase/MenuBaseIndexTitle.js","AwesomeGridLayout/Components/Containers/Menus/Components/LightTooltip.js","AwesomeGridLayout/Menus/MenuBase/MenuBase.js","AwesomeGridLayout/Menus/CommonComponents/Slider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInputControlled.js","AwesomeGridLayout/Menus/CommonComponents/Image.js","AwesomeGridLayout/Portal.js","AwesomeGridLayout/Test/Theme/HexColorPicker.js","AwesomeGridLayout/Test/Theme/ThemeColorPicker.js","AwesomeGridLayout/Menus/CommonComponents/ColorPicker.js","AwesomeGridLayout/Components/Containers/Menus/Components/Background.js","AwesomeGridLayout/Menus/CommonComponents/Divider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInput.js","AwesomeGridLayout/Components/Containers/Menus/Components/Border.js","AwesomeGridLayout/Components/Containers/Menus/Components/Corners.js","AwesomeGridLayout/Menus/CommonComponents/CircularSlider.js","AwesomeGridLayout/Menus/CommonComponents/Angle.js","AwesomeGridLayout/Components/Containers/Menus/Components/Shadow.js","AwesomeGridLayout/Components/Containers/Menus/BorderDesign.js","AwesomeGridLayout/Menus/CommonComponents/GridViewer.js","AwesomeGridLayout/Components/Containers/Menus/Components/AnimationSelector.js","AwesomeGridLayout/Components/Containers/Menus/Components/AnimationOptions.js","AwesomeGridLayout/Components/Containers/Menus/AnimationDesign.js","AwesomeGridLayout/Components/Containers/ContainerBase.js","AwesomeGridLayout/Components/Containers/Menus/SectionDesign.js","AwesomeGridLayout/Components/Containers/Header.js","AwesomeGridLayout/Components/Containers/Footer.js","AwesomeGridLayout/Components/Containers/Section.js","AwesomeGridLayout/Test/Inspector/InspectorBackground.js","AwesomeGridLayout/Components/Pages/PageBase.js","AwesomeGridLayout/Components/Stack/VerticalSpacer.js","AwesomeGridLayout/Test/Animations/FadeInAnimation.js","AwesomeGridLayout/Test/Animations/BounceInAnimation.js","AwesomeGridLayout/Test/Animations/GlideInAnimation.js","AwesomeGridLayout/Test/Animations/FloatInAnimation.js","AwesomeGridLayout/Test/Animations/ExpandInAnimation.js","AwesomeGridLayout/Test/Animations/SpinInAnimation.js","AwesomeGridLayout/Test/Animations/FlyInAnimation.js","AwesomeGridLayout/Test/Animations/TurnInAnimation.js","AwesomeGridLayout/Test/Animations/ArcInAnimation.js","AwesomeGridLayout/Test/Animations/PuffInAnimation.js","AwesomeGridLayout/Test/Animations/FoldInAnimation.js","AwesomeGridLayout/Test/Animations/FlipInAnimation.js","AwesomeGridLayout/Test/Animations/RevealAnimation.js","AwesomeGridLayout/Dynamic/DynamicComponents.js","AwesomeGridLayout/Adjustment/AdjustmentPageControllers.js","AwesomeGridLayout/GridChildContainerFixedHolder.js","AwesomeGridLayout/Test/PaddingInterface.js","AwesomeGridLayout/Test/ParentSelectInterface.js","AwesomeGridLayout/GridChildContainer.js","AwesomeGridLayout/AGLAnchor.js","AwesomeGridLayout/Adjustment/ResizePanePage.js","AwesomeGridLayout/Adjustment/AdjustmentResizePage.js","AwesomeGridLayout/Test/EventTrigger.js","AwesomeGridLayout/Test/WindowCache.js","AwesomeGridLayout/AnimationHolder.js","AwesomeGridLayout/Test/VisibilitySensorWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpSize.js","AwesomeGridLayout/AwesomeGridLayout2.js","AwesomeGridLayout/Components/Helpers/AGLWrapper.js","AwesomeGridLayout/Components/Stack/StackSpacerContainer.js","AwesomeGridLayout/Adjustment/AdjustmentMove.js","AwesomeGridLayout/Components/Stack/StackSpacerResizer.js","AwesomeGridLayout/Components/Stack/StackSpacer.js","AwesomeGridLayout/Components/Stack/Stack.js","AwesomeGridLayout/Test/ContextMenu.js","AwesomeGridLayout/InputManager.js","AwesomeGridLayout/SelectManager.js","AwesomeGridLayout/SnapManager.js","AwesomeGridLayout/CopyManager.js","AwesomeGridLayout/IdManager.js","AwesomeGridLayout/UndoRedo.js","AwesomeGridLayout/GridLineManager.js","AwesomeGridLayout/AnchorManager.js","AwesomeGridLayout/Adjustment/AdjustmentGridRoot.js","AwesomeGridLayout/Adjustment/AdjustmentGridRow.js","AwesomeGridLayout/Adjustment/AdjustmentGrid.js","AwesomeGridLayout/Adjustment/AdjustmentSnapLines.js","AwesomeGridLayout/Adjustment/AdjustmentSnap.js","AwesomeGridLayout/Adjustment/GridLine.js","AwesomeGridLayout/Adjustment/AdjustmentGridLinesWrapper2.js","AwesomeGridLayout/Adjustment/AdjustmentGridLines.js","AwesomeGridLayout/Adjustment/ResizePane.js","AwesomeGridLayout/Adjustment/AdjustmentGroupRect.js","AwesomeGridLayout/Menus/MiniMenu/Components/RightClick.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenuVerticalDivider.js","AwesomeGridLayout/Menus/MiniMenu/Components/Help.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenu.js","AwesomeGridLayout/Menus/MenuHolder.js","AwesomeGridLayout/Test/IFrameCommunicator.js","AwesomeGridLayout/Test/BreakpointController.js","AwesomeGridLayout/Test/EditorController.js","AwesomeGridLayout/Test/Inspector/Inspector.js","AwesomeGridLayout/Adjustment/AdjustmentStretch.js","AwesomeGridLayout/Adjustment/AdjustmentResize.js","AwesomeGridLayout/Adjustment/AdjustmentResizeWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLines.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLinesWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHover.js","AwesomeGridLayout/Test/Layout/Layout.js","AwesomeGridLayout/Test/AddComponent/ComponentGrid.js","AwesomeGridLayout/Test/AddComponent/AddComponent.js","AwesomeGridLayout/Test/PageManager/PageTypeTitle.js","AwesomeGridLayout/Test/PageManager/PageSetting/PageInfo.js","AwesomeGridLayout/Menus/CommonComponents/AglRadio.js","AwesomeGridLayout/Test/PageManager/PageSetting/Permissions.js","AwesomeGridLayout/Test/PageManager/PageSetting/SeoGoogle.js","AwesomeGridLayout/Test/PageManager/PageSetting/SocialShare.js","AwesomeGridLayout/Test/PageManager/PageSetting/PageSetting.js","AwesomeGridLayout/Test/PageManager/PageItem.js","AwesomeGridLayout/Test/PageManager/AddNewPageDialogItem.js","AwesomeGridLayout/Test/PageManager/AddNewPageDialog.js","AwesomeGridLayout/Test/PageManager/PageManager.js","AwesomeGridLayout/Test/Theme/ThemeTextItem.js","AwesomeGridLayout/Test/Theme/ThemeColorsItem.js","AwesomeGridLayout/Test/Theme/ThemeManager.js","AwesomeGridLayout/Editor/EditorBoundary.js","index.js","AwesomeGridLayout/icons/close.svg"],"names":["module","exports","Boolean","window","location","hostname","match","initGriddata","griddataProp","breakpointdata","initialized","clone","cloneObject","props","griddata","getDefaultChildgriddata","bpData","exist","props2","prop","hasOwnProperty","k","sample","x","y","w","h","minW","undefined","maxW","minH","maxH","constraints","left","top","right","bottom","margin","all","units","scrollType","absolute","fix","autoHeight","autoWidth","overflowData","state","overflowY","resizable","draggable","hasOwnBreakPoints","isContainer","autoDock","sortedBreakPoints","getSortedBreakPoints","name","obj","Array","copy","i","len","length","Object","attr","shallowEqual","objA","objB","keysA","keys","keysB","throttleDebounce","fn","ms","deTimer","dontCall","_","args","arguments","apply","setTimeout","clearTimeout","scrollbarWidth","getScrollbarWidth","document","div","createElement","css","width","height","position","overflow","MsOverflowStyle","body","appendChild","offsetWidth","clientWidth","removeChild","assignData","newData","assign","JSToCSS","JS","cssString","objectKey","replace","g","toLowerCase","updateStyle","styleNode","style","styleName","innerHTML","styleSheet","cssText","createTextNode","appendStyle","styleId","setAttribute","type","getElementsByTagName","swapArrayElements","arr","indexA","indexB","temp","BreakPointManager","breakpoints","editorData","onBreakpointChange","onZoomLevelChange","onHeightChange","onResize","updateBreakpoint","start","end","bp","find","b","getUpperBreakPoint","push","deleteBreakpoint","upper","fromClone","windowInnerWidth","lastWidth","copyDesign","designDatas","sourceItem","cloneDesignDatas","getCopyDesign","pasteDesign","item","forEach","designData","index","design","justOneBp","currentBpName","breakpointmanager","current","bpName","getWindowWidth","getWindowHeight","innerHeight","setWindowWidth","getBpData","getDevicePixelRatio","devicePixelRatio","onDevicePixelRatioChange","changed","onHeightResize","lastHeight","onWindowResize","newWidth","innerWidth","inspectorPinned","inspectorWidth","result","checkBreakPointChange","currentBreakpointName","lastBreakpointName","size","getSize","setData","dataSet","param","value","breakpointName","params","split","override","getFromData","firstParamResult","findFirstUpperBreakPointParam","slice","p","getHighestBpName","getCompositeFromData","results","checkBreakpointName","composite","merge","hasDataInBreakPoint","findFirstUpperBreakPointName","getMinWidth","minSize","filter","sort","a","getDefault","Infinity","this","addEventListener","removeEventListener","breakPointData","DragDropManager","setDragging","draggingItem","getDragging","isDraggingItemFixed","portalNodeId","setDraggingStop","mouseOver","parent","getParentsId","includes","id","prepareRects","dropItem","newParent","callback","fromUndoRedo","undoPower","toggleHelpLines","onChildLeave","drop","onChildDrop","newItem","itemId","firstRelativeX","dragData","firstPos","firstRelativeY","parentRect","lastRelativeX","lastRelativeY","newParentRect","parentId","newParentId","undoredo","add","idMan","getItem","onSelect","setMouseOver","setPosition","dragdrop","gridLine","hasGridLine","removeMouseOver","positionData","getFromTempData","toggleGridLines","setMouseOverForNonDragging","mouseOverNonDragging","getMouseOverForNonDragging","GridChildContainerChildren","saveState","allChildren","allChildId","allChildIndex","values","map","c","z","zIndex","child","getSorted","children","getChildren","agl","getChildrenOverride","nextProps","nextState","nextContext","JSON","stringify","React","Component","InspectorBreadcrumbs","mounted","className","reverse","onClick","e","key","tagName","IconButton","aria-label","marginLeft","borderRadius","buttonBaseStyle","disabled","display","justifyContent","alignItems","padding","imageContainerStyle","icon","InspectorAligns","getButtonsData","horizontal","img","src","require","vertical","data","alignItem","saveGridItemStyle","setGridItemStyle","select","onScrollItem","gridItemStyle","alignSelf","marginTop","marginBottom","justifySelf","marginRight","baseDocks","getBaseDocks","setDocks","NumberInputWithUnit","inputFilter","oldValue","okay","parseFloat","isNaN","Math","min","max","onChange","target","endsWith","getValue","onShowUnits","setState","anchorEl","currentTarget","round","showUnits","unitIconButton","createRef","classes","classNames","textAlign","inputStyle","unit","ref","unitButtonStyle","disableUnit","color","unitMenuStyle","open","onClose","MenuListProps","dense","onUnitChange","InspectorTitle","defaultOpen","title","InspectorSize","onItemPropsChange","owner","reload","getUnit","getViewRatioStyle","setNewSize","parentValue","defaultValue","getPxValueFromCSSValue","runtimeValueToStyleValue","propName","onPropsChange","addListener","removeListener","runtimeStyle","runtimeGridItemStyle","getRuntimeGridItemStyle","widthForPercent","heightForPercent","disabledProps","scrollWidthMinusPadding","widthUnits","scrollHeightMinusPadding","heightUnits","minWidth","maxWidth","minWidthUnits","minHeight","maxHeight","minHeightUnits","maxWidthUnits","maxHeightUnits","defaultProps","DockSwitch","withStyles","theme","root","switchBase","transform","opacity","backgroundColor","thumb","boxShadow","track","checked","Switch","InspectorPosition","onDockActiveChange","side","oldDocks","updateHelpLines","helpLinesParent","dragging","onDockAutoChange","setTempData","parentProp","compositeGridItemStyle","onValueChange","getUnitFromStyleValue","updateResizePanes","docks","auto","fontSize","DropDown","option","spanStyle","cursor","menuStyle","options","NumberInput","test","toFixed","InspectorScroll","onChangeScrollEffect","offsetTop","setScrollBehaviour","viewRef","onChangeOffsetTop","behaviour","getValueFromCSSValue","InspectorPadding","compositePadding","setDataInBreakpoint","equalPadding","pxValue","getStyleValueFromPx","invalidateSize","requestAnimationFrame","onEqualPadding","InspectorOverflow","onChangeState","thisBpOverflowData","compositOverflowData","overflowX","newOverflowData","console","log","changeScrollDirection","onChangeAuto","ToggleButtonGroup","exclusive","ToggleButton","TextInput","InspectorAnchor","onEnableAnchor","enable","anchor","anchorMan","addAnchor","removeAnchor","onChangeName","newName","modifyAnchor","v","InspectorAdjustment","onRotationChange","degree","warn","rotate","oldDegree","setTransformStyle","updateLayout","AGLComponent","resolveDesignData","getData","componentData","getDefaultData","componentBpData","tempBpData","getAgl","aglRef","onDesignChange","designKey","updateDesign","getCompositeDesignData","getInspector","getInspectorOverride","MenuButton","menu","updateMenu","MenuBaseIndexTitle","disableRipple","onIndexClick","LightTooltip","tooltip","shadows","Tooltip","LightMenuTooltip","MenuBase","close","selectedIndexNo","getDefaultPos","defaultPosition","defaultIndexNo","handle","bounds","styles","menuTitle","indexData","PopperProps","placement","render","Slider","step","SliderInputControlled","handleStyle","Image","onError","hasError","errorsrc","Portal","canUseDOM","defaultNode","node","nodeId","getElementById","ReactDOM","createPortal","HexColorPicker","onChangeComplete","hex","disableAlpha","colorKeys","ThemeColorPicker","onSelectColor","onAddColor","editor","siteData","myColors","unshift","onAddColorClick","addColor","themeColorCategoryItems","Colors","items","parseColor","themeManagerRef","getColor","paletteName","chroma","ColorPicker","getRgbA","r","rgba","handleClick","displayColorPicker","handleClose","handleChangeComplete","lastValue","alpha","getColorAndAlpha","handleAlphaChange","background","getBoundingClientRect","Background","Divider","SliderInput","Border","border","Corners","radius","changeSide","link","_side","onLinkClick","direction","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","CircularSlider","onMouseDown","rect","rootDivRef","onMouseMove","onMouseUp","clientX","clientY","vx","vy","angle","atan2","PI","Angle","loop","deg2rad","rad2deg","Shadow","shadow","getDegree","xOffset","yOffset","ratio","atan","getRatio","tan","calcDegree","xO","yO","abs","distance","blur","BorderDesign","getIndex","viewBox","fillRule","d","getOptions","fillColor","GridViewer","AnimationSelector","onSelectAnimation","playAnimation","allAnimationNames","animation","noneClasses","displayName","join","charAt","toUpperCase","AnimationOptions","DynamicAnimations","duration","delay","once","AnimationDesign","ContainerBase","getPrimaryOptions","compositeDesign","getStaticChildren","shadowColor","borderColor","topLeft","topRight","bottomRight","bottomLeft","aglComponent","SectionDesign","Header","isSection","setStyleParam","defaultGridItemStyle","gridArea","as","autoConstraintsOff","helplineOff","Footer","Section","isVerticalSection","designStyle","InspectorBackground","onChangeColor","PageBase","initDataFromPageData","allSectionsH","allSectionsV","grid","gridX","gridY","gridTemplateRows","gridTemplateColumns","initKeyboard","event","which","keyCode","ctrl","ctrlKey","preventDefault","selectedItem","getSelected","getHorizontalSection","moveUp","moveDown","getVerticalSection","moveLeft","moveRight","pageResize","containerHeight","deleteHorizontalSection","findIndex","currentSection","areas","getGridArea","x1","parseInt","x2","firstRow","lastRow","verticalSection","x12","y12","x22","y22","setGridArea","horizontalSection","x13","y13","x23","y23","splice","fill","setGrid","deleteVerticalSection","y1","y2","firstCol","lastCol","mainColIndex","getMainColIndex","addSectionQueue","dynamicComponents","isVertical","addQueue","checkingAddQueue","nextOne","shift","checkAddQueue","addVerticalSection","newNextOne","addHorizontalSection","onItemPreDelete","allow","onItemPreResizeStop","dir","delta","yLineRefs","getYlineRef","firstLineTop","getGridLineRect","targetTop","selectedX1","lineTop","checkIndex","nextSectionV","targetBottom","selectedX2","lineBottom","currentSectionIndex","currentSectionGridArea","Tag","section","resizeSides","addChild","insertIndex","areas2","currentIndex","sideSection","updateTemplates","isHideInBreakpoint","hasMiniMenuOverride","invalidateSizeOverride","self","updateParent","updateChildren","sourceId","tempSize","allChildRefs","childRef","getSectionOfPoint","isPointInclude","fullWidth","isPage","page","VerticalSpacer","FadeInAnimation","animationStyles","StyleSheet","create","fadeIn","animationName","animationDuration","animationDelay","BounceInAnimation","bounceIn","GlideInAnimation","tx","sin","ty","cos","glideIn","FloatInAnimation","floatIn","ExpandInAnimation","power","expandIn","SpinInAnimation","spinNo","firstRotate","spinIn","FlyInAnimation","windowSize","flyIn","TurnInAnimation","viewSize","turnIn","animationTimingFunction","ArcInAnimation","arcIn","PuffInAnimation","puffIn","FoldInAnimation","transformOrigin","foldIn","FlipInAnimation","flipIn","RevealAnimation","clipPath","reveal","DynamicComponents","AdjustmentPageControllers","addSection","getAnchor","needUpdate","updateTimeout","forceUpdate","containerClasses","pointerEvents","modifiers","preventOverflow","enabled","boundariesElement","hide","GridChildContainerFixedHolder","clientHeight","PaddingInterface","boxSizing","borderTop","borderLeft","borderBottom","borderRight","ParentSelectInterface","GridChildContainer","aglStyle","modifyContainerStyle","modifyContainerStyleOverride","paddingTop","paddingLeft","paddingBottom","paddingRight","getContainerStyleId","modifyOverflowStyle","getOverflowStyleId","getOverflowStyle","webkitScrollbarStyle","webkitScrollbarStyleId","scrollStyleNode","updateAdjustments","controllerRef","fixedHolderRef","needOverflow","selectAsParent","selected","show","overflowClasses","containerRef","overflowRef","onScroll","AGLAnchor","ResizePanePage","isLeftClick","stopPropagation","mouseDown","pointerType","button","moving","onDrag","onDragStart","onDragStop","lastMouseX","lastMouseY","onResizeStart","onResizeStop","isCorner","draggingStart","onPointerDown","AdjustmentResizePage","sides","EventTrigger","defaultListener","listener","listeners","l","trigger","windowCache","boundingRects","clientsWidth","clientsHeight","scrollsTop","scrollsLeft","scrollsWidth","scrollsHeight","clearCache","clearCacheTimeuot","getCachedBoundingRect","getCachedClientWidth","getCachedClientHeight","getCachedScrollTop","scrollTop","getCachedScrollLeft","scrollLeft","getCachedScrollWidth","scrollWidth","getCachedScrollHeight","scrollHeight","addToCache","AnimationHolder","transformRef","VisibilitySensorWrapper","partialVisibility","containment","getPageOverflowRef","active","disableVS","AdjustmentHelpSize","getText","resizeHelpData","toString","AwesomeGridLayout2","callOverride","funcName","getOverrideProp","hasOverride","init","needRender","lastZIndex","getNextIndexData","savedChildren","savedChildrenArray","childData","oldId","createChildByData","Children","createdChild","getClearProps","renderChild","childs","childrenData","initLayout","getDefaultStyle","setStyle","defaultGrid","defaultStyle","lateMounted","addToSnap","onPageResize","onChildMounted","getShortcutOptions","hasMiniMenu","debounce","getBoundarySize","snap","addSnap","p1","p2","parentsId","getGridLineSnaps","snaps","horizontals","verticals","xLineRef","getXlineRef","yLineRef","newId","fixed","getId","AGLProps","input","copyMan","gridEditorRef","getAllChildOverrideProps","component","force","fullForce","widthMinusPadding","heightMinusPadding","onWindowSizeChange","getRenderChildData","arrangeIndex","nextZIndex","nextChild","prevZIndex","prevChild","firstZIndex","changeIndex","allChildData","change","startIndex","lastIndex","testChildData","setChildZIndex","childId","childZIndex","forceCalculate","childElement","newProps","keepChildren","Error","onChildAdd","newBreakpointName","delete","getChildData","createItem","clearItem","removeChildElement","clearMiniMenu","getAllOverrideProps","removeId","removeGridLine","removeSnap","updateHelpSizeLines","setInspector","onMouseOver","fromEnter","setItemHover","onMouseOut","hover","updateHover","onMouseEnter","outAllParent","forceRect","forceGridLines","gridType","isPrepared","onNewChildMounted","calcResult","coordinates","childRect","thisRect","calculateChildGridItem","relativeY","setProps","clearFromAllBp","newChild","removeIdAndChildrenId","nonePointerEventForChildren","parentDragging","onParentDragging","setRuntimeStyle","group","callGroup","resizing","moveWithMouse","firstBoundaryPos","setDraggingState","groupDragStart","boundarySize","isFixed","checkSnapOnDrag","updateGridLines","groupDrag","addGrid","groupDragStop","drawSnap","dropped","updateMiniMenu","relativeX","redoData","undoData","calculateGridItem","fakeStyle","snapDelta1","getSnapDelta","snapDelta2","snapDelta3","snapDelta","deltaX","snapV","deltaY","snapH","pointOfSnapH","pointOfSnapV","parentGridLines","checkSnap","dontCalculate","getDocks","fromState","dontAutoDock","cy1","cy2","cx1","cx2","calculateGridArea","coordinatesAbs","coordinateToRelative","oldGridItemStyle","centerX","centerY","parentCenterMinusX","parentCenterPlusX","cy2IsLastLine","centerDiffX","centerDiffY","getPxOrPcOrValue","cx2IsLastLine","coordinateToAbsolute","getTopLeft","pageResizeStart","resizeData","firstX","firstLeft","activateHover","onPageResizeStart","pageResizeCalculate","firstY","firstTop","firstBoundaryWidth","firstBoundaryHeight","firstBoundaryTop","firstBoundaryLeft","onResizeCalculate","updatePageAdjustments","onResizeData","backContainerRef","finalDelta","rad","cx","cy","cxy","sqrt","cxp","cyp","thetaH","thetaW","Dh","Dw","dxH","dyH","dxW","dyW","getResizeDelta","rotateDegree","checkSnapOnResize","setResizeHelpData","animationCss","pageResizeStop","setPageSize","onPageResizeStop","setSize","firstWidth","firstHeight","gridCoordinates","dontAddToSnap","oldStyle","isPercent","isViewRatio","newValue","getParentProps","postFix","newRuntimeStyle","getGridItemStyleId","newGridItemStyle","dontOverride","getStyleId","getDesignStyleId","setDesignStyle","newDesignStyle","designStyleNode","getTransformStyleId","newTransform","transformStyleNode","getTransformStyle","compositeTransform","rules","newStyle","excludeBp","getGridLineOfPoint","after","gridLine1","gridLine2","mouseMoved","lastClientX","lastClientY","startMillis","Date","getTime","isRightClick","canMove","isGroupSelected","currentMillis","groupSelected","onContextMenu","deselectParent","clicked","dontUpdateAdjustment","isSelectable","selectItem","removeGridLineByType","showGridLines","updateParentsRect","onScrollEnd","editGrid","editing","updateGridEditor","update","setAnchor","disable","stateChange","forceKey","showAnimation","onAnimationEnd","activateResize","getCompositeAnimationCss","compositeAnimation","getAnimationCSS","getContextMenu","childContainers","windowWidth","setItem","prevProps","prevState","snapshot","compositeStyle","holderClasses","TagAs","childSize","showSideResize","layoutType","compactType","AGLWrapper","fillWithData","StackSpacerContainer","updateSpacers","spacers","spacer","PureComponent","AdjustmentMove","StackSpacerResizer","StackSpacer","setPointerEvents","updateSpacerData","newHeight","spacerData","stack","updateSize","order","Stack","sortedChildrenArray","lateMountedOverride","lateMountedComplete","setOrder","calculateGridItemChildOverride","calculateWrapper","calculateChildGridItemOverride","child1","centerDiff","childRelativeY","childHeight","childFound","childOrderSet","sorted","relativeYA","relativeYB","relativeY2","getSpacer","getSpacerData","spacerContainerRef","allSpacerData","allSpacerRef","onStackDragStart","onStackDragStop","onMouseOverSpacer","onMouseEnterSpacer","onMouseOutSpacer","setMouseOverOverride","setPointerEventOfSpacers","setMouseOverForNonDraggingOverride","spacerRef","setGridItemStyleChildOverride","container","flexDirection","onChildLeaveOverride","removing","stretchChildOverride","stretch","isStretch","isStretchChildOverride","setStyleParamOverride","isStack","onDragStartChildOverride","onDragChildOverride","onDragStopChildOverride","ContextMenu","getFakeAnchor","popperStyle","onClickAway","mouseEvent","autoFocusItem","hasDivider","menuItem","j","ContextMenuItem","subMenu","interactive","leaveDelay","flip","shortcut","deepEqual","saveStyle","beStretch","allowStretch","disableStretch","pageAgl","pageId","oldBehaviour","oldOffsetTop","oldIsFixed","lastSectionId","itemRect","sectionParent","addFixedChildToRoot","oldParentRect","pageRect","hideInBreakPoint","showInBreakPoint","fromAll","getSectionId","uuidv4","createStack","itemsParent","getSectionParent","lastBottom","rightFromLeft","topA","topB","stackNode","_stack","stackId","itemIds","newItems","removeStackFromAGL","addToStack","parentWidth","stackAgl","childIds","removeChilds","addToUndo","saveValue","oldType","oldZIndex","breakpointData","createContextMenu","copySection","paste","duplicate","copyDesignItem","item1","item2","isSameFamily","allOldDesign","sourceItemTemp","overrideBps","pasteFromBreakpointDesign","fromName","toName","fromData","currentData","oldData","deleteSection","shortcutSection","sectionSection","sortBy","array","getColorScheme","baseColor","luminance","chromaColor","SelectManager","alt","inputManager","groupSelectRef","pageAglRef","miniMenuHolderRef","inspectorRef","resizeRef","helpLinesRef","hoverRef","dontUpdateAdjustments","createGroup","clearGroup","addMiniMenu","addMenu","inspectorMenu","setMenu","updateGroupRect","mainItem","deleteGroup","firstRect","updateRect","throttle","helpLineParent","clear","activate","fakeItemRect","test1","test2","floor","random","test3","SnapManager","snapThreshold","snapSvgRef","ignoreId","additionalSnaps","topUp","topDown","leftUp","leftDown","concat","CopyManager","selectManager","pageRef","copyItem","getCopyItem","destinationItem","copyRect","IdManager","prefix","allId","preferName","fixName","baseId","postNo","UndoRedo","getQueueObject","func","undo","redo","undoQueue","pop","redoQueue","undoFunc","object","hasUndo","hasRedo","GridLineManager","gridContainerRef","positions","getIdCache","AnchorManager","allAnchors","goToAnchor","saveToHistory","AdjustmentGridRoot","AdjustmentGridRow","gridLineManager","rowLines","rowLineRect","nextRowLineRect","rowHeight","fontWeight","AdjustmentGrid","addRow","rowsHeight","addColumn","columnsWidth","changeColumnWidth","changeRowHeight","deleteRow","deleteColumn","AdjustmentSnapLines","stroke","AdjustmentSnap","GridLine","lineRef","AdjustmentGridLinesWrapper2","yNo","xNo","refId","AdjustmentGridLines","fixLineRef","idCache","updateGridLine","prepared","xNoA","yNoA","xNoB","yNoB","xNoT","yNoT","xLineRefA","yLineRefA","xLineRefB","yLineRefB","xLineRefT","yLineRefT","ResizePane","AdjustmentGroupRect","RightClick","MiniMenuVerticalDivider","Help","MiniMenu","primary","MenuHolder","miniMenuRef","contextMenu","miniMenuItem","IFrameCommunicator","origin","authKey","otherWindow","onMessage","processIncomingMessage","callbacks","responseFunc","responses","post","counter","postMessage","BreakpointController","changeBreakpoint","changeWidth","EditorController","AllowFunctions","res","inputs","getItemGridData","getLayout","layout","rootLayoutRef","fillData","getSiteData","getBreakpointsData","currentWidth","changePage","onPageChange","addItem","breakpointManagerMethod","method","undoRedoMethod","togglePreview","preview","setZoomLevel","zoomLevel","setDataInBackground","Inspector","opening","clearInterval","closeInterval","openInterval","setInterval","percent","speed","interval","closing","getDefaultMenu","AdjustmentStretch","AdjustmentResize","transformStyleId","stretchStyle","AdjustmentResizeWrapper","AdjustmentHelpLines","calculate","visibility","strokeDasharray","AdjustmentHelpLinesWrapper","helpLineRef","AdjustmentHover","disablePortal","Layout","setLayout","processLayout","treeData","getTreeItem","layoutItem","childLayout","expanded","parentItemId","setTree","updateItem","treeItem","childTreeItem","ComponentGrid","getItemStyle","rootRef","widthRatio","setDraggingItem","persist","closingTimeOut","closeMenu","createItemAndDrag","presetProps","changeItemParent","setDraggingEnd","allItems","Fragment","onDragEnd","imageUrl","label","AddComponent","setComponentListItemDebounce","componentListItem","setComponentListItem","setComponentListItemLeave","componentListItemHover","componentSubListItem","subList","setComponentSubListItemDebounce","setComponentSubListItem","setComponentSubListItemLeave","componentSubListItemHover","listName","allComponentData","builtin","apps","groupName","componentSubListItems","PageTypeTitle","PageInfo","onRename","newPageName","rename","pageData","pageName","setAsHomePage","home","allPages","isHome","onBlur","onKeyPress","variant","AglRadio","Radio","Permissions","changePermission","pageSetting","permissions","onSetPassword","password","onChangeMemberType","memberType","onRoleChange","role","memberRoles","control","roleAnchor","allApps","member","setting","roles","SeoGoogle","onChangeSeoSetting","newEndUrl","seoGoogle","endUrl","endUrlError","pageTitle","baseUrl","pageDescription","newPageTitle","resize","newPageDescription","rows","showInSearch","SocialShare","onChangeSocialShareSetting","socialShare","substring","lastIndexOf","description","newTitle","newDescription","PageSetting","onChangeTab","tabValue","Modal","aria-labelledby","aria-describedby","disableBackdropClick","indicatorColor","textColor","PageItem","pageMenuAnchorEl","setAsHome","renameInput","focus","boxClasses","isDynamic","AddNewPageDialogItem","AddNewPageDialog","addNormalPage","onAddNormalPage","addDynamicPage","onAddDynamicPage","PageManager","onChangeSearch","searchValue","getFilteredPages","siteId","onPageClick","newPageDataUrl","fetch","then","json","openNormalPage","openDynamicPage","showAddPage","ThemeTextItem","onEditClick","font","fontFamily","fontStyle","lineHeight","ThemeColorsItem","toChange","calculated","main","ThemeManager","setCategory","category","calculateTheme","scheme","recalculateColors","EditorBoundary","layoutRef","addComponentRef","pageManagerRef","InputManager","iFrameCommunicator","pinInspector","toggleThemeManager","exportSiteData","testWebsite","defaultSiteData","defaultAllComponentData","onComponentDataUpdated","onSiteDataUpdated","notifyBreakpointChange","newDevicePixelRatio","openInspector","onScrollBoundary","closeInspector","onResizeD","onResizeT","documentElement","setProperty","pageChildData","getLayoutItem","il","openLayout","closeLayout","openAddComponent","closeAddComponent","openPageManager","closePageManager","getLivePageData","getLiveSiteData","blob","Blob","href","URL","createObjectURL","download","fileName","click","editorScale","dispose","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.77f34a23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paint.b4611be4.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.4ffb5b5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-left.0a5b083d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-center.c06baa72.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-right.47dacf61.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-top.a4e81be5.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-middle.18bded08.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-bottom.b15149df.svg\";","module.exports = __webpack_public_path__ + \"static/media/chain.91ca2215.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlink.91af3919.svg\";","module.exports = __webpack_public_path__ + \"static/media/more.7e1c1c4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.910508a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/minimize.d1b14794.svg\";","module.exports = __webpack_public_path__ + \"static/media/maximize.c16a073e.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {Resizable} from \"re-resizable\";\r\nimport css from 'dom-css';\r\nimport {exist, getFromData, getSortedBreakPoints, setData} from \"./BreakPointManager\";\r\nimport debounce from 'lodash.debounce';\r\n// import {css, StyleSheet} from 'aphrodite'\r\n\r\nlet CalculateLayout = (griddatas, layoutType, parentSize, dir, compactType, scrollType, snap\r\n                       , breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    parentGriddata = parentGriddata || getDefaultChildgriddata(breakpointdata);\r\n\r\n    let dummy;\r\n    let childContainers = griddatas.map((griddata) => {\r\n        if (griddata.id === undefined)\r\n            console.error(\"direct child must have a id props\");\r\n\r\n        let result = {\r\n            griddata: griddata,\r\n        };\r\n\r\n        result.griddata.id = griddata.id;\r\n        result.isContainer = griddata.isContainer;\r\n        result.selected = griddata.selected;\r\n        result.resizable = griddata.resizable;\r\n        result.draggable = griddata.draggable;\r\n        result.dragging = griddata.dragging;\r\n\r\n        result.w = getPxFromPercent(\r\n            getFromData(result.griddata, \"w\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.h = getPxFromPercent(\r\n            getFromData(result.griddata, \"h\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.x = getPxFromPercent(\r\n            getFromData(result.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.y = getPxFromPercent(\r\n            getFromData(result.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.rotate = getFromData(result.griddata, \"rotate\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.absolute = getFromData(result.griddata, \"absolute\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.fix = getFromData(result.griddata, \"fix\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.zIndex = getFromData(result.griddata, \"zIndex\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        if (result.griddata.dragging) {\r\n            dummy = {};\r\n            dummy.griddata = cloneObject(result.griddata);\r\n            // dummy.griddata.dragging = false;\r\n            dummy.griddata.id = \"dummy\";\r\n            dummy.x = result.x;\r\n            dummy.y = result.y;\r\n            dummy.w = result.w;\r\n            dummy.h = result.h;\r\n            dummy.griddata.draggable = false;\r\n            dummy.griddata.resizable = false;\r\n            dummy.absolute = result.absolute;\r\n            dummy.fix = result.fix;\r\n            dummy.zIndex = result.zIndex;\r\n            dummy.dragging = result.dragging;\r\n\r\n            dummy.isDummy = true;\r\n        }\r\n\r\n        return result;\r\n    });\r\n\r\n    if (!childContainers)\r\n        childContainers = [];\r\n\r\n    if (dummy)\r\n        childContainers.push(dummy);\r\n\r\n    sortChilds(childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints);\r\n\r\n    let layouts = [];\r\n    let layoutContainers = [];\r\n\r\n    let maxHeight = scatter(childContainers, layoutContainers, layouts, layoutType, parentSize\r\n        , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n    return {childContainers: childContainers, layouts: layouts, maxHeight: maxHeight};\r\n};\r\n\r\nlet getDummy = (w, h) => {\r\n    return (\r\n        <Resizable\r\n            enable={false}\r\n            size={{\r\n                width: w,\r\n                height: h,\r\n            }}\r\n        >\r\n            <div style={{\r\n                backgroundColor: \"rgba(201, 76, 76, 0.3)\",\r\n                width: \"100%\",\r\n                height: \"100%\"\r\n            }}>\r\n            </div>\r\n        </Resizable>\r\n    );\r\n};\r\n\r\nlet scatter = (childContainers, layoutContainers, layouts, layoutType, parentSize\r\n               , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let notCompareChilds = [];\r\n    let maxHeight = 0;\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        if (childContainer.griddata.dragging) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (childContainer.absolute || childContainer.fix) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (layoutType === \"free\") {\r\n            maxHeight = scatterFree(childContainer, childContainers, layoutContainers\r\n                , parentSize, compactType, scrollType, snap, maxHeight, breakpointdata\r\n                , hasOwnBreakPoints, parentGriddata);\r\n        }\r\n\r\n        layoutContainers.push(childContainer);\r\n    }\r\n\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        layouts.push(childContainer.griddata);\r\n    }\r\n\r\n    notCompareChilds.forEach(childContainer => {\r\n        if (childContainer.absolute)\r\n            fixAbsoluteChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n        if (childContainer.fix)\r\n            fixFixChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n        setChildPosition(childContainer, {x:childContainer.x, y:childContainer.y}\r\n             , parentSize, breakpointdata, hasOwnBreakPoints);\r\n\r\n        layoutContainers.push(childContainer);\r\n        layouts.push(childContainer.griddata);\r\n    });\r\n\r\n    return maxHeight;\r\n};\r\n\r\nlet fixFixChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    if (left)\r\n        left += parentSize.scrollLeft;\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    if (top)\r\n        top += parentSize.scrollTop;\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    if (right)\r\n        right += (parentSize.x - parentSize.clientWidth - parentSize.scrollLeft);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n    if (bottom)\r\n        bottom += (parentSize.y - parentSize.clientHeight - parentSize.scrollTop);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet fixAbsoluteChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet scatterFree = (childContainer, childContainers, layoutContainers, parentSize, compactType, scrollType\r\n                   , snap, maxHeight, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let autoWidth =\r\n        getFromData(parentGriddata, \"autoWidth\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    if (!autoWidth) {\r\n        if (childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n        }\r\n    }\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.x > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.x -= snap.x;\r\n        }\r\n    }\r\n    if (compactType === \"vertical\")\r\n    {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.y > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.y -= snap.y;\r\n        }\r\n    }\r\n\r\n    childContainer.x = Math.max(0, childContainer.x);\r\n    childContainer.y = Math.max(0, childContainer.y);\r\n\r\n    let collide;\r\n    while (checkCollide(childContainer, layoutContainers)) {\r\n        collide = checkCollide(childContainer, layoutContainers);\r\n        if (compactType === \"horizontal\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.x + collide.w, \"x\");\r\n        }\r\n        if (compactType === \"vertical\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.y + collide.h, \"y\");\r\n        }\r\n        // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\r\n        if ((compactType === \"horizontal\") &&\r\n            childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n            childContainer.y++;\r\n        }\r\n    }\r\n\r\n    if (childContainer.y + childContainer.h > maxHeight)\r\n        maxHeight = childContainer.y + childContainer.h;\r\n\r\n    return maxHeight;\r\n};\r\n\r\nconst heightWidth = { x: \"w\", y: \"h\" };\r\nlet resolveCompactionCollision = (layout, item, moveToCoord, axis) => {\r\n    const sizeProp = heightWidth[axis];\r\n    item[axis] += 1;\r\n    const itemIndex = layout\r\n        .map(layoutItem => {\r\n            return layoutItem.griddata.id;\r\n        })\r\n        .indexOf(item.griddata.id);\r\n\r\n    // Go through each item we collide with.\r\n    for (let i = itemIndex + 1; i < layout.length; i++) {\r\n        const otherItem = layout[i];\r\n        // Ignore static items\r\n        if (otherItem.static || otherItem.griddata.dragging) continue;\r\n\r\n        // Optimization: we can break early if we know we're past this el\r\n        // We can do this b/c it's a sorted layout\r\n        if (otherItem.y > item.y + item.h) break;\r\n\r\n        if (collide(item, otherItem)) {\r\n            resolveCompactionCollision(\r\n                layout,\r\n                otherItem,\r\n                moveToCoord + item[sizeProp],\r\n                axis\r\n            );\r\n        }\r\n    }\r\n\r\n    item[axis] = moveToCoord;\r\n};\r\n\r\nlet bottom = (layoutContainers) => {\r\n    let max = 0,\r\n        bottomY;\r\n    for (let i = 0, len = layoutContainers.length; i < len; i++) {\r\n        bottomY = layoutContainers[i].y + layoutContainers[i].h;\r\n        if (bottomY > max) max = bottomY;\r\n    }\r\n    return max;\r\n};\r\n\r\nlet checkCollide = (childContainer, layoutContainers) => {\r\n    for (let i = 0; i < layoutContainers.length; i++) {\r\n        if (collide(childContainer, layoutContainers[i]))\r\n            return layoutContainers[i];\r\n    }\r\n    return false;\r\n};\r\n\r\nlet collide = (child1, child2) => {\r\n    if (child1.griddata.id === child2.griddata.id) return false; // same element\r\n    if (child1.x + child1.w <= child2.x) return false; // l1 is left of l2\r\n    if (child1.x >= child2.x + child2.w) return false; // l1 is right of l2\r\n    if (child1.y + child1.h <= child2.y) return false; // l1 is above l2\r\n    if (child1.y >= child2.y + child2.h) return false; // l1 is below l2\r\n    return true; // boxes overlap\r\n};\r\n\r\nlet sortChilds = (childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints) => {\r\n    childContainers.forEach(childContainer => {\r\n            childContainer.x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.x);\r\n            childContainer.y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.y);\r\n    });\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainers.sort((a, b) => {\r\n            if (a.x > b.x || (a.x === b.x && a.y > b.y)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    } else {\r\n        childContainers.sort((a, b) => {\r\n            if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    }\r\n};\r\n\r\nlet getPxFromPercent = (val, parentVal) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (getUnit(val) === \"%\") {\r\n            let percent = parseFloat(val.replace(\"%\", \"\")) / 100;\r\n            return parentVal * percent;\r\n        }\r\n        return val;\r\n    } else {\r\n        return val;\r\n    }\r\n};\r\n\r\nlet getUnit = (val) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (val.includes(\"%\"))\r\n            return \"%\";\r\n    }\r\n    return \"\";\r\n};\r\n\r\nlet hasDir = (dir, target) => {\r\n    return dir.toLowerCase().includes(target);\r\n};\r\n\r\nlet setChildSize = (childContainer, newSize, parentSize, breakpointdata, hasOwnBreakPoints\r\n                    , dir, delta) => {\r\n    setData(childContainer.griddata, \"w\", newSize.w, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.w\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"w\",\r\n            (getFromData(childContainer.griddata, \"w\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.w\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"h\", newSize.h, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.h\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"h\",\r\n            (getFromData(childContainer.griddata, \"h\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.h\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    if (delta) {\r\n        if (hasDir(dir, \"right\") || hasDir(dir, \"left\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            if (hasDir(dir, \"right\"))\r\n                x = x + delta.width / 2;\r\n            else\r\n                x = x - delta.width / 2;\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n        if (hasDir(dir, \"top\") || hasDir(dir, \"bottom\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n            if (hasDir(dir, \"bottom\"))\r\n                y = y + delta.height / 2;\r\n            else\r\n                y = y - delta.height / 2;\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n    }\r\n};\r\n\r\nlet setChildPosition = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints) => {\r\n    setData(childContainer.griddata, \"x\", newPosition.x, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.x\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"x\",\r\n            (getFromData(childContainer.griddata, \"x\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.x\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"y\", newPosition.y, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.y\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"y\",\r\n            (getFromData(childContainer.griddata, \"y\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.y\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n};\r\n\r\n/*let updateConstraints = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints\r\n                        , parentGridSystem) =>\r\n{\r\n    if (!parentGridSystem)\r\n        parentGridSystem = getDefaultGridSystem();\r\n};*/\r\n\r\n/*let getDefaultGridSystem = () => {\r\n    return {\r\n        xNumber: 1,\r\n        yNumber: 1,\r\n        widths: [100],\r\n        widthUnits: [\"%\"],\r\n        heights: [100],\r\n        heightUnits: [\"%\"]\r\n    }\r\n};*/\r\n\r\nlet fixGriddata = (griddata, breakpointdata) => {\r\n    if (!griddata)\r\n        return;\r\n\r\n    if (griddata.initialized) {\r\n        let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            let name = sortedBreakPoints[i].name;\r\n\r\n            if (!griddata[name])\r\n                continue;\r\n\r\n            if (!griddata[name].units)\r\n                griddata[name].units = {};\r\n\r\n            griddata[name].units.x = getUnit(griddata[name].x);\r\n            griddata[name].units.y = getUnit(griddata[name].y);\r\n            griddata[name].units.w = getUnit(griddata[name].w);\r\n            griddata[name].units.h = getUnit(griddata[name].h);\r\n        }\r\n    } else {\r\n        if (!griddata.units)\r\n            griddata.units = {};\r\n\r\n        griddata.units.x = getUnit(griddata.x);\r\n        griddata.units.y = getUnit(griddata.y);\r\n        griddata.units.w = getUnit(griddata.w);\r\n        griddata.units.h = getUnit(griddata.h);\r\n\r\n    }\r\n};\r\n\r\nlet initGriddata = (griddataProp, breakpointdata) => {\r\n    if (griddataProp && griddataProp.initialized)\r\n        return griddataProp;\r\n\r\n    if (!griddataProp)\r\n        griddataProp = {};\r\n\r\n    let clone = cloneObject(griddataProp);\r\n\r\n    for (let props in griddataProp) delete griddataProp[props];\r\n\r\n    let griddata = getDefaultChildgriddata(breakpointdata);\r\n    if (clone.bpData) {\r\n        for (let props in griddata.bpData) {\r\n            if (exist(props, breakpointdata)) {\r\n                    for(let props2 in clone.bpData) {\r\n                        griddata.bpData[props][props2] = cloneObject(clone.bpData[props2]);\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    for (let prop in clone) {\r\n        if (clone.hasOwnProperty(prop) && prop !== \"bpData\") {\r\n            griddata[prop] = clone[prop];\r\n        }\r\n    }\r\n\r\n    for(let k in griddata) griddataProp[k]=griddata[k];\r\n\r\n    return griddataProp;\r\n};\r\n\r\nlet getDefaultChildgriddata = (breakpointdata) => {\r\n    let sample = {\r\n        x: \"50%\",\r\n        y: \"50%\",\r\n        w: \"100%\",\r\n        h: \"100%\",\r\n        minW: undefined,\r\n        maxW: undefined,\r\n        minH: undefined,\r\n        maxH: undefined,\r\n        constraints: {\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined,\r\n        },\r\n        margin: {\r\n            all: undefined,\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined\r\n        },\r\n        units: {\r\n            x: \"%\",\r\n            y: \"%\",\r\n            w: \"%\",\r\n            h: \"%\",\r\n        },\r\n        scrollType: \"vertical\",\r\n        absolute: true,\r\n        fix: false,\r\n        autoHeight: false,\r\n        autoWidth: false,\r\n        overflowData: {\r\n            state: 'hide',\r\n            overflowY: 'scroll'\r\n        },\r\n    };\r\n    let griddata = {\r\n        initialized: true,\r\n        resizable: true,\r\n        draggable: true,\r\n        hasOwnBreakPoints: false,\r\n        isContainer: false,\r\n        autoDock: true,\r\n        bpData: {}\r\n    };\r\n    let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n    griddata.bpData[sortedBreakPoints[0].name] = cloneObject(sample);\r\n    return griddata;\r\n};\r\n\r\nlet cloneObject = (obj) => {\r\n    if (obj instanceof Array) {\r\n        let copy = [];\r\n        for (let i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = cloneObject(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n    if (obj instanceof Object) {\r\n        if (null == obj) return obj;\r\n        let copy = {};\r\n        for (let attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = cloneObject(obj[attr]);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nlet shallowEqual = (objA, objB) => {\r\n    if (objA === objB) {\r\n        return true;\r\n    }\r\n\r\n    if (typeof objA !== 'object' || objA === null ||\r\n        typeof objB !== 'object' || objB === null) {\r\n        return false;\r\n    }\r\n\r\n    let keysA = Object.keys(objA);\r\n    let keysB = Object.keys(objB);\r\n\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n\r\n    // Test for A's keys different from B.\r\n    for (let i = 0; i < keysA.length; i++) {\r\n        if (!objB.hasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nfunction throttleDebounce(fn, ms) {\r\n    let deTimer;\r\n    let dontCall;\r\n\r\n    return _ => {\r\n        let args = arguments;\r\n\r\n        if (!dontCall) {\r\n            dontCall = true;\r\n            fn.apply(this, args);\r\n            setTimeout(_ => {\r\n                dontCall = false;\r\n            }, ms);\r\n        }\r\n\r\n        clearTimeout(deTimer);\r\n        deTimer = setTimeout(_ => {\r\n            fn.apply(this, args);\r\n        }, ms);\r\n    };\r\n}\r\n\r\nfunction throttleDebounce2(fn, threshold) {\r\n    threshold = threshold || 250;\r\n    let last, deferTimer;\r\n\r\n    let db = debounce(fn);\r\n    return function() {\r\n        let now = +new Date, args = arguments;\r\n        if(!last || (last && now < last + threshold)) {\r\n            clearTimeout(deferTimer);\r\n            db.apply(this, args);\r\n            deferTimer = setTimeout(function() {\r\n                last = now;\r\n                fn.apply(this, args);\r\n            }, threshold);\r\n        } else {\r\n            last = now;\r\n            fn.apply(this, args);\r\n        }\r\n    }\r\n}\r\n\r\nlet getOverFlow = (griddata, parent, breakpointdata) => {\r\n    if (!griddata)\r\n        return {x:\"hidden\", y:\"hidden\"};\r\n    let parentSizeX;\r\n    if (parent)\r\n        parentSizeX = parent.getSize().x;\r\n\r\n    let scrollType;\r\n    if (parentSizeX) {\r\n        scrollType = getFromData(griddata, \"scrollType\", parentSizeX\r\n                , griddata? griddata.hasOwnBreakPoints: false, breakpointdata);\r\n    } else {\r\n        scrollType = getFromData(griddata, \"scrollType\", 0\r\n                , false, breakpointdata);\r\n    }\r\n    switch (scrollType) {\r\n        case \"hide\":\r\n            return {x:\"hidden\", y:\"hidden\"};\r\n        case \"show\":\r\n            return {x:\"visible\", y:\"visible\"};\r\n        case \"horizontal\":\r\n            return {x:\"overlay\", y:\"hidden\"};\r\n        case \"vertical\":\r\n            return {x:\"hidden\", y:\"overlay\"};\r\n        case \"both\":\r\n            return {x:\"overlay\", y:\"overlay\"};\r\n        default:\r\n            return {x:\"visible\", y:\"visible\"};\r\n    }\r\n};\r\n\r\nlet scrollbarWidth = false;\r\nlet getScrollbarWidth = () => {\r\n    if (scrollbarWidth !== false) return scrollbarWidth;\r\n    /* istanbul ignore else */\r\n    if (typeof document !== 'undefined') {\r\n        const div = document.createElement('div');\r\n        css(div, {\r\n            width: 100,\r\n            height: 100,\r\n            position: 'absolute',\r\n            top: -9999,\r\n            overflow: 'scroll',\r\n            MsOverflowStyle: 'scrollbar'\r\n        });\r\n        document.body.appendChild(div);\r\n        scrollbarWidth = (div.offsetWidth - div.clientWidth);\r\n        document.body.removeChild(div);\r\n    } else {\r\n        scrollbarWidth = 0;\r\n    }\r\n    return scrollbarWidth || 0;\r\n};\r\n\r\nexport let assignData = (griddata, newData) => {\r\n    if (!griddata)\r\n        griddata = {};\r\n    return Object.assign(griddata, newData || {})\r\n};\r\n\r\nexport function getOffsetLeft( elem )\r\n{\r\n    let offsetLeft = 0;\r\n    do {\r\n        let elemOffsetLeft = elem.offsetLeft;\r\n        if ( !isNaN( elemOffsetLeft ) )\r\n        {\r\n            offsetLeft += elemOffsetLeft;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetLeft;\r\n}\r\n\r\nexport function getOffsetTop( elem )\r\n{\r\n    let offsetTop = 0;\r\n    do {\r\n        let elemOffsetTop = elem.offsetTop;\r\n        if ( !isNaN( elemOffsetTop ) )\r\n        {\r\n            offsetTop += elemOffsetTop;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetTop;\r\n}\r\n\r\n\r\nexport function JSToCSS(JS){\r\n    let cssString = \"\";\r\n    for (let objectKey in JS) {\r\n        cssString += objectKey.replace(/([A-Z])/g, (g) => `-${g[0].toLowerCase()}`) + \": \" + JS[objectKey] + \"; \";\r\n    }\r\n    return cssString;\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n\r\n    styleNode.innerHTML = \"\";\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n};\r\n\r\nexport function appendStyle(style, styleId, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n    let styleNode = document.createElement('style');\r\n    styleNode.setAttribute(\"id\", styleId);\r\n    // styleNode.setAttribute(\"title\", styleId);\r\n\r\n    styleNode.type = 'text/css';\r\n\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n\r\n    document.getElementsByTagName('head')[0].appendChild(styleNode);\r\n};\r\n\r\n/*export function appendStyle(style, styleId, styleName){\r\n    return StyleSheet.create({\r\n        [styleId]: style\r\n    })[styleId];\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    return StyleSheet.create({\r\n        [styleName]: style\r\n    });\r\n};*/\r\n\r\nexport function getScrollParent(node) {\r\n    if (node == null) {\r\n        return null;\r\n    }\r\n\r\n    if (node.scrollHeight > node.clientHeight) {\r\n        return node;\r\n    } else {\r\n        return getScrollParent(node.parentNode);\r\n    }\r\n}\r\n\r\nexport function swapArrayElements(arr, indexA, indexB) {\r\n    let temp = arr[indexA];\r\n    arr[indexA] = arr[indexB];\r\n    arr[indexB] = temp;\r\n}\r\n\r\nexport {CalculateLayout, cloneObject, getPxFromPercent, shallowEqual\r\n        ,throttleDebounce, setChildSize, fixGriddata, setChildPosition\r\n        ,getDefaultChildgriddata, initGriddata, getOverFlow, getScrollbarWidth, getDummy}\r\n","import {cloneObject, throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from \"lodash.merge\";\r\n\r\nexport default class BreakPointManager {\r\n    constructor(breakpoints, editorData, onBreakpointChange, onZoomLevelChange, onHeightChange, onResize) {\r\n        if (!breakpoints)\r\n            breakpoints = this.getDefault();\r\n        this.breakpoints = breakpoints;\r\n        this.editorData = editorData;\r\n        this.windowInnerWidth = editorData && editorData.innerWidth;\r\n        this.lastWidth = editorData && editorData.innerWidth;\r\n        this.onBreakpointChange = onBreakpointChange || (() => {});\r\n        this.onZoomLevelChange = onZoomLevelChange || (() => {});\r\n        this.onHeightChange = onHeightChange || (() => {});\r\n\r\n        window.addEventListener(\"resize\", onResize);\r\n        if (onBreakpointChange)\r\n            window.addEventListener(\"resize\", this.onWindowResize);\r\n        if (onZoomLevelChange)\r\n            window.addEventListener(\"resize\", this.onDevicePixelRatioChange);\r\n        if (onHeightChange)\r\n            window.addEventListener(\"resize\", this.onHeightResize);\r\n    }\r\n\r\n    updateBreakpoint = (name, start, end) => {\r\n        let bp = this.breakpoints.find(b => b.name === name);\r\n        if (bp) {\r\n            bp.end = end;\r\n            let upperBP = this.getUpperBreakPoint(name);\r\n            if (upperBP) this.getUpperBreakPoint(name).start = end + 1;\r\n            return;\r\n        }\r\n\r\n        start++;\r\n        bp = {name, start, end};\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bp.start === sortedBreakPoints[i].start + 1) {\r\n                bp.start++;\r\n            }\r\n            if (bp.start >= sortedBreakPoints[i].start) {\r\n                bp.end = sortedBreakPoints[i].end;\r\n                sortedBreakPoints[i].end = bp.start - 1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.breakpoints.push(bp);\r\n    };\r\n\r\n    deleteBreakpoint = (name) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (name === sortedBreakPoints[i].name) {\r\n                let upper = sortedBreakPoints[i - 1];\r\n                if (upper) {\r\n                    upper.start = sortedBreakPoints[i].start;\r\n                    break;\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        delete this.breakpoints[name];\r\n    };\r\n\r\n    fromClone = (clone) => {\r\n        this.breakpoints = clone.breakpoints;\r\n        this.windowInnerWidth = clone.windowInnerWidth;\r\n        this.lastWidth = clone.lastWidth;\r\n        this.editorData = clone.editorData;\r\n\r\n        return this;\r\n    };\r\n\r\n    copyDesign = (designDatas, sourceItem) => {\r\n        this.cloneDesignDatas = {\r\n            designDatas: cloneObject(designDatas),\r\n            sourceItem\r\n        };\r\n    };\r\n\r\n    getCopyDesign = () => {\r\n        return this.cloneDesignDatas;\r\n    };\r\n\r\n    pasteDesign = (item) => {\r\n        if (!this.getCopyDesign())\r\n            return;\r\n\r\n        this.getCopyDesign().designDatas.forEach((designData, index) => {\r\n            let design = designData.design;\r\n            if (!designData.justOneBp) {\r\n                let bpName = designData.bpName;\r\n                if (!item.props.griddata.bpData[bpName])\r\n                    item.props.griddata.bpData[bpName] = {};\r\n                item.props.griddata.bpData[bpName].design = cloneObject(design);\r\n            } else {\r\n                let currentBpName = item.props.breakpointmanager.current();\r\n                if (!item.props.griddata.bpData[currentBpName])\r\n                    item.props.griddata.bpData[currentBpName] = {};\r\n                item.props.griddata.bpData[currentBpName].design = cloneObject(design);\r\n            }\r\n        });\r\n    };\r\n\r\n    getWindowWidth = () => {\r\n        return this.lastWidth\r\n    };\r\n\r\n    getWindowHeight = () => {\r\n        return window.innerHeight * 0.8;\r\n    };\r\n\r\n    setWindowWidth = (width) => {\r\n        this.lastWidth = width;\r\n    };\r\n\r\n    getBpData = (bpName) => {\r\n        return this.breakpoints.find(bp => {\r\n            return bp.name === bpName;\r\n        });\r\n    };\r\n\r\n    dispose() {\r\n        window.removeEventListener(\"resize\", this.onWindowResize);\r\n    }\r\n\r\n    getDevicePixelRatio = () => {\r\n        return window.devicePixelRatio;\r\n    };\r\n\r\n    onDevicePixelRatioChange = () => {\r\n        let changed = this.devicePixelRatio !== window.devicePixelRatio;\r\n\r\n        this.devicePixelRatio = window.devicePixelRatio;\r\n\r\n        if (changed) {\r\n            this.onZoomLevelChange(this.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onHeightResize = throttleDebounce(() => {\r\n        if (this.lastHeight !== window.innerHeight) {\r\n            this.lastHeight = window.innerHeight;\r\n            this.onHeightChange();\r\n        }\r\n    }, 100);\r\n\r\n    onWindowResize = throttleDebounce(() => {\r\n        let newWidth = window.innerWidth -\r\n            this.editorData.inspectorPinned ? this.editorData.inspectorWidth : 0;\r\n\r\n        let result = this.checkBreakPointChange(newWidth);\r\n\r\n        this.setWindowWidth(newWidth);\r\n\r\n        if (result.changed) {\r\n            this.onBreakpointChange(newWidth, result.currentBreakpointName, this.getDevicePixelRatio());\r\n        }\r\n    }, 100);\r\n\r\n    checkBreakPointChange = (newWidth) => {\r\n        let lastBreakpointName = this.current(this.getWindowWidth());\r\n        let currentBreakpointName = this.current(newWidth);\r\n\r\n        return {\r\n            changed: (lastBreakpointName !== currentBreakpointName),\r\n            currentBreakpointName\r\n        }\r\n    };\r\n\r\n    current = (size) => {\r\n        if (!size)\r\n            size = this.getWindowWidth();\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (this.getSize(size) >= sortedBreakPoints[i].start)\r\n                return sortedBreakPoints[i].name;\r\n        }\r\n\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].name;\r\n    };\r\n\r\n    getUpperBreakPoint = (bpName) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bpName === sortedBreakPoints[i].name)\r\n                return sortedBreakPoints[i - 1] && sortedBreakPoints[i - 1].name;\r\n        }\r\n    };\r\n\r\n    setData = (dataSet, param, value, breakpointName) => {\r\n        let params = param.split('.');\r\n        let name = breakpointName ||\r\n            this.current(this.getSize());\r\n        if (!dataSet.bpData[name]) {\r\n            dataSet.bpData[name] = {};\r\n        }\r\n        if (params.length === 1) {\r\n            if (value !== undefined)\r\n                dataSet.bpData[name][params[0]] = value;\r\n            else\r\n                delete dataSet.bpData[name][params[0]];\r\n        } else {\r\n            if (dataSet.bpData[name][params[0]] === undefined)\r\n                dataSet.bpData[name][params[0]] = {};\r\n            let override = dataSet.bpData[name][params[0]];\r\n            for(let i = 1; i < params.length; i++) {\r\n                if (i === params.length - 1) { // Last index\r\n                    if (value !== undefined)\r\n                        override[params[i]] = value;\r\n                    else\r\n                        delete override[params[i]];\r\n                }\r\n                else\r\n                {\r\n                    if (override[params[i]] === undefined)\r\n                        override[params[i]] = {};\r\n                    override = override[params[i]];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getFromData = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n        else {\r\n            firstParamResult = this.findFirstUpperBreakPointParam(dataSet, params[0]\r\n                , this.getSize());\r\n        }\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    getHighestBpName = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[0].name;\r\n    };\r\n\r\n    getCompositeFromData = (dataSet, param) => {\r\n        let params = param.split('.');\r\n        let results = [];\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints(this.getWindowWidth());\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            let checkBreakpointName = sortedBreakPoints[i].name;\r\n\r\n            let firstParamResult;\r\n            if (dataSet.bpData[checkBreakpointName] &&\r\n                dataSet.bpData[checkBreakpointName][params[0]] !== undefined)\r\n                firstParamResult = dataSet.bpData[checkBreakpointName][params[0]];\r\n\r\n            if (firstParamResult === undefined)\r\n                continue;\r\n\r\n            if (params.length === 1)\r\n                results.push(firstParamResult);\r\n\r\n            params.slice(1).forEach(p => {\r\n                if (firstParamResult)\r\n                    firstParamResult = firstParamResult[p];\r\n            });\r\n\r\n            results.push(firstParamResult);\r\n        }\r\n\r\n        if (!(results[0] instanceof Object))\r\n            return results[0];\r\n\r\n        let composite = {};\r\n        for (let i = results.length - 1; i >= 0; i--) {\r\n            composite = merge(composite, results[i]);\r\n        }\r\n\r\n        return composite;\r\n    };\r\n\r\n    hasDataInBreakPoint = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    findFirstUpperBreakPointParam = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name] &&\r\n                    dataSet.bpData[sortedBreakPoints[i].name][param] !== undefined)\r\n                    return dataSet.bpData[sortedBreakPoints[i].name][param];\r\n            }\r\n        }\r\n    };\r\n\r\n    findFirstUpperBreakPointName = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name]/* && dataSet[sortedBreakPoints[i].name][param] !== undefined*/)\r\n                    return sortedBreakPoints[i].name;\r\n            }\r\n        }\r\n    };\r\n\r\n    getMinWidth = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].start;\r\n    };\r\n\r\n    getSortedBreakPoints = (minSize) => {\r\n        let breakpoints = this.breakpoints;\r\n        if (minSize) {\r\n            breakpoints = this.breakpoints.filter(bp => {\r\n                return bp.end >= minSize;\r\n            });\r\n        }\r\n        return breakpoints.sort((a,b) => {\r\n            if (a.start > b.start) {\r\n                return -1;\r\n            } else if (a.start === b.start) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        });\r\n    };\r\n\r\n    exist = (name) => {\r\n        return this.breakpoints.find(b => {\r\n            return b.name === name;\r\n        });\r\n    };\r\n\r\n    getDefault = () => {\r\n        return [\r\n            {\r\n                name: \"laptop\",\r\n                start: 1001,\r\n                end: Infinity\r\n            },\r\n            {\r\n                name: \"tablet\",\r\n                start: 751,\r\n                end: 1000\r\n            },\r\n            {\r\n                name: \"mobile\",\r\n                start: 320,\r\n                end: 750\r\n            },\r\n        ]\r\n    };\r\n\r\n    getSize = (size) => {\r\n        return size || this.getWindowWidth();\r\n    };\r\n};\r\n\r\nexport let setData = (dataSet, param, value, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    breakPointManager.setData(dataSet, param, value, breakpointName);\r\n};\r\n\r\nexport let getFromData = (dataSet, param, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getFromData(dataSet, param, breakpointName);\r\n};\r\n\r\nexport let getCompositeFromData = (dataSet, param, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getCompositeFromData(dataSet, param);\r\n};\r\n\r\nexport let getSortedBreakPoints = (breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.getSortedBreakPoints();\r\n};\r\n\r\nexport let exist = (name, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.exist(name);\r\n};\r\n","import {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\n\r\nexport default class DragDropManager {\r\n    setDragging = (item) => {\r\n        this.draggingItem = item;\r\n    };\r\n\r\n    getDragging = () => {\r\n        return this.draggingItem;\r\n    };\r\n\r\n    isDraggingItemFixed = () => {\r\n        if (!this.draggingItem)\r\n            return false;\r\n        return this.draggingItem.state.portalNodeId === \"page_fixed_holder\";\r\n    };\r\n\r\n    // return true if dropping on another parent\r\n    setDraggingStop = () => {\r\n        if (this.draggingItem && this.mouseOver &&\r\n            this.draggingItem.props.parent !== this.mouseOver &&\r\n            !this.mouseOver.getParentsId().includes(this.draggingItem.props.id) &&\r\n            !this.isDraggingItemFixed())\r\n        {\r\n            this.mouseOver.prepareRects();\r\n            this.dropItem(this.draggingItem, this.draggingItem.props.parent, this.mouseOver);\r\n\r\n            this.draggingItem = undefined;\r\n            return true;\r\n        }\r\n\r\n        this.draggingItem = undefined;\r\n        return false;\r\n    };\r\n\r\n    dropItem = (item, parent, newParent, callback, fromUndoRedo, undoPower) => {\r\n        item.toggleHelpLines();\r\n        parent.onChildLeave(item);\r\n\r\n        let drop = () => {\r\n            newParent.onChildDrop(item, undefined, undefined, (newItem) => {\r\n                if (callback)\r\n                    callback(newItem);\r\n\r\n                if (!fromUndoRedo) {\r\n                    let itemId = item.props.id;\r\n                    let firstRelativeX =\r\n                        (item.dragData? item.dragData.firstPos.left : newItem.getSize(false).left)\r\n                        - parent.getSize(false).left;\r\n                    let firstRelativeY =\r\n                        (item.dragData? item.dragData.firstPos.top : newItem.getSize(false).top)\r\n                        - parent.getSize(false).top;\r\n                    let parentRect = cloneObject(parent.getSize(false));\r\n                    let lastRelativeX = newItem.getSize(false).left - newParent.getSize(false).left;\r\n                    let lastRelativeY = newItem.getSize(false).top - newParent.getSize(false).top;\r\n                    let newParentRect = cloneObject(newParent.getSize(false));\r\n                    let width = newItem.getSize(false).width;\r\n                    let height = newItem.getSize(false).height;\r\n\r\n                    let parentId = parent.props.id;\r\n                    let newParentId = newParent.props.id;\r\n                    item.props.undoredo.add((idMan) => {\r\n                        idMan.getItem(itemId).onSelect(true);\r\n                        this.setMouseOver(idMan.getItem(newParentId));\r\n                        this.dropItem(idMan.getItem(itemId), idMan.getItem(parentId), idMan.getItem(newParentId),\r\n                            (newItem) => {\r\n                                setTimeout(() => {\r\n                                    idMan.getItem(itemId).setPosition(false, lastRelativeX, lastRelativeY, undefined, undefined,\r\n                                        width, height, newParentRect, true);\r\n                                }, 0);\r\n                            }, true);\r\n                    }, (idMan) => {\r\n                        idMan.getItem(itemId).onSelect(true);\r\n                        this.setMouseOver(idMan.getItem(parentId));\r\n                        this.dropItem(idMan.getItem(itemId), idMan.getItem(newParentId), idMan.getItem(parentId),\r\n                            (newItem) => {\r\n                                setTimeout(() => {\r\n                                    idMan.getItem(itemId).setPosition(false, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                                        width, height, parentRect, true);\r\n                                }, 0);\r\n                            }, true);\r\n                    }, undoPower);\r\n                }\r\n            });\r\n        };\r\n        if (item.props.dragdrop.mouseOver === newParent &&\r\n            item.props.gridLine.hasGridLine(newParent.props.id)) {\r\n            drop();\r\n        } else {\r\n            item.props.dragdrop.setMouseOver(newParent, undefined, drop);\r\n        }\r\n    };\r\n\r\n    removeMouseOver = () => {\r\n        delete this.mouseOver;\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.isDraggingItemFixed())\r\n            return;\r\n\r\n        if (this.mouseOver) {\r\n            if (!this.mouseOver.getFromTempData(\"selected\")) {\r\n                if (this.mouseOver !== item)\r\n                    this.mouseOver.toggleGridLines(false);\r\n            }\r\n        }\r\n\r\n        this.mouseOver = item;\r\n\r\n        if(this.draggingItem)\r\n            this.draggingItem.toggleHelpLines();\r\n\r\n        item.toggleGridLines(true, () => {\r\n            if(this.draggingItem)\r\n                this.draggingItem.toggleHelpLines(item);\r\n            if (callback)\r\n                callback(this.draggingItem, this.mouseOver);\r\n        }, \"B\");\r\n    };\r\n\r\n    setMouseOverForNonDragging = (item) => {\r\n        this.mouseOverNonDragging = item;\r\n    };\r\n\r\n    getMouseOverForNonDragging = () => {\r\n        return this.mouseOverNonDragging;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport {shallowEqual} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerChildren extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(JSON.stringify(this.allChildIndex),\r\n                JSON.stringify(Object.values(nextProps.allChildren).map(c => {\r\n                    return {\r\n                        z: c.zIndex,\r\n                        i: c.child.props.id\r\n                    }\r\n                })))\r\n        )\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => {\r\n            return {\r\n                z: c.zIndex,\r\n                i: c.child.props.id\r\n            }\r\n        });\r\n    };\r\n\r\n    getSorted = (children) => {\r\n        return children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex)\r\n                return 1;\r\n            if (a.zIndex < b.zIndex)\r\n                return -1;\r\n\r\n            return 0;\r\n        })\r\n    };\r\n\r\n    getChildren = (allChildren, agl) => {\r\n        if (this.props.getChildrenOverride)\r\n            return this.props.getChildrenOverride(this.getSorted(Object.values(allChildren)), agl);\r\n\r\n        return this.getSorted(Object.values(allChildren)).map((child) => {\r\n            return child.child;\r\n        })\r\n    };\r\n\r\n    render () {\r\n        this.saveState();\r\n        let {allChildren, agl} = this.props;\r\n        return (\r\n            this.getChildren(allChildren, agl)\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorBreadcrumbs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div\r\n                className=\"InspectorOptionRoot\"\r\n            >\r\n                <div\r\n                    className=\"InspectorBreadcrumbsParentsRoot\"\r\n                >\r\n                        {\r\n                            item.getParentsId().slice(0, 2).reverse().map(parentId => {\r\n                                let parent = item.props.idMan.getItem(parentId);\r\n                                return (\r\n                                    <ButtonBase\r\n                                        className={\"InspectorBreadcrumbsParentsButton\"}\r\n                                        onClick={(e) => {\r\n                                            parent.onSelect(true);\r\n                                        }}\r\n                                        key={parent.props.id}\r\n                                    >\r\n                                        {\r\n                                            parent.props.tagName + \" >\"\r\n                                        }\r\n                                    </ButtonBase>\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n\r\n                <span\r\n                    className=\"InspectorBreadcrumbsTagName\"\r\n                >\r\n                    {item.props.tagName}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class IconButton extends React.Component {\r\n    render () {\r\n        return (\r\n            <ButtonBase\r\n                aria-label={this.props[\"aria-label\"] || \"aria-label\"}\r\n                onClick={this.props.onClick}\r\n                style={{...{\r\n                    marginLeft: 4,\r\n                    borderRadius: 4\r\n                }, ...this.props.buttonBaseStyle}}\r\n                className={this.props.className}\r\n                disabled={this.props.disabled}\r\n            >\r\n                <div style={{...{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    padding: 8,\r\n                }, ...this.props.imageContainerStyle}}>\r\n                    {\r\n                        this.props.icon\r\n                    }\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {alignItem} from \"../../AwesomwGridLayoutHelper\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class InspectorAligns extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                name: \"Align to left\",\r\n                horizontal: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-left.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to center\",\r\n                horizontal: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-center.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to right\",\r\n                horizontal: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-right.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to top\",\r\n                vertical: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-top.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to middle\",\r\n                vertical: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-middle.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to bottom\",\r\n                vertical: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-bottom.svg')}\r\n                />\r\n            },\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div className=\"InspectorOptionRoot\">\r\n                <span className=\"InspectorOptionTextTitle\">\r\n                    Alignment\r\n                </span>\r\n                <div\r\n                    className=\"InspectorAlignsRoot\"\r\n                >\r\n                    {\r\n                        this.getButtonsData().map((data, i) => {\r\n                            return (\r\n                                <IconButton\r\n                                    key={data.name}\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 0,\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 6\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        alignItem(item, data.vertical, data.horizontal)\r\n                                    }}\r\n                                    className=\"InspectorAlignsButtons\"\r\n                                >\r\n                                    {data.img}\r\n                                </IconButton>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from 'lodash.merge';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport Stack from \"./Components/Stack/Stack\";\r\nimport DynamicComponents from \"./Dynamic/DynamicComponents\";\r\nimport {getCompositeFromData, getFromData, setData} from \"./BreakPointManager\";\r\nimport ContextMenu from \"./Test/ContextMenu\";\r\nimport chroma from \"chroma-js\";\r\n\r\nlet deepEqual = require('fast-deep-equal/es6');\r\n\r\nexport function stretch(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let saveStyle = cloneObject(item.getFromData(\"style\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            stretch(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).setStyle(saveStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (item.hasOverride(\"stretch\")) {\r\n        item.callOverride(\"stretch\", item);\r\n        return;\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let beStretch = false;\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (!isStretch(item))\r\n        beStretch = true;\r\n\r\n    item.setDocks(beStretch, beStretch, false, beStretch, item.getFromTempData(\"autoDock\"), undefined, true);\r\n\r\n    gridItemStyle.alignSelf = beStretch? \"start\": \"start\";\r\n    gridItemStyle.justifySelf = beStretch? \"stretch\": \"center\";\r\n    gridItemStyle.marginTop = \"0px\";\r\n    gridItemStyle.marginLeft = \"0px\";\r\n    gridItemStyle.marginRight = \"0px\";\r\n    gridItemStyle.marginBottom = \"0px\";\r\n    item.setStyleParam(\"width\", \"auto\");\r\n    item.setStyleParam(\"height\", \"100%\");\r\n    item.setStyleParam(\"minHeight\", \"unset\");\r\n\r\n    if (!beStretch) {\r\n        let parentRect = item.props.parent.getSize();\r\n        gridItemStyle.marginTop = `${(parentRect.height - 0.8 * parentRect.height) / 2}px`;\r\n\r\n        item.setStyleParam(\"width\", \"80%\");\r\n        item.setStyleParam(\"height\", \"auto\");\r\n        item.setStyleParam(\"minHeight\", `${0.8 * parentRect.height}px`);\r\n    }\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function isStretch(item, log) {\r\n    if (item.hasOverride(\"isStretch\")) {\r\n        return item.callOverride(\"isStretch\", item, log);\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    return !(gridItemStyle.alignSelf !== \"start\" || gridItemStyle.justifySelf !== \"stretch\" ||\r\n        gridItemStyle.marginTop !== \"0px\" || gridItemStyle.marginLeft !== \"0px\" ||\r\n        gridItemStyle.marginRight !== \"0px\" || gridItemStyle.marginBottom !== \"0px\");\r\n}\r\n\r\nexport function allowStretch(item) {\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    if (item.props.as === \"section\" || item.props.as === \"header\" || item.props.as === \"footer\")\r\n        return false;\r\n\r\n    return !item.props.disableStretch;\r\n}\r\n\r\nexport function alignItem(item, vertical, horizontal, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            alignItem(idMan.getItem(itemId), vertical, horizontal, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (vertical) {\r\n        gridItemStyle.alignSelf = vertical;\r\n        gridItemStyle.marginTop = \"0px\";\r\n        gridItemStyle.marginBottom = \"0px\";\r\n    }\r\n    if (horizontal) {\r\n        gridItemStyle.justifySelf = horizontal;\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n    }\r\n\r\n    let baseDocks = item.getBaseDocks();\r\n    item.setDocks(\r\n        baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n        item.getFromTempData(\"autoDock\"), undefined, true\r\n    );\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function setScrollBehaviour(item, behaviour, pageAgl, fromUndoRedo, {offsetTop} = {}) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let pageId = pageAgl.props.id;\r\n        let oldBehaviour = item.getFromData(\"isFixed\")? \"fixed\": item.getFromData(\"scrollBehaviour\") || \"none\";\r\n        let oldOffsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        item.props.undoredo.add((idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), behaviour, idMan.getItem(pageId), true, {offsetTop});\r\n        }, (idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), oldBehaviour, idMan.getItem(pageId), true,\r\n                {offsetTop: oldOffsetTop});\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let oldIsFixed = item.getFromTempData(\"isFixed\");\r\n\r\n    let lastSectionId = item.getFromTempData(\"lastSectionId\");\r\n    if (oldIsFixed && behaviour !== \"fixed\" && lastSectionId) {\r\n        item.props.parent.onChildLeave(item);\r\n        let itemRect = item.getSize(false);\r\n        let sectionParent = item.props.viewRef.current\r\n            .props.aglComponent.getSectionOfPoint(itemRect.left, itemRect.top);\r\n\r\n        sectionParent.onSelect(true, undefined, undefined, undefined, true);\r\n        sectionParent.prepareRects();\r\n        sectionParent.onChildDrop(item, undefined, false, (newItem) => {\r\n            newItem.setState({portalNodeId: undefined});\r\n            window.requestAnimationFrame(() => {\r\n                newItem.onSelect(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    item.setTempData(\"isFixed\", behaviour === \"fixed\");\r\n    item.setDataInBreakpoint(\"scrollBehaviour\", behaviour);\r\n    item.setDataInBreakpoint(\"scrollStickyOffsetTop\", offsetTop);\r\n\r\n    switch (behaviour) {\r\n        case \"none\":\r\n            item.setStyleParam(\"position\", undefined);\r\n            item.setStyleParam(\"top\", undefined);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"sticky\":\r\n            item.setStyleParam(\"position\", \"sticky\");\r\n            item.setStyleParam(\"top\", offsetTop || 0);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"fixed\":\r\n            if (!oldIsFixed) {\r\n                addFixedChildToRoot(item, pageAgl);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\nfunction addFixedChildToRoot(item, pageAgl) {\r\n    let oldParentRect = item.props.parent.getSize(false);\r\n    item.toggleHelpLines();\r\n    item.setTempData(\"lastSectionId\", item.props.parent.props.id);\r\n    item.props.parent.onChildLeave(item);\r\n    pageAgl.onSelect(true, undefined, undefined, undefined, true);\r\n    let pageRect = pageAgl.prepareRects();\r\n    let itemRect = item.getSize(false);\r\n\r\n    pageAgl.onChildDrop(item, undefined, true, (newItem) => {\r\n        window.requestAnimationFrame(() => {\r\n            newItem.onSelect(true);\r\n        });\r\n    });\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n    gridItemStyle.gridArea = \"1/1/2/2\";\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n\r\n    let style = item.getCompositeFromData(\"style\");\r\n\r\n    let newWidth = itemRect.width *  oldParentRect.width / pageRect.width;\r\n    item.setStyleParam(\"width\", getStyleValueFromPx(newWidth, oldParentRect.width,\r\n        getUnitFromStyleValue(style.width), item));\r\n    item.setStyleParam(\"height\", getStyleValueFromPx(itemRect.height, oldParentRect.height,\r\n        getUnitFromStyleValue(style.height), item));\r\n    item.setStyleParam(\"position\", undefined);\r\n    item.setStyleParam(\"top\", undefined);\r\n    item.setStyleParam(\"pointerEvents\", \"auto\");\r\n}\r\n\r\nexport function isFixed(item) {\r\n    return item.getFromTempData(\"isFixed\");\r\n}\r\n\r\nexport function hideInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", \"none !important\");\r\n    item.props.viewRef.current.props.aglComponent.updateTemplates();\r\n    item.props.select.onScrollItem();\r\n    item.props.editor.updateLayout();\r\n}\r\n\r\nexport function isHideInBreakPoint(item, fromUndoRedo) {\r\n    return item.getCompositeFromData(\"style\").display === \"none !important\";\r\n}\r\n\r\nexport function showInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", undefined);\r\n    let newStyle = item.getFromData(\"style\");\r\n    if (newStyle && Object.keys(newStyle).length === 0) {\r\n        item.setDataInBreakpoint(\"style\", undefined);\r\n    }\r\n    item.props.viewRef.current.props.aglComponent.updateTemplates();\r\n    item.props.editor.updateLayout();\r\n}\r\n\r\nexport function hasBreakpointDesign(fromName, item) {\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n    return !(fromData === undefined);\r\n}\r\n\r\nexport function pasteFromBreakpointDesign(item, fromName, toName, fromUndoRedo) {\r\n    let fromData = item.props.griddata.bpData[fromName].design;\r\n    if (fromData === undefined)\r\n        return;\r\n\r\n    if (!toName)\r\n        toName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[toName])\r\n        item.props.griddata.bpData[toName] = {};\r\n\r\n    let currentData = item.props.griddata.bpData[toName].design;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(currentData);\r\n        item.props.undoredo.add((idMan) => {\r\n            pasteFromBreakpointDesign(idMan.getItem(itemId), fromName, toName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[toName].design = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    if (!currentData)\r\n        currentData = {};\r\n    merge(currentData, fromData);\r\n    item.props.griddata.bpData[toName].design = currentData;\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function deepAssign(fromData, currentData) {\r\n    Object.keys(fromData).map(key => {\r\n        let currentValue = currentData[key];\r\n        let fromValue = fromData[key];\r\n        if (currentValue === undefined) {\r\n            currentData[key] = cloneObject(fromValue);\r\n        } else {\r\n            if (fromValue instanceof Object) {\r\n                if (!currentValue)\r\n                    currentData[key] = {};\r\n                deepAssign(fromValue, currentValue)\r\n            } else {\r\n                currentData[key] = cloneObject(fromValue);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function removeOverrides(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (fromName === \"laptop\")\r\n        return;\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(item.props.griddata.bpData[fromName] || {});\r\n        item.props.undoredo.add((idMan) => {\r\n            removeOverrides(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[fromName] = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.griddata.bpData[fromName] = {};\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function applyOnAllBreakPoint(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n\r\n    let undoData = {};\r\n\r\n    let sortedBreakPoints = item.props.breakpointmanager.getSortedBreakPoints();\r\n    for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n        let toName = sortedBreakPoints[i].name;\r\n        if (fromData !== toName) {\r\n            undoData[toName] = cloneObject(item.props.griddata.bpData[toName] || {});\r\n            item.props.griddata.bpData[toName] = cloneObject(fromData);\r\n        }\r\n    }\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            applyOnAllBreakPoint(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            Object.keys(undoData).forEach(key => {\r\n                idMan.getItem(itemId).props.griddata.bpData[key] = undoData[key];\r\n            });\r\n\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function copyDesign(item, fromAll) {\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n\r\n    let designDatas = [];\r\n    if (!fromAll && item.props.griddata.bpData[currentBpName])\r\n        designDatas[0] = {\r\n            bpName: currentBpName,\r\n            design: item.props.griddata.bpData[currentBpName].design,\r\n            justOneBp: true\r\n        };\r\n    else if (fromAll) {\r\n        Object.keys(item.props.griddata.bpData).forEach((key, index) => {\r\n            designDatas[index] = {\r\n                bpName: key,\r\n                design: item.props.griddata.bpData[key].design\r\n            };\r\n        });\r\n    }\r\n\r\n    console.log(\"copyDesign\", designDatas);\r\n    if (designDatas.length > 0)\r\n        item.props.breakpointmanager.copyDesign(designDatas, item);\r\n}\r\n\r\nexport function pasteDesign(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let copyDesign = cloneObject(item.props.breakpointmanager.getCopyDesign().designDatas);\r\n        let allOldDesign = cloneObject(Object.keys(item.props.griddata.bpData).map(key => {\r\n            return {\r\n                bpName: key,\r\n                design: item.props.griddata.bpData[key].design\r\n            }\r\n        }));\r\n        item.props.undoredo.add((idMan) => {\r\n            let item = idMan.getItem(itemId);\r\n            console.log(111);\r\n            let temp = cloneObject(item.props.breakpointmanager.getCopyDesign().designDatas);\r\n            let sourceItemTemp = item.props.breakpointmanager.getCopyDesign().sourceItem;\r\n            console.log(222);\r\n            item.props.breakpointmanager.cloneDesignDatas = {\r\n                designDatas: copyDesign,\r\n                sourceItem: item\r\n            };\r\n            item.props.breakpointmanager.pasteDesign(item);\r\n            console.log(333);\r\n            item.props.breakpointmanager.cloneDesignDatas = {\r\n                designDatas: temp,\r\n                sourceItem: sourceItemTemp\r\n            };\r\n\r\n            item.onBreakpointChange(\r\n                item.props.breakpointmanager.getWindowWidth(),\r\n                item.props.breakpointmanager.current());\r\n\r\n            item.props.aglComponent.updateDesign &&\r\n                item.props.aglComponent.updateDesign(item.getCompositeFromData(\"design\"));\r\n\r\n            item.updateLayout();\r\n            console.log(444);\r\n        }, (idMan) => {\r\n            let item = idMan.getItem(itemId);\r\n            allOldDesign.forEach(designData => {\r\n                item.props.griddata.bpData[designData.bpName].design = cloneObject(designData.design);\r\n            });\r\n\r\n            item.onBreakpointChange(\r\n                item.props.breakpointmanager.getWindowWidth(),\r\n                item.props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.breakpointmanager.pasteDesign(item);\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n\r\n    item.props.aglComponent.updateDesign &&\r\n        item.props.aglComponent.updateDesign(item.getCompositeFromData(\"design\"));\r\n\r\n    item.updateLayout();\r\n}\r\n\r\nexport function isGroupSelected(item) {\r\n    return item.props.select.group;\r\n}\r\n\r\nexport function getSectionId(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent.props.id;\r\n\r\n    return uuidv4();\r\n}\r\n\r\nexport function getSectionParent(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent;\r\n}\r\n\r\nexport function createStack(items, fromUndoRedo) {\r\n    if (!items || items.length < 2)\r\n        return;\r\n\r\n    let itemsParent = getSectionParent(items[0]);\r\n\r\n    if (!itemsParent)\r\n        return;\r\n\r\n    let top = 99999999;\r\n    let left = 99999999;\r\n    let rightFromLeft = 0;\r\n    let allSpacerData = [];\r\n    let lastBottom;\r\n\r\n    items.sort((a,b) => {\r\n        if (a && b){\r\n            let topA = a.getSize(false).top;\r\n            let topB = b.getSize(false).top;\r\n            if (topA < topB) {\r\n                return -1;\r\n            } else if (topA === topB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    items.forEach((item) => {\r\n        let rect = item.getSize(false);\r\n        top = Math.min(rect.top, top);\r\n        left = Math.min(rect.left, left);\r\n        rightFromLeft = Math.max(rect.left + rect.width, rightFromLeft);\r\n\r\n        if (lastBottom) {\r\n            allSpacerData.push({\r\n                height: Math.max(0, rect.top - lastBottom)\r\n            });\r\n        }\r\n\r\n        lastBottom = rect.top + rect.height;\r\n    });\r\n\r\n    let stack;\r\n    let stackNode =\r\n        <Stack\r\n            style={{\r\n                width: `${rightFromLeft - left}px`,\r\n            }}\r\n            lateMountedComplete={(_stack) => {\r\n                stack = _stack;\r\n            }}\r\n            allSpacerData={allSpacerData}\r\n            document={items[0].props.document}\r\n        />;\r\n\r\n    let parentRect = itemsParent.prepareRects();\r\n    itemsParent.addChild(stackNode, undefined, undefined, undefined, (agl) => {\r\n        if (!fromUndoRedo) {\r\n            let stackId = agl.props.id;\r\n            let itemIds = items.map(item => {\r\n                return item.props.id;\r\n            });\r\n            agl.props.undoredo.add((idMan) => {\r\n                let newItems = itemIds.map(id => {\r\n                    return idMan.getItem(id);\r\n                });\r\n                newItems.forEach(item => {\r\n                    item.onSelect(true);\r\n                });\r\n                createStack(newItems, true);\r\n            }, (idMan) => {\r\n                removeStackFromAGL(idMan.getItem(stackId), undefined, true);\r\n            });\r\n        }\r\n\r\n        agl.onSelect(true);\r\n        let {gridItemStyle} =\r\n            agl.calculateGridItem(left - parentRect.left, top - parentRect.top,\r\n                itemsParent, undefined, undefined, itemsParent.getSize(false));\r\n        agl.setGridItemStyle(gridItemStyle);\r\n        agl.prepareRects();\r\n        // agl.prepareRects(true);\r\n        setTimeout(() => {\r\n            items = items.filter(item => {\r\n                return item.props.id !== agl.props.id;\r\n            });\r\n\r\n            let addToStack = (items) => {\r\n                let item = items.shift();\r\n                if (!item)\r\n                    return;\r\n\r\n                item.props.parent.onChildLeave(item);\r\n                agl.onChildDrop(item, undefined, undefined, () => {\r\n                    addToStack(items);\r\n                });\r\n            };\r\n            addToStack(items);\r\n            setTimeout(() => {\r\n                stack.setOrder();\r\n                setTimeout(() => {\r\n                    let width = agl.getSize(false, true).width;\r\n                    let parentWidth = agl.props.parent.getSize(false).width;\r\n                    agl.setProps(\"width\", `${width / parentWidth * 100}%`);\r\n                    agl.onSelect(true);\r\n                }, 0);\r\n            }, 0);\r\n        }, 0);\r\n    });\r\n}\r\n\r\nexport function removeStack(stack, childIds, fromUndoRedo) {\r\n    removeStackFromAGL (stack.aglRef.current, childIds, fromUndoRedo);\r\n}\r\n\r\nexport function removeStackFromAGL(stackAgl, childIds, fromUndoRedo) {\r\n    stackAgl.removing = true;\r\n    if (!stackAgl || !stackAgl.props.isStack)\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let stackId = stackAgl.props.id;\r\n        stackAgl.props.undoredo.add((idMan) => {\r\n            removeStackFromAGL(idMan.getItem(stackId), childIds, true);\r\n        }, (idMan) => {\r\n            let newItems = childIds.map(id => {\r\n                return idMan.getItem(id);\r\n            });\r\n            createStack(newItems, true);\r\n        });\r\n    }\r\n\r\n    let newParent = stackAgl.props.parent;\r\n    stackAgl.clearItem();\r\n\r\n    let sorted = Object.values(stackAgl.allChildRefs).sort((a,b) => {\r\n        if (a && a.current && b && b.current){\r\n            let relativeYA = a.current.getFromData(\"relativeY\");\r\n            let relativeYB = b.current.getFromData(\"relativeY\");\r\n            if (relativeYA < relativeYB) {\r\n                return 1;\r\n            } else if (relativeYA === relativeYB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    newParent.onSelect(true);\r\n    newParent.prepareRects();\r\n    // newParent.prepareRects(true);\r\n    let removeChilds = (sorted) => {\r\n        let item = sorted.shift();\r\n\r\n        if (!item) {\r\n            setTimeout(() => {\r\n                newParent.onChildLeave(stackAgl);\r\n            }, 0);\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            if (item && item.current) {\r\n                item.current.props.parent.onChildLeave(item.current);\r\n                newParent.onChildDrop(item.current);\r\n            }\r\n            removeChilds(sorted, newParent);\r\n        }, 0);\r\n    };\r\n\r\n    removeChilds(sorted);\r\n    /*sorted.forEach(item => {\r\n        if (item && item.current) {\r\n            console.log(\"onChildDrop\", item.current.props.id);\r\n            item.current.props.parent.onChildLeave(item.current);\r\n            newParent.onChildDrop(item.current);\r\n        }\r\n    });*/\r\n}\r\n\r\nexport function createItem(parent, childData, fromUndoRedo, gridItemStyle, style, onChildMounted) {\r\n    childData.props = cloneObject(parent.getClearProps({...childData.props}, true));\r\n    childData.zIndex = parent.getNextIndexData(0).lastZIndex + 1;\r\n\r\n    if (gridItemStyle) {\r\n        parent.setDataInBreakpoint(\r\n            \"gridItemStyle\", gridItemStyle, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n    if (style) {\r\n        parent.setDataInBreakpoint(\r\n            \"style\", style, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n\r\n    let child = parent.createChildByData(\r\n        childData , DynamicComponents, undefined, (newItem) => {\r\n        newItem.onSelect(true);\r\n\r\n        onChildMounted && onChildMounted(newItem);\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = newItem.props.id;\r\n            let parentId = parent.props.id;\r\n            let childData = cloneObject(parent.getChildData(itemId));\r\n            parent.props.undoredo.add((idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true, gridItemStyle, style);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            });\r\n        }\r\n    });\r\n\r\n    parent.children[childData.props.id] = {\r\n        child: child,\r\n        zIndex: childData.zIndex\r\n    };\r\n\r\n    let savedChildren = parent.getFromTempData(\"savedChildren\");\r\n    savedChildren[childData.props.id] = childData;\r\n\r\n    parent.updateLayout();\r\n}\r\n\r\nexport function setDataInBreakpoint(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(prop, undefined, breakpointName);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setDataInBreakpoint(prop, saveValue, idMan.getItem(itemId), false, breakpointName, updateLayout);\r\n        }, (idMan) => {\r\n            setDataInBreakpoint(prop, oldValue, idMan.getItem(itemId), false, breakpointName, updateLayout);\r\n        }, addToUndo);\r\n    }\r\n    item.setDataInBreakpoint(prop, value, undefined, breakpointName);\r\n\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setTempData(prop, value, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromTempData(prop);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setTempData(prop, saveValue, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setTempData(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setTempData(prop, value);\r\n}\r\n\r\nexport function setStyle(newStyle, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let saveStyle = cloneObject(newStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setStyle(newStyle);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setStyleParam (param, value, item, addToUndo, breakpointName, dontAddToSnap) {\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyleParam(param, value, idMan.getItem(itemId), false, breakpointName, dontAddToSnap);\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        }, addToUndo);\r\n    }\r\n\r\n    let style = item.hasDataInBreakPoint(\"style\", undefined, breakpointName) || {};\r\n    style[param] = value;\r\n    if (value === undefined)\r\n        delete style[param];\r\n    item.setStyle(style, undefined, breakpointName, undefined, dontAddToSnap);\r\n}\r\n\r\nexport function setNewSize(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(`style.${prop}`, undefined, breakpointName);\r\n        let saveStyle = cloneObject(item.getFromData(\"style)\"));\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setNewSize(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setNewSize(prop, value);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setGridItemStyle(newGridItemStyle, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGridItemStyle = item.getFromData(\"gridItemStyle\", undefined, breakpointName);\r\n        oldGridItemStyle = cloneObject(oldGridItemStyle);\r\n        let saveGridItemStyle = cloneObject(newGridItemStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridItemStyle(saveGridItemStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridItemStyle(oldGridItemStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridItemStyle(newGridItemStyle);\r\n    item.invalidateSize(true, true, true);\r\n}\r\n\r\nexport function setGridArea(newGridArea, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldGridArea = item.getGridArea();\r\n        oldGridArea = cloneObject(oldGridArea);\r\n        let saveGridArea = cloneObject(newGridArea);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridArea(saveGridArea, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridArea(oldGridArea, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridArea(newGridArea);\r\n}\r\n\r\nexport function setGrid(newGrid, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGrid = item.getFromData(\"grid\", undefined, breakpointName);\r\n        oldGrid = cloneObject(oldGrid);\r\n        let saveGrid = cloneObject(newGrid);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGrid(saveGrid, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGrid(oldGrid, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGrid(newGrid);\r\n}\r\n\r\nexport function setAnchor(newAnchor, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldAnchor = item.getFromTempData(\"anchor\");\r\n        oldAnchor = cloneObject(oldAnchor);\r\n        let saveAnchor = cloneObject(newAnchor);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setAnchor(saveAnchor, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setAnchor(oldAnchor, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setAnchor(newAnchor);\r\n}\r\n\r\nexport function arrangeIndex(item, child, type, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldType = type === \"forward\"? \"backward\":\r\n            type === \"backward\"? \"forward\": undefined;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), type);\r\n        }, (idMan) => {\r\n            if (oldType)\r\n                arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldType);\r\n            else\r\n                changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.arrangeIndex(child, type);\r\n}\r\n\r\nexport function changeIndex (item, child, index, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), index);\r\n        }, (idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.changeIndex(child, index);\r\n}\r\n\r\nexport function resolveDesignData (item, key, value){\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName()))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    if (!key)\r\n        return;\r\n\r\n    let design = getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName());\r\n    if (!design[key])\r\n        design[key] = value || {};\r\n}\r\n\r\nexport function getCompositeDesignData (item) {\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getCompositeFromData(item.props.griddata, \"design\", breakpointData))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    return getCompositeFromData(item.props.griddata, \"design\", breakpointData);\r\n}\r\n\r\nexport function rotate (item, degree, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldDegree = item.getFromData(\"rotateDegree\");\r\n        item.props.undoredo.add((idMan) => {\r\n            rotate(idMan.getItem(itemId), degree, true);\r\n        }, (idMan) => {\r\n            rotate(idMan.getItem(itemId), oldDegree || 0, true);\r\n        });\r\n    }\r\n\r\n    item.setDataInBreakpoint(\"transform.rotateDegree\", degree);\r\n    item.setTransformStyle(item.getFromData(\"transform\"));\r\n    item.updateLayout(item.props.select.onScrollItem);\r\n}\r\n\r\nexport function getViewRatioStyle (value) {\r\n    if (value.includes('vh'))\r\n        return`calc(${value} * var(--vh-ratio))`;\r\n    if (value.includes('vw'))\r\n        return`calc(${value} * var(--vw-ratio))`;\r\n\r\n    return value;\r\n}\r\n\r\nexport function getValueFromCSSValue (value) {\r\n    if (!value)\r\n        return \"\";\r\n\r\n    if (value.includes(\"%\")) {\r\n        return Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        return Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        return Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function getPxValueFromCSSValue (value, parentValue, item) {\r\n    if (!value)\r\n        return;\r\n    if (!isNaN(value))\r\n        return value;\r\n\r\n    if (value.includes(\"%\")) {\r\n        let percent = Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n        return percent * parentValue / 100;\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        let percent = Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n\r\n        return percent * item.props.breakpointmanager.getWindowHeight() / 100;\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        let percent =  Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n\r\n        return percent * item.props.breakpointmanager.getWindowWidth() / 100;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function getStyleValueFromPx (value, parentValue, unit, item) {\r\n    if (!unit)\r\n        unit = \"px\";\r\n\r\n    if (unit === \"px\") {\r\n        return `${value}${unit}`;\r\n    }\r\n    if (unit === \"%\") {\r\n        return `${value / parentValue * 100}${unit}`;\r\n    }\r\n    if (unit === \"vh\") {\r\n        value = `${value / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n        return `calc(${value} * var(--vh-ratio))`;\r\n    }\r\n    if (unit === \"vw\") {\r\n        value = `${value / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n        return `calc(${value} * var(--vw-ratio))`;\r\n    }\r\n\r\n    return unit;\r\n}\r\n\r\nexport function getUnitFromStyleValue (value) {\r\n    if (!value)\r\n        return \"none\";\r\n\r\n    if (value.includes(\"%\")) {\r\n        return \"%\";\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return \"px\";\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        return \"vw\";\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        return \"vh\";\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function createContextMenu(e, item, onClose) {\r\n    if (item.props.isPage)\r\n        return;\r\n\r\n    let menu = [];\r\n\r\n    item.getContextMenu() && menu.push(item.getContextMenu());\r\n\r\n    // Copy section\r\n    let copySection = [\r\n        {\r\n            name: \"Copy\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.copy(item);\r\n            },\r\n            shortcut: \"Ctrl + C\"\r\n        },\r\n        {\r\n            name: \"Paste\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.paste(item);\r\n            },\r\n            shortcut: \"Ctrl + V\"\r\n        },\r\n        {\r\n            name: \"Duplicate\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.duplicate(item);\r\n            },\r\n            shortcut: \"Ctrl + D\"\r\n        },\r\n        {\r\n            name: \"Copy Element Design\",\r\n            subMenu: [\r\n                {\r\n                    name: \"From this breakpoint\",\r\n                    onClick: (e) => {\r\n                        copyDesign(item);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"From all breakpoint\",\r\n                    onClick: (e) => {\r\n                        copyDesign(item, true);\r\n                    }\r\n                },\r\n            ]\r\n        },\r\n    ];\r\n    let copyDesignItem = item.props.breakpointmanager.getCopyDesign();\r\n    if (copyDesignItem && isSameFamily(copyDesignItem.sourceItem, item))\r\n        copySection.push({\r\n            name: \"Paste Design\",\r\n            onClick: (e) => {\r\n                pasteDesign(item);\r\n            }\r\n        });\r\n    let overrideBps = [];\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n    Object.keys(item.props.griddata.bpData).forEach(bpName => {\r\n        if (bpName === currentBpName ||\r\n            item.props.breakpointmanager.getHighestBpName() === bpName)\r\n            return;\r\n\r\n        if (item.props.griddata.bpData[bpName] && item.props.griddata.bpData[bpName].design) {\r\n            if (!item.props.griddata.bpData[currentBpName] ||\r\n                !deepEqual(item.props.griddata.bpData[bpName].design,\r\n                    item.props.griddata.bpData[currentBpName].design)) {\r\n                overrideBps.push(bpName);\r\n            }\r\n        }\r\n    });\r\n    if (overrideBps.length > 0) {\r\n        copySection.push({\r\n            name: \"Paste From Breakpoint\",\r\n            subMenu: overrideBps.map(bpName => {\r\n                return {\r\n                    name: bpName,\r\n                    onClick: (e) => {\r\n                        pasteFromBreakpointDesign(item, bpName, currentBpName);\r\n                    }\r\n                };\r\n            })\r\n        });\r\n    }\r\n    menu.push(copySection);\r\n\r\n    let deleteSection = [];\r\n    if (!isHideInBreakpoint(item)) {\r\n        deleteSection.push(\r\n            {\r\n                name: \"Hide In Breakpoint\",\r\n                onClick: (e) => {\r\n                    hideInBreakPoint(item);\r\n                }\r\n            });\r\n    }\r\n    deleteSection.push({\r\n        name: \"Delete\",\r\n        onClick: (e) => {\r\n            item.delete();\r\n        },\r\n        shortcut: \"Delete\"\r\n    });\r\n\r\n    if (currentBpName !== item.props.breakpointmanager.getHighestBpName()) {\r\n        if (item.props.griddata.bpData[currentBpName] &&\r\n            Object.keys(item.props.griddata.bpData[currentBpName]).length > 0)\r\n        {\r\n            deleteSection.unshift({\r\n                name: \"Remove Breakpoint Overrides\",\r\n                onClick: (e) => {\r\n                    // TODO add these lines to a function with undo support\r\n                    delete item.props.griddata.bpData[currentBpName];\r\n                    item.onBreakpointChange(\r\n                        item.props.breakpointmanager.getWindowWidth(),\r\n                        item.props.breakpointmanager.current());\r\n                    item.props.select.onScrollItem();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    menu.push(deleteSection);\r\n\r\n    let shortcutSection = [];\r\n    if (!item.props.griddata.isSection) {\r\n        shortcutSection.push({\r\n            name: \"Arrange\",\r\n            subMenu: [\r\n                {\r\n                    name: \"Move Forward\",\r\n                    shortcut: \"Ctrl + Alt + ↑\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"forward\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move to Front\",\r\n                    shortcut: \"Ctrl + ↑\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"front\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move Backward\",\r\n                    shortcut: \"Ctrl + Alt + ↓\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"backward\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move to Back\",\r\n                    shortcut: \"Ctrl + ↓\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"back\", true);\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    menu.push(shortcutSection);\r\n\r\n    let sectionSection = [];\r\n    if (item.props.isSection) {\r\n        if (item.props.isVerticalSection) {\r\n            sectionSection.push({\r\n                name: \"Move Left\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveLeft(item.props.id);\r\n                },\r\n            });\r\n            sectionSection.push({\r\n                name: \"Move Right\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveRight(item.props.id);\r\n                },\r\n            });\r\n        } else {\r\n            sectionSection.push({\r\n                name: \"Move Up\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveUp(item.props.id);\r\n                },\r\n            });\r\n            sectionSection.push({\r\n                name: \"Move Down\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveDown(item.props.id);\r\n                },\r\n            });\r\n        }\r\n    }\r\n    menu.unshift(sectionSection);\r\n\r\n    let masterSection = [\r\n    ];\r\n\r\n    return <ContextMenu\r\n        menu={menu}\r\n        onClose={onClose}\r\n        clientX={e.clientX}\r\n        clientY={e.clientY}\r\n    />\r\n}\r\n\r\nexport function isHideInBreakpoint(item) {\r\n    if (!item)\r\n        return false;\r\n\r\n    if (typeof item.getCompositeFromData(\"style\").display === 'string')\r\n        return item.getCompositeFromData(\"style\").display.includes(\"none\");\r\n\r\n    return false;\r\n}\r\n\r\nexport function isSameFamily(item1, item2) {\r\n    if (item1.props.tagName === item2.props.tagName)\r\n        return true;\r\n\r\n    if (item1.props.griddata.isSection && item2.props.griddata.isSection)\r\n        return true;\r\n}\r\n\r\nexport function isLeftClick (e) {\r\n    if (e.button === 0)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport function isRightClick (e) {\r\n    if (e.button === 2)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport function getResizeDelta (degree, dir, delta) {\r\n    let rad = degree * Math.PI / 180;\r\n    let cx = delta.x, cy = delta.y;\r\n    let cxy = Math.sqrt(cx * cx + cy * cy);\r\n    let cxp = cy !== 0 ? cy / Math.tan(rad) : 0;\r\n    let cyp = cx !== 0 ? -cx / Math.tan(rad) : 0;\r\n\r\n    let thetaH = Math.atan(Math.abs(cy) / Math.abs(cx));\r\n    let thetaW = Math.atan(Math.abs(cy) / Math.abs(cx));\r\n\r\n    if (cx * cy > 0)\r\n        thetaW = -thetaW;\r\n    if (cx * cy > 0)\r\n        thetaH = -thetaH;\r\n\r\n    let Dh = Math.abs(Math.sin(rad + thetaH) * cxy);\r\n    let Dw = Math.abs(Math.cos(rad + thetaW) * cxy);\r\n\r\n    if (cxp < cx)\r\n        Dh = -Dh;\r\n    if (cyp > cy)\r\n        Dw = -Dw;\r\n\r\n    if (degree > 180) {\r\n        Dh = -Dh;\r\n        Dw = -Dw;\r\n    }\r\n\r\n    let dxH = Dh * Math.sin(rad);\r\n    let dyH = Dh * Math.cos(rad);\r\n    let dxW = Dw * Math.cos(rad);\r\n    let dyW = Dw * Math.sin(rad);\r\n\r\n    let finalDelta = {\r\n        top: 0, left: 0, width: 0, height: 0\r\n    };\r\n\r\n    if (dir.includes('n')) {\r\n        finalDelta.height -= Dh;\r\n        finalDelta.top += ((Dh + dyH) / 2);\r\n        finalDelta.left -= (dxH / 2);\r\n    }\r\n\r\n    if (dir.includes('s')) {\r\n        finalDelta.height += Dh;\r\n        finalDelta.top -= ((Dh - dyH) / 2);\r\n        finalDelta.left -= (dxH / 2);\r\n    }\r\n\r\n    if (dir.includes('w')) {\r\n        finalDelta.width -= Dw;\r\n        finalDelta.top += (dyW / 2);\r\n        finalDelta.left += ((Dw + dxW) / 2);\r\n    }\r\n\r\n    if (dir.includes('e')) {\r\n        finalDelta.width += Dw;\r\n        finalDelta.top += (dyW / 2);\r\n        finalDelta.left -= ((Dw - dxW) / 2);\r\n    }\r\n\r\n    console.log(\"finalDelta\", finalDelta, Dw, dyW, dxW);\r\n    return finalDelta;\r\n}\r\n\r\nexport function sortBy (array, param) {\r\n    array = array.sort((a, b) => {\r\n        if (a[param] < b[param]) {\r\n            return -1;\r\n        } else if (a[param] === b[param]) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    });\r\n    return array;\r\n}\r\n\r\nexport function getColorScheme (baseColor) {\r\n    return {\r\n        \"1\": chroma(baseColor).luminance(0.025).css(),\r\n        \"2\": chroma(baseColor).luminance(0.06).css(),\r\n        \"3\": chroma(baseColor).luminance(0.15).css(),\r\n        \"4\": chroma(baseColor).luminance(0.35).css(),\r\n        \"5\": chroma(baseColor).luminance(0.55).css(),\r\n    }\r\n}\r\n\r\nexport function parseColor (color, alpha, editor) {\r\n    if (!color)\r\n        return;\r\n\r\n    if (color instanceof Object) {\r\n        let chromaColor = chroma(editor.themeManagerRef.current.getColor(color.paletteName, color.key));\r\n        chromaColor = chromaColor.alpha(alpha || 1);\r\n        return chromaColor.css();\r\n    } else {\r\n        let chromaColor = chroma(color);\r\n        chromaColor = chromaColor.alpha(alpha || 1);\r\n        return chromaColor.css();\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class NumberInputWithUnit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    inputFilter = (value, oldValue) => {\r\n        let okay = false;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (!isNaN(value))\r\n                okay = true;\r\n        } catch {}\r\n        if (okay) {\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\" || isNaN(value)) {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (value.endsWith(\".\"))\r\n            value += \"0\";\r\n        value = this.inputFilter(value, this.getValue(this.props.value));\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    onShowUnits = (e) => {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    getValue = (value) => {\r\n        if (!value)\r\n            return \"\";\r\n\r\n        if (typeof value !== 'string')\r\n            return value;\r\n\r\n        if (value.includes(\"%\")) {\r\n            return Math.round(parseFloat(value.replace(\"%\", \"\")) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return Math.round(parseFloat(value.replace(\"px\", \"\")) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return Math.round(parseFloat(\r\n                value.replace(/[^0-9\\.]/g, '')\r\n            ) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return Math.round(parseFloat(\r\n                value.replace(/[^0-9\\.]/g, '')\r\n            ) * 10) / 10;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let classes = classNames(\r\n            \"NumberInputWithUnit\",\r\n            this.props.className\r\n        );\r\n\r\n        return (\r\n            <div className={classes}>\r\n                <input\r\n                    style={{...{\r\n                        textAlign: \"left\",\r\n                        width: 64\r\n                    }, ...this.props.inputStyle}}\r\n                    className=\"NumberInput\"\r\n                    value={![\"%\", \"px\", \"vw\", \"vh\", \"°\"].includes(this.props.unit) ? \"\" :\r\n                        (this.getValue(this.props.value) || 0)}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    disabled={![\"%\", \"px\", \"vw\", \"vh\", \"°\"].includes(this.props.unit) || this.props.disabled}\r\n                >\r\n                </input>\r\n\r\n                <IconButton\r\n                    ref={this.unitIconButton}\r\n                    className=\"InputUnitButton\"\r\n                    buttonBaseStyle={{\r\n                        marginLeft: 0,\r\n                    }}\r\n                    imageContainerStyle={{\r\n                        padding: 6\r\n                    }}\r\n                    onClick={!this.props.disabled ? this.onShowUnits : undefined}\r\n                    style={this.props.unitButtonStyle}\r\n                    disabled={this.props.disableUnit}\r\n                >\r\n                    <span style={{\r\n                        color: \"#0a108b\"\r\n                    }}>\r\n                        {this.props.unit || \"none\"}\r\n                    </span>\r\n                </IconButton>\r\n\r\n                <Menu\r\n                    style={{...{\r\n                            zIndex: 99999999999\r\n                        }, ...this.props.unitMenuStyle}}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.units.map((unit, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onUnitChange)\r\n                                            this.props.onUnitChange(unit);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                >\r\n                                    <span style={{\r\n                                        color: \"#0a108b\"\r\n                                    }}>\r\n                                        {unit}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n\r\n                {\r\n                    this.props.disabled &&\r\n                    <div\r\n                        className=\"NumberInputWithUnitDisabled\"\r\n                        style={{...{\r\n                                textAlign: \"left\",\r\n                                width: 64\r\n                            }, ...this.props.inputStyle}}\r\n                    >\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: props.defaultOpen || false\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ButtonBase className=\"InspectorOptionTitle\" onClick={(e) => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(!this.state.open);\r\n                this.setState({open: !this.state.open});\r\n            }}>\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n\r\n                    <div className=\"InspectorOptionTitleExpandIcon\">\r\n                        {\r\n                            this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={'/static/icon/down-arrow.svg'} />\r\n                        }\r\n                        {\r\n                            !this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={'/static/icon/right-arrow.svg'} />\r\n                        }\r\n                    </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue,\r\n    getViewRatioStyle,\r\n    setNewSize\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorSize extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let oldValue = item.getCompositeFromData(\"style\")[prop];\r\n        if ([\"%\", \"px\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n        } else if ([\"vh\", \"vw\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n            value = getViewRatioStyle(value);\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    onUnitChange = (prop, unit, parentValue, defaultValue) => {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n\r\n        if (isNaN(defaultValue))\r\n            defaultValue = 0;\r\n\r\n        let value;\r\n        if (unit === \"px\") {\r\n            value = `${item.getSize(false)[prop] ||\r\n            getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            parentValue * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n            value = getViewRatioStyle(value);\r\n        } else if (unit === \"vw\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n            value = getViewRatioStyle(value);\r\n        } else if (unit === \"none\") {\r\n            value = undefined;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value || value === \"unset\")\r\n            return \"none\";\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return \"px\";\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return \"vw\";\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return \"vh\";\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    runtimeValueToStyleValue = (propName, parentValue, value, style,) => {\r\n        let unit = this.getUnit(style[propName]);\r\n        let {item} = this.props;\r\n\r\n        if (unit === \"px\") {\r\n            value = `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${value /\r\n            parentValue * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${value / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n            value = `calc(${value} * var(--vh-ratio))`;\r\n        } else if (unit === \"vw\") {\r\n            value = `${value / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n            value = `calc(${value} * var(--vw-ratio))`;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n        let runtimeStyle = item.state.runtimeStyle;\r\n        let runtimeGridItemStyle = item.getRuntimeGridItemStyle() || {\r\n            widthForPercent: item.props.breakpointmanager.getWindowWidth(),\r\n            heightForPercent: item.props.breakpointmanager.getWindowHeight(),\r\n        };\r\n        return (\r\n            <>\r\n                <InspectorTitle defaultOpen title=\"Size\" onChange={(open)=>{\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorSizeRow\">\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Width\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('width')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"width\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.width}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"width\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        this.onUnitChange(\"width\", unit, parentRect.scrollWidthMinusPadding);\r\n                                    }}\r\n                                    units={this.props.widthUnits}\r\n                                    unit={this.getUnit(style.width)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Height\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('height')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"height\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.height}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"height\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        this.onUnitChange(\"height\", unit, parentRect.scrollHeightMinusPadding);\r\n                                    }}\r\n                                    units={this.props.heightUnits}\r\n                                    unit={this.getUnit(style.height)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"InspectorSizeRow\">\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min W\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('minWidth')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"minWidth\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.minWidth}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"minWidth\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 1;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let width = getPxValueFromCSSValue(style.width, parentRect.scrollWidthMinusPadding, item);\r\n                                        let maxWidth = getPxValueFromCSSValue(style.maxWidth, parentRect.scrollWidthMinusPadding, item);\r\n                                        if (isNaN(width) && !isNaN(maxWidth))\r\n                                            defaultValue = maxWidth;\r\n                                        else if (!isNaN(width) && isNaN(maxWidth))\r\n                                            defaultValue = width;\r\n                                        else if (!isNaN(width) && !isNaN(maxWidth))\r\n                                            defaultValue = Math.min(width, maxWidth);\r\n\r\n                                        this.onUnitChange(\"minWidth\", unit, parentRect.scrollWidthMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.minWidthUnits}\r\n                                    unit={this.getUnit(style.minWidth)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min H\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('minHeight')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"minHeight\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.minHeight}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"minHeight\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 1;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let height = getPxValueFromCSSValue(style.height, parentRect.scrollHeightMinusPadding, item);\r\n                                        let maxHeight = getPxValueFromCSSValue(style.maxHeight, parentRect.scrollHeightMinusPadding, item);\r\n                                        if (isNaN(height) && !isNaN(maxHeight))\r\n                                            defaultValue = maxHeight;\r\n                                        else if (!isNaN(height) && isNaN(maxHeight))\r\n                                            defaultValue = height;\r\n                                        else if (!isNaN(height) && !isNaN(maxHeight))\r\n                                            defaultValue = Math.min(height, maxHeight);\r\n\r\n                                        this.onUnitChange(\"minHeight\", unit, parentRect.scrollHeightMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.minHeightUnits}\r\n                                    unit={this.getUnit(style.minHeight)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"InspectorSizeRow\" style={{\r\n                            marginBottom: 0\r\n                        }}>\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max W\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('maxWidth')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"maxWidth\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.maxWidth}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"maxWidth\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 200;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let width = getPxValueFromCSSValue(style.width, parentRect.scrollWidthMinusPadding, item);\r\n                                        let minWidth = getPxValueFromCSSValue(style.minWidth, parentRect.scrollWidthMinusPadding, item);\r\n                                        if (isNaN(width) && !isNaN(minWidth))\r\n                                            defaultValue = minWidth;\r\n                                        else if (!isNaN(width) && isNaN(minWidth))\r\n                                            defaultValue = width;\r\n                                        else if (!isNaN(width) && !isNaN(minWidth))\r\n                                            defaultValue = Math.max(width, minWidth);\r\n\r\n                                        this.onUnitChange(\"maxWidth\", unit, parentRect.scrollWidthMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.maxWidthUnits}\r\n                                    unit={this.getUnit(style.maxWidth)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max H\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('maxHeight')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"maxHeight\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.maxHeight}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"maxHeight\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 200;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let height = getPxValueFromCSSValue(style.height, parentRect.scrollHeightMinusPadding, item);\r\n                                        let minHeight = getPxValueFromCSSValue(style.minHeight, parentRect.scrollHeightMinusPadding, item);\r\n                                        if (isNaN(height) && !isNaN(minHeight))\r\n                                            defaultValue = minHeight;\r\n                                        else if (!isNaN(height) && isNaN(minHeight))\r\n                                            defaultValue = height;\r\n                                        else if (!isNaN(height) && !isNaN(minHeight))\r\n                                            defaultValue = Math.max(height, minHeight);\r\n\r\n                                        this.onUnitChange(\"maxHeight\", unit, parentRect.scrollHeightMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.maxHeightUnits}\r\n                                    unit={this.getUnit(style.maxHeight)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspectorSize.defaultProps = {\r\n    disabledProps: []\r\n};\r\n","import Switch from \"@material-ui/core/Switch/Switch\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst DockSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 42,\r\n        height: 10,\r\n        padding: 4,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 0,\r\n        color: \"#d2d2d2\",\r\n        '&$checked': {\r\n            transform: 'translateX(28px) scale(1)',\r\n            color: \"#849dff\",\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: \"#849dff\",\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 10,\r\n        height: 10,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: \"#a2a2a2\",\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n\r\nexport default DockSwitch;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue,\r\n    getUnitFromStyleValue,\r\n    setGridItemStyle,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport DockSwitch from \"./DockSwitch\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorPosition extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onDockActiveChange = (side, value) => {\r\n        let {item} = this.props;\r\n        let oldDocks = cloneObject(item.getFromData(\"docks\") || {});\r\n\r\n        oldDocks[side] = value;\r\n        if (side === \"top\" && value) {\r\n            oldDocks.bottom = false;\r\n        }\r\n        if (side === \"bottom\" && value) {\r\n            oldDocks.top = false;\r\n        }\r\n\r\n        item.setDocks(oldDocks.top, oldDocks.left, oldDocks.bottom, oldDocks.right,\r\n            item.getFromTempData(\"autoDeck\"));\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n    };\r\n\r\n    onDockAutoChange = () => {\r\n        let {item} = this.props;\r\n        setTempData(\"autoDock\", !item.getFromTempData(\"autoDock\"), item, true);\r\n    };\r\n\r\n    onUnitChange = (prop, parentProp, unit) => {\r\n        let {item} = this.props;\r\n        let gridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let compositeGridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        if (!gridItemStyle)\r\n            gridItemStyle = {};\r\n\r\n        let parentRect = item.props.parent.getSize(false);\r\n        let value = getPxValueFromCSSValue(compositeGridItemStyle[prop], parentRect.scrollWidthMinusPadding, item);\r\n\r\n        if (unit === \"px\") {\r\n            gridItemStyle[prop] = `${value}${unit}`;\r\n        } else if (unit === \"%\") {\r\n            // let runtimeGridItemStyle = item.getRuntimeGridItemStyle();\r\n            gridItemStyle[prop] = `${value / parentRect.scrollWidthMinusPadding * 100}${unit}`;\r\n        }\r\n\r\n        setGridItemStyle(gridItemStyle, item, true);\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n    };\r\n\r\n    onValueChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let gridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let compositeGridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        if (!gridItemStyle)\r\n            gridItemStyle = {};\r\n        gridItemStyle[prop] = `${value}${getUnitFromStyleValue(compositeGridItemStyle[prop])}`;\r\n\r\n        setGridItemStyle(gridItemStyle, item, true);\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n        item.props.select.updateResizePanes(item, item.getSize(false));\r\n    };\r\n\r\n    runtimeValueToStyleValue = (propName, parentValue, value, style) => {\r\n        if (!style)\r\n            return;\r\n\r\n        let unit = getUnitFromStyleValue(style[propName]);\r\n        let {item} = this.props;\r\n\r\n        if (unit === \"px\") {\r\n            value = `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${value /\r\n            parentValue * 100}%`;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let docks = item.getCompositeFromData(\"docks\");\r\n        let auto = item.getFromTempData(\"autoDock\");\r\n        let gridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        let runtimeStyle = item.state.runtimeStyle;\r\n        let runtimeGridItemStyle = item.getRuntimeGridItemStyle();\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Position\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorDockingRoot\">\r\n                            <span className=\"InspectorDockingRootTitle\">\r\n                                Docking\r\n                            </span>\r\n\r\n                            <div className=\"InspectorDockingDocks\">\r\n                                <div className=\"InspectorDockingLeft\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch\"\r\n                                        checked={docks.left || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('left', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingRight\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch\"\r\n                                        checked={docks.right || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('right', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingTop\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch90\"\r\n                                        checked={docks.top || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('top', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingBottom\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch90\"\r\n                                        checked={docks.bottom || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('bottom', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    auto &&\r\n                                    <div className=\"InspectorDockingDisable\"/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"InspectorOverflowDir\">\r\n                        <span className=\"InspectorOverflowDirTitle\">\r\n                            Auto docking\r\n                        </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={auto || false}\r\n                                onChange={(e) => {\r\n                                    this.onDockAutoChange();\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"InspectorOverflowMarginRoot\">\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.top || auto}\r\n                                value={docks.top && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginTop : gridItemStyle.marginTop)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginTop\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginTop\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={\r\n                                    docks.top &&\r\n                                    getUnitFromStyleValue(\r\n                                        runtimeStyle && runtimeGridItemStyle ?\r\n                                            runtimeGridItemStyle.marginTop : gridItemStyle.marginTop)\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.left || auto}\r\n                                value={docks.left && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginLeft : gridItemStyle.marginLeft)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginLeft\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginLeft\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.left &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginLeft : gridItemStyle.marginLeft)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.bottom || auto}\r\n                                value={docks.bottom && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginBottom : gridItemStyle.marginBottom)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginBottom\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginBottom\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.bottom &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginBottom : gridItemStyle.marginBottom)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.right || auto}\r\n                                value={docks.right && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginRight : gridItemStyle.marginRight)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginRight\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginRight\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.right &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginRight : gridItemStyle.marginRight)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\n\r\nexport default class DropDown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    onChange = (option) => {\r\n        this.props.onChange(option);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"DropDownRoot\">\r\n                <span\r\n                    className=\"NumberInput\"\r\n                    style={{...this.props.spanStyle, ...{\r\n                        cursor: \"pointer\"\r\n                    }}}\r\n                    onClick={this.onClick}\r\n                >\r\n                    {this.props.value || \"\"}\r\n                </span>\r\n\r\n                <Menu\r\n                    style={{...{\r\n                            zIndex: 99999999999\r\n                        }, ...this.props.menuStyle}}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0,\r\n                            width: this.props.spanStyle? this.props.spanStyle.width: \"auto\"\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.options.map((option, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onChange)\r\n                                            this.props.onChange(option);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                >\r\n                                    <span>\r\n                                        {option}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n\r\n                <div\r\n                    className=\"DropDOwnArrow\"\r\n                >\r\n                    <img width={10} height={10} src=\"/static/icon/down-arrow.svg\"/>\r\n                </div>\r\n\r\n                {\r\n                    this.props.disabled &&\r\n                    <div\r\n                        className=\"DropDOwnDisabled\"\r\n                        style={this.props.spanStyle}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class NumberInput extends React.Component {\r\n    inputFilter = (value, oldValue) => {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = parseFloat(value).toFixed(0);\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = this.inputFilter(e.target.value, this.props.value);\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className=\"NumberInput\"\r\n                value={this.props.value || 0}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport {getValueFromCSSValue, setScrollBehaviour} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInput from \"../../Menus/CommonComponents/NumberInput\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorScroll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeScrollEffect = (option) => {\r\n        let {item} = this.props;\r\n        let offsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        setScrollBehaviour(item, option, item.props.viewRef.current, false, {offsetTop});\r\n    };\r\n\r\n    onChangeOffsetTop = (offsetTop) => {\r\n        offsetTop = `${offsetTop}px`;\r\n        let {item} = this.props;\r\n        let behaviour = item.getFromData(\"scrollBehaviour\");\r\n        setScrollBehaviour(item, behaviour, item.props.viewRef.current, false, {offsetTop});\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let behaviour = item.getFromData(\"scrollBehaviour\");\r\n        let offsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Scroll\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorScrollEffect\"\r\n                             style={{\r\n                                 marginBottom: behaviour === 'sticky' ? 12 : 0\r\n                             }}\r\n                        >\r\n                            <div className=\"InspectorScrollTitle\">\r\n                                Scroll effect\r\n                            </div>\r\n\r\n                            <DropDown\r\n                                options={this.props.options || ['none', 'fixed', 'sticky']}\r\n                                onChange={this.onChangeScrollEffect}\r\n                                value={behaviour || 'none'}\r\n                                spanStyle={{\r\n                                    width: 96,\r\n                                    fontSize: 12\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            behaviour === 'sticky' &&\r\n                            <div className=\"InspectorScrollEffect\">\r\n                                <div className=\"InspectorScrollTitle\">\r\n                                    Offset top\r\n                                </div>\r\n\r\n                                <NumberInput\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    value={getValueFromCSSValue(offsetTop)}\r\n                                    onChange={this.onChangeOffsetTop}\r\n                                    inputStyle={{\r\n                                        width: 96,\r\n                                        fontSize: 12,\r\n                                        textAlign: \"left\"\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue, getStyleValueFromPx,\r\n    getUnitFromStyleValue,\r\n    setDataInBreakpoint,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorPadding extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onUnitChange = (prop, parentProp, unit) => {\r\n        let {item} = this.props;\r\n        let padding = cloneObject(item.getFromData(\"padding\")) || {};\r\n        let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n\r\n        let parentRect = item.props.parent.getSize(false);\r\n        let value = getPxValueFromCSSValue(compositePadding[prop], parentRect.width, item);\r\n\r\n        if (unit === \"px\") {\r\n            padding[prop] = `${value}${unit}`;\r\n        } else if (unit === \"%\") {\r\n            padding[prop] = `${value / item.props.parent.getSize(false).width * 100}${unit}`;\r\n        }\r\n        else if (unit === \"vh\") {\r\n            padding[prop] = `${value / item.props.breakpointmanager.getWindowHeight() * 100}${unit}`;\r\n        }\r\n        else if (unit === \"vw\") {\r\n            padding[prop] = `${value / item.props.breakpointmanager.getWindowWidth() * 100}${unit}`;\r\n        }\r\n\r\n        setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n    };\r\n\r\n    onValueChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let equalPadding = item.getFromTempData(\"equalPadding\");\r\n        let padding = cloneObject(item.getFromData(\"padding\")) || {};\r\n        let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n        padding[prop] = `${value}${getUnitFromStyleValue(compositePadding[prop] || \"px\")}`;\r\n        if (equalPadding) {\r\n            let parentRect = item.props.parent? item.props.parent.getSize(false):\r\n                {\r\n                    scrollWidthMinusPadding: item.props.breakpointmanager.getWindowWidth()\r\n                };\r\n            let pxValue = getPxValueFromCSSValue(padding[prop], parentRect.scrollWidthMinusPadding, item);\r\n            padding = {\r\n                top: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.top || \"px\"), item)}`,\r\n                left: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.left || \"px\"), item)}`,\r\n                bottom: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.bottom || \"px\"), item)}`,\r\n                right: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.right || \"px\"), item)}`,\r\n            };\r\n        }\r\n\r\n        setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n\r\n        item.invalidateSize(true, true, true);\r\n\r\n        window.requestAnimationFrame(() => {\r\n            item.props.select.onScrollItem();\r\n        })\r\n    };\r\n\r\n    onEqualPadding = (equalPadding) => {\r\n        let {item} = this.props;\r\n\r\n        setTempData(\"equalPadding\", equalPadding, item, true);\r\n        if (equalPadding) {\r\n            let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n\r\n            let parentRect = item.props.parent? item.props.parent.getSize(false):\r\n                {\r\n                    scrollWidthMinusPadding: item.props.breakpointmanager.getWindowWidth()\r\n                };\r\n            let max = Math.max(\r\n                getPxValueFromCSSValue(compositePadding.top, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.left, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.bottom, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.right, parentRect.scrollWidthMinusPadding, item) || 0,\r\n            );\r\n\r\n            let padding = {\r\n                top: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.top || \"px\"), item)}`,\r\n                left: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.left || \"px\"), item)}`,\r\n                bottom: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.bottom || \"px\"), item)}`,\r\n                right: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.right || \"px\"), item)}`,\r\n            };\r\n\r\n            setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n\r\n            item.invalidateSize(true, true, true);\r\n        }\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let padding = item.getCompositeFromData(\"padding\") || {};\r\n        let equalPadding = item.getFromTempData(\"equalPadding\") || false;\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Padding\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorOverflowMarginRoot\">\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.top || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"top\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"top\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.top || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.left || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"left\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"left\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.left || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.bottom || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"bottom\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"bottom\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.bottom || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.right || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"right\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"right\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.right || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"InspectorAdjustRotate\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Equal padding\r\n                                </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={equalPadding}\r\n                                onChange={(e) => {\r\n                                    let checked = e.target.checked;\r\n                                    this.onEqualPadding(checked);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport {setDataInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorOverflow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeState = (e, value) => {\r\n        let {item} = this.props;\r\n        let thisBpOverflowData = item.getFromData(\"overflowData\");\r\n        let compositOverflowData = item.getCompositeFromData(\"overflowData\");\r\n        if (value === 'scroll' &&\r\n            (!compositOverflowData ||\r\n            ((!compositOverflowData.overflowY || compositOverflowData.overflowY === \"hidden\")&&\r\n            (!compositOverflowData.overflowX || compositOverflowData.overflowX === \"hidden\"))))\r\n        {\r\n            let newOverflowData = cloneObject(thisBpOverflowData || {});\r\n            newOverflowData.state = 'scroll';\r\n            newOverflowData.overflowY = 'scroll';\r\n            console.log(\"onChangeState\", JSON.stringify(newOverflowData));\r\n            setDataInBreakpoint(\"overflowData\", newOverflowData, item, true, undefined, true);\r\n            return;\r\n        }\r\n\r\n        setDataInBreakpoint(\"overflowData.state\", value, item, true, undefined, true);\r\n    };\r\n\r\n    changeScrollDirection = (propName, checked) => {\r\n        let {item} = this.props;\r\n        setDataInBreakpoint(`overflowData.${propName}`, checked? 'scroll': undefined\r\n            , item, true, undefined, true);\r\n    };\r\n\r\n    onChangeAuto = (e, value) => {\r\n        let {item} = this.props;\r\n        setDataInBreakpoint(\"overflowData.auto\", value, item, true, undefined, true);\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let overflowData = item.getCompositeFromData(\"overflowData\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Overflow content\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorAnchorNameTitle\">\r\n                            Overflow\r\n                        </div>\r\n                        <ToggleButtonGroup\r\n                            className=\"InspectorOverflowType\"\r\n                            size='small'\r\n                            value={overflowData.state}\r\n                            exclusive\r\n                            onChange={this.onChangeState}\r\n                        >\r\n                            <ToggleButton value=\"show\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                        style={{\r\n                                            padding: 3\r\n                                        }}\r\n                            >\r\n                                Show\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"hide\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                          style={{\r\n                                              padding: 3\r\n                                          }}\r\n                            >\r\n                                Hide\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"scroll\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                          style={{\r\n                                              padding: 3\r\n                                          }}\r\n                            >\r\n                                Scroll\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n\r\n                        {\r\n                            overflowData.state === 'scroll' &&\r\n                            <>\r\n                                <div className=\"InspectorOverflowDir\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scroll vertically\r\n                                </span>\r\n                                    <Switch\r\n                                        className=\"InspectorOverflowDirSwitch\"\r\n                                        checked={overflowData.overflowY === \"scroll\" || overflowData.overflowY === \"auto\"}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.changeScrollDirection('overflowY', checked);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorOverflowDir\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scroll horizontally\r\n                                </span>\r\n                                    <Switch\r\n                                        className=\"InspectorOverflowDirSwitch\"\r\n                                        checked={overflowData.overflowX === \"scroll\" || overflowData.overflowX === \"auto\"}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.changeScrollDirection('overflowX', checked);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorOverflowAuto\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scrollbar visibility\r\n                                </span>\r\n                                </div>\r\n                                <ToggleButtonGroup\r\n                                    className=\"InspectorOverflowAutoToggles\"\r\n                                    size='small'\r\n                                    value={overflowData.auto || \"always\"}\r\n                                    exclusive\r\n                                    onChange={this.onChangeAuto}\r\n                                >\r\n                                    <ToggleButton value=\"hide\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Hide\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"auto\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Auto\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"always\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Show\r\n                                    </ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class TextInput extends React.Component {\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (this.props.onChange)\r\n            this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                {...this.props}\r\n                className=\"NumberInput\"\r\n                value={this.props.value || \"\"}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport TextInput from \"../../Menus/CommonComponents/TextInput\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorAnchor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onEnableAnchor = (enable) => {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        if (enable) {\r\n            item.props.anchorMan.addAnchor(item.props.id.replace(\"comp_\", ''), item);\r\n        }\r\n        else {\r\n            item.props.anchorMan.removeAnchor(anchor.id, item);\r\n        }\r\n    };\r\n\r\n    onChangeName = (newName) => {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        item.props.anchorMan.modifyAnchor(anchor.id, newName, item);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Anchor\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n\r\n                        <div className=\"InspectorOverflowDir\">\r\n                        <span className=\"InspectorOverflowDirTitle\">\r\n                            Enable Anchor\r\n                        </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={anchor !== undefined}\r\n                                onChange={(e) => {\r\n                                    this.onEnableAnchor(e.target.checked);\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            anchor &&\r\n                            <div className=\"InspectorAnchorName\">\r\n                                <div className=\"InspectorAnchorNameTitle\">\r\n                                    Anchor name\r\n                                </div>\r\n                                <TextInput\r\n                                    value={anchor.name}\r\n                                    onChange={(v) => this.onChangeName(v)}\r\n                                    inputStyle={{\r\n                                        width: \"auto\",\r\n                                        textAlign: \"left\"\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {rotate} from \"../../AwesomwGridLayoutHelper\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\n\r\nexport default class InspectorAdjustment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onRotationChange = (degree) => {\r\n        console.warn(\"onRotationChange\", degree)\r\n        let {item} = this.props;\r\n\r\n        rotate(item, degree);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let rotate = item.getFromData(\"transform.rotateDegree\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Adjust\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorAdjustRotate\">\r\n                            <span className=\"InspectorOverflowDirTitle\">\r\n                                Rotate\r\n                            </span>\r\n                            <NumberInputWithUnit\r\n                                min={0}\r\n                                max={360}\r\n                                value={rotate || 0}\r\n                                onChange={(value) => {\r\n                                    this.onRotationChange(value);\r\n                                }}\r\n                                units={[\"°\"]}\r\n                                unit={\"°\"}\r\n                                inputStyle={{\r\n                                    width: 64,\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                                disableUnit\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {assignData, cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport {getCompositeDesignData, setDataInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorPosition from \"../../Test/Inspector/InspectorPosition\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport InspectorAdjustment from \"../../Test/Inspector/InspectorAdjustment\";\r\n\r\nexport default class AGLComponent extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    resolveDesignData = () => {\r\n        // Must Override\r\n    };\r\n\r\n    getData = () => {\r\n        let componentData = this.getDefaultData && this.getDefaultData();\r\n        let componentBpData = componentData.bpData;\r\n        componentData = assignData(componentData, cloneObject(this.props.data));\r\n        if (componentBpData) {\r\n            let tempBpData = componentData.bpData;\r\n            componentData.bpData = assignData(componentBpData, tempBpData);\r\n        }\r\n\r\n        return componentData;\r\n    };\r\n\r\n    getAgl = () => {\r\n        return this.props.aglRef.current;\r\n    };\r\n\r\n    onDesignChange = (designKey, value) => {\r\n        setDataInBreakpoint(designKey, value, this.getAgl(), true, undefined, true);\r\n        this.updateDesign(getCompositeDesignData(this.getAgl()));\r\n    };\r\n\r\n    getInspector = () => {\r\n        if (this.getInspectorOverride)\r\n            return this.getInspectorOverride();\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPosition\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAdjustment\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class MenuButton extends React.Component {\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    onClick = (e) => {\r\n        let {menu} = this.props;\r\n        this.props.select.updateMenu((typeof menu === \"function\") ? menu(e) : menu);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                {\r\n                    this.props.icon\r\n                }\r\n                {\r\n                    this.props.children\r\n                }\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport '../../HelperStyle.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class MenuBaseIndexTitle extends React.Component {\r\n    render () {\r\n        return (\r\n            <div\r\n                className=\"MenuBaseIndexTitle\"\r\n            >\r\n                <ButtonBase\r\n                    disableRipple={!this.props.onIndexClick}\r\n                    onClick={(e) => {\r\n                        this.props.onIndexClick &&\r\n                        this.props.onIndexClick(e, this.props.title, this.props.index)\r\n                    }}\r\n                >\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n                </ButtonBase>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst LightTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#fff\",\r\n        color: '#000000',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 14,\r\n    },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip\r\n\r\nexport const LightMenuTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#fff\",\r\n        color: '#000000',\r\n        boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n        fontSize: 14,\r\n        padding: 0\r\n    },\r\n}))(Tooltip);\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport Draggable from 'react-draggable';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport '../../HelperStyle.css';\r\nimport MenuBaseIndexTitle from \"./MenuBaseIndexTitle\";\r\nimport LightTooltip from \"../../Components/Containers/Menus/Components/LightTooltip\";\r\n\r\nexport default class MenuBase extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedIndexNo: props.defaultIndexNo\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        this.props.select.updateMenu();\r\n    };\r\n\r\n    onIndexClick = (e, key, selectedIndexNo) => {\r\n        this.setState({selectedIndexNo})\r\n    };\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Draggable\r\n                handle=\".MenuBaseHeaderTitle\"\r\n                bounds=\"parent\"\r\n                defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n            >\r\n                <div\r\n                    className=\"MenuBaseRoot\"\r\n                    style={this.props.styles.root}\r\n                >\r\n                    {/*Header*/}\r\n                    <div\r\n                        className=\"MenuBaseHeaderContainer\"\r\n                    >\r\n                        <span className=\"MenuBaseHeaderTitle\">\r\n                            {this.props.menuTitle || \"Menu Title\"}\r\n                        </span>\r\n\r\n                        <IconButton\r\n                            onClick={this.close}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={16}\r\n                                height={16}\r\n                                src={require('../../icons/close.svg')}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                    {/*Body*/}\r\n                    <div\r\n                        className=\"MenuBaseBodyContainer\"\r\n                    >\r\n                        <div className=\"MenuBaseBodyIndex\">\r\n                            {\r\n                                this.props.index.map((indexData, i) => {\r\n                                    return (\r\n                                        <LightTooltip\r\n                                            key={i}\r\n                                            title={indexData.key}\r\n                                            PopperProps={{\r\n                                                style: {\r\n                                                    zIndex: 999999999999999\r\n                                                }\r\n                                            }}\r\n                                            placement=\"right\"\r\n                                        >\r\n                                            <div\r\n                                                key={i}\r\n                                                style={{\r\n                                                    backgroundColor: this.state.selectedIndexNo === i &&\r\n                                                        'rgba(115, 115, 115, 0.36)'\r\n                                                }}\r\n                                            >\r\n                                                <IconButton\r\n                                                    key={indexData.key}\r\n                                                    onClick={(e) => {\r\n                                                        this.onIndexClick(e, indexData.key, i);\r\n                                                    }}\r\n                                                    buttonBaseStyle={{\r\n                                                        marginLeft: 0\r\n                                                    }}\r\n                                                >\r\n                                                    {indexData.icon}\r\n                                                </IconButton>\r\n                                            </div>\r\n                                        </LightTooltip>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"MenuBaseBodyOptions\">\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                <MenuBaseIndexTitle\r\n                                    index={this.state.selectedIndexNo}\r\n                                    key={this.props.options[this.state.selectedIndexNo].key}\r\n                                    title={this.props.options[this.state.selectedIndexNo].key}\r\n                                />\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                this.props.options[this.state.selectedIndexNo].render\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo === undefined &&\r\n                                this.props.options.map((option, i) => {\r\n                                    return (\r\n                                        <MenuBaseIndexTitle\r\n                                            index={i}\r\n                                            key={option.key}\r\n                                            title={option.key}\r\n                                            onIndexClick={this.onIndexClick}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nMenuBase.defaultProps = {\r\n    styles: {}\r\n};\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport RCSlider from 'rc-slider';\r\n\r\nexport default class Slider extends React.Component {\r\n    render () {\r\n        return (\r\n            <RCSlider\r\n                {...this.props}\r\n                min={this.props.min}\r\n                max={this.props.max}\r\n                step={this.props.step}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInputControlled extends React.Component {\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 24 }}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                    handleStyle={{\r\n                        marginLeft: 7\r\n                    }}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class Image extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            src: props.src,\r\n            hasError: false,\r\n        };\r\n    }\r\n\r\n    onError = (e) => {\r\n        if (!this.state.hasError) {\r\n            let {errorsrc} = this.props;\r\n            this.setState({\r\n                src: errorsrc,\r\n                hasError: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <img\r\n                {...this.props}\r\n                onError={this.onError}\r\n                src={this.state.src || this.props.errorsrc}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends React.Component {\r\n    componentWillUnmount() {\r\n        if (this.defaultNode) {\r\n            document.body.removeChild(this.defaultNode);\r\n        }\r\n        this.defaultNode = null;\r\n    }\r\n\r\n    canUseDOM = !!(\r\n        typeof window !== 'undefined' &&\r\n        window.document &&\r\n        window.document.createElement\r\n    );\r\n\r\n    render() {\r\n        if (!this.canUseDOM) {\r\n            return null;\r\n        }\r\n        let node = this.props.node;\r\n        if (this.props.disabled) {\r\n            return this.props.children;\r\n        }\r\n        if (this.props.nodeId) {\r\n            node = document && document.getElementById(this.props.nodeId);\r\n        }\r\n        if (!node && !this.defaultNode) {\r\n            this.defaultNode = document.createElement('div');\r\n            document.body.appendChild(this.defaultNode);\r\n        }\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            node || this.defaultNode\r\n        );\r\n    }\r\n}\r\n\r\nPortal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    node: PropTypes.any\r\n};\r\n\r\nexport default Portal;\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport './ThemeColorPicker.css';\r\n// import {SketchPicker} from \"react-color\";\r\nimport SketchPicker from \"react-color/lib/components/sketch/Sketch\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class HexColorPicker extends React.Component {\r\n    onChangeComplete = (color) => {\r\n        this.props.onChangeComplete(color.hex);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Portal node={document.body}>\r\n                <div style={ {\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                    zIndex: 999999999999\r\n                }} onClick={ this.props.onClose }/>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    left: \"50%\",\r\n                    top: \"50%\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                    zIndex: 999999999999\r\n                }}>\r\n                    <SketchPicker\r\n                        color={this.props.color}\r\n                        onChangeComplete={ this.onChangeComplete }\r\n                        disableAlpha={this.props.disableAlpha}\r\n                        width={this.props.width || 224}\r\n                    />\r\n                </div>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport './ThemeColorPicker.css';\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport Draggable from \"react-draggable\";\r\nimport Portal from \"../../Portal\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport chroma from \"chroma-js\";\r\nimport HexColorPicker from \"./HexColorPicker\";\r\nimport {parseColor} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nconst colorKeys = [\r\n    \"1\",\"2\",\"3\",\"4\",\"5\",\r\n];\r\n\r\nexport default class ThemeColorPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: props.color\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    onSelectColor = (color) => {\r\n        this.setState({color});\r\n        this.props.onChangeComplete && this.props.onChangeComplete(color);\r\n    };\r\n\r\n    onAddColor = (color) => {\r\n        let {editor} = this.props;\r\n        let siteData = editor.state.siteData;\r\n        if (!siteData.myColors.find(c => c === color))\r\n            siteData.myColors.unshift(color);\r\n\r\n        siteData.myColors = siteData.myColors.slice(0, 17);\r\n\r\n        this.onSelectColor(color);\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    onAddColorClick = () => {\r\n        this.setState({addColor: true});\r\n    };\r\n\r\n    render() {\r\n        let {editor} = this.props;\r\n        let siteData = editor.state.siteData;\r\n        let themeColorCategoryItems = siteData.theme.Colors.items;\r\n        return (\r\n            <Portal node={document.body}>\r\n                <div style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                    zIndex: 999999999999999\r\n                }}>\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        top: '0px',\r\n                        right: '0px',\r\n                        bottom: '0px',\r\n                        left: '0px',\r\n                    }} onClick={ (e) => this.props.onClose && this.props.onClose() }/>\r\n\r\n                    <Draggable\r\n                        handle=\".ThemeColorPickerHeaderTitle\"\r\n                        bounds=\"parent\"\r\n                        defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n                    >\r\n                        <div className=\"ThemeColorPickerRoot\"\r\n                             style={{\r\n                                 zIndex: 99999999999999999,\r\n                             }}>\r\n                            <div className=\"ThemeColorPickerHeaderRoot\">\r\n                                <div className=\"ThemeColorPickerHeaderTitle\">\r\n                                    Color Picker\r\n                                </div>\r\n\r\n                                <IconButton\r\n                                    onClick={(e) => this.props.onClose && this.props.onClose()}\r\n                                    className=\"ThemeColorPickerHeaderClose\"\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={require('../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                Site Colors\r\n                                <div className=\"ThemeColorPickerSiteColorEdit\">\r\n                                    Edit\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorGrid\">\r\n                                {\r\n                                    colorKeys.map(key => {\r\n                                        return (\r\n                                            Object.values(themeColorCategoryItems).map(item => {\r\n                                                console.log(\"this.state.color\", this.state.color, parseColor(this.state.color, undefined, editor))\r\n                                               return (\r\n                                                   <div\r\n                                                       key={item.name + key}\r\n                                                       className={`ThemeColorPickerSiteColorItem ${\r\n                                                           parseColor(this.state.color, undefined, editor) ===\r\n                                                           editor.themeManagerRef.current.getColor(item.name, key) ?\r\n                                                               \"ThemeColorPickerSiteColorItemSelected\": ''\r\n                                                           }`}\r\n                                                       style={{\r\n                                                           backgroundColor:\r\n                                                               editor.themeManagerRef.current.getColor(item.name, key)\r\n                                                       }}\r\n                                                       onClick={(e) => {\r\n                                                           this.onSelectColor(\r\n                                                               {\r\n                                                                   paletteName: item.name,\r\n                                                                   key: key\r\n                                                               }\r\n                                                           )\r\n                                                       }}\r\n                                                   >\r\n\r\n                                                   </div>\r\n                                               )\r\n                                            })\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                My Colors\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerMyColorGrid\">\r\n                                <div className=\"ThemeColorPickerMyColorItemAdd\" onClick={this.onAddColorClick}>\r\n                                    <Image\r\n                                        width={10}\r\n                                        height={10}\r\n                                        src={'static/icon/add.svg'}\r\n                                    />\r\n                                </div>\r\n\r\n                                {\r\n                                    Object.values(siteData.myColors).map(color => {\r\n                                        return (\r\n                                            <div className={`ThemeColorPickerMyColorItem ${\r\n                                                    this.state.color === color ?\r\n                                                        \"ThemeColorPickerMyColorItemSelected\": ''\r\n                                                    }`}\r\n                                                 key={color}\r\n                                                 style={{\r\n                                                backgroundColor: color\r\n                                            }}\r\n                                                 onClick={(e) => {\r\n                                                     this.onSelectColor(\r\n                                                         color\r\n                                                     )\r\n                                                 }}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                <div className=\"ThemeColorPickerSiteColorHexTitle\">\r\n                                    <div className=\"ThemeColorPickerSiteColorHexAddColor\" onClick={this.onAddColorClick}>\r\n                                        Add Color\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"ThemeColorPickerSiteColorHex\">\r\n                                    {chroma(parseColor(this.state.color, 1, editor)).hex()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Draggable>\r\n\r\n                    {/*{\r\n                        this.state.addColor &&\r\n                        <>\r\n                            <div style={ {\r\n                                position: 'fixed',\r\n                                top: '0px',\r\n                                right: '0px',\r\n                                bottom: '0px',\r\n                                left: '0px',\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.2)'\r\n                            }} onClick={ () => this.setState({addColor: undefined}) }/>\r\n                            <div style={{\r\n                                position: 'absolute',\r\n                                left: \"50%\",\r\n                                top: \"50%\",\r\n                                transform: \"translate(-50%, -50%)\",\r\n                                zIndex: '2',\r\n                            }}>\r\n                                <SketchPicker\r\n                                    color={this.state.color}\r\n                                    onChangeComplete={ this.onAddColor }\r\n                                    disableAlpha={this.props.disableAlpha}\r\n                                    width={224}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    }*/}\r\n                    {\r\n                        this.state.addColor &&\r\n                        <HexColorPicker\r\n                            onClose={() => this.setState({addColor: undefined})}\r\n                            color={this.state.color}\r\n                            onChangeComplete={ this.onAddColor }\r\n                            disableAlpha={this.props.disableAlpha}\r\n                            width={224}\r\n                        />\r\n                    }\r\n                </div>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport SliderInputControlled from \"./SliderInputControlled\";\r\nimport ThemeColorPicker from \"../../Test/Theme/ThemeColorPicker\";\r\nimport chroma from \"chroma-js\";\r\nimport {parseColor} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class ColorPicker extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    getRgbA = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if (value instanceof Object) {\r\n            value = this.props.editor.themeManagerRef.current.getColor(value.paletteName, value.key);\r\n        }\r\n\r\n        let color = chroma(value);\r\n        return {\r\n            r: color.rgba()[0],\r\n            g: color.rgba()[1],\r\n            b: color.rgba()[2],\r\n            a: color.rgba()[3]\r\n        }\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        if (this.state.displayColorPicker)\r\n            this.setState({ displayColorPicker: false });\r\n        else\r\n            this.setState({ displayColorPicker: e.target })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        if (color instanceof Object) {\r\n            console.log(\"handlehangeComplete1\", color);\r\n            this.lastValue = color;\r\n            color.alpha = chroma(parseColor(color, undefined, this.props.editor)).alpha();\r\n            this.props.onDesignChange(this.props.designKey, color);\r\n            return;\r\n        }\r\n\r\n        let alpha = this.getColorAndAlpha().alpha || 100;\r\n\r\n        let value = this.lastValue = chroma(color).alpha(alpha / 100).css();\r\n\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n    };\r\n\r\n    getColorAndAlpha = () => {\r\n        return {\r\n            color: chroma(parseColor(this.props.color, 1, this.props.editor)).alpha(0).hex(),\r\n            alpha: chroma(parseColor(this.props.color, this.props.color && this.props.color.alpha, this.props.editor)).alpha() * 100\r\n        };\r\n    };\r\n\r\n    handleAlphaChange = (alpha) => {\r\n        if (this.lastValue instanceof Object) {\r\n            this.lastValue.alpha = alpha / 100;\r\n        } else {\r\n            this.lastValue = chroma(this.lastValue).alpha(alpha / 100).css();\r\n        }\r\n        this.props.onDesignChange(this.props.designKey, this.lastValue);\r\n    };\r\n\r\n    render () {\r\n        let {color, alpha} = this.getColorAndAlpha();\r\n        return (\r\n                <div className=\"CommonMenuRoot ColorPickerRoot\">\r\n                    <ButtonBase\r\n                        style={{\r\n                            background: `url('/static/icon/transparency.png')`,\r\n                        }}\r\n                        className=\"ColorPickerRGB\"\r\n                        onClick={ this.handleClick }\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                background: parseColor(this.props.color, alpha/100, this.props.editor),\r\n                            }}\r\n                        />\r\n                    </ButtonBase>\r\n\r\n                    <div\r\n                        className=\"ColorPickerAlpha\"\r\n                    >\r\n                        <SliderInputControlled\r\n                            min={0}\r\n                            max={100}\r\n                            value={alpha || 0}\r\n                            onChange={this.handleAlphaChange}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.displayColorPicker &&\r\n                            <ThemeColorPicker\r\n                                color={color}\r\n                                onClose={this.handleClose}\r\n                                onChangeComplete={ this.handleChangeComplete }\r\n                                disableAlpha\r\n                                editor={this.props.editor}\r\n                                defaultPosition={\r\n                                    this.state.displayColorPicker.getBoundingClientRect()\r\n                                }\r\n                            />\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nexport default class Background extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Background</p>\r\n\r\n                <ColorPicker\r\n                    color={this.props.color}\r\n                    designKey={this.props.designKey}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.editor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class Divider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"Divider\" style={this.props.style}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 24 }}\r\n                    step={this.props.step}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value || 0}\r\n                    onChange={this.onChange}\r\n                    handleStyle={{\r\n                        marginLeft: 7\r\n                    }}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value || 0}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\nimport 'rc-slider/assets/index.css';\r\nimport '../style.css';\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\n\r\nexport default class Border extends React.Component {\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.border.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Width (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={15}\r\n                            value={this.props.border.width}\r\n                            designKey={`${this.props.designKey}.width`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport NumberInput from \"../../../../Menus/CommonComponents/NumberInput\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\nimport {cloneObject} from \"../../../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class Corners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            radius: cloneObject(props.radius),\r\n            link: true\r\n        }\r\n    }\r\n\r\n    onChange = (value, side) => {\r\n        let radius = this.state.radius;\r\n        let changeSide = [side];\r\n        if (this.state.link)\r\n            changeSide = [\"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"];\r\n        changeSide.forEach(_side => {\r\n            radius[_side] = value;\r\n            this.props.onDesignChange(`${this.props.designKey}.${_side}`, value);\r\n        });\r\n        this.setState({radius});\r\n    };\r\n\r\n    onLinkClick = () => {\r\n        this.setState({link: !this.state.link});\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Radius (px)</p>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"topLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"topRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{position: \"relative\"}}>\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowTopLeft\"\r\n                             style={{\r\n                                 borderTopLeftRadius: this.state.radius[\"topLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowTopRight\"\r\n                             style={{\r\n                                 borderTopRightRadius: this.state.radius[\"topRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowBottomLeft\"\r\n                             style={{\r\n                                 borderBottomLeftRadius: this.state.radius[\"bottomLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowBottomRight\"\r\n                             style={{\r\n                                 borderBottomRightRadius: this.state.radius[\"bottomRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersLink\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginLeft: 0\r\n                            }}\r\n                            onClick={this.onLinkClick}\r\n                        >\r\n                            {\r\n                                this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../../icons/chain.svg')} />\r\n                            }\r\n                            {\r\n                                !this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../../icons/unlink.svg')} />\r\n                            }\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class CircularSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.rect = this.rootDivRef.current.getBoundingClientRect();\r\n        window.addEventListener(\"pointermove\", this.onMouseMove);\r\n        window.addEventListener(\"pointerup\", this.onMouseUp);\r\n\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                className={`CircularSliderRoot ${this.props.className}`}\r\n                style={{\r\n                    transform: `rotate(${this.props.value}deg)`\r\n                }}\r\n                onMouseDown={this.onMouseDown}\r\n                ref={this.rootDivRef}\r\n            >\r\n                <div\r\n                    className=\"CircularSliderBg\"\r\n                    style={{\r\n                        width: this.props.width || 90,\r\n                        height: this.props.width || 90\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"CircularSliderLine\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderCenter\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderKnob\"\r\n                    />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport CircularSlider from \"./CircularSlider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class Angle extends React.Component {\r\n    onChange = (value) => {\r\n        if (this.props.loop && value === 360)\r\n            value = 0;\r\n\r\n        this.props.onChange(value.toFixed(0));\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"AngleRoot\">\r\n                <CircularSlider\r\n                    {...this.props}\r\n                    className=\"AngleSlider\"\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                    min={0}\r\n                    max={360}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"AngleInput\"\r\n                    min={0}\r\n                    max={360}\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport '../style.css';\r\nimport Angle from \"../../../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nconst deg2rad = Math.PI/180;\r\nconst rad2deg = 180/Math.PI;\r\nexport default class Shadow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange = (key, value) => {\r\n        let shadow = this.props.shadow;\r\n        shadow[key] = value;\r\n        this.setState({shadow});\r\n        this.props.onDesignChange(`${this.props.designKey}.${key}`, value);\r\n    };\r\n\r\n    getDegree = (xOffset, yOffset) => {\r\n        if (xOffset === undefined) xOffset = -1;\r\n        if (yOffset === undefined) yOffset = 1;\r\n        let ratio = (xOffset) / (yOffset);\r\n        let degree;\r\n        if (xOffset < 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg;\r\n        if (xOffset < 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 360;\r\n\r\n        return Math.round(degree);\r\n    };\r\n\r\n    getRatio = (degree) => {\r\n        return Math.tan( degree * deg2rad );\r\n    };\r\n\r\n    calcDegree = (degree) => {\r\n        let ratio = this.getRatio(degree);\r\n        let xO, yO;\r\n        if (ratio === 0) {\r\n            xO = 0;\r\n            yO = 1;\r\n        } else if (ratio === Infinity) {\r\n            xO = 1;\r\n            yO = 0;\r\n        } else {\r\n            xO = ratio;\r\n            yO = 1;\r\n            if (Math.abs(ratio) > 1) {\r\n                xO /= Math.abs(ratio);\r\n                yO /= Math.abs(ratio);\r\n            }\r\n        }\r\n        this.onChange(\"xOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? -xO : xO);\r\n        this.onChange(\"yOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? yO : -yO);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                    <div className=\"ShadowRoot\">\r\n                        <Angle\r\n                            className=\"ShadowAngle\"\r\n                            angle={this.getDegree(this.props.shadow.xOffset , this.props.shadow.yOffset)}\r\n                            onChange={this.calcDegree}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Distance (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.distance}\r\n                            designKey={`${this.props.designKey}.distance`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Size (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.size}\r\n                            designKey={`${this.props.designKey}.size`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Blur (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.blur}\r\n                            designKey={`${this.props.designKey}.blur`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.shadow.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Components/Background\";\r\nimport Border from \"./Components/Border\";\r\nimport Corners from \"./Components/Corners\";\r\nimport Shadow from \"./Components/Shadow\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class BorderDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/water.svg'} />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/border.svg'} />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/corner.svg'} />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                icon: <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" className=\"symbol symbol-shadowDesign\">\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M11.5 14.5h-8v-2h8c.55 0 1-.45 1-1v-9h2v9c0 1.65-1.35 3-3 3zm-3-4h-7c-1.1 0-2-.9-2-2v-7c0-1.1.9-2 2-2h7c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2z\"/>\r\n                </svg>\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                render: <Border\r\n                    border={design.border}\r\n                    designKey={\"design.border\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                render: <Corners\r\n                    radius={design.border.radius}\r\n                    designKey={\"design.border.radius\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                render: <Shadow\r\n                    shadow={design.border.shadow}\r\n                    designKey={\"design.border.shadow\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport classNames from \"classnames\";\r\n\r\nexport default class GridViewer extends React.Component {\r\n    render () {\r\n        let classes = classNames(\r\n            \"GridViewerRoot\",\r\n            this.props.className\r\n        );\r\n        return (\r\n            <div className={classes}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport GridViewer from \"../../../../Menus/CommonComponents/GridViewer\";\r\nimport classNames from \"classnames\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class AnimationSelector extends React.Component {\r\n    onSelectAnimation = (name) => {\r\n        this.props.onDesignChange(this.props.designKey, name);\r\n        window.requestAnimationFrame(() => {\r\n            this.props.item.playAnimation();\r\n        });\r\n    };\r\n\r\n    render () {\r\n        let {allAnimationNames, animation} = this.props;\r\n        let noneClasses = classNames(\r\n            \"MenuOptionAnimationItem\",\r\n            (!animation || !animation.name) && \"MenuOptionAnimationItemSelected\"\r\n        );\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n\r\n                <GridViewer>\r\n                    <ButtonBase\r\n                        className={noneClasses}\r\n                        key='none'\r\n                        onClick={(e) => this.onSelectAnimation()}\r\n                    >\r\n                        <img\r\n                            className=\"MenuOptionAnimationItemImage\"\r\n                            draggable={false} width={48} height={48}\r\n                            // src={`/static/icons/animation/${name}.svg`} />\r\n                            src={`/static/icon/animation-black.svg`}\r\n                        />\r\n                        <span>\r\n                            none\r\n                        </span>\r\n                    </ButtonBase>\r\n                    {\r\n                        allAnimationNames.map(name => {\r\n                            let classes = classNames(\r\n                                \"MenuOptionAnimationItem\",\r\n                                animation && name === animation.name && \"MenuOptionAnimationItemSelected\"\r\n                            );\r\n                            let displayName = name.split(/(?=[A-Z])/).join(' ');\r\n                            displayName = displayName.charAt(0).toUpperCase() + displayName.slice(1);\r\n                            return (\r\n                                <ButtonBase\r\n                                    className={classes}\r\n                                    key={name}\r\n                                    onClick={(e) => this.onSelectAnimation(name)}\r\n                                >\r\n                                    <img\r\n                                        className=\"MenuOptionAnimationItemImage\"\r\n                                        draggable={false} width={48} height={48}\r\n                                        // src={`/static/icons/animation/${name}.svg`} />\r\n                                        src={`/static/icon/animation-black.svg`}\r\n                                    />\r\n                                    <span className=\"MenuOptionAnimationItemTitle\">\r\n                                        {displayName}\r\n                                    </span>\r\n                                </ButtonBase>\r\n                            )\r\n                        })\r\n                    }\r\n                </GridViewer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {DynamicAnimations} from \"../../../../Dynamic/DynamicComponents\";\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\n\r\nexport default class AnimationOptions extends React.Component {\r\n\r\n    render () {\r\n        let {animation, onDesignChange, designKey, item} = this.props;\r\n        if (!animation || !animation.name) {\r\n            return <div className=\"MenuOptionSectionTitle\" style={{\r\n                textAlign: \"center\"\r\n            }}>\r\n                Select an Animation to See Options\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection MenuOptionGrid2\">\r\n                    <span className=\"MenuOptionSectionTitleNoMargin\">Play animation</span>\r\n\r\n                    <IconButton onClick={(e) => {\r\n                                    item.playAnimation();\r\n                                }}\r\n                                imageContainerStyle={{\r\n                                    padding: 0\r\n                                }}\r\n                                buttonBaseStyle={{\r\n                                    borderRadius: 999\r\n                                }}\r\n                    >\r\n                        <img draggable={false} width={24} height={24}\r\n                                   src={'/static/icon/play-button.svg'}\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                {\r\n                    animation.name &&\r\n                        DynamicAnimations[animation.name].getOptions(this.props)\r\n                }\r\n\r\n                {\r\n                    animation.name && DynamicAnimations[animation.name].getOptions(this.props) &&\r\n                    <Divider/>\r\n                }\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Duration</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={5}\r\n                            step={0.1}\r\n                            value={animation.options? animation.options.duration !== undefined?\r\n                                animation.options.duration: 1 : 1}\r\n                            designKey={`${designKey}.duration`}\r\n                            onDesignChange={onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Delay</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={10}\r\n                            step={0.1}\r\n                            value={animation.options? animation.options.delay !== undefined?\r\n                                animation.options.delay: 0 : 0}\r\n                            designKey={`${designKey}.delay`}\r\n                            onDesignChange={onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionAnimationOnceRoot\">\r\n                    <p className=\"MenuOptionSectionTitle\">Only animate first time</p>\r\n                    <Switch\r\n                        className=\"InspectorOverflowDirSwitch\"\r\n                        checked={animation.options && animation.options.once ? animation.options.once : false}\r\n                        onChange={(e) => {\r\n                            onDesignChange(`${designKey}.once`, e.target.checked);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\nimport AnimationSelector from \"./Components/AnimationSelector\";\r\nimport AnimationOptions from \"./Components/AnimationOptions\";\r\n\r\nexport default class AnimationDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Animation Type\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/animation-black.svg'} />\r\n            },\r\n            {\r\n                key: \"Animation Options\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/time.svg'} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Animation Type\",\r\n                render: <AnimationSelector\r\n                    animation={design.animation}\r\n                    designKey={\"design.animation.name\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    allAnimationNames={[\r\n                        'fadeIn',\r\n                        'bounceIn',\r\n                        'glideIn',\r\n                        'floatIn',\r\n                        'expandIn',\r\n                        'spinIn',\r\n                        'flyIn',\r\n                        'turnIn',\r\n                        'arcIn',\r\n                        'puffIn',\r\n                        'foldIn',\r\n                        'flipIn',\r\n                        'reveal',\r\n                    ]}\r\n                    item={this.props.item}\r\n                />\r\n            },\r\n            {\r\n                key: \"Animation Options\",\r\n                render: <AnimationOptions\r\n                    animation={design.animation}\r\n                    designKey={\"design.animation.options\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    item={this.props.item}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n                defaultIndexNo={0}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport BorderDesign from \"./Menus/BorderDesign\";\r\nimport '../../HelperStyle.css';\r\nimport './ContainerBase.css';\r\nimport {getCompositeDesignData, parseColor, resolveDesignData} from \"../../AwesomwGridLayoutHelper\";\r\nimport AnimationDesign from \"./Menus/AnimationDesign\";\r\n\r\nexport default class ContainerBase extends AGLComponent{\r\n    resolveDesignData = () => {\r\n        resolveDesignData(this, \"border\", {shadow: {\r\n                xOffset: -1,\r\n                yOffset: 1,\r\n                distance: 1,\r\n                size: 0,\r\n                blur: 4\r\n        }, radius: {}});\r\n    };\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <BorderDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />,\r\n            <MenuButton\r\n                key={2}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={'static/icon/animation.svg'} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <AnimationDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n    };\r\n\r\n    getStaticChildren = () => {\r\n        this.resolveDesignData();\r\n\r\n        let border = getCompositeDesignData(this).border;\r\n        let fillColor = getCompositeDesignData(this).fillColor;\r\n        if (fillColor)\r\n            fillColor = parseColor(fillColor, fillColor.alpha, this.props.editor);\r\n\r\n        border.radius = border.radius || {};\r\n        border.shadow = border.shadow || {};\r\n\r\n        let shadowColor = border.shadow.color;\r\n        if (shadowColor)\r\n            shadowColor = parseColor(shadowColor, shadowColor.alpha, this.props.editor);\r\n        let borderColor = border.color;\r\n        if (borderColor)\r\n            borderColor = parseColor(borderColor, borderColor.alpha, this.props.editor);\r\n\r\n        return <div\r\n            className=\"ContainerBaseBorderRoot\"\r\n            style={{\r\n                border:\r\n                    `${border.width || 0}px solid ${borderColor || 'rgba(186,218,85,0.63)'}`,\r\n                backgroundColor: fillColor,\r\n                borderRadius:\r\n                    `${border.radius.topLeft || 0}px ${border.radius.topRight || 0}px ${border.radius.bottomRight || 0}px ${border.radius.bottomLeft || 0}px`,\r\n                boxShadow: `${(border.shadow.xOffset) * (border.shadow.distance)}px ${(border.shadow.yOffset) * (border.shadow.distance)}px ${border.shadow.blur}px ${border.shadow.size}px ${shadowColor || 'rgba(186,218,85,0.63)'}`\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"ContainerBase\"\r\n                aglComponent={this}\r\n                {...this.props}\r\n                data={this.getData()}\r\n                getPrimaryOptions={this.getPrimaryOptions}\r\n                getInspector={this.getInspector}\r\n                getStaticChildren={this.getStaticChildren}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nContainerBase.defaultProps = {\r\n    tagName: \"ContainerBase\"\r\n};\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Components/Background\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class SectionDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={'/static/icon/water.svg'} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle={this.props.menuTitle || \"Box Design\"}\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class Header extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Header Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        setStyleParam(\"backgroundColor\", compositeDesign.fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={[\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Header\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"1/1/2/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{\r\n                            // backgroundColor: \"#bcbcbc\",\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"150px\",\r\n                            zIndex: \"50\"\r\n                        }}\r\n                        as=\"header\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.defaultProps = {\r\n    tagName: \"Header\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class Footer extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Footer Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        setStyleParam(\"backgroundColor\", compositeDesign.fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={[\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Footer\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"3/1/4/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"100px\",\r\n                            zIndex: \"51\"\r\n                        }}\r\n                        as=\"footer\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nFooter.defaultProps = {\r\n    tagName: \"Footer\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport {setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\n\r\nexport default class Section extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Section Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        setStyleParam(\"backgroundColor\", compositeDesign.fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={!this.props.isVerticalSection ? [\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ] : [\r\n                        'height', 'minHeight', 'maxHeight'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Section\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"2/1/3/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{...{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"500px\",\r\n                        }, ...this.props.style}}\r\n                        designStyle={{...{\r\n                                // backgroundColor: \"#b3faf5\",\r\n                        }, ...this.props.designStyle}}\r\n                        data={this.getData()}\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        as={\"section\"}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nSection.defaultProps = {\r\n    tagName: \"Section\"\r\n};\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport ColorPicker from \"../../Menus/CommonComponents/ColorPicker\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorBackground extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { open: true};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeColor = (key, value) => {\r\n        let {item} = this.props;\r\n        setStyleParam(\"backgroundColor\", value,\r\n            item, true, undefined, true);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let style = item.getFromData(\"style\") || {};\r\n        return (\r\n            <>\r\n                <InspectorTitle defaultOpen title=\"Background\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <span className=\"InspectorBackgroundColorTitle\">\r\n                            Color\r\n                        </span>\r\n                        <ColorPicker\r\n                            color={style.backgroundColor || 'rgba(0, 0, 0, 0)'}\r\n                            onDesignChange={this.onChangeColor}\r\n                            editor={this.props.item.props.editor}\r\n                        />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport Section from \"../Containers/Section\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {initGriddata, swapArrayElements} from \"../../AwesomeGridLayoutUtils\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorBackground from \"../../Test/Inspector/InspectorBackground\";\r\nimport './PageBase.css';\r\nimport {isHideInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nconst mainColTemplate = \"minmax(0px,1fr)\";\r\n\r\nexport default class PageBase extends AGLComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.gridTemplateRows = \"auto\";\r\n        this.gridTemplateColumns = mainColTemplate;\r\n        this.gridX = 0;\r\n        this.gridY = 1;\r\n\r\n        this.allSectionsH = [];\r\n        this.allSectionsV = [null];\r\n\r\n        this.root = React.createRef();\r\n\r\n        this.initKeyboard();\r\n\r\n        this.initDataFromPageData(props);\r\n    }\r\n\r\n    initDataFromPageData = (props) => {\r\n        if (!props.griddata.initialized)\r\n            initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (!props.griddata.allSectionsH)\r\n            props.griddata.allSectionsH = [];\r\n        if (!props.griddata.allSectionsV)\r\n            props.griddata.allSectionsV = [null];\r\n\r\n        this.allSectionsH = props.griddata.allSectionsH;\r\n        this.allSectionsV = props.griddata.allSectionsV;\r\n        let grid = this.props.breakpointmanager.getFromData(props.griddata, \"grid\");\r\n        if (grid) {\r\n            this.gridX = grid.x;\r\n            this.gridY = grid.y;\r\n            this.gridTemplateRows = grid.gridTemplateRows;\r\n            this.gridTemplateColumns = grid.gridTemplateColumns;\r\n        }\r\n    };\r\n\r\n    initKeyboard = () => {\r\n        window.addEventListener(\"keydown\", (e) => {\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if (key === 38 && ctrl) {\r\n                e.preventDefault();\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveUp(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 40 && ctrl) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Down\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveDown(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 37 && ctrl) {\r\n                e.preventDefault();\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveLeft(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 39 && ctrl) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Right\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveRight(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        // TODO remove tests\r\n        // this.addSectionQueue(0, \"Header\", DynamicComponents, undefined, false);\r\n        // this.addSectionQueue(1, \"Section\", DynamicComponents, undefined, false);\r\n        // this.addSectionQueue(2, \"Footer\", DynamicComponents, undefined, false);\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            draggable: false,\r\n            resizable: true,\r\n            pageResize: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"scroll\",\r\n                    overflowY: \"scroll\",\r\n                    auto: true\r\n                },\r\n                grid: {\r\n                    x: this.gridX,\r\n                    y: this.gridY,\r\n                    gridTemplateRows: this.gridTemplateRows,\r\n                    gridTemplateColumns: this.gridTemplateColumns\r\n                },\r\n                containerHeight: \"max-content\",\r\n            }\r\n        };\r\n    };\r\n\r\n    getHorizontalSection = (id) => {\r\n        return this.props.idMan.getItem(this.allSectionsH.find(h => {\r\n            return h === id;\r\n        }));\r\n    };\r\n\r\n    deleteHorizontalSection = (id) => {\r\n        let index = this.allSectionsH.findIndex(h => {\r\n            return h === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        if (this.allSectionsH.length === 1)\r\n            return false;\r\n\r\n        this.gridX--;\r\n\r\n        let currentSection = this.allSectionsH[index];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (firstRow >= x12 && lastRow <= x22) {\r\n                x22--;\r\n            } else if (lastRow <= x12) {\r\n                x22--;\r\n                x12--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (lastRow <= x13) {\r\n                x13--;\r\n                x23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        index >= 0 && this.allSectionsH.splice(index, 1);\r\n\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n        return true;\r\n    };\r\n\r\n    getVerticalSection = (id) => {\r\n        return this.props.idMan.getItem(this.allSectionsV.find(h => {\r\n            if (h === null)\r\n                return false;\r\n\r\n            return h === id;\r\n        })) || null;\r\n    };\r\n\r\n    deleteVerticalSection = (id) => {\r\n        let index = this.allSectionsV.findIndex(h => {\r\n            if (h === null)\r\n                return false;\r\n            return h === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        this.gridY--;\r\n\r\n        let currentSection = this.allSectionsV[index];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n        let firstCol = y1;\r\n        let lastCol = y2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (y12 >= firstCol) {\r\n                y12--;\r\n                y22--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (y13 >= lastCol) {\r\n                // fully right\r\n                y13--;\r\n                y23--;\r\n            } else if (y23 >= lastRow) {\r\n                // partially right\r\n                y23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.allSectionsV.splice(index, 1);\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n        return true;\r\n    };\r\n\r\n    addSectionQueue = (index, tagName, dynamicComponents, as, isVertical, callback) => {\r\n        if (!this.addQueue)\r\n            this.addQueue = [];\r\n\r\n        this.addQueue.push({\r\n            index, tagName, dynamicComponents, as, isVertical, callback\r\n        });\r\n\r\n        if (!this.checkingAddQueue) {\r\n            let nextOne = this.addQueue.shift();\r\n            this.checkAddQueue(nextOne);\r\n        }\r\n    };\r\n\r\n    checkAddQueue = (nextOne) => {\r\n        this.checkingAddQueue = true;\r\n        if (!nextOne.isVertical) {\r\n            this.addHorizontalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        } else {\r\n            this.addVerticalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        }\r\n    };\r\n\r\n    onItemPreDelete = (item) => {\r\n        let allow = this.deleteHorizontalSection(item.props.id);\r\n        if (!allow)\r\n            allow = this.deleteVerticalSection(item.props.id);\r\n\r\n        return allow;\r\n    };\r\n\r\n    // Just for vertical items\r\n    onItemPreResizeStop = (item, e, dir, delta, runtimeStyle) => {\r\n        console.log(\"small from top0\", this.allSectionsH, this.allSectionsV)\r\n        if (dir === 'e' || dir === 'w')\r\n            return;\r\n\r\n        let gridArea = item.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        this.root.current.prepareRects(false, true);\r\n        let yLineRefs = this.props.gridLine.getYlineRef(this.root.current.props.id);\r\n        let firstLineTop =\r\n            this.root.current.getGridLineRect(yLineRefs[0], 0, 'y', this.root.current).top;\r\n\r\n        console.log(\"small from top1\", this.allSectionsH, this.allSectionsV)\r\n        if (dir === 'n') {\r\n            if (delta.y > 0) { // small from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                console.log(\"small from top\", this.allSectionsH, this.allSectionsV)\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x1 && x12 < selectedX1) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n            else { // big from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x22 <= x1 && x12 >= selectedX1) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n        }\r\n        else { // dir === 's'\r\n            if (delta.y > 0) { // big from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x2 && x12 < selectedX2) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n            else { // small from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 < x2 && x12 >= selectedX2) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = -1;\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n        }\r\n\r\n        item.setGridArea(\r\n            `${x1}/${y1}/${x2}/${y2}`\r\n            , this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    addHorizontalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridX++;\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length + 1).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        let currentSectionIndex = index !== 0 ? index - 1 : 0;\r\n\r\n        let currentSection = this.allSectionsH[currentSectionIndex];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea ? `${index + 1}/${\r\n                currentSectionGridArea.split('/')[1]\r\n                }/${index + 2}/${\r\n                currentSectionGridArea.split('/')[3]\r\n                }` :\r\n            \"1/1/2/2\"\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            portalNodeId={tagName === \"Section\" ? \"page-main-sections\" : undefined}\r\n            isSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n            }}\r\n            resizeSides={['s', 'n']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n        />;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstRow = index + 1;\r\n\r\n            if (x2 >= firstRow)\r\n                x2++;\r\n            if (x1 >= firstRow)\r\n                x1++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (x1 >= firstCol)\r\n                x1++;\r\n            if (x2 > firstCol)\r\n                x2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsH.splice(index, 0, agl.props.id);\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    getMainColIndex = (insertIndex) => {\r\n        let index = this.allSectionsV.findIndex(v => {\r\n            return v === null;\r\n        });\r\n\r\n        if (insertIndex !== undefined && index >= insertIndex)\r\n            return index + 1;\r\n\r\n        return index;\r\n    };\r\n\r\n    addVerticalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridY++;\r\n\r\n        let currentSectionIndex = index !== 0 ? index - 1 : 0;\r\n\r\n        let currentSection = this.allSectionsV[currentSectionIndex] || null;\r\n        if (currentSection === null)\r\n            currentSection = this.allSectionsV[currentSectionIndex + 1];\r\n\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea ? `${\r\n                currentSectionGridArea.split('/')[0]\r\n                }/${index + 1}/${\r\n                currentSectionGridArea.split('/')[2]\r\n                }/${index + 2}` :\r\n            `${1}/${index + 1}/${this.gridX + 1}/${index + 2}`\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            portalNodeId={tagName === \"Section\" ? \"page-main-sections\" : undefined}\r\n            isSection\r\n            isVerticalSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n                isVerticalSection: true,\r\n            }}\r\n            style={{\r\n                width: \"200px\",\r\n                height: \"auto\",\r\n                minHeight: \"auto\",\r\n            }}\r\n            resizeSides={['e', 'w', 'n', 's']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n            onItemPreResizeStop={this.onItemPreResizeStop}\r\n        />;\r\n\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        let mainColIndex = this.getMainColIndex(index);\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length + 1).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsV.splice(index, 0, agl.props.id);\r\n            this.props.select.onScrollItem();\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    moveUp = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex - 1];\r\n        sideSection = this.props.idMan.getItem(sideSection);\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 + 1}/${y1}/${x22 + 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 - 1}/${y12}/${x2 - 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveDown = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex + 1];\r\n        sideSection = this.props.idMan.getItem(sideSection);\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 - 1}/${y1}/${x22 - 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 + 1}/${y12}/${x2 + 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveRight = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex + 1];\r\n        sideSection = this.props.idMan.getItem(sideSection) || null;\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 - 1}/${x2}/${y22 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 + 1}/${x22}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n\r\n            this.getAgl().invalidateSize();\r\n            this.props.select.onScrollItem();\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 + 1}/${x2}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                if (x13 >= firstRow || x23 <= lastRow) {\r\n                    y13--;\r\n                    y23--;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveLeft = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex - 1];\r\n        sideSection = this.props.idMan.getItem(sideSection) || null;\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 + 1}/${x2}/${y22 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 - 1}/${x22}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n\r\n            this.getAgl().invalidateSize();\r\n            this.props.select.onScrollItem();\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 - 1}/${x2}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                if (x13 >= firstRow || x23 <= lastRow) {\r\n                    y13++;\r\n                    y23++;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    updateTemplates = () => {\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            if (isHideInBreakpoint(this.props.idMan.getItem(this.allSectionsV[i])))\r\n                return \"0px\";\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map((a, i) => {\r\n            if (isHideInBreakpoint(this.props.idMan.getItem(this.allSectionsH[i])))\r\n                return \"0px\";\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    hasMiniMenuOverride = () => {\r\n        return false;\r\n    };\r\n\r\n    invalidateSizeOverride = (agl, self, updateParent, updateChildren, sourceId) => {\r\n        if (self)\r\n            delete this.tempSize;\r\n\r\n        Object.values(agl.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current && sourceId !== childRef.current.props.id) {\r\n                childRef.current.invalidateSize(true, false, true);\r\n            }\r\n        });\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorBackground\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    getSectionOfPoint = (left, top, width, height) => {\r\n        let childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n            if (childRef && childRef.current) {\r\n                if (childRef.current.isPointInclude(left, top))\r\n                    return true;\r\n            }\r\n        });\r\n\r\n        if (!childRef)\r\n            childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n                if (childRef && childRef.current) {\r\n                    if (childRef.current.isPointInclude(left + width, top + height))\r\n                        return true;\r\n                }\r\n            });\r\n\r\n        if (!childRef)\r\n            childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n                return (childRef && childRef.current);\r\n            });\r\n\r\n        return childRef.current;\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n    };\r\n    // White Background\r\n    getStaticChildren = () => {\r\n\r\n        return <div\r\n            className=\"PageBaseWhiteBackground\"\r\n            style={{\r\n\r\n            }}\r\n        />\r\n    };\r\n\r\n    render() {\r\n        let fullWidth = (this.getAgl() && this.getAgl().getSize(false)) ||\r\n            (1002/*0.735 * this.props.editorData.innerWidth*/);\r\n        return (\r\n            <AGLWrapper tagName=\"PageBase\"\r\n                        aglRef={!this.props.aglRef ? this.root : this.root = this.props.aglRef}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        className=\"Page1Root\"\r\n                        style={{\r\n                            width: `${fullWidth}px`,\r\n                            height: \"100%\",\r\n                            boxShadow: \"0 2px 12px 6px rgba(134,138,165,.41)\",\r\n                            // marginTop: \"10vh !important\",\r\n                            display: \"inline-block\",\r\n                        }}\r\n                        data={this.getData()}\r\n                        isPage\r\n                        resizeSides={[]}\r\n                        page={this}\r\n                        hasMiniMenuOverride={this.hasMiniMenuOverride}\r\n                        getInspector={this.getInspector}\r\n                        invalidateSizeOverride={this.invalidateSizeOverride}\r\n                        // getStaticChildren={this.getStaticChildren}\r\n\r\n            >\r\n                <main\r\n                    style={{display: \"contents\"}}\r\n                    id={\"page-main-sections\"}\r\n                />\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nPageBase.defaultProps = {\r\n    tagName: \"PageBase\",\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\n\r\nexport default class VerticalSpacer extends AGLComponent{\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"VerticalSpacer\"\r\n                {...this.props}\r\n                data={this.getData()}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"20px\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\n\r\nlet FadeInAnimation = {};\r\n\r\nFadeInAnimation.getOptions = (props) => {\r\n    return null;\r\n};\r\n\r\nFadeInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {duration, delay} = options;\r\n    let animationStyles = StyleSheet.create({\r\n        fadeIn: {\r\n            animationName: {\r\n                \"0%\": {\r\n                    opacity: 0\r\n                },\r\n                \"100%\": {\r\n                    opacity: 1\r\n                }\r\n            },\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.fadeIn);\r\n};\r\n\r\nFadeInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FadeInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet BounceInAnimation = {};\r\n\r\nBounceInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From center',\r\n                    'From top left',\r\n                    'From top right',\r\n                    'From bottom left',\r\n                    'From bottom right'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nBounceInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `scale3d(0, 0, 0) translate3d(${\r\n                direction.includes('center')? '0': direction.includes('left')? '-100%': direction.includes('right')?\r\n                    '100%': '0'\r\n            }, ${\r\n                direction.includes('center')? '0': direction.includes('top')? '-100%': direction.includes('bottom')?\r\n                    '100%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['20%'] = {\r\n        opacity: 0.33,\r\n        transform: `scale3d(1.1, 1.1, 1.1) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '7%': direction.includes('right')?\r\n                '-7%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '7%': direction.includes('bottom')?\r\n                '-7%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['40%'] = {\r\n        opacity: 0.66,\r\n        transform: `scale3d(0.9, 0.9, 0.9) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '-5%': direction.includes('right')?\r\n                '5%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '-5%': direction.includes('bottom')?\r\n                '5%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['60%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(1.03, 1.03, 1.03) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '3%': direction.includes('right')?\r\n                '-3%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '3%': direction.includes('bottom')?\r\n                '-3%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['80%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(0.97, 0.97, 0.97) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '-1%': direction.includes('right')?\r\n                '1%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '-1%': direction.includes('bottom')?\r\n                '1%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(1, 1, 1)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        bounceIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.bounceIn);\r\n};\r\n\r\nBounceInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default BounceInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\nimport SliderInput from \"../../Menus/CommonComponents/SliderInput\";\r\nimport Angle from \"../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\n\r\nlet GlideInAnimation = {};\r\n\r\nGlideInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <>\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                <Angle\r\n                    className=\"ShadowAngle\"\r\n                    angle={options.angle || 90}\r\n                    onChange={(d) => {\r\n                        onDesignChange(`${designKey}.angle`, d);\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Distance</p>\r\n\r\n                <div\r\n                    className=\"BorderWidth\"\r\n                >\r\n                    <SliderInput\r\n                        className=\"BorderWidthSlider\"\r\n                        min={0}\r\n                        max={300}\r\n                        value={options.distance || 100}\r\n                        designKey={`${designKey}.distance`}\r\n                        onDesignChange={onDesignChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nGlideInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {distance, angle, duration, delay} = options;\r\n    distance = distance || 100;\r\n    angle = angle || 90;\r\n\r\n    let animationName = {};\r\n    let tx = - distance * Math.sin(angle * Math.PI / 180);\r\n    let ty = distance * Math.cos(angle * Math.PI / 180);\r\n    animationName['0%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(${tx}px, ${ty}px, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        glideIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.glideIn);\r\n};\r\n\r\nGlideInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default GlideInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FloatInAnimation = {};\r\n\r\nFloatInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFloatInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n                direction.includes('left')? '-20%': direction.includes('right')? '20%': 0\r\n            }, ${\r\n                direction.includes('top')? '-20%': direction.includes('bottom')? '20%': 0\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        floatIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.floatIn);\r\n};\r\n\r\nFloatInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FloatInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet ExpandInAnimation = {};\r\n\r\nExpandInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'Soft',\r\n                    'Medium',\r\n                    'Hard'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.power`, v);\r\n                }}\r\n                value={options.power || 'Hard'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nExpandInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, duration, delay} = options;\r\n    power = power || 'Hard';\r\n\r\n    let animationName = {};\r\n    animationName[\"0%\"] = {\r\n        opacity: 0,\r\n        transform: `scale3d(${\r\n                power === \"Hard\"? '0.2': power === \"Medium\"? '0.5': '0.8'\r\n            }, ${\r\n                power === \"Hard\"? '0.2': power === \"Medium\"? '0.5': '0.8'\r\n            }, 0)`\r\n    };\r\n    animationName[\"100%\"] = {\r\n        opacity: 1,\r\n        transform: 'scale3d(1,1,1)'\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        expandIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.expandIn);\r\n};\r\n\r\nExpandInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default ExpandInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../Menus/CommonComponents/SliderInput\";\r\n\r\nlet SpinInAnimation = {};\r\n\r\nSpinInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <>\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n                <DropDown\r\n                    options={[\r\n                        'Soft',\r\n                        'Medium',\r\n                        'Hard'\r\n                    ]}\r\n                    onChange={(v) => {\r\n                        onDesignChange(`${designKey}.power`, v);\r\n                    }}\r\n                    value={options.power || 'Hard'}\r\n                    spanStyle={{\r\n                        width: \"100%\",\r\n                        fontSize: 14,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n                <DropDown\r\n                    options={[\r\n                        'Clockwise',\r\n                        'Counter clockwise',\r\n                    ]}\r\n                    onChange={(v) => {\r\n                        onDesignChange(`${designKey}.direction`, v);\r\n                    }}\r\n                    value={options.direction || 'Clockwise'}\r\n                    spanStyle={{\r\n                        width: \"100%\",\r\n                        fontSize: 14,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Spin number</p>\r\n\r\n                <div\r\n                    className=\"BorderWidth\"\r\n                >\r\n                    <SliderInput\r\n                        className=\"BorderWidthSlider\"\r\n                        min={0}\r\n                        max={15}\r\n                        step={0.1}\r\n                        value={options.spinNo || 2}\r\n                        designKey={`${designKey}.spinNo`}\r\n                        onDesignChange={onDesignChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nSpinInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, direction, spinNo, duration, delay} = options;\r\n    power = power || 'Hard';\r\n    direction = direction || 'Clockwise';\r\n    spinNo = spinNo || 2;\r\n\r\n    let animationName = {};\r\n    let firstRotate = 360 * spinNo * (direction === 'Clockwise'? -1: 1);\r\n    animationName[\"0%\"] = {\r\n        opacity: 0,\r\n        transform: `rotate(${firstRotate}deg) scale3d(${\r\n                power === \"Hard\"? '0.3': power === \"Medium\"? '0.6': '1'\r\n            }, ${\r\n                power === \"Hard\"? '0.3': power === \"Medium\"? '0.6': '1'\r\n            }, 1)`\r\n    };\r\n    animationName[\"100%\"] = {\r\n        opacity: 1,\r\n        transform: 'rotate(0deg) scale3d(1,1,1)'\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        spinIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.spinIn);\r\n};\r\n\r\nSpinInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default SpinInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FlyInAnimation = {};\r\n\r\nFlyInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                    'From top left',\r\n                    'From top right',\r\n                    'From bottom left',\r\n                    'From bottom right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFlyInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let size = item.getSize(true);\r\n    let windowSize = {\r\n        width: item.props.breakpointmanager.getWindowWidth(),\r\n        height: item.props.breakpointmanager.getWindowHeight(),\r\n    };\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n                direction.includes('left')? `${-size.left}px`: direction.includes('right')? `${\r\n                    windowSize.width - size.left - size.width\r\n                }px`: 0\r\n            }, ${\r\n                direction.includes('top')? `${-size.top}px`: direction.includes('bottom')? `${\r\n                    windowSize.height - size.top - size.height\r\n                }px`: 0\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        flyIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.flyIn);\r\n};\r\n\r\nFlyInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FlyInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet TurnInAnimation = {};\r\n\r\nTurnInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From left',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nTurnInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let size = item.getSize(true);\r\n    let viewSize = item.props.viewRef.current.getSize(false);\r\n    let windowSize = {\r\n        width: item.props.breakpointmanager.getWindowWidth(),\r\n        height: item.props.breakpointmanager.getWindowHeight(),\r\n    };\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n                -(size.left - viewSize.left)\r\n                }px`: `${\r\n            windowSize.width - (size.left - viewSize.left) - size.width\r\n                }px`\r\n            }, -200%, 0) rotate(${\r\n            direction.includes('left')? '-45': '45'\r\n            }deg) `\r\n    };\r\n    animationName['30%'] = {\r\n        opacity: 0.3,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n            -(size.left - viewSize.left) * 0.7\r\n                }px`: `${\r\n            (windowSize.width - (size.left - viewSize.left) - size.width) * 0.7\r\n                }px`\r\n            }, -${200*0.85}%, 0) rotate(${\r\n            direction.includes('left')? -45 * 0.7: 45 * 0.7\r\n            }deg) `\r\n    };\r\n    animationName['60%'] = {\r\n        opacity: 0.6,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n            -(size.left - viewSize.left) * 0.4\r\n                }px`: `${\r\n            (windowSize.width - (size.left - viewSize.left) - size.width) * 0.4\r\n                }px`\r\n            }, -${200*0.55}%, 0) rotate(${\r\n            direction.includes('left')? -45 * 0.4: 45 * 0.4\r\n            }deg) `\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0) rotate(0deg) `\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        turnIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            animationTimingFunction: 'linear',\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.turnIn);\r\n};\r\n\r\nTurnInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default TurnInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\n\r\nlet ArcInAnimation = {};\r\n\r\nArcInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From left',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From right'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nArcInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From right';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) scale(0) rotateY(${\r\n            direction.includes('left') ? '-' : ''\r\n            }180deg) translateZ(600px)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) scale(1) rotateY(0deg) translateZ(0px)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        arcIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            animationTimingFunction: 'linear',\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.arcIn);\r\n};\r\n\r\nArcInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default ArcInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet PuffInAnimation = {};\r\n\r\nPuffInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'Soft',\r\n                    'Medium',\r\n                    'Hard'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.power`, v);\r\n                }}\r\n                value={options.power || 'Hard'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nPuffInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, duration, delay} = options;\r\n    power = power || 'Hard';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) translateZ(${\r\n            power === \"Hard\"? 400: power === \"Medium\"? 200: 100\r\n            }px)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) translateZ(0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        puffIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.puffIn);\r\n};\r\n\r\nPuffInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default PuffInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FoldInAnimation = {};\r\n\r\nFoldInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFoldInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) rotateY(${\r\n                direction.includes('left')? 90: direction.includes('right')? -90: 0\r\n            }deg) rotateX(${\r\n                direction.includes('top')? -90: direction.includes('bottom')? 90: 0\r\n            }deg)`,\r\n        transformOrigin: `${\r\n            direction.includes('left')? 'left': direction.includes('right')? 'right': 'center'\r\n            } ${\r\n            direction.includes('top')? 'top': direction.includes('bottom')? 'bottom': 'center'\r\n            } 0`,\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) rotateY(0deg) rotateX(0deg)`,\r\n        transformOrigin: `${\r\n            direction.includes('left')? 'left': direction.includes('right')? 'right': 'center'\r\n            } ${\r\n            direction.includes('top')? 'top': direction.includes('bottom')? 'bottom': 'center'\r\n            } 0`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        foldIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.foldIn);\r\n};\r\n\r\nFoldInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FoldInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FlipInAnimation = {};\r\n\r\nFlipInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFlipInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) rotateY(${\r\n                direction.includes('left')? -90: direction.includes('right')? 90: 0\r\n            }deg) rotateX(${\r\n                direction.includes('top')? 90: direction.includes('bottom')? -90: 0\r\n            }deg)`,\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) rotateY(0deg) rotateX(0deg)`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        flipIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.flipIn);\r\n};\r\n\r\nFlipInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FlipInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet RevealAnimation = {};\r\n\r\nRevealAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From center',\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From center'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nRevealAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From center';\r\n\r\n    let animationName = {};\r\n    switch (direction) {\r\n        case 'From center':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)`,\r\n            };\r\n            break;\r\n        case 'From left':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 0, 0 0, 0 100%, 0 100%)`,\r\n            };\r\n            break;\r\n        case 'From right':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(100% 0, 100% 0, 100% 100%, 100% 100%)`,\r\n            };\r\n            break;\r\n        case 'From top':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 0, 0 100%, 0 100%, 0 0)`,\r\n            };\r\n            break;\r\n        case 'From bottom':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 100%, 100% 100%, 100% 100%, 0 100%)`,\r\n            };\r\n            break;\r\n    }\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        clipPath: `polygon(0 0, 100% 0, 100% 100%, 0 100%)`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        reveal: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.reveal);\r\n};\r\n\r\nRevealAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default RevealAnimation;\r\n","import ContainerBase from \"../Components/Containers/ContainerBase\";\r\nimport Header from \"../Components/Containers/Header\";\r\nimport Footer from \"../Components/Containers/Footer\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport Section from \"../Components/Containers/Section\";\r\nimport Stack from \"../Components/Stack/Stack\";\r\nimport VerticalSpacer from \"../Components/Stack/VerticalSpacer\";\r\nimport FadeInAnimation from \"../Test/Animations/FadeInAnimation\";\r\nimport BounceInAnimation from \"../Test/Animations/BounceInAnimation\";\r\nimport GlideInAnimation from \"../Test/Animations/GlideInAnimation\";\r\nimport FloatInAnimation from \"../Test/Animations/FloatInAnimation\";\r\nimport ExpandInAnimation from \"../Test/Animations/ExpandInAnimation\";\r\nimport SpinInAnimation from \"../Test/Animations/SpinInAnimation\";\r\nimport FlyInAnimation from \"../Test/Animations/FlyInAnimation\";\r\nimport TurnInAnimation from \"../Test/Animations/TurnInAnimation\";\r\nimport ArcInAnimation from \"../Test/Animations/ArcInAnimation\";\r\nimport PuffInAnimation from \"../Test/Animations/PuffInAnimation\";\r\nimport FoldInAnimation from \"../Test/Animations/FoldInAnimation\";\r\nimport FlipInAnimation from \"../Test/Animations/FlipInAnimation\";\r\nimport RevealAnimation from \"../Test/Animations/RevealAnimation\";\r\n\r\nlet DynamicComponents = {};\r\n\r\nexport let initDynamicComponents = () => {\r\n    DynamicComponents[\"ContainerBase\"] = ContainerBase;\r\n    DynamicComponents[\"PageBase\"] = PageBase;\r\n    DynamicComponents[\"Header\"] = Header;\r\n    DynamicComponents[\"Footer\"] = Footer;\r\n    DynamicComponents[\"Section\"] = Section;\r\n    DynamicComponents[\"Stack\"] = Stack;\r\n    DynamicComponents[\"VerticalSpacer\"] = VerticalSpacer;\r\n};\r\n\r\nexport default DynamicComponents;\r\n\r\nexport let DynamicAnimations = {};\r\n\r\nexport let initDynamicAnimations = () => {\r\n    DynamicAnimations[\"fadeIn\"] = FadeInAnimation;\r\n    DynamicAnimations[\"bounceIn\"] = BounceInAnimation;\r\n    DynamicAnimations[\"glideIn\"] = GlideInAnimation;\r\n    DynamicAnimations[\"floatIn\"] = FloatInAnimation;\r\n    DynamicAnimations[\"expandIn\"] = ExpandInAnimation;\r\n    DynamicAnimations[\"spinIn\"] = SpinInAnimation;\r\n    DynamicAnimations[\"flyIn\"] = FlyInAnimation;\r\n    DynamicAnimations[\"turnIn\"] = TurnInAnimation;\r\n    DynamicAnimations[\"arcIn\"] = ArcInAnimation;\r\n    DynamicAnimations[\"puffIn\"] = PuffInAnimation;\r\n    DynamicAnimations[\"foldIn\"] = FoldInAnimation;\r\n    DynamicAnimations[\"flipIn\"] = FlipInAnimation;\r\n    DynamicAnimations[\"reveal\"] = RevealAnimation;\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\nimport DynamicComponents from \"../Dynamic/DynamicComponents\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport '../HelperStyle.css';\r\n\r\nexport default class AdjustmentPageControllers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    addSection = (index, isVertical) => {\r\n        let {page} = this.props;\r\n        page.addSectionQueue(index, \"Section\", DynamicComponents, undefined, isVertical);\r\n    };\r\n\r\n    getAnchor = (index) => {\r\n        return  document.getElementById(`page_add_horizontal_${index}`)\r\n    };\r\n\r\n    needUpdate = () => {\r\n        clearTimeout(this.updateTimeout);\r\n        this.updateTimeout = setTimeout(() => {\r\n            if (!this.mounted) {\r\n                clearTimeout(this.updateTimeout);\r\n                return;\r\n            }\r\n            this.forceUpdate();\r\n        }, 500);\r\n    };\r\n\r\n    render () {\r\n        let {grid} = this.props;\r\n        return (\r\n                [\r\n                    new Array(grid.y + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `1/${index}/2/${index + 1}`\r\n                        };\r\n                        index === 0 && (style.justifySelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                        >\r\n                            <div\r\n                                className={containerClasses}\r\n                                onClick={(e) => {\r\n                                    this.addSection(index, true);\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={8} height={8} src={require('./icons/plus.svg')} />\r\n                            </div>\r\n                        </div>\r\n                    }),\r\n                    new Array(grid.x + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `${index}/1/${index + 1}/2`,\r\n                            pointerEvents: \"auto\"\r\n                        };\r\n                        index === 0 && (style.alignSelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddHorizontalSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddHorizontalSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddHorizontalSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                            id={`page_add_horizontal_${index}`}\r\n                            onClick={(e) => {\r\n                                this.setState({anchorEl: e.currentTarget})\r\n                            }}\r\n                        >\r\n                            {!this.getAnchor(index) && this.needUpdate()}\r\n                            <Popper open={Boolean(document.getElementById(`page_add_horizontal_${index}`))}\r\n                                    anchorEl={\r\n                                        () => {\r\n                                            return this.getAnchor(index);\r\n                                        }\r\n                                    }\r\n                                    modifiers={{\r\n                                        preventOverflow: {\r\n                                            enabled: false,\r\n                                            boundariesElement: 'scrollParent',\r\n                                        },\r\n                                        hide: {\r\n                                            enabled: false,\r\n                                        },\r\n                                    }}\r\n                            >\r\n                                <div\r\n                                    className={containerClasses}\r\n                                    onClick={(e) => {\r\n                                        this.addSection(index, false);\r\n                                    }}\r\n                                >\r\n                                    <img draggable={false} className=\"IconImage\" width={8} height={8} src={require('./icons/plus.svg')} />\r\n                                </div>\r\n                            </Popper>\r\n                        </div>\r\n                    })\r\n                ]\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerFixedHolder extends React.Component {\r\n    render () {\r\n        let {size, id} = this.props;\r\n        return (\r\n            <div\r\n                className=\"fixed-holder\"\r\n                style={{\r\n                    top: size? size.top: 0,\r\n                    left: size? size.left: 0,\r\n                    width: size? size.width: 0,\r\n                    height: size? size.clientHeight || size.height: 0,\r\n                }}\r\n                id={`${id}_fixed_holder`}\r\n            >\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class PaddingInterface extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    borderTop: this.props.padding.top ? `${this.props.padding.top} solid rgba(2, 242, 255, 0.3` : \"unset\",\r\n                    borderLeft: this.props.padding.left ? `${this.props.padding.left} solid rgba(2, 242, 255, 0.3)` : \"unset\",\r\n                    borderBottom: this.props.padding.bottom ? `${this.props.padding.bottom} solid rgba(2, 242, 255, 0.3)` : \"unset\",\r\n                    borderRight: this.props.padding.right ? `${this.props.padding.right} solid rgba(2, 242, 255, 0.3)` : \"unset\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ParentSelectInterface extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    border: '1px solid rgb(2 50 255 / 40%)'\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {appendStyle, cloneObject, shallowEqual, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\nimport GridChildContainerChildren from \"./GridChildContainerChildren\";\r\nimport classNames from \"classnames\";\r\nimport AdjustmentPageControllers from \"./Adjustment/AdjustmentPageControllers\";\r\nimport GridChildContainerFixedHolder from \"./GridChildContainerFixedHolder\";\r\nimport PaddingInterface from \"./Test/PaddingInterface\";\r\nimport ParentSelectInterface from \"./Test/ParentSelectInterface\";\r\n\r\nexport default class GridChildContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.controllerRef = React.createRef();\r\n        this.fixedHolderRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.modifyOverflowStyle(this.props.overflowData, this.props.aglStyle);\r\n        this.modifyContainerStyle(this.props.grid, this.props.aglStyle, this.props.padding);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(this.grid, nextProps.grid) ||\r\n            !shallowEqual(this.size, nextProps.size) ||\r\n            this.props.selectAsParent !== nextProps.selectAsParent ||\r\n            this.props.selected !== nextProps.selected ||\r\n            !shallowEqual(this.padding, nextProps.padding) ||\r\n            !shallowEqual(JSON.stringify(this.allChildIndex),\r\n                JSON.stringify(Object.values(nextProps.allChildren).map(c => {\r\n                    return {\r\n                        z: c.zIndex,\r\n                        i: c.child.props.id\r\n                    }\r\n                })))\r\n        ) {\r\n            if (!shallowEqual(this.overflowData, nextProps.overflowData))\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n\r\n            if (!shallowEqual(this.grid, nextProps.grid) || !shallowEqual(this.padding, nextProps.padding))\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n\r\n            if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!shallowEqual(this.overflowData, nextProps.overflowData)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            return true;\r\n        }\r\n        if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren, grid, overflowData, aglStyle, size, padding} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => {\r\n            return {\r\n                z: c.zIndex,\r\n                i: c.child.props.id\r\n            }\r\n        });\r\n        this.grid = cloneObject(grid);\r\n        this.overflowData = cloneObject(overflowData);\r\n        this.aglStyle = cloneObject(aglStyle);\r\n        this.size = cloneObject(size);\r\n        this.padding = cloneObject(padding);\r\n    };\r\n\r\n    modifyContainerStyle = (grid, aglStyle, padding) => {\r\n        if (!grid)\r\n            grid = this.props.grid;\r\n\r\n        let {modifyContainerStyleOverride, agl} = this.props;\r\n\r\n        if (modifyContainerStyleOverride){\r\n            modifyContainerStyleOverride(this, agl, grid, aglStyle);\r\n            return;\r\n        }\r\n\r\n        let style = {\r\n            width: (aglStyle && aglStyle.width === \"auto\") ? \"auto\": \"100%\",\r\n            height: (aglStyle && aglStyle.height === \"auto\") ? \"auto\":\r\n                agl.getFromData(\"containerHeight\") || \"100%\",\r\n            display: \"grid\",\r\n            position: \"relative\",\r\n            boxSizing: \"border-box\",\r\n            gridTemplateRows: grid.gridTemplateRows,\r\n            gridTemplateColumns: grid.gridTemplateColumns,\r\n        };\r\n\r\n        if (padding) {\r\n            if (padding.top) style.paddingTop = padding.top;\r\n            if (padding.left) style.paddingLeft = padding.left;\r\n            if (padding.bottom) style.paddingBottom = padding.bottom;\r\n            if (padding.right) style.paddingRight = padding.right;\r\n\r\n            /*style.backgroundImage = \"\";\r\n            Object.keys(padding).forEach(key => {\r\n                if (key === \"top\")\r\n                    style.backgroundImage += `linear-gradient(to bottom, #00f3ffa8 ${padding.top}, transparent 10px),`\r\n                if (key === \"bottom\")\r\n                    style.backgroundImage += `linear-gradient(to top, #00f3ffa8 ${padding.bottom}, transparent 10px),`\r\n                if (key === \"left\")\r\n                    style.backgroundImage += `linear-gradient(to right, #00f3ffa8 ${padding.left}, transparent 10px),`\r\n                if (key === \"right\")\r\n                    style.backgroundImage += `linear-gradient(to left, #00f3ffa8 ${padding.right}, transparent 10px),`\r\n            });\r\n\r\n            if (style.backgroundImage)\r\n                style.backgroundImage = style.backgroundImage.slice(0, -1);*/\r\n        }\r\n\r\n        let styleNode = document.getElementById(this.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, this.getContainerStyleId(), this.getContainerStyleId());\r\n        } else {\r\n            updateStyle(styleNode, style, this.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    modifyOverflowStyle = (overflowData, aglStyle) => {\r\n        let styleNode = document.getElementById(this.getOverflowStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId()\r\n                , this.getOverflowStyleId());\r\n        } else {\r\n            updateStyle(styleNode, this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId());\r\n        }\r\n\r\n        let webkitScrollbarStyle = {};\r\n        let webkitScrollbarStyleId = this.getOverflowStyleId() + '::-webkit-scrollbar';\r\n        if (overflowData.auto === 'hide') webkitScrollbarStyle.display = \"none\";\r\n\r\n        let scrollStyleNode = document.getElementById(webkitScrollbarStyleId);\r\n\r\n        if (!scrollStyleNode) {\r\n            appendStyle(webkitScrollbarStyle, webkitScrollbarStyleId, webkitScrollbarStyleId);\r\n        } else {\r\n            updateStyle(scrollStyleNode, webkitScrollbarStyle, webkitScrollbarStyleId);\r\n        }\r\n    };\r\n\r\n    getOverflowStyle = (overflowData, aglStyle) => {\r\n        let style = {\r\n            display: \"grid\",\r\n            gridTemplateRows: \"1fr\",\r\n            gridTemplateColumns: \"1fr\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n        };\r\n\r\n        if (aglStyle && aglStyle.width === \"auto\") {\r\n            style.position = \"relative\";\r\n            delete style.left;\r\n            delete style.right;\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n        if (aglStyle && aglStyle.height === \"auto\") {\r\n            style.position = \"relative\";\r\n            delete style.left;\r\n            delete style.right;\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n\r\n        if (!overflowData)\r\n            overflowData = this.props.overflowData;\r\n\r\n        if (!overflowData)\r\n            return style;\r\n\r\n        if (overflowData.state === 'show') {\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'hide') {\r\n            style.overflowX = \"hidden\";\r\n            style.overflowY = \"hidden\";\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'scroll') {\r\n            style.overflowX = overflowData.overflowX? overflowData.auto === 'auto'? \"auto\" : \"scroll\" : \"hidden\" ;\r\n            style.overflowY = overflowData.overflowY? overflowData.auto === 'auto'? \"auto\" : \"scroll\" : \"hidden\" ;\r\n        }\r\n\r\n        if (overflowData.auto === 'hide') {\r\n            // TODO hide scrollbar with webkit\r\n            style.scrollbarWidth = 'none';\r\n            style.overflow = '-moz-scrollbars-none';\r\n            style['-ms-overflow-style'] = 'none';\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    getOverflowStyleId = () => {\r\n        return `style_overflow_${this.props.id}`\r\n    };\r\n\r\n    getContainerStyleId = () => {\r\n        return `style_container_${this.props.id}`\r\n    };\r\n\r\n    updateAdjustments = () => {\r\n        this.controllerRef.current.forceUpdate();\r\n        this.fixedHolderRef.current.forceUpdate();\r\n    };\r\n\r\n    needOverflow = () => {\r\n        let overflowData = this.props.overflowData;\r\n\r\n        if (overflowData.state !== 'scroll')\r\n            return false;\r\n\r\n        if (overflowData.overflowX === 'scroll')\r\n                return true;\r\n        if (overflowData.overflowY === 'scroll')\r\n                return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        if (!this.props.show)\r\n            return null;\r\n        this.saveState();\r\n        let {allChildren, id, grid, isPage, page, size, getChildrenOverride, agl} = this.props;\r\n\r\n        let overflowClasses = classNames(\r\n            this.getOverflowStyleId()\r\n        );\r\n        let containerClasses = classNames(\r\n            this.getContainerStyleId()\r\n        );\r\n\r\n        if (!isPage) {\r\n            if (this.needOverflow()) {\r\n                return (\r\n                    <div\r\n                        id={`${id}_overflow`}\r\n                        className={overflowClasses}\r\n                        ref={this.props.overflowRef}\r\n                        onScroll={this.props.onScroll}\r\n                    >\r\n                        <div\r\n                            id={`${id}_container`}\r\n                            className={containerClasses}\r\n                            ref={this.props.containerRef}\r\n                        >\r\n                            {\r\n                                this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                                <PaddingInterface padding={this.props.padding} />\r\n                            }\r\n                            {\r\n                                this.props.selectAsParent &&\r\n                                <ParentSelectInterface />\r\n                            }\r\n                            <GridChildContainerChildren\r\n                                allChildren={allChildren}\r\n                                getChildrenOverride={getChildrenOverride}\r\n                                agl={agl}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        id={`${id}_container`}\r\n                        className={containerClasses}\r\n                        ref={this.props.containerRef}\r\n                    >\r\n                        {\r\n                            this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                            <PaddingInterface padding={this.props.padding} />\r\n                        }\r\n                        {\r\n                            this.props.selectAsParent &&\r\n                            <ParentSelectInterface />\r\n                        }\r\n                        <GridChildContainerChildren\r\n                            allChildren={allChildren}\r\n                            getChildrenOverride={getChildrenOverride}\r\n                            agl={agl}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                    <div\r\n                        id={`${id}_container`}\r\n                        className={containerClasses}\r\n                        ref={this.props.containerRef}\r\n                    >\r\n                        {\r\n                            this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                            <PaddingInterface padding={this.props.padding} />\r\n                        }\r\n                        {\r\n                            this.props.selectAsParent &&\r\n                            <ParentSelectInterface />\r\n                        }\r\n                        <GridChildContainerChildren\r\n                            allChildren={allChildren}\r\n                            getChildrenOverride={getChildrenOverride}\r\n                            agl={agl}\r\n                        />\r\n\r\n                        {\r\n                            isPage &&\r\n                            <AdjustmentPageControllers\r\n                                grid={grid}\r\n                                page={page}\r\n                                ref={this.controllerRef}\r\n                            />\r\n                        }\r\n\r\n                        {\r\n                            isPage &&\r\n                            <GridChildContainerFixedHolder\r\n                                ref={this.fixedHolderRef}\r\n                                size={size}\r\n                                id={id}\r\n                            />\r\n                        }\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomeGridLayout.css';\r\n\r\nexport default class AGLAnchor extends React.Component {\r\n    render () {\r\n        let {anchor} = this.props;\r\n\r\n        if (!anchor)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                className=\"AGLAnchor\"\r\n                id={anchor.id}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ResizePanePage extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane-page`,\r\n            \"Adjustment-Pane\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.onMouseDown}\r\n                className={classes}\r\n                style={style}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePanePage from \"./ResizePanePage\";\r\n\r\nexport default class AdjustmentResizePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render () {\r\n        let {top, left, width, height} = this.props;\r\n        if (top === undefined || left === undefined || width === undefined || height === undefined)\r\n            return null;\r\n\r\n        return (\r\n                <div\r\n                    id=\"AdjustmentResizePage\"\r\n                    style={{\r\n                        width: width,\r\n                        height: \"80vh\",\r\n                        // left: left? left: 0,\r\n                        // top: top? top : 0,\r\n                        // bottom: top? window.innerHeight - top - height: 0,\r\n                        // right: left? window.innerWidth - left - width: 0,\r\n                    }}\r\n                    // className=\"AdjustmentResizeRootPage\"\r\n                    className=\"AdjustmentResizeRoot\"\r\n                >\r\n                    {\r\n                        this.props.sides.map((side, index) => {\r\n                            return <ResizePanePage\r\n                                key={index}\r\n                                side={side}\r\n                                onResizeStart={this.props.onResizeStart}\r\n                                onResize={this.props.onResize}\r\n                                onResizeStop={this.props.onResizeStop}\r\n                                draggingStart={this.props.draggingStart}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class EventTrigger {\r\n    constructor(owner, defaultListener) {\r\n        this.owner = owner;\r\n        this.listeners = [];\r\n        if (defaultListener)\r\n            this.listeners.push(defaultListener);\r\n    }\r\n\r\n    addListener = (listener) => {\r\n        if (!this.listeners.find(l => { return l === listener; })) {\r\n            this.listeners.push(listener);\r\n        }\r\n    };\r\n\r\n    trigger = throttleDebounce((data) => {\r\n        this.listeners.forEach(l => {\r\n            l(this.owner, data);\r\n        });\r\n    }, 50);\r\n\r\n    removeListener = (listener) => {\r\n        let index = this.listeners.findIndex(l => { return l === listener; })\r\n        if (index >= 0)\r\n            this.listeners.splice(index, 1);\r\n    };\r\n}\r\n","let windowCache = {\r\n    boundingRects: {},\r\n    clientsWidth: {},\r\n    clientsHeight: {},\r\n    scrollsTop: {},\r\n    scrollsLeft: {},\r\n    scrollsWidth: {},\r\n    scrollsHeight: {}\r\n};\r\n\r\nlet clearCache = () => {\r\n    windowCache.boundingRects = {};\r\n    windowCache.clientsWidth = {};\r\n    windowCache.clientsHeight = {};\r\n    windowCache.scrollsTop = {};\r\n    windowCache.scrollsLeft = {};\r\n    windowCache.scrollsWidth = {};\r\n    windowCache.scrollsHeight = {};\r\n    delete windowCache.clearCacheTimeuot;\r\n};\r\n\r\nexport let getCachedBoundingRect = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.boundingRects[id])\r\n        windowCache.boundingRects[id] = node.getBoundingClientRect();\r\n\r\n    return windowCache.boundingRects[id];\r\n};\r\n\r\nexport let getCachedClientWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.clientsWidth[id])\r\n        windowCache.clientsWidth[id] = node.clientWidth;\r\n\r\n    return windowCache.clientsWidth[id];\r\n};\r\n\r\nexport let getCachedClientHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.clientsHeight[id])\r\n        windowCache.clientsHeight[id] = node.clientHeight;\r\n\r\n    return windowCache.clientsHeight[id];\r\n};\r\n\r\nexport let getCachedScrollTop = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsTop[id])\r\n        windowCache.scrollsTop[id] = node.scrollTop;\r\n\r\n    return windowCache.scrollsTop[id];\r\n};\r\n\r\nexport let getCachedScrollLeft = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsLeft[id])\r\n        windowCache.scrollsLeft[id] = node.scrollLeft;\r\n\r\n    return windowCache.scrollsLeft[id];\r\n};\r\n\r\nexport let getCachedScrollWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsWidth[id])\r\n        windowCache.scrollsWidth[id] = node.scrollWidth;\r\n\r\n    return windowCache.scrollsWidth[id];\r\n};\r\n\r\nexport let getCachedScrollHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsHeight[id])\r\n        windowCache.scrollsHeight[id] = node.scrollHeight;\r\n\r\n    return windowCache.scrollsHeight[id];\r\n};\r\n\r\nexport let addToCache = (id, rect, propName) => {\r\n    windowCache[propName][id] = rect;\r\n};\r\n","import React from \"react\";\r\nexport default class AnimationHolder extends React.Component {\r\n    render () {\r\n        if (!this.props.disabled)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <div\r\n                    className={this.props.className}\r\n                    id={this.props.id}\r\n                    ref={this.props.transformRef}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nexport default class VisibilitySensorWrapper extends React.Component {\r\n    render () {\r\n        if (!this.props.animation)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <VisibilitySensor\r\n                    partialVisibility onChange={(v) => {\r\n                        if (this.props.animation.name &&\r\n                            (this.props.animation.options && this.props.animation.options.once)\r\n                            && v) {\r\n                            !this.props.editor && this.props.playAnimation(true);\r\n                            return;\r\n                        }\r\n\r\n                        if (this.props.animation.name && v)\r\n                            !this.props.editor && this.props.playAnimation();\r\n                    }}\r\n                    containment={this.props.select.getPageOverflowRef()}\r\n                    active={this.props.animation.name && !this.props.disableVS}\r\n                >\r\n                    {this.props.children}\r\n                </VisibilitySensor>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentHelpSize extends React.Component {\r\n    getText = () => {\r\n        let {width, height} = this.props.resizeHelpData;\r\n\r\n        return `${width? \"W: \" + width.toFixed(0).toString() + \"  \": \"\"}\r\n        ${height? \"H: \" + height.toFixed(0).toString() + \"\": \"\"}`;\r\n    };\r\n    render () {\r\n        let {x, y} = this.props.resizeHelpData;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpSize\"\r\n                className=\"AdjustmentHelpSizeRoot\"\r\n            >\r\n                <p\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: y,\r\n                        left: x,\r\n                        margin: 0,\r\n                        transform: \"translateX(20px) translateY(20px)\",\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#ffffff\",\r\n                        backgroundColor: \"#4b4b4b\",\r\n                        padding: 4,\r\n                        borderRadius: 4,\r\n                        width: \"fit-content\"\r\n                    }}\r\n                >\r\n                    {this.getText()}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport debounce from 'lodash.debounce';\r\nimport {appendStyle, cloneObject, initGriddata, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './AwesomeGridLayout.css';\r\nimport GridChildContainer from \"./GridChildContainer\";\r\nimport DynamicComponents, {DynamicAnimations} from \"./Dynamic/DynamicComponents\";\r\nimport classNames from \"classnames\";\r\nimport Portal from \"./Portal\";\r\nimport {\r\n    createItem,\r\n    getCompositeDesignData, getPxValueFromCSSValue, getResizeDelta, getViewRatioStyle,\r\n    isFixed,\r\n    isGroupSelected, isRightClick,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport AGLAnchor from \"./AGLAnchor\";\r\nimport AdjustmentResizePage from \"./Adjustment/AdjustmentResizePage\";\r\nimport EventTrigger from \"./Test/EventTrigger\";\r\nimport {\r\n    addToCache,\r\n    getCachedBoundingRect,\r\n    getCachedClientHeight, getCachedScrollLeft,\r\n    getCachedScrollTop,\r\n    getCachedClientWidth, getCachedScrollHeight, getCachedScrollWidth\r\n} from \"./Test/WindowCache\";\r\nimport ChildHolder from \"./AnimationHolder\";\r\nimport VisibilitySensorWrapper from \"./Test/VisibilitySensorWrapper\";\r\nimport AdjustmentHelpSize from \"./Adjustment/AdjustmentHelpSize\";\r\n\r\nexport default class AwesomeGridLayout2 extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            childContainers: [],\r\n            grid: {x: 1, y: 1, gridTemplateRows: \"1fr\", gridTemplateColumns: \"1fr\"},\r\n            portalNodeId: props.portalNodeId,\r\n            windowWidth: props.breakpointmanager.getWindowWidth()\r\n        };\r\n\r\n        this.rootDivRef = React.createRef();\r\n        this.overflowRef = !props.isPage? React.createRef(): this.rootDivRef;\r\n        this.containerRef = React.createRef();\r\n        this.backContainerRef = React.createRef();\r\n        this.transformRef = React.createRef();\r\n        this.allChildRefs = {};\r\n\r\n        this.children = {};\r\n\r\n        initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        this.props.idMan.setItem(this.props.id, this);\r\n\r\n        this.onPropsChange = new EventTrigger(this);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n        this.init();\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n        if (this.needRender) {\r\n            delete this.needRender;\r\n            this.updateLayout(() => {\r\n                this.onSelect(this.getFromTempData(\"selected\"), this.lateMounted);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.editor.updateLayout();\r\n    }\r\n\r\n    callOverride = (funcName, ...args) => {\r\n        let override = this.getOverrideProp(funcName);\r\n        if (override) {\r\n            return override(this, ...args);\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    hasOverride = (funcName) => {\r\n        return this.getOverrideProp(funcName);\r\n    };\r\n\r\n    init = () => {\r\n        this.needRender = true;\r\n\r\n        this.children = {};\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let savedChildren = this.props.griddata.savedChildren;\r\n        if (!savedChildren) {\r\n            this.props.griddata.savedChildren = {};\r\n            savedChildren = this.props.griddata.savedChildren;\r\n\r\n            React.Children.map(this.props.children, (child, i)=> {\r\n                if (child) {\r\n                    let props = {...child.props};\r\n                    let createdChild = this.createChildByData({\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: props\r\n                    }, DynamicComponents);\r\n                    this.children[props.id] = {\r\n                        // child: this.getChildClone(child),\r\n                        child: createdChild,\r\n                        zIndex: lastZIndex + 1\r\n                    };\r\n\r\n                    savedChildren[props.id] = {\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: this.getClearProps(props),\r\n                        zIndex: this.children[props.id].zIndex\r\n                    };\r\n\r\n                    lastZIndex++;\r\n                }\r\n            });\r\n\r\n            if (this.renderChild) {\r\n                let childs = this.renderChild();\r\n                if (childs instanceof Array) {\r\n                    childs.forEach(c => {\r\n                        if (c) {\r\n                            let props = {...c.props};\r\n                            let createdChild = this.createChildByData({\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: props\r\n                            }, DynamicComponents);\r\n                            this.children[props.id] = {\r\n                                child: createdChild,\r\n                                zIndex: lastZIndex + 1\r\n                            };\r\n\r\n                            savedChildren[props.id] = {\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: this.getClearProps(props),\r\n                                zIndex: this.children[props.id].zIndex\r\n                            };\r\n\r\n                            lastZIndex++;\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (childs) {\r\n                        let props = {...childs.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.props.childrenData) {\r\n                let childs = this.props.childrenData();\r\n                childs.forEach(c => {\r\n                    if (c) {\r\n                        let props = {...c.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: c.tagName,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: c.tagName,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            let savedChildrenArray = Object.values(savedChildren);\r\n            savedChildrenArray.sort((a, b) => {\r\n                if (a.zIndex > b.zIndex) {\r\n                    return 1;\r\n                } else if (a.zIndex === b.zIndex) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    return 0;\r\n                }\r\n                return -1;\r\n            });\r\n            savedChildrenArray.forEach(childData => {\r\n                let oldId = childData.props.id;\r\n                let child = this.createChildByData(childData, DynamicComponents);\r\n                this.children[childData.props.id] = {\r\n                    child: child,\r\n                    zIndex: childData.zIndex\r\n                };\r\n\r\n                if (oldId !== childData.props.id) {\r\n                    delete savedChildren[oldId];\r\n                    savedChildren[childData.props.id] = childData;\r\n                }\r\n            })\r\n        }\r\n\r\n        this.initLayout();\r\n    };\r\n\r\n    initLayout = () => {\r\n        if (this.callOverride(\"initLayout\"))\r\n            return;\r\n\r\n        let style = this.getDefaultStyle();\r\n\r\n        this.setTransformStyle(this.getCompositeFromData(\"transform\"), undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGridItemStyle(this.getCompositeFromData(\"gridItemStyle\") ||\r\n            this.props.defaultGridItemStyle,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setStyle(this.getCompositeFromData(\"style\") || style, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGrid(this.getCompositeFromData(\"grid\") || this.props.defaultGrid, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    getDefaultStyle = () => {\r\n        let style = { ...this.props.defaultStyle, ...this.props.style};\r\n\r\n        if ((this.props.defaultGridItemStyle).justifySelf === \"stretch\" &&\r\n            (this.getFromTempData(\"resizable\") &&\r\n                (!this.props.resizeSides || (!this.props.resizeSides.includes(\"w\") &&\r\n                    !this.props.resizeSides.includes(\"e\"))))) {\r\n            style.width = \"auto\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    lateMounted = () => {\r\n        if (this.hasOverride(\"lateMounted\")) {\r\n            return this.callOverride(\"lateMounted\");\r\n        }\r\n\r\n        let size = this.getSize(false, true, true);\r\n        this.addToSnap();\r\n        // this.onSelect(this.getFromTempData(\"selected\"));\r\n\r\n        let baseDocks = this.getBaseDocks();\r\n        this.setDocks(baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n            this.getFromTempData(\"autoDock\"),\r\n            this.props.breakpointmanager.getHighestBpName(), true);\r\n\r\n        if (this.props.onPageResize) {\r\n            this.props.onPageResize(size.width, this, true);\r\n        }\r\n\r\n        this.props.onChildMounted && this.props.onChildMounted(this);\r\n        this.props.editor.updateLayout();\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        return this.props.getPrimaryOptions && this.props.getPrimaryOptions();\r\n    };\r\n\r\n    getShortcutOptions = () => {\r\n        return this.props.getShortcutOptions && this.props.getShortcutOptions();\r\n    };\r\n\r\n    hasMiniMenu = () => {\r\n        if (this.hasOverride(\"hasMiniMenu\")) {\r\n            return this.callOverride(\"hasMiniMenu\");\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    addToSnap = debounce(() => {\r\n        if (this.callOverride(\"addToSnap\"))\r\n            return;\r\n\r\n        // let rect = this.getSize(false);\r\n        let rect = this.getBoundarySize() || this.getSize(false);\r\n        if (rect) {\r\n            this.props.snap.addSnap(this.props.id,\r\n                [\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top + rect.height / 2,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top + rect.height,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    }\r\n                ],\r\n                [\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left + rect.width / 2,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left + rect.width,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    }\r\n                ],\r\n                this.getParentsId()\r\n            );\r\n        }\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current){\r\n                childRef.current.addToSnap();\r\n            }\r\n        });\r\n    }, 500);\r\n\r\n    getParentsId = () => {\r\n        let parentsId = [];\r\n        let parent = this.props.parent;\r\n\r\n        while (parent) {\r\n            parentsId.push(parent.props.id);\r\n            parent = parent.props.parent;\r\n        }\r\n\r\n        return parentsId;\r\n    };\r\n\r\n    getGridLineSnaps = () => {\r\n        let snaps = {\r\n            horizontals: [],\r\n            verticals: [],\r\n            id: this.props.id\r\n        };\r\n        this.prepareRects();\r\n        let xLineRef = this.props.gridLine.getXlineRef(this.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            // let current = xLineRef[i].current;\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.verticals.push({\r\n                id: this.props.id,\r\n                value: rect.left + ((i === xLineRef.length - 1)? 1: 0),\r\n                p1: rect.top,\r\n                p2: rect.top + rect.height\r\n            });\r\n        }\r\n        let yLineRef = this.props.gridLine.getYlineRef(this.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let current = yLineRef[i].current;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.horizontals.push({\r\n                id: this.props.id,\r\n                value: rect.top + ((i === yLineRef.length - 1)? 1: 0),\r\n                p1: rect.left,\r\n                p2: rect.left + rect.width\r\n            });\r\n        }\r\n\r\n        return [snaps];\r\n    };\r\n\r\n    createChildByData = (childData, dynamicComponents, newId, onChildMounted, fixed) => {\r\n        if (this.callOverride(\"addToSnap\", childData, dynamicComponents, newId, onChildMounted, fixed))\r\n            return;\r\n\r\n        let tagName = childData.tagName;\r\n        let props = childData.props;\r\n\r\n        let griddata = initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (newId)\r\n            props.id = newId;\r\n        if (!props.id)\r\n            props.id = this.props.idMan.getId(tagName);\r\n        else\r\n            props.id = this.props.idMan.getId(tagName, props.id);\r\n\r\n        griddata.id = props.id;\r\n        if (!props.griddata || newId)\r\n            props.griddata = griddata;\r\n\r\n        this.allChildRefs[props.id] = React.createRef();\r\n\r\n        let AGLProps = {};\r\n        if (tagName[0] == tagName[0].toUpperCase()) {\r\n            AGLProps = {\r\n                aglRef: this.allChildRefs[props.id],\r\n                viewRef: this.props.viewRef,\r\n                breakpointmanager: this.props.breakpointmanager,\r\n                undoredo: this.props.undoredo,\r\n                dragdrop: this.props.dragdrop,\r\n                select: this.props.select,\r\n                snap: this.props.snap,\r\n                idMan: this.props.idMan,\r\n                input: this.props.input,\r\n                copyMan: this.props.copyMan,\r\n                window: this.props.window,\r\n                document: this.props.document,\r\n                editorData: this.props.editorData,\r\n                anchorMan: this.props.anchorMan,\r\n                gridLine: this.props.gridLine,\r\n                gridEditorRef: this.props.gridEditorRef,\r\n                parent: this,\r\n                editor: this.props.editor,\r\n                onChildMounted: onChildMounted,\r\n                portalNodeId: (fixed && `${this.props.id}_fixed_holder`) || props.portalNodeId,\r\n                ...this.getAllChildOverrideProps()\r\n            };\r\n        }\r\n\r\n        let component = tagName[0] === tagName[0].toUpperCase()? dynamicComponents[tagName]: tagName;\r\n\r\n        if (tagName[0] !== tagName[0].toUpperCase())\r\n            delete props.griddata;\r\n\r\n        return React.createElement(\r\n            component,\r\n            {\r\n                ...props,\r\n                key: props.id,\r\n                ...AGLProps,\r\n            }\r\n        );\r\n    };\r\n\r\n    getSize = (updateState = true, force, fullForce) => {\r\n        if (!this.rootDivRef.current)\r\n            return;\r\n\r\n        if (this.tempSize && !force)\r\n            return cloneObject(this.tempSize);\r\n\r\n        let rect = fullForce ? this.rootDivRef.current.getBoundingClientRect() :\r\n            getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n\r\n        let clientWidth = rect.width;\r\n        let clientHeight = rect.height;\r\n        let scrollTop = 0;\r\n        let scrollLeft = 0;\r\n        let scrollWidth = rect.width;\r\n        let scrollHeight = rect.height;\r\n        if (this.overflowRef.current) {\r\n            clientWidth = fullForce ? this.overflowRef.current.clientWidth :\r\n                getCachedClientWidth(this.props.id, this.overflowRef.current);\r\n            clientHeight = fullForce ? this.overflowRef.current.clientHeight :\r\n                getCachedClientHeight(this.props.id, this.overflowRef.current);\r\n            scrollTop = fullForce ? this.overflowRef.current.scrollTop :\r\n                getCachedScrollTop(this.props.id, this.overflowRef.current);\r\n            scrollLeft = fullForce ? this.overflowRef.current.scrollLeft :\r\n                getCachedScrollLeft(this.props.id, this.overflowRef.current);\r\n            scrollWidth = fullForce ? this.overflowRef.current.scrollWidth :\r\n                getCachedScrollWidth(this.props.id, this.overflowRef.current);\r\n            scrollHeight = fullForce ? this.overflowRef.current.scrollHeight :\r\n                getCachedScrollHeight(this.props.id, this.overflowRef.current);\r\n        }\r\n\r\n        let padding = cloneObject(this.getCompositeFromData(\"padding\")) || {};\r\n        ['top', 'left', 'bottom', 'right'].forEach(key => {\r\n            padding[key] = getPxValueFromCSSValue(padding[key], 0, this) || 0;\r\n        });\r\n        let temp = {\r\n            x: rect.width,\r\n            y: rect.height,\r\n            clientWidth: clientWidth,\r\n            clientHeight: clientHeight,\r\n            scrollTop: scrollTop,\r\n            scrollLeft: scrollLeft,\r\n            scrollWidth: scrollWidth,\r\n            scrollHeight: scrollHeight,\r\n            top: rect.top,\r\n            left: rect.left,\r\n            bottom: rect.bottom,\r\n            right: rect.right,\r\n            width: rect.width,\r\n            height: rect.height,\r\n            widthMinusPadding: rect.width - (padding.left||0)- (padding.right||0),\r\n            heightMinusPadding: rect.height - (padding.top||0)- (padding.bottom||0),\r\n            scrollWidthMinusPadding: scrollWidth - (padding.left||0)- (padding.right||0),\r\n            scrollHeightMinusPadding: scrollHeight - (padding.top||0)- (padding.bottom||0)\r\n        };\r\n\r\n        this.tempSize = temp;\r\n\r\n        if (fullForce) {\r\n            addToCache(this.props.id, this.tempSize, \"boundingRects\");\r\n            addToCache(this.props.id, clientWidth, \"clientsWidth\");\r\n            addToCache(this.props.id, clientHeight, \"clientsHeight\");\r\n            addToCache(this.props.id, scrollTop, \"scrollsTop\");\r\n            addToCache(this.props.id, scrollLeft, \"scrollsLeft\");\r\n            addToCache(this.props.id, scrollWidth, \"scrollsWidth\");\r\n            addToCache(this.props.id, scrollHeight, \"scrollsHeight\");\r\n        }\r\n\r\n        return temp;\r\n    };\r\n\r\n    getBoundarySize = (force) => {\r\n        if (this.transformRef.current) {\r\n            if (!force)\r\n                return getCachedBoundingRect(`${this.props.id}_transform`, this.transformRef.current);\r\n            else\r\n                return this.transformRef.current.getBoundingClientRect();\r\n        }\r\n    };\r\n\r\n    invalidateSize = (self = true, updateParent = true, updateChildren = true, sourceId) => {\r\n        if (this.callOverride(\"invalidateSize\", self, updateParent, updateChildren, sourceId))\r\n            return;\r\n\r\n        if (!sourceId)\r\n            sourceId = this.props.id;\r\n\r\n        if (self)\r\n            delete this.tempSize;\r\n\r\n        if (updateChildren) {\r\n            Object.values(this.allChildRefs).forEach(childRef => {\r\n                if (childRef && childRef.current && sourceId !== childRef.current.props.id) {\r\n                    childRef.current.invalidateSize(true, false, true, sourceId);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (updateParent) {\r\n            this.getParentsId().forEach(id => {\r\n                let parent = this.props.idMan.getItem(id);\r\n                if (parent && parent.mounted && sourceId !== parent.props.id) {\r\n                    parent.invalidateSize(true, false, false, sourceId);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onWindowSizeChange = () => {\r\n        this.addToSnap();\r\n        this.prepareRects();\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onWindowSizeChange();\r\n            }\r\n        });\r\n    };\r\n\r\n    getRenderChildData = (id) => {\r\n        return this.children[id];\r\n    };\r\n\r\n    arrangeIndex = (child, type) => {\r\n        let childData = this.getFromTempData(\"savedChildren\")[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let indexData = this.getNextIndexData(currentIndex);\r\n        switch (type) {\r\n            case \"forward\":\r\n                childData.zIndex = indexData.nextZIndex;\r\n                if (indexData.nextChild) {\r\n                    indexData.nextChild.zIndex = currentIndex;\r\n                    this.getRenderChildData(indexData.nextChild.props.id).zIndex = currentIndex;\r\n                }\r\n                break;\r\n            case \"backward\":\r\n                childData.zIndex = indexData.prevZIndex;\r\n                if (indexData.prevChild) {\r\n                    indexData.prevChild.zIndex = currentIndex;\r\n                    this.getRenderChildData(indexData.prevChild.props.id).zIndex = currentIndex;\r\n                }\r\n                break;\r\n            case \"front\":\r\n                childData.zIndex = indexData.lastZIndex + 1;\r\n                break;\r\n            case \"back\":\r\n                childData.zIndex = indexData.firstZIndex - 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    changeIndex = (child, index) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (currentIndex === index)\r\n            return;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let findIndex = (zIndex) => {\r\n            return allChildData.findIndex(a => {\r\n                return a.zIndex === zIndex;\r\n            });\r\n        };\r\n\r\n        let change = currentIndex < index ? -1 : 1;\r\n\r\n        if (findIndex(index)) // if false, means index is free to set\r\n        {\r\n            let startIndex = currentIndex < index ? findIndex(currentIndex) || 0 : findIndex(index);\r\n            let lastIndex = currentIndex < index ? findIndex(index) : findIndex(currentIndex) || 0 ;\r\n\r\n            for (let i = startIndex; i < lastIndex + 1; i++) {\r\n                let testChildData = allChildData[i];\r\n                testChildData.zIndex += change;\r\n                this.getRenderChildData(testChildData.props.id).zIndex = testChildData.zIndex;\r\n            }\r\n        }\r\n\r\n        childData.zIndex = index;\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    setChildZIndex = (childId, zIndex) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[childId];\r\n        childData.zIndex = zIndex;\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n    };\r\n\r\n    getNextIndexData = (currentIndex) => {\r\n        let children = Object.values(this.getFromTempData(\"savedChildren\") || {});\r\n        children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex) {\r\n                return 1;\r\n            } else if (a.zIndex === b.zIndex) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n        let result = {};\r\n        for (let i = 0; i < children.length; i++){\r\n            let child = children[i];\r\n\r\n            let childZIndex = child.zIndex;\r\n\r\n            if (i === 0) {\r\n                result.firstZIndex = childZIndex;\r\n            }\r\n\r\n            if (i === children.length - 1) {\r\n                result.lastZIndex = childZIndex;\r\n            }\r\n\r\n            if (result.nextChild === undefined && childZIndex > currentIndex){\r\n                result.nextChild = child;\r\n                result.nextZIndex = childZIndex;\r\n                continue;\r\n            }\r\n\r\n            if (childZIndex < currentIndex){\r\n                result.prevChild = child;\r\n                result.prevZIndex = childZIndex;\r\n                // continue;\r\n            }\r\n        }\r\n\r\n        if (!result.nextChild)\r\n            result.nextZIndex = result.lastZIndex + 1;\r\n        if (!result.prevChild)\r\n            result.prevZIndex = result.firstZIndex - 1;\r\n\r\n        if (result.lastZIndex === undefined)\r\n            result.lastZIndex = 0;\r\n\r\n        return result;\r\n    };\r\n\r\n    updateLayout = (callback) => {\r\n        if (this.callOverride(\"updateLayout\", callback))\r\n            return;\r\n\r\n        this.setState({reload: true}, callback);\r\n    };\r\n\r\n    isPointInclude = (x, y, forceCalculate) => {\r\n        let rect = this.getSize(false, forceCalculate);\r\n        return x >= rect.left && x <= rect.left + rect.width &&\r\n            y >= rect.top && y <= rect.top + rect.height;\r\n    };\r\n\r\n    addChild = (childElement, newId, newProps, callback, onChildMounted, fixed, keepChildren) => {\r\n        if (this.callOverride(\"addChild\", childElement, newId, newProps, callback, onChildMounted, fixed))\r\n            return;\r\n\r\n        if (!childElement.props.tagName && !childElement.type) {\r\n            throw new Error(\"childElement must pass tagName prop to AGL or be primitive type\");\r\n        }\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let props = newId? newProps: {...childElement.props};\r\n        let createdChild = this.createChildByData({\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props, keepChildren)\r\n        }, DynamicComponents, newId, onChildMounted, fixed);\r\n        this.children[props.id] = {\r\n            child: createdChild,\r\n            zIndex: lastZIndex + 1\r\n        };\r\n\r\n        this.props.griddata.savedChildren[props.id] = {\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props),\r\n            zIndex: this.children[props.id].zIndex\r\n        };\r\n\r\n        this.updateLayout(callback);\r\n        this.props.onChildAdd && this.props.onChildAdd();\r\n    };\r\n\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.callOverride(\"onBreakpointChange\", width, newBreakpointName, devicePixelRatio))\r\n            return;\r\n\r\n        let style = this.getCompositeFromData(\"style\");\r\n        let designStyle = this.getCompositeFromData(\"designStyle\");\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let transform = this.getCompositeFromData(\"transform\");\r\n        this.setStyle(style, undefined, undefined, true);\r\n        // this.setDesignStyle(designStyle, undefined, undefined, true);\r\n        this.setGridItemStyle(gridItemStyle, undefined, true);\r\n        this.setTransformStyle(transform, undefined, undefined, true);\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n            }\r\n        });\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    delete = (fromUndoRedo) => {\r\n        if (this.callOverride(\"delete\"))\r\n            return;\r\n\r\n        if (!this.props.parent)\r\n            return;\r\n\r\n        if (this.props.onItemPreDelete) {\r\n            let allow = this.props.onItemPreDelete(this);\r\n            if (!allow)\r\n                return;\r\n        }\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let childData = cloneObject(this.props.parent.getChildData(itemId));\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            }, (idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true);\r\n            });\r\n        }\r\n\r\n        this.clearItem();\r\n\r\n        this.props.parent.removeChildElement(this);\r\n\r\n        this.props.select.clearMiniMenu();\r\n    };\r\n\r\n    getChildData = (childId) => {\r\n        return this.props.griddata.savedChildren[childId];\r\n    };\r\n\r\n    getOverrideProp = (funcName) => {\r\n        let key = Object.keys(this.props).find(key => {\r\n            return key === `${funcName}Override`;\r\n        });\r\n\r\n        return this.props[key];\r\n    };\r\n\r\n    getAllOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"Override\")) {\r\n                result[key] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    getAllChildOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"ChildOverride\")) {\r\n                result[key.replace(\"ChildOverride\", \"Override\")] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    clearItem = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        this.props.gridLine.removeGridLine(this.props.id);\r\n        this.props.snap.removeSnap(this.props.id);\r\n        this.state.selected && this.props.select.updateResizePanes();\r\n        this.state.selected && this.props.select.updateHelpSizeLines();\r\n        this.state.selected && this.props.select.setInspector();\r\n        if (this.state.selected)\r\n            this.props.select.selectedItem = false;\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.clearItem();\r\n            }\r\n        });\r\n    };\r\n\r\n    getClearProps = (props, keepChildren) => {\r\n        delete props.breakpointmanager;\r\n        delete props.undoredo;\r\n        delete props.dragdrop;\r\n        delete props.select;\r\n        delete props.editor;\r\n        delete props.snap;\r\n        delete props.idMan;\r\n        delete props.input;\r\n        delete props.copyMan;\r\n        delete props.anchorMan;\r\n        delete props.aglRef;\r\n        delete props.parent;\r\n        delete props.window;\r\n        delete props.document;\r\n        delete props.viewRef;\r\n        delete props.aglComponent;\r\n        if (!keepChildren)\r\n            delete props.children;\r\n        delete props.allChildRefs;\r\n        delete props.gridLine;\r\n        delete props.page;\r\n        delete props.gridEditorRef;\r\n        delete props.onChildMounted;\r\n\r\n        Object.keys(this.getAllOverrideProps(props)).forEach(key => {\r\n            delete props[key];\r\n        });\r\n\r\n        // Object.keys(props).forEach(key => {\r\n        //     if (typeof props[key] === \"function\")\r\n        //         delete props[key];\r\n        // });\r\n\r\n        return props;\r\n    };\r\n\r\n    removeChildElement = (childElement, callback) => {\r\n        if (this.hasOverride(\"removeChildElement\"))\r\n            return this.callOverride(\"removeChildElement\", childElement);\r\n\r\n        delete this.children[childElement.props.id];\r\n        delete this.allChildRefs[childElement.props.id];\r\n        delete this.props.griddata.savedChildren[childElement.props.id];\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n            this.updateLayout(callback);\r\n        }, 0);\r\n    };\r\n\r\n    // Can be remove carefully\r\n    hide = () => {\r\n        this.setState({hide: true});\r\n    };\r\n\r\n    // Can be remove carefully\r\n    show = () => {\r\n        this.setState({hide: false});\r\n    };\r\n\r\n    onMouseOver = (e, fromEnter) => {\r\n        if (!this.props.dragdrop.getDragging()) {\r\n            e.stopPropagation();\r\n\r\n            // if (this.getFromTempData(\"selected\"))\r\n            //     return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            this.setMouseOverForNonDragging(this);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n        } else {\r\n            if (this.props.isPage)\r\n                return;\r\n\r\n            if (this.props.dragdrop.getDragging().props.id === this.props.id)\r\n                return;\r\n\r\n            e.stopPropagation();\r\n\r\n            let rect = getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n            if (e.clientX < rect.x - 1 || e.clientX > (rect.x + rect.width) ||\r\n                e.clientY < rect.y - 1 || e.clientY > (rect.y + rect.height))\r\n                return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n\r\n            this.setMouseOver(this, {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            }, (draggingItem, mouseOver) => {\r\n                // on new parent state changed\r\n                draggingItem.toggleHelpLines(this);\r\n            });\r\n        }\r\n    };\r\n\r\n    setMouseOverForNonDragging = () => {\r\n        if (this.hasOverride(\"setMouseOverForNonDragging\"))\r\n            return this.callOverride(\"setMouseOverForNonDragging\");\r\n\r\n        this.props.dragdrop.setMouseOverForNonDragging(this);\r\n    };\r\n\r\n    setItemHover = (hover) => {\r\n        if (hover)\r\n            this.props.select.updateHover(this, this.getSize(false));\r\n        else\r\n            this.props.select.updateHover(this, undefined, true);\r\n    };\r\n\r\n    onMouseEnter = (e) => {\r\n        this.onMouseOver(e, true);\r\n    };\r\n\r\n    onMouseOut = (e, outAllParent) => {\r\n        if (outAllParent && this.props.parent && this.props.parent.onMouseOut)\r\n            this.props.parent.onMouseOut(e);\r\n\r\n        this.setItemHover(false);\r\n    };\r\n\r\n    prepareRects = (forceRect, forceGridLines, callback, gridType) => {\r\n        if (this.hasOverride(\"prepareRects\"))\r\n            return this.callOverride(\"prepareRects\", forceRect, forceGridLines);\r\n\r\n        let rect = this.getSize(false, forceRect);\r\n\r\n        if (forceGridLines || !this.props.gridLine.isPrepared(this.props.id)) {\r\n            // if (this.props.gridLine.hasGridLine(this.props.id)) {\r\n                this.props.gridLine.prepareRects(this.props.id);\r\n            // }\r\n            // else {\r\n            //     this.toggleGridLines(true, () => {\r\n            //         this.props.gridLine.prepareRects(this.props.id);\r\n            //         if (callback)\r\n            //             callback(rect);\r\n            //     }, gridType || \"B\");\r\n            // }\r\n        }\r\n\r\n        return rect;\r\n    };\r\n\r\n    onChildDrop = (child, newId, fixed, onNewChildMounted) => {\r\n        if (this.callOverride(\"onChildDrop\", child, newId, fixed, onNewChildMounted))\r\n            return;\r\n\r\n        let childRect = child.getSize(false);\r\n        let thisRect = this.getSize(false, true);\r\n\r\n        let calcResult, gridItemStyle, coordinates, newProps;\r\n\r\n        if (!newId) {\r\n            let relativeY = childRect.top - thisRect.top;\r\n            if (fixed) {\r\n                relativeY = childRect.top - this.props.breakpointmanager.getWindowHeight() / 8;\r\n            }\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                childRect.left - thisRect.left, relativeY, this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n        else\r\n        {\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                thisRect.width / 2 - childRect.width / 2,\r\n                thisRect.height / 2 - childRect.height / 2,\r\n                this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n\r\n        gridItemStyle = calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n        if (!newId) {\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                child.setProps(\"width\", childRect.width, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                child.setProps(\"width\", \"auto\", undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                child.setProps(\"height\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n                child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        } else {\r\n            newProps = {...child.props};\r\n            newProps.griddata = cloneObject(newProps.griddata);\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, newProps.griddata, undefined,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            this.setTempData(\"selected\", true, newProps.griddata);\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                this.setProps(\"width\", childRect.width, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                this.setProps(\"width\", \"auto\", undefined, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                this.setProps(\"height\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        }\r\n\r\n        child.clearFromAllBp(\"style\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n        child.clearFromAllBp(\"gridItemStyle\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.addChild(child, newId, newProps, () => {\r\n            let newChild = this.allChildRefs[newId? newProps.id: child.props.id].current;\r\n            newChild.setGridItemStyle(gridItemStyle,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            if (!newId) {\r\n                newChild.state.selected && newChild.toggleHelpLines(this);\r\n            }\r\n\r\n        }, (agl) => {\r\n            window.requestAnimationFrame(() => {\r\n                this.invalidateSize(true, true, true);\r\n                window.requestAnimationFrame(() => {\r\n                    this.props.select.onScrollItem();\r\n                });\r\n            });\r\n            if (onNewChildMounted)\r\n                onNewChildMounted(agl);\r\n        }, fixed, undefined);\r\n    };\r\n\r\n    onChildLeave = (child, callback) => {\r\n        if (this.hasOverride(\"onChildLeave\"))\r\n            return this.callOverride(\"onChildLeave\", child);\r\n\r\n        this.removeChildElement(child, callback);\r\n        child.removeIdAndChildrenId();\r\n    };\r\n\r\n    removeIdAndChildrenId = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.removeIdAndChildrenId();\r\n            }\r\n        });\r\n    };\r\n\r\n    nonePointerEventForChildren = (parentDragging) => {\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onParentDragging(parentDragging);\r\n            }\r\n        });\r\n    };\r\n\r\n    onParentDragging = (parentDragging) => {\r\n        this.nonePointerEventForChildren(parentDragging);\r\n        if (!parentDragging) {\r\n            this.setRuntimeStyle();\r\n            return;\r\n        }\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.pointerEvents = \"none\";\r\n        this.setRuntimeStyle(runtimeStyle);\r\n    };\r\n\r\n    onDragStart = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDragStart\", e, group, callGroup))\r\n            return;\r\n\r\n        if (this.getFromTempData(\"dontMove\") || this.resizing || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        if (!group)\r\n            this.props.dragdrop.setDragging(this);\r\n\r\n        this.nonePointerEventForChildren(true);\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        if (!this.moveWithMouse) {\r\n            runtimeStyle.top = thisRect.top;\r\n            runtimeStyle.left = thisRect.left;\r\n        } else {\r\n            runtimeStyle.top = e.clientY - thisRect.height / 2;\r\n            runtimeStyle.left = e.clientX - thisRect.width / 2;\r\n        }\r\n\r\n        this.dragData = {\r\n            firstPos: {\r\n                top: runtimeStyle.top,\r\n                left: runtimeStyle.left\r\n            },\r\n            firstBoundaryPos: this.getBoundarySize() && {\r\n                top: this.moveWithMouse? e.clientX - thisRect.width / 2 : this.getBoundarySize().top,\r\n                left: this.moveWithMouse? e.clientY - thisRect.height / 2 : this.getBoundarySize().left\r\n            },\r\n            x: runtimeStyle.left,\r\n            y: runtimeStyle.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n        this.draggingStart = true;\r\n        this.setDraggingState(true, true, undefined, runtimeStyle);\r\n\r\n        this.props.select.updateMenu();\r\n        this.props.select.clearMiniMenu();\r\n\r\n        if (this.props.dragdrop.getMouseOverForNonDragging()) {\r\n            this.props.dragdrop.getMouseOverForNonDragging().onMouseOver(e);\r\n        }\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStart(e, this);\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.hasOverride(\"setMouseOver\"))\r\n            return this.callOverride(\"setMouseOver\", item, positionData, callback);\r\n\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    onDrag = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDrag\", e, group, callGroup))\r\n            return;\r\n\r\n        if (!this.props.parent.children[this.props.id]) {\r\n            return;\r\n        }\r\n        if (this.resizing || !this.state.draggingStart) {\r\n            if (this.props.dragdrop.getDragging()) {\r\n                this.props.dragdrop.setDragging();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.dragData.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.dragData.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.top = this.dragData.y;\r\n        runtimeStyle.left = this.dragData.x;\r\n\r\n        // For snaps\r\n        let boundarySize = this.getBoundarySize();\r\n        if (boundarySize)\r\n            boundarySize = {\r\n                top: this.dragData.firstBoundaryPos.top + (this.dragData.y - this.dragData.firstPos.top),\r\n                left: this.dragData.firstBoundaryPos.left + (this.dragData.x - this.dragData.firstPos.left),\r\n                width: boundarySize.width,\r\n                height: boundarySize.height\r\n            };\r\n        else\r\n            boundarySize = runtimeStyle;\r\n\r\n        if (!isFixed(this) && !group)\r\n            this.checkSnapOnDrag(runtimeStyle, boundarySize);\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.props.select.updateResizePanes(this, runtimeStyle);\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                runtimeStyle.top,\r\n                runtimeStyle.left,\r\n                window.innerHeight - runtimeStyle.top - runtimeStyle.height,\r\n                window.innerWidth - runtimeStyle.left - runtimeStyle.width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                cloneObject(runtimeStyle), this.state.dragging);\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDrag(e, this);\r\n    };\r\n\r\n    updateGridLines = (top, left, bottom, right, gridType) => {\r\n        let grid = this.getFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top,\r\n                left,\r\n                bottom,\r\n                right,\r\n            }\r\n        )\r\n    };\r\n\r\n    onDragStop = (e, group, callGroup) => {\r\n        if (this.hasOverride(\"onDragStop\"))\r\n            return this.callOverride(\"onDragStop\", e, group, callGroup);\r\n\r\n        if (this.resizing || !this.state.draggingStart || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStop(e, this);\r\n\r\n        if (group)\r\n            // this.props.parent.prepareRects(true);\r\n            this.props.parent.prepareRects();\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n\r\n        this.props.snap.drawSnap();\r\n        this.getSize(true, true);\r\n        if (group || !this.props.dragdrop.setDraggingStop()){\r\n            let parentRect = this.props.parent.getSize(false);\r\n            this.setPosition(\r\n                group,\r\n                left - parentRect.left,\r\n                top - parentRect.top,\r\n                this.dragData.firstPos.left - parentRect.left,\r\n                this.dragData.firstPos.top - parentRect.top, width, height, parentRect);\r\n            return;\r\n        } else if (!group) {\r\n            this.dropped = true;\r\n        }\r\n\r\n        // this.setState({dragging: false, draggingStart: false});\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                top, left,\r\n                window.innerHeight - top - height,\r\n                window.innerWidth - left - width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateMiniMenu();\r\n    };\r\n\r\n    setPosition = (group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                   width, height, parentRect, fromUndoRedo) => {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let redoData = [group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect];\r\n            let undoData = [group, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                width, height, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setPosition\"))\r\n            return this.callOverride(\"setPosition\",\r\n                group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect, fromUndoRedo);\r\n\r\n        let {gridItemStyle, coordinates} = this.calculateGridItem(relativeX, relativeY, this.props.parent,\r\n            width, height, parentRect);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\"){\r\n            this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n        } else {\r\n            this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n        }\r\n        if (this.getCompositeFromData(\"style\").height === \"auto\")\r\n            this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        else {\r\n            this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n            this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        }\r\n\r\n        this.setGridItemStyle(gridItemStyle);\r\n\r\n        this.nonePointerEventForChildren(false);\r\n        this.setRuntimeStyle();\r\n        // this.setState({dragging: false, draggingStart: false}, () => {\r\n        //     this.addToSnap();\r\n        // });\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                {top, left, width, height}, this.state.dragging);\r\n\r\n        this.dropped = false;\r\n\r\n        // this.props.select.updateSize();\r\n        // this.props.select.updateResizePanes(this, {top, left, width, height});\r\n        // this.props.select.updateMiniMenu();\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.invalidateSize(false, true, true);\r\n    };\r\n\r\n    setDraggingState = (dragging, draggingStart, callback, rect) => {\r\n        let fakeStyle = cloneObject({\r\n            ...this.getCompositeFromData(\"style\"),\r\n            ...this.getCompositeFromData(\"gridItemStyle\"),\r\n        });\r\n        this.setState({dragging, draggingStart, fakeStyle}, callback);\r\n    };\r\n\r\n    checkSnapOnDrag = (runtimeStyle, boundarySize) => {\r\n        if (this.callOverride(\"checkSnapOnDrag\", runtimeStyle, boundarySize))\r\n            return;\r\n\r\n        let snapDelta1 = this.getSnapDelta(\r\n            boundarySize.top, boundarySize.left);\r\n        let snapDelta2 = this.getSnapDelta(\r\n            boundarySize.top + boundarySize.height/2, boundarySize.left + boundarySize.width/2);\r\n        let snapDelta3 = this.getSnapDelta(\r\n            boundarySize.top + boundarySize.height, boundarySize.left + boundarySize.width);\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2.snapV? snapDelta2.deltaX:\r\n                snapDelta1.snapV? snapDelta1.deltaX:\r\n                    snapDelta3.snapV? snapDelta3.deltaX: 0,\r\n            deltaY: snapDelta2.snapH? snapDelta2.deltaY:\r\n                snapDelta1.snapH? snapDelta1.deltaY:\r\n                    snapDelta3.snapH? snapDelta3.deltaY: 0,\r\n            snapH: (snapDelta2.snapH || snapDelta1.snapH) || snapDelta3.snapH,\r\n            snapV: (snapDelta2.snapV || snapDelta1.snapV) || snapDelta3.snapV\r\n        };\r\n\r\n        runtimeStyle.left += snapDelta.deltaX;\r\n        runtimeStyle.top += snapDelta.deltaY;\r\n        if (boundarySize !== runtimeStyle) {\r\n            boundarySize.left += snapDelta.deltaX;\r\n            boundarySize.top += snapDelta.deltaY;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: boundarySize.left,\r\n            p2: boundarySize.left + boundarySize.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: boundarySize.top,\r\n            p2: boundarySize.top + boundarySize.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    getSnapDelta = (top, left) => {\r\n        let parentGridLines = [];\r\n        if (this.props.parent) {\r\n            if (this.resizing) {\r\n                parentGridLines = this.props.parent.getGridLineSnaps();\r\n            } else {\r\n                // dragging\r\n                if (this.props.dragdrop.mouseOver &&\r\n                    this.props.gridLine.hasGridLine(this.props.dragdrop.mouseOver.props.id))\r\n                    parentGridLines = this.props.dragdrop.mouseOver &&\r\n                        this.props.dragdrop.mouseOver.getGridLineSnaps();\r\n            }\r\n        }\r\n\r\n        let {snapH, snapV} =\r\n            this.props.snap.checkSnap(top, left, this.props.id, parentGridLines);\r\n\r\n        let deltaX = 0;\r\n        let deltaY = 0;\r\n        if (snapH) {\r\n            deltaY = snapH.value - top;\r\n        }\r\n        if (snapV) {\r\n            deltaX = snapV.value - left;\r\n        }\r\n\r\n        return {\r\n            deltaX, deltaY, snapH, snapV\r\n        }\r\n    };\r\n\r\n    setDocks = (top, left, bottom, right, auto, breakpointName, dontCalculate) => {\r\n        this.setDataInBreakpoint(\"docks\", {top, left, bottom, right}, undefined, breakpointName);\r\n        this.setTempData(\"autoDock\", auto);\r\n\r\n        if (!this.props.parent || dontCalculate)\r\n            return;\r\n\r\n        this.props.parent.prepareRects();\r\n        let thisRect = this.getSize(false);\r\n        let parentRect = this.props.parent.getSize(false);\r\n        let {gridItemStyle} =\r\n            this.calculateGridItem(\r\n                thisRect.left - parentRect.left,\r\n                thisRect.top - parentRect.top,\r\n                this.props.parent,\r\n                thisRect.width,\r\n                thisRect.height,\r\n                parentRect\r\n            );\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width === \"auto\")\r\n        {\r\n            this.setStyleParam(\"width\", `${this.getSize(false).width}px`, undefined, undefined, true);\r\n        }\r\n        else if (gridItemStyle.justifySelf === \"stretch\")\r\n        {\r\n            this.setStyleParam(\"width\", \"auto\", undefined, undefined, true);\r\n        }\r\n    };\r\n\r\n    getDocks = () => {\r\n        return this.getFromData(\"docks\");\r\n    };\r\n\r\n    getBaseDocks = () => {\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return {\r\n            top: gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\",\r\n            bottom: gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\",\r\n            left: gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\",\r\n            right: gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\",\r\n        }\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        return this.props.select.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    calculateGridItem = (relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateGridItem\", relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = this.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let gridArea, coordinates;\r\n        if (isFixed(this)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.height,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.width\r\n            }\r\n        } else {\r\n            let result = this.calculateGridArea(\r\n                parentRect.left + relativeX,\r\n                parentRect.top + relativeY,\r\n                width,\r\n                height,\r\n                parent,\r\n                parentRect\r\n            );\r\n            gridArea = result.gridArea;\r\n            coordinates = result.coordinates;\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        this.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let oldGridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let gridItemStyle = cloneObject(oldGridItemStyle);\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(this);\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        let cx2IsLastLine = gridArea.x2 === xLineRef.length || isFixed(this);\r\n\r\n        let widthForPercent = coordinates.cx2 - coordinates.cx1/* + (cx2IsLastLine?1:0)*/;\r\n        let heightForPercent = coordinates.cy2 - coordinates.cy1/* + (cy2IsLastLine?1:0)*/;\r\n\r\n        let autoDock = this.getFromTempData(\"autoDock\");\r\n        let docks = this.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2) && relativeY >= 0) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                widthForPercent,\r\n                \"px\");\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                `${(relativeY - coordinates.cy1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginTop) || \"px\");\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginLeft) || \"%\");\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginBottom) || \"px\");\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginRight) || \"%\");\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        gridItemStyle.widthForPercent = widthForPercent;\r\n        gridItemStyle.heightForPercent = heightForPercent;\r\n\r\n        /*if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // this is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n            `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    getPxOrPcOrValue = (value, parentValue, unit) => {\r\n        if (unit === \"px\") {\r\n            return `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            return `${parseFloat(value) / parentValue * 100}%`;\r\n        } else {\r\n            return value\r\n        }\r\n    };\r\n\r\n    calculateChildGridItem = (child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateChildGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateChildGridItem\",child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        if (isFixed(child)) {\r\n            if (relativeY < 0) relativeY = 0;\r\n            if (relativeY > parentRect.scrollHeightMinusPadding - height)\r\n                relativeY = parentRect.scrollHeightMinusPadding - height;\r\n            if (relativeX < 0) relativeX = 0;\r\n            if (relativeX > parentRect.scrollWidthMinusPadding - width)\r\n                relativeX = parentRect.scrollWidthMinusPadding - width;\r\n        }\r\n\r\n        let gridArea, coordinates;\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.height,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.width\r\n            }\r\n        } else {\r\n            let result = this.calculateGridArea(\r\n                parentRect.left + relativeX,\r\n                parentRect.top + relativeY,\r\n                width,\r\n                height,\r\n                parent,\r\n                parentRect\r\n            );\r\n            gridArea = result.gridArea;\r\n            coordinates = result.coordinates;\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let oldGridItemStyle = child.getCompositeFromData(\"gridItemStyle\");\r\n        let gridItemStyle = cloneObject(oldGridItemStyle);\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        let cx2IsLastLine = gridArea.x2 === xLineRef.length || isFixed(child);\r\n\r\n        let widthForPercent = coordinates.cx2 - coordinates.cx1 + (cx2IsLastLine?1:0);\r\n        let heightForPercent = coordinates.cy2 - coordinates.cy1 + (cy2IsLastLine?1:0);\r\n\r\n        let autoDock = child.getFromTempData(\"autoDock\");\r\n        let docks = child.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2) && relativeY >= 0) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                widthForPercent,\r\n                \"px\");\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeY - coordinates.cy1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginTop) || \"px\");\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginLeft) || \"%\");\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginBottom) || \"px\");\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginRight) || \"%\");\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        gridItemStyle.widthForPercent = widthForPercent;\r\n        gridItemStyle.heightForPercent = heightForPercent;\r\n\r\n        /*\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n                `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    coordinateToRelative = (coordinates, parentRect) => {\r\n        coordinates.cx1 -= parentRect.left;\r\n        coordinates.cx2 -= parentRect.left;\r\n        coordinates.cy1 -= parentRect.top;\r\n        coordinates.cy2 -= parentRect.top;\r\n    };\r\n\r\n    coordinateToAbsolute = (coordinates, parentRect) => {\r\n        coordinates.cx1 += parentRect.left;\r\n        coordinates.cx2 += parentRect.left;\r\n        coordinates.cy1 += parentRect.top;\r\n        coordinates.cy2 += parentRect.top;\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        } else {\r\n            return \"px\";\r\n        }\r\n    };\r\n\r\n    getTopLeft = (force) => {\r\n        let size = this.getSize(false, force);\r\n        return {\r\n            top: size.top,\r\n            left: size.left\r\n        }\r\n    };\r\n\r\n    pageResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n\r\n        // this.onSelect(true);\r\n\r\n\r\n        this.resizing = true;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.width = this.getSize().x;\r\n        runtimeStyle.height = this.getSize().y;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstLeft: this.getSize().left,\r\n            top: this.getSize().top,\r\n            left: this.getSize().left\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        this.props.select.activateHover(false);\r\n\r\n        if (this.props.onPageResizeStart)\r\n            this.props.onPageResizeStart();\r\n\r\n        window.requestAnimationFrame(this.pageResizeCalculate);\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResizeStart\", e, dir, delta, group))\r\n            return;\r\n\r\n        if (this.resizing)\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        this.resizing = true;\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.maxWidth = \"unset\";\r\n        runtimeStyle.maxHeight = \"unset\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        runtimeStyle.top = thisRect.top;\r\n        runtimeStyle.left = thisRect.left;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstY: runtimeStyle.height,\r\n            firstTop: runtimeStyle.top,\r\n            firstLeft: runtimeStyle.left,\r\n            lastWidth: runtimeStyle.width,\r\n            lastHeight: runtimeStyle.height,\r\n            firstBoundaryWidth: this.getBoundarySize() && this.getBoundarySize().width,\r\n            firstBoundaryHeight: this.getBoundarySize() && this.getBoundarySize().height,\r\n            firstBoundaryTop: this.getBoundarySize() && this.getBoundarySize().top,\r\n            firstBoundaryLeft: this.getBoundarySize() && this.getBoundarySize().left\r\n        };\r\n\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        this.props.select.clearMiniMenu();\r\n        this.props.select.activateHover(false);\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    pageResize = (e, dir, delta) => {\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let deltaX = delta.x;\r\n        let minWidth = this.props.breakpointmanager.getMinWidth();\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= (-deltaX* 2 + minWidth))\r\n                deltaX = -(this.resizeData.firstX - minWidth) / 2;\r\n\r\n            runtimeStyle.width = this.resizeData.firstX + deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft - deltaX;\r\n            if (this.resizeData.firstLeft - deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= (deltaX * 2 + minWidth))\r\n                deltaX = (this.resizeData.firstX - minWidth) / 2;\r\n            runtimeStyle.width = this.resizeData.firstX - deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft + deltaX;\r\n            if (this.resizeData.firstLeft + deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n\r\n        this.updateGridLines(\r\n            this.resizeData.top,\r\n            this.resizeData.left,\r\n            window.innerHeight - this.resizeData.top - runtimeStyle.height,\r\n            window.innerWidth - this.resizeData.left - runtimeStyle.width,\r\n            \"A\"\r\n        );\r\n\r\n        this.updatePageAdjustments();\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n        };\r\n    };\r\n\r\n    updatePageAdjustments = () => {\r\n        this.backContainerRef.current.updateAdjustments();\r\n    };\r\n\r\n    pageResizeCalculate = () => {\r\n        if (this.callOverride(\"pageResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.pageResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle} = this.resizeData.onResizeData;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        if (this.props.onPageResize) {\r\n            this.props.onPageResize(runtimeStyle.width, this);\r\n        }\r\n\r\n        window.requestAnimationFrame(this.pageResizeCalculate);\r\n    };\r\n\r\n    onResize = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResize\", e, dir, delta, group))\r\n            return;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let degree = (this.getCompositeFromData(\"transform\") || {}).rotateDegree || 0;\r\n\r\n        let finalDelta = getResizeDelta(degree, dir, delta);\r\n        runtimeStyle.left = this.resizeData.firstLeft + finalDelta.left;\r\n        runtimeStyle.top = this.resizeData.firstTop + finalDelta.top;\r\n        runtimeStyle.width = this.resizeData.firstX + finalDelta.width;\r\n        runtimeStyle.height = this.resizeData.firstY + finalDelta.height;\r\n\r\n        let rect = {\r\n            top: runtimeStyle.top,\r\n            left: runtimeStyle.left,\r\n            width: runtimeStyle.width,\r\n            height: runtimeStyle.height\r\n        };\r\n\r\n        // For snaps\r\n        let boundarySize = this.getBoundarySize();\r\n\r\n        if (!group && !boundarySize)\r\n            this.checkSnapOnResize(rect, dir, this.resizeData);\r\n\r\n        this.props.select.updateResizePanes(this, rect);\r\n\r\n        if (!group)\r\n            this.setResizeHelpData({\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                width: (dir.includes('w') || dir.includes('e')) && rect.width,\r\n                height: (dir.includes('n') || dir.includes('s')) && rect.height,\r\n            });\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                rect.top,\r\n                rect.left,\r\n                window.innerHeight - rect.top - rect.height,\r\n                window.innerWidth - rect.left - rect.width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n            rect, this.state.dragging);\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n        };\r\n    };\r\n\r\n    onResizeCalculate = () => {\r\n        if (this.callOverride(\"onResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.onResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle, animationCss} = this.resizeData.onResizeData;\r\n        // runtimeStyle.width = this.resizeData.lastWidth;\r\n        // runtimeStyle.height = this.resizeData.lastHeight;\r\n\r\n        this.setRuntimeStyle(runtimeStyle/*, animationCss*/);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    setResizeHelpData = (resizeHelpData) => {\r\n        this.setState({resizeHelpData})\r\n    };\r\n\r\n    pageResizeStop = (e, dir, delta) => {\r\n        let {width, height} = this.state.runtimeStyle;\r\n        this.props.select.activateHover(true);\r\n        this.setPageSize(this.resizeData.top, this.resizeData.left, width, height);\r\n    };\r\n\r\n    setPageSize = (top, left, width, height) => {\r\n        this.setProps(\"width\", width, undefined, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n       /* if (this.resizeData.left === 50) {\r\n            let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n            gridItemStyle.marginLeft = \"50px\";\r\n            this.setGridItemStyle(gridItemStyle, this.props.breakpointmanager.getHighestBpName());\r\n        } else {\r\n            let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n            gridItemStyle.marginLeft = 0;\r\n            this.setGridItemStyle(gridItemStyle, this.props.breakpointmanager.getHighestBpName());\r\n        }*/\r\n\r\n        this.setRuntimeStyle();\r\n        this.invalidateSize();\r\n        // this.setState({dragging: false}, () => {\r\n        //     this.addToSnap();\r\n        // });\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.resizing = false;\r\n\r\n        this.updateGridLines(\r\n            top, left,\r\n            window.innerHeight - top - height,\r\n            window.innerWidth - left - width,\r\n            \"A\"\r\n        );\r\n\r\n        this.props.select.onScrollItem(this);\r\n        // this.prepareRects(true);\r\n        this.prepareRects();\r\n\r\n        if (this.props.onPageResizeStop)\r\n            this.props.onPageResizeStop(width, this);\r\n\r\n        this.resizeData = undefined;\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta, group) => {\r\n        if (this.hasOverride(\"onResizeStop\"))\r\n            return this.callOverride(\"onResizeStop\", e, dir, delta, group);\r\n        this.resizing = false;\r\n\r\n        if (this.props.onItemPreResizeStop) {\r\n            this.props.onItemPreResizeStop(this, e, dir, delta, this.state.runtimeStyle);\r\n        }\r\n        this.getSize(true, true);\r\n\r\n        if (group)\r\n            this.props.parent.prepareRects();\r\n        // this.props.parent.prepareRects(true);\r\n\r\n        let parentRect = this.props.parent.getSize(false);\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n        // width = this.resizeData.lastWidth;\r\n        // height = this.resizeData.lastHeight;\r\n        this.setSize(\r\n            dir, delta, group,\r\n            left - parentRect.left,\r\n            top - parentRect.top, width, height,\r\n            this.resizeData.firstLeft - parentRect.left,\r\n            this.resizeData.firstTop - parentRect.top,\r\n            this.resizeData.firstX,\r\n            this.resizeData.firstY, parentRect\r\n        );\r\n        this.props.select.updateMiniMenu();\r\n        this.props.select.activateHover(true);\r\n    };\r\n\r\n    setSize = (dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n               firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo) =>\r\n    {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let redoData = [dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect];\r\n            let undoData = [dir, delta, group, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, undefined,\r\n                undefined, undefined, undefined, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setSize\"))\r\n            return this.callOverride(\"setSize\",\r\n                dir, delta, group, relativeX, relativeY, height, width, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo);\r\n\r\n        let gridItemStyle, coordinates;\r\n        let calcResult = this.calculateGridItem(relativeX, relativeY, this.props.parent, width, height);\r\n\r\n        gridItemStyle = this.props.autoConstraintsOff?  this.getCompositeFromData(\"gridItemStyle\"):\r\n            calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width !== \"auto\")\r\n            this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n        else\r\n            this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n\r\n        if (this.getCompositeFromData(\"style\").minWidth) {\r\n            this.setProps(\"minWidth\", width, coordinates, undefined, undefined, true);\r\n        }\r\n        if (this.getCompositeFromData(\"style\").maxWidth) {\r\n            this.setProps(\"maxWidth\", width, coordinates, undefined, undefined, true);\r\n        }\r\n\r\n        if (this.getCompositeFromData(\"style\").height !== \"auto\") {\r\n            this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n        }\r\n        if (!this.getFromTempData(\"isVerticalSection\")) {\r\n            if (this.getCompositeFromData(\"style\").minHeight) {\r\n                this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n            }\r\n            if (this.getCompositeFromData(\"style\").maxHeight) {\r\n                this.setProps(\"maxHeight\", height, coordinates, undefined, undefined, true);\r\n            }\r\n        }\r\n\r\n        if (!this.getFromTempData(\"isSection\"))\r\n            this.setGridItemStyle(gridItemStyle);\r\n        this.setRuntimeStyle();\r\n        this.setResizeHelpData();\r\n\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.props.snap.drawSnap();\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                this.getSize(false).top, this.getSize(false).left,\r\n                window.innerHeight - this.getSize(false).top - height,\r\n                window.innerWidth - this.getSize(false).left - width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                this.getSize(false), this.state.dragging);\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.resizeData = undefined;\r\n\r\n        this.invalidateSize(false, true, true);\r\n    };\r\n\r\n    checkSnapOnResize = (runtimeStyle, dir, resizeData) => {\r\n        if (this.callOverride(\"checkSnapOnResize\", runtimeStyle, dir, resizeData))\r\n            return;\r\n\r\n        let snapDelta1, snapDelta2;\r\n        if (dir.includes(\"n\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"s\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top + runtimeStyle.height, runtimeStyle.left);\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"e\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left + runtimeStyle.width);\r\n        }\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2? snapDelta2.deltaX: 0,\r\n            deltaY: snapDelta1? snapDelta1.deltaY: 0,\r\n            snapH: snapDelta1 && snapDelta1.snapH,\r\n            snapV: snapDelta2 && snapDelta2.snapV\r\n        };\r\n\r\n        if (dir.includes(\"n\")) {\r\n            runtimeStyle.height -= snapDelta.deltaY;\r\n            runtimeStyle.top += snapDelta.deltaY;\r\n        } else if (dir.includes(\"s\")) {\r\n            runtimeStyle.height += snapDelta.deltaY;\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            runtimeStyle.width -= snapDelta.deltaX;\r\n            runtimeStyle.left += snapDelta.deltaX;\r\n        } else if (dir.includes(\"e\")) {\r\n            runtimeStyle.width += snapDelta.deltaX;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: runtimeStyle.left,\r\n            p2: runtimeStyle.left + runtimeStyle.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: runtimeStyle.top,\r\n            p2: runtimeStyle.top + runtimeStyle.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    setProps = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setProps\"))\r\n            return this.callOverride(\"setProps\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        if (prop === \"width\" || prop === \"height\" ||\r\n            prop === \"minWidth\" || prop === \"minHeight\" ||\r\n            prop === \"maxWidth\" || prop === \"maxHeight\")\r\n        {\r\n            this.setNewSize(prop, value, gridCoordinates, data, breakpointName, dontAddToSnap);\r\n        } else {\r\n            this.setDataInBreakpoint(prop, value, data, breakpointName);\r\n        }\r\n    };\r\n\r\n    setDataInBreakpoint = (prop, value, data, breakpointName) => {\r\n        this.props.breakpointmanager.setData(data || this.props.griddata, prop, value, breakpointName);\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setTempData = (prop, value, data) => {\r\n        let dataToWrite = data || this.props.griddata;\r\n        dataToWrite[prop] = value;\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getFromTempData = (prop, data) => {\r\n        let dataToRead = data || this.props.griddata;\r\n        return dataToRead[prop];\r\n    };\r\n\r\n    hasDataInBreakPoint = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .hasDataInBreakPoint(data || this.props.griddata, prop, breakpointName);\r\n    };\r\n\r\n    getFromData = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .getFromData(data || this.props.griddata, prop, breakpointName)\r\n    };\r\n\r\n    getCompositeFromData = (prop, data) => {\r\n        return this.props.breakpointmanager\r\n            .getCompositeFromData(data || this.props.griddata, prop, undefined)\r\n    };\r\n\r\n    setNewSize = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setNewSize\"))\r\n            return this.callOverride(\"setNewSize\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        let oldStyle = this.getCompositeFromData(\"style\", data, breakpointName);\r\n        let oldValue = oldStyle && oldStyle[prop];\r\n\r\n        if (value === undefined) {\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        if (!oldValue || (!this.isPercent(oldValue) && !this.isViewRatio(oldValue)) ||\r\n            value === \"auto\" || isNaN(value)) {\r\n            if (!isNaN(value)) {\r\n                value+=\"px\";\r\n            }\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        if (isNaN(value) && value.includes('px'))\r\n            value = parseFloat(value.replace('px', ''));\r\n\r\n        if (this.isPercent(oldValue)) {\r\n            let parentRect = {\r\n                width: gridCoordinates? (gridCoordinates.cx2 - gridCoordinates.cx1): window.innerWidth,\r\n                height: gridCoordinates?(gridCoordinates.cy2 - gridCoordinates.cy1): window.innerHeight\r\n            };\r\n            let newValue = (value / parentRect[this.getParentProps(prop)] * 100).toString() + \"%\";\r\n            this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n        } else if (this.isViewRatio(oldValue)) {\r\n            let parentValue;\r\n            let postFix;\r\n            if (oldValue.includes('vh')) {\r\n                parentValue = this.props.breakpointmanager.getWindowHeight();\r\n                postFix = 'vh'\r\n            }\r\n            if (oldValue.includes('vw')) {\r\n                parentValue = this.props.breakpointmanager.getWindowWidth();\r\n                postFix = 'vw'\r\n            }\r\n            let newValue = (value / parentValue * 100).toString() + postFix;\r\n            newValue = getViewRatioStyle(newValue);\r\n            this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n        }\r\n    };\r\n\r\n    getParentProps = (prop) => {\r\n        if (prop === \"width\" ||\r\n            prop === \"minWidth\" ||\r\n            prop === \"maxWidth\")\r\n        {\r\n            return \"width\";\r\n        }\r\n\r\n        return \"height\";\r\n    };\r\n\r\n    isPercent = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"%\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    isViewRatio = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"vh\") || value.includes(\"vw\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setRuntimeStyle = (newRuntimeStyle, animationCss) => {\r\n        if (this.callOverride(\"setRuntimeStyle\", newRuntimeStyle))\r\n            return;\r\n\r\n        let runtimeStyle = newRuntimeStyle && {...newRuntimeStyle};\r\n        this.setState({runtimeStyle, animationCss});\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getGridItemStyleId = () => {\r\n        return `style_grid_item_${this.props.id}`;\r\n    };\r\n\r\n    setGridItemStyle = (newGridItemStyle, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setGridItemStyle\", newGridItemStyle, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let gridItemStyle = {...newGridItemStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, undefined, breakpointName);\r\n\r\n        let styleNode = document.getElementById(this.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getCompositeFromData(\"gridItemStyle\"),\r\n                this.getGridItemStyleId(), this.getGridItemStyleId(), this);\r\n        } else {\r\n            updateStyle(styleNode, this.getCompositeFromData(\"gridItemStyle\"), this.getGridItemStyleId());\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setGridArea = (gridArea, breakpointName) => {\r\n        if (this.callOverride(\"setGridArea\", gridArea))\r\n            return;\r\n\r\n        let gridItemStyle = this.getFromData(\"gridItemStyle\");\r\n        gridItemStyle.gridArea = gridArea;\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n    };\r\n\r\n    getGridArea = () => {\r\n        if (this.callOverride(\"getGridArea\"))\r\n            return;\r\n\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return gridItemStyle.gridArea;\r\n    };\r\n\r\n    setStyleParam = (param, value, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setStyleParam\"))\r\n            return this.callOverride(\"setStyleParam\", param, value, data, breakpointName);\r\n\r\n        let style = this.hasDataInBreakPoint(\"style\", data, breakpointName) || {};\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        this.setStyle(style, data, breakpointName, undefined, dontAddToSnap);\r\n    };\r\n\r\n    getStyleId = () => {\r\n        return `style_${this.props.id}`;\r\n    };\r\n\r\n    getDesignStyleId = () => {\r\n        return `style_design_${this.props.id}`;\r\n    };\r\n\r\n    setDesignStyle = (newDesignStyle, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setDesignStyle\", newDesignStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let designStyle = {...newDesignStyle};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"designStyle\", designStyle, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let designStyleNode = document.getElementById(this.getDesignStyleId());\r\n\r\n            if (!designStyleNode) {\r\n                appendStyle(this.getCompositeFromData(\"designStyle\"),\r\n                    this.getDesignStyleId(), this.getDesignStyleId(), this);\r\n            } else {\r\n                updateStyle(designStyleNode, this.getCompositeFromData(\"designStyle\"), this.getDesignStyleId());\r\n            }\r\n\r\n            this.invalidateSize();\r\n            this.addToSnap();\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyleId = () => {\r\n        return `style-transform-${this.props.id}`;\r\n    };\r\n\r\n    setTransformStyle = (newTransform, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setTransformStyle\", newTransform, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let transform = {...newTransform};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"transform\", transform, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let transformStyleNode = document.getElementById(this.getTransformStyleId());\r\n\r\n            if (!transformStyleNode) {\r\n                appendStyle(this.getTransformStyle(),\r\n                    this.getTransformStyleId(), this.getTransformStyleId(), this);\r\n            } else {\r\n                updateStyle(transformStyleNode, this.getTransformStyle(), this.getTransformStyleId());\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyle = (compositeTransform) => {\r\n        if (!compositeTransform)\r\n            compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n\r\n        let rules = [];\r\n\r\n        // TODO add more rules\r\n        compositeTransform.rotateDegree && rules.push(`rotate(${compositeTransform.rotateDegree}deg)`);\r\n\r\n        return {transform: rules.join(' ')};\r\n    };\r\n\r\n    setStyle = (newStyle, data, breakpointName, dontOverride, dontAddToSnap) => {\r\n        if (this.callOverride(\"setStyle\", newStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let style = {...newStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"style\", style, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let styleNode = document.getElementById(this.getStyleId());\r\n\r\n            if (!styleNode) {\r\n                appendStyle(\r\n                    this.getCompositeFromData(\"style\"),\r\n                    this.getStyleId(), this.getStyleId(), this);\r\n            } else {\r\n                updateStyle(styleNode,\r\n                    this.getCompositeFromData(\"style\"),\r\n                    this.getStyleId());\r\n            }\r\n\r\n            if (!dontAddToSnap) {\r\n                this.invalidateSize();\r\n                this.addToSnap();\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    clearFromAllBp = (props, data, excludeBp) => {\r\n        let sortedBp = this.props.breakpointmanager.getSortedBreakPoints();\r\n        sortedBp.forEach( bp => {\r\n            if (excludeBp !== bp.name || !excludeBp.includes(bp.name))\r\n                this.setDataInBreakpoint(props, undefined, data, bp.name);\r\n        });\r\n    };\r\n\r\n    setGrid = (grid, callback, breakpointName) => {\r\n        if (this.callOverride(\"setGrid\", grid, callback, breakpointName))\r\n            return;\r\n\r\n        this.setDataInBreakpoint(\"grid\", grid, undefined, breakpointName);\r\n        this.setState({grid: grid}, () => {\r\n            if (this.props.gridLine.hasGridLine(this.props.id)) {\r\n                let size = this.getSize(false);\r\n                this.updateGridLines(\r\n                    size.top,\r\n                    size.left,\r\n                    size.top + size.clientHeight,\r\n                    size.left + size.clientWidth,\r\n                    this.props.gridLine.hasGridLine(this.props.id)\r\n                );\r\n            }\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    getGridLineRect = (ref, index, dir, item) => {\r\n        if (ref.current) {\r\n            return ref.current.rect;\r\n        }\r\n\r\n        let parentRect = item.props.parent && item.props.parent.getSize(false) || {\r\n            width: item.props.breakpointmanager.getWindowWidth()\r\n        };\r\n        let padding = cloneObject(item.getCompositeFromData(\"padding\")) || {};\r\n        ['top', 'left', 'bottom', 'right'].forEach(key => {\r\n            padding[key] = getPxValueFromCSSValue(padding[key], parentRect.width, item) || 0;\r\n        });\r\n\r\n        let thisRect = item.getSize(false);\r\n        if (dir === 'x') {\r\n            if (index === 0) {\r\n                return {\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left ,\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top,\r\n                    height: thisRect.scrollHeight - padding.top - padding.bottom,\r\n                    width: 1\r\n                }\r\n            } else {\r\n                return {\r\n                    left: thisRect.left - thisRect.scrollLeft + thisRect.scrollWidth - padding.right - 1,\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top,\r\n                    height: thisRect.scrollHeight - padding.top - padding.bottom,\r\n                    width: 1\r\n                }\r\n            }\r\n        } else {\r\n            if (index === 0) {\r\n                return {\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top ,\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left,\r\n                    height: 1,\r\n                    width: thisRect.scrollWidth - padding.left - padding.right,\r\n                }\r\n            } else {\r\n                return {\r\n                    top: thisRect.top - thisRect.scrollTop + thisRect.scrollHeight - padding.bottom - 1,\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left,\r\n                    height: 1,\r\n                    width: thisRect.scrollWidth - padding.left - padding.right,\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getGridLineOfPoint = (left, top, parent, after = false, parentRect) => {\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false);\r\n        let x;\r\n        let cx;\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', parent);\r\n            if (left < rect.left || (after && left <= rect.left)) {\r\n                x = i;\r\n                if (!after) {\r\n                    if (xLineRef[i - 1]) {\r\n                        // rect = xLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = xLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(xLineRef[i - 1], i - 1, 'x', parent);\r\n                        cx = rect.left;\r\n                    } else {\r\n                        // cx = parentRect.left - parentRect.scrollLeft;\r\n                        cx = rect.left;\r\n                    }\r\n                } else {\r\n                    cx = rect.left;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (x === undefined) {\r\n            x = xLineRef.length;\r\n            // let rect = xLineRef[xLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = xLineRef[xLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(xLineRef[xLineRef.length - 1], xLineRef.length - 1, 'x', parent);\r\n            cx = rect.left;\r\n        }\r\n\r\n        let y;\r\n        let cy;\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let rect = yLineRef[i].current.getBoundingClientRect();\r\n            // let rect = yLineRef[i].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', parent);\r\n            if (top < rect.top || (after && top <= rect.top)) {\r\n                y = i;\r\n                if (!after) {\r\n                    if (yLineRef[i - 1]) {\r\n                        // rect = yLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = yLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(yLineRef[i - 1], i - 1, 'y', parent);\r\n                        cy = rect.top;\r\n                    } else {\r\n                        // cy = parentRect.top - parentRect.scrollTop;\r\n                        cy = rect.top;\r\n                    }\r\n                } else {\r\n                    cy = rect.top;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (y === undefined) {\r\n            y = yLineRef.length;\r\n            // let rect = yLineRef[yLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = yLineRef[yLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[yLineRef.length - 1], yLineRef.length - 1, 'y', parent);\r\n            cy = rect.top;\r\n        }\r\n\r\n        if (after) {\r\n            x++;\r\n            y++;\r\n        }\r\n\r\n        x = Math.max(1, x);\r\n        x = Math.min(xLineRef.length, x);\r\n        y = Math.max(1, y);\r\n        y = Math.min(yLineRef.length, y);\r\n\r\n        if (x === xLineRef.length)\r\n            cx++;\r\n        if (y === yLineRef.length)\r\n            cy++;\r\n\r\n        return {x, y, cx, cy};\r\n    };\r\n\r\n    calculateGridArea = (left, top, width, height, parent, parentRect) => {\r\n        if (!this.props.gridLine.hasGridLine(parent.props.id)) {\r\n            return {\r\n                gridArea: {x1: 1, y1: 1, x2: 2, y2: 2},\r\n                coordinates: {cx1: 0, cy1: 0, cx2: 0, cy2: 0}\r\n            }\r\n        }\r\n        let gridLine1 = this.getGridLineOfPoint(left, top, parent, false, parentRect);\r\n        let gridLine2 = this.getGridLineOfPoint(left + width, top + height, parent, true, parentRect);\r\n        return {\r\n            gridArea: {x1: gridLine1.x, y1: gridLine1.y, x2: gridLine2.x, y2: gridLine2.y},\r\n            coordinates: {cx1: gridLine1.cx, cy1: gridLine1.cy, cx2: gridLine2.cx, cy2: gridLine2.cy}\r\n        };\r\n    };\r\n\r\n    onMouseDown = (e, moveWithMouse) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            this.moveWithMouse = moveWithMouse;\r\n            this.mouseMoved = {\r\n                deltaX: 0,\r\n                deltaY: 0,\r\n                lastClientX: e.clientX,\r\n                lastClientY: e.clientY,\r\n                startMillis: (new Date()).getTime()\r\n            };\r\n            window.addEventListener(\"mousemove\", this.onMouseMove);\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        } else if (isRightClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseMoved.deltaX += (e.clientX - this.mouseMoved.lastClientX);\r\n        this.mouseMoved.deltaY += (e.clientY - this.mouseMoved.lastClientY);\r\n        this.mouseMoved.lastClientX = e.clientX;\r\n        this.mouseMoved.lastClientY = e.clientY;\r\n\r\n        if (!this.moving) {\r\n            let currentMillis = new Date().getTime();\r\n            if (Math.abs(this.mouseMoved.deltaX) > 10 ||\r\n                Math.abs(this.mouseMoved.deltaY) > 10 ||\r\n                currentMillis - this.mouseMoved.startMillis > 500)\r\n            {\r\n                if (!this.state.groupSelected && this.getFromTempData(\"draggable\") && !this.state.selected) {\r\n                    this.onSelect(true);\r\n                }\r\n                this.moving = true;\r\n                this.canMove() && this.onDragStart(e, isGroupSelected(this), true);\r\n            }\r\n        } else {\r\n            this.canMove() && this.onDrag(e, isGroupSelected(this), true);\r\n        }\r\n    };\r\n\r\n    canMove = () => {\r\n        return (this.state.selected || this.state.groupSelected) && this.getFromTempData(\"draggable\");\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        delete this.moveWithMouse;\r\n\r\n        if (isRightClick(e)) {\r\n            this.onContextMenu(e);\r\n            this.mouseDown = false;\r\n            window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n            return;\r\n        }\r\n\r\n        let currentMillis = new Date().getTime();\r\n        if (!this.moving && currentMillis - this.mouseMoved.startMillis < 500) {\r\n            if (!this.dropped) {\r\n                e.stopPropagation();\r\n                this.onSelect(true, undefined, undefined, true);\r\n            } else {\r\n                this.dropped = false;\r\n            }\r\n        }\r\n\r\n        if (this.moving && this.canMove()) {\r\n            window.requestAnimationFrame(() => {\r\n                this.onDragStop(e, isGroupSelected(this), true);\r\n            });\r\n        }\r\n\r\n        this.moving = false;\r\n        this.mouseDown = false;\r\n\r\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\r\n        window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n    };\r\n\r\n    onSelect = (selected, callback, deselectParent, clicked, dontUpdateAdjustment) => {\r\n        if (this.callOverride(\"onSelect\", selected, callback, deselectParent))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n        if (!this.props.isSelectable)\r\n            return;\r\n\r\n        if (selected) {\r\n            this.props.select.selectItem(this, clicked, dontUpdateAdjustment);\r\n            this.toggleGridLines(selected, undefined, \"A\");\r\n        } else {\r\n            this.props.select.updateHelpSizeLines();\r\n        }\r\n\r\n        if (this.props.parent) {\r\n            if (selected || deselectParent)\r\n                this.props.parent.toggleGridLines(selected, () => {\r\n                    this.toggleHelpLines(selected && this.props.parent);\r\n                }, \"B\");\r\n        } else {\r\n            selected && this.props.gridLine.removeGridLineByType(\"B\");\r\n            this.props.select.updateHelpSizeLines();\r\n        }\r\n\r\n        this.setTempData(\"selected\", selected);\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        this.setState({selected, groupSelected: false}, () => {\r\n            selected && this.setItemHover(true);\r\n\r\n            this.props.editor.updateLayout();\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    toggleGridLines = (showGridLines, callback, gridType) => {\r\n        if (this.callOverride(\"toggleGridLines\", showGridLines, callback, gridType))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        if (!showGridLines) {\r\n            this.props.gridLine.removeGridLine(this.props.id);\r\n            this.updateLayout();\r\n            return;\r\n        }\r\n\r\n        if (this.props.gridLine.hasGridLine(this.props.id, gridType)) {\r\n            if (callback)\r\n                callback();\r\n\r\n            this.updateLayout();\r\n\r\n            return;\r\n        }\r\n\r\n        let grid = this.getCompositeFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            },\r\n            () => {\r\n                if (callback)\r\n                    callback();\r\n\r\n                this.updateLayout();\r\n            }\r\n        );\r\n    };\r\n\r\n    toggleHelpLines = (helpLinesParent, callback) => {\r\n        if (this.callOverride(\"toggleHelpLines\", helpLinesParent, callback))\r\n            return;\r\n\r\n        if (this.mounted) {\r\n            this.setState({\r\n                helpLinesParent: helpLinesParent !== this && helpLinesParent\r\n            }, () => {\r\n                helpLinesParent &&\r\n                this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                    this.getSize(false), this.state.dragging);\r\n\r\n                if (callback)\r\n                    callback();\r\n            });\r\n        }\r\n    };\r\n\r\n    onScroll = (e) => {\r\n        if (this.callOverride(\"onScroll\", e))\r\n            return;\r\n\r\n        this.invalidateSize(true, false, true);\r\n        this.props.select.updateParentsRect();\r\n        this.props.select.onScrollItem();\r\n        this.onScrollEnd(e);\r\n    };\r\n\r\n    onScrollEnd = debounce((e) => {\r\n        if (this.callOverride(\"onScrollEnd\", e))\r\n            return;\r\n\r\n        this.invalidateSize();\r\n        this.addToSnap();\r\n    }, 500);\r\n\r\n    editGrid = () => {\r\n        this.props.gridEditorRef.current.editing(this);\r\n    };\r\n\r\n    updateGridEditor = () => {\r\n        this.props.gridEditorRef.current.update(this);\r\n    };\r\n\r\n    setAnchor = (anchor) => {\r\n        if (this.callOverride(\"setAnchor\", anchor))\r\n            return;\r\n\r\n        this.setTempData(\"anchor\", anchor);\r\n        this.updateLayout();\r\n    };\r\n\r\n    playAnimation = (disable) => {\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        if (!compositeDesign.animation || !compositeDesign.animation.name)\r\n            return;\r\n\r\n        if (this.getFromData(\"dontAnimate\"))\r\n            return;\r\n\r\n        // Component going to show animation, so add end listener for more action\r\n        let onAnimationEnd = DynamicAnimations[compositeDesign.animation.name].onAnimationEnd;\r\n\r\n        let stateChange = {\r\n            forceKey: \"animationReplay\",\r\n            showAnimation: true,\r\n            onAnimationEnd\r\n        };\r\n\r\n        if (disable) {\r\n            stateChange.disableVS = true;\r\n            this.setTempData(\"dontAnimate\", true);\r\n        }\r\n\r\n        this.props.select.activateHover(false);\r\n        this.props.select.activateResize(false);\r\n\r\n        this.setState(stateChange);\r\n    };\r\n\r\n    onAnimationEnd = () => {\r\n        this.setState({forceKey: undefined, showAnimation: undefined});\r\n        this.props.select.activateHover(true);\r\n        this.props.select.activateResize(true);\r\n    };\r\n\r\n    getCompositeAnimationCss = (compositeAnimation = {}) => {\r\n        if (!(compositeAnimation.name && this.state.forceKey && this.state.showAnimation))\r\n            return;\r\n\r\n        return DynamicAnimations[compositeAnimation.name]\r\n            .getAnimationCSS(this, compositeAnimation.options);\r\n    };\r\n\r\n    onContextMenu = (e) => {\r\n        e.preventDefault();\r\n        this.onSelect(true);\r\n        this.props.select.onContextMenu(e, this);\r\n    };\r\n\r\n    getContextMenu = () => {\r\n        if (this.hasOverride(\"getContextMenu\"))\r\n            return this.callOverride(\"getContextMenu\");\r\n    };\r\n\r\n    render () {\r\n        let {className, animationCss, as, editor, select, id, getStaticChildren,\r\n            isPage, page, getChildrenOverride, modifyContainerStyleOverride} = this.props;\r\n        let {selected, runtimeStyle, portalNodeId, disableVS, showAnimation, forceKey, grid,\r\n            draggingStart, showGridLines, resizeHelpData} = this.state;\r\n        let isContainer = this.props.griddata.isContainer;\r\n        let children = this.children;\r\n        let resizeData = this.resizeData;\r\n        let size = runtimeStyle || this.getSize(false);\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        let compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n        let compositeStyle = this.getCompositeFromData(\"style\");\r\n        let overflowData = this.getCompositeFromData(\"overflowData\");\r\n        let anchor = this.getFromTempData(\"anchor\");\r\n        let selectAsParent = this.props.gridLine.hasGridLine(this.props.id, \"B\") !== undefined;\r\n\r\n        let classes = classNames(\r\n            \"AwesomeGridLayoutRoot\",\r\n            \"AwesomeGridLayoutGrid\",\r\n            className,\r\n            this.getDesignStyleId(),\r\n            this.getGridItemStyleId(),\r\n            this.getStyleId(),\r\n            this.getCompositeAnimationCss(compositeDesign.animation)\r\n        );\r\n\r\n        let holderClasses = classNames(\r\n            \"AwesomeGridLayoutHolder\",\r\n            this.getTransformStyleId(),\r\n        );\r\n\r\n        let TagAs = as || \"div\";\r\n\r\n        return (\r\n            <Portal nodeId={portalNodeId} disabled={!portalNodeId}>\r\n                <VisibilitySensorWrapper\r\n                    animation={compositeDesign.animation}\r\n                    editor={editor}\r\n                    playAnimation={this.playAnimation}\r\n                    select={select}\r\n                    disableVS={disableVS}\r\n                >\r\n                        <TagAs\r\n                            onMouseDown={!showAnimation ? this.onMouseDown : undefined}\r\n                            onMouseOver={this.onMouseOver}\r\n                            onMouseEnter={this.onMouseEnter}\r\n                            onMouseOut={this.onMouseOut}\r\n                            id={id}\r\n                            className={classes}\r\n                            style={{\r\n                                ...runtimeStyle,\r\n                                ...(this.canMove() && {cursor: \"move\"}),\r\n                                ...(isPage && {overflowY: \"auto\", overflowX: \"hidden\"}),\r\n                                ...(overflowData.state === 'hide' && {\r\n                                    overflowY: 'hidden',\r\n                                    overflowX: 'hidden',\r\n                                }),\r\n                                ...(showAnimation && {\r\n                                    opacity: 0\r\n                                })\r\n                            }}\r\n                            ref={this.rootDivRef}\r\n                            key={id}\r\n                            onAnimationEnd={this.onAnimationEnd}\r\n                        >\r\n                            {\r\n                                this.getFromTempData(\"pageResize\") &&\r\n                                !showAnimation &&\r\n                                <AdjustmentResizePage\r\n                                    id={id}\r\n                                    key={`${id}_resize`}\r\n                                    sides={['e','w']}\r\n                                    onResizeStart={this.pageResizeStart}\r\n                                    onResize={this.pageResize}\r\n                                    onResizeStop={this.pageResizeStop}\r\n                                    data={runtimeStyle || size}\r\n                                    top={(resizeData && resizeData.top) || (size && size.top)}\r\n                                    left={(resizeData && resizeData.left) || (size && size.left)}\r\n                                    width={(runtimeStyle && runtimeStyle.width) || (size && size.width)}\r\n                                    height={(runtimeStyle && runtimeStyle.height) || (size && size.height)}\r\n                                    draggingStart={draggingStart}\r\n                                    itemId={id}\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                selected && resizeHelpData &&\r\n                                !this.getFromTempData(\"pageResize\") &&\r\n                                !showAnimation &&\r\n                                !isGroupSelected(this) &&\r\n                                <AdjustmentHelpSize\r\n                                    resizeHelpData={resizeHelpData}\r\n                                />\r\n                            }\r\n\r\n                            <ChildHolder\r\n                                className={holderClasses}\r\n                                key={forceKey || `${id}_container`}\r\n                                id={`${id}_child_holder`}\r\n                                disabled={Object.keys(compositeTransform).length > 0}\r\n                                transformRef={this.transformRef}\r\n                            >\r\n                                {\r\n                                    getStaticChildren && getStaticChildren()\r\n                                }\r\n\r\n                                <GridChildContainer\r\n                                    id={id}\r\n                                    key={`${id}_container`}\r\n                                    allChildren={children}\r\n                                    grid={grid}\r\n                                    overflowData={overflowData}\r\n                                    showGridLines={showGridLines}\r\n                                    aglStyle={compositeStyle}\r\n                                    overflowRef={this.overflowRef}\r\n                                    containerRef={this.containerRef}\r\n                                    show={isContainer}\r\n                                    onScroll={this.onScroll}\r\n                                    isPage={isPage}\r\n                                    page={page}\r\n                                    ref={this.backContainerRef}\r\n                                    size={runtimeStyle || size}\r\n                                    getChildrenOverride={getChildrenOverride}\r\n                                    agl={this}\r\n                                    padding={this.getCompositeFromData(\"padding\")}\r\n                                    modifyContainerStyleOverride={modifyContainerStyleOverride}\r\n                                    selectAsParent={selectAsParent}\r\n                                    selected={selected}\r\n                                />\r\n                            </ChildHolder>\r\n\r\n                            <AGLAnchor\r\n                                anchor={anchor}\r\n                            />\r\n\r\n                            {\r\n                                this.state.dragging && this.props.parent &&\r\n                                <Portal nodeId={this.state.portalNodeId ||\r\n                                    `${this.props.parent.props.id}_container`}\r\n                                >\r\n                                    <div\r\n                                        className={this.state.fakeStyle}\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            pointerEvents: \"none\",\r\n                                            ...this.state.fakeStyle\r\n                                        }}\r\n                                    />\r\n                                </Portal>\r\n                            }\r\n\r\n                        </TagAs>\r\n                </VisibilitySensorWrapper>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n\r\nAwesomeGridLayout2.defaultProps = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    childSize: {w: \"100%\", h: \"100%\"},\r\n    showSideResize: false,\r\n    isSelectable: true,\r\n    layoutType: \"free\", // free, grid\r\n    snap: {x: 1, y: 1},\r\n    dir: \"rtl\", // rtl, ltr,\r\n    compactType: \"vertical\", // none, vertical, horizontal\r\n    defaultGrid: {\r\n        x: 1,\r\n        y: 1,\r\n        gridTemplateRows: \"1fr\",\r\n        gridTemplateColumns: \"1fr\"\r\n    },\r\n    defaultStyle: {\r\n        width: \"50%\",\r\n        height: \"50%\",\r\n    },\r\n    defaultGridItemStyle: {\r\n        alignSelf: \"center\",\r\n        justifySelf: \"center\",\r\n        position: \"relative\",\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        gridArea: \"1/1/2/2\",\r\n    }\r\n};\r\n","import AwesomeGridLayout2 from \"../../AwesomeGridLayout2\";\r\nimport React from \"react\";\r\nimport {assignData, initGriddata} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AGLWrapper extends React.Component{\r\n    render() {\r\n        let griddata = this.props.aglRef.current && this.props.aglRef.current.props.griddata;\r\n        if (!griddata) griddata = this.props.griddata;\r\n        if (griddata && griddata.initialized) {\r\n            if (!griddata.fillWithData) {\r\n                griddata.fillWithData = true;\r\n                let bpData = this.props.data.bpData;\r\n                Object.keys(this.props.data).forEach(key => {\r\n                    if (key !== \"bpData\") {\r\n                        griddata[key] = this.props.data[key];\r\n                    }\r\n                });\r\n                assignData(griddata.bpData[\"laptop\"], bpData);\r\n            }\r\n        } else {\r\n            griddata = assignData(this.props.griddata, this.props.data);\r\n            initGriddata(griddata, this.props.breakpointmanager);\r\n        }\r\n\r\n        return (\r\n            <AwesomeGridLayout2\r\n                className={this.props.className}\r\n                {...this.props}\r\n                ref={this.props.aglRef}\r\n                griddata={griddata}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class StackSpacerContainer extends React.PureComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n    }\r\n\r\n    updateSpacers = (spacers) => {\r\n        setTimeout(() => {\r\n            this.setState({spacers});\r\n        }, 0);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.state.spacers.map((spacer, index) => {\r\n                return <Portal nodeId={`${this.props.aglRef.current.props.id}_container`}\r\n                               key={index}\r\n                               document={this.props.document}\r\n                >\r\n                    {spacer}\r\n                </Portal>\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentMove extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        let rect = this.rootDivRef.current.getBoundingClientRect();\r\n        if (this.isLeftClick(e) && e.clientX >= rect.left && e.clientX <= rect.left + rect.width &&\r\n            e.clientY >= rect.top && e.clientY <= rect.top + rect.height) {\r\n            e.stopPropagation();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        } else {\r\n            if (this.props.onClick)\r\n                this.props.onClick(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.props.onDragStart(e);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.props.onDrag(e);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentMove\"\r\n                className=\"AdjustmentMoveRoot\"\r\n                ref={this.rootDivRef}\r\n                onPointerDown={this.onMouseDown}\r\n                style={{\r\n                    cursor: this.props.cursor || \"move\"\r\n                }}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\n\r\nexport default class StackSpacerResizer extends React.PureComponent{\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerResizerRoot\"\r\n            >\r\n                <AdjustmentMove\r\n                    onDragStart={this.props.onDragStart}\r\n                    onDrag={this.props.onDrag}\r\n                    onDragStop={this.props.onDragStop}\r\n                    cursor={this.props.cursor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\nimport StackSpacerResizer from \"./StackSpacerResizer\";\r\n\r\nexport default class StackSpacer extends React.PureComponent{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            pointerEvents: \"auto\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setPointerEvents = (pointerEvents) => {\r\n        this.mounted && this.setState({pointerEvents});\r\n    };\r\n\r\n    updateSpacerData = (newHeight) => {\r\n        this.props.spacerData.height = newHeight;\r\n        this.props.stack.props.select.updateSize();\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClick = (e) => {\r\n        this.props.aglRef.current.onSelect(true);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        if (this.props.onDragStart)\r\n            this.props.onDragStart(e);\r\n\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n            firstHeight: this.props.spacerData.height\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        e.preventDefault();\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        let newHeight = this.dragData.firstHeight + deltaY;\r\n\r\n        newHeight = Math.max(0, newHeight);\r\n        this.updateSpacerData(newHeight);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerRoot\"\r\n                style={{\r\n                    height: `${this.props.spacerData.height}px`,\r\n                    order: this.props.order,\r\n                    pointerEvents: this.state.pointerEvents\r\n                }}\r\n                onClick={this.onClick}\r\n                onMouseOver={this.props.onMouseOver}\r\n                onMouseEnter={this.props.onMouseEnter}\r\n                onMouseOut={this.props.onMouseOut}\r\n            >\r\n\r\n                <StackSpacerResizer\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n\r\n                {\r\n                    this.props.aglRef.current.getSize(false).width > 150 &&\r\n                    <p\r\n                        className=\"StackSpacerText\"\r\n                    >\r\n                        Spacer\r\n                    </p>\r\n                }\r\n\r\n                <p\r\n                    className=\"StackSpacerSizeText\"\r\n                >\r\n                    {`${this.props.spacerData.height.toFixed(0)}px`}\r\n                </p>\r\n\r\n                <AdjustmentMove\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    onClick={this.onClick}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {isFixed, isStretch} from \"../../AwesomwGridLayoutHelper\";\r\nimport {appendStyle, cloneObject, updateStyle} from \"../../AwesomeGridLayoutUtils\";\r\nimport StackSpacerContainer from \"./StackSpacerContainer\";\r\nimport StackSpacer from \"./StackSpacer\";\r\n\r\nexport default class Stack extends AGLComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n        this.aglRef = React.createRef();\r\n        this.spacerContainerRef = React.createRef();\r\n\r\n        if (props.allSpacerData)\r\n            this.allSpacerData = props.allSpacerData;\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n        };\r\n    };\r\n\r\n    getChildrenOverride = (sortedChildrenArray, agl) => { // [{child: child, zIndex: zIndex}], agl\r\n        return sortedChildrenArray.map((child, index) => {\r\n            return child.child;\r\n        });\r\n    };\r\n\r\n    lateMountedOverride = (agl) => {\r\n        agl.invalidateSize();\r\n        agl.addToSnap();\r\n        agl.onSelect(agl.getFromTempData(\"selected\"));\r\n\r\n        if (agl.props.onPageResize) {\r\n            let rect = agl.getSize(false, true);\r\n            agl.props.onPageResize(rect.width, agl, true);\r\n        }\r\n\r\n        agl.props.onChildMounted && agl.props.onChildMounted(agl);\r\n        if (this.props.lateMountedComplete)\r\n            this.props.lateMountedComplete(this);\r\n\r\n        this.setOrder();\r\n    };\r\n\r\n    calculateGridItemChildOverride = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateChildGridItemOverride =\r\n        (child1, child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateWrapper = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) => {\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let {gridArea, coordinates} = child.calculateGridArea(\r\n            parentRect.left + relativeX,\r\n            parentRect.top + relativeY,\r\n            width,\r\n            height,\r\n            parent,\r\n            parentRect\r\n        );\r\n\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.clientHeight,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.clientWidth\r\n            }\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let gridItemStyle = {...(child.state.gridItemStyle || child.props.defaultGridItemStyle)};\r\n        delete gridItemStyle.marginLeft;\r\n        delete gridItemStyle.marginRight;\r\n\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.alignSelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.alignSelf = \"flex-end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"flex-start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            // if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n            // gridItemStyle.alignSelf = \"end\";\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // } else {\r\n            // gridItemStyle.alignSelf = \"start\";\r\n            // gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            // }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }\r\n\r\n        delete gridItemStyle.justifySelf;\r\n        delete gridItemStyle.marginTop;\r\n        delete gridItemStyle.marginBottom;\r\n        delete gridItemStyle.gridArea;\r\n\r\n        child.setDataInBreakpoint(\"relativeY\", relativeY);\r\n\r\n        this.setOrder(child.props.id, child, relativeY, height, fromState);\r\n\r\n        child.setStyleParam(\"height\", \"auto\");\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    setOrder = (childId, child, childRelativeY, childHeight, fromState) => {\r\n        let childFound = false;\r\n        let childOrderSet = false;\r\n        let sorted = Object.values(this.aglRef.current.allChildRefs).sort((a,b) => {\r\n            if (a && a.current && b && b.current){\r\n                if (a.current.props.id === childId || b.current.props.id === childId)\r\n                    childFound = true;\r\n\r\n                let relativeYA = a.current.getFromData(\"relativeY\");\r\n                let relativeYB = b.current.getFromData(\"relativeY\");\r\n                if (relativeYA < relativeYB) {\r\n                    return -1;\r\n                } else if (relativeYA === relativeYB) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    if (childId === a.current.props.id)\r\n                        return -1;\r\n                    else if (childId === b.current.props.id)\r\n                        return 1;\r\n                    else\r\n                        return 0;\r\n                }\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        let order = 1;\r\n        let relativeY = 0;\r\n        let spacers = [];\r\n        let length = sorted.filter(childRef => {\r\n            return (childRef && childRef.current);\r\n        }).length;\r\n\r\n        sorted.forEach((childRef, index) => {\r\n            if (childRef && childRef.current) {\r\n                if (childRelativeY && !childFound) {\r\n                    let relativeY2 = childRef.current.getFromData(\"relativeY\");\r\n                    if (!childOrderSet && relativeY2 > childRelativeY) {\r\n                        childOrderSet = true;\r\n                        child.setStyleParam(\"order\", order);\r\n                        child.setDataInBreakpoint(\"order\", order);\r\n                        order++;\r\n                    }\r\n                }\r\n                childRef.current.setStyleParam(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"relativeY\", relativeY);\r\n                let size = childRef.current.getSize(false);\r\n                relativeY += size.height;\r\n\r\n                if (childId === childRef.current.props.id) {\r\n                    childOrderSet = true;\r\n                }\r\n                order++;\r\n\r\n                if (length > index + 1) {\r\n                    spacers[index] = this.getSpacer(index, order);\r\n                    relativeY+= this.getSpacerData(index).height;\r\n                    order++;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (child && !childOrderSet) {\r\n            childOrderSet = true;\r\n            child.setStyleParam(\"order\", order);\r\n            child.setDataInBreakpoint(\"order\", order);\r\n            order++;\r\n        }\r\n\r\n        this.spacerContainerRef.current.updateSpacers(spacers);\r\n        setTimeout(() => {\r\n            this.props.select.updateSize();\r\n        }, 0);\r\n    };\r\n\r\n    getSpacer = (index, order) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        if (!this.allSpacerRef[index]) {\r\n            this.allSpacerRef[index] = React.createRef();\r\n        }\r\n\r\n        return <StackSpacer\r\n            key={index}\r\n            order={order}\r\n            spacerData={this.allSpacerData[index]}\r\n            ref={this.allSpacerRef[index]}\r\n            aglRef={this.aglRef}\r\n            onDragStart={this.onStackDragStart}\r\n            onDragStop={this.onStackDragStop}\r\n            stack={this}\r\n            onMouseOver={this.onMouseOverSpacer}\r\n            onMouseEnter={this.onMouseEnterSpacer}\r\n            onMouseOut={this.onMouseOutSpacer}\r\n        />;\r\n    };\r\n\r\n    onStackDragStart = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", true);\r\n    };\r\n\r\n    onStackDragStop = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", false);\r\n    };\r\n\r\n    getSpacerData = (index) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        return this.allSpacerData[index];\r\n    };\r\n\r\n    setMouseOverOverride = (agl, item, positionData, callback) => {\r\n        this.setPointerEventOfSpacers(\"none\");\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    setMouseOverForNonDraggingOverride = (agl) => {\r\n        this.setPointerEventOfSpacers(\"auto\");\r\n        agl.props.dragdrop.setMouseOverForNonDragging(agl);\r\n    };\r\n\r\n    setPointerEventOfSpacers = (pointerEvents) => {\r\n        if (!this.allSpacerRef)\r\n            this.allSpacerRef = [];\r\n\r\n        this.allSpacerRef.forEach((spacerRef) => {\r\n            if (spacerRef && spacerRef.current)\r\n                spacerRef.current.setPointerEvents(pointerEvents);\r\n        })\r\n    };\r\n\r\n    setGridItemStyleChildOverride = (child, newGridItemStyle) => {\r\n        let gridItemStyle = {...newGridItemStyle};\r\n        delete gridItemStyle.gridArea;\r\n        child.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle);\r\n        let styleNode = document.getElementById(child.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(gridItemStyle, child.getGridItemStyleId(), child.getGridItemStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, gridItemStyle, child.getGridItemStyleId());\r\n        }\r\n    };\r\n\r\n    modifyContainerStyleOverride = (container, agl, grid, aglStyle) => {\r\n        let style;\r\n\r\n        style = {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            position: \"relative\"\r\n        };\r\n\r\n        let styleNode = document.getElementById(container.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, container.getContainerStyleId(), container.getContainerStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, style, container.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    onChildLeaveOverride = (agl, child) => {\r\n        agl.removeChildElement(child);\r\n        child.removeIdAndChildrenId();\r\n\r\n        this.setOrder();\r\n\r\n        if (!agl.removing && Object.values(agl.allChildRefs).length === 1) {\r\n            agl.removing = true;\r\n            setTimeout(() => {\r\n                Object.values(agl.allChildRefs)[0] &&\r\n                this.props.dragdrop.dropItem(\r\n                    Object.values(agl.allChildRefs)[0].current,\r\n                    Object.values(agl.allChildRefs)[0].current.props.parent,\r\n                    this.props.parent, undefined, false, 2);\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    stretchChildOverride = (child, item) => {\r\n        if (!item.props.parent)\r\n            return;\r\n\r\n        let stretch = false;\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n\r\n        if (!isStretch(item, true)) {\r\n            stretch = true;\r\n        }\r\n\r\n        gridItemStyle.alignSelf = stretch? \"stretch\": \"center\";\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n        item.setStyleParam(\"width\", \"100%\");\r\n\r\n        if (!stretch) {\r\n            item.setStyleParam(\"width\", \"80%\");\r\n        }\r\n\r\n        item.setGridItemStyle(gridItemStyle);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    isStretchChildOverride = (child, item, log) => {\r\n        if (!item.props.parent)\r\n            return false;\r\n\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n        return !(gridItemStyle.alignSelf !== \"stretch\" ||\r\n            gridItemStyle.marginLeft !== \"0px\" ||\r\n            gridItemStyle.marginRight !== \"0px\");\r\n    };\r\n\r\n    setStyleParamOverride = (agl, param, value, data) => {\r\n        if (param === \"height\" || param === \"minHeight\")\r\n            return;\r\n\r\n        let style = !data? agl.getFromData(\"style\"): agl.getFromData(\"style\", data);\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        agl.setStyle(style, data);\r\n    };\r\n\r\n    onMouseOverSpacer = (e) => {\r\n        this.aglRef.current.onMouseOver(e);\r\n    };\r\n\r\n    onMouseEnterSpacer = (e) => {\r\n        this.aglRef.current.onMouseEnter(e);\r\n    };\r\n\r\n    onMouseOutSpacer = (e) => {\r\n        this.aglRef.current.onMouseOut(e);\r\n    };\r\n\r\n    onChildAdd = () => {\r\n        this.getAgl().removing = false;\r\n    };\r\n\r\n    render() {\r\n        return [\r\n            <AGLWrapper tagName=\"Stack\"\r\n                        key=\"Stack\"\r\n                        aglRef={!this.props.aglRef? this.aglRef: this.aglRef = this.props.aglRef}\r\n                        {...this.props}\r\n                        data={this.getData()}\r\n                        style={{...{\r\n                            height: \"auto\"\r\n                        }, ...this.props.style}}\r\n                        getChildrenOverride={this.getChildrenOverride}\r\n                        isStack={true}\r\n                        resizeSides={['e','w']}\r\n                        onDragStartChildOverride={this.onDragStartChildOverride}\r\n                        onDragChildOverride={this.onDragChildOverride}\r\n                        onDragStopChildOverride={this.onDragStopChildOverride}\r\n                        setGridItemStyleChildOverride={this.setGridItemStyleChildOverride}\r\n                        calculateGridItemChildOverride={this.calculateGridItemChildOverride}\r\n                        calculateChildGridItemOverride={this.calculateChildGridItemOverride}\r\n                        modifyContainerStyleOverride={this.modifyContainerStyleOverride}\r\n                        setMouseOverOverride={this.setMouseOverOverride}\r\n                        setMouseOverForNonDraggingOverride={this.setMouseOverForNonDraggingOverride}\r\n                        stretchChildOverride={this.stretchChildOverride}\r\n                        isStretchChildOverride={this.isStretchChildOverride}\r\n                        lateMountedOverride={this.lateMountedOverride}\r\n                        setStyleParamOverride={this.setStyleParamOverride}\r\n                        onChildLeaveOverride={this.onChildLeaveOverride}\r\n                        onChildAdd={this.onChildAdd}\r\n\r\n            >\r\n            </AGLWrapper>,\r\n            <StackSpacerContainer ref={this.spacerContainerRef} key=\"spacers\"\r\n                                  aglRef={this.aglRef}\r\n                                  document={this.props.document}\r\n            />\r\n        ]\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Divider from \"../Menus/CommonComponents/Divider\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport {LightMenuTooltip} from \"../Components/Containers/Menus/Components/LightTooltip\";\r\nimport {isLeftClick} from \"../AwesomwGridLayoutHelper\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener/ClickAwayListener\";\r\nimport MenuList from \"@material-ui/core/MenuList/MenuList\";\r\n\r\nexport default class ContextMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getFakeAnchor = (clientX, clientY) => {\r\n        return {\r\n            clientWidth: 0,\r\n            clientHeight: 0,\r\n            getBoundingClientRect: () => {\r\n                return {\r\n                    top: clientY,\r\n                    left: clientX,\r\n                    width: 0,\r\n                    height: 0,\r\n                    bottom: clientY,\r\n                    right: clientX\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let {menu, clientX, clientY, popperStyle, onClose} = this.props;\r\n        return (\r\n            <>\r\n                <Popper\r\n                    style={{...{\r\n                            zIndex: 99999999999999\r\n                        }, ...popperStyle}}\r\n                    // anchorReference=\"anchorPosition\"\r\n                    // anchorPosition={\r\n                    //     clientY !== null && clientX !== null\r\n                    //         ? { top: clientY, left: clientX }\r\n                    //         : undefined\r\n                    // }\r\n                    anchorEl={this.getFakeAnchor(clientX, clientY)}\r\n                    open={true}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                    placement=\"bottom-start\"\r\n                >\r\n                    <Paper style={{\r\n                        boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n                    }}>\r\n                        <ClickAwayListener onClickAway={onClose} mouseEvent='onMouseDown'>\r\n                            <MenuList autoFocusItem={true} style={{padding: 0}}\r\n                                      onPointerDown={(e) => {\r\n                                          e.preventDefault();\r\n                                          e.stopPropagation();\r\n                                      }}\r\n                            >\r\n                                {\r\n                                    menu.map((section, i) => {\r\n                                        let hasDivider = (i !== menu.length - 1);\r\n                                        return (\r\n                                            [\r\n                                                section.map((menuItem, j) => {\r\n                                                    return (\r\n                                                        <ContextMenuItem\r\n                                                            key={`${i}${j}`}\r\n                                                            onClose={onClose}\r\n                                                            menuItem={menuItem}\r\n                                                        />\r\n                                                    )\r\n                                                }),\r\n                                                hasDivider && <Divider style={{\r\n                                                    width: \"100%\",\r\n                                                    margin: 0,\r\n                                                    display: \"block\"\r\n                                                }}/>\r\n                                            ]\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                </Popper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport class ContextMenuItem extends React.Component {\r\n    render () {\r\n        let {menuItem, onClose} = this.props;\r\n\r\n        if (!menuItem.subMenu)\r\n            return (\r\n                <MenuItem\r\n                    dense\r\n                    onClick={(e) => {\r\n                        if (menuItem.onClick) {\r\n                            menuItem.onClick(e);\r\n                            onClose && onClose(e);\r\n                        }\r\n                    }}\r\n                    onPointerDown={(e) => {\r\n                        if (!isLeftClick(e)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }\r\n                    }}\r\n                >\r\n                    <span style={{\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"1fr auto\",\r\n                        alignItems: \"center\",\r\n                        width: \"100%\"\r\n                    }}>\r\n                        {menuItem.name}\r\n                        <span style={{\r\n                            fontSize: 10,\r\n                            marginLeft: 24,\r\n                            color: \"#9a9a9a\"\r\n                        }}>\r\n                            {\r\n                                menuItem.shortcut\r\n                            }\r\n                        </span>\r\n                    </span>\r\n                </MenuItem>\r\n            );\r\n        else\r\n            return (\r\n                <LightMenuTooltip\r\n                    title={\r\n                        menuItem.subMenu.map((menuItem, j) => {\r\n                            return (\r\n                                <ContextMenuItem\r\n                                    key={`${j}`}\r\n                                    onClose={onClose}\r\n                                    menuItem={menuItem}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    interactive\r\n                    placement=\"right\"\r\n                    leaveDelay={200}\r\n                    PopperProps={{\r\n                        style: {\r\n                            zIndex: 99999999999999,\r\n                        },\r\n                        modifiers:{\r\n                            flip: {\r\n                                enabled: true,\r\n                            },\r\n                            preventOverflow: {\r\n                                enabled: true,\r\n                                boundariesElement: 'viewport',\r\n                            },\r\n                        }}\r\n                    }\r\n                >\r\n                    <MenuItem\r\n                        dense\r\n                        onPointerDown={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation()\r\n                        }}\r\n                    >\r\n                        <span style={{\r\n                            display: \"grid\",\r\n                            gridTemplateColumns: \"1fr auto\",\r\n                            alignItems: \"center\",\r\n                            width: \"100%\"\r\n                        }}>\r\n                            {menuItem.name}\r\n                            <img draggable={false} width={8} height={8}\r\n                                 src={'/static/icon/right-arrow.svg'}\r\n                                style={{\r\n                                    marginLeft: 24,\r\n                                    color: \"#9a9a9a\"\r\n                                }}\r\n                            />\r\n                    </span>\r\n                    </MenuItem>\r\n                </LightMenuTooltip>\r\n            )\r\n    }\r\n}\r\n\r\n/*\r\n* Structure of input menu object\r\n* [\r\n*   [ // each section has one array\r\n    *   {\r\n    *       name: \"delete\",\r\n    *       onClick: function,\r\n    *       icon: <img ... />\r\n    *       shortcut: \"Ctrl + D\"\r\n    *       subMenu: {other Menu}\r\n    *   }\r\n*   ]\r\n* ]\r\n* */\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {isLeftClick} from \"./AwesomwGridLayoutHelper\";\r\n\r\nexport default class SelectManager {\r\n    constructor() {\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            this.ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n        });\r\n        window.addEventListener(\"keyup\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            if (key === 17) {\r\n                this.ctrl = false;\r\n            }\r\n        });\r\n\r\n        this.ctrl = false;\r\n        this.shift = false;\r\n        this.alt = false;\r\n\r\n        this.mouseDown = 0;\r\n        window.addEventListener(\"mousedown\",(e) =>{\r\n            if (isLeftClick(e))\r\n                this.mouseDown = 1;\r\n        });\r\n        window.addEventListener(\"mouseup\",(e) =>{\r\n            if (isLeftClick(e) && this.mouseDown > 0)\r\n                this.mouseDown = 0;\r\n        });\r\n    }\r\n}\r\n","import {throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport {\r\n    createStack,\r\n    getSectionId,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport ContainerBase from \"./Components/Containers/ContainerBase\";\r\nimport React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport throttle from \"lodash.throttle\";\r\n\r\nexport default class SelectManager {\r\n    constructor(inputManager, groupSelectRef, pageAglRef, miniMenuHolderRef,\r\n                inspectorRef, resizeRef, helpLinesRef, hoverRef) {\r\n        this.inputManager = inputManager;\r\n        this.groupSelectRef = groupSelectRef;\r\n        this.pageAglRef = pageAglRef;\r\n        this.miniMenuHolderRef = miniMenuHolderRef;\r\n        this.inspectorRef = inspectorRef;\r\n        this.resizeRef = resizeRef;\r\n        this.helpLinesRef = helpLinesRef;\r\n        this.hoverRef = hoverRef;\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 71 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + G\");\r\n                this.editGrid();\r\n            }\r\n            if ( key === 49 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 1\");\r\n                this.test1();\r\n            }\r\n            if ( key === 50 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 2\");\r\n                this.test2();\r\n            }\r\n            if ( key === 51 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 3\");\r\n                this.test3();\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageOverflowRef = () => {\r\n        if (this.pageAglRef.current)\r\n            return this.pageAglRef.current.overflowRef.current;\r\n    };\r\n\r\n    editGrid = (item) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        } else if (!item){\r\n            item = this.getSelected();\r\n        }\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.editGrid();\r\n    };\r\n\r\n    selectItem = (item, clicked, dontUpdateAdjustments) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        }\r\n\r\n        if (this.inputManager.ctrl && clicked && getSectionId(this.selectedItem) === getSectionId(item)) {\r\n            this.createGroup(item);\r\n            return;\r\n        } else if (this.inputManager.ctrl){\r\n            // TODO can notify to user that can't select multiple item from different section\r\n            this.clearGroup();\r\n        } else {\r\n            this.clearGroup();\r\n        }\r\n\r\n        if (this.selectedItem.props.id !== item.props.id){\r\n            this.selectedItem.onSelect(false, undefined, true);\r\n        }\r\n\r\n        if (!dontUpdateAdjustments) {\r\n            if (this.selectedItem.props.id !== item.props.id){\r\n                this.updateMenu();\r\n            }\r\n\r\n            this.updateMiniMenu(item);\r\n            this.setInspector(\r\n                item.props.getInspector()\r\n            );\r\n            this.updateResizePanes(item, item.getSize(false));\r\n        }\r\n\r\n        this.selectedItem = item;\r\n    };\r\n\r\n    clearMiniMenu = () => {\r\n        this.miniMenuHolderRef.current.clearMiniMenu();\r\n    };\r\n\r\n    onContextMenu = (e, item) => {\r\n        this.miniMenuHolderRef.current.onContextMenu(e, item);\r\n    };\r\n\r\n    updateMiniMenu = (item) => {\r\n        if(!item)\r\n            item = this.getSelected();\r\n\r\n        if (item && item.hasMiniMenu())\r\n            this.miniMenuHolderRef.current.addMiniMenu(item);\r\n        else\r\n            this.clearMiniMenu();\r\n    };\r\n\r\n    updateMenu = (menu) => {\r\n        this.miniMenuHolderRef.current.addMenu(menu);\r\n    };\r\n\r\n    setInspector = (inspectorMenu) => {\r\n        this.inspectorRef.current.setMenu(inspectorMenu);\r\n    };\r\n\r\n    clearGroup = () => {\r\n        if (!this.group)\r\n            return;\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: false,\r\n                groupDragStart: undefined,\r\n                groupDrag: undefined,\r\n                groupDragStop: undefined,\r\n            });\r\n            item.onSelect(false, undefined, true);\r\n        });\r\n\r\n        this.group = undefined;\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    createGroup = (item) => {\r\n        let selectedItem = this.selectedItem;\r\n        this.selectedItem = undefined;\r\n\r\n        if (!this.group) {\r\n            this.group = [];\r\n            selectedItem && this.group.push(selectedItem);\r\n        }\r\n\r\n        item && this.group.push(item);\r\n\r\n        this.updateResizePanes();\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: true,\r\n                groupDragStart: this.groupDragStart,\r\n                groupDrag: this.groupDrag,\r\n                groupDragStop: this.groupDragStop,\r\n            });\r\n        });\r\n\r\n        this.updateGroupRect();\r\n        this.clearMiniMenu();\r\n        this.updateMenu();\r\n    };\r\n\r\n    groupDragStart = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStart(e, true);\r\n        });\r\n    };\r\n\r\n    groupDrag = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDrag(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    groupDragStop = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStop(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    deleteGroup = () => {\r\n        if (!this.group) {\r\n            return;\r\n        }\r\n\r\n        this.group.forEach(item => {\r\n            item.delete();\r\n        });\r\n\r\n        this.clearGroup();\r\n    };\r\n\r\n    updateGroupRect = () => {\r\n        if (!this.group) {\r\n            this.groupSelectRef.current.updateRect();\r\n            return;\r\n        }\r\n\r\n        let firstRect = this.group[0].getSize(false, true);\r\n        let top = firstRect.top;\r\n        let left = firstRect.left;\r\n        let bottom = window.innerHeight - firstRect.top - firstRect.height;\r\n        let right =  window.innerWidth - firstRect.left - firstRect.width;\r\n\r\n        this.group.slice(1, this.group.length).forEach(item => {\r\n            let rect = item.getSize(false, true);\r\n            top = Math.min(top, rect.top);\r\n            left = Math.min(left, rect.left);\r\n            bottom = Math.min(bottom, window.innerHeight - rect.top - rect.height);\r\n            right = Math.min(right, window.innerWidth - rect.left - rect.width);\r\n        });\r\n\r\n        this.groupSelectRef.current.updateRect({\r\n            top, left, bottom, right\r\n        }, this.group);\r\n    };\r\n\r\n    getSelected = () => {\r\n        return this.selectedItem;\r\n    };\r\n\r\n    updateParentsRect = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects(true, true);\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects(true, true);\r\n    }, 40);\r\n\r\n    // change grid line positions and resize panes\r\n    onScrollItem = throttleDebounce(() => {\r\n        this.updateGroupRect();\r\n\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects();\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects();\r\n\r\n        let size = item.getSize(false, true);\r\n        item.updateGridLines(\r\n            size.top, size.left,\r\n            window.innerHeight - size.top - size.height,\r\n            window.innerWidth - size.left - size.width,\r\n            \"A\"\r\n        );\r\n        item.updateGridEditor();\r\n        this.updateMiniMenu();\r\n        this.updateResizePanes(item, size);\r\n\r\n        this.updateHelpSizeLines(item, item.state.helpLinesParent, size, item.state.dragging,\r\n            item.getBoundarySize(true));\r\n        this.updateHover(item, size);\r\n    }, 50);\r\n\r\n    // updateSize\r\n    updateSize = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        let size = item.getSize(true, true);\r\n\r\n        this.updateResizePanes(item, size);\r\n    }, 100);\r\n\r\n    updateResizePanes = (item, data) => {\r\n        this.resizeRef.current.update(item, data, item && item.getTransformStyleId());\r\n    };\r\n\r\n    updateHelpLines = throttle((item, helpLineParent, itemRect, dragging) => {\r\n        this.updateHelpSizeLines(item, helpLineParent, itemRect, dragging,\r\n            item.getBoundarySize());\r\n    }, 50);\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        if (this.helpLinesRef.current)\r\n            return this.helpLinesRef.current.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    updateHover = (item, size, clear) => {\r\n        this.hoverRef.current.update(item, size, clear);\r\n    };\r\n\r\n    activateHover = (active) => {\r\n        this.hoverRef.current.activate(active);\r\n    };\r\n\r\n    activateResize = (active) => {\r\n        this.resizeRef.current.activate(active);\r\n    };\r\n\r\n    updateHelpSizeLines = (item, helpLineParent, itemRect, dragging, fakeItemRect) => {\r\n        if (this.helpLinesRef.current)\r\n            this.helpLinesRef.current.update(item, helpLineParent, itemRect, dragging, fakeItemRect);\r\n    };\r\n\r\n    test1 = () => {\r\n        createStack(this.group);\r\n    };\r\n\r\n    test2 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        let child =\r\n            <ContainerBase\r\n                style={{\r\n                    width: \"50%\",\r\n                    height: \"auto\",\r\n                    minHeight: \"75px\"\r\n                }}\r\n                data={{\r\n                    bpData: {\r\n                        design:{\r\n                            fillColor: `#5cff${Math.floor(Math.random() * 89) + 10  }`,\r\n                        },\r\n                    }\r\n                }}\r\n            />;\r\n\r\n        item.addChild(child, undefined, undefined, undefined, (agl) => {\r\n        }, undefined, true);\r\n    };\r\n\r\n    test3 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        item.playAnimation();\r\n    };\r\n}\r\n","export default class SnapManager {\r\n    constructor (snapThreshold, snapSvgRef) {\r\n        this.snaps = {};\r\n        this.snapThreshold = snapThreshold || 10;\r\n        this.snapSvgRef = snapSvgRef;\r\n    }\r\n\r\n    addSnap = (id, horizontals = [], verticals = [], parentsId) => {\r\n        this.snaps[id] = {\r\n            horizontals, verticals, id, parentsId\r\n        };\r\n    };\r\n\r\n    removeSnap = (id) => {\r\n        delete this.snaps[id];\r\n    };\r\n\r\n    checkSnap = (top, left, ignoreId, additionalSnaps = []) => {\r\n        let snapH, snapV;\r\n        let topUp = top + this.snapThreshold;\r\n        let topDown = top - this.snapThreshold;\r\n        let leftUp = left + this.snapThreshold;\r\n        let leftDown = left - this.snapThreshold;\r\n\r\n        let snaps = Object.values(this.snaps);\r\n        snaps = snaps.concat(additionalSnaps);\r\n\r\n        for (let i = 0; i < snaps.length; i++) {\r\n            let snap = snaps[i];\r\n            if (!snap)\r\n                continue;\r\n\r\n            if (snap.id === ignoreId)\r\n                continue;\r\n            if (snap.parentsId && snap.parentsId.includes(ignoreId))\r\n                continue;\r\n\r\n            if (!snapH){\r\n                for (let h = 0; h < snap.horizontals.length; h++) {\r\n                    let horizontal = snap.horizontals[h];\r\n                    if (horizontal.value <= topUp && horizontal.value >= topDown) {\r\n                        snapH = horizontal;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!snapV) {\r\n                for (let v = 0; v < snap.verticals.length; v++) {\r\n                    let vertical = snap.verticals[v];\r\n                    if (vertical.value <= leftUp && vertical.value >= leftDown) {\r\n                        snapV = vertical;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (snapH && snapV)\r\n                break;\r\n        }\r\n\r\n        return {snapH, snapV};\r\n    }\r\n\r\n    drawSnap = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.snapSvgRef.current.update(snapH, snapV, pointOfSnapH, pointOfSnapV)\r\n    }\r\n}\r\n","import {createItem} from \"./AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport throttle from \"lodash.throttle\";\r\n\r\nexport default class CopyManager {\r\n    constructor(selectManager, pageRef, dragdrop) {\r\n        this.selectManager = selectManager;\r\n        this.pageRef = pageRef;\r\n        this.dragdrop = dragdrop;\r\n\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 86 && ctrl ) {\r\n                console.log(\"ctrl + V\");\r\n                this.paste();\r\n            } else if ( key === 67 && ctrl ) {\r\n                console.log(\"ctrl + C\");\r\n                this.copy();\r\n            } else if ( key === 68 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + D\");\r\n                this.duplicate();\r\n            } else if ( key === 46 ) {\r\n                console.log(\"delete\");\r\n                this.delete();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    copy = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copyItem = item;\r\n    };\r\n\r\n    getCopyItem = () => {\r\n        return this.copyItem;\r\n    };\r\n\r\n    paste = throttle((selectedItem) => {\r\n        if (!this.copyItem)\r\n            return;\r\n        let destinationItem;\r\n        if (!selectedItem)\r\n            selectedItem = this.selectManager.getSelected() || this.pageRef.current;\r\n\r\n        while (!destinationItem)  {\r\n            if (selectedItem.getFromTempData(\"isContainer\")) {\r\n                destinationItem = selectedItem;\r\n            } else {\r\n                selectedItem = selectedItem.props.parent;\r\n            }\r\n        }\r\n\r\n        let style = cloneObject(this.getCopyItem().getFromData(\"style\"));\r\n        let gridItemStyle = cloneObject(this.getCopyItem().getFromData(\"gridItemStyle\"));\r\n        let copyRect = this.getCopyItem().getSize(false);\r\n        let parentRect = destinationItem.getSize(false);\r\n        if (destinationItem === this.getCopyItem().props.parent) {\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginLeft =\r\n                    (parseFloat(gridItemStyle.marginLeft.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginTop =\r\n                    (parseFloat(gridItemStyle.marginTop.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginRight)\r\n                gridItemStyle.marginRight =\r\n                    (parseFloat(gridItemStyle.marginRight.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginBottom)\r\n                gridItemStyle.marginBottom =\r\n                    (parseFloat(gridItemStyle.marginBottom.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n\r\n            if (!gridItemStyle.marginLeft && !gridItemStyle.marginRight)\r\n                gridItemStyle.marginLeft = \"20px\";\r\n            if (!gridItemStyle.marginTop && !gridItemStyle.marginBottom)\r\n                gridItemStyle.marginTop = \"20px\";\r\n        } else {\r\n            delete gridItemStyle.marginLeft;\r\n            delete gridItemStyle.marginTop;\r\n            delete gridItemStyle.marginRight;\r\n            delete gridItemStyle.marginBottom;\r\n\r\n            gridItemStyle.justifySelf = \"center\";\r\n            gridItemStyle.alignSelf = \"center\";\r\n\r\n            if (style.width.toString().includes(\"%\")) {\r\n                style.width = (copyRect.width / parentRect.width * 100).toString() + \"%\";\r\n            }\r\n            if (style.height.toString().includes(\"%\")) {\r\n                style.height = (copyRect.height / parentRect.height * 100).toString() + \"%\";\r\n            }\r\n        }\r\n\r\n        createItem(destinationItem, {\r\n            props: this.getCopyItem().props,\r\n            tagName: this.getCopyItem().props.tagName\r\n        }, undefined, gridItemStyle, style);\r\n    }, 200);\r\n\r\n    duplicate = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copy(item);\r\n        this.paste(item.props.parent);\r\n        this.copyItem = false;\r\n    };\r\n\r\n    delete = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item && !this.selectManager.group)\r\n            return;\r\n\r\n        this.selectManager.deleteGroup();\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.delete();\r\n    };\r\n}\r\n","export default class IdManager {\r\n    constructor(prefix) {\r\n        this.prefix = prefix + '_';\r\n        this.allId = {};\r\n    }\r\n\r\n    clear = () => {\r\n        this.allId = {};\r\n    };\r\n\r\n    getId = (preferName, fixName) => {\r\n        let result;\r\n        let baseId = !fixName? this.prefix + preferName: fixName;\r\n        let id = baseId;\r\n        let postNo = 1;\r\n        while (!result) {\r\n            if (this.allId[id]) {\r\n                id = baseId + \"_\" + postNo;\r\n                postNo++;\r\n            } else {\r\n                result = id;\r\n            }\r\n        }\r\n\r\n        this.allId[id] = true;\r\n\r\n        return result;\r\n    };\r\n\r\n    setItem = (id, item) => {\r\n        this.allId[id] = item;\r\n    };\r\n\r\n    // return agl reference\r\n    getItem = (id) => {\r\n        return this.allId[id];\r\n    };\r\n\r\n    removeId = (id) => {\r\n        delete this.allId[id];\r\n    };\r\n}\r\n","import throttle from 'lodash.throttle';\r\n\r\nexport default class UndoRedo {\r\n    constructor(max, document, idMan) {\r\n        this.undoQueue = [];\r\n        this.redoQueue = [];\r\n        this.max = max || 20;\r\n        this.idMan = idMan;\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'z') {\r\n                this.undo();\r\n            }\r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'Z') {\r\n                this.redo();\r\n            }\r\n        });\r\n    }\r\n\r\n    getQueueObject = (func, undo, power) => {\r\n        return {\r\n            redo: func,\r\n            undo: undo,\r\n            power: (typeof power === 'number') ? power : undefined\r\n        }\r\n    };\r\n\r\n    add = (func, undo, power) => {\r\n        this.undoQueue.unshift(this.getQueueObject(func, undo, power));\r\n        if (this.undoQueue.length > this.max)\r\n            this.undoQueue.pop();\r\n        this.redoQueue = [];\r\n    };\r\n\r\n    undo = throttle(() => {\r\n        this.undoFunc();\r\n    }, 200);\r\n\r\n    undoFunc = () => {\r\n        if (this.undoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.undoQueue.shift();\r\n        let power = object.power || 1;\r\n\r\n        power--;\r\n        object.undo(this.idMan);\r\n        this.redoQueue.unshift(object);\r\n\r\n        while (power > 0) {\r\n            power--;\r\n            this.undoFunc();\r\n        }\r\n    };\r\n\r\n    hasUndo = () => {\r\n        return this.undoQueue.length > 0;\r\n    };\r\n\r\n    redo = throttle(() => {\r\n        if (this.redoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.redoQueue.shift();\r\n        object.redo(this.idMan);\r\n        this.undoQueue.unshift(object);\r\n    }, 100);\r\n\r\n    hasRedo = () => {\r\n        return this.redoQueue.length > 0;\r\n    };\r\n};\r\n","export default class GridLineManager {\r\n    constructor(gridContainerRef) {\r\n        this.gridContainerRef = gridContainerRef;\r\n    }\r\n\r\n    addGrid = (id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.gridContainerRef.current.addGrid(id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.gridContainerRef.current.getIdCache(gridType);\r\n    };\r\n\r\n    getXlineRef = (id) => {\r\n        return this.gridContainerRef.current.getXlineRef(id);\r\n    };\r\n\r\n    getYlineRef = (id) => {\r\n        return this.gridContainerRef.current.getYlineRef(id);\r\n    };\r\n\r\n    removeGridLine = (id) => {\r\n        this.gridContainerRef.current.removeGridLine(id);\r\n    };\r\n\r\n    removeGridLineByType = (type) => {\r\n        this.gridContainerRef.current.removeGridLineByType(type);\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        this.gridContainerRef.current.prepareRects(id);\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (this.gridContainerRef.current)\r\n            return this.gridContainerRef.current.hasGridLine(id, gridType);\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.gridContainerRef.current)\r\n            return this.gridContainerRef.current.isPrepared(id);\r\n    };\r\n}\r\n","import {v4 as uuidv4} from 'uuid';\r\nimport { goToAnchor } from 'react-scrollable-anchor'\r\n\r\nexport default class AnchorManager {\r\n    constructor(siteData) {\r\n        // TODO init all anchors\r\n        this.allAnchors = {};\r\n    }\r\n\r\n    addAnchor = (name, item) => {\r\n        let pageId = item.props.viewRef.current.props.pageId;\r\n        let id = uuidv4();\r\n        this.allAnchors[id] = {pageId, name, id};\r\n        item.setAnchor(this.allAnchors[id]);\r\n    };\r\n\r\n    modifyAnchor = (id, newName, item) => {\r\n        let anchor = this.allAnchors[id];\r\n        if (!anchor) {\r\n            this.addAnchor(newName, item);\r\n            return;\r\n        }\r\n\r\n        anchor.name = newName;\r\n\r\n        item.setAnchor(anchor);\r\n    };\r\n\r\n    removeAnchor = (id, item) => {\r\n        delete this.allAnchors[id];\r\n        item.setAnchor();\r\n    };\r\n\r\n    goToAnchor = (id, saveToHistory) => {\r\n        goToAnchor(id, saveToHistory);\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentGridRoot extends React.PureComponent {\r\n    render () {\r\n        let {top, left, bottom, right} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridRoot\"\r\n                className=\"AdjustmentGridRoot\"\r\n                style={{top, left, bottom, right}}\r\n            >\r\n                {\r\n                    this.props.children\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentGridRow extends React.Component {\r\n    // TODO BUG: first and last grid line is not provided, fix the bug\r\n    render () {\r\n        let {gridLineManager, itemId, grid} = this.props;\r\n        let rowLines = gridLineManager.getYlineRef(itemId);\r\n        return (\r\n            <div\r\n                className=\"AdjustmentGridRowEditor\"\r\n            >\r\n                {\r\n                    new Array(grid.x).fill(0).map((x, index) => {\r\n                        let rowLine = rowLines[index];\r\n                        let rowLineRect = rowLine.current.rect;\r\n                        let nextRowLineRect = rowLines[index + 1].current.rect;\r\n                        let rowHeight = grid.gridTemplateRows.split(' ')[index];\r\n                        let classes = classNames(\r\n                            \"AdjustmentGridRowEditorItem\",\r\n                            index === 0 && \"AdjustmentGridRowEditorItemTop\",\r\n                            index === grid.x - 1 && \"AdjustmentGridRowEditorItemBottom\",\r\n                        );\r\n                        return(\r\n                                <div\r\n                                    key={`row_${index}`}\r\n                                    className={classes}\r\n                                    style={{\r\n                                        height: nextRowLineRect.top - rowLineRect.top,\r\n                                    }}\r\n                                >\r\n                                    <p style={{\r\n                                        margin: 0,\r\n                                        fontWeight: \"bold\"\r\n                                    }}>\r\n                                        {rowHeight}\r\n                                    </p>\r\n                                </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentGridRoot from \"./AdjustmentGridRoot\";\r\nimport AdjustmentGridRow from \"./AdjustmentGridRow\";\r\n\r\nexport default class AdjustmentGrid extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item: undefined,\r\n            grid: undefined,\r\n            gridLineManager: undefined\r\n        };\r\n    }\r\n\r\n    editing = (item) => {\r\n        let grid = item.getFromData(\"grid\");\r\n        let gridLineManager = item.props.gridLine;\r\n        this.setState({item, grid, gridLineManager});\r\n    };\r\n\r\n    update = (item) => {\r\n        if (item === item)\r\n            this.forceUpdate();\r\n    };\r\n\r\n    addRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        if (grid.x === 100)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        grid.x++;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 0, \"minmax(100px,max-content)\");\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    addColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 100)\r\n            return;\r\n\r\n        grid.y++;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 0, \"1fr\");\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeColumnWidth = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1, newValue);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeRowHeight = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1, newValue);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.x === 1)\r\n            return;\r\n\r\n        grid.x--;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 1)\r\n            return;\r\n\r\n        grid.y--;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    render () {\r\n        let {gridLineManager, item, grid} = this.state;\r\n        if (!item)\r\n            return null;\r\n\r\n        let positions = gridLineManager.getIdCache(\"A\").positions;\r\n        return (\r\n            <AdjustmentGridRoot\r\n                top={positions.top}\r\n                left={positions.left}\r\n                bottom={positions.bottom}\r\n                right={positions.right}\r\n            >\r\n                <AdjustmentGridRow\r\n                    gridLineManager={gridLineManager}\r\n                    itemId={item.props.id}\r\n                    grid={grid}\r\n                />\r\n            </AdjustmentGridRoot>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentSnapLines extends React.Component {\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.props;\r\n        if (!snapH && !snapV)\r\n            return null;\r\n\r\n        if (snapH) {\r\n            return (\r\n                <line\r\n                    x1={Math.min(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    x2={Math.max(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    y1={snapH.value}\r\n                    y2={snapH.value}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <line\r\n                    x1={snapV.value}\r\n                    x2={snapV.value}\r\n                    y1={Math.min(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    y2={Math.max(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\n\r\nexport default class AdjustmentSnap extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    update = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.setState({\r\n            snapH, snapV, pointOfSnapH, pointOfSnapV\r\n        });\r\n    };\r\n\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.state;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentSnapLinesRoot\"\r\n            >\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    <AdjustmentSnapLines\r\n                        snapH={snapH}\r\n                        pointOfSnapH={pointOfSnapH}\r\n                    />\r\n                    <AdjustmentSnapLines\r\n                        snapV={snapV}\r\n                        pointOfSnapV={pointOfSnapV}\r\n                    />\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class GridLine extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render () {\r\n        let {id, lineRef, style} = this.props;\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                id={id}\r\n                ref={lineRef}\r\n                style={style}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\nimport Portal from \"@material-ui/core/Portal/Portal\";\r\nimport GridLine from \"./GridLine\";\r\n\r\nexport default class AdjustmentGridLinesWrapper2 extends React.PureComponent {\r\n    needUpdate = throttleDebounce(() => {\r\n        this.forceUpdate();\r\n    }, 100);\r\n\r\n    render () {\r\n        let {yNo, xNo, yLineRef, xLineRef, refId} = this.props;\r\n\r\n        if (yNo >= 0 && xNo >= 0 && !document.getElementById(`${refId}_container`))\r\n            this.needUpdate();\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    new Array(yNo + 1).fill(0).map((y, index) => {\r\n                        if (index === 0 || index === yNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesY\"\r\n                                id={`y_${index}_${refId}`}\r\n                                lineRef={yLineRef[index]}\r\n                                style={{\r\n                                    top: index === yNo ? \"unset\" : 0,\r\n                                    bottom: index === yNo ? 0 : \"unset\",\r\n                                    gridArea: `${index + 1}/1/${index + 1}/${xNo + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n                {\r\n                    new Array(xNo + 1).fill(0).map((x, index) => {\r\n                        if (index === 0 || index === xNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesX\"\r\n                                id={`x_${index}_${refId}`}\r\n                                lineRef={xLineRef[index]}\r\n                                style={{\r\n                                    left: index === xNo? \"unset\": 0,\r\n                                    right: index === xNo? 0: \"unset\",\r\n                                    gridArea: `1/${index + 1}/${yNo + 1}/${index + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {getCachedBoundingRect} from \"../Test/WindowCache\";\r\nimport AdjustmentGridLinesWrapper2 from \"./AdjustmentGridLinesWrapper2\";\r\n\r\nexport default class AdjustmentGridLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xNoA: -1,\r\n            yNoA: -1,\r\n            xNoB: -1,\r\n            yNoB: -1,\r\n            xNoT: -1,\r\n            yNoT: -1,\r\n        };\r\n\r\n        this.xLineRefA = new Array(100);\r\n        this.yLineRefA = new Array(100);\r\n        this.xLineRefB = new Array(100);\r\n        this.yLineRefB = new Array(100);\r\n        this.xLineRefT = new Array(100);\r\n        this.yLineRefT = new Array(100);\r\n\r\n        this.idCache = {};\r\n    }\r\n\r\n    fixLineRef = (x, y, gridType) => {\r\n        for (let i = 0; i <= x; i++) {\r\n            if (!this[`xLineRef${gridType}`][i])\r\n                this[`xLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n        for (let i = 0; i <= y; i++) {\r\n            if (!this[`yLineRef${gridType}`][i])\r\n                this[`yLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n    };\r\n\r\n    addGrid = (id, y, x, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.fixLineRef(x, y, gridType);\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id && gridType === \"A\") {\r\n            this.updateGridLine(id, \"A\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id && gridType === \"B\") {\r\n            this.updateGridLine(id, \"B\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id && gridType === \"T\") {\r\n            this.updateGridLine(id, \"T\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else {\r\n            this.idCache[gridType] = {id, gridTemplateRows, gridTemplateColumns, positions, x, y};\r\n\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, () => {\r\n                // this.prepareRects(id);\r\n                if (callback)\r\n                    callback();\r\n            })\r\n        }\r\n    };\r\n\r\n    updateGridLine = (id, gridType, {gridTemplateRows, gridTemplateColumns, positions, x, y} = {}, callback) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        gridTemplateRows && (this.idCache[gridType].gridTemplateRows = gridTemplateRows);\r\n        gridTemplateColumns && (this.idCache[gridType].gridTemplateColumns = gridTemplateColumns);\r\n        positions && (this.idCache[gridType].positions = positions);\r\n        x && (this.idCache[gridType].x = x);\r\n        y && (this.idCache[gridType].y = y);\r\n\r\n        if (!x && !y) {\r\n            this.setState({reload: true}, callback);\r\n            return;\r\n        }\r\n\r\n        if (x || y)\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.idCache[gridType];\r\n    };\r\n\r\n    getXlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        return this[`xLineRef${gridType}`].slice(0, this.idCache[gridType].x + 1);\r\n    };\r\n\r\n    getYlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        return this[`yLineRef${gridType}`].slice(0, this.idCache[gridType].y + 1);\r\n    };\r\n\r\n    removeGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                return \"A\";\r\n\r\n            if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                return \"B\";\r\n\r\n            if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                return \"T\";\r\n        } else {\r\n            if (this.idCache[gridType] && this.idCache[gridType].id === id)\r\n                return gridType;\r\n        }\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].prepared)\r\n            return true;\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        let xLineRef = this.getXlineRef(id);\r\n        if (xLineRef)\r\n            for(let i = 0; i < xLineRef.length; i++) {\r\n                let current = xLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`xLineRef_${i}_${id}`, current);\r\n            }\r\n        let yLineRef = this.getYlineRef(id);\r\n        if (yLineRef)\r\n            for(let i = 0; i < yLineRef.length; i++) {\r\n                let current = yLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`yLineRef_${i}_${id}`, current);\r\n            }\r\n\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n            this.idCache[\"A\"].prepared = true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n            this.idCache[\"B\"].prepared = true;\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n            this.idCache[\"T\"].prepared = true;\r\n    };\r\n\r\n    removeGridLineByType = (gridType) => {\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridLinesRoot\"\r\n                className=\"AdjustmentGridLinesRoot\"\r\n            >\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_A\"}\r\n                    refId={this.idCache[\"A\"] && this.idCache[\"A\"].id}\r\n                    xNo={this.state.xNoA}\r\n                    yNo={this.state.yNoA}\r\n                    xLineRef={this.xLineRefA}\r\n                    yLineRef={this.yLineRefA}\r\n                    gridTemplateRows={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateColumns}\r\n                    top={this.idCache[\"A\"] && this.idCache[\"A\"].positions.top}\r\n                    bottom={this.idCache[\"A\"] && this.idCache[\"A\"].positions.bottom}\r\n                    left={this.idCache[\"A\"] && this.idCache[\"A\"].positions.left}\r\n                    right={this.idCache[\"A\"] && this.idCache[\"A\"].positions.right}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_B\"}\r\n                    refId={this.idCache[\"B\"] && this.idCache[\"B\"].id}\r\n                    xNo={this.state.xNoB}\r\n                    yNo={this.state.yNoB}\r\n                    xLineRef={this.xLineRefB}\r\n                    yLineRef={this.yLineRefB}\r\n                    gridTemplateRows={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateColumns}\r\n                    top={this.idCache[\"B\"] && this.idCache[\"B\"].positions.top}\r\n                    bottom={this.idCache[\"B\"] && this.idCache[\"B\"].positions.bottom}\r\n                    left={this.idCache[\"B\"] && this.idCache[\"B\"].positions.left}\r\n                    right={this.idCache[\"B\"] && this.idCache[\"B\"].positions.right}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_T\"}\r\n                    refId={this.idCache[\"T\"] && this.idCache[\"T\"].id}\r\n                    xNo={this.state.xNoT}\r\n                    yNo={this.state.yNoT}\r\n                    xLineRef={this.xLineRefT}\r\n                    yLineRef={this.yLineRefT}\r\n                    gridTemplateRows={this.idCache[\"T\"] && this.idCache[\"T\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"T\"] && this.idCache[\"T\"].gridTemplateColumns}\r\n                    top={this.idCache[\"T\"] && this.idCache[\"T\"].positions.top}\r\n                    bottom={this.idCache[\"T\"] && this.idCache[\"T\"].positions.bottom}\r\n                    left={this.idCache[\"T\"] && this.idCache[\"T\"].positions.left}\r\n                    right={this.idCache[\"T\"] && this.idCache[\"T\"].positions.right}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ResizePane extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane`,\r\n            this.props.enabled && `Adjustment-${this.props.side}-pane-circle`,\r\n            `Adjustment-${this.props.side}-pane-line`,\r\n            {\"Adjustment-CornerCircle\": this.props.enabled && this.isCorner()},\r\n            \"Adjustment-Pane\",\r\n            !this.props.enabled && \"ResizePanePointerNone\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.props.enabled ? this.onMouseDown : undefined}\r\n                className={classes}\r\n                style={{...style, ...this.props.style}}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport {cloneObject} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentGroupRect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rect: undefined,\r\n            group: undefined,\r\n            draggingStart: false\r\n        }\r\n    }\r\n\r\n    updateRect = (rect, group) => {\r\n        this.setState({rect, group});\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n        this.resizing = true;\r\n\r\n        this.setState({draggingStart: true});\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStart(e, dir, delta, true);\r\n        });\r\n\r\n        let {rect} = this.state;\r\n        this.resizeData = {\r\n            firstX: window.innerWidth - rect.left - rect.right,\r\n            firstY: window.innerHeight - rect.top - rect.bottom,\r\n            firstTop: rect.top,\r\n            firstLeft: rect.left,\r\n        };\r\n    };\r\n\r\n    onResize = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResize(e, dir, delta, true);\r\n        });\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n        delete rect.height;\r\n        delete rect.width;\r\n\r\n        let deltaY = delta.y;\r\n        let deltaX = delta.x;\r\n        if (dir.includes('n')) {\r\n            if (this.resizeData.firstY <= deltaY)\r\n                deltaY = this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY - deltaY;\r\n            rect.top = this.resizeData.firstTop + deltaY;\r\n        }\r\n        if (dir.includes('s')) {\r\n            if (this.resizeData.firstY <= -deltaY)\r\n                deltaY = -this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY + deltaY;\r\n        }\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= -deltaX)\r\n                deltaX = -this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX + deltaX;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= deltaX)\r\n                deltaX = this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX - deltaX;\r\n            rect.left = this.resizeData.firstLeft + deltaX;\r\n        }\r\n\r\n        if (rect.height)\r\n            rect.bottom = window.innerWidth - rect.top - rect.height;\r\n        if (rect.width)\r\n        rect.right = window.innerWidth - rect.left - rect.width;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStop(e, dir, delta, true);\r\n        });\r\n\r\n        this.resizing = false;\r\n\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStart(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let {rect} = this.state;\r\n\r\n        this.dragData = {\r\n            x: rect.left,\r\n            y: rect.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDrag(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let deltaX = (e.clientX - this.dragData.lastMouseX);\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.x += deltaX;\r\n        this.dragData.y += deltaY;\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n\r\n        rect.top = this.dragData.y;\r\n        rect.left = this.dragData.x;\r\n        rect.right -= deltaX;\r\n        rect.bottom -= deltaY;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStop(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    render () {\r\n        let {rect} = this.state;\r\n        if (!rect)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGroupRect\"\r\n                style={rect}\r\n                className=\"AdjustmentResizeRoot\"\r\n            >\r\n                {\r\n                    ['n','s','e','w','ne','nw','se','sw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.onResizeStart}\r\n                            onResize={this.onResize}\r\n                            onResizeStop={this.onResizeStop}\r\n                            draggingStart={this.state.draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n\r\n                {/*<AdjustmentMove*/}\r\n                    {/*key={`${this.props.id}_move`}*/}\r\n                    {/*onDragStart={this.onDragStart}*/}\r\n                    {/*onDrag={this.onDrag}*/}\r\n                    {/*onDragStop={this.onDragStop}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\n\r\nexport default class RightClick extends React.Component {\r\n    onClick = (e) => {\r\n        this.props.onClick && this.props.onClick(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/more.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\n\r\nexport default class MiniMenuVerticalDivider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MiniMenuVerticalDivider\"/>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport '../../../HelperStyle.css';\r\n\r\nexport default class Help extends React.Component {\r\n    onClick = (e) => {\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/question.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\nimport RightClick from \"./Components/RightClick\";\r\nimport MiniMenuVerticalDivider from \"./MiniMenuVerticalDivider\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Help from \"./Components/Help\";\r\nimport {isHideInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nconst miniMenuId = \"wl_mini_menu\";\r\nexport default class MiniMenu extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            clear: true\r\n        };\r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({clear: true});\r\n    };\r\n\r\n    update = (itemId, shortcut, primary, item) => {\r\n        this.setState({\r\n            itemId\r\n            , shortcut, primary, clear: false,\r\n            item\r\n        })\r\n    };\r\n\r\n    getAnchor = () => {\r\n        return document.getElementById(`${this.state.itemId}_child_holder`) ||\r\n            document.getElementById(this.state.itemId);\r\n    };\r\n\r\n    render () {\r\n        if (this.state.clear)\r\n            return null;\r\n        if (!this.state.itemId || !this.getAnchor() ||\r\n            isHideInBreakpoint(this.state.item))\r\n            return null;\r\n        return (\r\n            <Popper\r\n                key={\"miniMenu\"}\r\n                open={true}\r\n                anchorEl={this.getAnchor()}\r\n                placement=\"bottom-start\"\r\n                style={{\r\n                    zIndex: 9999999\r\n                }}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'scrollParent',\r\n                    },\r\n                }}\r\n            >\r\n                <div className=\"MiniMenuRoot\"\r\n                     id={miniMenuId}\r\n                     style={{\r\n                        opacity:  !this.state.clear? 1: 0\r\n                     }}\r\n                >\r\n                    <div className=\"MiniMenuContainer\"\r\n                    >\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.shortcut.map(option => {\r\n                                return option;\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.shortcut.length > 0 && <MiniMenuVerticalDivider/>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.primary.map(option => {\r\n                                return option;\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.primary.length > 0 && <MiniMenuVerticalDivider/>\r\n                        }\r\n\r\n                        <Help/>\r\n                        <RightClick/>\r\n                    </div>\r\n                </div>\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Menu.css';\r\nimport MiniMenu from \"./MiniMenu/MiniMenu\";\r\nimport {createContextMenu} from \"../AwesomwGridLayoutHelper\";\r\n\r\nconst miniMenuHolderId = \"wl_menu_holder\";\r\nexport default class MenuHolder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n\r\n        this.miniMenuRef = React.createRef();\r\n    }\r\n\r\n    clearMiniMenu = () => {\r\n        this.state.active && this.miniMenuRef.current.clear();\r\n    };\r\n\r\n    addMiniMenu = (item) => {\r\n        if (item && this.state.active)\r\n            this.miniMenuRef.current.update(\r\n                item.props.id,\r\n                item.getShortcutOptions() || [],\r\n                item.getPrimaryOptions() || [],\r\n                item\r\n        );\r\n    };\r\n\r\n    addMenu = (menu) => {\r\n        this.setState({\r\n            menu: undefined,\r\n        });\r\n        if (menu) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    menu,\r\n                });\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    onContextMenu = (e, item) => {\r\n        this.setState({\r\n            contextMenu: createContextMenu(e, item, () => {\r\n                this.setState({contextMenu: undefined})\r\n            })\r\n        });\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id={miniMenuHolderId}\r\n                key={miniMenuHolderId}\r\n                className=\"MenuHolderRoot\"\r\n            >\r\n                <MiniMenu\r\n                    itemId={this.state.miniMenuItem && this.state.miniMenuItem.props.id}\r\n                    key={\"miniMenu\"}\r\n                    ref={this.miniMenuRef}\r\n                />\r\n                {\r\n                    !this.state.contextMenu &&\r\n                    this.state.menu\r\n                }\r\n                {\r\n                    this.state.contextMenu\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default class IFrameCommunicator {\r\n    constructor(origin, authKey, otherWindow, onMessage) {\r\n        this.onMessage = onMessage;\r\n        this.origin = origin;\r\n        this.otherWindow = otherWindow;\r\n        this.counter = 0;\r\n        this.authKey = authKey;\r\n        this.callbacks = {};\r\n        this.responses = {};\r\n\r\n        window.addEventListener(\"message\", (event) => {\r\n            if (this.origin && event.origin !== this.origin) {\r\n                return;\r\n            }\r\n\r\n            this.processIncomingMessage(event);\r\n        });\r\n    }\r\n\r\n    processIncomingMessage = (event) => {\r\n        let data = event.data;\r\n\r\n        if (!data || data.authKey !== this.authKey)\r\n            return;\r\n\r\n        if (data && data.r) {\r\n            let r = data.r;\r\n            this.callbacks[r](data);\r\n            delete this.callbacks[r];\r\n        }\r\n        else\r\n        {\r\n            let responseFunc = () => {};\r\n            if (data && data.c) {\r\n                let c = data.c;\r\n                responseFunc = this.responses[c] = (data) => {\r\n                    data.r = c;\r\n                    this.post(data);\r\n                }\r\n            }\r\n\r\n            this.onMessage(event, responseFunc);\r\n        }\r\n    };\r\n\r\n    post = (data, callback) => {\r\n        if (callback) {\r\n            this.counter++;\r\n            data.c = this.counter;\r\n            this.callbacks[data.c] = callback;\r\n        }\r\n\r\n        data.authKey = this.authKey;\r\n        this.otherWindow.postMessage(data, this.origin || \"*\");\r\n    };\r\n}\r\n","export default class BreakpointController {\r\n    constructor(breakpointmanager, editorData, pageRef) {\r\n        this.breakpointmanager = breakpointmanager;\r\n        this.editorData = editorData;\r\n        this.pageRef = pageRef;\r\n    }\r\n\r\n    changeBreakpoint = (bpName) => {\r\n        if (this.breakpointmanager.current() === bpName)\r\n            return;\r\n\r\n        let bpData = this.breakpointmanager.getBpData(bpName);\r\n\r\n        if (!bpData)\r\n            return;\r\n\r\n        let width = Math.min(parseInt((bpData.start * (1.1)).toFixed(0)), bpData.end);\r\n        let left = (this.editorData.innerWidth - width) / 2;\r\n        if (left < 50)\r\n            left = 50;\r\n        let top = this.pageRef.current.getSize(false).top;\r\n        let height = this.pageRef.current.getSize(false).height;\r\n\r\n        this.pageRef.current.setSize(top, left, width, height);\r\n    };\r\n\r\n    changeWidth = (width) => {\r\n        let left = (this.editorData.innerWidth - width) / 2;\r\n        if (left < 50)\r\n            left = 50;\r\n        let top = this.pageRef.current.getSize(false).top;\r\n        let height = this.pageRef.current.getSize(false).height;\r\n\r\n        this.pageRef.current.setSize(top, left, width, height);\r\n    };\r\n\r\n    updateBreakpoint = (name, start, end) => {\r\n        this.breakpointmanager.updateBreakpoint(name, start, end);\r\n    };\r\n\r\n    deleteBreakpoint = (name) => {\r\n        this.breakpointmanager.deleteBreakpoint(name);\r\n    };\r\n}\r\n","import {createItem, setDataInBreakpoint} from \"../AwesomwGridLayoutHelper\";\r\nimport BreakpointController from \"./BreakpointController\";\r\n\r\nlet EditorController = {};\r\nlet AllowFunctions = {};\r\n\r\nEditorController.onMessage = (data, res, editor) => {\r\n    if (data.event === 'Controller' && AllowFunctions[data.func]) {\r\n        res(AllowFunctions[data.func](...data.inputs, editor));\r\n        return;\r\n    }\r\n\r\n    if (data.event === 'Editor') {\r\n        editor[data.func](...data.inputs, res);\r\n        // return;\r\n    }\r\n};\r\n\r\n// TODO GET functions\r\nAllowFunctions.getItemGridData = (itemId, editor) => {\r\n    return editor.idMan.getItem(itemId).props.griddata;\r\n};\r\nAllowFunctions.getLayout = (editor) => {\r\n    let layout = {\r\n        id: editor.rootLayoutRef.current.props.id,\r\n        griddata: editor.rootLayoutRef.current.props.griddata,\r\n        children: []\r\n    };\r\n    let fillData = (item, parent) => {\r\n        parent[item.props.id] = {\r\n            id: item.props.id,\r\n            griddata: item.props.griddata,\r\n            children: []\r\n        };\r\n\r\n        Object.values(item.allChildRefs).forEach(child => {\r\n            if (child && child.current)\r\n                fillData(child.current, parent[item.props.id].children);\r\n        });\r\n    };\r\n\r\n    fillData(editor.rootLayoutRef.current, layout.children);\r\n\r\n    return layout;\r\n};\r\nAllowFunctions.getSiteData = (editor) => {\r\n    return editor.state.siteData;\r\n};\r\nAllowFunctions.getBreakpointsData = (itemId, editor) => {\r\n    let item = editor.idMan.getItem(itemId);\r\n    return {\r\n        breakpoints: item.props.breakpointmanager.breakpoints,\r\n        currentWidth: item.props.breakpointmanager.lastWidth\r\n    }\r\n};\r\n\r\n// TODO POST functions\r\nAllowFunctions.changePage = (pageId, editor) => {\r\n    editor.onPageChange(pageId);\r\n    return true;\r\n};\r\nAllowFunctions.addItem = (parentId, childData, gridItemStyle, style, editor) => {\r\n    createItem(editor.idMan.getItem(parentId), childData, false, gridItemStyle, style);\r\n    return true;\r\n};\r\nAllowFunctions.breakpointManagerMethod = (method, inputs, editor) => {\r\n    let bpController = new BreakpointController(editor.breakpointmanager, editor.editorData, editor.rootLayoutRef);\r\n    bpController[method](inputs);\r\n\r\n    return editor.breakpointmanager.breakpoints;\r\n};\r\nAllowFunctions.undoRedoMethod = (method, inputs, editor) => {\r\n    editor.undoredo[method](inputs);\r\n    return true;\r\n};\r\nAllowFunctions.togglePreview = (preview, editor) => {\r\n    editor.togglePreview(preview);\r\n    return true;\r\n};\r\nAllowFunctions.setZoomLevel = (zoomLevel, editor) => {\r\n    editor.setZoomLevel(zoomLevel);\r\n    return true;\r\n};\r\n\r\n// TODO Edit functions\r\nAllowFunctions.setDataInBackground = (itemId, prop, value, editor) => {\r\n    let item = editor.idMan.getItem(itemId);\r\n    setDataInBreakpoint(prop, value, item, true);\r\n    return item.props.griddata;\r\n};\r\n\r\nexport default EditorController;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\n\r\nexport default class Inspector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open? 100: 0,\r\n            inspectorMenu: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent > 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent, open: (percent === 100)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = () => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent < 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent, open: (percent !== 0)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    setMenu = (inspectorMenu) => {\r\n        this.setState({inspectorMenu});\r\n    };\r\n\r\n    getDefaultMenu = () => {\r\n        return <div\r\n            className=\"InspectorDefaultMenuRoot\"\r\n        >\r\n            <span>\r\n                Select a component to show options\r\n            </span>\r\n        </div>\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"InspectorRoot\"\r\n                    style={\r\n                        !this.props.inspectorPinned ? {\r\n                            right: `${this.state.percent - 100}%`,\r\n                            opacity: this.state.percent / 100\r\n                        } : {right: \"0%\", opacity: 1}\r\n                    }\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    {\r\n                        this.state.inspectorMenu || this.getDefaultMenu()\r\n                    }\r\n                </div>\r\n                {\r\n                    this.props.inspectorPinned &&\r\n\r\n                    <div\r\n                        className=\"InspectorPinRoot\"\r\n                    >\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspector.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport {stretch} from \"../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AdjustmentStretch extends React.Component {\r\n    onClick = (e) => {\r\n        let {itemId, idMan} = this.props;\r\n        stretch(idMan.getItem(itemId));\r\n    };\r\n\r\n    onMouseDown = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        let {isStretch} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                className=\"AdjustmentStretchRoot\"\r\n                onPointerDown={this.onMouseDown}\r\n                onClick={this.onClick}\r\n                style={this.props.style}\r\n            >\r\n                {\r\n                    isStretch && <img draggable={false} width={16} height={16} src={require('./icons/minimize.svg')} />\r\n                }\r\n                {\r\n                    !isStretch && <img draggable={false} width={16} height={16} src={require('./icons/maximize.svg')} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport AdjustmentStretch from \"./AdjustmentStretch\";\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentResize extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(nextProps.data, this.data))\r\n            return true;\r\n\r\n        if (!shallowEqual(nextProps, this.props))\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    render () {\r\n        let {data, allowStretch, idMan, itemId, isStretch, draggingStart, transformStyleId, item} = this.props;\r\n        this.data = cloneObject(data);\r\n        let stretchStyle = {};\r\n        if (!allowStretch) stretchStyle.display = \"none\";\r\n\r\n        let classes = classNames(\r\n            \"AdjustmentResizeRoot\",\r\n            transformStyleId\r\n        );\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                style={{\r\n                    width: data.width,\r\n                    height: data.height,\r\n                    top: data.top,\r\n                    left: data.left,\r\n                    // transform: transform\r\n                }}\r\n                className={classes}\r\n            >\r\n                {\r\n                    !isStretch &&\r\n                    ['s','n','e','w','se','ne','sw','nw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            enabled={this.props.sides.includes(side)}\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.props.onResizeStart}\r\n                            onResize={this.props.onResize}\r\n                            onResizeStop={this.props.onResizeStop}\r\n                            draggingStart={draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n                {\r\n                    !(item.getCompositeFromData(\"transform\") || {}).rotateDegree &&\r\n                    <AdjustmentStretch\r\n                        style={stretchStyle}\r\n                        isStretch={isStretch}\r\n                        idMan={idMan}\r\n                        itemId={itemId}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {allowStretch, isGroupSelected, isHideInBreakpoint, isStretch} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentResize from \"./AdjustmentResize\";\r\n\r\nexport default class AdjustmentResizeWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n    }\r\n\r\n    update = (item, data, transformStyleId) => {\r\n        this.setState({item, data, transformStyleId});\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, data} = this.state;\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    item.getFromTempData(\"resizable\") &&\r\n                    !item.state.showAnimation &&\r\n                    !isGroupSelected(item) &&\r\n                    !isHideInBreakpoint(item) &&\r\n                    <AdjustmentResize\r\n                        id={item.props.id}\r\n                        key={`resize`}\r\n                        sides={item.props.resizeSides || ['n','s','e','w','ne','nw','se','sw']}\r\n                        onResizeStart={item.onResizeStart}\r\n                        onResize={item.onResize}\r\n                        onResizeStop={item.onResizeStop}\r\n                        draggingStart={item.state.draggingStart}\r\n                        isStretch={isStretch(item)}\r\n                        allowStretch={allowStretch(item)}\r\n                        itemId={item.props.id}\r\n                        item={item}\r\n                        idMan={item.props.idMan}\r\n                        transformStyleId={this.state.transformStyleId}\r\n                        data={data}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentHelpLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.helpLinesParent) {\r\n            let newParentRect = nextProps.helpLinesParent.getSize(false);\r\n\r\n            if (!shallowEqual(this.parentRect, cloneObject(newParentRect))) {\r\n                this.parentRect = newParentRect;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.props.width !== nextProps.width ||\r\n            this.props.height !== nextProps.height ||\r\n            this.props.show !== nextProps.show ||\r\n            this.props.dragging !== nextProps.dragging)\r\n            return true;\r\n\r\n        if (!shallowEqual(this.props.itemRect, nextProps.itemRect)) {\r\n            return true;\r\n        }\r\n        if (!shallowEqual(this.props.fakeItemRect, nextProps.fakeItemRect)) {\r\n            return true;\r\n        }\r\n        if (!shallowEqual(nextProps.item.getCompositeFromData(\"gridItemStyle\"), this.gridItemStyle)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getValue = (value) => {\r\n        if (value.includes(\"px\")) {\r\n            return `${parseFloat(value.replace(\"px\", \"\")).toFixed(1)}px`;\r\n        }\r\n        if (value.includes(\"%\")) {\r\n            return `${parseFloat(value.replace(\"%\", \"\")).toFixed(1)}%`;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    calculate = () => {\r\n        let {helpLinesParent, item, itemRect, width, height, dragging, fakeItemRect} = this.props;\r\n        // this.parentRect = this.parentRect || helpLinesParent.getSize(false);\r\n        this.parentRect = helpLinesParent.prepareRects();\r\n\r\n        if (fakeItemRect)\r\n            itemRect = fakeItemRect;\r\n        return {\r\n            ...item.calculateGridItem(itemRect.left - this.parentRect.left,\r\n                itemRect.top - this.parentRect.top, helpLinesParent,\r\n                width || itemRect.width, height || itemRect.height, this.parentRect, true, !dragging),\r\n            itemRect, parentRect: this.parentRect\r\n        };\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        return this.gridItemStyle;\r\n    };\r\n\r\n    render () {\r\n        let {show, item, transform, fakeItemRect} = this.props;\r\n        if (!show)\r\n            return null;\r\n\r\n        if (!item.mounted)\r\n            return null;\r\n\r\n        let {gridItemStyle, coordinates, itemRect, parentRect, coordinatesAbs} = this.calculate();\r\n        this.gridItemStyle = cloneObject(gridItemStyle);\r\n        if (fakeItemRect)\r\n            itemRect = fakeItemRect;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentHelpLinesRoot\"\r\n                style={{\r\n                    width: coordinatesAbs.cx2 - coordinatesAbs.cx1,\r\n                    height: coordinatesAbs.cy2 - coordinatesAbs.cy1,\r\n                    top: coordinatesAbs.cy1,\r\n                    left: coordinatesAbs.cx1,\r\n                }}\r\n            >\r\n                <div className=\"AdjustmentHelpLinesRect\" style={{\r\n                    top: itemRect.top - coordinatesAbs.cy1,\r\n                    left: itemRect.left - coordinatesAbs.cx1,\r\n                    width: itemRect.width,\r\n                    height: itemRect.height\r\n                }}/>\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&*/\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\")? \"visible\": \"hidden\"}\r\n                            x1={0}\r\n                            x2={itemRect.left - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&\r\n                        !this.props.dragging &&*/\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                !this.props.dragging)? \"visible\" : \"hidden\"}\r\n                            cx={0}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width}\r\n                            x2={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={0}\r\n                            y2={itemRect.top - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={0}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height}\r\n                            y2={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                </svg>\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-start\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                        left: (itemRect.left - coordinatesAbs.cx1) / 2,\r\n                        transform: \"translateY(-125%) translateX(-50%)\",\r\n                        margin: 0,\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#0013ff\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    >\r\n                            {this.getValue(gridItemStyle.marginLeft)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                            right: (coordinatesAbs.cx2 - itemRect.left - itemRect.width) / 2,\r\n                            transform: \"translateY(-125%) translateX(50%)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginRight)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: (itemRect.top - coordinatesAbs.cy1) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(-50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginTop)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            bottom: (coordinatesAbs.cy2 - itemRect.top - itemRect.height) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginBottom)}\r\n                    </p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {isGroupSelected, isHideInBreakpoint} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentHelpLines from \"./AdjustmentHelpLines\";\r\n\r\nexport default class AdjustmentHelpLinesWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n\r\n        this.helpLineRef = React.createRef();\r\n    }\r\n\r\n    update = (item, helpLineParent, itemRect, dragging, fakeItemRect) => {\r\n        this.setState({item, itemRect, dragging, fakeItemRect});\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        if (this.helpLineRef.current)\r\n            return this.helpLineRef.current.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, itemRect, dragging, fakeItemRect} = this.state;\r\n        return (\r\n            <>\r\n                {\r\n                    !item.state.showAnimation &&\r\n                    !isHideInBreakpoint(item) &&\r\n                    <AdjustmentHelpLines\r\n                        ref={this.helpLineRef}\r\n                        show={!item.props.helplineOff /*&& item.state.selected*/ &&\r\n                        item.state.helpLinesParent && !item.getFromTempData(\"pageResize\") &&\r\n                        !isGroupSelected(item)}\r\n                        helpLinesParent={item.state.helpLinesParent}\r\n                        item={item}\r\n                        dragging={dragging}\r\n                        itemRect={itemRect}\r\n                        fakeItemRect={fakeItemRect}\r\n                        width={itemRect.width}\r\n                        height={itemRect.height}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\n\r\nexport default class AdjustmentHover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n    }\r\n\r\n    update = (item, size, clear) => {\r\n        if (!clear)\r\n            if (!item.state.selected)\r\n                this.setState({item, size, itemId: item.props.id});\r\n            else\r\n                this.setState({item, size, itemId: undefined});\r\n        else {\r\n            if (this.state.itemId === item.props.id) {\r\n                this.setState({item, size, itemId: undefined});\r\n            }\r\n        }\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.itemId)\r\n            return null;\r\n        return (\r\n            <Popper\r\n                open={true}\r\n                anchorEl={document.getElementById(this.state.itemId)}\r\n                placement=\"top-start\"\r\n                style={{\r\n                    zIndex: 9999999,\r\n                    pointerEvents: \"none\"\r\n                }}\r\n                disablePortal={false}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: false\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: false,\r\n                    },\r\n                    hide: {\r\n                        enabled: false,\r\n                    },\r\n                }}\r\n            >\r\n                {\r\n                    this.state.itemId ?\r\n                        <div\r\n                            className=\"AwesomeGridLayoutRootHover\"\r\n                            key={`hover`}\r\n                            style={{\r\n                                width: this.state.size ? this.state.size.width : 0,\r\n                                height: this.state.size ? this.state.size.height : 0,\r\n                            }}\r\n                        >\r\n                            <span className=\"AGLHoverCompName\">\r\n                                {this.state.item.props.tagName}\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                }\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Layout.css';\r\n// import SortableTree from 'react-sortable-tree';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n// import {isHideInBreakpoint, showInBreakPoint} from \"../../AwesomwGridLayoutHelper\";\r\n// import Image from \"../../Menus/CommonComponents/Image\";\r\n\r\nexport default class Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            treeData: []\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent > 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent, open: (percent === 100)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = () => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent < 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent, open: (percent !== 0)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    setLayout = (layout) => {\r\n        this.processLayout(layout)\r\n    };\r\n\r\n    processLayout = (layout) => {\r\n        if (!layout)\r\n            return;\r\n\r\n        let {idMan} = this.props;\r\n\r\n        let getTreeItem = (layoutItem) => {\r\n            let item = idMan.getItem(layoutItem.childData.props.id);\r\n            return {\r\n                title: layoutItem.childData.tagName,\r\n                layoutItem: layoutItem,\r\n                children: layoutItem.childrenData.map(childLayout => {\r\n                    return getTreeItem(childLayout);\r\n                }),\r\n                expanded: item.getFromTempData(\"layoutTreeExpanded\"),\r\n                parentItemId: item.props.parent && item.props.parent.props.id\r\n            };\r\n        };\r\n\r\n        this.setState({\r\n            treeData: [getTreeItem(layout[0])]\r\n        });\r\n    };\r\n\r\n    setTree = (treeData) => {\r\n        let {idMan} = this.props;\r\n        let updateItem = (treeItem) => {\r\n            let item = idMan.getItem(treeItem.layoutItem.childData.props.id);\r\n            item.setTempData(\"layoutTreeExpanded\", treeItem.expanded);\r\n            treeItem.children.forEach((childTreeItem, index) => {\r\n                item.setChildZIndex(childTreeItem.layoutItem.childData.props.id, index + 1);\r\n            });\r\n            item.updateLayout();\r\n            treeItem.children.map(childTreeItem => {\r\n                updateItem(childTreeItem);\r\n            });\r\n        };\r\n\r\n        updateItem(treeData[0]);\r\n\r\n        this.setState({treeData});\r\n    };\r\n\r\n    render() {\r\n        let {idMan} = this.props;\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"LayoutRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"LayoutTreeRootHeader\"\r\n                    >\r\n                        {/*Header*/}\r\n                        <div\r\n                            className=\"LayoutTreeRootHeaderContainer\"\r\n                        >\r\n                            <span className=\"LayoutTreeRootHeaderTitle\">\r\n                                Layers\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.close}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"LayoutTreeRoot\"\r\n                    >\r\n                        Coming soon ...\r\n                        {/*<SortableTree\r\n                            className=\"LayoutSortableTree\"\r\n                            treeData={this.state.treeData}\r\n                            onChange={treeData => this.setTree(treeData)}\r\n                            innerStyle={{\r\n                                outline: 'none',\r\n                            }}\r\n                            generateNodeProps={rowInfo => {\r\n                                let layoutItem = rowInfo.node.layoutItem; // {tagName, childData, childrenData}\r\n                                let item = idMan.getItem(layoutItem.childData.props.id);\r\n                                let rowWrapperStyle = {};\r\n                                if (item.state.selected)\r\n                                    rowWrapperStyle.backgroundColor = \"#e4ffea\";\r\n\r\n                                let buttons = [\r\n                                    <IconButton\r\n                                        key={\"rightClick\"}\r\n                                        onClick={(e) => {\r\n                                            item.onContextMenu(e);\r\n                                        }}\r\n                                        imageContainerStyle={{\r\n                                            padding: 4\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={16}\r\n                                            height={16}\r\n                                            src={'static/icon/more-black.svg'}\r\n                                        />\r\n                                    </IconButton>\r\n                                ];\r\n                                if (isHideInBreakpoint(item)) {\r\n                                    buttons.unshift(\r\n                                        <IconButton\r\n                                            key={\"hidedInBp\"}\r\n                                            onClick={(e) => {\r\n                                                showInBreakPoint(item);\r\n                                            }}\r\n                                            imageContainerStyle={{\r\n                                                padding: 4\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                draggable={false}\r\n                                                width={16}\r\n                                                height={16}\r\n                                                src={'static/icon/hide.svg'}\r\n                                            />\r\n                                        </IconButton>\r\n                                    )\r\n                                }\r\n\r\n                                return ({\r\n                                    rowWrapperStyle: rowWrapperStyle,\r\n                                    onClick: (e) => {\r\n                                        let eClass = e.target.getAttribute(\"class\");\r\n                                        if (eClass !== \"expandButton\" && eClass !== \"collapseButton\")\r\n                                            item.onSelect(true, undefined, undefined, true);\r\n                                    },\r\n                                    icons: [\r\n                                        <Image\r\n                                            draggable={false}\r\n                                            width={16}\r\n                                            height={16}\r\n                                            src={item.props.favIconUrl}\r\n                                            style={{\r\n                                                marginTop: 2\r\n                                            }}\r\n                                            errorsrc={'/static/icon/rectangle.svg'}\r\n                                        />\r\n                                    ],\r\n                                    buttons: buttons,\r\n                                })\r\n                            }}\r\n                            canDrag={({ node, path, treeIndex, lowerSiblingCounts, isSearchMatch,\r\n                                          isSearchFocus}) => {\r\n                                let item = idMan.getItem(node.layoutItem.childData.props.id);\r\n                                return !item.props.isPage && !item.props.isSection;\r\n                            }}\r\n                            canDrop={({ node, nextParent, prevPath, nextPath }) => {\r\n                                return !!(nextParent && node.parentItemId === nextParent.layoutItem.childData.props.id);\r\n                            }}\r\n                        />*/}\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nLayout.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './AddComponent.css';\r\nimport {createItem, sortBy} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class ComponentGrid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.rootRef = React.createRef();\r\n    }\r\n\r\n    getItemStyle = (item) => {\r\n        let rootWidth = this.rootRef.current?\r\n            this.rootRef.current.getBoundingClientRect().width - 24: 400 - 24;\r\n\r\n        return {\r\n            width: rootWidth / (item.widthRatio || 2),\r\n            // height: rootWidth / (item.widthRatio || 2) / (item.aspectRatio || 2)\r\n            height: \"fit-content\"\r\n        };\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setDraggingItem = (draggingItem, e) => {\r\n        e.persist();\r\n        this.setState({draggingItem});\r\n\r\n        clearTimeout(this.closingTimeOut);\r\n        this.closingTimeOut = setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            if (this.state.draggingItem) {\r\n                this.props.closeMenu(true);\r\n                this.createItemAndDrag(this.state.draggingItem, e);\r\n            }\r\n        }, 200);\r\n    };\r\n\r\n    createItemAndDrag = (item, e) => {\r\n        let {pageRef, editor} = this.props;\r\n        let selectedItem = editor.select.getSelected();\r\n\r\n        createItem(pageRef.current, {\r\n            tagName: item.tagName,\r\n            props: cloneObject(item.presetProps)\r\n        }, undefined, undefined, undefined, (agl) => {\r\n            console.log(\"mouseDown\", agl.props.input.mouseDown);\r\n            if (agl.props.input.mouseDown)\r\n                window.requestAnimationFrame(() => {\r\n                    agl.onMouseDown(e, true);\r\n                });\r\n            else\r\n                window.requestAnimationFrame(() => {\r\n                    this.changeItemParent(agl, selectedItem);\r\n                });\r\n        });\r\n    };\r\n\r\n    changeItemParent = (agl, selectedItem) => {\r\n        let size = agl.getSize(false);\r\n\r\n        if (!selectedItem || selectedItem.props.isPage)\r\n            selectedItem = this.props.editor.rootLayoutRef.current.props.aglComponent.getSectionOfPoint(\r\n                size.left, size.top, size.width, size.height\r\n            );\r\n\r\n        let newGridItemStyle = {\r\n            alignSelf: \"center\",\r\n            justifySelf: \"center\",\r\n            position: \"relative\",\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            gridArea: \"1/1/2/2\",\r\n        };\r\n\r\n        agl.props.dragdrop.dropItem(agl, agl.props.parent, selectedItem, (newItem) => {\r\n            newItem.setGridItemStyle(newGridItemStyle, newItem.props.breakpointmanager.getHighestBpName());\r\n        });\r\n    };\r\n\r\n    createItem = (item, e) => {\r\n        this.props.closeMenu(true);\r\n        let {pageRef, editor} = this.props;\r\n        let selectedItem = editor.select.getSelected();\r\n\r\n        createItem(pageRef.current, {\r\n            tagName: item.tagName,\r\n            props: cloneObject(item.presetProps)\r\n        }, undefined, undefined, undefined, (agl) => {\r\n            window.requestAnimationFrame(() => {\r\n                this.changeItemParent(agl, selectedItem);\r\n            });\r\n        });\r\n    };\r\n\r\n    setDraggingEnd = () => {\r\n        this.setState({draggingItem: undefined});\r\n    };\r\n\r\n    render() {\r\n        let {allItems, id} = this.props;\r\n        if (!allItems)\r\n            return null;\r\n\r\n        return (\r\n            <React.Fragment key={id}>\r\n                <div\r\n                    className=\"AddComponentItemGrid\"\r\n                    ref={this.rootRef}\r\n                    key={id}\r\n                >\r\n                    {\r\n                        sortBy(allItems, \"order\").map((item, index) => {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <div\r\n                                        className=\"AddComponentItemGridItem\"\r\n                                        style={this.getItemStyle(item)}\r\n                                        onDragStart={(e) => {\r\n                                            this.setDraggingItem(item, e);\r\n                                        }}\r\n                                        onDragEnd={(e) => {\r\n                                            this.setDraggingEnd();\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.createItem(item, e);\r\n                                        }}\r\n                                        draggable\r\n                                    >\r\n                                        <img\r\n                                            className=\"AddComponentItemGridItemImage\"\r\n                                            src={item.imageUrl || '/static/image/box.webp'}\r\n                                            width={\"100%\"}\r\n                                            draggable={false}\r\n                                        />\r\n                                        {\r\n                                            item.label &&\r\n                                            <div\r\n                                                className=\"AddComponentItemGridItemLabel\"\r\n                                            >\r\n                                                {item.label}\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AddComponent.css';\r\nimport ComponentGrid from \"./ComponentGrid\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\nimport debounce from 'lodash.debounce';\r\nimport {sortBy} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AddComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            componentListItem: undefined,\r\n            componentSubListItem: undefined,\r\n            componentListItemHover: undefined,\r\n            componentSubListItemHover: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent > 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent, open: (percent === 100)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        if (force) {\r\n            this.setState({percent: 0, open: false});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent < 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent, open: (percent !== 0)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    setComponentListItemDebounce = debounce((componentListItem) => {\r\n        this.setComponentListItem(componentListItem);\r\n    }, 500);\r\n\r\n    setComponentListItemLeave = (componentListItem) => {\r\n        if (this.state.componentListItemHover === componentListItem) {\r\n            this.setState({componentListItemHover: undefined});\r\n        }\r\n    };\r\n\r\n    setComponentListItem = (componentListItem) => {\r\n        if (componentListItem !== this.state.componentListItem &&\r\n            componentListItem === this.state.componentListItemHover)\r\n            this.setState({componentListItem,\r\n                componentSubListItem: componentListItem.subList && Object.values(componentListItem.subList)[0]?\r\n                    Object.values(componentListItem.subList)[0][0]: undefined\r\n            });\r\n    };\r\n\r\n    setComponentSubListItemDebounce = debounce((componentSubListItem) => {\r\n        this.setComponentSubListItem(componentSubListItem);\r\n    }, 500);\r\n\r\n    setComponentSubListItemLeave = (componentSubListItem) => {\r\n        if (this.state.componentSubListItemHover === componentSubListItem) {\r\n            this.setState({componentSubListItemHover: undefined});\r\n        }\r\n    };\r\n\r\n    setComponentSubListItem = (componentSubListItem) => {\r\n        if (componentSubListItem !== this.state.componentSubListItem &&\r\n            componentSubListItem.listName === this.state.componentListItem.name &&\r\n            componentSubListItem === this.state.componentSubListItemHover)\r\n            this.setState({componentSubListItem});\r\n    };\r\n\r\n    render() {\r\n        let {allComponentData} = this.props;\r\n        if (!allComponentData)\r\n            return null;\r\n\r\n        let allItems;\r\n        if (this.state.componentListItem && this.state.componentListItem.allItems)\r\n            allItems = this.state.componentListItem.allItems;\r\n        if (this.state.componentSubListItem && this.state.componentSubListItem.allItems)\r\n            allItems = this.state.componentSubListItem.allItems;\r\n\r\n        if (!this.state.componentListItem)\r\n            allItems = undefined;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"AddComponentRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"AddComponentList\"\r\n                    >\r\n                        {\r\n                            sortBy(Object.values(allComponentData.builtin), \"order\").map(componentListItem => {\r\n                                let style = {};\r\n                                if (componentListItem === this.state.componentListItem)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={componentListItem.name}\r\n                                        className=\"AddComponentListItem\"\r\n                                        onMouseEnter={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setComponentListItem(componentListItem);\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            this.setComponentListItemLeave(componentListItem);\r\n                                        }}\r\n                                        style={style}\r\n                                    >\r\n                                        {componentListItem.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <Divider/>\r\n                        {\r\n                            sortBy(Object.values(allComponentData.apps), \"order\").map(componentListItem => {\r\n                                let style = {};\r\n                                if (componentListItem === this.state.componentListItem)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={componentListItem.name}\r\n                                        className=\"AddComponentListItem\"\r\n                                        onMouseEnter={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setComponentListItem(componentListItem);\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            this.setComponentListItemLeave(componentListItem);\r\n                                        }}\r\n                                        style={style}\r\n                                    >\r\n                                        {componentListItem.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.componentListItem &&\r\n                        this.state.componentListItem.subList &&\r\n                        <div\r\n                            className=\"AddComponentSubList\"\r\n                        >\r\n                            {\r\n                                sortBy(Object.keys(allComponentData.builtin[this.state.componentListItem.name].subList), \"order\")\r\n                                    .map(groupName => {\r\n                                        let componentSubListItems =\r\n                                            allComponentData.builtin[this.state.componentListItem.name].subList[groupName];\r\n                                        return (\r\n                                            <React.Fragment key={groupName}>\r\n                                                <div\r\n                                                    key={groupName}\r\n                                                    className=\"AddComponentSubListGroup\"\r\n                                                >\r\n                                                    {groupName}\r\n                                                </div>\r\n                                                {\r\n                                                    sortBy(componentSubListItems, \"order\").map(componentSubListItem => {\r\n                                                        let style = {};\r\n                                                        if (componentSubListItem === this.state.componentSubListItem)\r\n                                                            style.backgroundColor = \"#e5ffff\";\r\n                                                        return (\r\n                                                            <div\r\n                                                                key={componentSubListItem.name}\r\n                                                                className=\"AddComponentSubListItem\"\r\n                                                                onMouseEnter={(e) => {\r\n                                                                    this.setState({componentSubListItemHover: componentSubListItem});\r\n                                                                    this.setComponentSubListItemDebounce(componentSubListItem);\r\n                                                                }}\r\n                                                                onMouseOver={(e) => {\r\n                                                                    this.setState({componentSubListItemHover: componentSubListItem});\r\n                                                                    this.setComponentSubListItemDebounce(componentSubListItem);\r\n                                                                }}\r\n                                                                onClick={(e) => {\r\n                                                                    this.setComponentSubListItem(componentSubListItem);\r\n                                                                }}\r\n                                                                onMouseOut={(e) => {\r\n                                                                    this.setComponentSubListItemLeave(componentSubListItem);\r\n                                                                }}\r\n                                                                style={style}\r\n                                                            >\r\n                                                                {componentSubListItem.name}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                    <ComponentGrid\r\n                        allItems={allItems}\r\n                        id={this.state.componentSubListItem? this.state.componentSubListItem.name:\r\n                            this.state.componentListItem? this.state.componentListItem.name: null}\r\n                        closeMenu={this.close}\r\n                        pageRef={this.props.pageRef}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nAddComponent.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport './PageTypeTitle.css';\r\n\r\nexport default class PageTypeTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: props.defaultOpen || false\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ButtonBase className=\"PageTypeTitle\" onClick={(e) => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(!this.state.open);\r\n                this.setState({open: !this.state.open});\r\n            }}>\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n\r\n                    <div className=\"PageTypeTitleExpandIcon\">\r\n                        {\r\n                            this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={'/static/icon/down-arrow.svg'} />\r\n                        }\r\n                        {\r\n                            !this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={'/static/icon/right-arrow.svg'} />\r\n                        }\r\n                    </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\n\r\nexport default class PageInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onRename = (e) => {\r\n        this.newPageName = e.target.value;\r\n    };\r\n\r\n    rename = () => {\r\n        let {pageData, editor} = this.props;\r\n\r\n        if (this.newPageName === pageData.props.pageName)\r\n            return;\r\n\r\n        if (!this.newPageName) {\r\n            // TODO show error\r\n            return;\r\n        }\r\n\r\n        pageData.props.pageName = this.newPageName;\r\n        this.newPageName = undefined;\r\n\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    setAsHomePage = () => {\r\n        let {pageData, editor} = this.props;\r\n\r\n        let home = Object.values(editor.state.siteData.allPages).find(p => {return p.props.isHome});\r\n\r\n        if (home)\r\n            delete home.props.isHome;\r\n        pageData.props.isHome = true;\r\n\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's this page's name (on your menu)?\r\n                    </span>\r\n                    <input\r\n                        defaultValue={pageData.props.pageName}\r\n                        className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.onRename}\r\n                        onBlur={this.rename}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.rename()\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        <Image\r\n                            draggable={false}\r\n                            width={16}\r\n                            height={16}\r\n                            src={'/static/icon/home.svg'}\r\n                            style={{\r\n                                marginTop: 2,\r\n                                marginRight: 12\r\n                            }}\r\n                        />\r\n                        {\r\n                            pageData.props.isHome &&\r\n                            \"This page is your home page\"\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            \"Set this page as your home page\"\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            <Button className=\"PageInfoHomePageButton\" variant=\"contained\"\r\n                                onClick={this.setAsHomePage}\r\n                            >\r\n                                Set as Home Page\r\n                            </Button>\r\n                        }\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Radio from \"@material-ui/core/Radio/Radio\";\r\n\r\nconst AglRadio = withStyles((theme) => ({\r\n    root: {\r\n        padding: 6,\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    checked: {\r\n        color: '#137cbd',\r\n    },\r\n}))(Radio);\r\n\r\nexport default AglRadio;\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport GridViewer from \"../../../Menus/CommonComponents/GridViewer\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\r\nimport AglRadio from \"../../../Menus/CommonComponents/AglRadio\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\r\n\r\nexport default class Permissions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    changePermission = (type) => (e) => {\r\n        let {pageData, editor} = this.props;\r\n        pageData.props.pageSetting.permissions.type = type;\r\n\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    onSetPassword = (e) => {\r\n        let {pageData, editor} = this.props;\r\n        pageData.props.pageSetting.permissions.password = e.target.value;\r\n\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    onChangeMemberType = (e) => {\r\n        let {pageData, editor} = this.props;\r\n        pageData.props.pageSetting.permissions.memberType = e.target.value;\r\n\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    onRoleChange = (checked, role) => {\r\n        let {pageData, editor} = this.props;\r\n        if (checked) {\r\n            if (pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role) < 0)\r\n                pageData.props.pageSetting.permissions.memberRoles.push(role);\r\n        } else {\r\n            if (pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role) >= 0) {\r\n                let index = pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role);\r\n                pageData.props.pageSetting.permissions.memberRoles.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    render () {\r\n        let {pageData, editor} = this.props;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Who can view this page?\r\n                    </span>\r\n\r\n                    <GridViewer>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Everyone\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={'/static/icon/world.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Everyone\r\n                            </span>\r\n                        </div>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Password Holder\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Password Holder\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={'/static/icon/password.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Password Holder\r\n                            </span>\r\n                        </div>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Member Only\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Member Only\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={'/static/icon/group.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Member Only\r\n                            </span>\r\n                        </div>\r\n                    </GridViewer>\r\n\r\n                    <span className=\"PermissionsDescription\">\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" &&\r\n                            \"Everyone can see this page\"\r\n                        }\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Password Holder\" &&\r\n                            \"Visitors with a password can see this page\"\r\n                        }\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Member Only\" &&\r\n                            \"Visitors need to sign up to see this page\"\r\n                        }\r\n                    </span>\r\n                </div>\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type === \"Password Holder\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            What's the page's password?\r\n                        </span>\r\n\r\n                        <input\r\n                            defaultValue={pageData.props.pageSetting.permissions.password}\r\n                            className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                            type=\"text\"\r\n                            onChange={this.onSetPassword}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type === \"Member Only\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            Which member can access this page?\r\n                        </span>\r\n\r\n                        <RadioGroup className=\"PermissionsRadioGroup\"\r\n                                    value={pageData.props.pageSetting.permissions.memberType}\r\n                                    onChange={this.onChangeMemberType}\r\n                        >\r\n                            <FormControlLabel\r\n                                value=\"all\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    All members\r\n                                </span>}\r\n                            />\r\n                            <FormControlLabel\r\n                                className=\"PermissionsFormLabel\"\r\n                                value=\"role\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    Members with some role\r\n                                </span>}\r\n                            />\r\n                            <FormControlLabel\r\n                                disabled\r\n                                className=\"PermissionsFormLabel\"\r\n                                value=\"pay\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    Paying customers\r\n                                </span>}\r\n                            />\r\n                        </RadioGroup>\r\n\r\n                        {\r\n                            pageData.props.pageSetting.permissions.memberType === \"role\" &&\r\n                            <div className=\"PageInfoBox\">\r\n                                <span className=\"PageInfoBoxTitle\">\r\n                                    Select from your member roles\r\n                                </span>\r\n\r\n                                <div className=\"PermissionsRolesInput NumberInput PageManagerRenameInput\"\r\n                                    onClick={(e) => {\r\n                                        this.setState({roleAnchor: e.target})\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        pageData.props.pageSetting.permissions.memberRoles.map(role => {\r\n                                            return role;\r\n                                        }).join(\" \")\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            this.state.roleAnchor &&\r\n                            <Menu\r\n                                style={{\r\n                                    zIndex: 99999999999,\r\n                                }}\r\n                                anchorEl={this.state.roleAnchor}\r\n                                open={this.state.roleAnchor !== undefined}\r\n                                onClose={(e) => {\r\n                                    this.setState({roleAnchor: undefined})\r\n                                }}\r\n                                MenuListProps={{\r\n                                    style: {\r\n                                        padding: 0,\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <MenuItem dense disabled style={{\r\n                                    opacity: 1\r\n                                }}>\r\n                                    <span className=\"PermissionsSelectRole\">\r\n                                        Select roles\r\n                                    </span>\r\n                                </MenuItem>\r\n\r\n                                {\r\n                                    editor.state.siteData.allApps.member.setting.roles.map(role => {\r\n                                        return (\r\n                                            <MenuItem dense onClick={(e) => {\r\n                                                this.onRoleChange(!(pageData.props.pageSetting.permissions.memberRoles\r\n                                                    .findIndex(r => r === role) > -1), role);\r\n                                            }}\r\n                                                      key={role}\r\n                                                      style={{\r\n                                                          paddingTop: 0,\r\n                                                          paddingBottom: 0\r\n                                                      }}\r\n                                            >\r\n                                                <Checkbox\r\n                                                    size={'small'}\r\n                                                    checked={\r\n                                                        pageData.props.pageSetting.permissions.memberRoles\r\n                                                            .findIndex(r => r === role) > -1\r\n                                                    }\r\n                                                    onChange={(e) => {\r\n                                                        this.onRoleChange(e.target.checked, role);\r\n                                                    }}\r\n                                                    color=\"default\"\r\n                                                />\r\n                                                <span className=\"PermissionsRole\">\r\n                                                    {role}\r\n                                                </span>\r\n                                            </MenuItem>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                                <MenuItem dense onClick={(e) => {\r\n                                    // TODO connect to member manager\r\n                                    console.log(\"Soon\")\r\n                                }}\r\n                                >\r\n                                    <span className=\"PermissionsNewRole\">\r\n                                        Add New Role\r\n                                    </span>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        }\r\n\r\n                        {\r\n                            pageData.props.pageSetting.permissions.memberType === \"pay\" &&\r\n                            <div className=\"PageInfoBox\">\r\n                                <span className=\"PageInfoBoxTitle\">\r\n                                    Coming soon\r\n                                </span>\r\n\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\n\r\nexport default class SeoGoogle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChangeSeoSetting = (param) => (e, value) => {\r\n        let {pageData, editor} = this.props;\r\n\r\n        value = value || e.target.value;\r\n        console.log(\"onChangeSeoSetting\", value, param);\r\n        if (param === \"endUrl\") {\r\n            if (!this.newEndUrl)\r\n                return;\r\n\r\n            value = this.newEndUrl.replace(/\\s+/g, '').toLowerCase();\r\n            let siteData = editor.state.siteData;\r\n            let same = Object.values(siteData.allPages).find(p => p.props.pageSetting.seoGoogle.endUrl === value);\r\n            if (same) {\r\n                console.log(\"onChangeSeoSetting2\");\r\n                this.setState({endUrlError: true});\r\n                delete this.newEndUrl;\r\n                return;\r\n            }\r\n\r\n            delete this.newEndUrl;\r\n        }\r\n\r\n        pageData.props.pageSetting.seoGoogle[param] = value;\r\n\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    render () {\r\n        let {pageData, editor} = this.props;\r\n        let siteData = editor.state.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Preview on Google search\r\n                    </span>\r\n\r\n                    <div className=\"SeoGooglePreviewRoot\">\r\n                        <span className=\"SeoGooglePreviewTitle\">\r\n                            {\r\n                                pageData.props.pageSetting.seoGoogle.pageTitle ||\r\n                                    pageData.props.pageName\r\n                            }\r\n                        </span>\r\n                        <span className=\"SeoGooglePreviewUrl\">\r\n                            {\r\n                                siteData.setting.baseUrl + (\r\n                                    pageData.props.pageSetting.seoGoogle.endUrl ||\r\n                                    pageData.props.pageName.toLowerCase()\r\n                                )\r\n                            }\r\n                        </span>\r\n                        <span className=\"SeoGooglePreviewDesc\">\r\n                            {\r\n                                pageData.props.pageSetting.seoGoogle.pageDescription\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the lat part (or slug) of url?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.endUrl || pageData.props.pageName.toLowerCase()}\r\n                        className={`PageSettingInput PageManagerRenameInput PageInfoNameInput ${\r\n                            this.state.endUrlError? 'PageInfoNameInputError': \"\"\r\n                        }`}\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newEndUrl = e.target.value;\r\n                            this.setState({endUrlError: undefined});\r\n                        }}\r\n                        onBlur={this.onChangeSeoSetting(\"endUrl\")}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"endUrl\")(e);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page's title on search results and browser tabs?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.pageTitle || pageData.props.pageName}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newPageTitle = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSeoSetting(\"pageTitle\")(e, this.newPageTitle);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"pageTitle\")(e, this.newPageTitle);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page about? Add a description\r\n                    </span>\r\n\r\n                    <textarea\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.pageDescription}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        style={{\r\n                            resize: \"none\",\r\n                            minHeight: 120\r\n                        }}\r\n                        onChange={(e) => {\r\n                            this.newPageDescription = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSeoSetting(\"pageDescription\")(e, this.newPageDescription);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"pageDescription\")(e, this.newPageDescription);\r\n                            }\r\n                        }}\r\n                        rows={5}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Show this page in search results\r\n                    </span>\r\n\r\n                    <Switch\r\n                        className=\"SeoGoogleShowInSearch\"\r\n                        checked={\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" ?\r\n                            pageData.props.pageSetting.seoGoogle.showInSearch: false\r\n                        }\r\n                        disabled={pageData.props.pageSetting.permissions.type !== \"Everyone\"}\r\n                        onChange={(e) => {\r\n                            let checked = e.target.checked;\r\n                            this.onChangeSeoSetting('showInSearch')(e, checked);\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type !== \"Everyone\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            Note: You’ve made changes to who can view this page, so it won’t show in search results. Go to the Permissions tab to change this.\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\n\r\nexport default class SocialShare extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChangeSocialShareSetting = (param) => (e, value) => {\r\n        let {pageData, editor} = this.props;\r\n\r\n        value = value || e.target.value;\r\n        pageData.props.pageSetting.socialShare[param] = value;\r\n\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    render () {\r\n        let {pageData, editor} = this.props;\r\n        let siteData = editor.state.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <div className=\"SocialShareTitle\">\r\n                        What is Social Share\r\n                    </div>\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Add the text and image that display when this page is shared on social networks like Facebook, Instagram and more.\r\n                    </span>\r\n                </div>\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Preview on social\r\n                    </span>\r\n\r\n                    <div className=\"SocialPreviewBox\">\r\n                        <div className=\"SocialPreviewRoot\">\r\n                            <span className=\"SocialPreviewImageNoImage\">\r\n                                {\r\n                                    pageData.props.pageSetting.socialShare.imageUrl &&\r\n                                    <Image\r\n                                        className=\"SocialPreviewImage\"\r\n                                        src={pageData.props.pageSetting.socialShare.imageUrl}\r\n                                    />\r\n                                }\r\n\r\n                                <Button\r\n                                    className=\"SocialPreviewImageSelect\"\r\n                                >\r\n                                    Upload or Select an Image\r\n                                </Button>\r\n                            </span>\r\n                            <div className=\"SocialPreviewDetailBox\">\r\n                                <span className=\"SocialPreviewUrl\">\r\n                                    {\r\n                                        siteData.setting.baseUrl.substring(0, siteData.setting.baseUrl.lastIndexOf('/'))\r\n                                            .replace(/(^\\w+:|^)\\/\\//, '')\r\n\r\n                                    }\r\n                                </span>\r\n                                <span className=\"SocialPreviewTitle\">\r\n                                    {\r\n                                        pageData.props.pageSetting.socialShare.title ||\r\n                                        pageData.props.pageSetting.seoGoogle.pageTitle\r\n                                    }\r\n                                </span>\r\n                                <span className=\"SocialPreviewDescription\">\r\n                                    {\r\n                                        pageData.props.pageSetting.socialShare.description ||\r\n                                        pageData.props.pageSetting.seoGoogle.pageDescription\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page's title on social networks?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.socialShare.title ||\r\n                            pageData.props.pageSetting.seoGoogle.pageTitle || pageData.props.pageName}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newTitle = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSocialShareSetting(\"title\")(e, this.newTitle);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSocialShareSetting(\"title\")(e, this.newTitle);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page about? Add a description\r\n                    </span>\r\n\r\n                    <textarea\r\n                        defaultValue={pageData.props.pageSetting.socialShare.description ||\r\n                            pageData.props.pageSetting.seoGoogle.pageDescription}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        style={{\r\n                            resize: \"none\",\r\n                            minHeight: 120\r\n                        }}\r\n                        onChange={(e) => {\r\n                            this.newDescription = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSocialShareSetting(\"description\")(e, this.newDescription);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSocialShareSetting(\"description\")(e, this.newDescription);\r\n                            }\r\n                        }}\r\n                        rows={5}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab/Tab\";\r\nimport PageInfo from \"./PageInfo\";\r\nimport Permissions from \"./Permissions\";\r\nimport SeoGoogle from \"./SeoGoogle\";\r\nimport SocialShare from \"./SocialShare\";\r\n\r\nexport default class PageSetting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tabValue: \"Page Info\"\r\n        }\r\n    }\r\n\r\n    onChangeTab = (e, tabValue) => {\r\n        this.setState({tabValue});\r\n    };\r\n\r\n    render () {\r\n        let {pageData, editor} = this.props;\r\n        return (\r\n            <Modal\r\n                open={this.props.open}\r\n                onClose={this.props.onClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                className=\"PageSettingModal\"\r\n                disableBackdropClick\r\n            >\r\n                <div className=\"PageSettingRoot\">\r\n                    {/*Header*/}\r\n                    <div className=\"PageSettingHeader\">\r\n                        <div\r\n                            className=\"PageManagerHeaderContainer\"\r\n                        >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                Page Setting ({pageData.props.pageName})\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.props.onClose}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Tabs\r\n                        className=\"PageSettingTabBox\"\r\n                        value={this.state.tabValue}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={this.onChangeTab}\r\n                        aria-label=\"disabled tabs example\"\r\n                    >\r\n                        <Tab label=\"Page Info\" value=\"Page Info\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Permissions\" value=\"Permissions\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"SEO (Google)\" value=\"SEO (Google)\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Social Share\" value=\"Social Share\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Advanced SEO\" value=\"Advanced SEO\" className=\"PageSettingTab\"/>\r\n\r\n                    </Tabs>\r\n\r\n                    {\r\n                        this.state.tabValue === \"Page Info\" &&\r\n                        <PageInfo\r\n                            pageData={pageData}\r\n                            editor={editor}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Permissions\" &&\r\n                        <Permissions\r\n                            pageData={pageData}\r\n                            editor={editor}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"SEO (Google)\" &&\r\n                        <SeoGoogle\r\n                            pageData={pageData}\r\n                            editor={editor}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Social Share\" &&\r\n                        <SocialShare\r\n                            pageData={pageData}\r\n                            editor={editor}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Advanced SEO\" &&\r\n                        <div style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\"\r\n                        }}>\r\n                            Coming Soon\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport PageSetting from \"./PageSetting/PageSetting\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport default class PageItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pageMenuAnchorEl: undefined\r\n        };\r\n\r\n        this.renameInput = React.createRef();\r\n    }\r\n\r\n    duplicate = () => {\r\n        // TODO ask verify\r\n        let {pageData, editor} = this.props;\r\n\r\n        let newName = `${pageData.props.pageName}(Copy)`;\r\n        let newId = uuidv4();\r\n\r\n        editor.state.siteData.allPages[newId] = cloneObject(pageData);\r\n        editor.state.siteData.allPages[newId].props.pageName = newName;\r\n        editor.state.siteData.allPages[newId].props.pageId = newId;\r\n        delete editor.state.siteData.allPages[newId].props.isHome;\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    delete = () => {\r\n        // TODO ask verify\r\n        let {pageData, editor} = this.props;\r\n\r\n        delete editor.state.siteData.allPages[pageData.props.pageId];\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.onPageChange(Object.keys(editor.state.siteData.allPages)[0], true);\r\n    };\r\n\r\n    setAsHome = () => {\r\n        let {pageData, editor} = this.props;\r\n        let home = Object.values(editor.state.siteData.allPages).find(p => {return p.props.isHome});\r\n\r\n        if (home)\r\n            delete home.props.isHome;\r\n        pageData.props.isHome = true;\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    setting = (active) => {\r\n        this.setState({setting: active, pageMenuAnchorEl: undefined});\r\n    };\r\n\r\n    rename = (active) => {\r\n        this.setState({rename: active, pageMenuAnchorEl: undefined}, () => {\r\n            if (active)\r\n                this.renameInput.current.focus();\r\n        });\r\n\r\n        if (!active) {\r\n            let {pageData, editor} = this.props;\r\n\r\n            if (this.newPageName === pageData.props.pageName)\r\n                return;\r\n\r\n            if (!this.newPageName) {\r\n                // TODO show error\r\n                return;\r\n            }\r\n\r\n            pageData.props.pageName = this.newPageName;\r\n            this.newPageName = undefined;\r\n\r\n            editor.setState({reload: true});\r\n            // if (editor.state.pageData === pageData)\r\n            //     editor.onPageChange(pageData.props.pageName, true);\r\n        }\r\n    };\r\n\r\n    onRename = (e) => {\r\n        this.newPageName = e.target.value;\r\n    };\r\n\r\n    render () {\r\n        let {pageData, onClick, editor, siteData} = this.props;\r\n        let boxClasses = classNames(\r\n            \"PageManagerNormalPageBox\",\r\n            editor.state.pageData === pageData && \"PageManagerNormalPageBoxSelected\"\r\n        );\r\n        return (\r\n            <div className={boxClasses} key={pageData.props.pageId}\r\n            >\r\n                {\r\n                    !this.state.rename &&\r\n                    <span className=\"PageManagerNormalPageTitle\">\r\n                        {pageData.props.pageName}\r\n                    </span>\r\n                }\r\n\r\n                <div className=\"PageManagerNormalPageClick\" onClick={onClick}>\r\n\r\n                </div>\r\n\r\n                {\r\n                    this.state.rename &&\r\n                    <input\r\n                        ref={this.renameInput}\r\n                        defaultValue={pageData.props.pageName}\r\n                        className=\"NumberInput PageManagerRenameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.onRename}\r\n                        onBlur={(e) => this.rename(false)}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.rename(false)\r\n                            }\r\n                        }}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            // TODO\r\n                        }}\r\n                    >\r\n                    </input>\r\n                }\r\n\r\n                {\r\n                    pageData.props.isHome &&\r\n                    <IconButton\r\n                        className=\"PageManagerNormalSiteButton\"\r\n                        onClick={(e) => {\r\n                            // TODO\r\n                        }}\r\n                        disabled\r\n                    >\r\n                        <Image\r\n                            src={'static/icon/home.svg'}\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    </IconButton>\r\n                }\r\n\r\n                <IconButton\r\n                    className=\"PageManagerNormalSiteButton\"\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                        this.setState({pageMenuAnchorEl: e.target})\r\n                    }}\r\n                >\r\n                    <Image\r\n                        src={'static/icon/more-black.svg'}\r\n                        width={16}\r\n                        height={16}\r\n                    />\r\n                </IconButton>\r\n\r\n                {\r\n                    this.state.pageMenuAnchorEl &&\r\n                    <Menu\r\n                        style={{\r\n                            zIndex: 99999999999\r\n                        }}\r\n                        anchorEl={this.state.pageMenuAnchorEl}\r\n                        open={this.state.pageMenuAnchorEl !== undefined}\r\n                        onClose={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setState({pageMenuAnchorEl: undefined});\r\n                        }}\r\n                        MenuListProps={{\r\n                            style: {\r\n                                padding: 0,\r\n                            }\r\n                        }}\r\n                    >\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setting(true);\r\n                        }}\r\n                        >\r\n                            Setting\r\n                        </MenuItem>\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.rename(true)\r\n                        }}>\r\n                            Rename\r\n                        </MenuItem>\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.duplicate(true)\r\n                        }}\r\n                        >\r\n                            Duplicate\r\n                        </MenuItem>\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            <MenuItem dense onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.delete()\r\n                            }}\r\n                            >\r\n                                Delete\r\n                            </MenuItem>\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome && !pageData.props.isDynamic &&\r\n                            <MenuItem dense onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.setAsHome()\r\n                            }}\r\n                            >\r\n                                Set as Home Page\r\n                            </MenuItem>\r\n                        }\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setState({pageMenuAnchorEl: undefined});\r\n                            onClick();\r\n                        }} >\r\n                            Edit Page\r\n                        </MenuItem>\r\n                    </Menu>\r\n                }\r\n\r\n                {\r\n                    this.state.setting &&\r\n                    <PageSetting\r\n                        open={this.state.setting !== undefined}\r\n                        onClose={() => this.setState({setting: undefined})}\r\n                        pageData={pageData}\r\n                        editor={editor}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AddNewPageDialogItem.css';\r\n\r\nexport default class AddNewPageDialogItem extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"AddNewPageDialogItemRoot\">\r\n                <span className=\"AddNewPageDialogItemTitle\">\r\n                    {this.props.title}\r\n                </span>\r\n\r\n                <span className=\"AddNewPageDialogItemDesc\">\r\n                    {this.props.description}\r\n                </span>\r\n\r\n                <span className=\"AddNewPageDialogItemAdd\">\r\n                    Add\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport AddNewPageDialogItem from \"./AddNewPageDialogItem\";\r\n\r\nexport default class AddNewPageDialog extends React.Component {\r\n    addNormalPage = () => {\r\n        this.props.onClose();\r\n        this.props.onAddNormalPage();\r\n    };\r\n\r\n    addDynamicPage = () => {\r\n        this.props.onClose();\r\n        this.props.onAddDynamicPage();\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Menu\r\n                style={{\r\n                    zIndex: 99999999999,\r\n                }}\r\n                anchorEl={this.props.anchorEl}\r\n                open={this.props.open}\r\n                onClose={(e) => {\r\n                    this.props.onClose();\r\n                }}\r\n                MenuListProps={{\r\n                    style: {\r\n                        padding: 0,\r\n                    }\r\n                }}\r\n            >\r\n                <MenuItem dense onClick={(e) => {\r\n                    this.addNormalPage();\r\n                }}\r\n                >\r\n                    <AddNewPageDialogItem\r\n                        title={\"Page\"}\r\n                        description={\"Add a standard blank page\"}\r\n                    />\r\n                </MenuItem>\r\n                <MenuItem dense onClick={(e) => {\r\n                    this.addDynamicPage();\r\n                }}>\r\n                    <AddNewPageDialogItem\r\n                        title={\"Dynamic Page\"}\r\n                        description={\"Design once and generate a lot of different page\"}\r\n                    />\r\n                </MenuItem>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport PageTypeTitle from \"./PageTypeTitle\";\r\nimport PageItem from \"./PageItem\";\r\nimport AddNewPageDialog from \"./AddNewPageDialog\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport default class PageManager extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            openNormalPage: true,\r\n            openDynamicPage: false\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent > 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent, open: (percent === 100)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        if (force) {\r\n            this.setState({percent: 0, open: false});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent < 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent, open: (percent !== 0)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    onChangeSearch = (e) => {\r\n        let searchValue = e.target.value;\r\n        this.setState({searchValue});\r\n    };\r\n\r\n    getFilteredPages = () => {\r\n        let {siteData} = this.props;\r\n        return Object.keys(siteData.allPages).filter(siteId => {\r\n            if (!this.state.searchValue)\r\n                return true;\r\n\r\n            let pageData = siteData.allPages[siteId];\r\n\r\n            return pageData.props.pageName.toLowerCase().includes(this.state.searchValue.toLowerCase());\r\n        }).map(siteId => {\r\n            return siteData.allPages[siteId];\r\n        });\r\n    };\r\n\r\n    onPageClick = (pageData) => {\r\n        this.props.onPageChange(pageData.props.pageId);\r\n    };\r\n\r\n    onAddNormalPage = () => {\r\n        let {siteData, editor} = this.props;\r\n        if (!this.props.newPageDataUrl) {\r\n            fetch('/static/json/newPageData.json')\r\n                .then((r) => r.json())\r\n                .then((pageData) =>{\r\n                    let newName = \"New Page\";\r\n                    let newId = uuidv4();\r\n\r\n                    pageData.props.pageName = newName;\r\n                    pageData.props.pageId = newId;\r\n\r\n                    editor.state.siteData.allPages[newId] = pageData;\r\n\r\n                    this.onPageClick(editor.state.siteData.allPages[newId]);\r\n                });\r\n            // return;\r\n        }\r\n    };\r\n\r\n    onAddDynamicPage = (data) => {\r\n        // TODO\r\n    };\r\n\r\n    render() {\r\n        let {siteData} = this.props;\r\n\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"PageManagerRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    {/*Header*/}\r\n                    <div className=\"PageManagerHeader\">\r\n                        <div\r\n                            className=\"PageManagerHeaderContainer\"\r\n                        >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                Site Pages\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.close}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*Search box*/}\r\n                    <div className=\"PageManagerSearchBox\">\r\n                        <input\r\n                            className=\"NumberInput PageManagerSearchInput\"\r\n                            type=\"text\"\r\n                            onChange={this.onChangeSearch}\r\n                        >\r\n                        </input>\r\n\r\n                        <Image\r\n                            className=\"PageManagerSearchImage\"\r\n                            src={'static/icon/search.svg'}\r\n                        />\r\n                    </div>\r\n\r\n                    {/*Sites list*/}\r\n\r\n                    <PageTypeTitle\r\n                        defaultOpen={this.state.openNormalPage}\r\n                        title=\"Main Pages\" onChange={(openNormalPage) => {\r\n                        this.setState({openNormalPage});\r\n                    }}/>\r\n\r\n                    <div className=\"PageManagerNormalPageList\">\r\n                        {\r\n                            this.state.openNormalPage &&\r\n                            this.getFilteredPages().map(pageData => {\r\n                                return (\r\n                                    <PageItem\r\n                                        key={pageData.props.pageId}\r\n                                        pageData={pageData}\r\n                                        onClick={(e) => {\r\n                                            this.onPageClick(pageData);\r\n                                        }}\r\n                                        editor={this.props.editor}\r\n                                        siteData={siteData}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <ButtonBase className=\"PageManagerAddPageButton\"\r\n                        onClick={(e) => {\r\n                            this.setState({showAddPage: e.target})\r\n                        }}\r\n                    >\r\n                        Add New Page\r\n                    </ButtonBase>\r\n\r\n                    {\r\n                        this.state.showAddPage &&\r\n                        <AddNewPageDialog\r\n                            anchorEl={this.state.showAddPage}\r\n                            open={this.state.showAddPage !== undefined}\r\n                            onClose={(e) => {\r\n                                this.setState({showAddPage: undefined})\r\n                            }}\r\n                            onAddDynamicPage={this.onAddDynamicPage}\r\n                            onAddNormalPage={this.onAddNormalPage}\r\n                        />\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nPageManager.defaultProps = {\r\n    open: false,\r\n    speed: 800,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\n\r\nexport default class ThemeTextItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onEditClick = (e) => {\r\n\r\n    };\r\n\r\n    render() {\r\n        let {siteData, pageData, editor, item} = this.props;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"ThemeTextItemRoot\">\r\n                <span className=\"ThemeTextItemName\">\r\n                    {item.name}\r\n                </span>\r\n                <span className=\"ThemeTextItemDetail\">\r\n                    {item.font}, {item.fontSize}px\r\n                </span>\r\n                <span style={{\r\n                    fontFamily: `${item.font} Arial`,\r\n                    fontWeight: item.fontWeight,\r\n                    fontStyle: item.fontStyle,\r\n                    fontSize: Math.min(item.fontSize, 40),\r\n                    color: item.color,\r\n                    lineHeight: '1.4em'\r\n                }}>\r\n                    For Bold Creators\r\n                </span>\r\n\r\n                <IconButton\r\n                    className=\"ThemeTextItemEdit\"\r\n                    onClick={this.onEditClick}\r\n                >\r\n                    <Image\r\n                        width={16}\r\n                        height={16}\r\n                        src={'static/icon/edit.svg'}\r\n                    />\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport {getColorScheme} from \"../../AwesomwGridLayoutHelper\";\r\nimport HexColorPicker from \"./HexColorPicker\";\r\n\r\nexport default class ThemeColorsItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onEditClick = (paletteName, key, color) => (e) => {\r\n        this.setState({\r\n            toChange: {\r\n                paletteName, key, color\r\n            }\r\n        })\r\n    };\r\n\r\n    onChangeColor = (color) => {\r\n        let {siteData, pageData, editor, item} = this.props;\r\n        let {toChange} = this.state;\r\n        siteData.theme.Colors.items[toChange.paletteName][toChange.key] = color;\r\n\r\n        if (toChange.key === \"main\") {\r\n            siteData.theme.Colors.calculated = false;\r\n        }\r\n\r\n        toChange.color = color;\r\n        this.setState({toChange});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    render() {\r\n        let {siteData, pageData, editor, item} = this.props;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"ThemeColorsItemRoot\">\r\n                <span className=\"ThemeTextItemName\">\r\n                    {item.name}\r\n                </span>\r\n\r\n                <div className=\"ThemeColorsItemDetail\">\r\n                    <div className=\"ThemeColorsItemDetailMain\" style={{\r\n                            backgroundColor: getColorScheme(item.main)[\"3\"]\r\n                        }}\r\n                        onClick={this.onEditClick(item.name, \"main\", getColorScheme(item.main)[\"3\"])}\r\n                    >\r\n\r\n                        <Image\r\n                            className=\"ThemeColorsItemDetailOverlay\"\r\n                            style={{opacity: 1}}\r\n                            src={'static/icon/edit-white.svg'}\r\n                            width={18}\r\n                            height={18}\r\n                        />\r\n                    </div>\r\n                    <div className=\"ThemeColorsItemDetailSecondary\">\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"1\"] || getColorScheme(item.main)[\"1\"],\r\n                            borderTopRightRadius: 4,\r\n                            borderBottomRightRadius: 4\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"1\", item[\"1\"] || getColorScheme(item.main)[\"1\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={'static/icon/edit-white.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"2\"] || getColorScheme(item.main)[\"2\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"2\", item[\"2\"] || getColorScheme(item.main)[\"2\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={'static/icon/edit-white.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"3\"] || getColorScheme(item.main)[\"3\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"3\", item[\"3\"] || getColorScheme(item.main)[\"3\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={'static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"4\"] || getColorScheme(item.main)[\"4\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"4\", item[\"4\"] || getColorScheme(item.main)[\"4\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={'static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"5\"] || getColorScheme(item.main)[\"5\"],\r\n                            borderTopLeftRadius: 4,\r\n                            borderBottomLeftRadius: 4\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"5\", item[\"5\"] || getColorScheme(item.main)[\"5\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={'static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.toChange &&\r\n                    <HexColorPicker\r\n                        onClose={() => this.setState({toChange: undefined})}\r\n                        color={this.state.toChange.color}\r\n                        onChangeComplete={ this.onChangeColor }\r\n                        disableAlpha\r\n                        width={224}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport {getColorScheme, sortBy} from \"../../AwesomwGridLayoutHelper\";\r\nimport ThemeTextItem from \"./ThemeTextItem\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport ThemeColorsItem from \"./ThemeColorsItem\";\r\n\r\nconst colorKeys = [\r\n    \"1\",\"2\",\"3\",\"4\",\"5\",\r\n];\r\nexport default class ThemeManager extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            category: sortBy(Object.values(props.siteData.theme), \"order\")[0],\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent > 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent, open: (percent === 100)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        if (force) {\r\n            this.setState({percent: 0, open: false});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent < 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent, open: (percent !== 0)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    setCategory = (category) => (e) => {\r\n        if (category !== this.state.category)\r\n            this.setState({category});\r\n    };\r\n\r\n    calculateTheme = () => {\r\n        let {siteData, pageData, editor} = this.props;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        if (!theme.Colors.calculated) {\r\n            Object.values(theme.Colors.items).forEach(item => {\r\n                let scheme = getColorScheme(item.main);\r\n                colorKeys.forEach(key => {\r\n                    item[key] = scheme[key];\r\n                })\r\n            });\r\n\r\n            theme.Colors.calculated = true;\r\n        }\r\n    };\r\n\r\n    getColor = (paletteName, key) => {\r\n        let {siteData, pageData, editor} = this.props;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        this.calculateTheme();\r\n\r\n        return theme.Colors.items[paletteName][key];\r\n    };\r\n\r\n    render() {\r\n        let {siteData, pageData, editor} = this.props;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"ThemeManagerRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"ThemeManagerList\"\r\n                    >\r\n                        {\r\n                            sortBy(Object.values(siteData.theme), \"order\").map(category => {\r\n                                let style = {};\r\n                                if (category === this.state.category)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={category.name}\r\n                                        className=\"ThemeManagerCategoryItem\"\r\n                                        onClick={this.setCategory(category)}\r\n                                        style={style}\r\n                                    >\r\n                                        {category.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.category &&\r\n                        <div className=\"ThemeManagerItemRoot\">\r\n                            {/*Header*/}\r\n                            <div\r\n                                className=\"ThemeManagerItemHeaderContainer\"\r\n                            >\r\n                            <span className=\"ThemeManagerItemHeaderTitle\">\r\n                                Theme\r\n                            </span>\r\n\r\n                                <IconButton\r\n                                    onClick={this.close}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={12}\r\n                                        height={12}\r\n                                        src={require('../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeManagerItemScroll\">\r\n                                {\r\n                                    Object.keys(this.state.category.items).map(key => {\r\n                                        if (this.state.category.name === \"Text\") {\r\n                                            return (\r\n                                                <ThemeTextItem\r\n                                                    key={key}\r\n                                                    item={this.state.category.items[key]}\r\n                                                    siteData={siteData}\r\n                                                    editor={editor}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                        if (this.state.category.name === \"Colors\") {\r\n                                            return (\r\n                                                <ThemeColorsItem\r\n                                                    key={key}\r\n                                                    item={this.state.category.items[key]}\r\n                                                    siteData={siteData}\r\n                                                    pageData={pageData}\r\n                                                    editor={editor}\r\n                                                    recalculateColors={this.calculateTheme()}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nThemeManager.defaultProps = {\r\n    open: false,\r\n    speed: 1200,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport BreakPointManager from \"../BreakPointManager\";\r\nimport DragDropManager from \"../DragDropManager\";\r\nimport InputManager from \"../InputManager\";\r\nimport SelectManager from \"../SelectManager\";\r\nimport SnapManager from \"../SnapManager\";\r\nimport CopyManager from \"../CopyManager\";\r\nimport IdManager from \"../IdManager\";\r\nimport UndoRedo from \"../UndoRedo\";\r\nimport GridLineManager from \"../GridLineManager\";\r\nimport AnchorManager from \"../AnchorManager\";\r\nimport {initDynamicAnimations, initDynamicComponents} from \"../Dynamic/DynamicComponents\";\r\nimport AdjustmentGrid from \"../Adjustment/AdjustmentGrid\";\r\nimport AdjustmentSnap from \"../Adjustment/AdjustmentSnap\";\r\nimport AdjustmentGridLines from \"../Adjustment/AdjustmentGridLines\";\r\nimport AdjustmentGroupRect from \"../Adjustment/AdjustmentGroupRect\";\r\nimport MenuHolder from \"../Menus/MenuHolder\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport './EditorBoundary.css';\r\nimport IFrameCommunicator from \"../Test/IFrameCommunicator\";\r\nimport EditorController from \"../Test/EditorController\";\r\nimport Inspector from \"../Test/Inspector/Inspector\";\r\nimport AdjustmentResizeWrapper from \"../Adjustment/AdjustmentResizeWrapper\";\r\nimport AdjustmentHelpLinesWrapper from \"../Adjustment/AdjustmentHelpLinesWrapper\";\r\nimport AdjustmentHover from \"../Adjustment/AdjustmentHover\";\r\nimport {cloneObject, getScrollbarWidth} from \"../AwesomeGridLayoutUtils\";\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from \"lodash.throttle\";\r\nimport Layout from \"../Test/Layout/Layout\";\r\nimport AddComponent from \"../Test/AddComponent/AddComponent\";\r\nimport PageManager from \"../Test/PageManager/PageManager\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport ThemeManager from \"../Test/Theme/ThemeManager\";\r\nimport defaultSiteData from \"../../data/defaultSiteData.json\";\r\nimport defaultAllComponentData from \"../../data/allComponentData.json\";\r\n\r\nexport default class EditorBoundary extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editorScale: 1,\r\n            inspectorPinned: true,\r\n            pageData: undefined,\r\n        };\r\n\r\n        this.init(props);\r\n    }\r\n\r\n    // Declare all managers & refs\r\n    init = (props) => {\r\n        this.rootLayoutRef = React.createRef();\r\n        this.snapSvgRef = React.createRef();\r\n        this.gridContainerRef = React.createRef();\r\n        this.gridEditorRef = React.createRef();\r\n        this.groupSelectRef = React.createRef();\r\n        this.miniMenuHolderRef = React.createRef();\r\n        this.resizeRef = React.createRef();\r\n        this.helpLinesRef = React.createRef();\r\n        this.inspectorRef = React.createRef();\r\n        this.hoverRef = React.createRef();\r\n        this.layoutRef = React.createRef();\r\n        this.addComponentRef = React.createRef();\r\n        this.pageManagerRef = React.createRef();\r\n        this.themeManagerRef = React.createRef();\r\n\r\n        this.editorData = {\r\n            innerWidth: window.innerWidth,\r\n            innerHeight: window.innerHeight,\r\n            inspectorWidth: 270,\r\n            inspectorPinned: false\r\n        };\r\n        this.breakpointmanager =\r\n            new BreakPointManager(undefined, this.editorData, undefined, this.onZoomLevelChange,\r\n                this.onHeightChange, this.onResize);\r\n        this.dragdrop = new DragDropManager();\r\n        this.inputManager = new InputManager();\r\n        this.select = new SelectManager(this.inputManager, this.groupSelectRef,\r\n            this.rootLayoutRef, this.miniMenuHolderRef, this.inspectorRef, this.resizeRef,\r\n            this.helpLinesRef, this.hoverRef);\r\n        this.snap = new SnapManager(5, this.snapSvgRef);\r\n        this.copyMan = new CopyManager(this.select, this.rootLayoutRef);\r\n        this.idMan = new IdManager('comp');\r\n        this.undoredo = new UndoRedo(100, document, this.idMan);\r\n        this.gridLine = new GridLineManager(this.gridContainerRef);\r\n        this.anchorMan = new AnchorManager();\r\n\r\n        initDynamicComponents();\r\n        initDynamicAnimations();\r\n\r\n        this.iFrameCommunicator = new IFrameCommunicator(undefined, \"WeblancerIFrameCommunicator\",\r\n            window.parent, this.onMessage);\r\n\r\n        // TODO test, clean them after test finished\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 80 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + P\");\r\n                this.pinInspector();\r\n            }\r\n            if ( key === 76 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + L\");\r\n                this.toggleThemeManager(true);\r\n            }\r\n            if ( key === 79 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + O\");\r\n                this.toggleThemeManager(false);\r\n            }\r\n            if ( key === 69 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + E\");\r\n                this.exportSiteData();\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.postMessage({event: \"Editor Mounted\"});\r\n        // this.testWebsite();\r\n    }\r\n\r\n    onMessage = (data, res) => {\r\n        EditorController.onMessage(data, res, this);\r\n    };\r\n\r\n    postMessage = (data, callback) => {\r\n        this.iFrameCommunicator.post(data, callback);\r\n    };\r\n\r\n    testWebsite = () => {\r\n        let siteData = cloneObject(defaultSiteData);\r\n        let allComponentData = cloneObject(defaultAllComponentData);\r\n\r\n        this.onComponentDataUpdated(allComponentData);\r\n        this.onSiteDataUpdated(siteData);\r\n    };\r\n\r\n    onSiteDataUpdated = (siteData) => {\r\n        this.setState({siteData}, () => {\r\n            let pageData = siteData.allPages[Object.keys(siteData.allPages)[0]];\r\n            this.setState({pageData}, this.onHeightChange);\r\n        });\r\n    };\r\n\r\n    onComponentDataUpdated = (allComponentData) => {\r\n        this.setState({allComponentData});\r\n    };\r\n\r\n    onPageChange = (pageId, force) => {\r\n        if (!force && this.state.pageData.props.pageId === pageId) {\r\n            return;\r\n        }\r\n\r\n        this.rootLayoutRef.current.onSelect(true, () => {\r\n            this.idMan.clear();\r\n\r\n            this.setState({pageData: undefined} , () => {\r\n                let pageData = this.state.siteData.allPages[pageId];\r\n                this.setState({pageData});\r\n            });\r\n        });\r\n    };\r\n\r\n    togglePreview = (preview) => {\r\n        this.setState({preview});\r\n    };\r\n\r\n    setZoomLevel = (zoomLevel) => {\r\n        this.setState({zoomLevel: zoomLevel || 100});\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.breakpointmanager.dispose();\r\n    }\r\n\r\n    // Just in editor\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.rootLayoutRef.current)\r\n            width = this.rootLayoutRef.current.getSize(false).width;\r\n\r\n        this.onPageResize(width, this.rootLayoutRef.current);\r\n    };\r\n\r\n    notifyBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        this.rootLayoutRef.current.props.aglComponent.updateTemplates();\r\n        this.rootLayoutRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n    };\r\n\r\n    onZoomLevelChange = (newDevicePixelRatio) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n        this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n    };\r\n\r\n    onHeightChange = () => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n        this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n        this.rootLayoutRef.current.updateLayout();\r\n    };\r\n\r\n    openInspector = () => {\r\n        this.inspectorRef.current.open();\r\n    };\r\n\r\n    pinInspector = () => {\r\n        let selected = this.select.getSelected();\r\n        this.rootLayoutRef.current.props.aglRef.current.onSelect(true);\r\n        this.editorData.inspectorPinned = !this.state.inspectorPinned;\r\n        this.editorData.innerWidth = window.innerWidth -\r\n            this.editorData.inspectorPinned ? this.editorData.inspectorWidth : 0;\r\n        this.setState({inspectorPinned: this.editorData.inspectorPinned}, () => {\r\n            this.select.onScrollItem();\r\n            setTimeout(() => {\r\n                if (selected)\r\n                    selected.onSelect(true);\r\n            }, 0);\r\n        });\r\n\r\n        this.onScrollBoundary();\r\n        this.rootLayoutRef.current.updateLayout();\r\n    };\r\n\r\n    closeInspector = () => {\r\n        this.inspectorRef.current.close();\r\n    };\r\n\r\n    onPageResize = (width, pageAgl, force) => {\r\n        let result = this.breakpointmanager.checkBreakPointChange(width);\r\n        this.breakpointmanager.setWindowWidth(width);\r\n\r\n        this.onResize(undefined, width);\r\n\r\n        if (result.changed || force) {\r\n            this.notifyBreakpointChange(width, result.currentBreakpointName,\r\n                this.breakpointmanager.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onResize = (e, width) => {\r\n        this.onResizeD(e, width);\r\n        this.onResizeT(e, width);\r\n    };\r\n\r\n    onResizeD = debounce((e, width) => {\r\n        if (!width)\r\n            width = this.rootLayoutRef.current.getSize(false, true).width;\r\n        document.documentElement.style.setProperty('--vw-ratio', width / window.innerWidth);\r\n    }, 100);\r\n\r\n    onResizeT = throttle((e, width) => {\r\n        if (!width)\r\n            width = this.rootLayoutRef.current.getSize(false, true).width;\r\n        document.documentElement.style.setProperty('--vw-ratio', width / window.innerWidth);\r\n    }, 100);\r\n\r\n    onPageResizeStart = () => {\r\n        this.resizeRef.current.activate(false);\r\n        this.helpLinesRef.current.activate(false);\r\n        this.miniMenuHolderRef.current.activate(false);\r\n    };\r\n\r\n    onPageResizeStop = () => {\r\n        this.resizeRef.current.activate(true);\r\n        this.helpLinesRef.current.activate(true);\r\n        this.miniMenuHolderRef.current.activate(true);\r\n    };\r\n\r\n    onScrollBoundary = (e) => {\r\n        this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n    };\r\n\r\n    updateLayout = () => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        let layout = [];\r\n\r\n        let getLayoutItem = (item, childData) => {\r\n            if (!item || !item.mounted)\r\n                return;\r\n\r\n            return {\r\n                id: childData.props.id,\r\n                childData: childData,\r\n                childrenData: Object.keys(item.getFromTempData(\"savedChildren\")).map(childId => {\r\n                    let childData = item.getFromTempData(\"savedChildren\")[childId];\r\n                    return getLayoutItem(\r\n                        item.allChildRefs[childId].current,\r\n                        childData\r\n                    );\r\n                }).filter(il => {\r\n                    return il;\r\n                })\r\n            };\r\n        };\r\n\r\n        let pageChildData = {\r\n            tagName: this.rootLayoutRef.current.props.tagName,\r\n            props: this.rootLayoutRef.current.getClearProps({...this.rootLayoutRef.current.props}),\r\n            zIndex: 0\r\n        };\r\n\r\n        layout.push(getLayoutItem(this.rootLayoutRef.current, pageChildData));\r\n\r\n        this.layoutRef.current.setLayout(layout);\r\n    };\r\n\r\n    openLayout = () => {\r\n        this.layoutRef.current.open();\r\n    };\r\n\r\n    closeLayout = () => {\r\n        this.layoutRef.current.close();\r\n    };\r\n\r\n    openAddComponent = () => {\r\n        this.addComponentRef.current.open();\r\n    };\r\n\r\n    closeAddComponent = () => {\r\n        this.addComponentRef.current.close();\r\n    };\r\n\r\n    openPageManager = () => {\r\n        this.pageManagerRef.current.open();\r\n    };\r\n\r\n    closePageManager = () => {\r\n        this.pageManagerRef.current.close();\r\n    };\r\n\r\n    toggleThemeManager = (open) => {\r\n        if (open)\r\n            this.themeManagerRef.current.open();\r\n        else\r\n            this.themeManagerRef.current.close();\r\n    };\r\n\r\n    // pageData is a childData that is for PageBase component\r\n    getLivePageData = () => {\r\n        return {\r\n            tagName: \"PageBase\",\r\n            props: this.rootLayoutRef.current.getClearProps({...this.rootLayoutRef.current.props})\r\n        };\r\n    };\r\n\r\n    getLiveSiteData = () => {\r\n        let siteData = this.state.siteData || {allPages: {}};\r\n\r\n        siteData.allPages[uuidv4()] = this.getLivePageData();\r\n\r\n        return siteData;\r\n    };\r\n\r\n    exportSiteData = () => {\r\n        let siteData = this.getLiveSiteData();\r\n\r\n        const fileName = \"siteData\";\r\n        const json = JSON.stringify(siteData);\r\n        const blob = new Blob([json],{type:'application/json'});\r\n        const href = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = href;\r\n        link.download = fileName + \".json\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    render() {\r\n        // TODO if this.state.siteData not loaded, show loading component\r\n        return (\r\n            <div className=\"EditorBoundaryRoot\" onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }}>\r\n                <AdjustmentGrid\r\n                    ref={this.gridEditorRef}\r\n                />\r\n                <AdjustmentSnap\r\n                    ref={this.snapSvgRef}\r\n                />\r\n                <AdjustmentGridLines\r\n                    ref={this.gridContainerRef}\r\n                />\r\n                <AdjustmentGroupRect\r\n                    ref={this.groupSelectRef}\r\n                />\r\n\r\n                <PageManager\r\n                    ref={this.pageManagerRef}\r\n                    siteData={this.state.siteData}\r\n                    editor={this}\r\n                    onPageChange={this.onPageChange}\r\n                />\r\n\r\n                {\r\n                    this.state.pageData &&\r\n                    <div\r\n                        className=\"EditorBoundaryPageHolder\"\r\n                        style={{\r\n                            // TODO add scale support\r\n                            padding: \"0 50px\"\r\n                        }}\r\n                        onScroll={this.onScrollBoundary}\r\n                        onContextMenu={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className=\"EditorBoundaryPageHolderHover\"\r\n                            style={{\r\n                                bottom: getScrollbarWidth()\r\n                            }}\r\n                            onClick={() => {\r\n                                this.rootLayoutRef.current.onSelect(true);\r\n                            }}\r\n                        />\r\n                        <div className=\"PageBaseWhiteBackground\">\r\n                            <PageBase\r\n                                key={this.state.pageData.props.pageId}\r\n                                id=\"page\"\r\n                                aglRef={this.rootLayoutRef}\r\n                                viewRef={this.rootLayoutRef}\r\n                                breakpointmanager={this.breakpointmanager}\r\n                                undoredo={this.undoredo}\r\n                                dragdrop={this.dragdrop}\r\n                                select={this.select}\r\n                                snap={this.snap}\r\n                                input={this.inputManager}\r\n                                idMan={this.idMan}\r\n                                gridLine={this.gridLine}\r\n                                gridEditorRef={this.gridEditorRef}\r\n                                anchorMan={this.anchorMan}\r\n                                copyMan={this.copyMan}\r\n                                editorData={this.editorData}\r\n                                onPageResize={this.onPageResize}\r\n                                onPageResizeStart={this.onPageResizeStart}\r\n                                onPageResizeStop={this.onPageResizeStop}\r\n                                editor={this}\r\n                                devicePixelRatio={this.state.devicePixelRatio}\r\n                                inspectorPinned={this.state.inspectorPinned}\r\n                                {...this.state.pageData.props}\r\n                                // griddata={{}}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    !this.state.pageData &&\r\n                    <div>\r\n                        Loading...\r\n                    </div>\r\n                }\r\n\r\n                <AdjustmentHover\r\n                    ref={this.hoverRef}\r\n                />\r\n\r\n                <AdjustmentHelpLinesWrapper\r\n                    ref={this.helpLinesRef}\r\n                />\r\n\r\n                <AdjustmentResizeWrapper\r\n                    ref={this.resizeRef}\r\n                />\r\n\r\n                {\r\n                    this.state.pageData &&\r\n                    <Layout\r\n                        ref={this.layoutRef}\r\n                        idMan={this.idMan}\r\n                    />\r\n                }\r\n\r\n                {\r\n                    this.state.siteData &&\r\n                    this.state.pageData &&\r\n                    <ThemeManager\r\n                        ref={this.themeManagerRef}\r\n                        siteData={this.state.siteData}\r\n                        pageData={this.state.pageData}\r\n                        editor={this}\r\n                    />\r\n                }\r\n\r\n                <AddComponent\r\n                    ref={this.addComponentRef}\r\n                    allComponentData={this.state.allComponentData}\r\n                    pageRef={this.rootLayoutRef}\r\n                    editor={this}\r\n                />\r\n\r\n                <Inspector\r\n                    ref={this.inspectorRef}\r\n                    inspectorPinned={this.state.inspectorPinned}\r\n                />\r\n                <MenuHolder\r\n                    ref={this.miniMenuHolderRef}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport EditorBoundary from \"./AwesomeGridLayout/Editor/EditorBoundary\";\r\n\r\nReactDOM.render(\r\n    <EditorBoundary />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/close.ebf2f3f4.svg\";"],"sourceRoot":""}