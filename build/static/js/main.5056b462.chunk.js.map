{"version":3,"sources":["AwesomeGridLayout/icons/paint.svg","AwesomeGridLayout/Adjustment/icons/plus.svg","AwesomeGridLayout/icons/align-left.svg","AwesomeGridLayout/icons/align-center.svg","AwesomeGridLayout/icons/align-right.svg","AwesomeGridLayout/icons/align-top.svg","AwesomeGridLayout/icons/align-middle.svg","AwesomeGridLayout/icons/align-bottom.svg","AwesomeGridLayout/icons/chain.svg","AwesomeGridLayout/icons/unlink.svg","AwesomeGridLayout/icons/more.svg","AwesomeGridLayout/icons/question.svg","AwesomeGridLayout/Adjustment/icons/minimize.svg","AwesomeGridLayout/Adjustment/icons/maximize.svg","serviceWorker.js","AwesomeGridLayout/AwesomeGridLayoutUtils.js","AwesomeGridLayout/Editor/EditorContext.js","AwesomeGridLayout/BreakPointManager.js","AwesomeGridLayout/DragDropManager.js","AwesomeGridLayout/GridChildContainerChildren.js","AwesomeGridLayout/Test/Inspector/InspectorBreadcrumbs.js","AwesomeGridLayout/HelperComponents/IconButton.js","AwesomeGridLayout/Test/Inspector/InspectorAligns.js","AwesomeGridLayout/AwesomwGridLayoutHelper.js","AwesomeGridLayout/Menus/CommonComponents/NumberInputWithUnit.js","AwesomeGridLayout/Test/Inspector/InspectorTitle.js","AwesomeGridLayout/Test/Inspector/InspectorSize.js","AwesomeGridLayout/Test/Inspector/DockSwitch.js","AwesomeGridLayout/Test/Inspector/InspectorPosition.js","AwesomeGridLayout/Menus/CommonComponents/DropDown.js","AwesomeGridLayout/Menus/CommonComponents/NumberInput.js","AwesomeGridLayout/Test/Inspector/InspectorScroll.js","AwesomeGridLayout/Test/Inspector/InspectorPadding.js","AwesomeGridLayout/Test/Inspector/InspectorOverflow.js","AwesomeGridLayout/Menus/CommonComponents/TextInput.js","AwesomeGridLayout/Test/Inspector/InspectorAnchor.js","AwesomeGridLayout/Test/Inspector/InspectorAdjustment.js","AwesomeGridLayout/Components/Helpers/AGLComponent.js","AwesomeGridLayout/Menus/MenuBase/MenuButton.js","AwesomeGridLayout/Menus/MenuBase/MenuBaseIndexTitle.js","AwesomeGridLayout/Components/Containers/Menus/Components/LightTooltip.js","AwesomeGridLayout/Menus/MenuBase/MenuBase.js","AwesomeGridLayout/Menus/CommonComponents/Slider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInputControlled.js","AwesomeGridLayout/Menus/CommonComponents/Image.js","AwesomeGridLayout/Portal.js","AwesomeGridLayout/Test/Theme/HexColorPicker.js","AwesomeGridLayout/Test/Theme/ThemeColorPicker.js","AwesomeGridLayout/Menus/CommonComponents/ColorPicker.js","AwesomeGridLayout/Components/Containers/Menus/Components/Background.js","AwesomeGridLayout/Menus/CommonComponents/Divider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInput.js","AwesomeGridLayout/Components/Containers/Menus/Components/Border.js","AwesomeGridLayout/Components/Containers/Menus/Components/Corners.js","AwesomeGridLayout/Menus/CommonComponents/CircularSlider.js","AwesomeGridLayout/Menus/CommonComponents/Angle.js","AwesomeGridLayout/Components/Containers/Menus/Components/Shadow.js","AwesomeGridLayout/Components/Containers/Menus/BorderDesign.js","AwesomeGridLayout/Menus/CommonComponents/GridViewer.js","AwesomeGridLayout/Components/Containers/Menus/Components/AnimationSelector.js","AwesomeGridLayout/Components/Containers/Menus/Components/AnimationOptions.js","AwesomeGridLayout/Components/Containers/Menus/AnimationDesign.js","AwesomeGridLayout/Components/Containers/ContainerBase.js","AwesomeGridLayout/Components/Containers/Menus/SectionDesign.js","AwesomeGridLayout/Components/Containers/Header.js","AwesomeGridLayout/Components/Containers/Footer.js","AwesomeGridLayout/Components/Containers/Section.js","AwesomeGridLayout/Test/Inspector/InspectorBackground.js","AwesomeGridLayout/Components/Pages/PageBase.js","AwesomeGridLayout/Components/Stack/VerticalSpacer.js","AwesomeGridLayout/Test/Animations/FadeInAnimation.js","AwesomeGridLayout/Test/Animations/BounceInAnimation.js","AwesomeGridLayout/Test/Animations/GlideInAnimation.js","AwesomeGridLayout/Test/Animations/FloatInAnimation.js","AwesomeGridLayout/Test/Animations/ExpandInAnimation.js","AwesomeGridLayout/Test/Animations/SpinInAnimation.js","AwesomeGridLayout/Test/Animations/FlyInAnimation.js","AwesomeGridLayout/Test/Animations/TurnInAnimation.js","AwesomeGridLayout/Test/Animations/ArcInAnimation.js","AwesomeGridLayout/Test/Animations/PuffInAnimation.js","AwesomeGridLayout/Test/Animations/FoldInAnimation.js","AwesomeGridLayout/Test/Animations/FlipInAnimation.js","AwesomeGridLayout/Test/Animations/RevealAnimation.js","AwesomeGridLayout/Dynamic/DynamicComponents.js","AwesomeGridLayout/Adjustment/AdjustmentPageControllers.js","AwesomeGridLayout/GridChildContainerFixedHolder.js","AwesomeGridLayout/Test/PaddingInterface.js","AwesomeGridLayout/Test/ParentSelectInterface.js","AwesomeGridLayout/GridChildContainer.js","AwesomeGridLayout/AGLAnchor.js","AwesomeGridLayout/Adjustment/ResizePanePage.js","AwesomeGridLayout/Adjustment/AdjustmentResizePage.js","AwesomeGridLayout/Test/EventTrigger.js","AwesomeGridLayout/Test/WindowCache.js","AwesomeGridLayout/AnimationHolder.js","AwesomeGridLayout/Test/VisibilitySensorWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpSize.js","AwesomeGridLayout/AwesomeGridLayout2.js","AwesomeGridLayout/Components/Helpers/AGLWrapper.js","AwesomeGridLayout/Components/Stack/StackSpacerContainer.js","AwesomeGridLayout/Adjustment/AdjustmentMove.js","AwesomeGridLayout/Components/Stack/StackSpacerResizer.js","AwesomeGridLayout/Components/Stack/StackSpacer.js","AwesomeGridLayout/Components/Stack/Stack.js","AwesomeGridLayout/Test/ContextMenu.js","AwesomeGridLayout/InputManager.js","AwesomeGridLayout/SelectManager.js","AwesomeGridLayout/SnapManager.js","AwesomeGridLayout/CopyManager.js","AwesomeGridLayout/IdManager.js","AwesomeGridLayout/UndoRedo.js","AwesomeGridLayout/GridLineManager.js","AwesomeGridLayout/AnchorManager.js","AwesomeGridLayout/Adjustment/AdjustmentGridRoot.js","AwesomeGridLayout/Adjustment/AdjustmentGridRow.js","AwesomeGridLayout/Adjustment/AdjustmentGrid.js","AwesomeGridLayout/Adjustment/AdjustmentSnapLines.js","AwesomeGridLayout/Adjustment/AdjustmentSnap.js","AwesomeGridLayout/Adjustment/GridLine.js","AwesomeGridLayout/Adjustment/AdjustmentGridLinesWrapper2.js","AwesomeGridLayout/Adjustment/AdjustmentGridLines.js","AwesomeGridLayout/Adjustment/ResizePane.js","AwesomeGridLayout/Adjustment/AdjustmentGroupRect.js","AwesomeGridLayout/Menus/MiniMenu/Components/RightClick.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenuVerticalDivider.js","AwesomeGridLayout/Menus/MiniMenu/Components/Help.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenu.js","AwesomeGridLayout/Menus/MenuHolder.js","AwesomeGridLayout/Test/IFrameCommunicator.js","AwesomeGridLayout/Test/EditorController.js","AwesomeGridLayout/Test/Inspector/Inspector.js","AwesomeGridLayout/Adjustment/AdjustmentStretch.js","AwesomeGridLayout/Adjustment/AdjustmentResize.js","AwesomeGridLayout/Adjustment/AdjustmentResizeWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLines.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLinesWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHover.js","AwesomeGridLayout/Test/Layout/Layout.js","AwesomeGridLayout/Test/AddComponent/ComponentGrid.js","AwesomeGridLayout/Test/AddComponent/AddComponent.js","AwesomeGridLayout/Test/PageManager/PageTypeTitle.js","AwesomeGridLayout/Test/PageManager/PageSetting/PageInfo.js","AwesomeGridLayout/Menus/CommonComponents/AglRadio.js","AwesomeGridLayout/Test/PageManager/PageSetting/Permissions.js","AwesomeGridLayout/Test/PageManager/PageSetting/SeoGoogle.js","AwesomeGridLayout/Test/PageManager/PageSetting/SocialShare.js","AwesomeGridLayout/Test/PageManager/PageSetting/PageSetting.js","AwesomeGridLayout/Test/PageManager/PageItem.js","AwesomeGridLayout/Test/PageManager/AddNewPageDialogItem.js","AwesomeGridLayout/Test/PageManager/AddNewPageDialog.js","AwesomeGridLayout/Test/PageManager/PageManager.js","AwesomeGridLayout/Test/Theme/ThemeTextItem.js","AwesomeGridLayout/Test/Theme/ThemeColorsItem.js","AwesomeGridLayout/Test/Theme/ThemeManager.js","AwesomeGridLayout/Editor/Zoom/EditorHeaderZoom.js","AwesomeGridLayout/Editor/PageSelect/EditorHeaderPageSelect.js","AwesomeGridLayout/Menus/CommonComponents/NumberInputEnterToChange.js","AwesomeGridLayout/Editor/Breakpoints/BreakpointHelper.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpointsSettingItem.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpointsSetting.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpoints.js","AwesomeGridLayout/Editor/EditorHeader.js","AwesomeGridLayout/Editor/EditorPreview.js","AwesomeGridLayout/Editor/EditorType.js","AwesomeGridLayout/Editor/Breakpoints/PreviewHeaderBreakpoints.js","AwesomeGridLayout/Editor/PreviewHeader.js","AwesomeGridLayout/Editor/PageView.js","AwesomeGridLayout/Editor/EditorBoundary.js","index.js","AwesomeGridLayout/icons/close.svg"],"names":["module","exports","Boolean","window","location","hostname","match","initGriddata","griddataProp","breakpointdata","initialized","clone","cloneObject","props","griddata","getDefaultChildgriddata","bpData","exist","props2","prop","hasOwnProperty","k","sample","x","y","w","h","minW","undefined","maxW","minH","maxH","constraints","left","top","right","bottom","margin","all","units","scrollType","absolute","fix","autoHeight","autoWidth","overflowData","state","overflowY","resizable","draggable","hasOwnBreakPoints","isContainer","autoDock","sortedBreakPoints","getSortedBreakPoints","name","obj","Array","copy","i","len","length","Object","attr","shallowEqual","objA","objB","keysA","keys","keysB","throttleDebounce","fn","ms","deTimer","dontCall","_","args","arguments","apply","setTimeout","clearTimeout","scrollbarWidth","getScrollbarWidth","document","div","createElement","css","width","height","position","overflow","MsOverflowStyle","body","appendChild","offsetWidth","clientWidth","removeChild","assignData","newData","assign","JSToCSS","JS","cssString","objectKey","replace","g","toLowerCase","updateStyle","styleNode","style","styleName","innerHTML","styleSheet","cssText","createTextNode","appendStyle","styleId","setAttribute","type","getElementsByTagName","swapArrayElements","arr","indexA","indexB","temp","EditorContext","React","createContext","EditorContextProvider","setProduction","callback","setState","production","preview","sendEditCommand","editor","postMessage","func","inputs","setPreview","sendPublishCommand","pageData","setPageData","idMan","clear","pageId","update","reload","initContext","getInnerWidth","innerWidth","inspectorPinned","inspectorWidth","setZoomScale","zoomScale","setSiteData","siteData","force","allPages","breakpoints","BreakPointManager","getDefault","setBreakpoints","console","log","rootLayoutRef","current","onSelect","onNewBpAdded","newBpData","prevBpData","pageChildData","tagName","getClearProps","zIndex","changeGriddata","item","childData","mounted","getFromTempData","map","childId","allChildRefs","setInspectorPinned","setInspectorWidth","setDevicePixelRatio","devicePixelRatio","setAllComponentData","allComponentData","toggleRightMenu","menuName","rightMenus","toggle","setPageSizeWidth","breakpointmanager","setWindowWidth","pageSize","setPageSize","setRightMenus","getInnerWith","addComponent","pageManager","themeManager","Provider","value","this","children","Component","onBreakpointChange","onZoomLevelChange","onHeightChange","onResize","fixBreakpointRules","forEach","end","updateBreakpoint","start","prevBp","bp","find","b","getUpperBreakPoint","push","deleteBreakpoint","index","findIndex","splice","fromClone","windowInnerWidth","lastWidth","editorData","copyDesign","designDatas","sourceItem","cloneDesignDatas","getCopyDesign","pasteDesign","designData","design","justOneBp","currentBpName","bpName","getWindowWidth","getWindowHeight","getSize","getBpData","getDevicePixelRatio","onDevicePixelRatioChange","changed","onHeightResize","e","lastHeight","innerHeight","onWindowResize","newWidth","context","result","checkBreakPointChange","currentBreakpointName","lastBreakpointName","size","currentBpData","setData","dataSet","param","breakpointName","params","split","override","getFromData","firstParamResult","findFirstUpperBreakPointParam","slice","p","getHighestBpName","getCompositeFromData","results","checkBreakpointName","composite","merge","hasDataInBreakPoint","findFirstUpperBreakPointName","getMinWidth","minSize","filter","sort","a","addEventListener","removeEventListener","prefer","breakPointData","DragDropManager","setDragging","draggingItem","getDragging","isDraggingItemFixed","portalNodeId","setDraggingStop","mouseOver","parent","getParentsId","includes","id","prepareRects","dropItem","newParent","fromUndoRedo","undoPower","toggleHelpLines","onChildLeave","drop","onChildDrop","newItem","itemId","firstRelativeX","dragData","firstPos","firstRelativeY","parentRect","lastRelativeX","lastRelativeY","newParentRect","parentId","newParentId","undoredo","add","getItem","setMouseOver","setPosition","dragdrop","gridLine","hasGridLine","removeMouseOver","positionData","toggleGridLines","setMouseOverForNonDragging","mouseOverNonDragging","getMouseOverForNonDragging","GridChildContainerChildren","saveState","allChildren","allChildId","allChildIndex","values","c","z","child","getSorted","getChildren","agl","getChildrenOverride","nextProps","nextState","nextContext","JSON","stringify","InspectorBreadcrumbs","className","reverse","onClick","key","IconButton","aria-label","marginLeft","borderRadius","boxSizing","buttonBaseStyle","disabled","display","justifyContent","alignItems","padding","imageContainerStyle","icon","InspectorAligns","getButtonsData","horizontal","img","src","require","vertical","data","alignItem","saveGridItemStyle","setGridItemStyle","select","onScrollItem","gridItemStyle","alignSelf","marginTop","marginBottom","justifySelf","marginRight","baseDocks","getBaseDocks","setDocks","NumberInputWithUnit","inputFilter","oldValue","okay","parseFloat","isNaN","Math","min","max","onChange","target","endsWith","getValue","onShowUnits","anchorEl","currentTarget","round","showUnits","unitIconButton","createRef","classes","classNames","textAlign","inputStyle","unit","ref","unitButtonStyle","disableUnit","color","unitMenuStyle","open","onClose","MenuListProps","dense","onUnitChange","InspectorTitle","defaultOpen","title","process","InspectorSize","onItemPropsChange","owner","getUnit","getViewRatioStyle","setNewSize","parentValue","defaultValue","getPxValueFromCSSValue","runtimeValueToStyleValue","propName","onPropsChange","addListener","removeListener","runtimeStyle","runtimeGridItemStyle","getRuntimeGridItemStyle","widthForPercent","heightForPercent","Infinity","disabledProps","scrollWidthMinusPadding","widthUnits","scrollHeightMinusPadding","heightUnits","minWidth","maxWidth","minWidthUnits","minHeight","maxHeight","minHeightUnits","maxWidthUnits","maxHeightUnits","defaultProps","DockSwitch","withStyles","theme","root","switchBase","transform","opacity","backgroundColor","thumb","boxShadow","track","checked","Switch","InspectorPosition","onDockActiveChange","side","oldDocks","updateHelpLines","helpLinesParent","dragging","onDockAutoChange","setTempData","parentProp","compositeGridItemStyle","onValueChange","getUnitFromStyleValue","updateResizePanes","docks","auto","fontSize","DropDown","option","valueRenderer","renderer","spanStyle","cursor","menuStyle","options","pointerEvents","NumberInput","test","toFixed","InspectorScroll","onChangeScrollEffect","offsetTop","setScrollBehaviour","viewRef","onChangeOffsetTop","behaviour","getValueFromCSSValue","InspectorPadding","compositePadding","setDataInBreakpoint","equalPadding","pxValue","getStyleValueFromPx","invalidateSize","requestAnimationFrame","onEqualPadding","InspectorOverflow","onChangeState","thisBpOverflowData","compositOverflowData","overflowX","newOverflowData","changeScrollDirection","onChangeAuto","ToggleButtonGroup","exclusive","ToggleButton","TextInput","InspectorAnchor","onEnableAnchor","enable","anchor","anchorMan","addAnchor","removeAnchor","onChangeName","newName","modifyAnchor","v","InspectorAdjustment","onRotationChange","degree","warn","rotate","oldDegree","setTransformStyle","updateLayout","AGLComponent","resolveDesignData","getData","componentData","getDefaultData","componentBpData","tempBpData","getAgl","aglRef","onDesignChange","designKey","updateDesign","getCompositeDesignData","getInspector","getInspectorOverride","MenuButton","menu","updateMenu","MenuBaseIndexTitle","disableRipple","onIndexClick","LightTooltip","tooltip","shadows","Tooltip","LightMenuTooltip","MenuBase","close","selectedIndexNo","getDefaultPos","defaultPosition","defaultIndexNo","handle","bounds","styles","menuTitle","indexData","PopperProps","placement","render","Slider","step","SliderInputControlled","handleStyle","Image","onError","hasError","errorsrc","Portal","canUseDOM","defaultNode","node","nodeId","getElementById","ReactDOM","createPortal","HexColorPicker","onChangeComplete","hex","disableAlpha","colorKeys","ThemeColorPicker","onSelectColor","onAddColor","myColors","unshift","onAddColorClick","addColor","themeColorCategoryItems","Colors","items","parseColor","themeManagerRef","getColor","paletteName","chroma","contextType","ColorPicker","getRgbA","r","rgba","handleClick","displayColorPicker","handleClose","handleChangeComplete","lastValue","alpha","getColorAndAlpha","handleAlphaChange","background","getBoundingClientRect","Background","Divider","SliderInput","Border","border","Corners","radius","changeSide","link","_side","onLinkClick","direction","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","CircularSlider","onMouseDown","rect","rootDivRef","onMouseMove","onMouseUp","clientX","clientY","vx","vy","angle","atan2","PI","Angle","loop","deg2rad","rad2deg","Shadow","shadow","getDegree","xOffset","yOffset","ratio","atan","getRatio","tan","calcDegree","xO","yO","abs","distance","blur","BorderDesign","getIndex","viewBox","fillRule","d","getOptions","fillColor","GridViewer","AnimationSelector","onSelectAnimation","playAnimation","allAnimationNames","animation","noneClasses","displayName","join","charAt","toUpperCase","AnimationOptions","DynamicAnimations","duration","delay","once","AnimationDesign","ContainerBase","getPrimaryOptions","compositeDesign","getStaticChildren","shadowColor","borderColor","topLeft","topRight","bottomRight","bottomLeft","aglComponent","SectionDesign","Header","isSection","setStyleParam","defaultGridItemStyle","gridArea","as","autoConstraintsOff","helplineOff","Footer","Section","isVerticalSection","designStyle","InspectorBackground","onChangeColor","PageBase","initDataFromPageData","allSectionsH","allSectionsV","grid","gridX","gridY","gridTemplateRows","gridTemplateColumns","initKeyboard","event","which","keyCode","ctrl","ctrlKey","preventDefault","selectedItem","getSelected","getHorizontalSection","moveUp","moveDown","getVerticalSection","moveLeft","moveRight","pageResize","containerHeight","deleteHorizontalSection","currentSection","areas","getGridArea","x1","parseInt","x2","firstRow","lastRow","verticalSection","x12","y12","x22","y22","setGridArea","horizontalSection","x13","y13","x23","y23","fill","setGrid","deleteVerticalSection","y1","y2","firstCol","lastCol","mainColIndex","getMainColIndex","addSectionQueue","dynamicComponents","isVertical","addQueue","checkingAddQueue","nextOne","shift","checkAddQueue","addVerticalSection","newNextOne","addHorizontalSection","onItemPreDelete","allow","onItemPreResizeStop","dir","delta","yLineRefs","getYlineRef","firstLineTop","getGridLineRect","targetTop","selectedX1","lineTop","checkIndex","nextSectionV","targetBottom","selectedX2","lineBottom","currentSectionIndex","currentSectionGridArea","Tag","section","resizeSides","addChild","insertIndex","areas2","currentIndex","sideSection","updateTemplates","isHideInBreakpoint","hasMiniMenuOverride","invalidateSizeOverride","self","updateParent","updateChildren","sourceId","tempSize","childRef","getSectionOfPoint","isPointInclude","fullWidth","isPage","page","VerticalSpacer","FadeInAnimation","animationStyles","StyleSheet","create","fadeIn","animationName","animationDuration","animationDelay","BounceInAnimation","bounceIn","GlideInAnimation","tx","sin","ty","cos","glideIn","FloatInAnimation","floatIn","ExpandInAnimation","power","expandIn","SpinInAnimation","spinNo","firstRotate","spinIn","FlyInAnimation","windowSize","flyIn","TurnInAnimation","viewSize","turnIn","animationTimingFunction","ArcInAnimation","arcIn","PuffInAnimation","puffIn","FoldInAnimation","transformOrigin","foldIn","FlipInAnimation","flipIn","RevealAnimation","clipPath","reveal","DynamicComponents","AdjustmentPageControllers","addSection","getAnchor","needUpdate","updateTimeout","forceUpdate","containerClasses","modifiers","preventOverflow","enabled","boundariesElement","hide","GridChildContainerFixedHolder","clientHeight","PaddingInterface","borderTop","borderLeft","borderBottom","borderRight","ParentSelectInterface","GridChildContainer","aglStyle","modifyContainerStyle","modifyContainerStyleOverride","paddingTop","paddingLeft","paddingBottom","paddingRight","getContainerStyleId","modifyOverflowStyle","getOverflowStyleId","getOverflowStyle","webkitScrollbarStyle","webkitScrollbarStyleId","scrollStyleNode","updateAdjustments","controllerRef","fixedHolderRef","needOverflow","selectAsParent","selected","show","overflowClasses","containerRef","overflowRef","onScroll","AGLAnchor","ResizePanePage","isLeftClick","stopPropagation","mouseDown","pointerType","button","moving","onDrag","onDragStart","onDragStop","lastMouseX","lastMouseY","onResizeStart","onResizeStop","isCorner","draggingStart","onPointerDown","AdjustmentResizePage","sides","EventTrigger","defaultListener","listener","listeners","l","trigger","windowCache","boundingRects","clientsWidth","clientsHeight","scrollsTop","scrollsLeft","scrollsWidth","scrollsHeight","clearCache","clearCacheTimeuot","getCachedBoundingRect","getCachedClientWidth","getCachedClientHeight","getCachedScrollTop","scrollTop","getCachedScrollLeft","scrollLeft","getCachedScrollWidth","scrollWidth","getCachedScrollHeight","scrollHeight","addToCache","AnimationHolder","transformRef","VisibilitySensorWrapper","partialVisibility","containment","getPageOverflowRef","active","disableVS","AdjustmentHelpSize","getText","resizeHelpData","toString","AwesomeGridLayout2","callOverride","funcName","getOverrideProp","hasOverride","init","needRender","lastZIndex","getNextIndexData","savedChildren","savedChildrenArray","oldId","createChildByData","Children","createdChild","renderChild","childs","childrenData","initLayout","getDefaultStyle","setStyle","defaultGrid","defaultStyle","lateMounted","addToSnap","onPageResize","onChildMounted","isEditor","getShortcutOptions","hasMiniMenu","debounce","getBoundarySize","snap","addSnap","p1","p2","parentsId","getGridLineSnaps","snaps","horizontals","verticals","xLineRef","getXlineRef","yLineRef","newId","fixed","getId","AGLProps","input","copyMan","gridEditorRef","getAllChildOverrideProps","component","fullForce","widthMinusPadding","heightMinusPadding","onWindowSizeChange","getRenderChildData","arrangeIndex","nextZIndex","nextChild","prevZIndex","prevChild","firstZIndex","changeIndex","allChildData","change","startIndex","lastIndex","testChildData","setChildZIndex","childZIndex","forceCalculate","childElement","newProps","keepChildren","Error","onChildAdd","newBreakpointName","delete","getChildData","createItem","clearItem","removeChildElement","clearMiniMenu","getAllOverrideProps","removeId","removeGridLine","removeSnap","updateHelpSizeLines","setInspector","onMouseOver","fromEnter","setItemHover","onMouseOut","hover","updateHover","onMouseEnter","outAllParent","forceRect","forceGridLines","gridType","isPrepared","onNewChildMounted","calcResult","coordinates","childRect","thisRect","calculateChildGridItem","relativeY","setProps","clearFromAllBp","newChild","removeIdAndChildrenId","nonePointerEventForChildren","parentDragging","onParentDragging","setRuntimeStyle","group","callGroup","resizing","moveWithMouse","firstBoundaryPos","setDraggingState","groupDragStart","boundarySize","isFixed","checkSnapOnDrag","updateGridLines","groupDrag","addGrid","groupDragStop","drawSnap","dropped","updateMiniMenu","relativeX","redoData","undoData","calculateGridItem","fakeStyle","snapDelta1","getSnapDelta","snapDelta2","snapDelta3","snapDelta","deltaX","snapV","deltaY","snapH","pointOfSnapH","pointOfSnapV","parentGridLines","checkSnap","dontCalculate","getDocks","fromState","dontAutoDock","cy1","cy2","cx1","cx2","calculateGridArea","coordinatesAbs","coordinateToRelative","oldGridItemStyle","centerX","centerY","parentCenterMinusX","parentCenterPlusX","cy2IsLastLine","centerDiffX","centerDiffY","getPxOrPcOrValue","cx2IsLastLine","coordinateToAbsolute","getTopLeft","pageResizeStart","resizeData","firstX","firstLeft","activateHover","onPageResizeStart","pageResizeCalculate","firstY","firstTop","firstBoundaryWidth","firstBoundaryHeight","firstBoundaryTop","firstBoundaryLeft","onResizeCalculate","updatePageAdjustments","onResizeData","backContainerRef","finalDelta","rad","cx","cy","cxy","sqrt","cxp","cyp","thetaH","thetaW","Dh","Dw","dxH","dyH","dxW","dyW","getResizeDelta","rotateDegree","checkSnapOnResize","setResizeHelpData","pageResizeStop","onPageResizeStop","setSize","firstWidth","firstHeight","gridCoordinates","dontAddToSnap","oldStyle","isPercent","isViewRatio","newValue","getParentProps","postFix","newRuntimeStyle","animationCss","getGridItemStyleId","newGridItemStyle","dontOverride","getStyleId","getDesignStyleId","setDesignStyle","newDesignStyle","designStyleNode","getTransformStyleId","newTransform","transformStyleNode","getTransformStyle","compositeTransform","rules","newStyle","excludeBp","getGridLineOfPoint","after","gridLine1","gridLine2","mouseMoved","lastClientX","lastClientY","startMillis","Date","getTime","isRightClick","canMove","isGroupSelected","currentMillis","groupSelected","onContextMenu","deselectParent","clicked","dontUpdateAdjustment","isSelectable","selectItem","removeGridLineByType","showGridLines","updateParentsRect","onScrollEnd","onRootScroll","forceScroll","scrollReset","targetScroll","maxTop","scrollTo","behavior","editGrid","editing","updateGridEditor","setAnchor","disable","stateChange","forceKey","showAnimation","onAnimationEnd","activateResize","getCompositeAnimationCss","compositeAnimation","getAnimationCSS","getContextMenu","childContainers","windowWidth","setItem","prevProps","prevState","snapshot","compositeStyle","holderClasses","TagAs","onWheel","childSize","showSideResize","layoutType","compactType","AGLWrapper","fillWithData","StackSpacerContainer","updateSpacers","spacers","spacer","PureComponent","AdjustmentMove","StackSpacerResizer","StackSpacer","setPointerEvents","updateSpacerData","newHeight","spacerData","stack","updateSize","order","Stack","sortedChildrenArray","lateMountedOverride","lateMountedComplete","setOrder","calculateGridItemChildOverride","calculateWrapper","calculateChildGridItemOverride","child1","centerDiff","childRelativeY","childHeight","childFound","childOrderSet","sorted","relativeYA","relativeYB","relativeY2","getSpacer","getSpacerData","spacerContainerRef","allSpacerData","allSpacerRef","onStackDragStart","onStackDragStop","onMouseOverSpacer","onMouseEnterSpacer","onMouseOutSpacer","setMouseOverOverride","setPointerEventOfSpacers","setMouseOverForNonDraggingOverride","spacerRef","setGridItemStyleChildOverride","container","flexDirection","onChildLeaveOverride","removing","stretchChildOverride","stretch","isStretch","isStretchChildOverride","setStyleParamOverride","isStack","onDragStartChildOverride","onDragChildOverride","onDragStopChildOverride","ContextMenu","getFakeAnchor","popperStyle","onClickAway","mouseEvent","autoFocusItem","hasDivider","menuItem","j","ContextMenuItem","subMenu","interactive","leaveDelay","flip","shortcut","deepEqual","saveStyle","beStretch","allowStretch","disableStretch","pageAgl","oldBehaviour","oldOffsetTop","oldIsFixed","lastSectionId","itemRect","sectionParent","addFixedChildToRoot","oldParentRect","pageRect","hideInBreakPoint","showInBreakPoint","fromAll","getSectionId","uuidv4","createStack","itemsParent","getSectionParent","lastBottom","rightFromLeft","topA","topB","stackNode","_stack","stackId","itemIds","newItems","removeStackFromAGL","addToStack","parentWidth","stackAgl","childIds","removeChilds","addToUndo","saveValue","oldType","oldZIndex","breakpointData","createContextMenu","copySection","paste","duplicate","copyDesignItem","item1","item2","isSameFamily","allOldDesign","sourceItemTemp","overrideBps","pasteFromBreakpointDesign","fromName","toName","fromData","currentData","oldData","deleteSection","shortcutSection","sectionSection","sortBy","array","getColorScheme","baseColor","luminance","chromaColor","SelectManager","alt","inputManager","groupSelectRef","pageAglRef","miniMenuHolderRef","inspectorRef","resizeRef","helpLinesRef","hoverRef","setContext","editorContext","dontUpdateAdjustments","createGroup","clearGroup","addMiniMenu","addMenu","inspectorMenu","setMenu","updateGroupRect","mainItem","deleteGroup","firstRect","updateRect","throttle","helpLineParent","activate","fakeItemRect","test1","test2","floor","random","test3","SnapManager","snapThreshold","snapSvgRef","ignoreId","additionalSnaps","topUp","topDown","leftUp","leftDown","concat","CopyManager","selectManager","pageRef","copyItem","getCopyItem","destinationItem","copyRect","IdManager","prefix","allId","preferName","fixName","baseId","postNo","UndoRedo","getQueueObject","undo","redo","undoQueue","pop","redoQueue","undoFunc","object","hasUndo","hasRedo","GridLineManager","gridContainerRef","positions","getIdCache","AnchorManager","allAnchors","goToAnchor","saveToHistory","AdjustmentGridRoot","AdjustmentGridRow","gridLineManager","rowLines","rowLineRect","nextRowLineRect","rowHeight","fontWeight","AdjustmentGrid","addRow","rowsHeight","addColumn","columnsWidth","changeColumnWidth","changeRowHeight","deleteRow","deleteColumn","AdjustmentSnapLines","stroke","AdjustmentSnap","GridLine","lineRef","AdjustmentGridLinesWrapper2","yNo","xNo","refId","AdjustmentGridLines","fixLineRef","idCache","updateGridLine","prepared","xNoA","yNoA","xNoB","yNoB","xNoT","yNoT","xLineRefA","yLineRefA","xLineRefB","yLineRefB","xLineRefT","yLineRefT","ResizePane","AdjustmentGroupRect","RightClick","MiniMenuVerticalDivider","Help","MiniMenu","primary","MenuHolder","miniMenuRef","contextMenu","miniMenuItem","IFrameCommunicator","origin","authKey","otherWindow","onMessage","processIncomingMessage","callbacks","responseFunc","responses","post","counter","EditorController","AllowFunctions","res","Inspector","opening","clearInterval","closeInterval","openInterval","setInterval","percent","speed","interval","closing","pinInspector","toggleState","getDefaultMenu","AdjustmentStretch","AdjustmentResize","transformStyleId","stretchStyle","AdjustmentResizeWrapper","AdjustmentHelpLines","calculate","visibility","strokeDasharray","AdjustmentHelpLinesWrapper","helpLineRef","AdjustmentHover","disablePortal","Layout","setLayout","layout","processLayout","treeData","getTreeItem","layoutItem","childLayout","expanded","parentItemId","setTree","updateItem","treeItem","childTreeItem","ComponentGrid","getItemStyle","rootRef","widthRatio","setDraggingItem","persist","closingTimeOut","closeMenu","createItemAndDrag","presetProps","changeItemParent","setDraggingEnd","allItems","Fragment","onDragEnd","imageUrl","label","AddComponent","setComponentListItemDebounce","componentListItem","setComponentListItem","setComponentListItemLeave","componentListItemHover","componentSubListItem","subList","setComponentSubListItemDebounce","setComponentSubListItem","setComponentSubListItemLeave","componentSubListItemHover","listName","builtin","apps","groupName","componentSubListItems","PageTypeTitle","PageInfo","onRename","newPageName","rename","pageName","setAsHomePage","home","isHome","onBlur","onKeyPress","variant","AglRadio","Radio","Permissions","changePermission","pageSetting","permissions","onSetPassword","password","onChangeMemberType","memberType","onRoleChange","role","memberRoles","control","roleAnchor","allApps","member","setting","roles","SeoGoogle","onChangeSeoSetting","newEndUrl","seoGoogle","endUrl","endUrlError","pageTitle","baseUrl","pageDescription","newPageTitle","resize","newPageDescription","rows","showInSearch","SocialShare","onChangeSocialShareSetting","socialShare","substring","lastIndexOf","description","newTitle","newDescription","PageSetting","onChangeTab","tabValue","Modal","aria-labelledby","aria-describedby","disableBackdropClick","indicatorColor","textColor","PageItem","pageMenuAnchorEl","onPageChange","setAsHome","renameInput","focus","boxClasses","isDynamic","AddNewPageDialogItem","AddNewPageDialog","addNormalPage","onAddNormalPage","addDynamicPage","onAddDynamicPage","PageManager","onChangeSearch","searchValue","getFilteredPages","siteId","onPageClick","newPageDataUrl","fetch","then","json","openNormalPage","openDynamicPage","showAddPage","ThemeTextItem","onEditClick","font","fontFamily","fontStyle","lineHeight","ThemeColorsItem","toChange","calculated","main","ThemeManager","setCategory","category","calculateTheme","scheme","recalculateColors","EditorHeaderZoom","Consumer","zoomSetting","anchorOrigin","getContentAnchorEl","anchorPosition","PaperProps","marginThreshold","transitionDuration","onZoomChange","EditorHeaderPageSelect","pd","NumberInputEnterToChange","lazy","tempValue","onTempChange","getBreakpointIcon","getBreakpointName","EditorHeaderBreakpointsSettingItem","isHighestBp","done","tempEnd","editMode","onCancel","cancelEditMode","nextBpData","onEditMode","EditorHeaderBreakpointsSetting","clearEditMode","bpItemrRefs","bpItemRef","getBpItemRef","EditorHeaderBreakpoints","getTabValue","settingAnchor","EditorHeader","setRightMenuOpen","openMenu","changedState","onInspectorClickState","onInspectorClick","onPageZoomChange","EditorPreview","PreviewHeaderBreakpoints","getCurrentValue","lastBpData","devices","PreviewHeader","PageView","onScrollBoundary","EditorBoundary","layoutRef","addComponentRef","pageManagerRef","InputManager","iFrameCommunicator","toggleThemeManager","exportSiteData","toggleAddComponent","togglePageManager","loadSiteData","initFromHolder","onSiteDataUpdated","catch","err","onSetZoomScale","testWebsite","defaultSiteData","defaultAllComponentData","onComponentDataUpdated","togglePreview","setZoomLevel","zoomLevel","documentElement","setProperty","notifyBreakpointChange","newDevicePixelRatio","isPreview","toggleInspector","onResizeD","onResizeT","getLayoutItem","il","openLayout","closeLayout","getLivePageData","getLiveSiteData","blob","Blob","href","URL","createObjectURL","download","fileName","click","getSiteData","isProduction","dispose","borderClassess","onAddComponentClick","onThemeManagerClick","onPageManagerClick","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5056b462.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paint.b4611be4.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.4ffb5b5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-left.0a5b083d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-center.c06baa72.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-right.47dacf61.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-top.a4e81be5.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-middle.18bded08.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-bottom.b15149df.svg\";","module.exports = __webpack_public_path__ + \"static/media/chain.91ca2215.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlink.91af3919.svg\";","module.exports = __webpack_public_path__ + \"static/media/more.7e1c1c4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.910508a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/minimize.d1b14794.svg\";","module.exports = __webpack_public_path__ + \"static/media/maximize.c16a073e.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {Resizable} from \"re-resizable\";\r\nimport css from 'dom-css';\r\nimport {exist, getFromData, getSortedBreakPoints, setData} from \"./BreakPointManager\";\r\nimport debounce from 'lodash.debounce';\r\n// import {css, StyleSheet} from 'aphrodite'\r\n\r\nlet CalculateLayout = (griddatas, layoutType, parentSize, dir, compactType, scrollType, snap\r\n                       , breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    parentGriddata = parentGriddata || getDefaultChildgriddata(breakpointdata);\r\n\r\n    let dummy;\r\n    let childContainers = griddatas.map((griddata) => {\r\n        if (griddata.id === undefined)\r\n            console.error(\"direct child must have a id props\");\r\n\r\n        let result = {\r\n            griddata: griddata,\r\n        };\r\n\r\n        result.griddata.id = griddata.id;\r\n        result.isContainer = griddata.isContainer;\r\n        result.selected = griddata.selected;\r\n        result.resizable = griddata.resizable;\r\n        result.draggable = griddata.draggable;\r\n        result.dragging = griddata.dragging;\r\n\r\n        result.w = getPxFromPercent(\r\n            getFromData(result.griddata, \"w\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.h = getPxFromPercent(\r\n            getFromData(result.griddata, \"h\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.x = getPxFromPercent(\r\n            getFromData(result.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.y = getPxFromPercent(\r\n            getFromData(result.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.rotate = getFromData(result.griddata, \"rotate\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.absolute = getFromData(result.griddata, \"absolute\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.fix = getFromData(result.griddata, \"fix\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.zIndex = getFromData(result.griddata, \"zIndex\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        if (result.griddata.dragging) {\r\n            dummy = {};\r\n            dummy.griddata = cloneObject(result.griddata);\r\n            // dummy.griddata.dragging = false;\r\n            dummy.griddata.id = \"dummy\";\r\n            dummy.x = result.x;\r\n            dummy.y = result.y;\r\n            dummy.w = result.w;\r\n            dummy.h = result.h;\r\n            dummy.griddata.draggable = false;\r\n            dummy.griddata.resizable = false;\r\n            dummy.absolute = result.absolute;\r\n            dummy.fix = result.fix;\r\n            dummy.zIndex = result.zIndex;\r\n            dummy.dragging = result.dragging;\r\n\r\n            dummy.isDummy = true;\r\n        }\r\n\r\n        return result;\r\n    });\r\n\r\n    if (!childContainers)\r\n        childContainers = [];\r\n\r\n    if (dummy)\r\n        childContainers.push(dummy);\r\n\r\n    sortChilds(childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints);\r\n\r\n    let layouts = [];\r\n    let layoutContainers = [];\r\n\r\n    let maxHeight = scatter(childContainers, layoutContainers, layouts, layoutType, parentSize\r\n        , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n    return {childContainers: childContainers, layouts: layouts, maxHeight: maxHeight};\r\n};\r\n\r\nlet getDummy = (w, h) => {\r\n    return (\r\n        <Resizable\r\n            enable={false}\r\n            size={{\r\n                width: w,\r\n                height: h,\r\n            }}\r\n        >\r\n            <div style={{\r\n                backgroundColor: \"rgba(201, 76, 76, 0.3)\",\r\n                width: \"100%\",\r\n                height: \"100%\"\r\n            }}>\r\n            </div>\r\n        </Resizable>\r\n    );\r\n};\r\n\r\nlet scatter = (childContainers, layoutContainers, layouts, layoutType, parentSize\r\n               , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let notCompareChilds = [];\r\n    let maxHeight = 0;\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        if (childContainer.griddata.dragging) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (childContainer.absolute || childContainer.fix) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (layoutType === \"free\") {\r\n            maxHeight = scatterFree(childContainer, childContainers, layoutContainers\r\n                , parentSize, compactType, scrollType, snap, maxHeight, breakpointdata\r\n                , hasOwnBreakPoints, parentGriddata);\r\n        }\r\n\r\n        layoutContainers.push(childContainer);\r\n    }\r\n\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        layouts.push(childContainer.griddata);\r\n    }\r\n\r\n    notCompareChilds.forEach(childContainer => {\r\n        if (childContainer.absolute)\r\n            fixAbsoluteChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n        if (childContainer.fix)\r\n            fixFixChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n        setChildPosition(childContainer, {x:childContainer.x, y:childContainer.y}\r\n             , parentSize, breakpointdata, hasOwnBreakPoints);\r\n\r\n        layoutContainers.push(childContainer);\r\n        layouts.push(childContainer.griddata);\r\n    });\r\n\r\n    return maxHeight;\r\n};\r\n\r\nlet fixFixChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    if (left)\r\n        left += parentSize.scrollLeft;\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    if (top)\r\n        top += parentSize.scrollTop;\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    if (right)\r\n        right += (parentSize.x - parentSize.clientWidth - parentSize.scrollLeft);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n    if (bottom)\r\n        bottom += (parentSize.y - parentSize.clientHeight - parentSize.scrollTop);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet fixAbsoluteChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet scatterFree = (childContainer, childContainers, layoutContainers, parentSize, compactType, scrollType\r\n                   , snap, maxHeight, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let autoWidth =\r\n        getFromData(parentGriddata, \"autoWidth\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    if (!autoWidth) {\r\n        if (childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n        }\r\n    }\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.x > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.x -= snap.x;\r\n        }\r\n    }\r\n    if (compactType === \"vertical\")\r\n    {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.y > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.y -= snap.y;\r\n        }\r\n    }\r\n\r\n    childContainer.x = Math.max(0, childContainer.x);\r\n    childContainer.y = Math.max(0, childContainer.y);\r\n\r\n    let collide;\r\n    while (checkCollide(childContainer, layoutContainers)) {\r\n        collide = checkCollide(childContainer, layoutContainers);\r\n        if (compactType === \"horizontal\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.x + collide.w, \"x\");\r\n        }\r\n        if (compactType === \"vertical\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.y + collide.h, \"y\");\r\n        }\r\n        // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\r\n        if ((compactType === \"horizontal\") &&\r\n            childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n            childContainer.y++;\r\n        }\r\n    }\r\n\r\n    if (childContainer.y + childContainer.h > maxHeight)\r\n        maxHeight = childContainer.y + childContainer.h;\r\n\r\n    return maxHeight;\r\n};\r\n\r\nconst heightWidth = { x: \"w\", y: \"h\" };\r\nlet resolveCompactionCollision = (layout, item, moveToCoord, axis) => {\r\n    const sizeProp = heightWidth[axis];\r\n    item[axis] += 1;\r\n    const itemIndex = layout\r\n        .map(layoutItem => {\r\n            return layoutItem.griddata.id;\r\n        })\r\n        .indexOf(item.griddata.id);\r\n\r\n    // Go through each item we collide with.\r\n    for (let i = itemIndex + 1; i < layout.length; i++) {\r\n        const otherItem = layout[i];\r\n        // Ignore static items\r\n        if (otherItem.static || otherItem.griddata.dragging) continue;\r\n\r\n        // Optimization: we can break early if we know we're past this el\r\n        // We can do this b/c it's a sorted layout\r\n        if (otherItem.y > item.y + item.h) break;\r\n\r\n        if (collide(item, otherItem)) {\r\n            resolveCompactionCollision(\r\n                layout,\r\n                otherItem,\r\n                moveToCoord + item[sizeProp],\r\n                axis\r\n            );\r\n        }\r\n    }\r\n\r\n    item[axis] = moveToCoord;\r\n};\r\n\r\nlet bottom = (layoutContainers) => {\r\n    let max = 0,\r\n        bottomY;\r\n    for (let i = 0, len = layoutContainers.length; i < len; i++) {\r\n        bottomY = layoutContainers[i].y + layoutContainers[i].h;\r\n        if (bottomY > max) max = bottomY;\r\n    }\r\n    return max;\r\n};\r\n\r\nlet checkCollide = (childContainer, layoutContainers) => {\r\n    for (let i = 0; i < layoutContainers.length; i++) {\r\n        if (collide(childContainer, layoutContainers[i]))\r\n            return layoutContainers[i];\r\n    }\r\n    return false;\r\n};\r\n\r\nlet collide = (child1, child2) => {\r\n    if (child1.griddata.id === child2.griddata.id) return false; // same element\r\n    if (child1.x + child1.w <= child2.x) return false; // l1 is left of l2\r\n    if (child1.x >= child2.x + child2.w) return false; // l1 is right of l2\r\n    if (child1.y + child1.h <= child2.y) return false; // l1 is above l2\r\n    if (child1.y >= child2.y + child2.h) return false; // l1 is below l2\r\n    return true; // boxes overlap\r\n};\r\n\r\nlet sortChilds = (childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints) => {\r\n    childContainers.forEach(childContainer => {\r\n            childContainer.x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.x);\r\n            childContainer.y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.y);\r\n    });\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainers.sort((a, b) => {\r\n            if (a.x > b.x || (a.x === b.x && a.y > b.y)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    } else {\r\n        childContainers.sort((a, b) => {\r\n            if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    }\r\n};\r\n\r\nlet getPxFromPercent = (val, parentVal) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (getUnit(val) === \"%\") {\r\n            let percent = parseFloat(val.replace(\"%\", \"\")) / 100;\r\n            return parentVal * percent;\r\n        }\r\n        return val;\r\n    } else {\r\n        return val;\r\n    }\r\n};\r\n\r\nlet getUnit = (val) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (val.includes(\"%\"))\r\n            return \"%\";\r\n    }\r\n    return \"\";\r\n};\r\n\r\nlet hasDir = (dir, target) => {\r\n    return dir.toLowerCase().includes(target);\r\n};\r\n\r\nlet setChildSize = (childContainer, newSize, parentSize, breakpointdata, hasOwnBreakPoints\r\n                    , dir, delta) => {\r\n    setData(childContainer.griddata, \"w\", newSize.w, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.w\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"w\",\r\n            (getFromData(childContainer.griddata, \"w\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.w\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"h\", newSize.h, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.h\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"h\",\r\n            (getFromData(childContainer.griddata, \"h\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.h\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    if (delta) {\r\n        if (hasDir(dir, \"right\") || hasDir(dir, \"left\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            if (hasDir(dir, \"right\"))\r\n                x = x + delta.width / 2;\r\n            else\r\n                x = x - delta.width / 2;\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n        if (hasDir(dir, \"top\") || hasDir(dir, \"bottom\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n            if (hasDir(dir, \"bottom\"))\r\n                y = y + delta.height / 2;\r\n            else\r\n                y = y - delta.height / 2;\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n    }\r\n};\r\n\r\nlet setChildPosition = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints) => {\r\n    setData(childContainer.griddata, \"x\", newPosition.x, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.x\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"x\",\r\n            (getFromData(childContainer.griddata, \"x\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.x\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"y\", newPosition.y, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.y\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"y\",\r\n            (getFromData(childContainer.griddata, \"y\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.y\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n};\r\n\r\n/*let updateConstraints = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints\r\n                        , parentGridSystem) =>\r\n{\r\n    if (!parentGridSystem)\r\n        parentGridSystem = getDefaultGridSystem();\r\n};*/\r\n\r\n/*let getDefaultGridSystem = () => {\r\n    return {\r\n        xNumber: 1,\r\n        yNumber: 1,\r\n        widths: [100],\r\n        widthUnits: [\"%\"],\r\n        heights: [100],\r\n        heightUnits: [\"%\"]\r\n    }\r\n};*/\r\n\r\nlet fixGriddata = (griddata, breakpointdata) => {\r\n    if (!griddata)\r\n        return;\r\n\r\n    if (griddata.initialized) {\r\n        let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            let name = sortedBreakPoints[i].name;\r\n\r\n            if (!griddata[name])\r\n                continue;\r\n\r\n            if (!griddata[name].units)\r\n                griddata[name].units = {};\r\n\r\n            griddata[name].units.x = getUnit(griddata[name].x);\r\n            griddata[name].units.y = getUnit(griddata[name].y);\r\n            griddata[name].units.w = getUnit(griddata[name].w);\r\n            griddata[name].units.h = getUnit(griddata[name].h);\r\n        }\r\n    } else {\r\n        if (!griddata.units)\r\n            griddata.units = {};\r\n\r\n        griddata.units.x = getUnit(griddata.x);\r\n        griddata.units.y = getUnit(griddata.y);\r\n        griddata.units.w = getUnit(griddata.w);\r\n        griddata.units.h = getUnit(griddata.h);\r\n\r\n    }\r\n};\r\n\r\nlet initGriddata = (griddataProp, breakpointdata) => {\r\n    if (griddataProp && griddataProp.initialized)\r\n        return griddataProp;\r\n\r\n    if (!griddataProp)\r\n        griddataProp = {};\r\n\r\n    let clone = cloneObject(griddataProp);\r\n\r\n    for (let props in griddataProp) delete griddataProp[props];\r\n\r\n    let griddata = getDefaultChildgriddata(breakpointdata);\r\n    if (clone.bpData) {\r\n        for (let props in griddata.bpData) {\r\n            if (exist(props, breakpointdata)) {\r\n                    for(let props2 in clone.bpData) {\r\n                        griddata.bpData[props][props2] = cloneObject(clone.bpData[props2]);\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    for (let prop in clone) {\r\n        if (clone.hasOwnProperty(prop) && prop !== \"bpData\") {\r\n            griddata[prop] = clone[prop];\r\n        }\r\n    }\r\n\r\n    for(let k in griddata) griddataProp[k]=griddata[k];\r\n\r\n    return griddataProp;\r\n};\r\n\r\nlet getDefaultChildgriddata = (breakpointdata) => {\r\n    let sample = {\r\n        x: \"50%\",\r\n        y: \"50%\",\r\n        w: \"100%\",\r\n        h: \"100%\",\r\n        minW: undefined,\r\n        maxW: undefined,\r\n        minH: undefined,\r\n        maxH: undefined,\r\n        constraints: {\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined,\r\n        },\r\n        margin: {\r\n            all: undefined,\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined\r\n        },\r\n        units: {\r\n            x: \"%\",\r\n            y: \"%\",\r\n            w: \"%\",\r\n            h: \"%\",\r\n        },\r\n        scrollType: \"vertical\",\r\n        absolute: true,\r\n        fix: false,\r\n        autoHeight: false,\r\n        autoWidth: false,\r\n        overflowData: {\r\n            state: 'hide',\r\n            overflowY: 'scroll'\r\n        },\r\n    };\r\n    let griddata = {\r\n        initialized: true,\r\n        resizable: true,\r\n        draggable: true,\r\n        hasOwnBreakPoints: false,\r\n        isContainer: false,\r\n        autoDock: true,\r\n        bpData: {}\r\n    };\r\n    let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n    griddata.bpData[sortedBreakPoints[0].name] = cloneObject(sample);\r\n    return griddata;\r\n};\r\n\r\nlet cloneObject = (obj) => {\r\n    if (obj instanceof Array) {\r\n        let copy = [];\r\n        for (let i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = cloneObject(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n    if (obj instanceof Object) {\r\n        if (null == obj) return obj;\r\n        let copy = {};\r\n        for (let attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = cloneObject(obj[attr]);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nlet shallowEqual = (objA, objB) => {\r\n    if (objA === objB) {\r\n        return true;\r\n    }\r\n\r\n    if (typeof objA !== 'object' || objA === null ||\r\n        typeof objB !== 'object' || objB === null) {\r\n        return false;\r\n    }\r\n\r\n    let keysA = Object.keys(objA);\r\n    let keysB = Object.keys(objB);\r\n\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n\r\n    // Test for A's keys different from B.\r\n    for (let i = 0; i < keysA.length; i++) {\r\n        if (!objB.hasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nfunction throttleDebounce(fn, ms) {\r\n    let deTimer;\r\n    let dontCall;\r\n\r\n    return _ => {\r\n        let args = arguments;\r\n\r\n        if (!dontCall) {\r\n            dontCall = true;\r\n            fn.apply(this, args);\r\n            setTimeout(_ => {\r\n                dontCall = false;\r\n            }, ms);\r\n        }\r\n\r\n        clearTimeout(deTimer);\r\n        deTimer = setTimeout(_ => {\r\n            fn.apply(this, args);\r\n        }, ms);\r\n    };\r\n}\r\n\r\nfunction throttleDebounce2(fn, threshold) {\r\n    threshold = threshold || 250;\r\n    let last, deferTimer;\r\n\r\n    let db = debounce(fn);\r\n    return function() {\r\n        let now = +new Date, args = arguments;\r\n        if(!last || (last && now < last + threshold)) {\r\n            clearTimeout(deferTimer);\r\n            db.apply(this, args);\r\n            deferTimer = setTimeout(function() {\r\n                last = now;\r\n                fn.apply(this, args);\r\n            }, threshold);\r\n        } else {\r\n            last = now;\r\n            fn.apply(this, args);\r\n        }\r\n    }\r\n}\r\n\r\nlet getOverFlow = (griddata, parent, breakpointdata) => {\r\n    if (!griddata)\r\n        return {x:\"hidden\", y:\"hidden\"};\r\n    let parentSizeX;\r\n    if (parent)\r\n        parentSizeX = parent.getSize().x;\r\n\r\n    let scrollType;\r\n    if (parentSizeX) {\r\n        scrollType = getFromData(griddata, \"scrollType\", parentSizeX\r\n                , griddata? griddata.hasOwnBreakPoints: false, breakpointdata);\r\n    } else {\r\n        scrollType = getFromData(griddata, \"scrollType\", 0\r\n                , false, breakpointdata);\r\n    }\r\n    switch (scrollType) {\r\n        case \"hide\":\r\n            return {x:\"hidden\", y:\"hidden\"};\r\n        case \"show\":\r\n            return {x:\"visible\", y:\"visible\"};\r\n        case \"horizontal\":\r\n            return {x:\"overlay\", y:\"hidden\"};\r\n        case \"vertical\":\r\n            return {x:\"hidden\", y:\"overlay\"};\r\n        case \"both\":\r\n            return {x:\"overlay\", y:\"overlay\"};\r\n        default:\r\n            return {x:\"visible\", y:\"visible\"};\r\n    }\r\n};\r\n\r\nlet scrollbarWidth = false;\r\nlet getScrollbarWidth = () => {\r\n    if (scrollbarWidth !== false) return scrollbarWidth;\r\n    /* istanbul ignore else */\r\n    if (typeof document !== 'undefined') {\r\n        const div = document.createElement('div');\r\n        css(div, {\r\n            width: 100,\r\n            height: 100,\r\n            position: 'absolute',\r\n            top: -9999,\r\n            overflow: 'scroll',\r\n            MsOverflowStyle: 'scrollbar'\r\n        });\r\n        document.body.appendChild(div);\r\n        scrollbarWidth = (div.offsetWidth - div.clientWidth);\r\n        document.body.removeChild(div);\r\n    } else {\r\n        scrollbarWidth = 0;\r\n    }\r\n    return scrollbarWidth || 0;\r\n};\r\n\r\nexport let assignData = (griddata, newData) => {\r\n    if (!griddata)\r\n        griddata = {};\r\n    return Object.assign(griddata, newData || {})\r\n};\r\n\r\nexport function getOffsetLeft( elem )\r\n{\r\n    let offsetLeft = 0;\r\n    do {\r\n        let elemOffsetLeft = elem.offsetLeft;\r\n        if ( !isNaN( elemOffsetLeft ) )\r\n        {\r\n            offsetLeft += elemOffsetLeft;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetLeft;\r\n}\r\n\r\nexport function getOffsetTop( elem )\r\n{\r\n    let offsetTop = 0;\r\n    do {\r\n        let elemOffsetTop = elem.offsetTop;\r\n        if ( !isNaN( elemOffsetTop ) )\r\n        {\r\n            offsetTop += elemOffsetTop;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetTop;\r\n}\r\n\r\n\r\nexport function JSToCSS(JS){\r\n    let cssString = \"\";\r\n    for (let objectKey in JS) {\r\n        cssString += objectKey.replace(/([A-Z])/g, (g) => `-${g[0].toLowerCase()}`) + \": \" + JS[objectKey] + \"; \";\r\n    }\r\n    return cssString;\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n\r\n    styleNode.innerHTML = \"\";\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n};\r\n\r\nexport function appendStyle(style, styleId, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n    let styleNode = document.createElement('style');\r\n    styleNode.setAttribute(\"id\", styleId);\r\n    // styleNode.setAttribute(\"title\", styleId);\r\n\r\n    styleNode.type = 'text/css';\r\n\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n\r\n    document.getElementsByTagName('head')[0].appendChild(styleNode);\r\n};\r\n\r\n/*export function appendStyle(style, styleId, styleName){\r\n    return StyleSheet.create({\r\n        [styleId]: style\r\n    })[styleId];\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    return StyleSheet.create({\r\n        [styleName]: style\r\n    });\r\n};*/\r\n\r\nexport function getScrollParent(node) {\r\n    if (node == null) {\r\n        return null;\r\n    }\r\n\r\n    if (node.scrollHeight > node.clientHeight) {\r\n        return node;\r\n    } else {\r\n        return getScrollParent(node.parentNode);\r\n    }\r\n}\r\n\r\nexport function swapArrayElements(arr, indexA, indexB) {\r\n    let temp = arr[indexA];\r\n    arr[indexA] = arr[indexB];\r\n    arr[indexB] = temp;\r\n}\r\n\r\nexport {CalculateLayout, cloneObject, getPxFromPercent, shallowEqual\r\n        ,throttleDebounce, setChildSize, fixGriddata, setChildPosition\r\n        ,getDefaultChildgriddata, initGriddata, getOverFlow, getScrollbarWidth, getDummy}\r\n","import React from 'react';\r\nimport BreakPointManager from \"../BreakPointManager\";\r\n\r\nexport const EditorContext = React.createContext({});\r\n\r\nexport default class EditorContextProvider extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            update: this.update,\r\n            initContext: this.initContext,\r\n            zoomScale: 1,\r\n            editor: undefined,\r\n            setZoomScale: this.setZoomScale,\r\n            siteData: undefined,\r\n            setSiteData: this.setSiteData,\r\n            pageSize: 1006,\r\n            setPageSize: this.setPageSize,\r\n            setPageSizeWidth: this.setPageSizeWidth,\r\n            pageData: undefined,\r\n            setPageData: this.setPageData,\r\n            inspectorPinned: true,\r\n            setInspectorPinned: this.setInspectorPinned,\r\n            inspectorWidth: 260,\r\n            getInnerWith: this.getInnerWidth,\r\n            setInspectorWidth: this.setInspectorWidth,\r\n            devicePixelRatio: window.devicePixelRatio,\r\n            setDevicePixelRatio: this.setDevicePixelRatio,\r\n            allComponentData: undefined,\r\n            setAllComponentData: this.setAllComponentData,\r\n            rightMenus: {\r\n                addComponent: {\r\n                    state: false,\r\n                },\r\n                pageManager: {\r\n                    state: false,\r\n                },\r\n                themeManager: {\r\n                    state: false,\r\n                }\r\n            },\r\n            setRightMenus: this.setRightMenus,\r\n            toggleRightMenu: this.toggleRightMenu,\r\n            onNewBpAdded: this.onNewBpAdded,\r\n            setPreview: this.setPreview,\r\n            sendEditCommand: this.sendEditCommand,\r\n            sendPublishCommand: this.sendPublishCommand,\r\n            setProduction: this.setProduction,\r\n            preview: false,\r\n            production: false\r\n        };\r\n    }\r\n\r\n    setProduction = (callback) => {\r\n        this.setState({production:true, preview:true}, callback);\r\n    }\r\n\r\n    sendEditCommand = (callback) => {\r\n        this.state.editor.postMessage({\r\n            type: \"Holder\",\r\n            func: \"onEditMode\",\r\n            inputs: []\r\n        });\r\n        this.setPreview(false, callback);\r\n    }\r\n\r\n    sendPublishCommand = () => {\r\n        this.sendEditCommand(() => {\r\n            this.state.editor.postMessage({\r\n                type: \"Holder\",\r\n                func: \"onPublishClick\",\r\n                inputs: []\r\n            });\r\n        });\r\n    }\r\n\r\n    setPreview = (preview, callback) => {\r\n        let pageData = this.state.pageData;\r\n        this.setPageData(undefined, false, () => {\r\n            this.state.editor.idMan.clear();\r\n            this.setState({preview}, () => {\r\n                this.setPageData(pageData.props.pageId, false, callback);\r\n            });\r\n        });\r\n    }\r\n\r\n    update = (callback) => {\r\n        this.setState({reload: true}, callback);\r\n    };\r\n\r\n    initContext = (state, callback) => {\r\n        this.setState(state, callback);\r\n    };\r\n\r\n    getInnerWidth = () => {\r\n        return window.innerWidth - this.state.inspectorPinned ? this.state.inspectorWidth : 0;\r\n    };\r\n\r\n    setZoomScale = (zoomScale, callback) => {\r\n        this.setState({zoomScale}, callback);\r\n    };\r\n\r\n    setSiteData = (siteData, callback) => {\r\n        this.setState({siteData}, callback);\r\n    };\r\n\r\n    setPageData = (pageId, force, callback) => {\r\n        if (this.state.pageData && !force && this.state.pageData.props.pageId === pageId) {\r\n            return;\r\n        }\r\n\r\n        if (!pageId) {\r\n            this.setState({pageData: undefined}, callback);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.pageData) {\r\n            let pageData = this.state.siteData.allPages[pageId];\r\n\r\n            if (!pageData.breakpoints) {\r\n                pageData.breakpoints = BreakPointManager.getDefault();\r\n            }\r\n\r\n            this.state.editor.setBreakpoints(pageData.breakpoints);\r\n            this.setState({pageData}, callback);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.preview) {\r\n            this.state.editor.rootLayoutRef.current.onSelect(true, () => {\r\n                this.state.editor.idMan.clear();\r\n\r\n                this.state.setPageData(undefined, false , () => {\r\n                    let pageData = this.state.siteData.allPages[pageId];\r\n\r\n                    if (!pageData.breakpoints) {\r\n                        pageData.breakpoints = BreakPointManager.getDefault();\r\n                    }\r\n\r\n                    this.state.editor.setBreakpoints(pageData.breakpoints);\r\n                    this.setState({pageData}, callback);\r\n                });\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.state.editor.idMan.clear();\r\n\r\n            console.log(\"setPageData\", 62)\r\n            this.state.setPageData(undefined, false , () => {\r\n                let pageData = this.state.siteData.allPages[pageId];\r\n\r\n                if (!pageData.breakpoints) {\r\n                    pageData.breakpoints = BreakPointManager.getDefault();\r\n                }\r\n\r\n                console.log(\"setPageData\", 72)\r\n                this.state.editor.setBreakpoints(pageData.breakpoints);\r\n                this.setState({pageData}, callback);\r\n            });\r\n        }\r\n    };\r\n\r\n    onNewBpAdded = (newBpData, prevBpData) => {\r\n        if (!prevBpData){\r\n            this.update();\r\n            return;\r\n        }\r\n\r\n        console.log(\"newBpData\", newBpData.name, prevBpData.name)\r\n\r\n        let changeGriddata = (item, childData) => {\r\n            if (!item || !item.mounted)\r\n                return;\r\n\r\n            let bpData = childData.props.griddata.bpData;\r\n            bpData[newBpData.name] = bpData[prevBpData.name];\r\n            delete bpData[prevBpData.name];\r\n\r\n            Object.keys(item.getFromTempData(\"savedChildren\")).map(childId => {\r\n                let childData = item.getFromTempData(\"savedChildren\")[childId];\r\n                changeGriddata(\r\n                    item.allChildRefs[childId].current,\r\n                    childData\r\n                );\r\n            })\r\n        };\r\n\r\n        let pageChildData = {\r\n            tagName: this.state.editor.rootLayoutRef.current.props.tagName,\r\n            props: this.state.editor.rootLayoutRef.current.getClearProps({...this.state.editor.rootLayoutRef.current.props}),\r\n            zIndex: 0\r\n        };\r\n\r\n        changeGriddata(this.state.editor.rootLayoutRef.current, pageChildData);\r\n\r\n        this.update();\r\n    }\r\n\r\n    setInspectorPinned = (inspectorPinned, callback) => {\r\n        this.setState({inspectorPinned}, callback);\r\n    };\r\n\r\n    setInspectorWidth = (inspectorWidth, callback) => {\r\n        this.setState({inspectorWidth}, callback);\r\n    };\r\n\r\n    setDevicePixelRatio = (devicePixelRatio, callback) => {\r\n        this.setState({devicePixelRatio}, callback);\r\n    };\r\n\r\n    setAllComponentData = (allComponentData, callback) => {\r\n        this.setState({allComponentData}, callback);\r\n    };\r\n\r\n    toggleRightMenu = (menuName, state) => {\r\n        let {rightMenus} = this.state;\r\n\r\n        if (state === rightMenus[menuName].state)\r\n            return;\r\n\r\n        for(let props in rightMenus) {\r\n            if (rightMenus[props].state) {\r\n                rightMenus[props].state = false;\r\n                rightMenus[props].toggle(true);\r\n            }\r\n        }\r\n\r\n        rightMenus[menuName].state = rightMenus[menuName].toggle(false, state);\r\n\r\n        this.setState({rightMenus: {...rightMenus}});\r\n    };\r\n\r\n    setPageSizeWidth = (width) => {\r\n        this.state.editor.rootLayoutRef.current.setPageSizeWidth(width);\r\n        this.state.editor.breakpointmanager.setWindowWidth(width);\r\n        this.setState({pageSize: width});\r\n    };\r\n\r\n    setPageSize = (pageSize) => {\r\n        this.setState({pageSize});\r\n    };\r\n\r\n    setRightMenus = (rightMenus, callback) => {\r\n        this.setState({rightMenus}, callback);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </EditorContext.Provider>\r\n        )\r\n    }\r\n}\r\n","import {cloneObject, throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from \"lodash.merge\";\r\nimport {EditorContext} from \"./Editor/EditorContext\";\r\nimport {useContext} from \"react\";\r\n\r\nexport default class BreakPointManager {\r\n    constructor(breakpoints, editor, onBreakpointChange, onZoomLevelChange, onHeightChange, onResize) {\r\n        if (!breakpoints)\r\n            breakpoints = BreakPointManager.getDefault();\r\n\r\n        this.fixBreakpointRules(breakpoints);\r\n\r\n        // TODO test\r\n\r\n        this.breakpoints = breakpoints;\r\n        this.editor = editor;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        this.lastWidth = window.innerWidth;\r\n        this.onBreakpointChange = onBreakpointChange || (() => {});\r\n        this.onZoomLevelChange = onZoomLevelChange || (() => {});\r\n        this.onHeightChange = onHeightChange || (() => {});\r\n\r\n        window.addEventListener(\"resize\", onResize);\r\n        if (onBreakpointChange)\r\n            window.addEventListener(\"resize\", this.onWindowResize);\r\n        if (onZoomLevelChange)\r\n            window.addEventListener(\"resize\", this.onDevicePixelRatioChange);\r\n        if (onHeightChange)\r\n            window.addEventListener(\"resize\", this.onHeightResize);\r\n    }\r\n\r\n    fixBreakpointRules = (breakpoints) => {\r\n        breakpoints.forEach(bpData => {\r\n            if (!bpData.end)\r\n                bpData.end = 99999;\r\n        });\r\n    }\r\n\r\n    updateBreakpoint = (name, start, end) => {\r\n        let bp = this.breakpoints.find(b => b.name === name);\r\n        if (bp) {\r\n            bp.end = end;\r\n            let upperBP = this.getUpperBreakPoint(name);\r\n            if (upperBP) this.getUpperBreakPoint(name).start = end + 1;\r\n            return;\r\n        }\r\n\r\n        start++;\r\n        bp = {name, start, end};\r\n        let prevBp;\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bp.start === sortedBreakPoints[i].start + 1) {\r\n                bp.start++;\r\n            }\r\n            if (bp.start >= sortedBreakPoints[i].start) {\r\n                bp.end = sortedBreakPoints[i].end;\r\n                sortedBreakPoints[i].end = bp.start - 1;\r\n                prevBp = sortedBreakPoints[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.breakpoints.push(bp);\r\n\r\n        return {newBpData: bp, prevBpData: prevBp};\r\n    };\r\n\r\n    deleteBreakpoint = (name) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (name === sortedBreakPoints[i].name) {\r\n                let upper = sortedBreakPoints[i - 1];\r\n                upper.start = sortedBreakPoints[i].start;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let index = this.breakpoints.findIndex(bp => {\r\n            return bp.name === name;\r\n        });\r\n\r\n        this.breakpoints.splice(index, 1);\r\n    };\r\n\r\n    fromClone = (clone) => {\r\n        this.breakpoints = clone.breakpoints;\r\n        this.windowInnerWidth = clone.windowInnerWidth;\r\n        this.lastWidth = clone.lastWidth;\r\n        this.editor = clone.editorData;\r\n\r\n        return this;\r\n    };\r\n\r\n    copyDesign = (designDatas, sourceItem) => {\r\n        this.cloneDesignDatas = {\r\n            designDatas: cloneObject(designDatas),\r\n            sourceItem\r\n        };\r\n    };\r\n\r\n    getCopyDesign = () => {\r\n        return this.cloneDesignDatas;\r\n    };\r\n\r\n    pasteDesign = (item) => {\r\n        if (!this.getCopyDesign())\r\n            return;\r\n\r\n        this.getCopyDesign().designDatas.forEach((designData, index) => {\r\n            let design = designData.design;\r\n            if (!designData.justOneBp) {\r\n                let bpName = designData.bpName;\r\n                if (!item.props.griddata.bpData[bpName])\r\n                    item.props.griddata.bpData[bpName] = {};\r\n                item.props.griddata.bpData[bpName].design = cloneObject(design);\r\n            } else {\r\n                let currentBpName = item.props.breakpointmanager.current();\r\n                if (!item.props.griddata.bpData[currentBpName])\r\n                    item.props.griddata.bpData[currentBpName] = {};\r\n                item.props.griddata.bpData[currentBpName].design = cloneObject(design);\r\n            }\r\n        });\r\n    };\r\n\r\n    getWindowWidth = () => {\r\n        return this.lastWidth\r\n    };\r\n\r\n    getWindowHeight = () => {\r\n        return this.editor.rootLayoutRef.current.getSize(false).height;\r\n        // return window.innerHeight * 0.8;\r\n    };\r\n\r\n    setWindowWidth = (width) => {\r\n        this.lastWidth = width;\r\n    };\r\n\r\n    getBpData = (bpName) => {\r\n        return this.breakpoints.find(bp => {\r\n            return bp.name === bpName;\r\n        });\r\n    };\r\n\r\n    dispose() {\r\n        window.removeEventListener(\"resize\", this.onWindowResize);\r\n    }\r\n\r\n    getDevicePixelRatio = () => {\r\n        return window.devicePixelRatio;\r\n    };\r\n\r\n    onDevicePixelRatioChange = () => {\r\n        let changed = this.devicePixelRatio !== window.devicePixelRatio;\r\n\r\n        this.devicePixelRatio = window.devicePixelRatio;\r\n\r\n        if (changed) {\r\n            this.onZoomLevelChange(this.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onHeightResize = throttleDebounce((e) => {\r\n        if (this.lastHeight !== window.innerHeight) {\r\n            this.lastHeight = window.innerHeight;\r\n            this.onHeightChange(e);\r\n        }\r\n    }, 100);\r\n\r\n    onWindowResize = throttleDebounce(() => {\r\n        let newWidth = window.innerWidth -\r\n            this.editor.context.inspectorPinned ? this.editor.context.inspectorWidth : 0;\r\n\r\n        let result = this.checkBreakPointChange(newWidth);\r\n\r\n        this.setWindowWidth(newWidth);\r\n\r\n        if (result.changed) {\r\n            this.onBreakpointChange(newWidth, result.currentBreakpointName, this.getDevicePixelRatio());\r\n        }\r\n    }, 100);\r\n\r\n    checkBreakPointChange = (newWidth) => {\r\n        let lastBreakpointName = this.current(this.getWindowWidth());\r\n        let currentBreakpointName = this.current(newWidth);\r\n\r\n        return {\r\n            changed: (lastBreakpointName !== currentBreakpointName),\r\n            currentBreakpointName\r\n        }\r\n    };\r\n\r\n    current = (size) => {\r\n        if (!size)\r\n            size = this.getWindowWidth();\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (this.getSize(size) >= sortedBreakPoints[i].start)\r\n                return sortedBreakPoints[i].name;\r\n        }\r\n\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].name;\r\n    };\r\n\r\n    currentBpData = (size) => {\r\n        if (!size)\r\n            size = this.getWindowWidth();\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (this.getSize(size) >= sortedBreakPoints[i].start)\r\n                return sortedBreakPoints[i];\r\n        }\r\n\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1];\r\n    };\r\n\r\n    getUpperBreakPoint = (bpName) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bpName === sortedBreakPoints[i].name)\r\n                return sortedBreakPoints[i - 1] && sortedBreakPoints[i - 1];\r\n        }\r\n    };\r\n\r\n    setData = (dataSet, param, value, breakpointName) => {\r\n        let params = param.split('.');\r\n        let name = breakpointName ||\r\n            this.current(this.getSize());\r\n        if (!dataSet.bpData[name]) {\r\n            dataSet.bpData[name] = {};\r\n        }\r\n        if (params.length === 1) {\r\n            if (value !== undefined)\r\n                dataSet.bpData[name][params[0]] = value;\r\n            else\r\n                delete dataSet.bpData[name][params[0]];\r\n        } else {\r\n            if (dataSet.bpData[name][params[0]] === undefined)\r\n                dataSet.bpData[name][params[0]] = {};\r\n            let override = dataSet.bpData[name][params[0]];\r\n            for(let i = 1; i < params.length; i++) {\r\n                if (i === params.length - 1) { // Last index\r\n                    if (value !== undefined)\r\n                        override[params[i]] = value;\r\n                    else\r\n                        delete override[params[i]];\r\n                }\r\n                else\r\n                {\r\n                    if (override[params[i]] === undefined)\r\n                        override[params[i]] = {};\r\n                    override = override[params[i]];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getFromData = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n        else {\r\n            firstParamResult = this.findFirstUpperBreakPointParam(dataSet, params[0]\r\n                , this.getSize());\r\n        }\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    getHighestBpName = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[0].name;\r\n    };\r\n\r\n    getCompositeFromData = (dataSet, param) => {\r\n        let params = param.split('.');\r\n        let results = [];\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints(this.getWindowWidth());\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            let checkBreakpointName = sortedBreakPoints[i].name;\r\n\r\n            let firstParamResult;\r\n            if (dataSet.bpData[checkBreakpointName] &&\r\n                dataSet.bpData[checkBreakpointName][params[0]] !== undefined)\r\n                firstParamResult = dataSet.bpData[checkBreakpointName][params[0]];\r\n\r\n            if (firstParamResult === undefined)\r\n                continue;\r\n\r\n            if (params.length === 1) {\r\n                results.push(firstParamResult);\r\n            } else {\r\n                params.slice(1).forEach(p => {\r\n                    if (firstParamResult)\r\n                        firstParamResult = firstParamResult[p];\r\n                });\r\n\r\n                results.push(firstParamResult);\r\n            }\r\n        }\r\n\r\n        if (!(results[0] instanceof Object))\r\n            return results[0];\r\n\r\n        let composite = {};\r\n        for (let i = results.length - 1; i >= 0; i--) {\r\n            composite = merge(composite, results[i]);\r\n        }\r\n\r\n        return composite;\r\n    };\r\n\r\n    hasDataInBreakPoint = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    findFirstUpperBreakPointParam = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name] &&\r\n                    dataSet.bpData[sortedBreakPoints[i].name][param] !== undefined)\r\n                    return dataSet.bpData[sortedBreakPoints[i].name][param];\r\n            }\r\n        }\r\n    };\r\n\r\n    findFirstUpperBreakPointName = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name]/* && dataSet[sortedBreakPoints[i].name][param] !== undefined*/)\r\n                    return sortedBreakPoints[i].name;\r\n            }\r\n        }\r\n    };\r\n\r\n    getMinWidth = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].start;\r\n    };\r\n\r\n    getSortedBreakPoints = (minSize) => {\r\n        let breakpoints = this.breakpoints;\r\n        if (minSize) {\r\n            breakpoints = this.breakpoints.filter(bp => {\r\n                return bp.end >= minSize;\r\n            });\r\n        }\r\n        // console.log(\"breakpoints.length\", breakpoints.length, minSize)\r\n        return breakpoints.sort((a,b) => {\r\n            if (a.start > b.start) {\r\n                return -1;\r\n            } else if (a.start === b.start) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        });\r\n    };\r\n\r\n    exist = (name) => {\r\n        return this.breakpoints.find(b => {\r\n            return b.name === name;\r\n        });\r\n    };\r\n\r\n    static getDefault = () => {\r\n        return [\r\n            {\r\n                name: \"laptop\",\r\n                start: 1001,\r\n                end: 99999,\r\n                prefer: 1006\r\n            },\r\n            {\r\n                name: \"tablet\",\r\n                start: 751,\r\n                end: 1000,\r\n                prefer: 768\r\n            },\r\n            {\r\n                name: \"mobile\",\r\n                start: 320,\r\n                end: 750,\r\n                prefer: 360\r\n            },\r\n        ]\r\n    };\r\n\r\n    getSize = (size) => {\r\n        return size || this.getWindowWidth();\r\n    };\r\n};\r\n\r\nexport let setData = (dataSet, param, value, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    breakPointManager.setData(dataSet, param, value, breakpointName);\r\n};\r\n\r\nexport let getFromData = (dataSet, param, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getFromData(dataSet, param, breakpointName);\r\n};\r\n\r\nexport let getCompositeFromData = (dataSet, param, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getCompositeFromData(dataSet, param);\r\n};\r\n\r\nexport let getSortedBreakPoints = (breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.getSortedBreakPoints();\r\n};\r\n\r\nexport let exist = (name, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.exist(name);\r\n};\r\n","import {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\n\r\nexport default class DragDropManager {\r\n    setDragging = (item) => {\r\n        this.draggingItem = item;\r\n    };\r\n\r\n    getDragging = () => {\r\n        return this.draggingItem;\r\n    };\r\n\r\n    isDraggingItemFixed = () => {\r\n        if (!this.draggingItem)\r\n            return false;\r\n        return this.draggingItem.state.portalNodeId === \"page_fixed_holder\";\r\n    };\r\n\r\n    // return true if dropping on another parent\r\n    setDraggingStop = () => {\r\n        if (this.draggingItem && this.mouseOver &&\r\n            this.draggingItem.props.parent !== this.mouseOver &&\r\n            !this.mouseOver.getParentsId().includes(this.draggingItem.props.id) &&\r\n            !this.isDraggingItemFixed())\r\n        {\r\n            this.mouseOver.prepareRects();\r\n            this.dropItem(this.draggingItem, this.draggingItem.props.parent, this.mouseOver);\r\n\r\n            this.draggingItem = undefined;\r\n            return true;\r\n        }\r\n\r\n        this.draggingItem = undefined;\r\n        return false;\r\n    };\r\n\r\n    dropItem = (item, parent, newParent, callback, fromUndoRedo, undoPower) => {\r\n        item.toggleHelpLines();\r\n        parent.onChildLeave(item);\r\n\r\n        let drop = () => {\r\n            newParent.onChildDrop(item, undefined, undefined, (newItem) => {\r\n                if (callback)\r\n                    callback(newItem);\r\n\r\n                if (!fromUndoRedo) {\r\n                    let itemId = item.props.id;\r\n                    let firstRelativeX =\r\n                        (item.dragData? item.dragData.firstPos.left : newItem.getSize(false).left)\r\n                        - parent.getSize(false).left;\r\n                    let firstRelativeY =\r\n                        (item.dragData? item.dragData.firstPos.top : newItem.getSize(false).top)\r\n                        - parent.getSize(false).top;\r\n                    let parentRect = cloneObject(parent.getSize(false));\r\n                    let lastRelativeX = newItem.getSize(false).left - newParent.getSize(false).left;\r\n                    let lastRelativeY = newItem.getSize(false).top - newParent.getSize(false).top;\r\n                    let newParentRect = cloneObject(newParent.getSize(false));\r\n                    let width = newItem.getSize(false).width;\r\n                    let height = newItem.getSize(false).height;\r\n\r\n                    let parentId = parent.props.id;\r\n                    let newParentId = newParent.props.id;\r\n                    item.props.undoredo.add((idMan) => {\r\n                        idMan.getItem(itemId).onSelect(true);\r\n                        this.setMouseOver(idMan.getItem(newParentId));\r\n                        this.dropItem(idMan.getItem(itemId), idMan.getItem(parentId), idMan.getItem(newParentId),\r\n                            (newItem) => {\r\n                                setTimeout(() => {\r\n                                    idMan.getItem(itemId).setPosition(false, lastRelativeX, lastRelativeY, undefined, undefined,\r\n                                        width, height, newParentRect, true);\r\n                                }, 0);\r\n                            }, true);\r\n                    }, (idMan) => {\r\n                        idMan.getItem(itemId).onSelect(true);\r\n                        this.setMouseOver(idMan.getItem(parentId));\r\n                        this.dropItem(idMan.getItem(itemId), idMan.getItem(newParentId), idMan.getItem(parentId),\r\n                            (newItem) => {\r\n                                setTimeout(() => {\r\n                                    idMan.getItem(itemId).setPosition(false, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                                        width, height, parentRect, true);\r\n                                }, 0);\r\n                            }, true);\r\n                    }, undoPower);\r\n                }\r\n            });\r\n        };\r\n        if (item.props.dragdrop.mouseOver === newParent &&\r\n            item.props.gridLine.hasGridLine(newParent.props.id)) {\r\n            drop();\r\n        } else {\r\n            item.props.dragdrop.setMouseOver(newParent, undefined, drop);\r\n        }\r\n    };\r\n\r\n    removeMouseOver = () => {\r\n        delete this.mouseOver;\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.isDraggingItemFixed())\r\n            return;\r\n\r\n        if (this.mouseOver) {\r\n            if (!this.mouseOver.getFromTempData(\"selected\")) {\r\n                if (this.mouseOver !== item)\r\n                    this.mouseOver.toggleGridLines(false);\r\n            }\r\n        }\r\n\r\n        this.mouseOver = item;\r\n\r\n        if(this.draggingItem)\r\n            this.draggingItem.toggleHelpLines();\r\n\r\n        item.toggleGridLines(true, () => {\r\n            if(this.draggingItem)\r\n                this.draggingItem.toggleHelpLines(item);\r\n            if (callback)\r\n                callback(this.draggingItem, this.mouseOver);\r\n        }, \"B\");\r\n    };\r\n\r\n    setMouseOverForNonDragging = (item) => {\r\n        this.mouseOverNonDragging = item;\r\n    };\r\n\r\n    getMouseOverForNonDragging = () => {\r\n        return this.mouseOverNonDragging;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport {shallowEqual} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerChildren extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(JSON.stringify(this.allChildIndex),\r\n                JSON.stringify(Object.values(nextProps.allChildren).map(c => {\r\n                    return {\r\n                        z: c.zIndex,\r\n                        i: c.child.props.id\r\n                    }\r\n                })))\r\n        )\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => {\r\n            return {\r\n                z: c.zIndex,\r\n                i: c.child.props.id\r\n            }\r\n        });\r\n    };\r\n\r\n    getSorted = (children) => {\r\n        return children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex)\r\n                return 1;\r\n            if (a.zIndex < b.zIndex)\r\n                return -1;\r\n\r\n            return 0;\r\n        })\r\n    };\r\n\r\n    getChildren = (allChildren, agl) => {\r\n        if (this.props.getChildrenOverride)\r\n            return this.props.getChildrenOverride(this.getSorted(Object.values(allChildren)), agl);\r\n\r\n        return this.getSorted(Object.values(allChildren)).map((child) => {\r\n            return child.child;\r\n        })\r\n    };\r\n\r\n    render () {\r\n        this.saveState();\r\n        let {allChildren, agl} = this.props;\r\n        return (\r\n            this.getChildren(allChildren, agl)\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorBreadcrumbs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div\r\n                className=\"InspectorOptionRoot\"\r\n            >\r\n                <div\r\n                    className=\"InspectorBreadcrumbsParentsRoot\"\r\n                >\r\n                        {\r\n                            item.getParentsId().slice(0, 2).reverse().map(parentId => {\r\n                                let parent = item.props.idMan.getItem(parentId);\r\n                                return (\r\n                                    <ButtonBase\r\n                                        className={\"InspectorBreadcrumbsParentsButton\"}\r\n                                        onClick={(e) => {\r\n                                            parent.onSelect(true);\r\n                                        }}\r\n                                        key={parent.props.id}\r\n                                    >\r\n                                        {\r\n                                            parent.props.tagName + \" >\"\r\n                                        }\r\n                                    </ButtonBase>\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n\r\n                <span\r\n                    className=\"InspectorBreadcrumbsTagName\"\r\n                >\r\n                    {item.props.tagName}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class IconButton extends React.Component {\r\n    render () {\r\n        return (\r\n            <ButtonBase\r\n                aria-label={this.props[\"aria-label\"] || \"aria-label\"}\r\n                onClick={this.props.onClick}\r\n                style={{...{\r\n                    marginLeft: 4,\r\n                    borderRadius: 4,\r\n                    boxSizing: \"border-box\"\r\n                }, ...this.props.buttonBaseStyle}}\r\n                className={this.props.className}\r\n                disabled={this.props.disabled}\r\n            >\r\n                <div style={{...{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    padding: 6,\r\n                }, ...this.props.imageContainerStyle}}>\r\n                    {\r\n                        this.props.icon\r\n                    }\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {alignItem} from \"../../AwesomwGridLayoutHelper\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class InspectorAligns extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                name: \"Align to left\",\r\n                horizontal: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-left.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to center\",\r\n                horizontal: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-center.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to right\",\r\n                horizontal: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-right.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to top\",\r\n                vertical: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-top.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to middle\",\r\n                vertical: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-middle.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to bottom\",\r\n                vertical: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-bottom.svg')}\r\n                />\r\n            },\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div className=\"InspectorOptionRoot\">\r\n                <span className=\"InspectorOptionTextTitle\">\r\n                    Alignment\r\n                </span>\r\n                <div\r\n                    className=\"InspectorAlignsRoot\"\r\n                >\r\n                    {\r\n                        this.getButtonsData().map((data, i) => {\r\n                            return (\r\n                                <IconButton\r\n                                    key={data.name}\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 0,\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 6\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        alignItem(item, data.vertical, data.horizontal)\r\n                                    }}\r\n                                    className=\"InspectorAlignsButtons\"\r\n                                >\r\n                                    {data.img}\r\n                                </IconButton>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from 'lodash.merge';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport Stack from \"./Components/Stack/Stack\";\r\nimport DynamicComponents from \"./Dynamic/DynamicComponents\";\r\nimport {getCompositeFromData, getFromData, setData} from \"./BreakPointManager\";\r\nimport ContextMenu from \"./Test/ContextMenu\";\r\nimport chroma from \"chroma-js\";\r\n\r\nlet deepEqual = require('fast-deep-equal/es6');\r\n\r\nexport function stretch(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let saveStyle = cloneObject(item.getFromData(\"style\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            stretch(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).setStyle(saveStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (item.hasOverride(\"stretch\")) {\r\n        item.callOverride(\"stretch\", item);\r\n        return;\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let beStretch = false;\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (!isStretch(item))\r\n        beStretch = true;\r\n\r\n    item.setDocks(beStretch, beStretch, false, beStretch, item.getFromTempData(\"autoDock\"), undefined, true);\r\n\r\n    gridItemStyle.alignSelf = beStretch? \"start\": \"start\";\r\n    gridItemStyle.justifySelf = beStretch? \"stretch\": \"center\";\r\n    gridItemStyle.marginTop = \"0px\";\r\n    gridItemStyle.marginLeft = \"0px\";\r\n    gridItemStyle.marginRight = \"0px\";\r\n    gridItemStyle.marginBottom = \"0px\";\r\n    item.setStyleParam(\"width\", \"auto\");\r\n    item.setStyleParam(\"height\", \"100%\");\r\n    item.setStyleParam(\"minHeight\", \"unset\");\r\n\r\n    if (!beStretch) {\r\n        let parentRect = item.props.parent.getSize();\r\n        gridItemStyle.marginTop = `${(parentRect.height - 0.8 * parentRect.height) / 2}px`;\r\n\r\n        item.setStyleParam(\"width\", \"80%\");\r\n        item.setStyleParam(\"height\", \"auto\");\r\n        item.setStyleParam(\"minHeight\", `${0.8 * parentRect.height}px`);\r\n    }\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function isStretch(item, log) {\r\n    if (item.hasOverride(\"isStretch\")) {\r\n        return item.callOverride(\"isStretch\", item, log);\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    return !(gridItemStyle.alignSelf !== \"start\" || gridItemStyle.justifySelf !== \"stretch\" ||\r\n        gridItemStyle.marginTop !== \"0px\" || gridItemStyle.marginLeft !== \"0px\" ||\r\n        gridItemStyle.marginRight !== \"0px\" || gridItemStyle.marginBottom !== \"0px\");\r\n}\r\n\r\nexport function allowStretch(item) {\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    if (item.props.as === \"section\" || item.props.as === \"header\" || item.props.as === \"footer\")\r\n        return false;\r\n\r\n    return !item.props.disableStretch;\r\n}\r\n\r\nexport function alignItem(item, vertical, horizontal, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            alignItem(idMan.getItem(itemId), vertical, horizontal, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (vertical) {\r\n        gridItemStyle.alignSelf = vertical;\r\n        gridItemStyle.marginTop = \"0px\";\r\n        gridItemStyle.marginBottom = \"0px\";\r\n    }\r\n    if (horizontal) {\r\n        gridItemStyle.justifySelf = horizontal;\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n    }\r\n\r\n    let baseDocks = item.getBaseDocks();\r\n    item.setDocks(\r\n        baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n        item.getFromTempData(\"autoDock\"), undefined, true\r\n    );\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function setScrollBehaviour(item, behaviour, pageAgl, fromUndoRedo, {offsetTop} = {}) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let pageId = pageAgl.props.id;\r\n        let oldBehaviour = item.getFromData(\"isFixed\")? \"fixed\": item.getFromData(\"scrollBehaviour\") || \"none\";\r\n        let oldOffsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        item.props.undoredo.add((idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), behaviour, idMan.getItem(pageId), true, {offsetTop});\r\n        }, (idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), oldBehaviour, idMan.getItem(pageId), true,\r\n                {offsetTop: oldOffsetTop});\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let oldIsFixed = item.getFromTempData(\"isFixed\");\r\n\r\n    let lastSectionId = item.getFromTempData(\"lastSectionId\");\r\n    if (oldIsFixed && behaviour !== \"fixed\" && lastSectionId) {\r\n        item.props.parent.onChildLeave(item);\r\n        let itemRect = item.getSize(false);\r\n        let sectionParent = item.props.viewRef.current\r\n            .props.aglComponent.getSectionOfPoint(itemRect.left, itemRect.top);\r\n\r\n        sectionParent.onSelect(true, undefined, undefined, undefined, true);\r\n        sectionParent.prepareRects();\r\n        sectionParent.onChildDrop(item, undefined, false, (newItem) => {\r\n            newItem.setState({portalNodeId: undefined});\r\n            window.requestAnimationFrame(() => {\r\n                newItem.onSelect(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    item.setTempData(\"isFixed\", behaviour === \"fixed\");\r\n    item.setDataInBreakpoint(\"scrollBehaviour\", behaviour);\r\n    item.setDataInBreakpoint(\"scrollStickyOffsetTop\", offsetTop);\r\n\r\n    switch (behaviour) {\r\n        case \"none\":\r\n            item.setStyleParam(\"position\", undefined);\r\n            item.setStyleParam(\"top\", undefined);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"sticky\":\r\n            item.setStyleParam(\"position\", \"sticky\");\r\n            item.setStyleParam(\"top\", offsetTop || 0);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"fixed\":\r\n            if (!oldIsFixed) {\r\n                addFixedChildToRoot(item, pageAgl);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\nfunction addFixedChildToRoot(item, pageAgl) {\r\n    let oldParentRect = item.props.parent.getSize(false);\r\n    item.toggleHelpLines();\r\n    item.setTempData(\"lastSectionId\", item.props.parent.props.id);\r\n    item.props.parent.onChildLeave(item);\r\n    pageAgl.onSelect(true, undefined, undefined, undefined, true);\r\n    let pageRect = pageAgl.prepareRects();\r\n    let itemRect = item.getSize(false);\r\n\r\n    pageAgl.onChildDrop(item, undefined, true, (newItem) => {\r\n        window.requestAnimationFrame(() => {\r\n            newItem.onSelect(true);\r\n        });\r\n    });\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n    gridItemStyle.gridArea = \"1/1/2/2\";\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n\r\n    let style = item.getCompositeFromData(\"style\");\r\n\r\n    let newWidth = itemRect.width *  oldParentRect.width / pageRect.width;\r\n    item.setStyleParam(\"width\", getStyleValueFromPx(newWidth, oldParentRect.width,\r\n        getUnitFromStyleValue(style.width), item));\r\n    item.setStyleParam(\"height\", getStyleValueFromPx(itemRect.height, oldParentRect.height,\r\n        getUnitFromStyleValue(style.height), item));\r\n    item.setStyleParam(\"position\", undefined);\r\n    item.setStyleParam(\"top\", undefined);\r\n    item.setStyleParam(\"pointerEvents\", \"auto\");\r\n}\r\n\r\nexport function isFixed(item) {\r\n    return item.getFromTempData(\"isFixed\");\r\n}\r\n\r\nexport function hideInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", \"none !important\");\r\n    item.props.viewRef.current.props.aglComponent.updateTemplates();\r\n    item.props.select.onScrollItem();\r\n    item.props.editor.updateLayout();\r\n}\r\n\r\nexport function isHideInBreakPoint(item, fromUndoRedo) {\r\n    return item.getCompositeFromData(\"style\").display === \"none !important\";\r\n}\r\n\r\nexport function showInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", undefined);\r\n    let newStyle = item.getFromData(\"style\");\r\n    if (newStyle && Object.keys(newStyle).length === 0) {\r\n        item.setDataInBreakpoint(\"style\", undefined);\r\n    }\r\n    item.props.viewRef.current.props.aglComponent.updateTemplates();\r\n    item.props.editor.updateLayout();\r\n}\r\n\r\nexport function hasBreakpointDesign(fromName, item) {\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n    return !(fromData === undefined);\r\n}\r\n\r\nexport function pasteFromBreakpointDesign(item, fromName, toName, fromUndoRedo) {\r\n    let fromData = item.props.griddata.bpData[fromName].design;\r\n    if (fromData === undefined)\r\n        return;\r\n\r\n    if (!toName)\r\n        toName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[toName])\r\n        item.props.griddata.bpData[toName] = {};\r\n\r\n    let currentData = item.props.griddata.bpData[toName].design;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(currentData);\r\n        item.props.undoredo.add((idMan) => {\r\n            pasteFromBreakpointDesign(idMan.getItem(itemId), fromName, toName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[toName].design = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    if (!currentData)\r\n        currentData = {};\r\n    merge(currentData, fromData);\r\n    item.props.griddata.bpData[toName].design = currentData;\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function deepAssign(fromData, currentData) {\r\n    Object.keys(fromData).map(key => {\r\n        let currentValue = currentData[key];\r\n        let fromValue = fromData[key];\r\n        if (currentValue === undefined) {\r\n            currentData[key] = cloneObject(fromValue);\r\n        } else {\r\n            if (fromValue instanceof Object) {\r\n                if (!currentValue)\r\n                    currentData[key] = {};\r\n                deepAssign(fromValue, currentValue)\r\n            } else {\r\n                currentData[key] = cloneObject(fromValue);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function removeOverrides(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (fromName === \"laptop\")\r\n        return;\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(item.props.griddata.bpData[fromName] || {});\r\n        item.props.undoredo.add((idMan) => {\r\n            removeOverrides(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[fromName] = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.griddata.bpData[fromName] = {};\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function applyOnAllBreakPoint(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n\r\n    let undoData = {};\r\n\r\n    let sortedBreakPoints = item.props.breakpointmanager.getSortedBreakPoints();\r\n    for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n        let toName = sortedBreakPoints[i].name;\r\n        if (fromData !== toName) {\r\n            undoData[toName] = cloneObject(item.props.griddata.bpData[toName] || {});\r\n            item.props.griddata.bpData[toName] = cloneObject(fromData);\r\n        }\r\n    }\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            applyOnAllBreakPoint(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            Object.keys(undoData).forEach(key => {\r\n                idMan.getItem(itemId).props.griddata.bpData[key] = undoData[key];\r\n            });\r\n\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function copyDesign(item, fromAll) {\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n\r\n    let designDatas = [];\r\n    if (!fromAll && item.props.griddata.bpData[currentBpName])\r\n        designDatas[0] = {\r\n            bpName: currentBpName,\r\n            design: item.props.griddata.bpData[currentBpName].design,\r\n            justOneBp: true\r\n        };\r\n    else if (fromAll) {\r\n        Object.keys(item.props.griddata.bpData).forEach((key, index) => {\r\n            designDatas[index] = {\r\n                bpName: key,\r\n                design: item.props.griddata.bpData[key].design\r\n            };\r\n        });\r\n    }\r\n\r\n    console.log(\"copyDesign\", designDatas);\r\n    if (designDatas.length > 0)\r\n        item.props.breakpointmanager.copyDesign(designDatas, item);\r\n}\r\n\r\nexport function pasteDesign(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let copyDesign = cloneObject(item.props.breakpointmanager.getCopyDesign().designDatas);\r\n        let allOldDesign = cloneObject(Object.keys(item.props.griddata.bpData).map(key => {\r\n            return {\r\n                bpName: key,\r\n                design: item.props.griddata.bpData[key].design\r\n            }\r\n        }));\r\n        item.props.undoredo.add((idMan) => {\r\n            let item = idMan.getItem(itemId);\r\n            console.log(111);\r\n            let temp = cloneObject(item.props.breakpointmanager.getCopyDesign().designDatas);\r\n            let sourceItemTemp = item.props.breakpointmanager.getCopyDesign().sourceItem;\r\n            console.log(222);\r\n            item.props.breakpointmanager.cloneDesignDatas = {\r\n                designDatas: copyDesign,\r\n                sourceItem: item\r\n            };\r\n            item.props.breakpointmanager.pasteDesign(item);\r\n            console.log(333);\r\n            item.props.breakpointmanager.cloneDesignDatas = {\r\n                designDatas: temp,\r\n                sourceItem: sourceItemTemp\r\n            };\r\n\r\n            item.onBreakpointChange(\r\n                item.props.breakpointmanager.getWindowWidth(),\r\n                item.props.breakpointmanager.current());\r\n\r\n            item.props.aglComponent.updateDesign &&\r\n                item.props.aglComponent.updateDesign(item.getCompositeFromData(\"design\"));\r\n\r\n            item.updateLayout();\r\n            console.log(444);\r\n        }, (idMan) => {\r\n            let item = idMan.getItem(itemId);\r\n            allOldDesign.forEach(designData => {\r\n                item.props.griddata.bpData[designData.bpName].design = cloneObject(designData.design);\r\n            });\r\n\r\n            item.onBreakpointChange(\r\n                item.props.breakpointmanager.getWindowWidth(),\r\n                item.props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.breakpointmanager.pasteDesign(item);\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n\r\n    item.props.aglComponent.updateDesign &&\r\n        item.props.aglComponent.updateDesign(item.getCompositeFromData(\"design\"));\r\n\r\n    item.updateLayout();\r\n}\r\n\r\nexport function isGroupSelected(item) {\r\n    return item.props.select.group;\r\n}\r\n\r\nexport function getSectionId(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent.props.id;\r\n\r\n    return uuidv4();\r\n}\r\n\r\nexport function getSectionParent(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent;\r\n}\r\n\r\nexport function createStack(items, fromUndoRedo) {\r\n    if (!items || items.length < 2)\r\n        return;\r\n\r\n    let itemsParent = getSectionParent(items[0]);\r\n\r\n    if (!itemsParent)\r\n        return;\r\n\r\n    let top = 99999999;\r\n    let left = 99999999;\r\n    let rightFromLeft = 0;\r\n    let allSpacerData = [];\r\n    let lastBottom;\r\n\r\n    items.sort((a,b) => {\r\n        if (a && b){\r\n            let topA = a.getSize(false).top;\r\n            let topB = b.getSize(false).top;\r\n            if (topA < topB) {\r\n                return -1;\r\n            } else if (topA === topB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    items.forEach((item) => {\r\n        let rect = item.getSize(false);\r\n        top = Math.min(rect.top, top);\r\n        left = Math.min(rect.left, left);\r\n        rightFromLeft = Math.max(rect.left + rect.width, rightFromLeft);\r\n\r\n        if (lastBottom) {\r\n            allSpacerData.push({\r\n                height: Math.max(0, rect.top - lastBottom)\r\n            });\r\n        }\r\n\r\n        lastBottom = rect.top + rect.height;\r\n    });\r\n\r\n    let stack;\r\n    let stackNode =\r\n        <Stack\r\n            style={{\r\n                width: `${rightFromLeft - left}px`,\r\n            }}\r\n            lateMountedComplete={(_stack) => {\r\n                stack = _stack;\r\n            }}\r\n            allSpacerData={allSpacerData}\r\n            document={items[0].props.document}\r\n        />;\r\n\r\n    let parentRect = itemsParent.prepareRects();\r\n    itemsParent.addChild(stackNode, undefined, undefined, undefined, (agl) => {\r\n        if (!fromUndoRedo) {\r\n            let stackId = agl.props.id;\r\n            let itemIds = items.map(item => {\r\n                return item.props.id;\r\n            });\r\n            agl.props.undoredo.add((idMan) => {\r\n                let newItems = itemIds.map(id => {\r\n                    return idMan.getItem(id);\r\n                });\r\n                newItems.forEach(item => {\r\n                    item.onSelect(true);\r\n                });\r\n                createStack(newItems, true);\r\n            }, (idMan) => {\r\n                removeStackFromAGL(idMan.getItem(stackId), undefined, true);\r\n            });\r\n        }\r\n\r\n        agl.onSelect(true);\r\n        let {gridItemStyle} =\r\n            agl.calculateGridItem(left - parentRect.left, top - parentRect.top,\r\n                itemsParent, undefined, undefined, itemsParent.getSize(false));\r\n        agl.setGridItemStyle(gridItemStyle);\r\n        agl.prepareRects();\r\n        // agl.prepareRects(true);\r\n        setTimeout(() => {\r\n            items = items.filter(item => {\r\n                return item.props.id !== agl.props.id;\r\n            });\r\n\r\n            let addToStack = (items) => {\r\n                let item = items.shift();\r\n                if (!item)\r\n                    return;\r\n\r\n                item.props.parent.onChildLeave(item);\r\n                agl.onChildDrop(item, undefined, undefined, () => {\r\n                    addToStack(items);\r\n                });\r\n            };\r\n            addToStack(items);\r\n            setTimeout(() => {\r\n                stack.setOrder();\r\n                setTimeout(() => {\r\n                    let width = agl.getSize(false, true).width;\r\n                    let parentWidth = agl.props.parent.getSize(false).width;\r\n                    agl.setProps(\"width\", `${width / parentWidth * 100}%`);\r\n                    agl.onSelect(true);\r\n                }, 0);\r\n            }, 0);\r\n        }, 0);\r\n    });\r\n}\r\n\r\nexport function removeStack(stack, childIds, fromUndoRedo) {\r\n    removeStackFromAGL (stack.aglRef.current, childIds, fromUndoRedo);\r\n}\r\n\r\nexport function removeStackFromAGL(stackAgl, childIds, fromUndoRedo) {\r\n    stackAgl.removing = true;\r\n    if (!stackAgl || !stackAgl.props.isStack)\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let stackId = stackAgl.props.id;\r\n        stackAgl.props.undoredo.add((idMan) => {\r\n            removeStackFromAGL(idMan.getItem(stackId), childIds, true);\r\n        }, (idMan) => {\r\n            let newItems = childIds.map(id => {\r\n                return idMan.getItem(id);\r\n            });\r\n            createStack(newItems, true);\r\n        });\r\n    }\r\n\r\n    let newParent = stackAgl.props.parent;\r\n    stackAgl.clearItem();\r\n\r\n    let sorted = Object.values(stackAgl.allChildRefs).sort((a,b) => {\r\n        if (a && a.current && b && b.current){\r\n            let relativeYA = a.current.getFromData(\"relativeY\");\r\n            let relativeYB = b.current.getFromData(\"relativeY\");\r\n            if (relativeYA < relativeYB) {\r\n                return 1;\r\n            } else if (relativeYA === relativeYB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    newParent.onSelect(true);\r\n    newParent.prepareRects();\r\n    // newParent.prepareRects(true);\r\n    let removeChilds = (sorted) => {\r\n        let item = sorted.shift();\r\n\r\n        if (!item) {\r\n            setTimeout(() => {\r\n                newParent.onChildLeave(stackAgl);\r\n            }, 0);\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            if (item && item.current) {\r\n                item.current.props.parent.onChildLeave(item.current);\r\n                newParent.onChildDrop(item.current);\r\n            }\r\n            removeChilds(sorted, newParent);\r\n        }, 0);\r\n    };\r\n\r\n    removeChilds(sorted);\r\n    /*sorted.forEach(item => {\r\n        if (item && item.current) {\r\n            console.log(\"onChildDrop\", item.current.props.id);\r\n            item.current.props.parent.onChildLeave(item.current);\r\n            newParent.onChildDrop(item.current);\r\n        }\r\n    });*/\r\n}\r\n\r\nexport function createItem(parent, childData, fromUndoRedo, gridItemStyle, style, onChildMounted) {\r\n    childData.props = cloneObject(parent.getClearProps({...childData.props}, true));\r\n    childData.zIndex = parent.getNextIndexData(0).lastZIndex + 1;\r\n\r\n    if (gridItemStyle) {\r\n        parent.setDataInBreakpoint(\r\n            \"gridItemStyle\", gridItemStyle, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n    if (style) {\r\n        parent.setDataInBreakpoint(\r\n            \"style\", style, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n\r\n    let child = parent.createChildByData(\r\n        childData , DynamicComponents, undefined, (newItem) => {\r\n        newItem.onSelect(true);\r\n\r\n        onChildMounted && onChildMounted(newItem);\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = newItem.props.id;\r\n            let parentId = parent.props.id;\r\n            let childData = cloneObject(parent.getChildData(itemId));\r\n            parent.props.undoredo.add((idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true, gridItemStyle, style);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            });\r\n        }\r\n    });\r\n\r\n    parent.children[childData.props.id] = {\r\n        child: child,\r\n        zIndex: childData.zIndex\r\n    };\r\n\r\n    let savedChildren = parent.getFromTempData(\"savedChildren\");\r\n    savedChildren[childData.props.id] = childData;\r\n\r\n    parent.updateLayout();\r\n}\r\n\r\nexport function setDataInBreakpoint(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(prop, undefined, breakpointName);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setDataInBreakpoint(prop, saveValue, idMan.getItem(itemId), false, breakpointName, updateLayout);\r\n        }, (idMan) => {\r\n            setDataInBreakpoint(prop, oldValue, idMan.getItem(itemId), false, breakpointName, updateLayout);\r\n        }, addToUndo);\r\n    }\r\n    item.setDataInBreakpoint(prop, value, undefined, breakpointName);\r\n\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setTempData(prop, value, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromTempData(prop);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setTempData(prop, saveValue, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setTempData(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setTempData(prop, value);\r\n}\r\n\r\nexport function setStyle(newStyle, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let saveStyle = cloneObject(newStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setStyle(newStyle);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setStyleParam (param, value, item, addToUndo, breakpointName, dontAddToSnap) {\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyleParam(param, value, idMan.getItem(itemId), false, breakpointName, dontAddToSnap);\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        }, addToUndo);\r\n    }\r\n\r\n    let style = item.hasDataInBreakPoint(\"style\", undefined, breakpointName) || {};\r\n    style[param] = value;\r\n    if (value === undefined)\r\n        delete style[param];\r\n    item.setStyle(style, undefined, breakpointName, undefined, dontAddToSnap);\r\n}\r\n\r\nexport function setNewSize(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(`style.${prop}`, undefined, breakpointName);\r\n        let saveStyle = cloneObject(item.getFromData(\"style)\"));\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setNewSize(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setNewSize(prop, value);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setGridItemStyle(newGridItemStyle, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGridItemStyle = item.getFromData(\"gridItemStyle\", undefined, breakpointName);\r\n        oldGridItemStyle = cloneObject(oldGridItemStyle);\r\n        let saveGridItemStyle = cloneObject(newGridItemStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridItemStyle(saveGridItemStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridItemStyle(oldGridItemStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridItemStyle(newGridItemStyle);\r\n    item.invalidateSize(true, true, true);\r\n}\r\n\r\nexport function setGridArea(newGridArea, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldGridArea = item.getGridArea();\r\n        oldGridArea = cloneObject(oldGridArea);\r\n        let saveGridArea = cloneObject(newGridArea);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridArea(saveGridArea, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridArea(oldGridArea, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridArea(newGridArea);\r\n}\r\n\r\nexport function setGrid(newGrid, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGrid = item.getFromData(\"grid\", undefined, breakpointName);\r\n        oldGrid = cloneObject(oldGrid);\r\n        let saveGrid = cloneObject(newGrid);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGrid(saveGrid, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGrid(oldGrid, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGrid(newGrid);\r\n}\r\n\r\nexport function setAnchor(newAnchor, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldAnchor = item.getFromTempData(\"anchor\");\r\n        oldAnchor = cloneObject(oldAnchor);\r\n        let saveAnchor = cloneObject(newAnchor);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setAnchor(saveAnchor, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setAnchor(oldAnchor, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setAnchor(newAnchor);\r\n}\r\n\r\nexport function arrangeIndex(item, child, type, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldType = type === \"forward\"? \"backward\":\r\n            type === \"backward\"? \"forward\": undefined;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), type);\r\n        }, (idMan) => {\r\n            if (oldType)\r\n                arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldType);\r\n            else\r\n                changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.arrangeIndex(child, type);\r\n}\r\n\r\nexport function changeIndex (item, child, index, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), index);\r\n        }, (idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.changeIndex(child, index);\r\n}\r\n\r\nexport function resolveDesignData (item, key, value){\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName()))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    if (!key)\r\n        return;\r\n\r\n    let design = getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName());\r\n    if (!design[key])\r\n        design[key] = value || {};\r\n}\r\n\r\nexport function getCompositeDesignData (item) {\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getCompositeFromData(item.props.griddata, \"design\", breakpointData))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    console.log(\"getCompositeDesignData\", item.props.id, item.props.griddata, breakpointData);\r\n    return getCompositeFromData(item.props.griddata, \"design\", breakpointData);\r\n}\r\n\r\nexport function rotate (item, degree, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldDegree = item.getFromData(\"rotateDegree\");\r\n        item.props.undoredo.add((idMan) => {\r\n            rotate(idMan.getItem(itemId), degree, true);\r\n        }, (idMan) => {\r\n            rotate(idMan.getItem(itemId), oldDegree || 0, true);\r\n        });\r\n    }\r\n\r\n    item.setDataInBreakpoint(\"transform.rotateDegree\", degree);\r\n    item.setTransformStyle(item.getFromData(\"transform\"));\r\n    item.updateLayout(item.props.select.onScrollItem);\r\n}\r\n\r\nexport function getViewRatioStyle (value) {\r\n    if (value.includes('vh'))\r\n        return`calc(${value} * var(--vh-ratio))`;\r\n    if (value.includes('vw'))\r\n        return`calc(${value} * var(--vw-ratio))`;\r\n\r\n    return value;\r\n}\r\n\r\nexport function getValueFromCSSValue (value) {\r\n    if (!value)\r\n        return \"\";\r\n\r\n    if (value.includes(\"%\")) {\r\n        return Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        return Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        return Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function getPxValueFromCSSValue (value, parentValue, item) {\r\n    if (!value)\r\n        return;\r\n    if (!isNaN(value))\r\n        return value;\r\n\r\n    if (value.includes(\"%\")) {\r\n        let percent = Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n        return percent * parentValue / 100;\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        let percent = Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n\r\n        return percent * item.props.breakpointmanager.getWindowHeight() / 100;\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        let percent =  Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n\r\n        return percent * item.props.breakpointmanager.getWindowWidth() / 100;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function getStyleValueFromPx (value, parentValue, unit, item) {\r\n    if (!unit)\r\n        unit = \"px\";\r\n\r\n    if (unit === \"px\") {\r\n        return `${value}${unit}`;\r\n    }\r\n    if (unit === \"%\") {\r\n        return `${value / parentValue * 100}${unit}`;\r\n    }\r\n    if (unit === \"vh\") {\r\n        value = `${value / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n        return `calc(${value} * var(--vh-ratio))`;\r\n    }\r\n    if (unit === \"vw\") {\r\n        value = `${value / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n        return `calc(${value} * var(--vw-ratio))`;\r\n    }\r\n\r\n    return unit;\r\n}\r\n\r\nexport function getUnitFromStyleValue (value) {\r\n    if (!value)\r\n        return \"none\";\r\n\r\n    if (value.includes(\"%\")) {\r\n        return \"%\";\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return \"px\";\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        return \"vw\";\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        return \"vh\";\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function createContextMenu(e, item, onClose) {\r\n    if (item.props.isPage)\r\n        return;\r\n\r\n    let menu = [];\r\n\r\n    item.getContextMenu() && menu.push(item.getContextMenu());\r\n\r\n    // Copy section\r\n    let copySection = [\r\n        {\r\n            name: \"Copy\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.copy(item);\r\n            },\r\n            shortcut: \"Ctrl + C\"\r\n        },\r\n        {\r\n            name: \"Paste\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.paste(item);\r\n            },\r\n            shortcut: \"Ctrl + V\"\r\n        },\r\n        {\r\n            name: \"Duplicate\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.duplicate(item);\r\n            },\r\n            shortcut: \"Ctrl + D\"\r\n        },\r\n        {\r\n            name: \"Copy Element Design\",\r\n            subMenu: [\r\n                {\r\n                    name: \"From this breakpoint\",\r\n                    onClick: (e) => {\r\n                        copyDesign(item);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"From all breakpoint\",\r\n                    onClick: (e) => {\r\n                        copyDesign(item, true);\r\n                    }\r\n                },\r\n            ]\r\n        },\r\n    ];\r\n    let copyDesignItem = item.props.breakpointmanager.getCopyDesign();\r\n    if (copyDesignItem && isSameFamily(copyDesignItem.sourceItem, item))\r\n        copySection.push({\r\n            name: \"Paste Design\",\r\n            onClick: (e) => {\r\n                pasteDesign(item);\r\n            }\r\n        });\r\n    let overrideBps = [];\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n    Object.keys(item.props.griddata.bpData).forEach(bpName => {\r\n        if (bpName === currentBpName ||\r\n            item.props.breakpointmanager.getHighestBpName() === bpName)\r\n            return;\r\n\r\n        if (item.props.griddata.bpData[bpName] && item.props.griddata.bpData[bpName].design) {\r\n            if (!item.props.griddata.bpData[currentBpName] ||\r\n                !deepEqual(item.props.griddata.bpData[bpName].design,\r\n                    item.props.griddata.bpData[currentBpName].design)) {\r\n                overrideBps.push(bpName);\r\n            }\r\n        }\r\n    });\r\n    if (overrideBps.length > 0) {\r\n        copySection.push({\r\n            name: \"Paste From Breakpoint\",\r\n            subMenu: overrideBps.map(bpName => {\r\n                return {\r\n                    name: bpName,\r\n                    onClick: (e) => {\r\n                        pasteFromBreakpointDesign(item, bpName, currentBpName);\r\n                    }\r\n                };\r\n            })\r\n        });\r\n    }\r\n    menu.push(copySection);\r\n\r\n    let deleteSection = [];\r\n    if (!isHideInBreakpoint(item)) {\r\n        deleteSection.push(\r\n            {\r\n                name: \"Hide In Breakpoint\",\r\n                onClick: (e) => {\r\n                    hideInBreakPoint(item);\r\n                }\r\n            });\r\n    }\r\n    deleteSection.push({\r\n        name: \"Delete\",\r\n        onClick: (e) => {\r\n            item.delete();\r\n        },\r\n        shortcut: \"Delete\"\r\n    });\r\n\r\n    if (currentBpName !== item.props.breakpointmanager.getHighestBpName()) {\r\n        if (item.props.griddata.bpData[currentBpName] &&\r\n            Object.keys(item.props.griddata.bpData[currentBpName]).length > 0)\r\n        {\r\n            deleteSection.unshift({\r\n                name: \"Remove Breakpoint Overrides\",\r\n                onClick: (e) => {\r\n                    // TODO add these lines to a function with undo support\r\n                    delete item.props.griddata.bpData[currentBpName];\r\n                    item.onBreakpointChange(\r\n                        item.props.breakpointmanager.getWindowWidth(),\r\n                        item.props.breakpointmanager.current());\r\n                    item.props.select.onScrollItem();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    menu.push(deleteSection);\r\n\r\n    let shortcutSection = [];\r\n    if (!item.props.griddata.isSection) {\r\n        shortcutSection.push({\r\n            name: \"Arrange\",\r\n            subMenu: [\r\n                {\r\n                    name: \"Move Forward\",\r\n                    shortcut: \"Ctrl + Alt + ↑\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"forward\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move to Front\",\r\n                    shortcut: \"Ctrl + ↑\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"front\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move Backward\",\r\n                    shortcut: \"Ctrl + Alt + ↓\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"backward\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move to Back\",\r\n                    shortcut: \"Ctrl + ↓\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"back\", true);\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    menu.push(shortcutSection);\r\n\r\n    let sectionSection = [];\r\n    if (item.props.isSection) {\r\n        if (item.props.isVerticalSection) {\r\n            sectionSection.push({\r\n                name: \"Move Left\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveLeft(item.props.id);\r\n                },\r\n            });\r\n            sectionSection.push({\r\n                name: \"Move Right\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveRight(item.props.id);\r\n                },\r\n            });\r\n        } else {\r\n            sectionSection.push({\r\n                name: \"Move Up\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveUp(item.props.id);\r\n                },\r\n            });\r\n            sectionSection.push({\r\n                name: \"Move Down\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveDown(item.props.id);\r\n                },\r\n            });\r\n        }\r\n    }\r\n    menu.unshift(sectionSection);\r\n\r\n    let masterSection = [\r\n    ];\r\n\r\n    return <ContextMenu\r\n        menu={menu}\r\n        onClose={onClose}\r\n        clientX={e.clientX}\r\n        clientY={e.clientY}\r\n    />\r\n}\r\n\r\nexport function isHideInBreakpoint(item) {\r\n    if (!item)\r\n        return false;\r\n\r\n    if (typeof item.getCompositeFromData(\"style\").display === 'string')\r\n        return item.getCompositeFromData(\"style\").display.includes(\"none\");\r\n\r\n    return false;\r\n}\r\n\r\nexport function isSameFamily(item1, item2) {\r\n    if (item1.props.tagName === item2.props.tagName)\r\n        return true;\r\n\r\n    if (item1.props.griddata.isSection && item2.props.griddata.isSection)\r\n        return true;\r\n}\r\n\r\nexport function isLeftClick (e) {\r\n    if (e.button === 0)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport function isRightClick (e) {\r\n    if (e.button === 2)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport function getResizeDelta (degree, dir, delta) {\r\n    let rad = degree * Math.PI / 180;\r\n    let cx = delta.x, cy = delta.y;\r\n    let cxy = Math.sqrt(cx * cx + cy * cy);\r\n    let cxp = cy !== 0 ? cy / Math.tan(rad) : 0;\r\n    let cyp = cx !== 0 ? -cx / Math.tan(rad) : 0;\r\n\r\n    let thetaH = Math.atan(Math.abs(cy) / Math.abs(cx));\r\n    let thetaW = Math.atan(Math.abs(cy) / Math.abs(cx));\r\n\r\n    if (cx * cy > 0)\r\n        thetaW = -thetaW;\r\n    if (cx * cy > 0)\r\n        thetaH = -thetaH;\r\n\r\n    let Dh = Math.abs(Math.sin(rad + thetaH) * cxy);\r\n    let Dw = Math.abs(Math.cos(rad + thetaW) * cxy);\r\n\r\n    if (cxp < cx)\r\n        Dh = -Dh;\r\n    if (cyp > cy)\r\n        Dw = -Dw;\r\n\r\n    if (degree > 180) {\r\n        Dh = -Dh;\r\n        Dw = -Dw;\r\n    }\r\n\r\n    let dxH = Dh * Math.sin(rad);\r\n    let dyH = Dh * Math.cos(rad);\r\n    let dxW = Dw * Math.cos(rad);\r\n    let dyW = Dw * Math.sin(rad);\r\n\r\n    let finalDelta = {\r\n        top: 0, left: 0, width: 0, height: 0\r\n    };\r\n\r\n    if (dir.includes('n')) {\r\n        finalDelta.height -= Dh;\r\n        finalDelta.top += ((Dh + dyH) / 2);\r\n        finalDelta.left -= (dxH / 2);\r\n    }\r\n\r\n    if (dir.includes('s')) {\r\n        finalDelta.height += Dh;\r\n        finalDelta.top -= ((Dh - dyH) / 2);\r\n        finalDelta.left -= (dxH / 2);\r\n    }\r\n\r\n    if (dir.includes('w')) {\r\n        finalDelta.width -= Dw;\r\n        finalDelta.top += (dyW / 2);\r\n        finalDelta.left += ((Dw + dxW) / 2);\r\n    }\r\n\r\n    if (dir.includes('e')) {\r\n        finalDelta.width += Dw;\r\n        finalDelta.top += (dyW / 2);\r\n        finalDelta.left -= ((Dw - dxW) / 2);\r\n    }\r\n\r\n    console.log(\"finalDelta\", finalDelta, Dw, dyW, dxW);\r\n    return finalDelta;\r\n}\r\n\r\nexport function sortBy (array, param) {\r\n    array = array.sort((a, b) => {\r\n        if (a[param] < b[param]) {\r\n            return -1;\r\n        } else if (a[param] === b[param]) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    });\r\n    return array;\r\n}\r\n\r\nexport function getColorScheme (baseColor) {\r\n    return {\r\n        \"1\": chroma(baseColor).luminance(0.025).css(),\r\n        \"2\": chroma(baseColor).luminance(0.06).css(),\r\n        \"3\": chroma(baseColor).luminance(0.15).css(),\r\n        \"4\": chroma(baseColor).luminance(0.35).css(),\r\n        \"5\": chroma(baseColor).luminance(0.55).css(),\r\n    }\r\n}\r\n\r\nexport function parseColor (color, alpha, editor) {\r\n    console.log(\"parseColor\", color, alpha)\r\n    if (!color) {\r\n        color = '#000000';\r\n        alpha = alpha || 0;\r\n    }\r\n\r\n    if (color instanceof Object) {\r\n        let chromaColor = chroma(editor.themeManagerRef.current.getColor(color.paletteName, color.key));\r\n        if (alpha === undefined || color.alpha !== undefined)\r\n            chromaColor = chromaColor.alpha(alpha || color.alpha);\r\n        else\r\n            chromaColor = chromaColor.alpha(1);\r\n        return chromaColor.css();\r\n    } else {\r\n        let chromaColor = chroma(color);\r\n        // chromaColor = chromaColor.alpha(alpha || 1);\r\n        if (alpha !== undefined)\r\n            chromaColor = chromaColor.alpha(alpha);\r\n        return chromaColor.css();\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class NumberInputWithUnit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    inputFilter = (value, oldValue) => {\r\n        let okay = false;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (!isNaN(value))\r\n                okay = true;\r\n        } catch {}\r\n        if (okay) {\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\" || isNaN(value)) {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (value.endsWith(\".\"))\r\n            value += \"0\";\r\n        value = this.inputFilter(value, this.getValue(this.props.value));\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    onShowUnits = (e) => {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    getValue = (value) => {\r\n        if (!value)\r\n            return \"\";\r\n\r\n        if (typeof value !== 'string')\r\n            return value;\r\n\r\n        if (value.includes(\"%\")) {\r\n            return Math.round(parseFloat(value.replace(\"%\", \"\")) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return Math.round(parseFloat(value.replace(\"px\", \"\")) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return Math.round(parseFloat(\r\n                value.replace(/[^0-9\\.]/g, '')\r\n            ) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return Math.round(parseFloat(\r\n                value.replace(/[^0-9\\.]/g, '')\r\n            ) * 10) / 10;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let classes = classNames(\r\n            \"NumberInputWithUnit\",\r\n            this.props.className\r\n        );\r\n\r\n        return (\r\n            <div className={classes}>\r\n                <input\r\n                    style={{...{\r\n                        textAlign: \"left\",\r\n                        width: 64\r\n                    }, ...this.props.inputStyle}}\r\n                    className=\"NumberInput\"\r\n                    value={![\"%\", \"px\", \"vw\", \"vh\", \"°\"].includes(this.props.unit) ? \"\" :\r\n                        (this.getValue(this.props.value) || 0)}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    disabled={![\"%\", \"px\", \"vw\", \"vh\", \"°\"].includes(this.props.unit) || this.props.disabled}\r\n                >\r\n                </input>\r\n\r\n                <IconButton\r\n                    ref={this.unitIconButton}\r\n                    className=\"InputUnitButton\"\r\n                    buttonBaseStyle={{\r\n                        marginLeft: 0,\r\n                    }}\r\n                    imageContainerStyle={{\r\n                        padding: 6\r\n                    }}\r\n                    onClick={!this.props.disabled ? this.onShowUnits : undefined}\r\n                    style={this.props.unitButtonStyle}\r\n                    disabled={this.props.disableUnit}\r\n                >\r\n                    <span style={{\r\n                        color: \"#0a108b\"\r\n                    }}>\r\n                        {this.props.unit || \"none\"}\r\n                    </span>\r\n                </IconButton>\r\n\r\n                <Menu\r\n                    style={{...{\r\n                            zIndex: 99999999999\r\n                        }, ...this.props.unitMenuStyle}}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.units.map((unit, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onUnitChange)\r\n                                            this.props.onUnitChange(unit);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                >\r\n                                    <span style={{\r\n                                        color: \"#0a108b\"\r\n                                    }}>\r\n                                        {unit}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n\r\n                {\r\n                    this.props.disabled &&\r\n                    <div\r\n                        className=\"NumberInputWithUnitDisabled\"\r\n                        style={{...{\r\n                                textAlign: \"left\",\r\n                                width: 64\r\n                            }, ...this.props.inputStyle}}\r\n                    >\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: props.defaultOpen || false\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ButtonBase className=\"InspectorOptionTitle\" onClick={(e) => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(!this.state.open);\r\n                this.setState({open: !this.state.open});\r\n            }}>\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n\r\n                    <div className=\"InspectorOptionTitleExpandIcon\">\r\n                        {\r\n                            this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/down-arrow.svg'} />\r\n                        }\r\n                        {\r\n                            !this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/right-arrow.svg'} />\r\n                        }\r\n                    </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue,\r\n    getViewRatioStyle,\r\n    setNewSize\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorSize extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let oldValue = item.getCompositeFromData(\"style\")[prop];\r\n        if ([\"%\", \"px\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n        } else if ([\"vh\", \"vw\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n            value = getViewRatioStyle(value);\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    onUnitChange = (prop, unit, parentValue, defaultValue) => {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n\r\n        if (isNaN(defaultValue))\r\n            defaultValue = 0;\r\n\r\n        let value;\r\n        if (unit === \"px\") {\r\n            value = `${item.getSize(false)[prop] ||\r\n            getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            parentValue * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n            value = getViewRatioStyle(value);\r\n        } else if (unit === \"vw\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n            value = getViewRatioStyle(value);\r\n        } else if (unit === \"none\") {\r\n            value = undefined;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value || value === \"unset\")\r\n            return \"none\";\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return \"px\";\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return \"vw\";\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return \"vh\";\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    runtimeValueToStyleValue = (propName, parentValue, value, style,) => {\r\n        let unit = this.getUnit(style[propName]);\r\n        let {item} = this.props;\r\n\r\n        if (unit === \"px\") {\r\n            value = `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${value /\r\n            parentValue * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${value / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n            value = `calc(${value} * var(--vh-ratio))`;\r\n        } else if (unit === \"vw\") {\r\n            value = `${value / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n            value = `calc(${value} * var(--vw-ratio))`;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n        let runtimeStyle = item.state.runtimeStyle;\r\n        let runtimeGridItemStyle = item.getRuntimeGridItemStyle() || {\r\n            widthForPercent: item.props.breakpointmanager.getWindowWidth(),\r\n            heightForPercent: item.props.breakpointmanager.getWindowHeight(),\r\n        };\r\n        return (\r\n            <>\r\n                <InspectorTitle defaultOpen title=\"Size\" onChange={(open)=>{\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorSizeRow\">\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Width\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('width')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"width\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.width}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"width\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        this.onUnitChange(\"width\", unit, parentRect.scrollWidthMinusPadding);\r\n                                    }}\r\n                                    units={this.props.widthUnits}\r\n                                    unit={this.getUnit(style.width)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Height\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('height')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"height\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.height}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"height\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        this.onUnitChange(\"height\", unit, parentRect.scrollHeightMinusPadding);\r\n                                    }}\r\n                                    units={this.props.heightUnits}\r\n                                    unit={this.getUnit(style.height)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"InspectorSizeRow\">\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min W\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('minWidth')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"minWidth\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.minWidth}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"minWidth\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 1;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let width = getPxValueFromCSSValue(style.width, parentRect.scrollWidthMinusPadding, item);\r\n                                        let maxWidth = getPxValueFromCSSValue(style.maxWidth, parentRect.scrollWidthMinusPadding, item);\r\n                                        if (isNaN(width) && !isNaN(maxWidth))\r\n                                            defaultValue = maxWidth;\r\n                                        else if (!isNaN(width) && isNaN(maxWidth))\r\n                                            defaultValue = width;\r\n                                        else if (!isNaN(width) && !isNaN(maxWidth))\r\n                                            defaultValue = Math.min(width, maxWidth);\r\n\r\n                                        this.onUnitChange(\"minWidth\", unit, parentRect.scrollWidthMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.minWidthUnits}\r\n                                    unit={this.getUnit(style.minWidth)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min H\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('minHeight')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"minHeight\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.minHeight}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"minHeight\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 1;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let height = getPxValueFromCSSValue(style.height, parentRect.scrollHeightMinusPadding, item);\r\n                                        let maxHeight = getPxValueFromCSSValue(style.maxHeight, parentRect.scrollHeightMinusPadding, item);\r\n                                        if (isNaN(height) && !isNaN(maxHeight))\r\n                                            defaultValue = maxHeight;\r\n                                        else if (!isNaN(height) && isNaN(maxHeight))\r\n                                            defaultValue = height;\r\n                                        else if (!isNaN(height) && !isNaN(maxHeight))\r\n                                            defaultValue = Math.min(height, maxHeight);\r\n\r\n                                        this.onUnitChange(\"minHeight\", unit, parentRect.scrollHeightMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.minHeightUnits}\r\n                                    unit={this.getUnit(style.minHeight)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"InspectorSizeRow\" style={{\r\n                            marginBottom: 0\r\n                        }}>\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max W\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('maxWidth')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"maxWidth\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.maxWidth}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"maxWidth\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 200;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let width = getPxValueFromCSSValue(style.width, parentRect.scrollWidthMinusPadding, item);\r\n                                        let minWidth = getPxValueFromCSSValue(style.minWidth, parentRect.scrollWidthMinusPadding, item);\r\n                                        if (isNaN(width) && !isNaN(minWidth))\r\n                                            defaultValue = minWidth;\r\n                                        else if (!isNaN(width) && isNaN(minWidth))\r\n                                            defaultValue = width;\r\n                                        else if (!isNaN(width) && !isNaN(minWidth))\r\n                                            defaultValue = Math.max(width, minWidth);\r\n\r\n                                        this.onUnitChange(\"maxWidth\", unit, parentRect.scrollWidthMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.maxWidthUnits}\r\n                                    unit={this.getUnit(style.maxWidth)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max H\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('maxHeight')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"maxHeight\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.maxHeight}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"maxHeight\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 200;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let height = getPxValueFromCSSValue(style.height, parentRect.scrollHeightMinusPadding, item);\r\n                                        let minHeight = getPxValueFromCSSValue(style.minHeight, parentRect.scrollHeightMinusPadding, item);\r\n                                        if (isNaN(height) && !isNaN(minHeight))\r\n                                            defaultValue = minHeight;\r\n                                        else if (!isNaN(height) && isNaN(minHeight))\r\n                                            defaultValue = height;\r\n                                        else if (!isNaN(height) && !isNaN(minHeight))\r\n                                            defaultValue = Math.max(height, minHeight);\r\n\r\n                                        this.onUnitChange(\"maxHeight\", unit, parentRect.scrollHeightMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.maxHeightUnits}\r\n                                    unit={this.getUnit(style.maxHeight)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspectorSize.defaultProps = {\r\n    disabledProps: []\r\n};\r\n","import Switch from \"@material-ui/core/Switch/Switch\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst DockSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 42,\r\n        height: 10,\r\n        padding: 4,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 0,\r\n        color: \"#d2d2d2\",\r\n        '&$checked': {\r\n            transform: 'translateX(28px) scale(1)',\r\n            color: \"#849dff\",\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: \"#849dff\",\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 10,\r\n        height: 10,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: \"#a2a2a2\",\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n\r\nexport default DockSwitch;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue,\r\n    getUnitFromStyleValue,\r\n    setGridItemStyle,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport DockSwitch from \"./DockSwitch\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorPosition extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onDockActiveChange = (side, value) => {\r\n        let {item} = this.props;\r\n        let oldDocks = cloneObject(item.getFromData(\"docks\") || {});\r\n\r\n        oldDocks[side] = value;\r\n        if (side === \"top\" && value) {\r\n            oldDocks.bottom = false;\r\n        }\r\n        if (side === \"bottom\" && value) {\r\n            oldDocks.top = false;\r\n        }\r\n\r\n        item.setDocks(oldDocks.top, oldDocks.left, oldDocks.bottom, oldDocks.right,\r\n            item.getFromTempData(\"autoDeck\"));\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n    };\r\n\r\n    onDockAutoChange = () => {\r\n        let {item} = this.props;\r\n        setTempData(\"autoDock\", !item.getFromTempData(\"autoDock\"), item, true);\r\n    };\r\n\r\n    onUnitChange = (prop, parentProp, unit) => {\r\n        let {item} = this.props;\r\n        let gridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let compositeGridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        if (!gridItemStyle)\r\n            gridItemStyle = {};\r\n\r\n        let parentRect = item.props.parent.getSize(false);\r\n        let value = getPxValueFromCSSValue(compositeGridItemStyle[prop], parentRect.scrollWidthMinusPadding, item);\r\n\r\n        if (unit === \"px\") {\r\n            gridItemStyle[prop] = `${value}${unit}`;\r\n        } else if (unit === \"%\") {\r\n            // let runtimeGridItemStyle = item.getRuntimeGridItemStyle();\r\n            gridItemStyle[prop] = `${value / parentRect.scrollWidthMinusPadding * 100}${unit}`;\r\n        }\r\n\r\n        setGridItemStyle(gridItemStyle, item, true);\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n    };\r\n\r\n    onValueChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let gridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let compositeGridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        if (!gridItemStyle)\r\n            gridItemStyle = {};\r\n        gridItemStyle[prop] = `${value}${getUnitFromStyleValue(compositeGridItemStyle[prop])}`;\r\n\r\n        setGridItemStyle(gridItemStyle, item, true);\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n        item.props.select.updateResizePanes(item, item.getSize(false));\r\n    };\r\n\r\n    runtimeValueToStyleValue = (propName, parentValue, value, style) => {\r\n        if (!style)\r\n            return;\r\n\r\n        let unit = getUnitFromStyleValue(style[propName]);\r\n        let {item} = this.props;\r\n\r\n        if (unit === \"px\") {\r\n            value = `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${value /\r\n            parentValue * 100}%`;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let docks = item.getCompositeFromData(\"docks\");\r\n        let auto = item.getFromTempData(\"autoDock\");\r\n        let gridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        let runtimeStyle = item.state.runtimeStyle;\r\n        let runtimeGridItemStyle = item.getRuntimeGridItemStyle();\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Position\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorDockingRoot\">\r\n                            <span className=\"InspectorDockingRootTitle\">\r\n                                Docking\r\n                            </span>\r\n\r\n                            <div className=\"InspectorDockingDocks\">\r\n                                <div className=\"InspectorDockingLeft\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch\"\r\n                                        checked={docks.left || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('left', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingRight\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch\"\r\n                                        checked={docks.right || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('right', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingTop\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch90\"\r\n                                        checked={docks.top || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('top', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingBottom\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch90\"\r\n                                        checked={docks.bottom || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('bottom', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    auto &&\r\n                                    <div className=\"InspectorDockingDisable\"/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"InspectorOverflowDir\">\r\n                        <span className=\"InspectorOverflowDirTitle\">\r\n                            Auto docking\r\n                        </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={auto || false}\r\n                                onChange={(e) => {\r\n                                    this.onDockAutoChange();\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"InspectorOverflowMarginRoot\">\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.top || auto}\r\n                                value={docks.top && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginTop : gridItemStyle.marginTop)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginTop\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginTop\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={\r\n                                    docks.top &&\r\n                                    getUnitFromStyleValue(\r\n                                        runtimeStyle && runtimeGridItemStyle ?\r\n                                            runtimeGridItemStyle.marginTop : gridItemStyle.marginTop)\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.left || auto}\r\n                                value={docks.left && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginLeft : gridItemStyle.marginLeft)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginLeft\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginLeft\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.left &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginLeft : gridItemStyle.marginLeft)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.bottom || auto}\r\n                                value={docks.bottom && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginBottom : gridItemStyle.marginBottom)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginBottom\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginBottom\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.bottom &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginBottom : gridItemStyle.marginBottom)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.right || auto}\r\n                                value={docks.right && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginRight : gridItemStyle.marginRight)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginRight\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginRight\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.right &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginRight : gridItemStyle.marginRight)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\n\r\nexport default class DropDown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    onChange = (option) => {\r\n        this.props.onChange(option);\r\n    };\r\n\r\n    getValue = () => {\r\n        if (this.props.valueRenderer) {\r\n            return this.props.valueRenderer(this.props.value) ||\r\n                (this.props.renderer && this.props.renderer(this.props.value)) ||\r\n                this.props.value || \"\";\r\n        } else {\r\n            return this.props.value || \"\";\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"DropDownRoot\">\r\n                <span\r\n                    className=\"DropDownSpan\"\r\n                    style={{...this.props.spanStyle, ...{\r\n                        cursor: \"pointer\"\r\n                    }}}\r\n                    onClick={this.onClick}\r\n                >\r\n                    {console.log(\"DropDown\", this.getValue())}\r\n                    {this.getValue()}\r\n                </span>\r\n\r\n                <Menu\r\n                    style={{...{\r\n                            zIndex: 99999999999\r\n                        }, ...this.props.menuStyle}}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0,\r\n                            width: this.props.spanStyle? this.props.spanStyle.width: \"auto\"\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.options.map((option, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onChange)\r\n                                            this.props.onChange(option);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                    style={{...(option.disabled && {\r\n                                        pointerEvents: \"none\"\r\n                                    })}}\r\n                                >\r\n                                    <span style={{\r\n                                        width: \"100%\"\r\n                                    }}>\r\n                                        {this.props.renderer ? this.props.renderer(option) : option}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n\r\n                <div\r\n                    className=\"DropDOwnArrow\"\r\n                >\r\n                    <img width={10} height={10} src={process.env.PUBLIC_URL + \"/static/icon/down-arrow.svg\"}/>\r\n                </div>\r\n\r\n                {\r\n                    this.props.disabled &&\r\n                    <div\r\n                        className=\"DropDOwnDisabled\"\r\n                        style={this.props.spanStyle}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class NumberInput extends React.Component {\r\n    inputFilter = (value, oldValue) => {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = parseFloat(value).toFixed(0);\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = this.inputFilter(e.target.value, this.props.value);\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className=\"NumberInput\"\r\n                value={this.props.value || 0}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport {getValueFromCSSValue, setScrollBehaviour} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInput from \"../../Menus/CommonComponents/NumberInput\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorScroll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeScrollEffect = (option) => {\r\n        let {item} = this.props;\r\n        let offsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        setScrollBehaviour(item, option, item.props.viewRef.current, false, {offsetTop});\r\n    };\r\n\r\n    onChangeOffsetTop = (offsetTop) => {\r\n        offsetTop = `${offsetTop}px`;\r\n        let {item} = this.props;\r\n        let behaviour = item.getFromData(\"scrollBehaviour\");\r\n        setScrollBehaviour(item, behaviour, item.props.viewRef.current, false, {offsetTop});\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let behaviour = item.getFromData(\"scrollBehaviour\");\r\n        let offsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Scroll\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorScrollEffect\"\r\n                             style={{\r\n                                 marginBottom: behaviour === 'sticky' ? 12 : 0\r\n                             }}\r\n                        >\r\n                            <div className=\"InspectorScrollTitle\">\r\n                                Scroll effect\r\n                            </div>\r\n\r\n                            <DropDown\r\n                                options={this.props.options || ['none', 'fixed', 'sticky']}\r\n                                onChange={this.onChangeScrollEffect}\r\n                                value={behaviour || 'none'}\r\n                                spanStyle={{\r\n                                    width: 96,\r\n                                    fontSize: 12\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            behaviour === 'sticky' &&\r\n                            <div className=\"InspectorScrollEffect\">\r\n                                <div className=\"InspectorScrollTitle\">\r\n                                    Offset top\r\n                                </div>\r\n\r\n                                <NumberInput\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    value={getValueFromCSSValue(offsetTop)}\r\n                                    onChange={this.onChangeOffsetTop}\r\n                                    inputStyle={{\r\n                                        width: 96,\r\n                                        fontSize: 12,\r\n                                        textAlign: \"left\"\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue, getStyleValueFromPx,\r\n    getUnitFromStyleValue,\r\n    setDataInBreakpoint,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorPadding extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onUnitChange = (prop, parentProp, unit) => {\r\n        let {item} = this.props;\r\n        let padding = cloneObject(item.getFromData(\"padding\")) || {};\r\n        let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n\r\n        let parentRect = item.props.parent.getSize(false);\r\n        let value = getPxValueFromCSSValue(compositePadding[prop], parentRect.width, item);\r\n\r\n        if (unit === \"px\") {\r\n            padding[prop] = `${value}${unit}`;\r\n        } else if (unit === \"%\") {\r\n            padding[prop] = `${value / item.props.parent.getSize(false).width * 100}${unit}`;\r\n        }\r\n        else if (unit === \"vh\") {\r\n            padding[prop] = `${value / item.props.breakpointmanager.getWindowHeight() * 100}${unit}`;\r\n        }\r\n        else if (unit === \"vw\") {\r\n            padding[prop] = `${value / item.props.breakpointmanager.getWindowWidth() * 100}${unit}`;\r\n        }\r\n\r\n        setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n    };\r\n\r\n    onValueChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let equalPadding = item.getFromTempData(\"equalPadding\");\r\n        let padding = cloneObject(item.getFromData(\"padding\")) || {};\r\n        let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n        padding[prop] = `${value}${getUnitFromStyleValue(compositePadding[prop] || \"px\")}`;\r\n        if (equalPadding) {\r\n            let parentRect = item.props.parent? item.props.parent.getSize(false):\r\n                {\r\n                    scrollWidthMinusPadding: item.props.breakpointmanager.getWindowWidth()\r\n                };\r\n            let pxValue = getPxValueFromCSSValue(padding[prop], parentRect.scrollWidthMinusPadding, item);\r\n            padding = {\r\n                top: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.top || \"px\"), item)}`,\r\n                left: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.left || \"px\"), item)}`,\r\n                bottom: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.bottom || \"px\"), item)}`,\r\n                right: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.right || \"px\"), item)}`,\r\n            };\r\n        }\r\n\r\n        setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n\r\n        item.invalidateSize(true, true, true, undefined, true);\r\n\r\n        window.requestAnimationFrame(() => {\r\n            item.props.select.onScrollItem();\r\n        })\r\n    };\r\n\r\n    onEqualPadding = (equalPadding) => {\r\n        let {item} = this.props;\r\n\r\n        setTempData(\"equalPadding\", equalPadding, item, true);\r\n        if (equalPadding) {\r\n            let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n\r\n            let parentRect = item.props.parent? item.props.parent.getSize(false):\r\n                {\r\n                    scrollWidthMinusPadding: item.props.breakpointmanager.getWindowWidth()\r\n                };\r\n            let max = Math.max(\r\n                getPxValueFromCSSValue(compositePadding.top, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.left, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.bottom, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.right, parentRect.scrollWidthMinusPadding, item) || 0,\r\n            );\r\n\r\n            let padding = {\r\n                top: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.top || \"px\"), item)}`,\r\n                left: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.left || \"px\"), item)}`,\r\n                bottom: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.bottom || \"px\"), item)}`,\r\n                right: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.right || \"px\"), item)}`,\r\n            };\r\n\r\n            setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n\r\n            item.invalidateSize(true, true, true, undefined, true);\r\n        }\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let padding = item.getCompositeFromData(\"padding\") || {};\r\n        let equalPadding = item.getFromTempData(\"equalPadding\") || false;\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Padding\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorOverflowMarginRoot\">\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.top || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"top\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"top\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.top || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.left || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"left\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"left\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.left || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.bottom || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"bottom\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"bottom\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.bottom || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.right || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"right\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"right\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.right || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"InspectorAdjustRotate\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Equal padding\r\n                                </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={equalPadding}\r\n                                onChange={(e) => {\r\n                                    let checked = e.target.checked;\r\n                                    this.onEqualPadding(checked);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport {setDataInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorOverflow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeState = (e, value) => {\r\n        let {item} = this.props;\r\n        let thisBpOverflowData = item.getFromData(\"overflowData\");\r\n        let compositOverflowData = item.getCompositeFromData(\"overflowData\");\r\n        if (value === 'scroll' &&\r\n            (!compositOverflowData ||\r\n            ((!compositOverflowData.overflowY || compositOverflowData.overflowY === \"hidden\")&&\r\n            (!compositOverflowData.overflowX || compositOverflowData.overflowX === \"hidden\"))))\r\n        {\r\n            let newOverflowData = cloneObject(thisBpOverflowData || {});\r\n            newOverflowData.state = 'scroll';\r\n            newOverflowData.overflowY = 'scroll';\r\n            console.log(\"onChangeState\", JSON.stringify(newOverflowData));\r\n            setDataInBreakpoint(\"overflowData\", newOverflowData, item, true, undefined, true);\r\n            return;\r\n        }\r\n\r\n        setDataInBreakpoint(\"overflowData.state\", value, item, true, undefined, true);\r\n    };\r\n\r\n    changeScrollDirection = (propName, checked) => {\r\n        let {item} = this.props;\r\n        setDataInBreakpoint(`overflowData.${propName}`, checked? 'scroll': undefined\r\n            , item, true, undefined, true);\r\n    };\r\n\r\n    onChangeAuto = (e, value) => {\r\n        let {item} = this.props;\r\n        setDataInBreakpoint(\"overflowData.auto\", value, item, true, undefined, true);\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let overflowData = item.getCompositeFromData(\"overflowData\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Overflow content\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorAnchorNameTitle\">\r\n                            Overflow\r\n                        </div>\r\n                        <ToggleButtonGroup\r\n                            className=\"InspectorOverflowType\"\r\n                            size='small'\r\n                            value={overflowData.state}\r\n                            exclusive\r\n                            onChange={this.onChangeState}\r\n                        >\r\n                            <ToggleButton value=\"show\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                        style={{\r\n                                            padding: 3\r\n                                        }}\r\n                            >\r\n                                Show\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"hide\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                          style={{\r\n                                              padding: 3\r\n                                          }}\r\n                            >\r\n                                Hide\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"scroll\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                          style={{\r\n                                              padding: 3\r\n                                          }}\r\n                            >\r\n                                Scroll\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n\r\n                        {\r\n                            overflowData.state === 'scroll' &&\r\n                            <>\r\n                                <div className=\"InspectorOverflowDir\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scroll vertically\r\n                                </span>\r\n                                    <Switch\r\n                                        className=\"InspectorOverflowDirSwitch\"\r\n                                        checked={overflowData.overflowY === \"scroll\" || overflowData.overflowY === \"auto\"}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.changeScrollDirection('overflowY', checked);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorOverflowDir\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scroll horizontally\r\n                                </span>\r\n                                    <Switch\r\n                                        className=\"InspectorOverflowDirSwitch\"\r\n                                        checked={overflowData.overflowX === \"scroll\" || overflowData.overflowX === \"auto\"}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.changeScrollDirection('overflowX', checked);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorOverflowAuto\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scrollbar visibility\r\n                                </span>\r\n                                </div>\r\n                                <ToggleButtonGroup\r\n                                    className=\"InspectorOverflowAutoToggles\"\r\n                                    size='small'\r\n                                    value={overflowData.auto || \"always\"}\r\n                                    exclusive\r\n                                    onChange={this.onChangeAuto}\r\n                                >\r\n                                    <ToggleButton value=\"hide\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Hide\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"auto\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Auto\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"always\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Show\r\n                                    </ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class TextInput extends React.Component {\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (this.props.onChange)\r\n            this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                {...this.props}\r\n                className=\"NumberInput\"\r\n                value={this.props.value || \"\"}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport TextInput from \"../../Menus/CommonComponents/TextInput\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorAnchor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onEnableAnchor = (enable) => {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        if (enable) {\r\n            item.props.anchorMan.addAnchor(item.props.id.replace(\"comp_\", ''), item);\r\n        }\r\n        else {\r\n            item.props.anchorMan.removeAnchor(anchor.id, item);\r\n        }\r\n    };\r\n\r\n    onChangeName = (newName) => {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        item.props.anchorMan.modifyAnchor(anchor.id, newName, item);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Anchor\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n\r\n                        <div className=\"InspectorOverflowDir\">\r\n                        <span className=\"InspectorOverflowDirTitle\">\r\n                            Enable Anchor\r\n                        </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={anchor !== undefined}\r\n                                onChange={(e) => {\r\n                                    this.onEnableAnchor(e.target.checked);\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            anchor &&\r\n                            <div className=\"InspectorAnchorName\">\r\n                                <div className=\"InspectorAnchorNameTitle\">\r\n                                    Anchor name\r\n                                </div>\r\n                                <TextInput\r\n                                    value={anchor.name}\r\n                                    onChange={(v) => this.onChangeName(v)}\r\n                                    inputStyle={{\r\n                                        width: \"auto\",\r\n                                        textAlign: \"left\"\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {rotate} from \"../../AwesomwGridLayoutHelper\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\n\r\nexport default class InspectorAdjustment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onRotationChange = (degree) => {\r\n        console.warn(\"onRotationChange\", degree)\r\n        let {item} = this.props;\r\n\r\n        rotate(item, degree);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let rotate = item.getFromData(\"transform.rotateDegree\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Adjust\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorAdjustRotate\">\r\n                            <span className=\"InspectorOverflowDirTitle\">\r\n                                Rotate\r\n                            </span>\r\n                            <NumberInputWithUnit\r\n                                min={0}\r\n                                max={360}\r\n                                value={rotate || 0}\r\n                                onChange={(value) => {\r\n                                    this.onRotationChange(value);\r\n                                }}\r\n                                units={[\"°\"]}\r\n                                unit={\"°\"}\r\n                                inputStyle={{\r\n                                    width: 64,\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                                disableUnit\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {assignData, cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport {getCompositeDesignData, setDataInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorPosition from \"../../Test/Inspector/InspectorPosition\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport InspectorAdjustment from \"../../Test/Inspector/InspectorAdjustment\";\r\n\r\nexport default class AGLComponent extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    resolveDesignData = () => {\r\n        // Must Override\r\n    };\r\n\r\n    getData = () => {\r\n        let componentData = this.getDefaultData && this.getDefaultData();\r\n        let componentBpData = componentData.bpData;\r\n        componentData = assignData(componentData, cloneObject(this.props.data));\r\n        if (componentBpData) {\r\n            let tempBpData = componentData.bpData;\r\n            componentData.bpData = assignData(componentBpData, tempBpData);\r\n        }\r\n\r\n        return componentData;\r\n    };\r\n\r\n    getAgl = () => {\r\n        return this.props.aglRef.current;\r\n    };\r\n\r\n    onDesignChange = (designKey, value) => {\r\n        console.log(\"onDesignChange\", designKey, value)\r\n        setDataInBreakpoint(designKey, value, this.getAgl(), true, undefined, true);\r\n        this.updateDesign(getCompositeDesignData(this.getAgl()));\r\n    };\r\n\r\n    getInspector = () => {\r\n        if (this.getInspectorOverride)\r\n            return this.getInspectorOverride();\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPosition\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAdjustment\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class MenuButton extends React.Component {\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    onClick = (e) => {\r\n        let {menu} = this.props;\r\n        this.props.select.updateMenu((typeof menu === \"function\") ? menu(e) : menu);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                {\r\n                    this.props.icon\r\n                }\r\n                {\r\n                    this.props.children\r\n                }\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport '../../HelperStyle.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class MenuBaseIndexTitle extends React.Component {\r\n    render () {\r\n        return (\r\n            <div\r\n                className=\"MenuBaseIndexTitle\"\r\n            >\r\n                <ButtonBase\r\n                    disableRipple={!this.props.onIndexClick}\r\n                    onClick={(e) => {\r\n                        this.props.onIndexClick &&\r\n                        this.props.onIndexClick(e, this.props.title, this.props.index)\r\n                    }}\r\n                >\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n                </ButtonBase>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst LightTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#fff\",\r\n        color: '#000000',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 14,\r\n    },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip\r\n\r\nexport const LightMenuTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#fff\",\r\n        color: '#000000',\r\n        boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n        fontSize: 14,\r\n        padding: 0\r\n    },\r\n}))(Tooltip);\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport Draggable from 'react-draggable';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport '../../HelperStyle.css';\r\nimport MenuBaseIndexTitle from \"./MenuBaseIndexTitle\";\r\nimport LightTooltip from \"../../Components/Containers/Menus/Components/LightTooltip\";\r\n\r\nexport default class MenuBase extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedIndexNo: props.defaultIndexNo\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        this.props.select.updateMenu();\r\n    };\r\n\r\n    onIndexClick = (e, key, selectedIndexNo) => {\r\n        this.setState({selectedIndexNo})\r\n    };\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Draggable\r\n                handle=\".MenuBaseHeaderTitle\"\r\n                bounds=\"parent\"\r\n                defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n            >\r\n                <div\r\n                    className=\"MenuBaseRoot\"\r\n                    style={this.props.styles.root}\r\n                >\r\n                    {/*Header*/}\r\n                    <div\r\n                        className=\"MenuBaseHeaderContainer\"\r\n                    >\r\n                        <span className=\"MenuBaseHeaderTitle\">\r\n                            {this.props.menuTitle || \"Menu Title\"}\r\n                        </span>\r\n\r\n                        <IconButton\r\n                            onClick={this.close}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={16}\r\n                                height={16}\r\n                                src={require('../../icons/close.svg')}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                    {/*Body*/}\r\n                    <div\r\n                        className=\"MenuBaseBodyContainer\"\r\n                    >\r\n                        <div className=\"MenuBaseBodyIndex\">\r\n                            {\r\n                                this.props.index.map((indexData, i) => {\r\n                                    return (\r\n                                        <LightTooltip\r\n                                            key={i}\r\n                                            title={indexData.key}\r\n                                            PopperProps={{\r\n                                                style: {\r\n                                                    zIndex: 999999999999999\r\n                                                }\r\n                                            }}\r\n                                            placement=\"right\"\r\n                                        >\r\n                                            <div\r\n                                                key={i}\r\n                                                style={{\r\n                                                    backgroundColor: this.state.selectedIndexNo === i &&\r\n                                                        'rgba(115, 115, 115, 0.36)'\r\n                                                }}\r\n                                            >\r\n                                                <IconButton\r\n                                                    key={indexData.key}\r\n                                                    onClick={(e) => {\r\n                                                        this.onIndexClick(e, indexData.key, i);\r\n                                                    }}\r\n                                                    buttonBaseStyle={{\r\n                                                        marginLeft: 0\r\n                                                    }}\r\n                                                >\r\n                                                    {indexData.icon}\r\n                                                </IconButton>\r\n                                            </div>\r\n                                        </LightTooltip>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"MenuBaseBodyOptions\">\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                <MenuBaseIndexTitle\r\n                                    index={this.state.selectedIndexNo}\r\n                                    key={this.props.options[this.state.selectedIndexNo].key}\r\n                                    title={this.props.options[this.state.selectedIndexNo].key}\r\n                                />\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                this.props.options[this.state.selectedIndexNo].render\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo === undefined &&\r\n                                this.props.options.map((option, i) => {\r\n                                    return (\r\n                                        <MenuBaseIndexTitle\r\n                                            index={i}\r\n                                            key={option.key}\r\n                                            title={option.key}\r\n                                            onIndexClick={this.onIndexClick}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nMenuBase.defaultProps = {\r\n    styles: {}\r\n};\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport RCSlider from 'rc-slider';\r\n\r\nexport default class Slider extends React.Component {\r\n    render () {\r\n        return (\r\n            <RCSlider\r\n                {...this.props}\r\n                min={this.props.min}\r\n                max={this.props.max}\r\n                step={this.props.step}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInputControlled extends React.Component {\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 24 }}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                    handleStyle={{\r\n                        marginLeft: 7\r\n                    }}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class Image extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            src: props.src,\r\n            hasError: false,\r\n        };\r\n    }\r\n\r\n    onError = (e) => {\r\n        if (!this.state.hasError) {\r\n            let {errorsrc} = this.props;\r\n            this.setState({\r\n                src: errorsrc,\r\n                hasError: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <img\r\n                {...this.props}\r\n                // onError={this.onError}\r\n                src={this.state.src/* || this.props.errorsrc*/}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends React.Component {\r\n    componentWillUnmount() {\r\n        if (this.defaultNode) {\r\n            document.body.removeChild(this.defaultNode);\r\n        }\r\n        this.defaultNode = null;\r\n    }\r\n\r\n    canUseDOM = !!(\r\n        typeof window !== 'undefined' &&\r\n        window.document &&\r\n        window.document.createElement\r\n    );\r\n\r\n    render() {\r\n        if (!this.canUseDOM) {\r\n            return null;\r\n        }\r\n        let node = this.props.node;\r\n        if (this.props.disabled) {\r\n            return this.props.children;\r\n        }\r\n        if (this.props.nodeId) {\r\n            node = document && document.getElementById(this.props.nodeId);\r\n        }\r\n        if (!node && !this.defaultNode) {\r\n            this.defaultNode = document.createElement('div');\r\n            document.body.appendChild(this.defaultNode);\r\n        }\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            node || this.defaultNode\r\n        );\r\n    }\r\n}\r\n\r\nPortal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    node: PropTypes.any\r\n};\r\n\r\nexport default Portal;\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport './ThemeColorPicker.css';\r\n// import {SketchPicker} from \"react-color\";\r\nimport SketchPicker from \"react-color/lib/components/sketch/Sketch\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class HexColorPicker extends React.Component {\r\n    onChangeComplete = (color) => {\r\n        this.props.onChangeComplete(color.hex);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Portal node={document.body}>\r\n                <div style={ {\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                    zIndex: 999999999999\r\n                }} onClick={ this.props.onClose }/>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    left: \"50%\",\r\n                    top: \"50%\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                    zIndex: 999999999999\r\n                }}>\r\n                    <SketchPicker\r\n                        color={this.props.color}\r\n                        onChangeComplete={ this.onChangeComplete }\r\n                        disableAlpha={this.props.disableAlpha}\r\n                        width={this.props.width || 224}\r\n                    />\r\n                </div>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport './ThemeColorPicker.css';\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport Draggable from \"react-draggable\";\r\nimport Portal from \"../../Portal\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport chroma from \"chroma-js\";\r\nimport HexColorPicker from \"./HexColorPicker\";\r\nimport {parseColor} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nconst colorKeys = [\r\n    \"1\",\"2\",\"3\",\"4\",\"5\",\r\n];\r\n\r\nexport default class ThemeColorPicker extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: props.color\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    onSelectColor = (color) => {\r\n        this.setState({color});\r\n        this.props.onChangeComplete && this.props.onChangeComplete(color);\r\n    };\r\n\r\n    onAddColor = (color) => {\r\n        let siteData = this.context.siteData;\r\n        if (!siteData.myColors.find(c => c === color))\r\n            siteData.myColors.unshift(color);\r\n\r\n        siteData.myColors = siteData.myColors.slice(0, 17);\r\n\r\n        this.onSelectColor(color);\r\n        this.context.update();\r\n    };\r\n\r\n    onAddColorClick = () => {\r\n        this.setState({addColor: true});\r\n    };\r\n\r\n    render() {\r\n        let {editor} = this.context;\r\n        let siteData = this.context.siteData;\r\n        let themeColorCategoryItems = siteData.theme.Colors.items;\r\n        return (\r\n            <Portal node={document.body}>\r\n                <div style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                    zIndex: 999999999999999\r\n                }}>\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        top: '0px',\r\n                        right: '0px',\r\n                        bottom: '0px',\r\n                        left: '0px',\r\n                    }} onClick={ (e) => this.props.onClose && this.props.onClose() }/>\r\n\r\n                    <Draggable\r\n                        handle=\".ThemeColorPickerHeaderTitle\"\r\n                        bounds=\"parent\"\r\n                        defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n                    >\r\n                        <div className=\"ThemeColorPickerRoot\"\r\n                             style={{\r\n                                 zIndex: 99999999999999999,\r\n                             }}>\r\n                            <div className=\"ThemeColorPickerHeaderRoot\">\r\n                                <div className=\"ThemeColorPickerHeaderTitle\">\r\n                                    Color Picker\r\n                                </div>\r\n\r\n                                <IconButton\r\n                                    onClick={(e) => this.props.onClose && this.props.onClose()}\r\n                                    className=\"ThemeColorPickerHeaderClose\"\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={require('../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                Site Colors\r\n                                <div className=\"ThemeColorPickerSiteColorEdit\">\r\n                                    Edit\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorGrid\">\r\n                                {\r\n                                    colorKeys.map(key => {\r\n                                        return (\r\n                                            Object.values(themeColorCategoryItems).map(item => {\r\n                                                console.log(\"this.state.color\", this.state.color, parseColor(this.state.color, undefined, editor))\r\n                                               return (\r\n                                                   <div\r\n                                                       key={item.name + key}\r\n                                                       className={`ThemeColorPickerSiteColorItem ${\r\n                                                           parseColor(this.state.color, undefined, editor) ===\r\n                                                           editor.themeManagerRef.current.getColor(item.name, key) ?\r\n                                                               \"ThemeColorPickerSiteColorItemSelected\": ''\r\n                                                           }`}\r\n                                                       style={{\r\n                                                           backgroundColor:\r\n                                                               editor.themeManagerRef.current.getColor(item.name, key)\r\n                                                       }}\r\n                                                       onClick={(e) => {\r\n                                                           this.onSelectColor(\r\n                                                               {\r\n                                                                   paletteName: item.name,\r\n                                                                   key: key\r\n                                                               }\r\n                                                           )\r\n                                                       }}\r\n                                                   >\r\n\r\n                                                   </div>\r\n                                               )\r\n                                            })\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                My Colors\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerMyColorGrid\">\r\n                                <div className=\"ThemeColorPickerMyColorItemAdd\" onClick={this.onAddColorClick}>\r\n                                    <Image\r\n                                        width={10}\r\n                                        height={10}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/add.svg'}\r\n                                    />\r\n                                </div>\r\n\r\n                                {\r\n                                    Object.values(siteData.myColors).map(color => {\r\n                                        return (\r\n                                            <div className={`ThemeColorPickerMyColorItem ${\r\n                                                    this.state.color === color ?\r\n                                                        \"ThemeColorPickerMyColorItemSelected\": ''\r\n                                                    }`}\r\n                                                 key={color}\r\n                                                 style={{\r\n                                                backgroundColor: color\r\n                                            }}\r\n                                                 onClick={(e) => {\r\n                                                     this.onSelectColor(\r\n                                                         color\r\n                                                     )\r\n                                                 }}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                <div className=\"ThemeColorPickerSiteColorHexTitle\">\r\n                                    <div className=\"ThemeColorPickerSiteColorHexAddColor\" onClick={this.onAddColorClick}>\r\n                                        Add Color\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"ThemeColorPickerSiteColorHex\">\r\n                                    {chroma(parseColor(this.state.color, 1, editor)).hex()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Draggable>\r\n\r\n                    {/*{\r\n                        this.state.addColor &&\r\n                        <>\r\n                            <div style={ {\r\n                                position: 'fixed',\r\n                                top: '0px',\r\n                                right: '0px',\r\n                                bottom: '0px',\r\n                                left: '0px',\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.2)'\r\n                            }} onClick={ () => this.setState({addColor: undefined}) }/>\r\n                            <div style={{\r\n                                position: 'absolute',\r\n                                left: \"50%\",\r\n                                top: \"50%\",\r\n                                transform: \"translate(-50%, -50%)\",\r\n                                zIndex: '2',\r\n                            }}>\r\n                                <SketchPicker\r\n                                    color={this.state.color}\r\n                                    onChangeComplete={ this.onAddColor }\r\n                                    disableAlpha={this.props.disableAlpha}\r\n                                    width={224}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    }*/}\r\n                    {\r\n                        this.state.addColor &&\r\n                        <HexColorPicker\r\n                            onClose={() => this.setState({addColor: undefined})}\r\n                            color={this.state.color}\r\n                            onChangeComplete={ this.onAddColor }\r\n                            disableAlpha={this.props.disableAlpha}\r\n                            width={224}\r\n                        />\r\n                    }\r\n                </div>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport SliderInputControlled from \"./SliderInputControlled\";\r\nimport ThemeColorPicker from \"../../Test/Theme/ThemeColorPicker\";\r\nimport chroma from \"chroma-js\";\r\nimport {parseColor} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class ColorPicker extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.lastValue = props.color || 'rgba(0,0,0,0)';\r\n    }\r\n\r\n    getRgbA = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if (value instanceof Object) {\r\n            value = this.props.editor.themeManagerRef.current.getColor(value.paletteName, value.key);\r\n        }\r\n\r\n        let color = chroma(value);\r\n        return {\r\n            r: color.rgba()[0],\r\n            g: color.rgba()[1],\r\n            b: color.rgba()[2],\r\n            a: color.rgba()[3]\r\n        }\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        if (this.state.displayColorPicker)\r\n            this.setState({ displayColorPicker: false });\r\n        else\r\n            this.setState({ displayColorPicker: e.target })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        if (color instanceof Object) {\r\n            console.log(\"handlehangeComplete1 this.lastValue\", this.lastValue, parseColor(this.lastValue, this.lastValue.alpha, this.props.editor));\r\n            color.alpha = chroma(parseColor(this.lastValue, this.lastValue.alpha, this.props.editor)).alpha();\r\n            console.log(\"handlehangeComplete1 alpha\", color.alpha);\r\n            this.lastValue = color;\r\n            // color.alpha = chroma(parseColor(color, undefined, this.props.editor)).alpha();\r\n            this.props.onDesignChange(this.props.designKey, color);\r\n            return;\r\n        }\r\n\r\n        console.log(\"handleChangeComplete\", this.getColorAndAlpha().alpha)\r\n        let alpha = this.getColorAndAlpha().alpha || 100;\r\n\r\n        let value = this.lastValue = chroma(color).alpha(alpha / 100).css();\r\n\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n    };\r\n\r\n    getColorAndAlpha = () => {\r\n        console.log(\"getColorAndAlpha\",\r\n            this.props.color, parseColor(this.props.color, 1, this.props.editor), parseColor(this.props.color, this.props.color && this.props.color.alpha, this.props.editor));\r\n\r\n        let result = {\r\n            color: chroma(parseColor(this.props.color, 1, this.props.editor)).alpha(0).hex(),\r\n            alpha: chroma(parseColor(this.props.color, this.props.color && this.props.color.alpha, this.props.editor)).alpha() * 100\r\n        };\r\n\r\n        console.log(\"getColorAndAlpha result\", result)\r\n        return result;\r\n    };\r\n\r\n    handleAlphaChange = (alpha) => {\r\n        if (this.lastValue instanceof Object) {\r\n            this.lastValue.alpha = alpha / 100;\r\n        } else {\r\n            console.log(\"handleAlphaChange\", alpha)\r\n            this.lastValue = chroma(this.lastValue).alpha(alpha / 100).css();\r\n        }\r\n        this.props.onDesignChange(this.props.designKey, this.lastValue);\r\n    };\r\n\r\n    render () {\r\n        let {color, alpha} = this.getColorAndAlpha();\r\n        console.log(\"colorpicker\", color, alpha)\r\n        return (\r\n                <div className=\"CommonMenuRoot ColorPickerRoot\">\r\n                    <ButtonBase\r\n                        style={{\r\n                            background: `url(${process.env.PUBLIC_URL}'/static/icon/transparency.png')`,\r\n                        }}\r\n                        className=\"ColorPickerRGB\"\r\n                        onClick={ this.handleClick }\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                background: parseColor(this.props.color, alpha/100, this.props.editor),\r\n                            }}\r\n                        />\r\n                    </ButtonBase>\r\n\r\n                    <div\r\n                        className=\"ColorPickerAlpha\"\r\n                    >\r\n                        <SliderInputControlled\r\n                            min={0}\r\n                            max={100}\r\n                            value={alpha || 0}\r\n                            onChange={this.handleAlphaChange}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.displayColorPicker &&\r\n                            <ThemeColorPicker\r\n                                color={color}\r\n                                onClose={this.handleClose}\r\n                                onChangeComplete={ this.handleChangeComplete }\r\n                                disableAlpha\r\n                                editor={this.props.editor}\r\n                                defaultPosition={\r\n                                    this.state.displayColorPicker.getBoundingClientRect()\r\n                                }\r\n                            />\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nexport default class Background extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Background</p>\r\n\r\n                <ColorPicker\r\n                    color={this.props.color}\r\n                    designKey={this.props.designKey}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.editor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class Divider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"Divider\" style={this.props.style}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 24 }}\r\n                    step={this.props.step}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value || 0}\r\n                    onChange={this.onChange}\r\n                    handleStyle={{\r\n                        marginLeft: 7\r\n                    }}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value || 0}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\nimport 'rc-slider/assets/index.css';\r\nimport '../style.css';\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\n\r\nexport default class Border extends React.Component {\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.border.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Width (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={15}\r\n                            value={this.props.border.width}\r\n                            designKey={`${this.props.designKey}.width`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport NumberInput from \"../../../../Menus/CommonComponents/NumberInput\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\nimport {cloneObject} from \"../../../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class Corners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            radius: cloneObject(props.radius),\r\n            link: true\r\n        }\r\n    }\r\n\r\n    onChange = (value, side) => {\r\n        let radius = this.state.radius;\r\n        let changeSide = [side];\r\n        if (this.state.link)\r\n            changeSide = [\"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"];\r\n        changeSide.forEach(_side => {\r\n            radius[_side] = value;\r\n            this.props.onDesignChange(`${this.props.designKey}.${_side}`, value);\r\n        });\r\n        this.setState({radius});\r\n    };\r\n\r\n    onLinkClick = () => {\r\n        this.setState({link: !this.state.link});\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Radius (px)</p>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"topLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"topRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{position: \"relative\"}}>\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowTopLeft\"\r\n                             style={{\r\n                                 borderTopLeftRadius: this.state.radius[\"topLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowTopRight\"\r\n                             style={{\r\n                                 borderTopRightRadius: this.state.radius[\"topRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowBottomLeft\"\r\n                             style={{\r\n                                 borderBottomLeftRadius: this.state.radius[\"bottomLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowBottomRight\"\r\n                             style={{\r\n                                 borderBottomRightRadius: this.state.radius[\"bottomRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersLink\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginLeft: 0\r\n                            }}\r\n                            onClick={this.onLinkClick}\r\n                        >\r\n                            {\r\n                                this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../../icons/chain.svg')} />\r\n                            }\r\n                            {\r\n                                !this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../../icons/unlink.svg')} />\r\n                            }\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class CircularSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.rect = this.rootDivRef.current.getBoundingClientRect();\r\n        window.addEventListener(\"pointermove\", this.onMouseMove);\r\n        window.addEventListener(\"pointerup\", this.onMouseUp);\r\n\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                className={`CircularSliderRoot ${this.props.className}`}\r\n                style={{\r\n                    transform: `rotate(${this.props.value}deg)`\r\n                }}\r\n                onMouseDown={this.onMouseDown}\r\n                ref={this.rootDivRef}\r\n            >\r\n                <div\r\n                    className=\"CircularSliderBg\"\r\n                    style={{\r\n                        width: this.props.width || 90,\r\n                        height: this.props.width || 90\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"CircularSliderLine\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderCenter\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderKnob\"\r\n                    />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport CircularSlider from \"./CircularSlider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class Angle extends React.Component {\r\n    onChange = (value) => {\r\n        if (this.props.loop && value === 360)\r\n            value = 0;\r\n\r\n        this.props.onChange(value.toFixed(0));\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"AngleRoot\">\r\n                <CircularSlider\r\n                    {...this.props}\r\n                    className=\"AngleSlider\"\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                    min={0}\r\n                    max={360}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"AngleInput\"\r\n                    min={0}\r\n                    max={360}\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport '../style.css';\r\nimport Angle from \"../../../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nconst deg2rad = Math.PI/180;\r\nconst rad2deg = 180/Math.PI;\r\nexport default class Shadow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange = (key, value) => {\r\n        let shadow = this.props.shadow;\r\n        shadow[key] = value;\r\n        this.setState({shadow});\r\n        this.props.onDesignChange(`${this.props.designKey}.${key}`, value);\r\n    };\r\n\r\n    getDegree = (xOffset, yOffset) => {\r\n        if (xOffset === undefined) xOffset = -1;\r\n        if (yOffset === undefined) yOffset = 1;\r\n        let ratio = (xOffset) / (yOffset);\r\n        let degree;\r\n        if (xOffset < 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg;\r\n        if (xOffset < 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 360;\r\n\r\n        return Math.round(degree);\r\n    };\r\n\r\n    getRatio = (degree) => {\r\n        return Math.tan( degree * deg2rad );\r\n    };\r\n\r\n    calcDegree = (degree) => {\r\n        let ratio = this.getRatio(degree);\r\n        let xO, yO;\r\n        if (ratio === 0) {\r\n            xO = 0;\r\n            yO = 1;\r\n        } else if (ratio === Infinity) {\r\n            xO = 1;\r\n            yO = 0;\r\n        } else {\r\n            xO = ratio;\r\n            yO = 1;\r\n            if (Math.abs(ratio) > 1) {\r\n                xO /= Math.abs(ratio);\r\n                yO /= Math.abs(ratio);\r\n            }\r\n        }\r\n        this.onChange(\"xOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? -xO : xO);\r\n        this.onChange(\"yOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? yO : -yO);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                    <div className=\"ShadowRoot\">\r\n                        <Angle\r\n                            className=\"ShadowAngle\"\r\n                            angle={this.getDegree(this.props.shadow.xOffset , this.props.shadow.yOffset)}\r\n                            onChange={this.calcDegree}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Distance (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.distance}\r\n                            designKey={`${this.props.designKey}.distance`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Size (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.size}\r\n                            designKey={`${this.props.designKey}.size`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Blur (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.blur}\r\n                            designKey={`${this.props.designKey}.blur`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.shadow.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Components/Background\";\r\nimport Border from \"./Components/Border\";\r\nimport Corners from \"./Components/Corners\";\r\nimport Shadow from \"./Components/Shadow\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class BorderDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/water.svg'} />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/border.svg'} />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/corner.svg'} />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                icon: <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" className=\"symbol symbol-shadowDesign\">\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M11.5 14.5h-8v-2h8c.55 0 1-.45 1-1v-9h2v9c0 1.65-1.35 3-3 3zm-3-4h-7c-1.1 0-2-.9-2-2v-7c0-1.1.9-2 2-2h7c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2z\"/>\r\n                </svg>\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                render: <Border\r\n                    border={design.border}\r\n                    designKey={\"design.border\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                render: <Corners\r\n                    radius={design.border.radius}\r\n                    designKey={\"design.border.radius\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                render: <Shadow\r\n                    shadow={design.border.shadow}\r\n                    designKey={\"design.border.shadow\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport classNames from \"classnames\";\r\n\r\nexport default class GridViewer extends React.Component {\r\n    render () {\r\n        let classes = classNames(\r\n            \"GridViewerRoot\",\r\n            this.props.className\r\n        );\r\n        return (\r\n            <div className={classes}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport GridViewer from \"../../../../Menus/CommonComponents/GridViewer\";\r\nimport classNames from \"classnames\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class AnimationSelector extends React.Component {\r\n    onSelectAnimation = (name) => {\r\n        this.props.onDesignChange(this.props.designKey, name);\r\n        window.requestAnimationFrame(() => {\r\n            this.props.item.playAnimation();\r\n        });\r\n    };\r\n\r\n    render () {\r\n        let {allAnimationNames, animation} = this.props;\r\n        let noneClasses = classNames(\r\n            \"MenuOptionAnimationItem\",\r\n            (!animation || !animation.name) && \"MenuOptionAnimationItemSelected\"\r\n        );\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n\r\n                <GridViewer>\r\n                    <ButtonBase\r\n                        className={noneClasses}\r\n                        key='none'\r\n                        onClick={(e) => this.onSelectAnimation()}\r\n                    >\r\n                        <img\r\n                            className=\"MenuOptionAnimationItemImage\"\r\n                            draggable={false} width={48} height={48}\r\n                            // src={process.env.PUBLIC_URL + `/static/icons/animation/${name}.svg`} />\r\n                            src={process.env.PUBLIC_URL + `/static/icon/animation-black.svg`}\r\n                        />\r\n                        <span>\r\n                            none\r\n                        </span>\r\n                    </ButtonBase>\r\n                    {\r\n                        allAnimationNames.map(name => {\r\n                            let classes = classNames(\r\n                                \"MenuOptionAnimationItem\",\r\n                                animation && name === animation.name && \"MenuOptionAnimationItemSelected\"\r\n                            );\r\n                            let displayName = name.split(/(?=[A-Z])/).join(' ');\r\n                            displayName = displayName.charAt(0).toUpperCase() + displayName.slice(1);\r\n                            return (\r\n                                <ButtonBase\r\n                                    className={classes}\r\n                                    key={name}\r\n                                    onClick={(e) => this.onSelectAnimation(name)}\r\n                                >\r\n                                    <img\r\n                                        className=\"MenuOptionAnimationItemImage\"\r\n                                        draggable={false} width={48} height={48}\r\n                                        // src={process.env.PUBLIC_URL + `/static/icons/animation/${name}.svg`} />\r\n                                        src={process.env.PUBLIC_URL + `/static/icon/animation-black.svg`}\r\n                                    />\r\n                                    <span className=\"MenuOptionAnimationItemTitle\">\r\n                                        {displayName}\r\n                                    </span>\r\n                                </ButtonBase>\r\n                            )\r\n                        })\r\n                    }\r\n                </GridViewer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {DynamicAnimations} from \"../../../../Dynamic/DynamicComponents\";\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\n\r\nexport default class AnimationOptions extends React.Component {\r\n\r\n    render () {\r\n        let {animation, onDesignChange, designKey, item} = this.props;\r\n        if (!animation || !animation.name) {\r\n            return <div className=\"MenuOptionSectionTitle\" style={{\r\n                textAlign: \"center\"\r\n            }}>\r\n                Select an Animation to See Options\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection MenuOptionGrid2\">\r\n                    <span className=\"MenuOptionSectionTitleNoMargin\">Play animation</span>\r\n\r\n                    <IconButton onClick={(e) => {\r\n                                    item.playAnimation();\r\n                                }}\r\n                                imageContainerStyle={{\r\n                                    padding: 0\r\n                                }}\r\n                                buttonBaseStyle={{\r\n                                    borderRadius: 999\r\n                                }}\r\n                    >\r\n                        <img draggable={false} width={24} height={24}\r\n                                   src={process.env.PUBLIC_URL + '/static/icon/play-button.svg'}\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                {\r\n                    animation.name &&\r\n                        DynamicAnimations[animation.name].getOptions(this.props)\r\n                }\r\n\r\n                {\r\n                    animation.name && DynamicAnimations[animation.name].getOptions(this.props) &&\r\n                    <Divider/>\r\n                }\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Duration</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={5}\r\n                            step={0.1}\r\n                            value={animation.options? animation.options.duration !== undefined?\r\n                                animation.options.duration: 1 : 1}\r\n                            designKey={`${designKey}.duration`}\r\n                            onDesignChange={onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Delay</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={10}\r\n                            step={0.1}\r\n                            value={animation.options? animation.options.delay !== undefined?\r\n                                animation.options.delay: 0 : 0}\r\n                            designKey={`${designKey}.delay`}\r\n                            onDesignChange={onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionAnimationOnceRoot\">\r\n                    <p className=\"MenuOptionSectionTitle\">Only animate first time</p>\r\n                    <Switch\r\n                        className=\"InspectorOverflowDirSwitch\"\r\n                        checked={animation.options && animation.options.once ? animation.options.once : false}\r\n                        onChange={(e) => {\r\n                            onDesignChange(`${designKey}.once`, e.target.checked);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\nimport AnimationSelector from \"./Components/AnimationSelector\";\r\nimport AnimationOptions from \"./Components/AnimationOptions\";\r\n\r\nexport default class AnimationDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Animation Type\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/animation-black.svg'} />\r\n            },\r\n            {\r\n                key: \"Animation Options\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/time.svg'} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Animation Type\",\r\n                render: <AnimationSelector\r\n                    animation={design.animation}\r\n                    designKey={\"design.animation.name\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    allAnimationNames={[\r\n                        'fadeIn',\r\n                        'bounceIn',\r\n                        'glideIn',\r\n                        'floatIn',\r\n                        'expandIn',\r\n                        'spinIn',\r\n                        'flyIn',\r\n                        'turnIn',\r\n                        'arcIn',\r\n                        'puffIn',\r\n                        'foldIn',\r\n                        'flipIn',\r\n                        'reveal',\r\n                    ]}\r\n                    item={this.props.item}\r\n                />\r\n            },\r\n            {\r\n                key: \"Animation Options\",\r\n                render: <AnimationOptions\r\n                    animation={design.animation}\r\n                    designKey={\"design.animation.options\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    item={this.props.item}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n                defaultIndexNo={0}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport BorderDesign from \"./Menus/BorderDesign\";\r\nimport '../../HelperStyle.css';\r\nimport './ContainerBase.css';\r\nimport {getCompositeDesignData, parseColor, resolveDesignData} from \"../../AwesomwGridLayoutHelper\";\r\nimport AnimationDesign from \"./Menus/AnimationDesign\";\r\n\r\nexport default class ContainerBase extends AGLComponent{\r\n    resolveDesignData = () => {\r\n        resolveDesignData(this, \"border\", {shadow: {\r\n                xOffset: -1,\r\n                yOffset: 1,\r\n                distance: 1,\r\n                size: 0,\r\n                blur: 4\r\n        }, radius: {}});\r\n    };\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <BorderDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />,\r\n            <MenuButton\r\n                key={2}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/animation.svg'} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <AnimationDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n    };\r\n\r\n    getStaticChildren = () => {\r\n        this.resolveDesignData();\r\n\r\n        let border = getCompositeDesignData(this).border;\r\n        let fillColor = getCompositeDesignData(this).fillColor;\r\n        if (fillColor)\r\n            fillColor = parseColor(fillColor, fillColor.alpha, this.props.editor);\r\n\r\n        border.radius = border.radius || {};\r\n        border.shadow = border.shadow || {};\r\n\r\n        let shadowColor = border.shadow.color;\r\n        if (shadowColor)\r\n            shadowColor = parseColor(shadowColor, shadowColor.alpha, this.props.editor);\r\n        let borderColor = border.color;\r\n        if (borderColor)\r\n            borderColor = parseColor(borderColor, borderColor.alpha, this.props.editor);\r\n\r\n        return <div\r\n            className=\"ContainerBaseBorderRoot\"\r\n            style={{\r\n                border:\r\n                    `${border.width || 0}px solid ${borderColor || 'rgba(186,218,85,0.63)'}`,\r\n                backgroundColor: fillColor,\r\n                borderRadius:\r\n                    `${border.radius.topLeft || 0}px ${border.radius.topRight || 0}px ${border.radius.bottomRight || 0}px ${border.radius.bottomLeft || 0}px`,\r\n                boxShadow: `${(border.shadow.xOffset) * (border.shadow.distance)}px ${(border.shadow.yOffset) * (border.shadow.distance)}px ${border.shadow.blur}px ${border.shadow.size}px ${shadowColor || 'rgba(186,218,85,0.63)'}`\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"ContainerBase\"\r\n                aglComponent={this}\r\n                {...this.props}\r\n                data={this.getData()}\r\n                getPrimaryOptions={this.getPrimaryOptions}\r\n                getInspector={this.getInspector}\r\n                getStaticChildren={this.getStaticChildren}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nContainerBase.defaultProps = {\r\n    tagName: \"ContainerBase\"\r\n};\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Components/Background\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class SectionDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/water.svg'} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle={this.props.menuTitle || \"Box Design\"}\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class Header extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Header Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        console.log(\"updateDesign\", compositeDesign.fillColor)\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.props.editor);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={[\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Header\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"1/1/2/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{\r\n                            // backgroundColor: \"#bcbcbc\",\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"150px\",\r\n                            zIndex: \"50\"\r\n                        }}\r\n                        as=\"header\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.defaultProps = {\r\n    tagName: \"Header\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class Footer extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Footer Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.props.editor);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={[\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Footer\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"3/1/4/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"100px\",\r\n                            zIndex: \"51\"\r\n                        }}\r\n                        as=\"footer\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nFooter.defaultProps = {\r\n    tagName: \"Footer\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport {getCompositeDesignData, parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\n\r\nexport default class Section extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Section Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.props.editor);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={!this.props.isVerticalSection ? [\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ] : [\r\n                        'height', 'minHeight', 'maxHeight'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Section\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"2/1/3/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{...{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"500px\",\r\n                        }, ...this.props.style}}\r\n                        designStyle={{...{\r\n                                // backgroundColor: \"#b3faf5\",\r\n                        }, ...this.props.designStyle}}\r\n                        data={this.getData()}\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        as={\"section\"}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nSection.defaultProps = {\r\n    tagName: \"Section\"\r\n};\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport ColorPicker from \"../../Menus/CommonComponents/ColorPicker\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\nimport Background from \"../../Components/Containers/Menus/Components/Background\";\r\n\r\nexport default class InspectorBackground extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { open: true};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeColor = (key, value) => {\r\n        let {item} = this.props;\r\n        setStyleParam(\"backgroundColor\", value,\r\n            item, true, undefined, true);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let style = item.getFromData(\"style\") || {};\r\n        return (\r\n            <>\r\n                <InspectorTitle defaultOpen title=\"Background\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <span className=\"InspectorBackgroundColorTitle\">\r\n                            Color\r\n                        </span>\r\n                        <ColorPicker\r\n                            color={style.backgroundColor || 'rgba(0, 0, 0, 0)'}\r\n                            designKey={\"design.fillColor\"}\r\n                            // onDesignChange={this.onChangeColor}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                            editor={this.props.item.props.editor}\r\n                        />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport Section from \"../Containers/Section\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {initGriddata, swapArrayElements} from \"../../AwesomeGridLayoutUtils\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorBackground from \"../../Test/Inspector/InspectorBackground\";\r\nimport './PageBase.css';\r\nimport {isHideInBreakpoint, parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nconst mainColTemplate = \"minmax(0px,1fr)\";\r\n\r\nexport default class PageBase extends AGLComponent {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.gridTemplateRows = \"auto\";\r\n        this.gridTemplateColumns = mainColTemplate;\r\n        this.gridX = 0;\r\n        this.gridY = 1;\r\n\r\n        this.allSectionsH = [];\r\n        this.allSectionsV = [null];\r\n\r\n        this.root = React.createRef();\r\n\r\n        this.initKeyboard();\r\n\r\n        this.initDataFromPageData(props);\r\n    }\r\n\r\n    initDataFromPageData = (props) => {\r\n        if (!props.griddata.initialized)\r\n            initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (!props.griddata.allSectionsH)\r\n            props.griddata.allSectionsH = [];\r\n        if (!props.griddata.allSectionsV)\r\n            props.griddata.allSectionsV = [null];\r\n\r\n        this.allSectionsH = props.griddata.allSectionsH;\r\n        this.allSectionsV = props.griddata.allSectionsV;\r\n        let grid = this.props.breakpointmanager.getFromData(props.griddata, \"grid\");\r\n        if (grid) {\r\n            this.gridX = grid.x;\r\n            this.gridY = grid.y;\r\n            this.gridTemplateRows = grid.gridTemplateRows;\r\n            this.gridTemplateColumns = grid.gridTemplateColumns;\r\n        }\r\n    };\r\n\r\n    initKeyboard = () => {\r\n        window.addEventListener(\"keydown\", (e) => {\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if (key === 38 && ctrl) {\r\n                e.preventDefault();\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveUp(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 40 && ctrl) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Down\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveDown(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 37 && ctrl) {\r\n                e.preventDefault();\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveLeft(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 39 && ctrl) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Right\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveRight(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        // TODO remove tests\r\n        // this.addSectionQueue(0, \"Header\", DynamicComponents, undefined, false);\r\n        // this.addSectionQueue(1, \"Section\", DynamicComponents, undefined, false);\r\n        // this.addSectionQueue(2, \"Footer\", DynamicComponents, undefined, false);\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            draggable: false,\r\n            resizable: true,\r\n            pageResize: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"scroll\",\r\n                    overflowY: \"scroll\",\r\n                    auto: true\r\n                },\r\n                grid: {\r\n                    x: this.gridX,\r\n                    y: this.gridY,\r\n                    gridTemplateRows: this.gridTemplateRows,\r\n                    gridTemplateColumns: this.gridTemplateColumns\r\n                },\r\n                containerHeight: \"max-content\",\r\n            }\r\n        };\r\n    };\r\n\r\n    getHorizontalSection = (id) => {\r\n        return this.props.idMan.getItem(this.allSectionsH.find(h => {\r\n            return h === id;\r\n        }));\r\n    };\r\n\r\n    deleteHorizontalSection = (id) => {\r\n        let index = this.allSectionsH.findIndex(h => {\r\n            return h === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        if (this.allSectionsH.length === 1)\r\n            return false;\r\n\r\n        this.gridX--;\r\n\r\n        let currentSection = this.allSectionsH[index];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (firstRow >= x12 && lastRow <= x22) {\r\n                x22--;\r\n            } else if (lastRow <= x12) {\r\n                x22--;\r\n                x12--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (lastRow <= x13) {\r\n                x13--;\r\n                x23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        index >= 0 && this.allSectionsH.splice(index, 1);\r\n\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n        return true;\r\n    };\r\n\r\n    getVerticalSection = (id) => {\r\n        return this.props.idMan.getItem(this.allSectionsV.find(h => {\r\n            if (h === null)\r\n                return false;\r\n\r\n            return h === id;\r\n        })) || null;\r\n    };\r\n\r\n    deleteVerticalSection = (id) => {\r\n        let index = this.allSectionsV.findIndex(h => {\r\n            if (h === null)\r\n                return false;\r\n            return h === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        this.gridY--;\r\n\r\n        let currentSection = this.allSectionsV[index];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n        let firstCol = y1;\r\n        let lastCol = y2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (y12 >= firstCol) {\r\n                y12--;\r\n                y22--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (y13 >= lastCol) {\r\n                // fully right\r\n                y13--;\r\n                y23--;\r\n            } else if (y23 >= lastRow) {\r\n                // partially right\r\n                y23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.allSectionsV.splice(index, 1);\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n        return true;\r\n    };\r\n\r\n    addSectionQueue = (index, tagName, dynamicComponents, as, isVertical, callback) => {\r\n        if (!this.addQueue)\r\n            this.addQueue = [];\r\n\r\n        this.addQueue.push({\r\n            index, tagName, dynamicComponents, as, isVertical, callback\r\n        });\r\n\r\n        if (!this.checkingAddQueue) {\r\n            let nextOne = this.addQueue.shift();\r\n            this.checkAddQueue(nextOne);\r\n        }\r\n    };\r\n\r\n    checkAddQueue = (nextOne) => {\r\n        this.checkingAddQueue = true;\r\n        if (!nextOne.isVertical) {\r\n            this.addHorizontalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        } else {\r\n            this.addVerticalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        }\r\n    };\r\n\r\n    onItemPreDelete = (item) => {\r\n        let allow = this.deleteHorizontalSection(item.props.id);\r\n        if (!allow)\r\n            allow = this.deleteVerticalSection(item.props.id);\r\n\r\n        return allow;\r\n    };\r\n\r\n    // Just for vertical items\r\n    onItemPreResizeStop = (item, e, dir, delta, runtimeStyle) => {\r\n        console.log(\"small from top0\", this.allSectionsH, this.allSectionsV)\r\n        if (dir === 'e' || dir === 'w')\r\n            return;\r\n\r\n        let gridArea = item.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        this.root.current.prepareRects(false, true);\r\n        let yLineRefs = this.props.gridLine.getYlineRef(this.root.current.props.id);\r\n        let firstLineTop =\r\n            this.root.current.getGridLineRect(yLineRefs[0], 0, 'y', this.root.current).top;\r\n\r\n        console.log(\"small from top1\", this.allSectionsH, this.allSectionsV)\r\n        if (dir === 'n') {\r\n            if (delta.y > 0) { // small from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                console.log(\"small from top\", this.allSectionsH, this.allSectionsV)\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x1 && x12 < selectedX1) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n            else { // big from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x22 <= x1 && x12 >= selectedX1) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n        }\r\n        else { // dir === 's'\r\n            if (delta.y > 0) { // big from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x2 && x12 < selectedX2) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n            else { // small from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 < x2 && x12 >= selectedX2) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = -1;\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n        }\r\n\r\n        item.setGridArea(\r\n            `${x1}/${y1}/${x2}/${y2}`\r\n            , this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    addHorizontalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridX++;\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length + 1).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        let currentSectionIndex = index !== 0 ? index - 1 : 0;\r\n\r\n        let currentSection = this.allSectionsH[currentSectionIndex];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea ? `${index + 1}/${\r\n                currentSectionGridArea.split('/')[1]\r\n                }/${index + 2}/${\r\n                currentSectionGridArea.split('/')[3]\r\n                }` :\r\n            \"1/1/2/2\"\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            isSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n            }}\r\n            resizeSides={['s', 'n']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n        />;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstRow = index + 1;\r\n\r\n            if (x2 >= firstRow)\r\n                x2++;\r\n            if (x1 >= firstRow)\r\n                x1++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (x1 >= firstCol)\r\n                x1++;\r\n            if (x2 > firstCol)\r\n                x2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsH.splice(index, 0, agl.props.id);\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    getMainColIndex = (insertIndex) => {\r\n        let index = this.allSectionsV.findIndex(v => {\r\n            return v === null;\r\n        });\r\n\r\n        if (insertIndex !== undefined && index >= insertIndex)\r\n            return index + 1;\r\n\r\n        return index;\r\n    };\r\n\r\n    addVerticalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridY++;\r\n\r\n        let currentSectionIndex = index !== 0 ? index - 1 : 0;\r\n\r\n        let currentSection = this.allSectionsV[currentSectionIndex] || null;\r\n        if (currentSection === null)\r\n            currentSection = this.allSectionsV[currentSectionIndex + 1];\r\n\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea ? `${\r\n                currentSectionGridArea.split('/')[0]\r\n                }/${index + 1}/${\r\n                currentSectionGridArea.split('/')[2]\r\n                }/${index + 2}` :\r\n            `${1}/${index + 1}/${this.gridX + 1}/${index + 2}`\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            isSection\r\n            isVerticalSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n                isVerticalSection: true,\r\n            }}\r\n            style={{\r\n                width: \"200px\",\r\n                height: \"auto\",\r\n                minHeight: \"auto\",\r\n            }}\r\n            resizeSides={['e', 'w', 'n', 's']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n            onItemPreResizeStop={this.onItemPreResizeStop}\r\n        />;\r\n\r\n        console.log(\"this.allSectionsH\", this.allSectionsH)\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        let mainColIndex = this.getMainColIndex(index);\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length + 1).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsV.splice(index, 0, agl.props.id);\r\n            this.props.select.onScrollItem();\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    moveUp = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex - 1];\r\n        sideSection = this.props.idMan.getItem(sideSection);\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 + 1}/${y1}/${x22 + 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 - 1}/${y12}/${x2 - 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveDown = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex + 1];\r\n        sideSection = this.props.idMan.getItem(sideSection);\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 - 1}/${y1}/${x22 - 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 + 1}/${y12}/${x2 + 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveRight = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex + 1];\r\n        if (sideSection !== null){\r\n            sideSection = this.props.idMan.getItem(sideSection);\r\n        }\r\n        // sideSection = this.props.idMan.getItem(sideSection) || null;\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 - 1}/${x2}/${y22 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 + 1}/${x22}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n\r\n            this.getAgl().invalidateSize();\r\n            this.props.select.onScrollItem();\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 + 1}/${x2}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                console.log(\"moveRight firstRow:\", firstRow, \"lastRow:\", lastRow, \"x13:\", x13, \"x23:\", x23);\r\n                if (x13 >= firstRow && x23 <= lastRow) {\r\n                    console.log(\"moveRight yes\");\r\n                    y13--;\r\n                    y23--;\r\n\r\n                    if (y23 > y1 + 1)\r\n                        y23 = y1 + 1;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveLeft = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex - 1];\r\n        if (sideSection !== null){\r\n            sideSection = this.props.idMan.getItem(sideSection);\r\n        }\r\n        // sideSection = this.props.idMan.getItem(sideSection) || null;\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 + 1}/${x2}/${y22 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 - 1}/${x22}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n\r\n            this.getAgl().invalidateSize();\r\n            this.props.select.onScrollItem();\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 - 1}/${x2}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                if (x13 >= firstRow && x23 <= lastRow) {\r\n                    y13++;\r\n                    y23++;\r\n\r\n                    if (y13 < y2 - 1)\r\n                        y13 = y2 - 1;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    updateTemplates = () => {\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            if (isHideInBreakpoint(this.props.idMan.getItem(this.allSectionsV[i])))\r\n                return \"0px\";\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map((a, i) => {\r\n            if (isHideInBreakpoint(this.props.idMan.getItem(this.allSectionsH[i])))\r\n                return \"0px\";\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    hasMiniMenuOverride = () => {\r\n        return false;\r\n    };\r\n\r\n    invalidateSizeOverride = (agl, self, updateParent, updateChildren, sourceId) => {\r\n        if (self)\r\n            delete this.tempSize;\r\n\r\n        Object.values(agl.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current && sourceId !== childRef.current.props.id) {\r\n                childRef.current.invalidateSize(true, false, true);\r\n            }\r\n        });\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorBackground\r\n                    item={this.getAgl()}\r\n                    onDesignChange={this.onDesignChange}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    getSectionOfPoint = (left, top, width, height) => {\r\n        let childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n            if (childRef && childRef.current) {\r\n                if (childRef.current.isPointInclude(left, top))\r\n                    return true;\r\n            }\r\n        });\r\n\r\n        if (!childRef)\r\n            childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n                if (childRef && childRef.current) {\r\n                    if (childRef.current.isPointInclude(left + width, top + height))\r\n                        return true;\r\n                }\r\n            });\r\n\r\n        if (!childRef)\r\n            childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n                return (childRef && childRef.current);\r\n            });\r\n\r\n        return childRef.current;\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        console.log(\"updateDesign\", compositeDesign.fillColor)\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.props.editor);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n    // White Background\r\n    getStaticChildren = () => {\r\n\r\n        return <div\r\n            className=\"PageBaseWhiteBackground\"\r\n            style={{\r\n\r\n            }}\r\n        />\r\n    };\r\n\r\n    render() {\r\n        // let fullWidth = (this.getAgl() && this.getAgl().getSize(false)) || (1002);\r\n        let fullWidth = this.props.pageSize;\r\n        return (\r\n            <AGLWrapper tagName=\"PageBase\"\r\n                        aglRef={!this.props.aglRef ? this.root : this.root = this.props.aglRef}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        className=\"Page1Root\"\r\n                        style={{\r\n                            width: this.context.production ? \"100%\" : `${fullWidth}px`,\r\n                            height: \"100%\",\r\n                            boxShadow: \"0 2px 12px 6px rgba(134,138,165,.41)\",\r\n                            display: \"inline-block\",\r\n                        }}\r\n                        data={this.getData()}\r\n                        isPage\r\n                        resizeSides={[]}\r\n                        page={this}\r\n                        hasMiniMenuOverride={this.hasMiniMenuOverride}\r\n                        getInspector={this.getInspector}\r\n                        invalidateSizeOverride={this.invalidateSizeOverride}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nPageBase.defaultProps = {\r\n    tagName: \"PageBase\",\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\n\r\nexport default class VerticalSpacer extends AGLComponent{\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"VerticalSpacer\"\r\n                {...this.props}\r\n                data={this.getData()}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"20px\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\n\r\nlet FadeInAnimation = {};\r\n\r\nFadeInAnimation.getOptions = (props) => {\r\n    return null;\r\n};\r\n\r\nFadeInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {duration, delay} = options;\r\n    let animationStyles = StyleSheet.create({\r\n        fadeIn: {\r\n            animationName: {\r\n                \"0%\": {\r\n                    opacity: 0\r\n                },\r\n                \"100%\": {\r\n                    opacity: 1\r\n                }\r\n            },\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.fadeIn);\r\n};\r\n\r\nFadeInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FadeInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet BounceInAnimation = {};\r\n\r\nBounceInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From center',\r\n                    'From top left',\r\n                    'From top right',\r\n                    'From bottom left',\r\n                    'From bottom right'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nBounceInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `scale3d(0, 0, 0) translate3d(${\r\n                direction.includes('center')? '0': direction.includes('left')? '-100%': direction.includes('right')?\r\n                    '100%': '0'\r\n            }, ${\r\n                direction.includes('center')? '0': direction.includes('top')? '-100%': direction.includes('bottom')?\r\n                    '100%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['20%'] = {\r\n        opacity: 0.33,\r\n        transform: `scale3d(1.1, 1.1, 1.1) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '7%': direction.includes('right')?\r\n                '-7%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '7%': direction.includes('bottom')?\r\n                '-7%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['40%'] = {\r\n        opacity: 0.66,\r\n        transform: `scale3d(0.9, 0.9, 0.9) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '-5%': direction.includes('right')?\r\n                '5%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '-5%': direction.includes('bottom')?\r\n                '5%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['60%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(1.03, 1.03, 1.03) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '3%': direction.includes('right')?\r\n                '-3%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '3%': direction.includes('bottom')?\r\n                '-3%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['80%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(0.97, 0.97, 0.97) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '-1%': direction.includes('right')?\r\n                '1%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '-1%': direction.includes('bottom')?\r\n                '1%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(1, 1, 1)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        bounceIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.bounceIn);\r\n};\r\n\r\nBounceInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default BounceInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\nimport SliderInput from \"../../Menus/CommonComponents/SliderInput\";\r\nimport Angle from \"../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\n\r\nlet GlideInAnimation = {};\r\n\r\nGlideInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <>\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                <Angle\r\n                    className=\"ShadowAngle\"\r\n                    angle={options.angle || 90}\r\n                    onChange={(d) => {\r\n                        onDesignChange(`${designKey}.angle`, d);\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Distance</p>\r\n\r\n                <div\r\n                    className=\"BorderWidth\"\r\n                >\r\n                    <SliderInput\r\n                        className=\"BorderWidthSlider\"\r\n                        min={0}\r\n                        max={300}\r\n                        value={options.distance || 100}\r\n                        designKey={`${designKey}.distance`}\r\n                        onDesignChange={onDesignChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nGlideInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {distance, angle, duration, delay} = options;\r\n    distance = distance || 100;\r\n    angle = angle || 90;\r\n\r\n    let animationName = {};\r\n    let tx = - distance * Math.sin(angle * Math.PI / 180);\r\n    let ty = distance * Math.cos(angle * Math.PI / 180);\r\n    animationName['0%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(${tx}px, ${ty}px, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        glideIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.glideIn);\r\n};\r\n\r\nGlideInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default GlideInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FloatInAnimation = {};\r\n\r\nFloatInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFloatInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n                direction.includes('left')? '-20%': direction.includes('right')? '20%': 0\r\n            }, ${\r\n                direction.includes('top')? '-20%': direction.includes('bottom')? '20%': 0\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        floatIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.floatIn);\r\n};\r\n\r\nFloatInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FloatInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet ExpandInAnimation = {};\r\n\r\nExpandInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'Soft',\r\n                    'Medium',\r\n                    'Hard'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.power`, v);\r\n                }}\r\n                value={options.power || 'Hard'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nExpandInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, duration, delay} = options;\r\n    power = power || 'Hard';\r\n\r\n    let animationName = {};\r\n    animationName[\"0%\"] = {\r\n        opacity: 0,\r\n        transform: `scale3d(${\r\n                power === \"Hard\"? '0.2': power === \"Medium\"? '0.5': '0.8'\r\n            }, ${\r\n                power === \"Hard\"? '0.2': power === \"Medium\"? '0.5': '0.8'\r\n            }, 0)`\r\n    };\r\n    animationName[\"100%\"] = {\r\n        opacity: 1,\r\n        transform: 'scale3d(1,1,1)'\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        expandIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.expandIn);\r\n};\r\n\r\nExpandInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default ExpandInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../Menus/CommonComponents/SliderInput\";\r\n\r\nlet SpinInAnimation = {};\r\n\r\nSpinInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <>\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n                <DropDown\r\n                    options={[\r\n                        'Soft',\r\n                        'Medium',\r\n                        'Hard'\r\n                    ]}\r\n                    onChange={(v) => {\r\n                        onDesignChange(`${designKey}.power`, v);\r\n                    }}\r\n                    value={options.power || 'Hard'}\r\n                    spanStyle={{\r\n                        width: \"100%\",\r\n                        fontSize: 14,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n                <DropDown\r\n                    options={[\r\n                        'Clockwise',\r\n                        'Counter clockwise',\r\n                    ]}\r\n                    onChange={(v) => {\r\n                        onDesignChange(`${designKey}.direction`, v);\r\n                    }}\r\n                    value={options.direction || 'Clockwise'}\r\n                    spanStyle={{\r\n                        width: \"100%\",\r\n                        fontSize: 14,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Spin number</p>\r\n\r\n                <div\r\n                    className=\"BorderWidth\"\r\n                >\r\n                    <SliderInput\r\n                        className=\"BorderWidthSlider\"\r\n                        min={0}\r\n                        max={15}\r\n                        step={0.1}\r\n                        value={options.spinNo || 2}\r\n                        designKey={`${designKey}.spinNo`}\r\n                        onDesignChange={onDesignChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nSpinInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, direction, spinNo, duration, delay} = options;\r\n    power = power || 'Hard';\r\n    direction = direction || 'Clockwise';\r\n    spinNo = spinNo || 2;\r\n\r\n    let animationName = {};\r\n    let firstRotate = 360 * spinNo * (direction === 'Clockwise'? -1: 1);\r\n    animationName[\"0%\"] = {\r\n        opacity: 0,\r\n        transform: `rotate(${firstRotate}deg) scale3d(${\r\n                power === \"Hard\"? '0.3': power === \"Medium\"? '0.6': '1'\r\n            }, ${\r\n                power === \"Hard\"? '0.3': power === \"Medium\"? '0.6': '1'\r\n            }, 1)`\r\n    };\r\n    animationName[\"100%\"] = {\r\n        opacity: 1,\r\n        transform: 'rotate(0deg) scale3d(1,1,1)'\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        spinIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.spinIn);\r\n};\r\n\r\nSpinInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default SpinInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FlyInAnimation = {};\r\n\r\nFlyInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                    'From top left',\r\n                    'From top right',\r\n                    'From bottom left',\r\n                    'From bottom right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFlyInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let size = item.getSize(true);\r\n    let windowSize = {\r\n        width: item.props.breakpointmanager.getWindowWidth(),\r\n        height: item.props.breakpointmanager.getWindowHeight(),\r\n    };\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n                direction.includes('left')? `${-size.left}px`: direction.includes('right')? `${\r\n                    windowSize.width - size.left - size.width\r\n                }px`: 0\r\n            }, ${\r\n                direction.includes('top')? `${-size.top}px`: direction.includes('bottom')? `${\r\n                    windowSize.height - size.top - size.height\r\n                }px`: 0\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        flyIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.flyIn);\r\n};\r\n\r\nFlyInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FlyInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet TurnInAnimation = {};\r\n\r\nTurnInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From left',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nTurnInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let size = item.getSize(true);\r\n    let viewSize = item.props.viewRef.current.getSize(false);\r\n    let windowSize = {\r\n        width: item.props.breakpointmanager.getWindowWidth(),\r\n        height: item.props.breakpointmanager.getWindowHeight(),\r\n    };\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n                -(size.left - viewSize.left)\r\n                }px`: `${\r\n            windowSize.width - (size.left - viewSize.left) - size.width\r\n                }px`\r\n            }, -200%, 0) rotate(${\r\n            direction.includes('left')? '-45': '45'\r\n            }deg) `\r\n    };\r\n    animationName['30%'] = {\r\n        opacity: 0.3,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n            -(size.left - viewSize.left) * 0.7\r\n                }px`: `${\r\n            (windowSize.width - (size.left - viewSize.left) - size.width) * 0.7\r\n                }px`\r\n            }, -${200*0.85}%, 0) rotate(${\r\n            direction.includes('left')? -45 * 0.7: 45 * 0.7\r\n            }deg) `\r\n    };\r\n    animationName['60%'] = {\r\n        opacity: 0.6,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n            -(size.left - viewSize.left) * 0.4\r\n                }px`: `${\r\n            (windowSize.width - (size.left - viewSize.left) - size.width) * 0.4\r\n                }px`\r\n            }, -${200*0.55}%, 0) rotate(${\r\n            direction.includes('left')? -45 * 0.4: 45 * 0.4\r\n            }deg) `\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0) rotate(0deg) `\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        turnIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            animationTimingFunction: 'linear',\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.turnIn);\r\n};\r\n\r\nTurnInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default TurnInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\n\r\nlet ArcInAnimation = {};\r\n\r\nArcInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From left',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From right'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nArcInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From right';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) scale(0) rotateY(${\r\n            direction.includes('left') ? '-' : ''\r\n            }180deg) translateZ(600px)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) scale(1) rotateY(0deg) translateZ(0px)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        arcIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            animationTimingFunction: 'linear',\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.arcIn);\r\n};\r\n\r\nArcInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default ArcInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet PuffInAnimation = {};\r\n\r\nPuffInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'Soft',\r\n                    'Medium',\r\n                    'Hard'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.power`, v);\r\n                }}\r\n                value={options.power || 'Hard'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nPuffInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, duration, delay} = options;\r\n    power = power || 'Hard';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) translateZ(${\r\n            power === \"Hard\"? 400: power === \"Medium\"? 200: 100\r\n            }px)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) translateZ(0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        puffIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.puffIn);\r\n};\r\n\r\nPuffInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default PuffInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FoldInAnimation = {};\r\n\r\nFoldInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFoldInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) rotateY(${\r\n                direction.includes('left')? 90: direction.includes('right')? -90: 0\r\n            }deg) rotateX(${\r\n                direction.includes('top')? -90: direction.includes('bottom')? 90: 0\r\n            }deg)`,\r\n        transformOrigin: `${\r\n            direction.includes('left')? 'left': direction.includes('right')? 'right': 'center'\r\n            } ${\r\n            direction.includes('top')? 'top': direction.includes('bottom')? 'bottom': 'center'\r\n            } 0`,\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) rotateY(0deg) rotateX(0deg)`,\r\n        transformOrigin: `${\r\n            direction.includes('left')? 'left': direction.includes('right')? 'right': 'center'\r\n            } ${\r\n            direction.includes('top')? 'top': direction.includes('bottom')? 'bottom': 'center'\r\n            } 0`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        foldIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.foldIn);\r\n};\r\n\r\nFoldInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FoldInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FlipInAnimation = {};\r\n\r\nFlipInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFlipInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) rotateY(${\r\n                direction.includes('left')? -90: direction.includes('right')? 90: 0\r\n            }deg) rotateX(${\r\n                direction.includes('top')? 90: direction.includes('bottom')? -90: 0\r\n            }deg)`,\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) rotateY(0deg) rotateX(0deg)`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        flipIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.flipIn);\r\n};\r\n\r\nFlipInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FlipInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet RevealAnimation = {};\r\n\r\nRevealAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From center',\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From center'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nRevealAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From center';\r\n\r\n    let animationName = {};\r\n    switch (direction) {\r\n        case 'From center':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)`,\r\n            };\r\n            break;\r\n        case 'From left':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 0, 0 0, 0 100%, 0 100%)`,\r\n            };\r\n            break;\r\n        case 'From right':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(100% 0, 100% 0, 100% 100%, 100% 100%)`,\r\n            };\r\n            break;\r\n        case 'From top':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 0, 0 100%, 0 100%, 0 0)`,\r\n            };\r\n            break;\r\n        case 'From bottom':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 100%, 100% 100%, 100% 100%, 0 100%)`,\r\n            };\r\n            break;\r\n    }\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        clipPath: `polygon(0 0, 100% 0, 100% 100%, 0 100%)`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        reveal: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.reveal);\r\n};\r\n\r\nRevealAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default RevealAnimation;\r\n","import ContainerBase from \"../Components/Containers/ContainerBase\";\r\nimport Header from \"../Components/Containers/Header\";\r\nimport Footer from \"../Components/Containers/Footer\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport Section from \"../Components/Containers/Section\";\r\nimport Stack from \"../Components/Stack/Stack\";\r\nimport VerticalSpacer from \"../Components/Stack/VerticalSpacer\";\r\nimport FadeInAnimation from \"../Test/Animations/FadeInAnimation\";\r\nimport BounceInAnimation from \"../Test/Animations/BounceInAnimation\";\r\nimport GlideInAnimation from \"../Test/Animations/GlideInAnimation\";\r\nimport FloatInAnimation from \"../Test/Animations/FloatInAnimation\";\r\nimport ExpandInAnimation from \"../Test/Animations/ExpandInAnimation\";\r\nimport SpinInAnimation from \"../Test/Animations/SpinInAnimation\";\r\nimport FlyInAnimation from \"../Test/Animations/FlyInAnimation\";\r\nimport TurnInAnimation from \"../Test/Animations/TurnInAnimation\";\r\nimport ArcInAnimation from \"../Test/Animations/ArcInAnimation\";\r\nimport PuffInAnimation from \"../Test/Animations/PuffInAnimation\";\r\nimport FoldInAnimation from \"../Test/Animations/FoldInAnimation\";\r\nimport FlipInAnimation from \"../Test/Animations/FlipInAnimation\";\r\nimport RevealAnimation from \"../Test/Animations/RevealAnimation\";\r\n\r\nlet DynamicComponents = {};\r\n\r\nexport let initDynamicComponents = () => {\r\n    DynamicComponents[\"ContainerBase\"] = ContainerBase;\r\n    DynamicComponents[\"PageBase\"] = PageBase;\r\n    DynamicComponents[\"Header\"] = Header;\r\n    DynamicComponents[\"Footer\"] = Footer;\r\n    DynamicComponents[\"Section\"] = Section;\r\n    DynamicComponents[\"Stack\"] = Stack;\r\n    DynamicComponents[\"VerticalSpacer\"] = VerticalSpacer;\r\n};\r\n\r\nexport default DynamicComponents;\r\n\r\nexport let DynamicAnimations = {};\r\n\r\nexport let initDynamicAnimations = () => {\r\n    DynamicAnimations[\"fadeIn\"] = FadeInAnimation;\r\n    DynamicAnimations[\"bounceIn\"] = BounceInAnimation;\r\n    DynamicAnimations[\"glideIn\"] = GlideInAnimation;\r\n    DynamicAnimations[\"floatIn\"] = FloatInAnimation;\r\n    DynamicAnimations[\"expandIn\"] = ExpandInAnimation;\r\n    DynamicAnimations[\"spinIn\"] = SpinInAnimation;\r\n    DynamicAnimations[\"flyIn\"] = FlyInAnimation;\r\n    DynamicAnimations[\"turnIn\"] = TurnInAnimation;\r\n    DynamicAnimations[\"arcIn\"] = ArcInAnimation;\r\n    DynamicAnimations[\"puffIn\"] = PuffInAnimation;\r\n    DynamicAnimations[\"foldIn\"] = FoldInAnimation;\r\n    DynamicAnimations[\"flipIn\"] = FlipInAnimation;\r\n    DynamicAnimations[\"reveal\"] = RevealAnimation;\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\nimport DynamicComponents from \"../Dynamic/DynamicComponents\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport '../HelperStyle.css';\r\n\r\nexport default class AdjustmentPageControllers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    addSection = (index, isVertical) => {\r\n        let {page} = this.props;\r\n        page.addSectionQueue(index, \"Section\", DynamicComponents, undefined, isVertical);\r\n    };\r\n\r\n    getAnchor = (index) => {\r\n        return  document.getElementById(`page_add_horizontal_${index}`)\r\n    };\r\n\r\n    needUpdate = () => {\r\n        clearTimeout(this.updateTimeout);\r\n        this.updateTimeout = setTimeout(() => {\r\n            if (!this.mounted) {\r\n                clearTimeout(this.updateTimeout);\r\n                return;\r\n            }\r\n            this.forceUpdate();\r\n        }, 500);\r\n    };\r\n\r\n    render () {\r\n        let {grid} = this.props;\r\n        return (\r\n                [\r\n                    new Array(grid.y + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `1/${index}/2/${index + 1}`\r\n                        };\r\n                        index === 0 && (style.justifySelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                        >\r\n                            <div\r\n                                className={containerClasses}\r\n                                onClick={(e) => {\r\n                                    this.addSection(index, true);\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={8} height={8} src={require('./icons/plus.svg')} />\r\n                            </div>\r\n                        </div>\r\n                    }),\r\n                    new Array(grid.x + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `${index}/1/${index + 1}/2`,\r\n                            pointerEvents: \"auto\"\r\n                        };\r\n                        index === 0 && (style.alignSelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddHorizontalSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddHorizontalSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddHorizontalSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                            id={`page_add_horizontal_${index}`}\r\n                            onClick={(e) => {\r\n                                this.setState({anchorEl: e.currentTarget})\r\n                            }}\r\n                        >\r\n                            {!this.getAnchor(index) && this.needUpdate()}\r\n                            <Popper open={Boolean(document.getElementById(`page_add_horizontal_${index}`))}\r\n                                    anchorEl={\r\n                                        () => {\r\n                                            return this.getAnchor(index);\r\n                                        }\r\n                                    }\r\n                                    modifiers={{\r\n                                        preventOverflow: {\r\n                                            enabled: false,\r\n                                            boundariesElement: 'scrollParent',\r\n                                        },\r\n                                        hide: {\r\n                                            enabled: false,\r\n                                        },\r\n                                    }}\r\n                            >\r\n                                <div\r\n                                    className={containerClasses}\r\n                                    onClick={(e) => {\r\n                                        this.addSection(index, false);\r\n                                    }}\r\n                                >\r\n                                    <img draggable={false} className=\"IconImage\" width={8} height={8} src={require('./icons/plus.svg')} />\r\n                                </div>\r\n                            </Popper>\r\n                        </div>\r\n                    })\r\n                ]\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerFixedHolder extends React.Component {\r\n    render () {\r\n        let {size, id} = this.props;\r\n        return (\r\n            <div\r\n                className=\"fixed-holder\"\r\n                style={{\r\n                    top: size? size.top: 0,\r\n                    left: size? size.left: 0,\r\n                    width: size? size.width: 0,\r\n                    height: size? size.clientHeight || size.height: 0,\r\n                }}\r\n                id={`${id}_fixed_holder`}\r\n            >\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class PaddingInterface extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    borderTop: this.props.padding.top ? `${this.props.padding.top} solid rgba(2, 242, 255, 0.3` : \"unset\",\r\n                    borderLeft: this.props.padding.left ? `${this.props.padding.left} solid rgba(2, 242, 255, 0.3)` : \"unset\",\r\n                    borderBottom: this.props.padding.bottom ? `${this.props.padding.bottom} solid rgba(2, 242, 255, 0.3)` : \"unset\",\r\n                    borderRight: this.props.padding.right ? `${this.props.padding.right} solid rgba(2, 242, 255, 0.3)` : \"unset\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ParentSelectInterface extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    border: '1px solid rgb(2 50 255 / 40%)'\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {appendStyle, cloneObject, shallowEqual, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\nimport GridChildContainerChildren from \"./GridChildContainerChildren\";\r\nimport classNames from \"classnames\";\r\nimport AdjustmentPageControllers from \"./Adjustment/AdjustmentPageControllers\";\r\nimport GridChildContainerFixedHolder from \"./GridChildContainerFixedHolder\";\r\nimport PaddingInterface from \"./Test/PaddingInterface\";\r\nimport ParentSelectInterface from \"./Test/ParentSelectInterface\";\r\n\r\nexport default class GridChildContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.controllerRef = React.createRef();\r\n        this.fixedHolderRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.modifyOverflowStyle(this.props.overflowData, this.props.aglStyle);\r\n        this.modifyContainerStyle(this.props.grid, this.props.aglStyle, this.props.padding);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(this.grid, nextProps.grid) ||\r\n            !shallowEqual(this.size, nextProps.size) ||\r\n            this.props.selectAsParent !== nextProps.selectAsParent ||\r\n            this.props.selected !== nextProps.selected ||\r\n            !shallowEqual(this.padding, nextProps.padding) ||\r\n            !shallowEqual(JSON.stringify(this.allChildIndex),\r\n                JSON.stringify(Object.values(nextProps.allChildren).map(c => {\r\n                    return {\r\n                        z: c.zIndex,\r\n                        i: c.child.props.id\r\n                    }\r\n                })))\r\n        ) {\r\n            if (!shallowEqual(this.overflowData, nextProps.overflowData))\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n\r\n            if (!shallowEqual(this.grid, nextProps.grid) || !shallowEqual(this.padding, nextProps.padding))\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n\r\n            if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!shallowEqual(this.overflowData, nextProps.overflowData)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            return true;\r\n        }\r\n        if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren, grid, overflowData, aglStyle, size, padding} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => {\r\n            return {\r\n                z: c.zIndex,\r\n                i: c.child.props.id\r\n            }\r\n        });\r\n        this.grid = cloneObject(grid);\r\n        this.overflowData = cloneObject(overflowData);\r\n        this.aglStyle = cloneObject(aglStyle);\r\n        this.size = cloneObject(size);\r\n        this.padding = cloneObject(padding);\r\n    };\r\n\r\n    modifyContainerStyle = (grid, aglStyle, padding) => {\r\n        if (!grid)\r\n            grid = this.props.grid;\r\n\r\n        let {modifyContainerStyleOverride, agl} = this.props;\r\n\r\n        if (modifyContainerStyleOverride){\r\n            modifyContainerStyleOverride(this, agl, grid, aglStyle);\r\n            return;\r\n        }\r\n\r\n        let style = {\r\n            width: (aglStyle && aglStyle.width === \"auto\") ? \"auto\": \"100%\",\r\n            height: (aglStyle && aglStyle.height === \"auto\") ? \"auto\":\r\n                agl.getFromData(\"containerHeight\") || \"100%\",\r\n            display: \"grid\",\r\n            position: \"relative\",\r\n            boxSizing: \"border-box\",\r\n            gridTemplateRows: grid.gridTemplateRows,\r\n            gridTemplateColumns: grid.gridTemplateColumns,\r\n        };\r\n\r\n        if (padding) {\r\n            if (padding.top) style.paddingTop = padding.top;\r\n            if (padding.left) style.paddingLeft = padding.left;\r\n            if (padding.bottom) style.paddingBottom = padding.bottom;\r\n            if (padding.right) style.paddingRight = padding.right;\r\n\r\n            /*style.backgroundImage = \"\";\r\n            Object.keys(padding).forEach(key => {\r\n                if (key === \"top\")\r\n                    style.backgroundImage += `linear-gradient(to bottom, #00f3ffa8 ${padding.top}, transparent 10px),`\r\n                if (key === \"bottom\")\r\n                    style.backgroundImage += `linear-gradient(to top, #00f3ffa8 ${padding.bottom}, transparent 10px),`\r\n                if (key === \"left\")\r\n                    style.backgroundImage += `linear-gradient(to right, #00f3ffa8 ${padding.left}, transparent 10px),`\r\n                if (key === \"right\")\r\n                    style.backgroundImage += `linear-gradient(to left, #00f3ffa8 ${padding.right}, transparent 10px),`\r\n            });\r\n\r\n            if (style.backgroundImage)\r\n                style.backgroundImage = style.backgroundImage.slice(0, -1);*/\r\n        }\r\n\r\n        let styleNode = document.getElementById(this.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, this.getContainerStyleId(), this.getContainerStyleId());\r\n        } else {\r\n            updateStyle(styleNode, style, this.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    modifyOverflowStyle = (overflowData, aglStyle) => {\r\n        let styleNode = document.getElementById(this.getOverflowStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId()\r\n                , this.getOverflowStyleId());\r\n        } else {\r\n            updateStyle(styleNode, this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId());\r\n        }\r\n\r\n        let webkitScrollbarStyle = {};\r\n        let webkitScrollbarStyleId = this.getOverflowStyleId() + '::-webkit-scrollbar';\r\n        if (overflowData.auto === 'hide') webkitScrollbarStyle.display = \"none\";\r\n\r\n        let scrollStyleNode = document.getElementById(webkitScrollbarStyleId);\r\n\r\n        if (!scrollStyleNode) {\r\n            appendStyle(webkitScrollbarStyle, webkitScrollbarStyleId, webkitScrollbarStyleId);\r\n        } else {\r\n            updateStyle(scrollStyleNode, webkitScrollbarStyle, webkitScrollbarStyleId);\r\n        }\r\n    };\r\n\r\n    getOverflowStyle = (overflowData, aglStyle) => {\r\n        let style = {\r\n            display: \"grid\",\r\n            gridTemplateRows: \"1fr\",\r\n            gridTemplateColumns: \"1fr\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n        };\r\n\r\n        if (aglStyle && aglStyle.width === \"auto\") {\r\n            style.position = \"relative\";\r\n            delete style.left;\r\n            delete style.right;\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n        if (aglStyle && aglStyle.height === \"auto\") {\r\n            style.position = \"relative\";\r\n            delete style.left;\r\n            delete style.right;\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n\r\n        if (!overflowData)\r\n            overflowData = this.props.overflowData;\r\n\r\n        if (!overflowData)\r\n            return style;\r\n\r\n        if (overflowData.state === 'show') {\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'hide') {\r\n            style.overflowX = \"hidden\";\r\n            style.overflowY = \"hidden\";\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'scroll') {\r\n            style.overflowX = overflowData.overflowX? overflowData.auto === 'auto'? \"auto\" : \"scroll\" : \"hidden\" ;\r\n            style.overflowY = overflowData.overflowY? overflowData.auto === 'auto'? \"auto\" : \"scroll\" : \"hidden\" ;\r\n        }\r\n\r\n        if (overflowData.auto === 'hide') {\r\n            // TODO hide scrollbar with webkit\r\n            style.scrollbarWidth = 'none';\r\n            style.overflow = '-moz-scrollbars-none';\r\n            style['-ms-overflow-style'] = 'none';\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    getOverflowStyleId = () => {\r\n        return `style_overflow_${this.props.id}`\r\n    };\r\n\r\n    getContainerStyleId = () => {\r\n        return `style_container_${this.props.id}`\r\n    };\r\n\r\n    updateAdjustments = () => {\r\n        this.controllerRef.current && this.controllerRef.current.forceUpdate();\r\n        this.fixedHolderRef.current && this.fixedHolderRef.current.forceUpdate();\r\n    };\r\n\r\n    needOverflow = () => {\r\n        let overflowData = this.props.overflowData;\r\n\r\n        if (overflowData.state !== 'scroll')\r\n            return false;\r\n\r\n        if (overflowData.overflowX === 'scroll')\r\n                return true;\r\n        if (overflowData.overflowY === 'scroll')\r\n                return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        if (!this.props.show)\r\n            return null;\r\n        this.saveState();\r\n        let {allChildren, id, grid, isPage, page, size, getChildrenOverride, agl, editor} = this.props;\r\n\r\n        let overflowClasses = classNames(\r\n            this.getOverflowStyleId()\r\n        );\r\n        let containerClasses = classNames(\r\n            this.getContainerStyleId()\r\n        );\r\n\r\n        if (!isPage) {\r\n            if (this.needOverflow()) {\r\n                return (\r\n                    <div\r\n                        id={`${id}_overflow`}\r\n                        className={overflowClasses}\r\n                        ref={this.props.overflowRef}\r\n                        onScroll={this.props.onScroll}\r\n                    >\r\n                        <div\r\n                            id={`${id}_container`}\r\n                            className={containerClasses}\r\n                            ref={this.props.containerRef}\r\n                        >\r\n                            {\r\n                                this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                                <PaddingInterface padding={this.props.padding} />\r\n                            }\r\n                            {\r\n                                this.props.selectAsParent &&\r\n                                <ParentSelectInterface />\r\n                            }\r\n                            <GridChildContainerChildren\r\n                                allChildren={allChildren}\r\n                                getChildrenOverride={getChildrenOverride}\r\n                                agl={agl}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        id={`${id}_container`}\r\n                        className={containerClasses}\r\n                        ref={this.props.containerRef}\r\n                    >\r\n                        {\r\n                            this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                            <PaddingInterface padding={this.props.padding} />\r\n                        }\r\n                        {\r\n                            this.props.selectAsParent &&\r\n                            <ParentSelectInterface />\r\n                        }\r\n                        <GridChildContainerChildren\r\n                            allChildren={allChildren}\r\n                            getChildrenOverride={getChildrenOverride}\r\n                            agl={agl}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                    <div\r\n                        id={`${id}_container`}\r\n                        className={containerClasses}\r\n                        ref={this.props.containerRef}\r\n                    >\r\n                        {\r\n                            this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                            <PaddingInterface padding={this.props.padding} />\r\n                        }\r\n                        {\r\n                            this.props.selectAsParent &&\r\n                            <ParentSelectInterface />\r\n                        }\r\n                        <GridChildContainerChildren\r\n                            allChildren={allChildren}\r\n                            getChildrenOverride={getChildrenOverride}\r\n                            agl={agl}\r\n                        />\r\n\r\n                        {\r\n                            editor &&\r\n                            <AdjustmentPageControllers\r\n                                grid={grid}\r\n                                page={page}\r\n                                editor={editor}\r\n                                ref={this.controllerRef}\r\n                            />\r\n                        }\r\n\r\n                        <GridChildContainerFixedHolder\r\n                            ref={this.fixedHolderRef}\r\n                            size={size}\r\n                            id={id}\r\n                        />\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomeGridLayout.css';\r\n\r\nexport default class AGLAnchor extends React.Component {\r\n    render () {\r\n        let {anchor} = this.props;\r\n\r\n        if (!anchor)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                className=\"AGLAnchor\"\r\n                id={anchor.id}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ResizePanePage extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane-page`,\r\n            \"Adjustment-Pane\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.onMouseDown}\r\n                className={classes}\r\n                style={style}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePanePage from \"./ResizePanePage\";\r\n\r\nexport default class AdjustmentResizePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render () {\r\n        let {top, left, width, height} = this.props;\r\n        if (top === undefined || left === undefined || width === undefined || height === undefined)\r\n            return null;\r\n\r\n        return (\r\n                <div\r\n                    id=\"AdjustmentResizePage\"\r\n                    style={{\r\n                        width: width,\r\n                        height: \"80vh\",\r\n                        // left: left? left: 0,\r\n                        // top: top? top : 0,\r\n                        // bottom: top? window.innerHeight - top - height: 0,\r\n                        // right: left? window.innerWidth - left - width: 0,\r\n                    }}\r\n                    // className=\"AdjustmentResizeRootPage\"\r\n                    className=\"AdjustmentResizeRoot\"\r\n                >\r\n                    {\r\n                        this.props.sides.map((side, index) => {\r\n                            return <ResizePanePage\r\n                                key={index}\r\n                                side={side}\r\n                                onResizeStart={this.props.onResizeStart}\r\n                                onResize={this.props.onResize}\r\n                                onResizeStop={this.props.onResizeStop}\r\n                                draggingStart={this.props.draggingStart}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class EventTrigger {\r\n    constructor(owner, defaultListener) {\r\n        this.owner = owner;\r\n        this.listeners = [];\r\n        if (defaultListener)\r\n            this.listeners.push(defaultListener);\r\n    }\r\n\r\n    addListener = (listener) => {\r\n        if (!this.listeners.find(l => { return l === listener; })) {\r\n            this.listeners.push(listener);\r\n        }\r\n    };\r\n\r\n    trigger = throttleDebounce((data) => {\r\n        this.listeners.forEach(l => {\r\n            l(this.owner, data);\r\n        });\r\n    }, 50);\r\n\r\n    removeListener = (listener) => {\r\n        let index = this.listeners.findIndex(l => { return l === listener; })\r\n        if (index >= 0)\r\n            this.listeners.splice(index, 1);\r\n    };\r\n}\r\n","let windowCache = {\r\n    boundingRects: {},\r\n    clientsWidth: {},\r\n    clientsHeight: {},\r\n    scrollsTop: {},\r\n    scrollsLeft: {},\r\n    scrollsWidth: {},\r\n    scrollsHeight: {}\r\n};\r\n\r\nlet clearCache = () => {\r\n    windowCache.boundingRects = {};\r\n    windowCache.clientsWidth = {};\r\n    windowCache.clientsHeight = {};\r\n    windowCache.scrollsTop = {};\r\n    windowCache.scrollsLeft = {};\r\n    windowCache.scrollsWidth = {};\r\n    windowCache.scrollsHeight = {};\r\n    delete windowCache.clearCacheTimeuot;\r\n};\r\n\r\nexport let getCachedBoundingRect = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.boundingRects[id])\r\n        windowCache.boundingRects[id] = node.getBoundingClientRect();\r\n\r\n    return windowCache.boundingRects[id];\r\n};\r\n\r\nexport let getCachedClientWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.clientsWidth[id])\r\n        windowCache.clientsWidth[id] = node.clientWidth;\r\n\r\n    return windowCache.clientsWidth[id];\r\n};\r\n\r\nexport let getCachedClientHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.clientsHeight[id])\r\n        windowCache.clientsHeight[id] = node.clientHeight;\r\n\r\n    return windowCache.clientsHeight[id];\r\n};\r\n\r\nexport let getCachedScrollTop = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsTop[id])\r\n        windowCache.scrollsTop[id] = node.scrollTop;\r\n\r\n    return windowCache.scrollsTop[id];\r\n};\r\n\r\nexport let getCachedScrollLeft = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsLeft[id])\r\n        windowCache.scrollsLeft[id] = node.scrollLeft;\r\n\r\n    return windowCache.scrollsLeft[id];\r\n};\r\n\r\nexport let getCachedScrollWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsWidth[id])\r\n        windowCache.scrollsWidth[id] = node.scrollWidth;\r\n\r\n    return windowCache.scrollsWidth[id];\r\n};\r\n\r\nexport let getCachedScrollHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsHeight[id])\r\n        windowCache.scrollsHeight[id] = node.scrollHeight;\r\n\r\n    return windowCache.scrollsHeight[id];\r\n};\r\n\r\nexport let addToCache = (id, rect, propName) => {\r\n    windowCache[propName][id] = rect;\r\n};\r\n","import React from \"react\";\r\nexport default class AnimationHolder extends React.Component {\r\n    render () {\r\n        if (!this.props.disabled)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <div\r\n                    className={this.props.className}\r\n                    id={this.props.id}\r\n                    ref={this.props.transformRef}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nexport default class VisibilitySensorWrapper extends React.Component {\r\n    render () {\r\n        if (!this.props.animation)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <VisibilitySensor\r\n                    partialVisibility onChange={(v) => {\r\n                        if (this.props.animation.name &&\r\n                            (this.props.animation.options && this.props.animation.options.once)\r\n                            && v) {\r\n                            !this.props.editor && this.props.playAnimation(true);\r\n                            return;\r\n                        }\r\n\r\n                        if (this.props.animation.name && v)\r\n                            !this.props.editor && this.props.playAnimation();\r\n                    }}\r\n                    containment={this.props.select.getPageOverflowRef()}\r\n                    active={this.props.animation.name && !this.props.disableVS}\r\n                >\r\n                    {this.props.children}\r\n                </VisibilitySensor>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentHelpSize extends React.Component {\r\n    getText = () => {\r\n        let {width, height} = this.props.resizeHelpData;\r\n\r\n        return `${width? \"W: \" + width.toFixed(0).toString() + \"  \": \"\"}\r\n        ${height? \"H: \" + height.toFixed(0).toString() + \"\": \"\"}`;\r\n    };\r\n    render () {\r\n        let {x, y} = this.props.resizeHelpData;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpSize\"\r\n                className=\"AdjustmentHelpSizeRoot\"\r\n            >\r\n                <p\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: y,\r\n                        left: x,\r\n                        margin: 0,\r\n                        transform: \"translateX(20px) translateY(20px)\",\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#ffffff\",\r\n                        backgroundColor: \"#4b4b4b\",\r\n                        padding: 4,\r\n                        borderRadius: 4,\r\n                        width: \"fit-content\"\r\n                    }}\r\n                >\r\n                    {this.getText()}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport debounce from 'lodash.debounce';\r\nimport {appendStyle, cloneObject, initGriddata, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './AwesomeGridLayout.css';\r\nimport GridChildContainer from \"./GridChildContainer\";\r\nimport DynamicComponents, {DynamicAnimations} from \"./Dynamic/DynamicComponents\";\r\nimport classNames from \"classnames\";\r\nimport Portal from \"./Portal\";\r\nimport {\r\n    createItem,\r\n    getCompositeDesignData, getPxValueFromCSSValue, getResizeDelta, getViewRatioStyle,\r\n    isFixed,\r\n    isGroupSelected, isRightClick,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport AGLAnchor from \"./AGLAnchor\";\r\nimport AdjustmentResizePage from \"./Adjustment/AdjustmentResizePage\";\r\nimport EventTrigger from \"./Test/EventTrigger\";\r\nimport {\r\n    addToCache,\r\n    getCachedBoundingRect,\r\n    getCachedClientHeight, getCachedScrollLeft,\r\n    getCachedScrollTop,\r\n    getCachedClientWidth, getCachedScrollHeight, getCachedScrollWidth\r\n} from \"./Test/WindowCache\";\r\nimport ChildHolder from \"./AnimationHolder\";\r\nimport VisibilitySensorWrapper from \"./Test/VisibilitySensorWrapper\";\r\nimport AdjustmentHelpSize from \"./Adjustment/AdjustmentHelpSize\";\r\n\r\nexport default class AwesomeGridLayout2 extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            childContainers: [],\r\n            grid: {x: 1, y: 1, gridTemplateRows: \"1fr\", gridTemplateColumns: \"1fr\"},\r\n            portalNodeId: props.portalNodeId,\r\n            windowWidth: props.breakpointmanager.getWindowWidth()\r\n        };\r\n\r\n        this.rootDivRef = React.createRef();\r\n        this.overflowRef = !props.isPage? React.createRef(): this.rootDivRef;\r\n        this.containerRef = React.createRef();\r\n        this.backContainerRef = React.createRef();\r\n        this.transformRef = React.createRef();\r\n        this.allChildRefs = {};\r\n\r\n        this.children = {};\r\n\r\n        initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        this.props.idMan.setItem(this.props.id, this);\r\n\r\n        this.onPropsChange = new EventTrigger(this);\r\n\r\n        props.id === \"comp_ContainerBase_1_1_1_1_1_1\" && console.log(\"AwesomeGridLayout2 constructor\", props.griddata)\r\n\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n        this.init();\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n        if (this.needRender) {\r\n            delete this.needRender;\r\n            this.updateLayout(() => {\r\n                this.isEditor() ? this.onSelect(this.getFromTempData(\"selected\"), this.lateMounted) : this.lateMounted();\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.isEditor() && this.props.editor.updateLayout();\r\n    }\r\n\r\n    callOverride = (funcName, ...args) => {\r\n        let override = this.getOverrideProp(funcName);\r\n        if (override) {\r\n            return override(this, ...args);\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    hasOverride = (funcName) => {\r\n        return this.getOverrideProp(funcName);\r\n    };\r\n\r\n    init = () => {\r\n        this.needRender = true;\r\n\r\n        this.children = {};\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let savedChildren = this.props.griddata.savedChildren;\r\n        if (!savedChildren) {\r\n            this.props.griddata.savedChildren = {};\r\n            savedChildren = this.props.griddata.savedChildren;\r\n\r\n            React.Children.map(this.props.children, (child, i)=> {\r\n                if (child) {\r\n                    let props = {...child.props};\r\n                    let createdChild = this.createChildByData({\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: props\r\n                    }, DynamicComponents);\r\n                    this.children[props.id] = {\r\n                        // child: this.getChildClone(child),\r\n                        child: createdChild,\r\n                        zIndex: lastZIndex + 1\r\n                    };\r\n\r\n                    savedChildren[props.id] = {\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: this.getClearProps(props),\r\n                        zIndex: this.children[props.id].zIndex\r\n                    };\r\n\r\n                    lastZIndex++;\r\n                }\r\n            });\r\n\r\n            if (this.renderChild) {\r\n                let childs = this.renderChild();\r\n                if (childs instanceof Array) {\r\n                    childs.forEach(c => {\r\n                        if (c) {\r\n                            let props = {...c.props};\r\n                            let createdChild = this.createChildByData({\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: props\r\n                            }, DynamicComponents);\r\n                            this.children[props.id] = {\r\n                                child: createdChild,\r\n                                zIndex: lastZIndex + 1\r\n                            };\r\n\r\n                            savedChildren[props.id] = {\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: this.getClearProps(props),\r\n                                zIndex: this.children[props.id].zIndex\r\n                            };\r\n\r\n                            lastZIndex++;\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (childs) {\r\n                        let props = {...childs.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.props.childrenData) {\r\n                let childs = this.props.childrenData();\r\n                childs.forEach(c => {\r\n                    if (c) {\r\n                        let props = {...c.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: c.tagName,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: c.tagName,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            let savedChildrenArray = Object.values(savedChildren);\r\n            savedChildrenArray.sort((a, b) => {\r\n                if (a.zIndex > b.zIndex) {\r\n                    return 1;\r\n                } else if (a.zIndex === b.zIndex) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    return 0;\r\n                }\r\n                return -1;\r\n            });\r\n            savedChildrenArray.forEach(childData => {\r\n                let oldId = childData.props.id;\r\n                let child = this.createChildByData(childData, DynamicComponents);\r\n                this.children[childData.props.id] = {\r\n                    child: child,\r\n                    zIndex: childData.zIndex\r\n                };\r\n\r\n                if (oldId !== childData.props.id) {\r\n                    delete savedChildren[oldId];\r\n                    savedChildren[childData.props.id] = childData;\r\n                }\r\n            })\r\n        }\r\n\r\n        this.initLayout();\r\n    };\r\n\r\n    initLayout = () => {\r\n        if (this.callOverride(\"initLayout\"))\r\n            return;\r\n\r\n        let style = this.getCompositeFromData(\"style\") || this.getDefaultStyle();\r\n\r\n        this.setTransformStyle(this.getCompositeFromData(\"transform\"), undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGridItemStyle(this.getCompositeFromData(\"gridItemStyle\") ||\r\n            this.props.defaultGridItemStyle,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        if (this.props.isPage)\r\n            style.width = this.props.style.width;\r\n\r\n        this.setStyle(style, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGrid(this.getCompositeFromData(\"grid\") || this.props.defaultGrid, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    getDefaultStyle = () => {\r\n        let style = { ...this.props.defaultStyle, ...this.props.style};\r\n\r\n        if ((this.props.defaultGridItemStyle).justifySelf === \"stretch\" &&\r\n            (this.getFromTempData(\"resizable\") &&\r\n                (!this.props.resizeSides || (!this.props.resizeSides.includes(\"w\") &&\r\n                    !this.props.resizeSides.includes(\"e\"))))) {\r\n            style.width = \"auto\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    lateMounted = () => {\r\n        if (this.hasOverride(\"lateMounted\")) {\r\n            return this.callOverride(\"lateMounted\");\r\n        }\r\n\r\n        let size = this.getSize(false, true, true);\r\n        this.addToSnap();\r\n\r\n        let baseDocks = this.getBaseDocks();\r\n        this.setDocks(baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n            this.getFromTempData(\"autoDock\"),\r\n            this.props.breakpointmanager.getHighestBpName(), true);\r\n\r\n        console.log(\"AwesomeGridLayout2 lateMounted\", this.props.id)\r\n        if (this.props.onPageResize) {\r\n            console.log(\"AwesomeGridLayout2 lateMounted.onPageResize\", this.props.id)\r\n            this.props.onPageResize(size.width, this, true);\r\n        }\r\n\r\n        this.props.onChildMounted && this.props.onChildMounted(this);\r\n        this.isEditor() && this.props.editor.updateLayout();\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        return this.props.getPrimaryOptions && this.props.getPrimaryOptions();\r\n    };\r\n\r\n    getShortcutOptions = () => {\r\n        return this.props.getShortcutOptions && this.props.getShortcutOptions();\r\n    };\r\n\r\n    hasMiniMenu = () => {\r\n        if (this.hasOverride(\"hasMiniMenu\")) {\r\n            return this.callOverride(\"hasMiniMenu\");\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    addToSnap = debounce(() => {\r\n        if (this.callOverride(\"addToSnap\"))\r\n            return;\r\n\r\n        // let rect = this.getSize(false);\r\n        let rect = this.getBoundarySize() || this.getSize(false);\r\n        if (rect) {\r\n            this.props.snap.addSnap(this.props.id,\r\n                [\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    },\r\n                    !this.props.isPage && {\r\n                        id: this.props.id,\r\n                        value: rect.top + rect.height / 2,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top + rect.height,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    }\r\n                ],\r\n                [\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    },\r\n                    !this.props.isPage && {\r\n                        id: this.props.id,\r\n                        value: rect.left + rect.width / 2,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left + rect.width,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    }\r\n                ],\r\n                this.getParentsId()\r\n            );\r\n        }\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current){\r\n                childRef.current.addToSnap();\r\n            }\r\n        });\r\n    }, 500);\r\n\r\n    getParentsId = () => {\r\n        let parentsId = [];\r\n        let parent = this.props.parent;\r\n\r\n        while (parent) {\r\n            parentsId.push(parent.props.id);\r\n            parent = parent.props.parent;\r\n        }\r\n\r\n        return parentsId;\r\n    };\r\n\r\n    getGridLineSnaps = () => {\r\n        let snaps = {\r\n            horizontals: [],\r\n            verticals: [],\r\n            id: this.props.id\r\n        };\r\n        this.prepareRects();\r\n        let xLineRef = this.props.gridLine.getXlineRef(this.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            // let current = xLineRef[i].current;\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.verticals.push({\r\n                id: this.props.id,\r\n                value: rect.left + ((i === xLineRef.length - 1)? 1: 0),\r\n                p1: rect.top,\r\n                p2: rect.top + rect.height\r\n            });\r\n        }\r\n        let yLineRef = this.props.gridLine.getYlineRef(this.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let current = yLineRef[i].current;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.horizontals.push({\r\n                id: this.props.id,\r\n                value: rect.top + ((i === yLineRef.length - 1)? 1: 0),\r\n                p1: rect.left,\r\n                p2: rect.left + rect.width\r\n            });\r\n        }\r\n\r\n        return [snaps];\r\n    };\r\n\r\n    createChildByData = (childData, dynamicComponents, newId, onChildMounted, fixed) => {\r\n        if (this.callOverride(\"addToSnap\", childData, dynamicComponents, newId, onChildMounted, fixed))\r\n            return;\r\n\r\n        let tagName = childData.tagName;\r\n        let props = childData.props;\r\n\r\n        let griddata = initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (newId)\r\n            props.id = newId;\r\n        if (!props.id)\r\n            props.id = this.props.idMan.getId(tagName);\r\n        else\r\n            props.id = this.props.idMan.getId(tagName, props.id);\r\n\r\n        griddata.id = props.id;\r\n        if (!props.griddata || newId)\r\n            props.griddata = griddata;\r\n\r\n        this.allChildRefs[props.id] = React.createRef();\r\n\r\n        if (this.getFromTempData(\"isFixed\", props.griddata))\r\n            fixed = true;\r\n\r\n        let AGLProps = {};\r\n        if (tagName[0] == tagName[0].toUpperCase()) {\r\n            console.log(\"createChildByData portalNodeId\",props.portalNodeId, (fixed && `${this.props.id}_fixed_holder`))\r\n            AGLProps = {\r\n                aglRef: this.allChildRefs[props.id],\r\n                viewRef: this.props.viewRef,\r\n                breakpointmanager: this.props.breakpointmanager,\r\n                undoredo: this.props.undoredo,\r\n                dragdrop: this.props.dragdrop,\r\n                select: this.props.select,\r\n                snap: this.props.snap,\r\n                idMan: this.props.idMan,\r\n                input: this.props.input,\r\n                copyMan: this.props.copyMan,\r\n                window: this.props.window,\r\n                document: this.props.document,\r\n                editorData: this.props.editorData,\r\n                anchorMan: this.props.anchorMan,\r\n                gridLine: this.props.gridLine,\r\n                gridEditorRef: this.props.gridEditorRef,\r\n                parent: this,\r\n                editor: this.props.editor,\r\n                onChildMounted: onChildMounted,\r\n                portalNodeId: (fixed && `${this.props.id}_fixed_holder`),\r\n                ...this.getAllChildOverrideProps()\r\n            };\r\n        }\r\n\r\n        let component = tagName[0] === tagName[0].toUpperCase()? dynamicComponents[tagName]: tagName;\r\n\r\n        if (tagName[0] !== tagName[0].toUpperCase())\r\n            delete props.griddata;\r\n\r\n        return React.createElement(\r\n            component,\r\n            {\r\n                ...props,\r\n                key: props.id,\r\n                ...AGLProps,\r\n            }\r\n        );\r\n    };\r\n\r\n    getSize = (updateState = true, force, fullForce) => {\r\n        if (!this.rootDivRef.current)\r\n            return;\r\n\r\n        if (this.tempSize && !force)\r\n            return cloneObject(this.tempSize);\r\n\r\n        let rect = fullForce ? this.rootDivRef.current.getBoundingClientRect() :\r\n            getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n\r\n        let clientWidth = rect.width;\r\n        let clientHeight = rect.height;\r\n        let scrollTop = 0;\r\n        let scrollLeft = 0;\r\n        let scrollWidth = rect.width;\r\n        let scrollHeight = rect.height;\r\n        if (this.overflowRef.current) {\r\n            clientWidth = fullForce ? this.overflowRef.current.clientWidth :\r\n                getCachedClientWidth(this.props.id, this.overflowRef.current);\r\n            clientHeight = fullForce ? this.overflowRef.current.clientHeight :\r\n                getCachedClientHeight(this.props.id, this.overflowRef.current);\r\n            scrollTop = fullForce ? this.overflowRef.current.scrollTop :\r\n                getCachedScrollTop(this.props.id, this.overflowRef.current);\r\n            scrollLeft = fullForce ? this.overflowRef.current.scrollLeft :\r\n                getCachedScrollLeft(this.props.id, this.overflowRef.current);\r\n            scrollWidth = fullForce ? this.overflowRef.current.scrollWidth :\r\n                getCachedScrollWidth(this.props.id, this.overflowRef.current);\r\n            scrollHeight = fullForce ? this.overflowRef.current.scrollHeight :\r\n                getCachedScrollHeight(this.props.id, this.overflowRef.current);\r\n        }\r\n\r\n        let padding = cloneObject(this.getCompositeFromData(\"padding\")) || {};\r\n        ['top', 'left', 'bottom', 'right'].forEach(key => {\r\n            padding[key] = getPxValueFromCSSValue(padding[key], 0, this) || 0;\r\n        });\r\n        let temp = {\r\n            x: rect.width,\r\n            y: rect.height,\r\n            clientWidth: clientWidth,\r\n            clientHeight: clientHeight,\r\n            scrollTop: scrollTop,\r\n            scrollLeft: scrollLeft,\r\n            scrollWidth: scrollWidth,\r\n            scrollHeight: scrollHeight,\r\n            top: rect.top,\r\n            left: rect.left,\r\n            bottom: rect.bottom,\r\n            right: rect.right,\r\n            width: rect.width,\r\n            height: rect.height,\r\n            widthMinusPadding: rect.width - (padding.left||0)- (padding.right||0),\r\n            heightMinusPadding: rect.height - (padding.top||0)- (padding.bottom||0),\r\n            scrollWidthMinusPadding: scrollWidth - (padding.left||0)- (padding.right||0),\r\n            scrollHeightMinusPadding: scrollHeight - (padding.top||0)- (padding.bottom||0)\r\n        };\r\n\r\n        this.tempSize = temp;\r\n\r\n        if (fullForce) {\r\n            addToCache(this.props.id, this.tempSize, \"boundingRects\");\r\n            addToCache(this.props.id, clientWidth, \"clientsWidth\");\r\n            addToCache(this.props.id, clientHeight, \"clientsHeight\");\r\n            addToCache(this.props.id, scrollTop, \"scrollsTop\");\r\n            addToCache(this.props.id, scrollLeft, \"scrollsLeft\");\r\n            addToCache(this.props.id, scrollWidth, \"scrollsWidth\");\r\n            addToCache(this.props.id, scrollHeight, \"scrollsHeight\");\r\n        }\r\n\r\n        return temp;\r\n    };\r\n\r\n    getBoundarySize = (force) => {\r\n        if (this.transformRef.current) {\r\n            if (!force)\r\n                return getCachedBoundingRect(`${this.props.id}_transform`, this.transformRef.current);\r\n            else\r\n                return this.transformRef.current.getBoundingClientRect();\r\n        }\r\n    };\r\n\r\n    invalidateSize = (self = true, updateParent = true, updateChildren = true, sourceId,\r\n                      addToSnap = false) => {\r\n        if (this.callOverride(\"invalidateSize\", self, updateParent, updateChildren, sourceId))\r\n            return;\r\n\r\n        if (addToSnap)\r\n            this.addToSnap();\r\n\r\n        if (!sourceId)\r\n            sourceId = this.props.id;\r\n\r\n        if (self)\r\n            delete this.tempSize;\r\n\r\n        if (updateChildren) {\r\n            Object.values(this.allChildRefs).forEach(childRef => {\r\n                if (childRef && childRef.current && sourceId !== childRef.current.props.id) {\r\n                    childRef.current.invalidateSize(true, false, true, sourceId, addToSnap);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (updateParent) {\r\n            this.getParentsId().forEach(id => {\r\n                let parent = this.props.idMan.getItem(id);\r\n                if (parent && parent.mounted && sourceId !== parent.props.id) {\r\n                    parent.invalidateSize(true, false, false, sourceId, addToSnap);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onWindowSizeChange = () => {\r\n        this.addToSnap();\r\n        this.prepareRects();\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onWindowSizeChange();\r\n            }\r\n        });\r\n    };\r\n\r\n    getRenderChildData = (id) => {\r\n        return this.children[id];\r\n    };\r\n\r\n    arrangeIndex = (child, type) => {\r\n        let childData = this.getFromTempData(\"savedChildren\")[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let indexData = this.getNextIndexData(currentIndex);\r\n        switch (type) {\r\n            case \"forward\":\r\n                childData.zIndex = indexData.nextZIndex;\r\n                if (indexData.nextChild) {\r\n                    indexData.nextChild.zIndex = currentIndex;\r\n                    this.getRenderChildData(indexData.nextChild.props.id).zIndex = currentIndex;\r\n                }\r\n                break;\r\n            case \"backward\":\r\n                childData.zIndex = indexData.prevZIndex;\r\n                if (indexData.prevChild) {\r\n                    indexData.prevChild.zIndex = currentIndex;\r\n                    this.getRenderChildData(indexData.prevChild.props.id).zIndex = currentIndex;\r\n                }\r\n                break;\r\n            case \"front\":\r\n                childData.zIndex = indexData.lastZIndex + 1;\r\n                break;\r\n            case \"back\":\r\n                childData.zIndex = indexData.firstZIndex - 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    changeIndex = (child, index) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (currentIndex === index)\r\n            return;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let findIndex = (zIndex) => {\r\n            return allChildData.findIndex(a => {\r\n                return a.zIndex === zIndex;\r\n            });\r\n        };\r\n\r\n        let change = currentIndex < index ? -1 : 1;\r\n\r\n        if (findIndex(index)) // if false, means index is free to set\r\n        {\r\n            let startIndex = currentIndex < index ? findIndex(currentIndex) || 0 : findIndex(index);\r\n            let lastIndex = currentIndex < index ? findIndex(index) : findIndex(currentIndex) || 0 ;\r\n\r\n            for (let i = startIndex; i < lastIndex + 1; i++) {\r\n                let testChildData = allChildData[i];\r\n                testChildData.zIndex += change;\r\n                this.getRenderChildData(testChildData.props.id).zIndex = testChildData.zIndex;\r\n            }\r\n        }\r\n\r\n        childData.zIndex = index;\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    setChildZIndex = (childId, zIndex) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[childId];\r\n        childData.zIndex = zIndex;\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n    };\r\n\r\n    getNextIndexData = (currentIndex) => {\r\n        let children = Object.values(this.getFromTempData(\"savedChildren\") || {});\r\n        children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex) {\r\n                return 1;\r\n            } else if (a.zIndex === b.zIndex) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n        let result = {};\r\n        for (let i = 0; i < children.length; i++){\r\n            let child = children[i];\r\n\r\n            let childZIndex = child.zIndex;\r\n\r\n            if (i === 0) {\r\n                result.firstZIndex = childZIndex;\r\n            }\r\n\r\n            if (i === children.length - 1) {\r\n                result.lastZIndex = childZIndex;\r\n            }\r\n\r\n            if (result.nextChild === undefined && childZIndex > currentIndex){\r\n                result.nextChild = child;\r\n                result.nextZIndex = childZIndex;\r\n                continue;\r\n            }\r\n\r\n            if (childZIndex < currentIndex){\r\n                result.prevChild = child;\r\n                result.prevZIndex = childZIndex;\r\n                // continue;\r\n            }\r\n        }\r\n\r\n        if (!result.nextChild)\r\n            result.nextZIndex = result.lastZIndex + 1;\r\n        if (!result.prevChild)\r\n            result.prevZIndex = result.firstZIndex - 1;\r\n\r\n        if (result.lastZIndex === undefined)\r\n            result.lastZIndex = 0;\r\n\r\n        return result;\r\n    };\r\n\r\n    updateLayout = (callback) => {\r\n        if (this.callOverride(\"updateLayout\", callback))\r\n            return;\r\n\r\n        this.setState({reload: true}, callback);\r\n    };\r\n\r\n    isPointInclude = (x, y, forceCalculate) => {\r\n        let rect = this.getSize(false, forceCalculate);\r\n        return x >= rect.left && x <= rect.left + rect.width &&\r\n            y >= rect.top && y <= rect.top + rect.height;\r\n    };\r\n\r\n    addChild = (childElement, newId, newProps, callback, onChildMounted, fixed, keepChildren) => {\r\n        if (this.callOverride(\"addChild\", childElement, newId, newProps, callback, onChildMounted, fixed))\r\n            return;\r\n\r\n        if (!childElement.props.tagName && !childElement.type) {\r\n            throw new Error(\"childElement must pass tagName prop to AGL or be primitive type\");\r\n        }\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let props = newId? newProps: {...childElement.props};\r\n        let createdChild = this.createChildByData({\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props, keepChildren)\r\n        }, DynamicComponents, newId, onChildMounted, fixed);\r\n        this.children[props.id] = {\r\n            child: createdChild,\r\n            zIndex: lastZIndex + 1\r\n        };\r\n\r\n        this.props.griddata.savedChildren[props.id] = {\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props),\r\n            zIndex: this.children[props.id].zIndex\r\n        };\r\n\r\n        this.updateLayout(callback);\r\n        this.props.onChildAdd && this.props.onChildAdd();\r\n    };\r\n\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.callOverride(\"onBreakpointChange\", width, newBreakpointName, devicePixelRatio))\r\n            return;\r\n\r\n        let style = this.getCompositeFromData(\"style\");\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let transform = this.getCompositeFromData(\"transform\");\r\n        this.setStyle(style, undefined, undefined, true);\r\n        this.setGridItemStyle(gridItemStyle, undefined, true);\r\n        this.setTransformStyle(transform, undefined, undefined, true);\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n            }\r\n        });\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    delete = (fromUndoRedo) => {\r\n        if (this.callOverride(\"delete\"))\r\n            return;\r\n\r\n        if (!this.props.parent)\r\n            return;\r\n\r\n        if (this.props.onItemPreDelete) {\r\n            let allow = this.props.onItemPreDelete(this);\r\n            if (!allow)\r\n                return;\r\n        }\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let childData = cloneObject(this.props.parent.getChildData(itemId));\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            }, (idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true);\r\n            });\r\n        }\r\n\r\n        this.clearItem();\r\n\r\n        this.props.parent.removeChildElement(this);\r\n\r\n        this.props.select.clearMiniMenu();\r\n    };\r\n\r\n    getChildData = (childId) => {\r\n        return this.props.griddata.savedChildren[childId];\r\n    };\r\n\r\n    getOverrideProp = (funcName) => {\r\n        let key = Object.keys(this.props).find(key => {\r\n            return key === `${funcName}Override`;\r\n        });\r\n\r\n        return this.props[key];\r\n    };\r\n\r\n    getAllOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"Override\")) {\r\n                result[key] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    getAllChildOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"ChildOverride\")) {\r\n                result[key.replace(\"ChildOverride\", \"Override\")] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    clearItem = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        this.props.gridLine.removeGridLine(this.props.id);\r\n        this.props.snap.removeSnap(this.props.id);\r\n        this.state.selected && this.props.select.updateResizePanes();\r\n        this.state.selected && this.props.select.updateHelpSizeLines();\r\n        this.state.selected && this.props.select.setInspector();\r\n        if (this.state.selected)\r\n            this.props.select.selectedItem = false;\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.clearItem();\r\n            }\r\n        });\r\n    };\r\n\r\n    getClearProps = (props, keepChildren) => {\r\n        delete props.breakpointmanager;\r\n        delete props.undoredo;\r\n        delete props.dragdrop;\r\n        delete props.select;\r\n        delete props.editor;\r\n        delete props.snap;\r\n        delete props.idMan;\r\n        delete props.input;\r\n        delete props.copyMan;\r\n        delete props.anchorMan;\r\n        delete props.aglRef;\r\n        delete props.parent;\r\n        delete props.window;\r\n        delete props.document;\r\n        delete props.viewRef;\r\n        delete props.aglComponent;\r\n        if (!keepChildren)\r\n            delete props.children;\r\n        delete props.allChildRefs;\r\n        delete props.gridLine;\r\n        delete props.page;\r\n        delete props.gridEditorRef;\r\n        delete props.onChildMounted;\r\n\r\n        Object.keys(this.getAllOverrideProps(props)).forEach(key => {\r\n            delete props[key];\r\n        });\r\n\r\n        Object.keys(props).forEach(key => {\r\n            if (typeof props[key] === \"function\")\r\n                delete props[key];\r\n        });\r\n\r\n        return props;\r\n    };\r\n\r\n    removeChildElement = (childElement, callback) => {\r\n        if (this.hasOverride(\"removeChildElement\"))\r\n            return this.callOverride(\"removeChildElement\", childElement);\r\n\r\n        delete this.children[childElement.props.id];\r\n        delete this.allChildRefs[childElement.props.id];\r\n        delete this.props.griddata.savedChildren[childElement.props.id];\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n            this.updateLayout(callback);\r\n        }, 0);\r\n    };\r\n\r\n    // Can be remove carefully\r\n    hide = () => {\r\n        this.setState({hide: true});\r\n    };\r\n\r\n    // Can be remove carefully\r\n    show = () => {\r\n        this.setState({hide: false});\r\n    };\r\n\r\n    onMouseOver = (e, fromEnter) => {\r\n        if (!this.props.dragdrop.getDragging()) {\r\n            e.stopPropagation();\r\n\r\n            // if (this.getFromTempData(\"selected\"))\r\n            //     return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            this.setMouseOverForNonDragging(this);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n        } else {\r\n            if (this.props.isPage)\r\n                return;\r\n\r\n            if (this.props.dragdrop.getDragging().props.id === this.props.id)\r\n                return;\r\n\r\n            e.stopPropagation();\r\n\r\n            let rect = getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n            if (e.clientX < rect.x - 1 || e.clientX > (rect.x + rect.width) ||\r\n                e.clientY < rect.y - 1 || e.clientY > (rect.y + rect.height))\r\n                return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n\r\n            this.setMouseOver(this, {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            }, (draggingItem, mouseOver) => {\r\n                // on new parent state changed\r\n                draggingItem.toggleHelpLines(this);\r\n            });\r\n        }\r\n    };\r\n\r\n    setMouseOverForNonDragging = () => {\r\n        if (this.hasOverride(\"setMouseOverForNonDragging\"))\r\n            return this.callOverride(\"setMouseOverForNonDragging\");\r\n\r\n        this.props.dragdrop.setMouseOverForNonDragging(this);\r\n    };\r\n\r\n    setItemHover = (hover) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        if (hover)\r\n            this.props.select.updateHover(this, this.getSize(false));\r\n        else\r\n            this.props.select.updateHover(this, undefined, true);\r\n    };\r\n\r\n    onMouseEnter = (e) => {\r\n        this.onMouseOver(e, true);\r\n    };\r\n\r\n    onMouseOut = (e, outAllParent) => {\r\n        if (outAllParent && this.props.parent && this.props.parent.onMouseOut)\r\n            this.props.parent.onMouseOut(e);\r\n\r\n        this.setItemHover(false);\r\n    };\r\n\r\n    prepareRects = (forceRect, forceGridLines, callback, gridType) => {\r\n        if (this.hasOverride(\"prepareRects\"))\r\n            return this.callOverride(\"prepareRects\", forceRect, forceGridLines);\r\n\r\n        let rect = this.getSize(false, forceRect);\r\n\r\n        if (forceGridLines || !this.props.gridLine.isPrepared(this.props.id)) {\r\n            this.isEditor() && this.props.gridLine.prepareRects(this.props.id);\r\n        }\r\n\r\n        return rect;\r\n    };\r\n\r\n    onChildDrop = (child, newId, fixed, onNewChildMounted) => {\r\n        if (this.callOverride(\"onChildDrop\", child, newId, fixed, onNewChildMounted))\r\n            return;\r\n\r\n        let childRect = child.getSize(false);\r\n        let thisRect = this.getSize(false, true);\r\n\r\n        let calcResult, gridItemStyle, coordinates, newProps;\r\n\r\n        if (!newId) {\r\n            let relativeY = childRect.top - thisRect.top;\r\n            // if (fixed) {\r\n            //     // relativeY = childRect.top - this.props.breakpointmanager.getWindowHeight() / 8;\r\n            //     relativeY = childRect.top - thisRect.top;\r\n            // }\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                childRect.left - thisRect.left, relativeY, this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n        else\r\n        {\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                thisRect.width / 2 - childRect.width / 2,\r\n                thisRect.height / 2 - childRect.height / 2,\r\n                this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n\r\n        gridItemStyle = calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n        if (!newId) {\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                child.setProps(\"width\", childRect.width, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                child.setProps(\"width\", \"auto\", undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                child.setProps(\"height\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n                child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        } else {\r\n            newProps = {...child.props};\r\n            newProps.griddata = cloneObject(newProps.griddata);\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, newProps.griddata, undefined,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            this.setTempData(\"selected\", true, newProps.griddata);\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                this.setProps(\"width\", childRect.width, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                this.setProps(\"width\", \"auto\", undefined, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                this.setProps(\"height\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        }\r\n\r\n        child.clearFromAllBp(\"style\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n        child.clearFromAllBp(\"gridItemStyle\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.addChild(child, newId, newProps, () => {\r\n            let newChild = this.allChildRefs[newId? newProps.id: child.props.id].current;\r\n            newChild.setGridItemStyle(gridItemStyle,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            if (!newId) {\r\n                newChild.state.selected && newChild.toggleHelpLines(this);\r\n            }\r\n\r\n        }, (agl) => {\r\n            window.requestAnimationFrame(() => {\r\n                this.invalidateSize(true, true, true);\r\n                window.requestAnimationFrame(() => {\r\n                    this.props.select.onScrollItem();\r\n                });\r\n            });\r\n            if (onNewChildMounted)\r\n                onNewChildMounted(agl);\r\n        }, fixed, undefined);\r\n    };\r\n\r\n    onChildLeave = (child, callback) => {\r\n        if (this.hasOverride(\"onChildLeave\"))\r\n            return this.callOverride(\"onChildLeave\", child);\r\n\r\n        this.removeChildElement(child, callback);\r\n        child.removeIdAndChildrenId();\r\n    };\r\n\r\n    removeIdAndChildrenId = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.removeIdAndChildrenId();\r\n            }\r\n        });\r\n    };\r\n\r\n    nonePointerEventForChildren = (parentDragging) => {\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onParentDragging(parentDragging);\r\n            }\r\n        });\r\n    };\r\n\r\n    onParentDragging = (parentDragging) => {\r\n        this.nonePointerEventForChildren(parentDragging);\r\n        if (!parentDragging) {\r\n            this.setRuntimeStyle();\r\n            return;\r\n        }\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.pointerEvents = \"none\";\r\n        this.setRuntimeStyle(runtimeStyle);\r\n    };\r\n\r\n    onDragStart = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDragStart\", e, group, callGroup))\r\n            return;\r\n\r\n        if (this.getFromTempData(\"dontMove\") || this.resizing || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        if (!group)\r\n            this.props.dragdrop.setDragging(this);\r\n\r\n        this.nonePointerEventForChildren(true);\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        if (!this.moveWithMouse) {\r\n            runtimeStyle.top = thisRect.top;\r\n            runtimeStyle.left = thisRect.left;\r\n        } else {\r\n            runtimeStyle.top = e.clientY - thisRect.height / 2;\r\n            runtimeStyle.left = e.clientX - thisRect.width / 2;\r\n        }\r\n\r\n        this.dragData = {\r\n            firstPos: {\r\n                top: runtimeStyle.top,\r\n                left: runtimeStyle.left\r\n            },\r\n            firstBoundaryPos: this.getBoundarySize() && {\r\n                top: this.moveWithMouse? e.clientX - thisRect.width / 2 : this.getBoundarySize().top,\r\n                left: this.moveWithMouse? e.clientY - thisRect.height / 2 : this.getBoundarySize().left\r\n            },\r\n            x: runtimeStyle.left,\r\n            y: runtimeStyle.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n        this.draggingStart = true;\r\n        this.setDraggingState(true, true, undefined, runtimeStyle);\r\n\r\n        this.props.select.updateMenu();\r\n        this.props.select.clearMiniMenu();\r\n\r\n        if (this.props.dragdrop.getMouseOverForNonDragging()) {\r\n            this.props.dragdrop.getMouseOverForNonDragging().onMouseOver(e);\r\n        }\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStart(e, this);\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.hasOverride(\"setMouseOver\"))\r\n            return this.callOverride(\"setMouseOver\", item, positionData, callback);\r\n\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    onDrag = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDrag\", e, group, callGroup))\r\n            return;\r\n\r\n        if (!this.props.parent.children[this.props.id]) {\r\n            return;\r\n        }\r\n        if (this.resizing || !this.state.draggingStart) {\r\n            if (this.props.dragdrop.getDragging()) {\r\n                this.props.dragdrop.setDragging();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.dragData.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.dragData.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.top = this.dragData.y;\r\n        runtimeStyle.left = this.dragData.x;\r\n\r\n        // For snaps\r\n        let boundarySize = this.getBoundarySize();\r\n        if (boundarySize)\r\n            boundarySize = {\r\n                top: this.dragData.firstBoundaryPos.top + (this.dragData.y - this.dragData.firstPos.top),\r\n                left: this.dragData.firstBoundaryPos.left + (this.dragData.x - this.dragData.firstPos.left),\r\n                width: boundarySize.width,\r\n                height: boundarySize.height\r\n            };\r\n        else\r\n            boundarySize = runtimeStyle;\r\n\r\n        if (!isFixed(this) && !group)\r\n            this.checkSnapOnDrag(runtimeStyle, boundarySize);\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.props.select.updateResizePanes(this, runtimeStyle);\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                runtimeStyle.top,\r\n                runtimeStyle.left,\r\n                window.innerHeight - runtimeStyle.top - runtimeStyle.height,\r\n                window.innerWidth - runtimeStyle.left - runtimeStyle.width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                cloneObject(runtimeStyle), this.state.dragging);\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDrag(e, this);\r\n    };\r\n\r\n    updateGridLines = (top, left, bottom, right, gridType) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        let grid = this.getFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top,\r\n                left,\r\n                bottom,\r\n                right,\r\n            }\r\n        )\r\n    };\r\n\r\n    onDragStop = (e, group, callGroup) => {\r\n        if (this.hasOverride(\"onDragStop\"))\r\n            return this.callOverride(\"onDragStop\", e, group, callGroup);\r\n\r\n        if (this.resizing || !this.state.draggingStart || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStop(e, this);\r\n\r\n        if (group)\r\n            // this.props.parent.prepareRects(true);\r\n            this.props.parent.prepareRects();\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n\r\n        this.props.snap.drawSnap();\r\n        this.getSize(true, true);\r\n        if (group || !this.props.dragdrop.setDraggingStop()){\r\n            let parentRect = this.props.parent.getSize(false);\r\n            this.setPosition(\r\n                group,\r\n                left - parentRect.left,\r\n                top - parentRect.top,\r\n                this.dragData.firstPos.left - parentRect.left,\r\n                this.dragData.firstPos.top - parentRect.top, width, height, parentRect);\r\n            return;\r\n        } else if (!group) {\r\n            this.dropped = true;\r\n        }\r\n\r\n        // this.setState({dragging: false, draggingStart: false});\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                top, left,\r\n                window.innerHeight - top - height,\r\n                window.innerWidth - left - width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateMiniMenu();\r\n    };\r\n\r\n    setPosition = (group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                   width, height, parentRect, fromUndoRedo) => {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let redoData = [group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect];\r\n            let undoData = [group, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                width, height, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setPosition\"))\r\n            return this.callOverride(\"setPosition\",\r\n                group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect, fromUndoRedo);\r\n\r\n        let {gridItemStyle, coordinates} = this.calculateGridItem(relativeX, relativeY, this.props.parent,\r\n            width, height, parentRect);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\"){\r\n            this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n        } else {\r\n            this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n        }\r\n        if (this.getCompositeFromData(\"style\").height === \"auto\")\r\n            this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        else {\r\n            this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n            this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        }\r\n\r\n        this.setGridItemStyle(gridItemStyle);\r\n\r\n        this.nonePointerEventForChildren(false);\r\n        this.setRuntimeStyle();\r\n        // this.setState({dragging: false, draggingStart: false}, () => {\r\n        //     this.addToSnap();\r\n        // });\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                {top, left, width, height}, this.state.dragging);\r\n\r\n        this.dropped = false;\r\n\r\n        // this.props.select.updateSize();\r\n        // this.props.select.updateResizePanes(this, {top, left, width, height});\r\n        // this.props.select.updateMiniMenu();\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.invalidateSize(false, true, true);\r\n    };\r\n\r\n    setDraggingState = (dragging, draggingStart, callback, rect) => {\r\n        let fakeStyle = cloneObject({\r\n            ...this.getCompositeFromData(\"style\"),\r\n            ...this.getCompositeFromData(\"gridItemStyle\"),\r\n        });\r\n        this.setState({dragging, draggingStart, fakeStyle}, callback);\r\n    };\r\n\r\n    checkSnapOnDrag = (runtimeStyle, boundarySize) => {\r\n        if (this.callOverride(\"checkSnapOnDrag\", runtimeStyle, boundarySize))\r\n            return;\r\n\r\n        let snapDelta1 = this.getSnapDelta(\r\n            boundarySize.top, boundarySize.left);\r\n        let snapDelta2 = this.getSnapDelta(\r\n            boundarySize.top + boundarySize.height/2, boundarySize.left + boundarySize.width/2);\r\n        let snapDelta3 = this.getSnapDelta(\r\n            boundarySize.top + boundarySize.height, boundarySize.left + boundarySize.width);\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2.snapV? snapDelta2.deltaX:\r\n                snapDelta1.snapV? snapDelta1.deltaX:\r\n                    snapDelta3.snapV? snapDelta3.deltaX: 0,\r\n            deltaY: snapDelta2.snapH? snapDelta2.deltaY:\r\n                snapDelta1.snapH? snapDelta1.deltaY:\r\n                    snapDelta3.snapH? snapDelta3.deltaY: 0,\r\n            snapH: (snapDelta2.snapH || snapDelta1.snapH) || snapDelta3.snapH,\r\n            snapV: (snapDelta2.snapV || snapDelta1.snapV) || snapDelta3.snapV\r\n        };\r\n\r\n        runtimeStyle.left += snapDelta.deltaX;\r\n        runtimeStyle.top += snapDelta.deltaY;\r\n        if (boundarySize !== runtimeStyle) {\r\n            boundarySize.left += snapDelta.deltaX;\r\n            boundarySize.top += snapDelta.deltaY;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: boundarySize.left,\r\n            p2: boundarySize.left + boundarySize.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: boundarySize.top,\r\n            p2: boundarySize.top + boundarySize.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    getSnapDelta = (top, left) => {\r\n        let parentGridLines = [];\r\n        if (this.props.parent) {\r\n            if (this.resizing) {\r\n                parentGridLines = this.props.parent.getGridLineSnaps();\r\n            } else {\r\n                // dragging\r\n                if (this.props.dragdrop.mouseOver &&\r\n                    this.props.gridLine.hasGridLine(this.props.dragdrop.mouseOver.props.id))\r\n                    parentGridLines = this.props.dragdrop.mouseOver &&\r\n                        this.props.dragdrop.mouseOver.getGridLineSnaps();\r\n            }\r\n        }\r\n\r\n        let {snapH, snapV} =\r\n            this.props.snap.checkSnap(top, left, this.props.id, parentGridLines);\r\n\r\n        let deltaX = 0;\r\n        let deltaY = 0;\r\n        if (snapH) {\r\n            deltaY = snapH.value - top;\r\n        }\r\n        if (snapV) {\r\n            deltaX = snapV.value - left;\r\n        }\r\n\r\n        return {\r\n            deltaX, deltaY, snapH, snapV\r\n        }\r\n    };\r\n\r\n    setDocks = (top, left, bottom, right, auto, breakpointName, dontCalculate) => {\r\n        this.setDataInBreakpoint(\"docks\", {top, left, bottom, right}, undefined, breakpointName);\r\n        this.setTempData(\"autoDock\", auto);\r\n\r\n        if (!this.props.parent || dontCalculate)\r\n            return;\r\n\r\n        this.props.parent.prepareRects();\r\n        let thisRect = this.getSize(false);\r\n        let parentRect = this.props.parent.getSize(false);\r\n        let {gridItemStyle} =\r\n            this.calculateGridItem(\r\n                thisRect.left - parentRect.left,\r\n                thisRect.top - parentRect.top,\r\n                this.props.parent,\r\n                thisRect.width,\r\n                thisRect.height,\r\n                parentRect\r\n            );\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width === \"auto\")\r\n        {\r\n            this.setStyleParam(\"width\", `${this.getSize(false).width}px`, undefined, undefined, true);\r\n        }\r\n        else if (gridItemStyle.justifySelf === \"stretch\")\r\n        {\r\n            this.setStyleParam(\"width\", \"auto\", undefined, undefined, true);\r\n        }\r\n    };\r\n\r\n    getDocks = () => {\r\n        return this.getFromData(\"docks\");\r\n    };\r\n\r\n    getBaseDocks = () => {\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return {\r\n            top: gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\",\r\n            bottom: gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\",\r\n            left: gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\",\r\n            right: gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\",\r\n        }\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        return this.props.select.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    calculateGridItem = (relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateGridItem\", relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = this.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let gridArea, coordinates;\r\n        if (isFixed(this)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.height,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.width\r\n            }\r\n        } else {\r\n            let result = this.calculateGridArea(\r\n                parentRect.left + relativeX,\r\n                parentRect.top + relativeY,\r\n                width,\r\n                height,\r\n                parent,\r\n                parentRect\r\n            );\r\n            gridArea = result.gridArea;\r\n            coordinates = result.coordinates;\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        this.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let oldGridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let gridItemStyle = cloneObject(oldGridItemStyle);\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(this);\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        let cx2IsLastLine = gridArea.x2 === xLineRef.length || isFixed(this);\r\n\r\n        let widthForPercent = coordinates.cx2 - coordinates.cx1/* + (cx2IsLastLine?1:0)*/;\r\n        let heightForPercent = coordinates.cy2 - coordinates.cy1/* + (cy2IsLastLine?1:0)*/;\r\n\r\n        let autoDock = this.getFromTempData(\"autoDock\");\r\n        let docks = this.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2) && relativeY >= 0) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                widthForPercent,\r\n                \"px\");\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                `${(relativeY - coordinates.cy1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginTop) || \"px\");\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginLeft) || \"%\");\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginBottom) || \"px\");\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginRight) || \"%\");\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        gridItemStyle.widthForPercent = widthForPercent;\r\n        gridItemStyle.heightForPercent = heightForPercent;\r\n\r\n        /*if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // this is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n            `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    getPxOrPcOrValue = (value, parentValue, unit) => {\r\n        if (unit === \"px\") {\r\n            return `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            return `${parseFloat(value) / parentValue * 100}%`;\r\n        } else {\r\n            return value\r\n        }\r\n    };\r\n\r\n    calculateChildGridItem = (child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateChildGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateChildGridItem\",child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        if (isFixed(child)) {\r\n            if (relativeY < 0) relativeY = 0;\r\n            if (relativeY > parentRect.scrollHeightMinusPadding - height)\r\n                relativeY = parentRect.scrollHeightMinusPadding - height;\r\n            if (relativeX < 0) relativeX = 0;\r\n            if (relativeX > parentRect.scrollWidthMinusPadding - width)\r\n                relativeX = parentRect.scrollWidthMinusPadding - width;\r\n        }\r\n\r\n        let gridArea, coordinates;\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.height,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.width\r\n            }\r\n        } else {\r\n            let result = this.calculateGridArea(\r\n                parentRect.left + relativeX,\r\n                parentRect.top + relativeY,\r\n                width,\r\n                height,\r\n                parent,\r\n                parentRect\r\n            );\r\n            gridArea = result.gridArea;\r\n            coordinates = result.coordinates;\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let oldGridItemStyle = child.getCompositeFromData(\"gridItemStyle\");\r\n        let gridItemStyle = cloneObject(oldGridItemStyle);\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        let cx2IsLastLine = gridArea.x2 === xLineRef.length || isFixed(child);\r\n\r\n        let widthForPercent = coordinates.cx2 - coordinates.cx1 + (cx2IsLastLine?1:0);\r\n        let heightForPercent = coordinates.cy2 - coordinates.cy1 + (cy2IsLastLine?1:0);\r\n\r\n        let autoDock = child.getFromTempData(\"autoDock\");\r\n        let docks = child.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2) && relativeY >= 0) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                widthForPercent,\r\n                \"px\");\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeY - coordinates.cy1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginTop) || \"px\");\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginLeft) || \"%\");\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginBottom) || \"px\");\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginRight) || \"%\");\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        gridItemStyle.widthForPercent = widthForPercent;\r\n        gridItemStyle.heightForPercent = heightForPercent;\r\n\r\n        /*\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n                `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    coordinateToRelative = (coordinates, parentRect) => {\r\n        coordinates.cx1 -= parentRect.left;\r\n        coordinates.cx2 -= parentRect.left;\r\n        coordinates.cy1 -= parentRect.top;\r\n        coordinates.cy2 -= parentRect.top;\r\n    };\r\n\r\n    coordinateToAbsolute = (coordinates, parentRect) => {\r\n        coordinates.cx1 += parentRect.left;\r\n        coordinates.cx2 += parentRect.left;\r\n        coordinates.cy1 += parentRect.top;\r\n        coordinates.cy2 += parentRect.top;\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        } else {\r\n            return \"px\";\r\n        }\r\n    };\r\n\r\n    getTopLeft = (force) => {\r\n        let size = this.getSize(false, force);\r\n        return {\r\n            top: size.top,\r\n            left: size.left\r\n        }\r\n    };\r\n\r\n    pageResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n\r\n        this.resizing = true;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.width = this.getSize().x;\r\n        runtimeStyle.height = this.getSize().y;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstLeft: this.getSize().left,\r\n            top: this.getSize().top,\r\n            left: this.getSize().left\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        this.isEditor() && this.props.select.activateHover(false);\r\n\r\n        if (this.props.onPageResizeStart)\r\n            this.props.onPageResizeStart();\r\n\r\n        window.requestAnimationFrame(this.pageResizeCalculate);\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResizeStart\", e, dir, delta, group))\r\n            return;\r\n\r\n        if (this.resizing)\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        this.resizing = true;\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.maxWidth = \"unset\";\r\n        runtimeStyle.maxHeight = \"unset\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        runtimeStyle.top = thisRect.top;\r\n        runtimeStyle.left = thisRect.left;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstY: runtimeStyle.height,\r\n            firstTop: runtimeStyle.top,\r\n            firstLeft: runtimeStyle.left,\r\n            lastWidth: runtimeStyle.width,\r\n            lastHeight: runtimeStyle.height,\r\n            firstBoundaryWidth: this.getBoundarySize() && this.getBoundarySize().width,\r\n            firstBoundaryHeight: this.getBoundarySize() && this.getBoundarySize().height,\r\n            firstBoundaryTop: this.getBoundarySize() && this.getBoundarySize().top,\r\n            firstBoundaryLeft: this.getBoundarySize() && this.getBoundarySize().left\r\n        };\r\n\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        this.props.select.clearMiniMenu();\r\n        this.props.select.activateHover(false);\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    pageResize = (e, dir, delta) => {\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let deltaX = delta.x;\r\n        let minWidth = this.props.breakpointmanager.getMinWidth();\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= (-deltaX* 2 + minWidth))\r\n                deltaX = -(this.resizeData.firstX - minWidth) / 2;\r\n\r\n            runtimeStyle.width = this.resizeData.firstX + deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft - deltaX;\r\n            if (this.resizeData.firstLeft - deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= (deltaX * 2 + minWidth))\r\n                deltaX = (this.resizeData.firstX - minWidth) / 2;\r\n            runtimeStyle.width = this.resizeData.firstX - deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft + deltaX;\r\n            if (this.resizeData.firstLeft + deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n\r\n        this.updateGridLines(\r\n            this.resizeData.top,\r\n            this.resizeData.left,\r\n            window.innerHeight - this.resizeData.top - runtimeStyle.height,\r\n            window.innerWidth - this.resizeData.left - runtimeStyle.width,\r\n            \"A\"\r\n        );\r\n\r\n        this.updatePageAdjustments();\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n        };\r\n    };\r\n\r\n    updatePageAdjustments = () => {\r\n        this.backContainerRef.current.updateAdjustments();\r\n    };\r\n\r\n    pageResizeCalculate = () => {\r\n        if (this.callOverride(\"pageResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.pageResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle} = this.resizeData.onResizeData;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        if (this.props.onPageResize) {\r\n            this.props.onPageResize(runtimeStyle.width, this);\r\n        }\r\n\r\n        window.requestAnimationFrame(this.pageResizeCalculate);\r\n    };\r\n\r\n    onResize = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResize\", e, dir, delta, group))\r\n            return;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let degree = (this.getCompositeFromData(\"transform\") || {}).rotateDegree || 0;\r\n\r\n        let finalDelta = getResizeDelta(degree, dir, delta);\r\n        runtimeStyle.left = this.resizeData.firstLeft + finalDelta.left;\r\n        runtimeStyle.top = this.resizeData.firstTop + finalDelta.top;\r\n        runtimeStyle.width = this.resizeData.firstX + finalDelta.width;\r\n        runtimeStyle.height = this.resizeData.firstY + finalDelta.height;\r\n\r\n        // For snaps\r\n        let boundarySize = this.getBoundarySize();\r\n\r\n        if (!group && !boundarySize)\r\n            this.checkSnapOnResize(runtimeStyle, dir, this.resizeData);\r\n        // this.checkSnapOnResize(rect, dir, this.resizeData);\r\n\r\n        let rect = {\r\n            top: runtimeStyle.top,\r\n            left: runtimeStyle.left,\r\n            width: runtimeStyle.width,\r\n            height: runtimeStyle.height\r\n        };\r\n\r\n        this.props.select.updateResizePanes(this, rect);\r\n\r\n        if (!group)\r\n            this.setResizeHelpData({\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                width: (dir.includes('w') || dir.includes('e')) && rect.width,\r\n                height: (dir.includes('n') || dir.includes('s')) && rect.height,\r\n            });\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                rect.top,\r\n                rect.left,\r\n                window.innerHeight - rect.top - rect.height,\r\n                window.innerWidth - rect.left - rect.width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n            rect, this.state.dragging);\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n        };\r\n    };\r\n\r\n    onResizeCalculate = () => {\r\n        if (this.callOverride(\"onResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.onResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle} = this.resizeData.onResizeData;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    setResizeHelpData = (resizeHelpData) => {\r\n        this.setState({resizeHelpData})\r\n    };\r\n\r\n    pageResizeStop = (e, dir, delta) => {\r\n        let {width, height} = this.state.runtimeStyle;\r\n        this.isEditor() && this.props.select.activateHover(true);\r\n        this.setPageSize(this.resizeData.top, this.resizeData.left, width, height);\r\n    };\r\n\r\n    setPageSize = (top, left, width, height) => {\r\n        this.setProps(\"width\", width, undefined, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.setRuntimeStyle();\r\n        this.invalidateSize();\r\n\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.resizing = false;\r\n\r\n        this.updateGridLines(\r\n            top, left,\r\n            window.innerHeight - top - height,\r\n            window.innerWidth - left - width,\r\n            \"A\"\r\n        );\r\n\r\n        this.isEditor() && this.props.select.onScrollItem(this);\r\n\r\n        this.prepareRects();\r\n\r\n        if (this.props.onPageResizeStop)\r\n            this.props.onPageResizeStop(width, this);\r\n\r\n        this.resizeData = undefined;\r\n    };\r\n\r\n    setPageSizeWidth = (width) => {\r\n        this.setProps(\"width\", width, undefined, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.invalidateSize();\r\n\r\n        this.addToSnap();\r\n\r\n        let rect = this.getSize(false);\r\n        let minWidth = this.props.breakpointmanager.getMinWidth();\r\n\r\n        if (width < minWidth)\r\n            width = minWidth;\r\n\r\n        let deltaX = width - rect.width;\r\n        let firstLeft = rect.left;\r\n        let left = firstLeft + deltaX;\r\n        if (left < 50)\r\n            left = 50;\r\n\r\n        let top = rect.top;\r\n\r\n        this.updateGridLines(\r\n            top, left,\r\n            window.innerHeight - top - rect.height,\r\n            window.innerWidth - left - width,\r\n            \"A\"\r\n        );\r\n\r\n        this.isEditor() && this.props.select.onScrollItem(this);\r\n\r\n        this.prepareRects();\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta, group) => {\r\n        if (this.hasOverride(\"onResizeStop\"))\r\n            return this.callOverride(\"onResizeStop\", e, dir, delta, group);\r\n        this.resizing = false;\r\n\r\n        if (this.props.onItemPreResizeStop) {\r\n            this.props.onItemPreResizeStop(this, e, dir, delta, this.state.runtimeStyle);\r\n        }\r\n        this.getSize(true, true);\r\n\r\n        if (group)\r\n            this.props.parent.prepareRects();\r\n        // this.props.parent.prepareRects(true);\r\n\r\n        let parentRect = this.props.parent.getSize(false);\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n        // width = this.resizeData.lastWidth;\r\n        // height = this.resizeData.lastHeight;\r\n        this.setSize(\r\n            dir, delta, group,\r\n            left - parentRect.left,\r\n            top - parentRect.top, width, height,\r\n            this.resizeData.firstLeft - parentRect.left,\r\n            this.resizeData.firstTop - parentRect.top,\r\n            this.resizeData.firstX,\r\n            this.resizeData.firstY, parentRect\r\n        );\r\n        this.props.select.updateMiniMenu();\r\n        this.props.select.activateHover(true);\r\n    };\r\n\r\n    setSize = (dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n               firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo) =>\r\n    {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let redoData = [dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect];\r\n            let undoData = [dir, delta, group, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, undefined,\r\n                undefined, undefined, undefined, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setSize\"))\r\n            return this.callOverride(\"setSize\",\r\n                dir, delta, group, relativeX, relativeY, height, width, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo);\r\n\r\n        let gridItemStyle, coordinates;\r\n        let calcResult = this.calculateGridItem(relativeX, relativeY, this.props.parent, width, height);\r\n\r\n        gridItemStyle = this.props.autoConstraintsOff?  this.getCompositeFromData(\"gridItemStyle\"):\r\n            calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width !== \"auto\")\r\n            this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n        else\r\n            this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n\r\n        if (this.getCompositeFromData(\"style\").minWidth) {\r\n            this.setProps(\"minWidth\", width, coordinates, undefined, undefined, true);\r\n        }\r\n        if (this.getCompositeFromData(\"style\").maxWidth) {\r\n            this.setProps(\"maxWidth\", width, coordinates, undefined, undefined, true);\r\n        }\r\n\r\n        if (this.getCompositeFromData(\"style\").height !== \"auto\") {\r\n            this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n        }\r\n        if (!this.getFromTempData(\"isVerticalSection\")) {\r\n            if (this.getCompositeFromData(\"style\").minHeight) {\r\n                this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n            }\r\n            if (this.getCompositeFromData(\"style\").maxHeight) {\r\n                this.setProps(\"maxHeight\", height, coordinates, undefined, undefined, true);\r\n            }\r\n        }\r\n\r\n        if (!this.getFromTempData(\"isSection\"))\r\n            this.setGridItemStyle(gridItemStyle);\r\n        this.setRuntimeStyle();\r\n        this.setResizeHelpData();\r\n\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.props.snap.drawSnap();\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                this.getSize(false).top, this.getSize(false).left,\r\n                window.innerHeight - this.getSize(false).top - height,\r\n                window.innerWidth - this.getSize(false).left - width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                this.getSize(false), this.state.dragging);\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.resizeData = undefined;\r\n\r\n        this.invalidateSize(false, true, true);\r\n    };\r\n\r\n    checkSnapOnResize = (runtimeStyle, dir, resizeData) => {\r\n        if (this.callOverride(\"checkSnapOnResize\", runtimeStyle, dir, resizeData))\r\n            return;\r\n\r\n        let snapDelta1, snapDelta2;\r\n        if (dir.includes(\"n\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"s\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top + runtimeStyle.height, runtimeStyle.left);\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"e\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left + runtimeStyle.width);\r\n        }\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2? snapDelta2.deltaX: 0,\r\n            deltaY: snapDelta1? snapDelta1.deltaY: 0,\r\n            snapH: snapDelta1 && snapDelta1.snapH,\r\n            snapV: snapDelta2 && snapDelta2.snapV\r\n        };\r\n\r\n        if (dir.includes(\"n\")) {\r\n            runtimeStyle.height -= snapDelta.deltaY;\r\n            runtimeStyle.top += snapDelta.deltaY;\r\n        } else if (dir.includes(\"s\")) {\r\n            runtimeStyle.height += snapDelta.deltaY;\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            runtimeStyle.width -= snapDelta.deltaX;\r\n            runtimeStyle.left += snapDelta.deltaX;\r\n        } else if (dir.includes(\"e\")) {\r\n            runtimeStyle.width += snapDelta.deltaX;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: runtimeStyle.left,\r\n            p2: runtimeStyle.left + runtimeStyle.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: runtimeStyle.top,\r\n            p2: runtimeStyle.top + runtimeStyle.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    setProps = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setProps\"))\r\n            return this.callOverride(\"setProps\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        if (prop === \"width\" || prop === \"height\" ||\r\n            prop === \"minWidth\" || prop === \"minHeight\" ||\r\n            prop === \"maxWidth\" || prop === \"maxHeight\")\r\n        {\r\n            this.setNewSize(prop, value, gridCoordinates, data, breakpointName, dontAddToSnap);\r\n        } else {\r\n            this.setDataInBreakpoint(prop, value, data, breakpointName);\r\n        }\r\n    };\r\n\r\n    setDataInBreakpoint = (prop, value, data, breakpointName) => {\r\n        this.props.breakpointmanager.setData(data || this.props.griddata, prop, value, breakpointName);\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setTempData = (prop, value, data) => {\r\n        let dataToWrite = data || this.props.griddata;\r\n        dataToWrite[prop] = value;\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getFromTempData = (prop, data) => {\r\n        let dataToRead = data || this.props.griddata;\r\n        return dataToRead[prop];\r\n    };\r\n\r\n    hasDataInBreakPoint = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .hasDataInBreakPoint(data || this.props.griddata, prop, breakpointName);\r\n    };\r\n\r\n    getFromData = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .getFromData(data || this.props.griddata, prop, breakpointName)\r\n    };\r\n\r\n    getCompositeFromData = (prop, data) => {\r\n        return this.props.breakpointmanager\r\n            .getCompositeFromData(data || this.props.griddata, prop, undefined)\r\n    };\r\n\r\n    setNewSize = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setNewSize\"))\r\n            return this.callOverride(\"setNewSize\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        let oldStyle = this.getCompositeFromData(\"style\", data, breakpointName);\r\n        let oldValue = oldStyle && oldStyle[prop];\r\n\r\n        if (value === undefined) {\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        if (!oldValue || (!this.isPercent(oldValue) && !this.isViewRatio(oldValue)) ||\r\n            value === \"auto\" || isNaN(value)) {\r\n            if (!isNaN(value)) {\r\n                value+=\"px\";\r\n            }\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        if (isNaN(value) && value.includes('px'))\r\n            value = parseFloat(value.replace('px', ''));\r\n\r\n        if (this.isPercent(oldValue)) {\r\n            let parentRect = {\r\n                width: gridCoordinates? (gridCoordinates.cx2 - gridCoordinates.cx1): window.innerWidth,\r\n                height: gridCoordinates?(gridCoordinates.cy2 - gridCoordinates.cy1): window.innerHeight\r\n            };\r\n            let newValue = (value / parentRect[this.getParentProps(prop)] * 100).toString() + \"%\";\r\n            this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n        } else if (this.isViewRatio(oldValue)) {\r\n            let parentValue;\r\n            let postFix;\r\n            if (oldValue.includes('vh')) {\r\n                parentValue = this.props.breakpointmanager.getWindowHeight();\r\n                postFix = 'vh'\r\n            }\r\n            if (oldValue.includes('vw')) {\r\n                parentValue = this.props.breakpointmanager.getWindowWidth();\r\n                postFix = 'vw'\r\n            }\r\n            let newValue = (value / parentValue * 100).toString() + postFix;\r\n            newValue = getViewRatioStyle(newValue);\r\n            this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n        }\r\n    };\r\n\r\n    getParentProps = (prop) => {\r\n        if (prop === \"width\" ||\r\n            prop === \"minWidth\" ||\r\n            prop === \"maxWidth\")\r\n        {\r\n            return \"width\";\r\n        }\r\n\r\n        return \"height\";\r\n    };\r\n\r\n    isPercent = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"%\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    isViewRatio = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"vh\") || value.includes(\"vw\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setRuntimeStyle = (newRuntimeStyle, animationCss) => {\r\n        if (this.callOverride(\"setRuntimeStyle\", newRuntimeStyle))\r\n            return;\r\n\r\n        let runtimeStyle = newRuntimeStyle && {...newRuntimeStyle};\r\n        this.setState({runtimeStyle, animationCss});\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getGridItemStyleId = () => {\r\n        return `style_grid_item_${this.props.id}`;\r\n    };\r\n\r\n    setGridItemStyle = (newGridItemStyle, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setGridItemStyle\", newGridItemStyle, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let gridItemStyle = {...newGridItemStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, undefined, breakpointName);\r\n\r\n        let styleNode = document.getElementById(this.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getCompositeFromData(\"gridItemStyle\"),\r\n                this.getGridItemStyleId(), this.getGridItemStyleId(), this);\r\n        } else {\r\n            updateStyle(styleNode, this.getCompositeFromData(\"gridItemStyle\"), this.getGridItemStyleId());\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setGridArea = (gridArea, breakpointName) => {\r\n        if (this.callOverride(\"setGridArea\", gridArea))\r\n            return;\r\n\r\n        let gridItemStyle = this.getFromData(\"gridItemStyle\");\r\n        gridItemStyle.gridArea = gridArea;\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n    };\r\n\r\n    getGridArea = () => {\r\n        if (this.callOverride(\"getGridArea\"))\r\n            return;\r\n\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return gridItemStyle.gridArea;\r\n    };\r\n\r\n    setStyleParam = (param, value, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setStyleParam\"))\r\n            return this.callOverride(\"setStyleParam\", param, value, data, breakpointName);\r\n\r\n        let style = this.hasDataInBreakPoint(\"style\", data, breakpointName) || {};\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        this.setStyle(style, data, breakpointName, undefined, dontAddToSnap);\r\n    };\r\n\r\n    getStyleId = () => {\r\n        return `style_${this.props.id}`;\r\n    };\r\n\r\n    getDesignStyleId = () => {\r\n        return `style_design_${this.props.id}`;\r\n    };\r\n\r\n    setDesignStyle = (newDesignStyle, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setDesignStyle\", newDesignStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let designStyle = {...newDesignStyle};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"designStyle\", designStyle, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let designStyleNode = document.getElementById(this.getDesignStyleId());\r\n\r\n            if (!designStyleNode) {\r\n                appendStyle(this.getCompositeFromData(\"designStyle\"),\r\n                    this.getDesignStyleId(), this.getDesignStyleId(), this);\r\n            } else {\r\n                updateStyle(designStyleNode, this.getCompositeFromData(\"designStyle\"), this.getDesignStyleId());\r\n            }\r\n\r\n            this.invalidateSize();\r\n            this.addToSnap();\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyleId = () => {\r\n        return `style-transform-${this.props.id}`;\r\n    };\r\n\r\n    setTransformStyle = (newTransform, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setTransformStyle\", newTransform, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let transform = {...newTransform};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"transform\", transform, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let transformStyleNode = document.getElementById(this.getTransformStyleId());\r\n\r\n            if (!transformStyleNode) {\r\n                appendStyle(this.getTransformStyle(),\r\n                    this.getTransformStyleId(), this.getTransformStyleId(), this);\r\n            } else {\r\n                updateStyle(transformStyleNode, this.getTransformStyle(), this.getTransformStyleId());\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyle = (compositeTransform) => {\r\n        if (!compositeTransform)\r\n            compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n\r\n        let rules = [];\r\n\r\n        // TODO add more rules\r\n        compositeTransform.rotateDegree && rules.push(`rotate(${compositeTransform.rotateDegree}deg)`);\r\n\r\n        return {transform: rules.join(' ')};\r\n    };\r\n\r\n    setStyle = (newStyle, data, breakpointName, dontOverride, dontAddToSnap) => {\r\n        if (this.callOverride(\"setStyle\", newStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let style = {...newStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"style\", style, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let styleNode = document.getElementById(this.getStyleId());\r\n\r\n            if (!styleNode) {\r\n                appendStyle(\r\n                    this.getCompositeFromData(\"style\"),\r\n                    this.getStyleId(), this.getStyleId(), this);\r\n            } else {\r\n                updateStyle(styleNode,\r\n                    this.getCompositeFromData(\"style\"),\r\n                    this.getStyleId());\r\n            }\r\n\r\n            if (!dontAddToSnap) {\r\n                this.invalidateSize();\r\n                this.addToSnap();\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    clearFromAllBp = (props, data, excludeBp) => {\r\n        let sortedBp = this.props.breakpointmanager.getSortedBreakPoints();\r\n        sortedBp.forEach( bp => {\r\n            if (excludeBp !== bp.name || !excludeBp.includes(bp.name))\r\n                this.setDataInBreakpoint(props, undefined, data, bp.name);\r\n        });\r\n    };\r\n\r\n    setGrid = (grid, callback, breakpointName) => {\r\n        if (this.callOverride(\"setGrid\", grid, callback, breakpointName))\r\n            return;\r\n\r\n        this.setDataInBreakpoint(\"grid\", grid, undefined, breakpointName);\r\n        this.setState({grid: grid}, () => {\r\n            if (this.props.gridLine.hasGridLine(this.props.id)) {\r\n                let size = this.getSize(false);\r\n                this.updateGridLines(\r\n                    size.top,\r\n                    size.left,\r\n                    size.top + size.clientHeight,\r\n                    size.left + size.clientWidth,\r\n                    this.props.gridLine.hasGridLine(this.props.id)\r\n                );\r\n            }\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    getGridLineRect = (ref, index, dir, item) => {\r\n        if (ref.current) {\r\n            return ref.current.rect;\r\n        }\r\n\r\n        let parentRect = item.props.parent && item.props.parent.getSize(false) || {\r\n            width: item.props.breakpointmanager.getWindowWidth()\r\n        };\r\n        let padding = cloneObject(item.getCompositeFromData(\"padding\")) || {};\r\n        ['top', 'left', 'bottom', 'right'].forEach(key => {\r\n            padding[key] = getPxValueFromCSSValue(padding[key], parentRect.width, item) || 0;\r\n        });\r\n\r\n        let thisRect = item.getSize(false);\r\n        if (dir === 'x') {\r\n            if (index === 0) {\r\n                return {\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left ,\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top,\r\n                    height: thisRect.scrollHeight - padding.top - padding.bottom,\r\n                    width: 1\r\n                }\r\n            } else {\r\n                return {\r\n                    left: thisRect.left - thisRect.scrollLeft + thisRect.scrollWidth - padding.right - 1,\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top,\r\n                    height: thisRect.scrollHeight - padding.top - padding.bottom,\r\n                    width: 1\r\n                }\r\n            }\r\n        } else {\r\n            if (index === 0) {\r\n                return {\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top ,\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left,\r\n                    height: 1,\r\n                    width: thisRect.scrollWidth - padding.left - padding.right,\r\n                }\r\n            } else {\r\n                return {\r\n                    top: thisRect.top - thisRect.scrollTop + thisRect.scrollHeight - padding.bottom - 1,\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left,\r\n                    height: 1,\r\n                    width: thisRect.scrollWidth - padding.left - padding.right,\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getGridLineOfPoint = (left, top, parent, after = false, parentRect) => {\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false);\r\n        let x;\r\n        let cx;\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', parent);\r\n            if (left < rect.left || (after && left <= rect.left)) {\r\n                x = i;\r\n                if (!after) {\r\n                    if (xLineRef[i - 1]) {\r\n                        // rect = xLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = xLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(xLineRef[i - 1], i - 1, 'x', parent);\r\n                        cx = rect.left;\r\n                    } else {\r\n                        // cx = parentRect.left - parentRect.scrollLeft;\r\n                        cx = rect.left;\r\n                    }\r\n                } else {\r\n                    cx = rect.left;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (x === undefined) {\r\n            x = xLineRef.length;\r\n            // let rect = xLineRef[xLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = xLineRef[xLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(xLineRef[xLineRef.length - 1], xLineRef.length - 1, 'x', parent);\r\n            cx = rect.left;\r\n        }\r\n\r\n        let y;\r\n        let cy;\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let rect = yLineRef[i].current.getBoundingClientRect();\r\n            // let rect = yLineRef[i].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', parent);\r\n            if (top < rect.top || (after && top <= rect.top)) {\r\n                y = i;\r\n                if (!after) {\r\n                    if (yLineRef[i - 1]) {\r\n                        // rect = yLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = yLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(yLineRef[i - 1], i - 1, 'y', parent);\r\n                        cy = rect.top;\r\n                    } else {\r\n                        // cy = parentRect.top - parentRect.scrollTop;\r\n                        cy = rect.top;\r\n                    }\r\n                } else {\r\n                    cy = rect.top;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (y === undefined) {\r\n            y = yLineRef.length;\r\n            // let rect = yLineRef[yLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = yLineRef[yLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[yLineRef.length - 1], yLineRef.length - 1, 'y', parent);\r\n            cy = rect.top;\r\n        }\r\n\r\n        if (after) {\r\n            x++;\r\n            y++;\r\n        }\r\n\r\n        x = Math.max(1, x);\r\n        x = Math.min(xLineRef.length, x);\r\n        y = Math.max(1, y);\r\n        y = Math.min(yLineRef.length, y);\r\n\r\n        if (x === xLineRef.length)\r\n            cx++;\r\n        if (y === yLineRef.length)\r\n            cy++;\r\n\r\n        return {x, y, cx, cy};\r\n    };\r\n\r\n    calculateGridArea = (left, top, width, height, parent, parentRect) => {\r\n        if (!this.props.gridLine.hasGridLine(parent.props.id)) {\r\n            return {\r\n                gridArea: {x1: 1, y1: 1, x2: 2, y2: 2},\r\n                coordinates: {cx1: 0, cy1: 0, cx2: 0, cy2: 0}\r\n            }\r\n        }\r\n        let gridLine1 = this.getGridLineOfPoint(left, top, parent, false, parentRect);\r\n        let gridLine2 = this.getGridLineOfPoint(left + width, top + height, parent, true, parentRect);\r\n        return {\r\n            gridArea: {x1: gridLine1.x, y1: gridLine1.y, x2: gridLine2.x, y2: gridLine2.y},\r\n            coordinates: {cx1: gridLine1.cx, cy1: gridLine1.cy, cx2: gridLine2.cx, cy2: gridLine2.cy}\r\n        };\r\n    };\r\n\r\n    onMouseDown = (e, moveWithMouse) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            this.moveWithMouse = moveWithMouse;\r\n            this.mouseMoved = {\r\n                deltaX: 0,\r\n                deltaY: 0,\r\n                lastClientX: e.clientX,\r\n                lastClientY: e.clientY,\r\n                startMillis: (new Date()).getTime()\r\n            };\r\n            window.addEventListener(\"mousemove\", this.onMouseMove);\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        } else if (isRightClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseMoved.deltaX += (e.clientX - this.mouseMoved.lastClientX);\r\n        this.mouseMoved.deltaY += (e.clientY - this.mouseMoved.lastClientY);\r\n        this.mouseMoved.lastClientX = e.clientX;\r\n        this.mouseMoved.lastClientY = e.clientY;\r\n\r\n        if (!this.moving) {\r\n            let currentMillis = new Date().getTime();\r\n            if (Math.abs(this.mouseMoved.deltaX) > 10 ||\r\n                Math.abs(this.mouseMoved.deltaY) > 10 ||\r\n                currentMillis - this.mouseMoved.startMillis > 500)\r\n            {\r\n                if (!this.state.groupSelected && this.getFromTempData(\"draggable\") && !this.state.selected) {\r\n                    this.onSelect(true);\r\n                }\r\n                this.moving = true;\r\n                this.canMove() && this.onDragStart(e, isGroupSelected(this), true);\r\n            }\r\n        } else {\r\n            this.canMove() && this.onDrag(e, isGroupSelected(this), true);\r\n        }\r\n    };\r\n\r\n    canMove = () => {\r\n        return (this.state.selected || this.state.groupSelected) && this.getFromTempData(\"draggable\");\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        delete this.moveWithMouse;\r\n\r\n        if (isRightClick(e)) {\r\n            this.onContextMenu(e);\r\n            this.mouseDown = false;\r\n            window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n            return;\r\n        }\r\n\r\n        let currentMillis = new Date().getTime();\r\n        if (!this.moving && currentMillis - this.mouseMoved.startMillis < 500) {\r\n            if (!this.dropped) {\r\n                e.stopPropagation();\r\n                this.onSelect(true, undefined, undefined, true);\r\n            } else {\r\n                this.dropped = false;\r\n            }\r\n        }\r\n\r\n        if (this.moving && this.canMove()) {\r\n            window.requestAnimationFrame(() => {\r\n                this.onDragStop(e, isGroupSelected(this), true);\r\n            });\r\n        }\r\n\r\n        this.moving = false;\r\n        this.mouseDown = false;\r\n\r\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\r\n        window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n    };\r\n\r\n    onSelect = (selected, callback, deselectParent, clicked, dontUpdateAdjustment) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        if (this.callOverride(\"onSelect\", selected, callback, deselectParent))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n        if (!this.props.isSelectable)\r\n            return;\r\n\r\n        if (selected) {\r\n            this.props.select.selectItem(this, clicked, dontUpdateAdjustment);\r\n            this.toggleGridLines(selected, undefined, \"A\");\r\n        } else {\r\n            this.props.select.updateHelpSizeLines();\r\n        }\r\n\r\n        if (this.props.parent) {\r\n            if (selected || deselectParent)\r\n                this.props.parent.toggleGridLines(selected, () => {\r\n                    this.toggleHelpLines(selected && this.props.parent);\r\n                }, \"B\");\r\n        } else {\r\n            selected && this.props.gridLine.removeGridLineByType(\"B\");\r\n            this.props.select.updateHelpSizeLines();\r\n        }\r\n\r\n        this.setTempData(\"selected\", selected);\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        this.setState({selected, groupSelected: false}, () => {\r\n            selected && this.setItemHover(true);\r\n\r\n            this.props.editor.updateLayout();\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    toggleGridLines = (showGridLines, callback, gridType) => {\r\n        if (this.callOverride(\"toggleGridLines\", showGridLines, callback, gridType))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        if (!showGridLines) {\r\n            this.props.gridLine.removeGridLine(this.props.id);\r\n            this.updateLayout();\r\n            return;\r\n        }\r\n\r\n        if (this.props.gridLine.hasGridLine(this.props.id, gridType)) {\r\n            if (callback)\r\n                callback();\r\n\r\n            this.updateLayout();\r\n\r\n            return;\r\n        }\r\n\r\n        let grid = this.getCompositeFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            },\r\n            () => {\r\n                if (callback)\r\n                    callback();\r\n\r\n                this.updateLayout();\r\n            }\r\n        );\r\n    };\r\n\r\n    toggleHelpLines = (helpLinesParent, callback) => {\r\n        if (this.callOverride(\"toggleHelpLines\", helpLinesParent, callback))\r\n            return;\r\n\r\n        if (this.mounted) {\r\n            this.setState({\r\n                helpLinesParent: helpLinesParent !== this && helpLinesParent\r\n            }, () => {\r\n                helpLinesParent &&\r\n                this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                    this.getSize(false), this.state.dragging);\r\n\r\n                if (callback)\r\n                    callback();\r\n            });\r\n        }\r\n    };\r\n\r\n    onScroll = (e) => {\r\n        console.log(\"onScroll\", this.props.id);\r\n        if (this.callOverride(\"onScroll\", e))\r\n            return;\r\n\r\n        this.isEditor() && this.invalidateSize(true, false, true);\r\n        this.isEditor() && this.props.select.updateParentsRect();\r\n        this.isEditor() && this.props.select.onScrollItem();\r\n        this.onScrollEnd(e);\r\n    };\r\n\r\n    onRootScroll = (e) => {\r\n        if (this.getFromTempData(\"isFixed\")) {\r\n            this.props.parent.forceScroll(e);\r\n        }\r\n    };\r\n\r\n    forceScroll = (e) => {\r\n        console.log(\"forceScroll\", this.props.id, this.rootDivRef.current.scrollTop, e.deltaY);\r\n\r\n        clearTimeout(this.scrollReset);\r\n\r\n        if (!this.targetScroll) this.targetScroll = {\r\n            top: this.rootDivRef.current.scrollTop\r\n        };\r\n\r\n        if (this.targetScroll.top < 0 && e.deltaY > 0)\r\n            this.targetScroll.top = 0;\r\n\r\n        let maxTop = this.rootDivRef.current.scrollHeight - this.getSize(false).height;\r\n        if (this.targetScroll.top > maxTop && e.deltaY < 0) {\r\n            this.targetScroll.top = maxTop;\r\n        }\r\n\r\n        this.targetScroll.top += e.deltaY;\r\n\r\n        this.rootDivRef.current.scrollTo({\r\n            top: this.targetScroll.top,\r\n            behavior: 'smooth'\r\n        });\r\n\r\n        this.scrollReset = setTimeout(() => {\r\n            this.targetScroll = {\r\n                top: this.rootDivRef.current.scrollTop\r\n            };\r\n        }, 500);\r\n    }\r\n\r\n    onScrollEnd = debounce((e) => {\r\n        if (this.callOverride(\"onScrollEnd\", e))\r\n            return;\r\n\r\n        this.isEditor() && this.invalidateSize();\r\n        this.isEditor() && this.addToSnap();\r\n    }, 500);\r\n\r\n    editGrid = () => {\r\n        this.props.gridEditorRef.current.editing(this);\r\n    };\r\n\r\n    updateGridEditor = () => {\r\n        this.props.gridEditorRef.current.update(this);\r\n    };\r\n\r\n    setAnchor = (anchor) => {\r\n        if (this.callOverride(\"setAnchor\", anchor))\r\n            return;\r\n\r\n        this.setTempData(\"anchor\", anchor);\r\n        this.updateLayout();\r\n    };\r\n\r\n    isEditor = () => {\r\n        return this.props.editor;\r\n    }\r\n\r\n    playAnimation = (disable) => {\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        if (!compositeDesign.animation || !compositeDesign.animation.name)\r\n            return;\r\n\r\n        if (this.getFromData(\"dontAnimate\"))\r\n            return;\r\n\r\n        // Component going to show animation, so add end listener for more action\r\n        let onAnimationEnd = DynamicAnimations[compositeDesign.animation.name].onAnimationEnd;\r\n\r\n        let stateChange = {\r\n            forceKey: \"animationReplay\",\r\n            showAnimation: true,\r\n            onAnimationEnd\r\n        };\r\n\r\n        if (disable) {\r\n            stateChange.disableVS = true;\r\n            this.setTempData(\"dontAnimate\", true);\r\n        }\r\n\r\n        this.isEditor() && this.props.select.activateHover(false);\r\n        this.isEditor() && this.props.select.activateResize(false);\r\n\r\n        this.setState(stateChange);\r\n    };\r\n\r\n    onAnimationEnd = () => {\r\n        this.setState({forceKey: undefined, showAnimation: undefined});\r\n        this.isEditor() && this.props.select.activateHover(true);\r\n        this.isEditor() && this.props.select.activateResize(true);\r\n    };\r\n\r\n    getCompositeAnimationCss = (compositeAnimation = {}) => {\r\n        if (!(compositeAnimation.name && this.state.forceKey && this.state.showAnimation))\r\n            return;\r\n\r\n        return DynamicAnimations[compositeAnimation.name]\r\n            .getAnimationCSS(this, compositeAnimation.options);\r\n    };\r\n\r\n    onContextMenu = (e) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        e.preventDefault();\r\n        this.onSelect(true);\r\n        this.props.select.onContextMenu(e, this);\r\n    };\r\n\r\n    getContextMenu = () => {\r\n        if (this.hasOverride(\"getContextMenu\"))\r\n            return this.callOverride(\"getContextMenu\");\r\n    };\r\n\r\n    render () {\r\n        let {className, animationCss, as, editor, select, id, getStaticChildren,\r\n            isPage, page, getChildrenOverride, modifyContainerStyleOverride} = this.props;\r\n        let {selected, runtimeStyle, portalNodeId, disableVS, showAnimation, forceKey, grid,\r\n            draggingStart, showGridLines, resizeHelpData} = this.state;\r\n        let isContainer = this.props.griddata.isContainer;\r\n        let children = this.children;\r\n        let resizeData = this.resizeData;\r\n        let size = runtimeStyle || this.getSize(false);\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        let compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n        let compositeStyle = this.getCompositeFromData(\"style\");\r\n        let overflowData = this.getCompositeFromData(\"overflowData\");\r\n        console.log(\"bpData\", this.props.griddata.bpData, this.props.id);\r\n        let anchor = this.getFromTempData(\"anchor\");\r\n        let selectAsParent = this.props.gridLine.hasGridLine(this.props.id, \"B\") !== undefined;\r\n\r\n        let classes = classNames(\r\n            \"AwesomeGridLayoutRoot\",\r\n            \"AwesomeGridLayoutGrid\",\r\n            className,\r\n            this.getDesignStyleId(),\r\n            this.getGridItemStyleId(),\r\n            this.getStyleId(),\r\n            this.getCompositeAnimationCss(compositeDesign.animation),\r\n            isPage && \"PageScrollBar\"\r\n        );\r\n\r\n        let holderClasses = classNames(\r\n            \"AwesomeGridLayoutHolder\",\r\n            this.getTransformStyleId(),\r\n        );\r\n\r\n        let TagAs = as || \"div\";\r\n\r\n        return (\r\n            <Portal nodeId={portalNodeId} disabled={!portalNodeId}>\r\n                <VisibilitySensorWrapper\r\n                    animation={compositeDesign.animation}\r\n                    editor={editor}\r\n                    playAnimation={this.playAnimation}\r\n                    select={select}\r\n                    disableVS={disableVS}\r\n                >\r\n                        <TagAs\r\n                            onMouseDown={!showAnimation ? this.onMouseDown : undefined}\r\n                            onMouseOver={this.onMouseOver}\r\n                            onMouseEnter={this.onMouseEnter}\r\n                            onMouseOut={this.onMouseOut}\r\n                            onScroll={this.onRootScroll}\r\n                            onWheel={this.onRootScroll}\r\n                            id={id}\r\n                            className={classes}\r\n                            style={{\r\n                                ...runtimeStyle,\r\n                                ...(this.canMove() && {cursor: \"move\"}),\r\n                                // ...(!this.isEditor() && this.getFromTempData(\"isFixed\") && {pointerEvents: \"none\"}),\r\n                                ...(isPage && {overflowY: \"auto\", overflowX: \"hidden\"}),\r\n                                ...(overflowData.state === 'hide' && {\r\n                                    overflowY: 'hidden',\r\n                                    overflowX: 'hidden',\r\n                                }),\r\n                                ...(showAnimation && {\r\n                                    opacity: 0\r\n                                })\r\n                            }}\r\n                            ref={this.rootDivRef}\r\n                            key={id}\r\n                            onAnimationEnd={this.onAnimationEnd}\r\n                        >\r\n                            {\r\n                                this.getFromTempData(\"pageResize\") &&\r\n                                !showAnimation &&\r\n                                <AdjustmentResizePage\r\n                                    id={id}\r\n                                    key={`${id}_resize`}\r\n                                    sides={['e','w']}\r\n                                    onResizeStart={this.pageResizeStart}\r\n                                    onResize={this.pageResize}\r\n                                    onResizeStop={this.pageResizeStop}\r\n                                    data={runtimeStyle || size}\r\n                                    top={(resizeData && resizeData.top) || (size && size.top)}\r\n                                    left={(resizeData && resizeData.left) || (size && size.left)}\r\n                                    width={(runtimeStyle && runtimeStyle.width) || (size && size.width)}\r\n                                    height={(runtimeStyle && runtimeStyle.height) || (size && size.height)}\r\n                                    draggingStart={draggingStart}\r\n                                    itemId={id}\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                selected && resizeHelpData &&\r\n                                !this.getFromTempData(\"pageResize\") &&\r\n                                !showAnimation &&\r\n                                !isGroupSelected(this) &&\r\n                                <AdjustmentHelpSize\r\n                                    resizeHelpData={resizeHelpData}\r\n                                />\r\n                            }\r\n\r\n                            <ChildHolder\r\n                                className={holderClasses}\r\n                                key={forceKey || `${id}_container`}\r\n                                id={`${id}_child_holder`}\r\n                                disabled={Object.keys(compositeTransform).length > 0}\r\n                                transformRef={this.transformRef}\r\n                            >\r\n                                {\r\n                                    getStaticChildren && getStaticChildren()\r\n                                }\r\n\r\n                                <GridChildContainer\r\n                                    id={id}\r\n                                    key={`${id}_container`}\r\n                                    allChildren={children}\r\n                                    grid={grid}\r\n                                    overflowData={overflowData}\r\n                                    showGridLines={showGridLines}\r\n                                    aglStyle={compositeStyle}\r\n                                    overflowRef={this.overflowRef}\r\n                                    containerRef={this.containerRef}\r\n                                    show={isContainer}\r\n                                    onScroll={this.onScroll}\r\n                                    isPage={isPage}\r\n                                    editor={editor}\r\n                                    page={page}\r\n                                    ref={this.backContainerRef}\r\n                                    size={runtimeStyle || size}\r\n                                    getChildrenOverride={getChildrenOverride}\r\n                                    agl={this}\r\n                                    padding={this.getCompositeFromData(\"padding\")}\r\n                                    modifyContainerStyleOverride={modifyContainerStyleOverride}\r\n                                    selectAsParent={selectAsParent}\r\n                                    selected={selected}\r\n                                />\r\n                            </ChildHolder>\r\n\r\n                            <AGLAnchor\r\n                                anchor={anchor}\r\n                            />\r\n\r\n                            {\r\n                                this.state.dragging && this.props.parent &&\r\n                                <Portal nodeId={this.state.portalNodeId ||\r\n                                    `${this.props.parent.props.id}_container`}\r\n                                >\r\n                                    <div\r\n                                        className={this.state.fakeStyle}\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            pointerEvents: \"none\",\r\n                                            ...this.state.fakeStyle\r\n                                        }}\r\n                                    />\r\n                                </Portal>\r\n                            }\r\n\r\n                        </TagAs>\r\n                </VisibilitySensorWrapper>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n\r\nAwesomeGridLayout2.defaultProps = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    childSize: {w: \"100%\", h: \"100%\"},\r\n    showSideResize: false,\r\n    isSelectable: true,\r\n    layoutType: \"free\", // free, grid\r\n    snap: {x: 1, y: 1},\r\n    dir: \"rtl\", // rtl, ltr,\r\n    compactType: \"vertical\", // none, vertical, horizontal\r\n    defaultGrid: {\r\n        x: 1,\r\n        y: 1,\r\n        gridTemplateRows: \"1fr\",\r\n        gridTemplateColumns: \"1fr\"\r\n    },\r\n    defaultStyle: {\r\n        width: \"50%\",\r\n        height: \"50%\",\r\n    },\r\n    defaultGridItemStyle: {\r\n        alignSelf: \"center\",\r\n        justifySelf: \"center\",\r\n        position: \"relative\",\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        gridArea: \"1/1/2/2\",\r\n    }\r\n};\r\n","import AwesomeGridLayout2 from \"../../AwesomeGridLayout2\";\r\nimport React from \"react\";\r\nimport {assignData, initGriddata} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AGLWrapper extends React.Component{\r\n    render() {\r\n        let griddata = this.props.aglRef.current && this.props.aglRef.current.props.griddata;\r\n        if (!griddata) griddata = this.props.griddata;\r\n        if (griddata && griddata.initialized) {\r\n            if (!griddata.fillWithData) {\r\n                griddata.fillWithData = true;\r\n                let bpData = this.props.data.bpData;\r\n                Object.keys(this.props.data).forEach(key => {\r\n                    if (key !== \"bpData\") {\r\n                        griddata[key] = this.props.data[key];\r\n                    }\r\n                });\r\n                assignData(griddata.bpData[\"laptop\"], bpData);\r\n            }\r\n        } else {\r\n            griddata = assignData(this.props.griddata, this.props.data);\r\n            initGriddata(griddata, this.props.breakpointmanager);\r\n        }\r\n\r\n        return (\r\n            <AwesomeGridLayout2\r\n                className={this.props.className}\r\n                {...this.props}\r\n                ref={this.props.aglRef}\r\n                griddata={griddata}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class StackSpacerContainer extends React.PureComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n    }\r\n\r\n    updateSpacers = (spacers) => {\r\n        setTimeout(() => {\r\n            this.setState({spacers});\r\n        }, 0);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.state.spacers.map((spacer, index) => {\r\n                return <Portal nodeId={`${this.props.aglRef.current.props.id}_container`}\r\n                               key={index}\r\n                               document={this.props.document}\r\n                >\r\n                    {spacer}\r\n                </Portal>\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentMove extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        let rect = this.rootDivRef.current.getBoundingClientRect();\r\n        if (this.isLeftClick(e) && e.clientX >= rect.left && e.clientX <= rect.left + rect.width &&\r\n            e.clientY >= rect.top && e.clientY <= rect.top + rect.height) {\r\n            e.stopPropagation();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        } else {\r\n            if (this.props.onClick)\r\n                this.props.onClick(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.props.onDragStart(e);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.props.onDrag(e);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentMove\"\r\n                className=\"AdjustmentMoveRoot\"\r\n                ref={this.rootDivRef}\r\n                onPointerDown={this.onMouseDown}\r\n                style={{\r\n                    cursor: this.props.cursor || \"move\"\r\n                }}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\n\r\nexport default class StackSpacerResizer extends React.PureComponent{\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerResizerRoot\"\r\n            >\r\n                <AdjustmentMove\r\n                    onDragStart={this.props.onDragStart}\r\n                    onDrag={this.props.onDrag}\r\n                    onDragStop={this.props.onDragStop}\r\n                    cursor={this.props.cursor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\nimport StackSpacerResizer from \"./StackSpacerResizer\";\r\n\r\nexport default class StackSpacer extends React.PureComponent{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            pointerEvents: \"auto\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setPointerEvents = (pointerEvents) => {\r\n        this.mounted && this.setState({pointerEvents});\r\n    };\r\n\r\n    updateSpacerData = (newHeight) => {\r\n        this.props.spacerData.height = newHeight;\r\n        this.props.stack.props.select.updateSize();\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClick = (e) => {\r\n        this.props.aglRef.current.onSelect(true);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        if (this.props.onDragStart)\r\n            this.props.onDragStart(e);\r\n\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n            firstHeight: this.props.spacerData.height\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        e.preventDefault();\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        let newHeight = this.dragData.firstHeight + deltaY;\r\n\r\n        newHeight = Math.max(0, newHeight);\r\n        this.updateSpacerData(newHeight);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerRoot\"\r\n                style={{\r\n                    height: `${this.props.spacerData.height}px`,\r\n                    order: this.props.order,\r\n                    pointerEvents: this.state.pointerEvents\r\n                }}\r\n                onClick={this.onClick}\r\n                onMouseOver={this.props.onMouseOver}\r\n                onMouseEnter={this.props.onMouseEnter}\r\n                onMouseOut={this.props.onMouseOut}\r\n            >\r\n\r\n                <StackSpacerResizer\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n\r\n                {\r\n                    this.props.aglRef.current.getSize(false).width > 150 &&\r\n                    <p\r\n                        className=\"StackSpacerText\"\r\n                    >\r\n                        Spacer\r\n                    </p>\r\n                }\r\n\r\n                <p\r\n                    className=\"StackSpacerSizeText\"\r\n                >\r\n                    {`${this.props.spacerData.height.toFixed(0)}px`}\r\n                </p>\r\n\r\n                <AdjustmentMove\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    onClick={this.onClick}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {isFixed, isStretch} from \"../../AwesomwGridLayoutHelper\";\r\nimport {appendStyle, cloneObject, updateStyle} from \"../../AwesomeGridLayoutUtils\";\r\nimport StackSpacerContainer from \"./StackSpacerContainer\";\r\nimport StackSpacer from \"./StackSpacer\";\r\n\r\nexport default class Stack extends AGLComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n        this.aglRef = React.createRef();\r\n        this.spacerContainerRef = React.createRef();\r\n\r\n        if (props.allSpacerData)\r\n            this.allSpacerData = props.allSpacerData;\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n        };\r\n    };\r\n\r\n    getChildrenOverride = (sortedChildrenArray, agl) => { // [{child: child, zIndex: zIndex}], agl\r\n        return sortedChildrenArray.map((child, index) => {\r\n            return child.child;\r\n        });\r\n    };\r\n\r\n    lateMountedOverride = (agl) => {\r\n        agl.invalidateSize();\r\n        agl.addToSnap();\r\n        agl.onSelect(agl.getFromTempData(\"selected\"));\r\n\r\n        if (agl.props.onPageResize) {\r\n            let rect = agl.getSize(false, true);\r\n            agl.props.onPageResize(rect.width, agl, true);\r\n        }\r\n\r\n        agl.props.onChildMounted && agl.props.onChildMounted(agl);\r\n        if (this.props.lateMountedComplete)\r\n            this.props.lateMountedComplete(this);\r\n\r\n        this.setOrder();\r\n    };\r\n\r\n    calculateGridItemChildOverride = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateChildGridItemOverride =\r\n        (child1, child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateWrapper = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) => {\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let {gridArea, coordinates} = child.calculateGridArea(\r\n            parentRect.left + relativeX,\r\n            parentRect.top + relativeY,\r\n            width,\r\n            height,\r\n            parent,\r\n            parentRect\r\n        );\r\n\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.clientHeight,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.clientWidth\r\n            }\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let gridItemStyle = {...(child.state.gridItemStyle || child.props.defaultGridItemStyle)};\r\n        delete gridItemStyle.marginLeft;\r\n        delete gridItemStyle.marginRight;\r\n\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.alignSelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.alignSelf = \"flex-end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"flex-start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            // if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n            // gridItemStyle.alignSelf = \"end\";\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // } else {\r\n            // gridItemStyle.alignSelf = \"start\";\r\n            // gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            // }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }\r\n\r\n        delete gridItemStyle.justifySelf;\r\n        delete gridItemStyle.marginTop;\r\n        delete gridItemStyle.marginBottom;\r\n        delete gridItemStyle.gridArea;\r\n\r\n        child.setDataInBreakpoint(\"relativeY\", relativeY);\r\n\r\n        this.setOrder(child.props.id, child, relativeY, height, fromState);\r\n\r\n        child.setStyleParam(\"height\", \"auto\");\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    setOrder = (childId, child, childRelativeY, childHeight, fromState) => {\r\n        let childFound = false;\r\n        let childOrderSet = false;\r\n        let sorted = Object.values(this.aglRef.current.allChildRefs).sort((a,b) => {\r\n            if (a && a.current && b && b.current){\r\n                if (a.current.props.id === childId || b.current.props.id === childId)\r\n                    childFound = true;\r\n\r\n                let relativeYA = a.current.getFromData(\"relativeY\");\r\n                let relativeYB = b.current.getFromData(\"relativeY\");\r\n                if (relativeYA < relativeYB) {\r\n                    return -1;\r\n                } else if (relativeYA === relativeYB) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    if (childId === a.current.props.id)\r\n                        return -1;\r\n                    else if (childId === b.current.props.id)\r\n                        return 1;\r\n                    else\r\n                        return 0;\r\n                }\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        let order = 1;\r\n        let relativeY = 0;\r\n        let spacers = [];\r\n        let length = sorted.filter(childRef => {\r\n            return (childRef && childRef.current);\r\n        }).length;\r\n\r\n        sorted.forEach((childRef, index) => {\r\n            if (childRef && childRef.current) {\r\n                if (childRelativeY && !childFound) {\r\n                    let relativeY2 = childRef.current.getFromData(\"relativeY\");\r\n                    if (!childOrderSet && relativeY2 > childRelativeY) {\r\n                        childOrderSet = true;\r\n                        child.setStyleParam(\"order\", order);\r\n                        child.setDataInBreakpoint(\"order\", order);\r\n                        order++;\r\n                    }\r\n                }\r\n                childRef.current.setStyleParam(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"relativeY\", relativeY);\r\n                let size = childRef.current.getSize(false);\r\n                relativeY += size.height;\r\n\r\n                if (childId === childRef.current.props.id) {\r\n                    childOrderSet = true;\r\n                }\r\n                order++;\r\n\r\n                if (length > index + 1) {\r\n                    spacers[index] = this.getSpacer(index, order);\r\n                    relativeY+= this.getSpacerData(index).height;\r\n                    order++;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (child && !childOrderSet) {\r\n            childOrderSet = true;\r\n            child.setStyleParam(\"order\", order);\r\n            child.setDataInBreakpoint(\"order\", order);\r\n            order++;\r\n        }\r\n\r\n        this.spacerContainerRef.current.updateSpacers(spacers);\r\n        setTimeout(() => {\r\n            this.props.select.updateSize();\r\n        }, 0);\r\n    };\r\n\r\n    getSpacer = (index, order) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        if (!this.allSpacerRef[index]) {\r\n            this.allSpacerRef[index] = React.createRef();\r\n        }\r\n\r\n        return <StackSpacer\r\n            key={index}\r\n            order={order}\r\n            spacerData={this.allSpacerData[index]}\r\n            ref={this.allSpacerRef[index]}\r\n            aglRef={this.aglRef}\r\n            onDragStart={this.onStackDragStart}\r\n            onDragStop={this.onStackDragStop}\r\n            stack={this}\r\n            onMouseOver={this.onMouseOverSpacer}\r\n            onMouseEnter={this.onMouseEnterSpacer}\r\n            onMouseOut={this.onMouseOutSpacer}\r\n        />;\r\n    };\r\n\r\n    onStackDragStart = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", true);\r\n    };\r\n\r\n    onStackDragStop = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", false);\r\n    };\r\n\r\n    getSpacerData = (index) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        return this.allSpacerData[index];\r\n    };\r\n\r\n    setMouseOverOverride = (agl, item, positionData, callback) => {\r\n        this.setPointerEventOfSpacers(\"none\");\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    setMouseOverForNonDraggingOverride = (agl) => {\r\n        this.setPointerEventOfSpacers(\"auto\");\r\n        agl.props.dragdrop.setMouseOverForNonDragging(agl);\r\n    };\r\n\r\n    setPointerEventOfSpacers = (pointerEvents) => {\r\n        if (!this.allSpacerRef)\r\n            this.allSpacerRef = [];\r\n\r\n        this.allSpacerRef.forEach((spacerRef) => {\r\n            if (spacerRef && spacerRef.current)\r\n                spacerRef.current.setPointerEvents(pointerEvents);\r\n        })\r\n    };\r\n\r\n    setGridItemStyleChildOverride = (child, newGridItemStyle) => {\r\n        let gridItemStyle = {...newGridItemStyle};\r\n        delete gridItemStyle.gridArea;\r\n        child.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle);\r\n        let styleNode = document.getElementById(child.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(gridItemStyle, child.getGridItemStyleId(), child.getGridItemStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, gridItemStyle, child.getGridItemStyleId());\r\n        }\r\n    };\r\n\r\n    modifyContainerStyleOverride = (container, agl, grid, aglStyle) => {\r\n        let style;\r\n\r\n        style = {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            position: \"relative\"\r\n        };\r\n\r\n        let styleNode = document.getElementById(container.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, container.getContainerStyleId(), container.getContainerStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, style, container.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    onChildLeaveOverride = (agl, child) => {\r\n        agl.removeChildElement(child);\r\n        child.removeIdAndChildrenId();\r\n\r\n        this.setOrder();\r\n\r\n        if (!agl.removing && Object.values(agl.allChildRefs).length === 1) {\r\n            agl.removing = true;\r\n            setTimeout(() => {\r\n                Object.values(agl.allChildRefs)[0] &&\r\n                this.props.dragdrop.dropItem(\r\n                    Object.values(agl.allChildRefs)[0].current,\r\n                    Object.values(agl.allChildRefs)[0].current.props.parent,\r\n                    this.props.parent, undefined, false, 2);\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    stretchChildOverride = (child, item) => {\r\n        if (!item.props.parent)\r\n            return;\r\n\r\n        let stretch = false;\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n\r\n        if (!isStretch(item, true)) {\r\n            stretch = true;\r\n        }\r\n\r\n        gridItemStyle.alignSelf = stretch? \"stretch\": \"center\";\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n        item.setStyleParam(\"width\", \"100%\");\r\n\r\n        if (!stretch) {\r\n            item.setStyleParam(\"width\", \"80%\");\r\n        }\r\n\r\n        item.setGridItemStyle(gridItemStyle);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    isStretchChildOverride = (child, item, log) => {\r\n        if (!item.props.parent)\r\n            return false;\r\n\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n        return !(gridItemStyle.alignSelf !== \"stretch\" ||\r\n            gridItemStyle.marginLeft !== \"0px\" ||\r\n            gridItemStyle.marginRight !== \"0px\");\r\n    };\r\n\r\n    setStyleParamOverride = (agl, param, value, data) => {\r\n        if (param === \"height\" || param === \"minHeight\")\r\n            return;\r\n\r\n        let style = !data? agl.getFromData(\"style\"): agl.getFromData(\"style\", data);\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        agl.setStyle(style, data);\r\n    };\r\n\r\n    onMouseOverSpacer = (e) => {\r\n        this.aglRef.current.onMouseOver(e);\r\n    };\r\n\r\n    onMouseEnterSpacer = (e) => {\r\n        this.aglRef.current.onMouseEnter(e);\r\n    };\r\n\r\n    onMouseOutSpacer = (e) => {\r\n        this.aglRef.current.onMouseOut(e);\r\n    };\r\n\r\n    onChildAdd = () => {\r\n        this.getAgl().removing = false;\r\n    };\r\n\r\n    render() {\r\n        return [\r\n            <AGLWrapper tagName=\"Stack\"\r\n                        key=\"Stack\"\r\n                        aglRef={!this.props.aglRef? this.aglRef: this.aglRef = this.props.aglRef}\r\n                        {...this.props}\r\n                        data={this.getData()}\r\n                        style={{...{\r\n                            height: \"auto\"\r\n                        }, ...this.props.style}}\r\n                        getChildrenOverride={this.getChildrenOverride}\r\n                        isStack={true}\r\n                        resizeSides={['e','w']}\r\n                        onDragStartChildOverride={this.onDragStartChildOverride}\r\n                        onDragChildOverride={this.onDragChildOverride}\r\n                        onDragStopChildOverride={this.onDragStopChildOverride}\r\n                        setGridItemStyleChildOverride={this.setGridItemStyleChildOverride}\r\n                        calculateGridItemChildOverride={this.calculateGridItemChildOverride}\r\n                        calculateChildGridItemOverride={this.calculateChildGridItemOverride}\r\n                        modifyContainerStyleOverride={this.modifyContainerStyleOverride}\r\n                        setMouseOverOverride={this.setMouseOverOverride}\r\n                        setMouseOverForNonDraggingOverride={this.setMouseOverForNonDraggingOverride}\r\n                        stretchChildOverride={this.stretchChildOverride}\r\n                        isStretchChildOverride={this.isStretchChildOverride}\r\n                        lateMountedOverride={this.lateMountedOverride}\r\n                        setStyleParamOverride={this.setStyleParamOverride}\r\n                        onChildLeaveOverride={this.onChildLeaveOverride}\r\n                        onChildAdd={this.onChildAdd}\r\n\r\n            >\r\n            </AGLWrapper>,\r\n            <StackSpacerContainer ref={this.spacerContainerRef} key=\"spacers\"\r\n                                  aglRef={this.aglRef}\r\n                                  document={this.props.document}\r\n            />\r\n        ]\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Divider from \"../Menus/CommonComponents/Divider\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport {LightMenuTooltip} from \"../Components/Containers/Menus/Components/LightTooltip\";\r\nimport {isLeftClick} from \"../AwesomwGridLayoutHelper\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener/ClickAwayListener\";\r\nimport MenuList from \"@material-ui/core/MenuList/MenuList\";\r\n\r\nexport default class ContextMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getFakeAnchor = (clientX, clientY) => {\r\n        return {\r\n            clientWidth: 0,\r\n            clientHeight: 0,\r\n            getBoundingClientRect: () => {\r\n                return {\r\n                    top: clientY,\r\n                    left: clientX,\r\n                    width: 0,\r\n                    height: 0,\r\n                    bottom: clientY,\r\n                    right: clientX\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let {menu, clientX, clientY, popperStyle, onClose} = this.props;\r\n        return (\r\n            <>\r\n                <Popper\r\n                    style={{...{\r\n                            zIndex: 99999999999999\r\n                        }, ...popperStyle}}\r\n                    // anchorReference=\"anchorPosition\"\r\n                    // anchorPosition={\r\n                    //     clientY !== null && clientX !== null\r\n                    //         ? { top: clientY, left: clientX }\r\n                    //         : undefined\r\n                    // }\r\n                    anchorEl={this.getFakeAnchor(clientX, clientY)}\r\n                    open={true}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                    placement=\"bottom-start\"\r\n                >\r\n                    <Paper style={{\r\n                        boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n                    }}>\r\n                        <ClickAwayListener onClickAway={onClose} mouseEvent='onMouseDown'>\r\n                            <MenuList autoFocusItem={true} style={{padding: 0}}\r\n                                      onPointerDown={(e) => {\r\n                                          e.preventDefault();\r\n                                          e.stopPropagation();\r\n                                      }}\r\n                            >\r\n                                {\r\n                                    menu.map((section, i) => {\r\n                                        let hasDivider = (i !== menu.length - 1);\r\n                                        return (\r\n                                            [\r\n                                                section.map((menuItem, j) => {\r\n                                                    return (\r\n                                                        <ContextMenuItem\r\n                                                            key={`${i}${j}`}\r\n                                                            onClose={onClose}\r\n                                                            menuItem={menuItem}\r\n                                                        />\r\n                                                    )\r\n                                                }),\r\n                                                hasDivider && <Divider style={{\r\n                                                    width: \"100%\",\r\n                                                    margin: 0,\r\n                                                    display: \"block\"\r\n                                                }}/>\r\n                                            ]\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                </Popper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport class ContextMenuItem extends React.Component {\r\n    render () {\r\n        let {menuItem, onClose} = this.props;\r\n\r\n        if (!menuItem.subMenu)\r\n            return (\r\n                <MenuItem\r\n                    dense\r\n                    onClick={(e) => {\r\n                        if (menuItem.onClick) {\r\n                            menuItem.onClick(e);\r\n                            onClose && onClose(e);\r\n                        }\r\n                    }}\r\n                    onPointerDown={(e) => {\r\n                        if (!isLeftClick(e)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }\r\n                    }}\r\n                >\r\n                    <span style={{\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"1fr auto\",\r\n                        alignItems: \"center\",\r\n                        width: \"100%\"\r\n                    }}>\r\n                        {menuItem.name}\r\n                        <span style={{\r\n                            fontSize: 10,\r\n                            marginLeft: 24,\r\n                            color: \"#9a9a9a\"\r\n                        }}>\r\n                            {\r\n                                menuItem.shortcut\r\n                            }\r\n                        </span>\r\n                    </span>\r\n                </MenuItem>\r\n            );\r\n        else\r\n            return (\r\n                <LightMenuTooltip\r\n                    title={\r\n                        menuItem.subMenu.map((menuItem, j) => {\r\n                            return (\r\n                                <ContextMenuItem\r\n                                    key={`${j}`}\r\n                                    onClose={onClose}\r\n                                    menuItem={menuItem}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    interactive\r\n                    placement=\"right\"\r\n                    leaveDelay={200}\r\n                    PopperProps={{\r\n                        style: {\r\n                            zIndex: 99999999999999,\r\n                        },\r\n                        modifiers:{\r\n                            flip: {\r\n                                enabled: true,\r\n                            },\r\n                            preventOverflow: {\r\n                                enabled: true,\r\n                                boundariesElement: 'viewport',\r\n                            },\r\n                        }}\r\n                    }\r\n                >\r\n                    <MenuItem\r\n                        dense\r\n                        onPointerDown={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation()\r\n                        }}\r\n                    >\r\n                        <span style={{\r\n                            display: \"grid\",\r\n                            gridTemplateColumns: \"1fr auto\",\r\n                            alignItems: \"center\",\r\n                            width: \"100%\"\r\n                        }}>\r\n                            {menuItem.name}\r\n                            <img draggable={false} width={8} height={8}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/right-arrow.svg'}\r\n                                style={{\r\n                                    marginLeft: 24,\r\n                                    color: \"#9a9a9a\"\r\n                                }}\r\n                            />\r\n                    </span>\r\n                    </MenuItem>\r\n                </LightMenuTooltip>\r\n            )\r\n    }\r\n}\r\n\r\n/*\r\n* Structure of input menu object\r\n* [\r\n*   [ // each section has one array\r\n    *   {\r\n    *       name: \"delete\",\r\n    *       onClick: function,\r\n    *       icon: <img ... />\r\n    *       shortcut: \"Ctrl + D\"\r\n    *       subMenu: {other Menu}\r\n    *   }\r\n*   ]\r\n* ]\r\n* */\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {isLeftClick} from \"./AwesomwGridLayoutHelper\";\r\n\r\nexport default class SelectManager {\r\n    constructor() {\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            this.ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n        });\r\n        window.addEventListener(\"keyup\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            if (key === 17) {\r\n                this.ctrl = false;\r\n            }\r\n        });\r\n\r\n        this.ctrl = false;\r\n        this.shift = false;\r\n        this.alt = false;\r\n\r\n        this.mouseDown = 0;\r\n        window.addEventListener(\"mousedown\",(e) =>{\r\n            if (isLeftClick(e))\r\n                this.mouseDown = 1;\r\n        });\r\n        window.addEventListener(\"mouseup\",(e) =>{\r\n            if (isLeftClick(e) && this.mouseDown > 0)\r\n                this.mouseDown = 0;\r\n        });\r\n    }\r\n}\r\n","import {throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport {\r\n    createStack,\r\n    getSectionId,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport ContainerBase from \"./Components/Containers/ContainerBase\";\r\nimport React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport throttle from \"lodash.throttle\";\r\n\r\nexport default class SelectManager {\r\n    constructor(inputManager, groupSelectRef, pageAglRef, miniMenuHolderRef,\r\n                inspectorRef, resizeRef, helpLinesRef, hoverRef) {\r\n        this.inputManager = inputManager;\r\n        this.groupSelectRef = groupSelectRef;\r\n        this.pageAglRef = pageAglRef;\r\n        this.miniMenuHolderRef = miniMenuHolderRef;\r\n        this.inspectorRef = inspectorRef;\r\n        this.resizeRef = resizeRef;\r\n        this.helpLinesRef = helpLinesRef;\r\n        this.hoverRef = hoverRef;\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 71 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + G\");\r\n                this.editGrid();\r\n            }\r\n            if ( key === 49 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 1\");\r\n                this.test1();\r\n            }\r\n            if ( key === 50 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 2\");\r\n                this.test2();\r\n            }\r\n            if ( key === 51 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 3\");\r\n                this.test3();\r\n            }\r\n        });\r\n    }\r\n\r\n    setContext = (editorContext) => {\r\n        this.context = editorContext;\r\n    }\r\n\r\n    getPageOverflowRef = () => {\r\n        if (this.pageAglRef.current)\r\n            return this.pageAglRef.current.overflowRef.current;\r\n    };\r\n\r\n    editGrid = (item) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        } else if (!item){\r\n            item = this.getSelected();\r\n        }\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.editGrid();\r\n    };\r\n\r\n    selectItem = (item, clicked, dontUpdateAdjustments) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        }\r\n\r\n        if (this.inputManager.ctrl && clicked && getSectionId(this.selectedItem) === getSectionId(item)) {\r\n            this.createGroup(item);\r\n            return;\r\n        } else if (this.inputManager.ctrl){\r\n            // TODO can notify to user that can't select multiple item from different section\r\n            this.clearGroup();\r\n        } else {\r\n            this.clearGroup();\r\n        }\r\n\r\n        if (this.selectedItem.props.id !== item.props.id){\r\n            this.selectedItem.onSelect(false, undefined, true);\r\n        }\r\n\r\n        if (!dontUpdateAdjustments) {\r\n            if (this.selectedItem.props.id !== item.props.id){\r\n                this.updateMenu();\r\n            }\r\n\r\n            this.updateMiniMenu(item);\r\n            this.setInspector(\r\n                item.props.getInspector()\r\n            );\r\n            this.updateResizePanes(item, item.getSize(false));\r\n        }\r\n\r\n        this.selectedItem = item;\r\n    };\r\n\r\n    clearMiniMenu = () => {\r\n        this.miniMenuHolderRef.current.clearMiniMenu();\r\n    };\r\n\r\n    onContextMenu = (e, item) => {\r\n        this.miniMenuHolderRef.current.onContextMenu(e, item);\r\n    };\r\n\r\n    updateMiniMenu = (item) => {\r\n        if(!item)\r\n            item = this.getSelected();\r\n\r\n        if (item && item.hasMiniMenu())\r\n            this.miniMenuHolderRef.current.addMiniMenu(item);\r\n        else\r\n            this.clearMiniMenu();\r\n    };\r\n\r\n    updateMenu = (menu) => {\r\n        this.miniMenuHolderRef.current.addMenu(menu);\r\n    };\r\n\r\n    setInspector = (inspectorMenu) => {\r\n        this.inspectorRef.current.setMenu(inspectorMenu);\r\n    };\r\n\r\n    clearGroup = () => {\r\n        if (!this.group)\r\n            return;\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: false,\r\n                groupDragStart: undefined,\r\n                groupDrag: undefined,\r\n                groupDragStop: undefined,\r\n            });\r\n            item.onSelect(false, undefined, true);\r\n        });\r\n\r\n        this.group = undefined;\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    createGroup = (item) => {\r\n        let selectedItem = this.selectedItem;\r\n        this.selectedItem = undefined;\r\n\r\n        if (!this.group) {\r\n            this.group = [];\r\n            selectedItem && this.group.push(selectedItem);\r\n        }\r\n\r\n        item && this.group.push(item);\r\n\r\n        this.updateResizePanes();\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: true,\r\n                groupDragStart: this.groupDragStart,\r\n                groupDrag: this.groupDrag,\r\n                groupDragStop: this.groupDragStop,\r\n            });\r\n        });\r\n\r\n        this.updateGroupRect();\r\n        this.clearMiniMenu();\r\n        this.updateMenu();\r\n    };\r\n\r\n    groupDragStart = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStart(e, true);\r\n        });\r\n    };\r\n\r\n    groupDrag = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDrag(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    groupDragStop = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStop(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    deleteGroup = () => {\r\n        if (!this.group) {\r\n            return;\r\n        }\r\n\r\n        this.group.forEach(item => {\r\n            item.delete();\r\n        });\r\n\r\n        this.clearGroup();\r\n    };\r\n\r\n    updateGroupRect = () => {\r\n        if (!this.group) {\r\n            this.groupSelectRef.current.updateRect();\r\n            return;\r\n        }\r\n\r\n        let firstRect = this.group[0].getSize(false, true);\r\n        let top = firstRect.top;\r\n        let left = firstRect.left;\r\n        let bottom = window.innerHeight - firstRect.top - firstRect.height;\r\n        let right =  window.innerWidth - firstRect.left - firstRect.width;\r\n\r\n        this.group.slice(1, this.group.length).forEach(item => {\r\n            let rect = item.getSize(false, true);\r\n            top = Math.min(top, rect.top);\r\n            left = Math.min(left, rect.left);\r\n            bottom = Math.min(bottom, window.innerHeight - rect.top - rect.height);\r\n            right = Math.min(right, window.innerWidth - rect.left - rect.width);\r\n        });\r\n\r\n        this.groupSelectRef.current.updateRect({\r\n            top, left, bottom, right\r\n        }, this.group);\r\n    };\r\n\r\n    getSelected = () => {\r\n        return this.selectedItem;\r\n    };\r\n\r\n    updateParentsRect = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects(true, true);\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects(true, true);\r\n    }, 40);\r\n\r\n    isEditor = () => {\r\n        return !this.context.preview;\r\n    }\r\n\r\n    // change grid line positions and resize panes\r\n    onScrollItem = throttleDebounce(() => {\r\n        if (!this.isEditor())\r\n            return;\r\n\r\n        this.updateGroupRect();\r\n\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects();\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects();\r\n\r\n        let size = item.getSize(false, true);\r\n        item.updateGridLines(\r\n            size.top, size.left,\r\n            window.innerHeight - size.top - size.height,\r\n            window.innerWidth - size.left - size.width,\r\n            \"A\"\r\n        );\r\n        item.updateGridEditor();\r\n        this.updateMiniMenu();\r\n        this.updateResizePanes(item, size);\r\n\r\n        this.updateHelpSizeLines(item, item.state.helpLinesParent, size, item.state.dragging,\r\n            item.getBoundarySize(true));\r\n        this.updateHover(item, size);\r\n    }, 50);\r\n\r\n    // updateSize\r\n    updateSize = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        let size = item.getSize(true, true);\r\n\r\n        this.updateResizePanes(item, size);\r\n    }, 100);\r\n\r\n    updateResizePanes = (item, data) => {\r\n        this.resizeRef.current.update(item, data, item && item.getTransformStyleId());\r\n    };\r\n\r\n    updateHelpLines = throttle((item, helpLineParent, itemRect, dragging) => {\r\n        this.updateHelpSizeLines(item, helpLineParent, itemRect, dragging,\r\n            item.getBoundarySize());\r\n    }, 50);\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        if (this.helpLinesRef.current)\r\n            return this.helpLinesRef.current.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    updateHover = (item, size, clear) => {\r\n        this.hoverRef.current.update(item, size, clear);\r\n    };\r\n\r\n    activateHover = (active) => {\r\n        this.hoverRef.current.activate(active);\r\n    };\r\n\r\n    activateResize = (active) => {\r\n        this.resizeRef.current.activate(active);\r\n    };\r\n\r\n    updateHelpSizeLines = (item, helpLineParent, itemRect, dragging, fakeItemRect) => {\r\n        if (this.helpLinesRef.current)\r\n            this.helpLinesRef.current.update(item, helpLineParent, itemRect, dragging, fakeItemRect);\r\n    };\r\n\r\n    test1 = () => {\r\n        createStack(this.group);\r\n    };\r\n\r\n    test2 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        let child =\r\n            <ContainerBase\r\n                style={{\r\n                    width: \"50%\",\r\n                    height: \"auto\",\r\n                    minHeight: \"75px\"\r\n                }}\r\n                data={{\r\n                    bpData: {\r\n                        design:{\r\n                            fillColor: `#5cff${Math.floor(Math.random() * 89) + 10  }`,\r\n                        },\r\n                    }\r\n                }}\r\n            />;\r\n\r\n        item.addChild(child, undefined, undefined, undefined, (agl) => {\r\n        }, undefined, true);\r\n    };\r\n\r\n    test3 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        item.playAnimation();\r\n    };\r\n}\r\n","export default class SnapManager {\r\n    constructor (snapThreshold, snapSvgRef) {\r\n        this.snaps = {};\r\n        this.snapThreshold = snapThreshold || 10;\r\n        this.snapSvgRef = snapSvgRef;\r\n    }\r\n\r\n    addSnap = (id, horizontals = [], verticals = [], parentsId) => {\r\n        this.snaps[id] = {\r\n            horizontals, verticals, id, parentsId\r\n        };\r\n    };\r\n\r\n    removeSnap = (id) => {\r\n        delete this.snaps[id];\r\n    };\r\n\r\n    checkSnap = (top, left, ignoreId, additionalSnaps = []) => {\r\n        let snapH, snapV;\r\n        let topUp = top + this.snapThreshold;\r\n        let topDown = top - this.snapThreshold;\r\n        let leftUp = left + this.snapThreshold;\r\n        let leftDown = left - this.snapThreshold;\r\n\r\n        let snaps = Object.values(this.snaps);\r\n        snaps = snaps.concat(additionalSnaps);\r\n\r\n        for (let i = 0; i < snaps.length; i++) {\r\n            let snap = snaps[i];\r\n            if (!snap)\r\n                continue;\r\n\r\n            if (snap.id === ignoreId)\r\n                continue;\r\n            if (snap.parentsId && snap.parentsId.includes(ignoreId))\r\n                continue;\r\n\r\n            if (!snapH){\r\n                for (let h = 0; h < snap.horizontals.length; h++) {\r\n                    let horizontal = snap.horizontals[h];\r\n                    if (!horizontal)\r\n                        continue;\r\n                    if (horizontal.value <= topUp && horizontal.value >= topDown) {\r\n                        snapH = horizontal;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!snapV) {\r\n                for (let v = 0; v < snap.verticals.length; v++) {\r\n                    let vertical = snap.verticals[v];\r\n                    if (!vertical)\r\n                        continue;\r\n                    if (vertical.value <= leftUp && vertical.value >= leftDown) {\r\n                        snapV = vertical;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (snapH && snapV)\r\n                break;\r\n        }\r\n\r\n        return {snapH, snapV};\r\n    }\r\n\r\n    drawSnap = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.snapSvgRef.current.update(snapH, snapV, pointOfSnapH, pointOfSnapV)\r\n    }\r\n}\r\n","import {createItem} from \"./AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport throttle from \"lodash.throttle\";\r\n\r\nexport default class CopyManager {\r\n    constructor(selectManager, pageRef, dragdrop) {\r\n        this.selectManager = selectManager;\r\n        this.pageRef = pageRef;\r\n        this.dragdrop = dragdrop;\r\n\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 86 && ctrl ) {\r\n                console.log(\"ctrl + V\");\r\n                this.paste();\r\n            } else if ( key === 67 && ctrl ) {\r\n                console.log(\"ctrl + C\");\r\n                this.copy();\r\n            } else if ( key === 68 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + D\");\r\n                this.duplicate();\r\n            } else if ( key === 46 ) {\r\n                console.log(\"delete\");\r\n                this.delete();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    copy = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copyItem = item;\r\n    };\r\n\r\n    getCopyItem = () => {\r\n        return this.copyItem;\r\n    };\r\n\r\n    paste = throttle((selectedItem) => {\r\n        if (!this.copyItem)\r\n            return;\r\n        let destinationItem;\r\n        if (!selectedItem)\r\n            selectedItem = this.selectManager.getSelected() || this.pageRef.current;\r\n\r\n        while (!destinationItem)  {\r\n            if (selectedItem.getFromTempData(\"isContainer\")) {\r\n                destinationItem = selectedItem;\r\n            } else {\r\n                selectedItem = selectedItem.props.parent;\r\n            }\r\n        }\r\n\r\n        let style = cloneObject(this.getCopyItem().getFromData(\"style\"));\r\n        let gridItemStyle = cloneObject(this.getCopyItem().getFromData(\"gridItemStyle\"));\r\n        let copyRect = this.getCopyItem().getSize(false);\r\n        let parentRect = destinationItem.getSize(false);\r\n        if (destinationItem === this.getCopyItem().props.parent) {\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginLeft =\r\n                    (parseFloat(gridItemStyle.marginLeft.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginTop =\r\n                    (parseFloat(gridItemStyle.marginTop.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginRight)\r\n                gridItemStyle.marginRight =\r\n                    (parseFloat(gridItemStyle.marginRight.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginBottom)\r\n                gridItemStyle.marginBottom =\r\n                    (parseFloat(gridItemStyle.marginBottom.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n\r\n            if (!gridItemStyle.marginLeft && !gridItemStyle.marginRight)\r\n                gridItemStyle.marginLeft = \"20px\";\r\n            if (!gridItemStyle.marginTop && !gridItemStyle.marginBottom)\r\n                gridItemStyle.marginTop = \"20px\";\r\n        } else {\r\n            delete gridItemStyle.marginLeft;\r\n            delete gridItemStyle.marginTop;\r\n            delete gridItemStyle.marginRight;\r\n            delete gridItemStyle.marginBottom;\r\n\r\n            gridItemStyle.justifySelf = \"center\";\r\n            gridItemStyle.alignSelf = \"center\";\r\n\r\n            if (style.width.toString().includes(\"%\")) {\r\n                style.width = (copyRect.width / parentRect.width * 100).toString() + \"%\";\r\n            }\r\n            if (style.height.toString().includes(\"%\")) {\r\n                style.height = (copyRect.height / parentRect.height * 100).toString() + \"%\";\r\n            }\r\n        }\r\n\r\n        createItem(destinationItem, {\r\n            props: this.getCopyItem().props,\r\n            tagName: this.getCopyItem().props.tagName\r\n        }, undefined, gridItemStyle, style);\r\n    }, 200);\r\n\r\n    duplicate = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copy(item);\r\n        this.paste(item.props.parent);\r\n        this.copyItem = false;\r\n    };\r\n\r\n    delete = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item && !this.selectManager.group)\r\n            return;\r\n\r\n        this.selectManager.deleteGroup();\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.delete();\r\n    };\r\n}\r\n","export default class IdManager {\r\n    constructor(prefix) {\r\n        this.prefix = prefix + '_';\r\n        this.allId = {};\r\n    }\r\n\r\n    clear = () => {\r\n        this.allId = {};\r\n    };\r\n\r\n    getId = (preferName, fixName) => {\r\n        let result;\r\n        let baseId = !fixName? this.prefix + preferName: fixName;\r\n        let id = baseId;\r\n        let postNo = 1;\r\n        while (!result) {\r\n            if (this.allId[id]) {\r\n                id = baseId + \"_\" + postNo;\r\n                postNo++;\r\n            } else {\r\n                result = id;\r\n            }\r\n        }\r\n\r\n        this.allId[id] = true;\r\n\r\n        return result;\r\n    };\r\n\r\n    setItem = (id, item) => {\r\n        console.log(\"IdMan setItem\", id, item.props.id)\r\n        this.allId[id] = item;\r\n    };\r\n\r\n    // return agl reference\r\n    getItem = (id) => {\r\n        console.log(\"IdMan\", Object.keys(this.allId))\r\n        return this.allId[id];\r\n    };\r\n\r\n    removeId = (id) => {\r\n        delete this.allId[id];\r\n    };\r\n}\r\n","import throttle from 'lodash.throttle';\r\n\r\nexport default class UndoRedo {\r\n    constructor(max, document, idMan) {\r\n        this.undoQueue = [];\r\n        this.redoQueue = [];\r\n        this.max = max || 20;\r\n        this.idMan = idMan;\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'z') {\r\n                this.undo();\r\n            }\r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'Z') {\r\n                this.redo();\r\n            }\r\n        });\r\n    }\r\n\r\n    getQueueObject = (func, undo, power) => {\r\n        return {\r\n            redo: func,\r\n            undo: undo,\r\n            power: (typeof power === 'number') ? power : undefined\r\n        }\r\n    };\r\n\r\n    add = (func, undo, power) => {\r\n        this.undoQueue.unshift(this.getQueueObject(func, undo, power));\r\n        if (this.undoQueue.length > this.max)\r\n            this.undoQueue.pop();\r\n        this.redoQueue = [];\r\n    };\r\n\r\n    undo = throttle(() => {\r\n        this.undoFunc();\r\n    }, 200);\r\n\r\n    undoFunc = () => {\r\n        if (this.undoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.undoQueue.shift();\r\n        let power = object.power || 1;\r\n\r\n        power--;\r\n        object.undo(this.idMan);\r\n        this.redoQueue.unshift(object);\r\n\r\n        while (power > 0) {\r\n            power--;\r\n            this.undoFunc();\r\n        }\r\n    };\r\n\r\n    hasUndo = () => {\r\n        return this.undoQueue.length > 0;\r\n    };\r\n\r\n    redo = throttle(() => {\r\n        if (this.redoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.redoQueue.shift();\r\n        object.redo(this.idMan);\r\n        this.undoQueue.unshift(object);\r\n    }, 100);\r\n\r\n    hasRedo = () => {\r\n        return this.redoQueue.length > 0;\r\n    };\r\n};\r\n","export default class GridLineManager {\r\n    constructor(gridContainerRef) {\r\n        this.gridContainerRef = gridContainerRef;\r\n    }\r\n\r\n    addGrid = (id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.gridContainerRef.current.addGrid(id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.gridContainerRef.current.getIdCache(gridType);\r\n    };\r\n\r\n    getXlineRef = (id) => {\r\n        return this.gridContainerRef.current.getXlineRef(id);\r\n    };\r\n\r\n    getYlineRef = (id) => {\r\n        return this.gridContainerRef.current.getYlineRef(id);\r\n    };\r\n\r\n    removeGridLine = (id) => {\r\n        this.gridContainerRef.current.removeGridLine(id);\r\n    };\r\n\r\n    removeGridLineByType = (type) => {\r\n        this.gridContainerRef.current.removeGridLineByType(type);\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        this.gridContainerRef.current.prepareRects(id);\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (this.gridContainerRef.current)\r\n            return this.gridContainerRef.current.hasGridLine(id, gridType);\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.gridContainerRef.current)\r\n            return this.gridContainerRef.current.isPrepared(id);\r\n    };\r\n}\r\n","import {v4 as uuidv4} from 'uuid';\r\nimport { goToAnchor } from 'react-scrollable-anchor'\r\n\r\nexport default class AnchorManager {\r\n    constructor(siteData) {\r\n        // TODO init all anchors\r\n        this.allAnchors = {};\r\n    }\r\n\r\n    addAnchor = (name, item) => {\r\n        let pageId = item.props.viewRef.current.props.pageId;\r\n        let id = uuidv4();\r\n        this.allAnchors[id] = {pageId, name, id};\r\n        item.setAnchor(this.allAnchors[id]);\r\n    };\r\n\r\n    modifyAnchor = (id, newName, item) => {\r\n        let anchor = this.allAnchors[id];\r\n        if (!anchor) {\r\n            this.addAnchor(newName, item);\r\n            return;\r\n        }\r\n\r\n        anchor.name = newName;\r\n\r\n        item.setAnchor(anchor);\r\n    };\r\n\r\n    removeAnchor = (id, item) => {\r\n        delete this.allAnchors[id];\r\n        item.setAnchor();\r\n    };\r\n\r\n    goToAnchor = (id, saveToHistory) => {\r\n        goToAnchor(id, saveToHistory);\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentGridRoot extends React.PureComponent {\r\n    render () {\r\n        let {top, left, bottom, right} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridRoot\"\r\n                className=\"AdjustmentGridRoot\"\r\n                style={{top, left, bottom, right}}\r\n            >\r\n                {\r\n                    this.props.children\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentGridRow extends React.Component {\r\n    // TODO BUG: first and last grid line is not provided, fix the bug\r\n    render () {\r\n        let {gridLineManager, itemId, grid} = this.props;\r\n        let rowLines = gridLineManager.getYlineRef(itemId);\r\n        return (\r\n            <div\r\n                className=\"AdjustmentGridRowEditor\"\r\n            >\r\n                {\r\n                    new Array(grid.x).fill(0).map((x, index) => {\r\n                        let rowLine = rowLines[index];\r\n                        let rowLineRect = rowLine.current.rect;\r\n                        let nextRowLineRect = rowLines[index + 1].current.rect;\r\n                        let rowHeight = grid.gridTemplateRows.split(' ')[index];\r\n                        let classes = classNames(\r\n                            \"AdjustmentGridRowEditorItem\",\r\n                            index === 0 && \"AdjustmentGridRowEditorItemTop\",\r\n                            index === grid.x - 1 && \"AdjustmentGridRowEditorItemBottom\",\r\n                        );\r\n                        return(\r\n                                <div\r\n                                    key={`row_${index}`}\r\n                                    className={classes}\r\n                                    style={{\r\n                                        height: nextRowLineRect.top - rowLineRect.top,\r\n                                    }}\r\n                                >\r\n                                    <p style={{\r\n                                        margin: 0,\r\n                                        fontWeight: \"bold\"\r\n                                    }}>\r\n                                        {rowHeight}\r\n                                    </p>\r\n                                </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentGridRoot from \"./AdjustmentGridRoot\";\r\nimport AdjustmentGridRow from \"./AdjustmentGridRow\";\r\n\r\nexport default class AdjustmentGrid extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item: undefined,\r\n            grid: undefined,\r\n            gridLineManager: undefined\r\n        };\r\n    }\r\n\r\n    editing = (item) => {\r\n        let grid = item.getFromData(\"grid\");\r\n        let gridLineManager = item.props.gridLine;\r\n        this.setState({item, grid, gridLineManager});\r\n    };\r\n\r\n    update = (item) => {\r\n        if (item === item)\r\n            this.forceUpdate();\r\n    };\r\n\r\n    addRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        if (grid.x === 100)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        grid.x++;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 0, \"minmax(100px,max-content)\");\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    addColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 100)\r\n            return;\r\n\r\n        grid.y++;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 0, \"1fr\");\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeColumnWidth = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1, newValue);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeRowHeight = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1, newValue);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.x === 1)\r\n            return;\r\n\r\n        grid.x--;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 1)\r\n            return;\r\n\r\n        grid.y--;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    render () {\r\n        let {gridLineManager, item, grid} = this.state;\r\n        if (!item)\r\n            return null;\r\n\r\n        let positions = gridLineManager.getIdCache(\"A\").positions;\r\n        return (\r\n            <AdjustmentGridRoot\r\n                top={positions.top}\r\n                left={positions.left}\r\n                bottom={positions.bottom}\r\n                right={positions.right}\r\n            >\r\n                <AdjustmentGridRow\r\n                    gridLineManager={gridLineManager}\r\n                    itemId={item.props.id}\r\n                    grid={grid}\r\n                />\r\n            </AdjustmentGridRoot>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentSnapLines extends React.Component {\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.props;\r\n        if (!snapH && !snapV)\r\n            return null;\r\n\r\n        if (snapH) {\r\n            return (\r\n                <line\r\n                    x1={Math.min(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    x2={Math.max(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    y1={snapH.value}\r\n                    y2={snapH.value}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <line\r\n                    x1={snapV.value}\r\n                    x2={snapV.value}\r\n                    y1={Math.min(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    y2={Math.max(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\n\r\nexport default class AdjustmentSnap extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    update = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.setState({\r\n            snapH, snapV, pointOfSnapH, pointOfSnapV\r\n        });\r\n    };\r\n\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.state;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentSnapLinesRoot\"\r\n            >\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    <AdjustmentSnapLines\r\n                        snapH={snapH}\r\n                        pointOfSnapH={pointOfSnapH}\r\n                    />\r\n                    <AdjustmentSnapLines\r\n                        snapV={snapV}\r\n                        pointOfSnapV={pointOfSnapV}\r\n                    />\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class GridLine extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render () {\r\n        let {id, lineRef, style} = this.props;\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                id={id}\r\n                ref={lineRef}\r\n                style={style}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\nimport Portal from \"@material-ui/core/Portal/Portal\";\r\nimport GridLine from \"./GridLine\";\r\n\r\nexport default class AdjustmentGridLinesWrapper2 extends React.PureComponent {\r\n    needUpdate = throttleDebounce(() => {\r\n        this.forceUpdate();\r\n    }, 100);\r\n\r\n    render () {\r\n        let {yNo, xNo, yLineRef, xLineRef, refId} = this.props;\r\n\r\n        if (yNo >= 0 && xNo >= 0 && !document.getElementById(`${refId}_container`))\r\n            this.needUpdate();\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    new Array(yNo + 1).fill(0).map((y, index) => {\r\n                        if (index === 0 || index === yNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesY\"\r\n                                id={`y_${index}_${refId}`}\r\n                                lineRef={yLineRef[index]}\r\n                                style={{\r\n                                    top: index === yNo ? \"unset\" : 0,\r\n                                    bottom: index === yNo ? 0 : \"unset\",\r\n                                    gridArea: `${index + 1}/1/${index + 1}/${xNo + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n                {\r\n                    new Array(xNo + 1).fill(0).map((x, index) => {\r\n                        if (index === 0 || index === xNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesX\"\r\n                                id={`x_${index}_${refId}`}\r\n                                lineRef={xLineRef[index]}\r\n                                style={{\r\n                                    left: index === xNo? \"unset\": 0,\r\n                                    right: index === xNo? 0: \"unset\",\r\n                                    gridArea: `1/${index + 1}/${yNo + 1}/${index + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {getCachedBoundingRect} from \"../Test/WindowCache\";\r\nimport AdjustmentGridLinesWrapper2 from \"./AdjustmentGridLinesWrapper2\";\r\n\r\nexport default class AdjustmentGridLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xNoA: -1,\r\n            yNoA: -1,\r\n            xNoB: -1,\r\n            yNoB: -1,\r\n            xNoT: -1,\r\n            yNoT: -1,\r\n        };\r\n\r\n        this.xLineRefA = new Array(100);\r\n        this.yLineRefA = new Array(100);\r\n        this.xLineRefB = new Array(100);\r\n        this.yLineRefB = new Array(100);\r\n        this.xLineRefT = new Array(100);\r\n        this.yLineRefT = new Array(100);\r\n\r\n        this.idCache = {};\r\n    }\r\n\r\n    fixLineRef = (x, y, gridType) => {\r\n        for (let i = 0; i <= x; i++) {\r\n            if (!this[`xLineRef${gridType}`][i])\r\n                this[`xLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n        for (let i = 0; i <= y; i++) {\r\n            if (!this[`yLineRef${gridType}`][i])\r\n                this[`yLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n    };\r\n\r\n    addGrid = (id, y, x, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.fixLineRef(x, y, gridType);\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id && gridType === \"A\") {\r\n            this.updateGridLine(id, \"A\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id && gridType === \"B\") {\r\n            this.updateGridLine(id, \"B\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id && gridType === \"T\") {\r\n            this.updateGridLine(id, \"T\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else {\r\n            this.idCache[gridType] = {id, gridTemplateRows, gridTemplateColumns, positions, x, y};\r\n\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, () => {\r\n                // this.prepareRects(id);\r\n                if (callback)\r\n                    callback();\r\n            })\r\n        }\r\n    };\r\n\r\n    updateGridLine = (id, gridType, {gridTemplateRows, gridTemplateColumns, positions, x, y} = {}, callback) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        gridTemplateRows && (this.idCache[gridType].gridTemplateRows = gridTemplateRows);\r\n        gridTemplateColumns && (this.idCache[gridType].gridTemplateColumns = gridTemplateColumns);\r\n        positions && (this.idCache[gridType].positions = positions);\r\n        x && (this.idCache[gridType].x = x);\r\n        y && (this.idCache[gridType].y = y);\r\n\r\n        if (!x && !y) {\r\n            this.setState({reload: true}, callback);\r\n            return;\r\n        }\r\n\r\n        if (x || y)\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.idCache[gridType];\r\n    };\r\n\r\n    getXlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        return this[`xLineRef${gridType}`].slice(0, this.idCache[gridType].x + 1);\r\n    };\r\n\r\n    getYlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        return this[`yLineRef${gridType}`].slice(0, this.idCache[gridType].y + 1);\r\n    };\r\n\r\n    removeGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                return \"A\";\r\n\r\n            if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                return \"B\";\r\n\r\n            if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                return \"T\";\r\n        } else {\r\n            if (this.idCache[gridType] && this.idCache[gridType].id === id)\r\n                return gridType;\r\n        }\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].prepared)\r\n            return true;\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        let xLineRef = this.getXlineRef(id);\r\n        if (xLineRef)\r\n            for(let i = 0; i < xLineRef.length; i++) {\r\n                let current = xLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`xLineRef_${i}_${id}`, current);\r\n            }\r\n        let yLineRef = this.getYlineRef(id);\r\n        if (yLineRef)\r\n            for(let i = 0; i < yLineRef.length; i++) {\r\n                let current = yLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`yLineRef_${i}_${id}`, current);\r\n            }\r\n\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n            this.idCache[\"A\"].prepared = true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n            this.idCache[\"B\"].prepared = true;\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n            this.idCache[\"T\"].prepared = true;\r\n    };\r\n\r\n    removeGridLineByType = (gridType) => {\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridLinesRoot\"\r\n                className=\"AdjustmentGridLinesRoot\"\r\n            >\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_A\"}\r\n                    refId={this.idCache[\"A\"] && this.idCache[\"A\"].id}\r\n                    xNo={this.state.xNoA}\r\n                    yNo={this.state.yNoA}\r\n                    xLineRef={this.xLineRefA}\r\n                    yLineRef={this.yLineRefA}\r\n                    gridTemplateRows={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateColumns}\r\n                    top={this.idCache[\"A\"] && this.idCache[\"A\"].positions.top}\r\n                    bottom={this.idCache[\"A\"] && this.idCache[\"A\"].positions.bottom}\r\n                    left={this.idCache[\"A\"] && this.idCache[\"A\"].positions.left}\r\n                    right={this.idCache[\"A\"] && this.idCache[\"A\"].positions.right}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_B\"}\r\n                    refId={this.idCache[\"B\"] && this.idCache[\"B\"].id}\r\n                    xNo={this.state.xNoB}\r\n                    yNo={this.state.yNoB}\r\n                    xLineRef={this.xLineRefB}\r\n                    yLineRef={this.yLineRefB}\r\n                    gridTemplateRows={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateColumns}\r\n                    top={this.idCache[\"B\"] && this.idCache[\"B\"].positions.top}\r\n                    bottom={this.idCache[\"B\"] && this.idCache[\"B\"].positions.bottom}\r\n                    left={this.idCache[\"B\"] && this.idCache[\"B\"].positions.left}\r\n                    right={this.idCache[\"B\"] && this.idCache[\"B\"].positions.right}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_T\"}\r\n                    refId={this.idCache[\"T\"] && this.idCache[\"T\"].id}\r\n                    xNo={this.state.xNoT}\r\n                    yNo={this.state.yNoT}\r\n                    xLineRef={this.xLineRefT}\r\n                    yLineRef={this.yLineRefT}\r\n                    gridTemplateRows={this.idCache[\"T\"] && this.idCache[\"T\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"T\"] && this.idCache[\"T\"].gridTemplateColumns}\r\n                    top={this.idCache[\"T\"] && this.idCache[\"T\"].positions.top}\r\n                    bottom={this.idCache[\"T\"] && this.idCache[\"T\"].positions.bottom}\r\n                    left={this.idCache[\"T\"] && this.idCache[\"T\"].positions.left}\r\n                    right={this.idCache[\"T\"] && this.idCache[\"T\"].positions.right}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ResizePane extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane`,\r\n            this.props.enabled && `Adjustment-${this.props.side}-pane-circle`,\r\n            `Adjustment-${this.props.side}-pane-line`,\r\n            {\"Adjustment-CornerCircle\": this.props.enabled && this.isCorner()},\r\n            \"Adjustment-Pane\",\r\n            !this.props.enabled && \"ResizePanePointerNone\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.props.enabled ? this.onMouseDown : undefined}\r\n                className={classes}\r\n                style={{...style, ...this.props.style}}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport {cloneObject} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentGroupRect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rect: undefined,\r\n            group: undefined,\r\n            draggingStart: false\r\n        }\r\n    }\r\n\r\n    updateRect = (rect, group) => {\r\n        this.setState({rect, group});\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n        this.resizing = true;\r\n\r\n        this.setState({draggingStart: true});\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStart(e, dir, delta, true);\r\n        });\r\n\r\n        let {rect} = this.state;\r\n        this.resizeData = {\r\n            firstX: window.innerWidth - rect.left - rect.right,\r\n            firstY: window.innerHeight - rect.top - rect.bottom,\r\n            firstTop: rect.top,\r\n            firstLeft: rect.left,\r\n        };\r\n    };\r\n\r\n    onResize = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResize(e, dir, delta, true);\r\n        });\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n        delete rect.height;\r\n        delete rect.width;\r\n\r\n        let deltaY = delta.y;\r\n        let deltaX = delta.x;\r\n        if (dir.includes('n')) {\r\n            if (this.resizeData.firstY <= deltaY)\r\n                deltaY = this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY - deltaY;\r\n            rect.top = this.resizeData.firstTop + deltaY;\r\n        }\r\n        if (dir.includes('s')) {\r\n            if (this.resizeData.firstY <= -deltaY)\r\n                deltaY = -this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY + deltaY;\r\n        }\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= -deltaX)\r\n                deltaX = -this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX + deltaX;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= deltaX)\r\n                deltaX = this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX - deltaX;\r\n            rect.left = this.resizeData.firstLeft + deltaX;\r\n        }\r\n\r\n        if (rect.height)\r\n            rect.bottom = window.innerWidth - rect.top - rect.height;\r\n        if (rect.width)\r\n        rect.right = window.innerWidth - rect.left - rect.width;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStop(e, dir, delta, true);\r\n        });\r\n\r\n        this.resizing = false;\r\n\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStart(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let {rect} = this.state;\r\n\r\n        this.dragData = {\r\n            x: rect.left,\r\n            y: rect.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDrag(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let deltaX = (e.clientX - this.dragData.lastMouseX);\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.x += deltaX;\r\n        this.dragData.y += deltaY;\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n\r\n        rect.top = this.dragData.y;\r\n        rect.left = this.dragData.x;\r\n        rect.right -= deltaX;\r\n        rect.bottom -= deltaY;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStop(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    render () {\r\n        let {rect} = this.state;\r\n        if (!rect)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGroupRect\"\r\n                style={rect}\r\n                className=\"AdjustmentResizeRoot\"\r\n            >\r\n                {\r\n                    ['n','s','e','w','ne','nw','se','sw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.onResizeStart}\r\n                            onResize={this.onResize}\r\n                            onResizeStop={this.onResizeStop}\r\n                            draggingStart={this.state.draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n\r\n                {/*<AdjustmentMove*/}\r\n                    {/*key={`${this.props.id}_move`}*/}\r\n                    {/*onDragStart={this.onDragStart}*/}\r\n                    {/*onDrag={this.onDrag}*/}\r\n                    {/*onDragStop={this.onDragStop}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\n\r\nexport default class RightClick extends React.Component {\r\n    onClick = (e) => {\r\n        this.props.onClick && this.props.onClick(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/more.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\n\r\nexport default class MiniMenuVerticalDivider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MiniMenuVerticalDivider\"/>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport '../../../HelperStyle.css';\r\n\r\nexport default class Help extends React.Component {\r\n    onClick = (e) => {\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/question.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\nimport RightClick from \"./Components/RightClick\";\r\nimport MiniMenuVerticalDivider from \"./MiniMenuVerticalDivider\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Help from \"./Components/Help\";\r\nimport {isHideInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nconst miniMenuId = \"wl_mini_menu\";\r\nexport default class MiniMenu extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            clear: true\r\n        };\r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({clear: true});\r\n    };\r\n\r\n    update = (itemId, shortcut, primary, item) => {\r\n        this.setState({\r\n            itemId\r\n            , shortcut, primary, clear: false,\r\n            item\r\n        })\r\n    };\r\n\r\n    getAnchor = () => {\r\n        return document.getElementById(`${this.state.itemId}_child_holder`) ||\r\n            document.getElementById(this.state.itemId);\r\n    };\r\n\r\n    render () {\r\n        if (this.state.clear)\r\n            return null;\r\n        if (!this.state.itemId || !this.getAnchor() ||\r\n            isHideInBreakpoint(this.state.item))\r\n            return null;\r\n        return (\r\n            <Popper\r\n                key={\"miniMenu\"}\r\n                open={true}\r\n                anchorEl={this.getAnchor()}\r\n                placement=\"bottom-start\"\r\n                style={{\r\n                    zIndex: 9999999\r\n                }}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'scrollParent',\r\n                    },\r\n                }}\r\n            >\r\n                <div className=\"MiniMenuRoot\"\r\n                     id={miniMenuId}\r\n                     style={{\r\n                        opacity:  !this.state.clear? 1: 0\r\n                     }}\r\n                >\r\n                    <div className=\"MiniMenuContainer\"\r\n                    >\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.shortcut.map(option => {\r\n                                return option;\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.shortcut.length > 0 && <MiniMenuVerticalDivider/>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.primary.map(option => {\r\n                                return option;\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.primary.length > 0 && <MiniMenuVerticalDivider/>\r\n                        }\r\n\r\n                        <Help/>\r\n                        <RightClick/>\r\n                    </div>\r\n                </div>\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Menu.css';\r\nimport MiniMenu from \"./MiniMenu/MiniMenu\";\r\nimport {createContextMenu} from \"../AwesomwGridLayoutHelper\";\r\n\r\nconst miniMenuHolderId = \"wl_menu_holder\";\r\nexport default class MenuHolder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n\r\n        this.miniMenuRef = React.createRef();\r\n    }\r\n\r\n    clearMiniMenu = () => {\r\n        this.state.active && this.miniMenuRef.current.clear();\r\n    };\r\n\r\n    addMiniMenu = (item) => {\r\n        if (item && this.state.active)\r\n            this.miniMenuRef.current.update(\r\n                item.props.id,\r\n                item.getShortcutOptions() || [],\r\n                item.getPrimaryOptions() || [],\r\n                item\r\n        );\r\n    };\r\n\r\n    addMenu = (menu) => {\r\n        this.setState({\r\n            menu: undefined,\r\n        });\r\n        if (menu) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    menu,\r\n                });\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    onContextMenu = (e, item) => {\r\n        this.setState({\r\n            contextMenu: createContextMenu(e, item, () => {\r\n                this.setState({contextMenu: undefined})\r\n            })\r\n        });\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id={miniMenuHolderId}\r\n                key={miniMenuHolderId}\r\n                className=\"MenuHolderRoot\"\r\n            >\r\n                <MiniMenu\r\n                    itemId={this.state.miniMenuItem && this.state.miniMenuItem.props.id}\r\n                    key={\"miniMenu\"}\r\n                    ref={this.miniMenuRef}\r\n                />\r\n                {\r\n                    !this.state.contextMenu &&\r\n                    this.state.menu\r\n                }\r\n                {\r\n                    this.state.contextMenu\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default class IFrameCommunicator {\r\n    constructor(origin, authKey, otherWindow, onMessage) {\r\n        this.onMessage = onMessage;\r\n        this.origin = origin;\r\n        this.otherWindow = otherWindow;\r\n        this.counter = 0;\r\n        this.authKey = authKey;\r\n        this.callbacks = {};\r\n        this.responses = {};\r\n\r\n        window.addEventListener(\"message\", (event) => {\r\n            console.log(\"message\", event);\r\n            if (this.origin && event.origin !== this.origin) {\r\n                return;\r\n            }\r\n\r\n            this.processIncomingMessage(event);\r\n        });\r\n    }\r\n\r\n    processIncomingMessage = (event) => {\r\n        let data = event.data;\r\n\r\n        if (!data || data.authKey !== this.authKey)\r\n            return;\r\n\r\n        if (data && data.r) {\r\n            let r = data.r;\r\n            this.callbacks[r](data);\r\n            delete this.callbacks[r];\r\n        }\r\n        else\r\n        {\r\n            let responseFunc = () => {};\r\n            if (data && data.c) {\r\n                let c = data.c;\r\n                responseFunc = this.responses[c] = (result) => {\r\n                    let newData = {r: c, result};\r\n                    this.post(newData);\r\n                }\r\n            }\r\n\r\n            this.onMessage(event.data, responseFunc);\r\n        }\r\n    };\r\n\r\n    post = (data, callback) => {\r\n        if (callback) {\r\n            this.counter++;\r\n            data.c = this.counter;\r\n            this.callbacks[data.c] = callback;\r\n        }\r\n\r\n        data.authKey = this.authKey;\r\n\r\n        let otherWindow = typeof(this.otherWindow) === 'function' ? this.otherWindow() : this.otherWindow;\r\n\r\n        otherWindow.postMessage(data, this.origin || \"*\");\r\n    };\r\n}\r\n","let EditorController = {};\r\nlet AllowFunctions = {};\r\n\r\nEditorController.onMessage = (data, res, editor) => {\r\n    if (data.type === 'Controller' && AllowFunctions[data.func]) {\r\n        res(AllowFunctions[data.func](...data.inputs, editor));\r\n        return;\r\n    }\r\n\r\n    if (data.type === 'Editor' && editor[data.func]) {\r\n        editor[data.func](...data.inputs, res);\r\n        return;\r\n    }\r\n};\r\n//\r\n// // TODO GET functions\r\n// AllowFunctions.getItemGridData = (itemId, editor) => {\r\n//     return editor.idMan.getItem(itemId).props.griddata;\r\n// };\r\n// AllowFunctions.getLayout = (editor) => {\r\n//     let layout = {\r\n//         id: editor.rootLayoutRef.current.props.id,\r\n//         griddata: editor.rootLayoutRef.current.props.griddata,\r\n//         children: []\r\n//     };\r\n//     let fillData = (item, parent) => {\r\n//         parent[item.props.id] = {\r\n//             id: item.props.id,\r\n//             griddata: item.props.griddata,\r\n//             children: []\r\n//         };\r\n//\r\n//         Object.values(item.allChildRefs).forEach(child => {\r\n//             if (child && child.current)\r\n//                 fillData(child.current, parent[item.props.id].children);\r\n//         });\r\n//     };\r\n//\r\n//     fillData(editor.rootLayoutRef.current, layout.children);\r\n//\r\n//     return layout;\r\n// };\r\n// AllowFunctions.getSiteData = (editor) => {\r\n//     return editor.state.siteData;\r\n// };\r\n// AllowFunctions.getBreakpointsData = (itemId, editor) => {\r\n//     let item = editor.idMan.getItem(itemId);\r\n//     return {\r\n//         breakpoints: item.props.breakpointmanager.breakpoints,\r\n//         currentWidth: item.props.breakpointmanager.lastWidth\r\n//     }\r\n// };\r\n//\r\n// // TODO POST functions\r\n// AllowFunctions.changePage = (pageId, editor) => {\r\n//     editor.onPageChange(pageId);\r\n//     return true;\r\n// };\r\n// AllowFunctions.addItem = (parentId, childData, gridItemStyle, style, editor) => {\r\n//     createItem(editor.idMan.getItem(parentId), childData, false, gridItemStyle, style);\r\n//     return true;\r\n// };\r\n//\r\n// AllowFunctions.undoRedoMethod = (method, inputs, editor) => {\r\n//     editor.undoredo[method](inputs);\r\n//     return true;\r\n// };\r\n// AllowFunctions.togglePreview = (preview, editor) => {\r\n//     editor.togglePreview(preview);\r\n//     return true;\r\n// };\r\n// AllowFunctions.setZoomLevel = (zoomLevel, editor) => {\r\n//     editor.setZoomLevel(zoomLevel);\r\n//     return true;\r\n// };\r\n//\r\n// // TODO Edit functions\r\n// AllowFunctions.setDataInBackground = (itemId, prop, value, editor) => {\r\n//     let item = editor.idMan.getItem(itemId);\r\n//     setDataInBreakpoint(prop, value, item, true);\r\n//     return item.props.griddata;\r\n// };\r\n\r\nexport default EditorController;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Inspector extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open? 100: 0,\r\n            inspectorMenu: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        if (this.context.inspectorPinned) {\r\n            this.props.pinInspector();\r\n            this.close(force);\r\n            return;\r\n        }\r\n\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setMenu = (inspectorMenu) => {\r\n        this.setState({inspectorMenu});\r\n    };\r\n\r\n    getDefaultMenu = () => {\r\n        return <div\r\n            className=\"InspectorDefaultMenuRoot\"\r\n        >\r\n            <span>\r\n                Select a component to show options\r\n            </span>\r\n        </div>\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"InspectorRoot\"\r\n                    style={{...\r\n                        !this.context.inspectorPinned ? {\r\n                            right: `${this.state.percent - 100}%`,\r\n                            opacity: this.state.percent / 100\r\n                        } : {right: \"0%\", opacity: 1},\r\n                        ...{\r\n                        }}\r\n                    }\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div style={{\r\n                    }}>\r\n                    <div className=\"InspectorPin\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginLeft: 0,\r\n                                borderRadius: \"50%\",\r\n                                backgroundColor: this.context.inspectorPinned && \"#8d8d8d\"\r\n                            }}\r\n                            onClick={(e) => {\r\n                                this.props.pinInspector();\r\n                            }}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={12}\r\n                                height={12}\r\n                                src={this.context.inspectorPinned ?\r\n                                    process.env.PUBLIC_URL + '/static/icon/pin-white.svg':\r\n                                    process.env.PUBLIC_URL + '/static/icon/pin.svg'}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n                    {\r\n                        this.state.inspectorMenu || this.getDefaultMenu()\r\n                    }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.context.inspectorPinned &&\r\n\r\n                    <div\r\n                        className=\"InspectorPinRoot\"\r\n                    >\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspector.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport {stretch} from \"../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AdjustmentStretch extends React.Component {\r\n    onClick = (e) => {\r\n        let {itemId, idMan} = this.props;\r\n        stretch(idMan.getItem(itemId));\r\n    };\r\n\r\n    onMouseDown = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        let {isStretch} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                className=\"AdjustmentStretchRoot\"\r\n                onPointerDown={this.onMouseDown}\r\n                onClick={this.onClick}\r\n                style={this.props.style}\r\n            >\r\n                {\r\n                    isStretch && <img draggable={false} width={16} height={16} src={require('./icons/minimize.svg')} />\r\n                }\r\n                {\r\n                    !isStretch && <img draggable={false} width={16} height={16} src={require('./icons/maximize.svg')} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport AdjustmentStretch from \"./AdjustmentStretch\";\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentResize extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(nextProps.data, this.data))\r\n            return true;\r\n\r\n        if (!shallowEqual(nextProps, this.props))\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    render () {\r\n        let {data, allowStretch, idMan, itemId, isStretch, draggingStart, transformStyleId, item} = this.props;\r\n        this.data = cloneObject(data);\r\n        let stretchStyle = {};\r\n        if (!allowStretch) stretchStyle.display = \"none\";\r\n\r\n        let classes = classNames(\r\n            \"AdjustmentResizeRoot\",\r\n            transformStyleId\r\n        );\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                style={{\r\n                    width: data.width,\r\n                    height: data.height,\r\n                    top: data.top,\r\n                    left: data.left,\r\n                    // transform: transform\r\n                }}\r\n                className={classes}\r\n            >\r\n                {\r\n                    !isStretch &&\r\n                    ['s','n','e','w','se','ne','sw','nw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            enabled={this.props.sides.includes(side)}\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.props.onResizeStart}\r\n                            onResize={this.props.onResize}\r\n                            onResizeStop={this.props.onResizeStop}\r\n                            draggingStart={draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n                {\r\n                    !(item.getCompositeFromData(\"transform\") || {}).rotateDegree &&\r\n                    <AdjustmentStretch\r\n                        style={stretchStyle}\r\n                        isStretch={isStretch}\r\n                        idMan={idMan}\r\n                        itemId={itemId}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {allowStretch, isGroupSelected, isHideInBreakpoint, isStretch} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentResize from \"./AdjustmentResize\";\r\n\r\nexport default class AdjustmentResizeWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n    }\r\n\r\n    update = (item, data, transformStyleId) => {\r\n        this.setState({item, data, transformStyleId});\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, data} = this.state;\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    item.getFromTempData(\"resizable\") &&\r\n                    !item.state.showAnimation &&\r\n                    !isGroupSelected(item) &&\r\n                    !isHideInBreakpoint(item) &&\r\n                    <AdjustmentResize\r\n                        id={item.props.id}\r\n                        key={`resize`}\r\n                        sides={item.props.resizeSides || ['n','s','e','w','ne','nw','se','sw']}\r\n                        onResizeStart={item.onResizeStart}\r\n                        onResize={item.onResize}\r\n                        onResizeStop={item.onResizeStop}\r\n                        draggingStart={item.state.draggingStart}\r\n                        isStretch={isStretch(item)}\r\n                        allowStretch={allowStretch(item)}\r\n                        itemId={item.props.id}\r\n                        item={item}\r\n                        idMan={item.props.idMan}\r\n                        transformStyleId={this.state.transformStyleId}\r\n                        data={data}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentHelpLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.helpLinesParent) {\r\n            let newParentRect = nextProps.helpLinesParent.getSize(false);\r\n\r\n            if (!shallowEqual(this.parentRect, cloneObject(newParentRect))) {\r\n                this.parentRect = newParentRect;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.props.width !== nextProps.width ||\r\n            this.props.height !== nextProps.height ||\r\n            this.props.show !== nextProps.show ||\r\n            this.props.dragging !== nextProps.dragging)\r\n            return true;\r\n\r\n        if (!shallowEqual(this.props.itemRect, nextProps.itemRect)) {\r\n            return true;\r\n        }\r\n        if (!shallowEqual(this.props.fakeItemRect, nextProps.fakeItemRect)) {\r\n            return true;\r\n        }\r\n        if (!shallowEqual(nextProps.item.getCompositeFromData(\"gridItemStyle\"), this.gridItemStyle)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getValue = (value) => {\r\n        if (value.includes(\"px\")) {\r\n            return `${parseFloat(value.replace(\"px\", \"\")).toFixed(1)}px`;\r\n        }\r\n        if (value.includes(\"%\")) {\r\n            return `${parseFloat(value.replace(\"%\", \"\")).toFixed(1)}%`;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    calculate = () => {\r\n        let {helpLinesParent, item, itemRect, width, height, dragging, fakeItemRect} = this.props;\r\n        // this.parentRect = this.parentRect || helpLinesParent.getSize(false);\r\n        this.parentRect = helpLinesParent.prepareRects();\r\n\r\n        if (fakeItemRect)\r\n            itemRect = fakeItemRect;\r\n        return {\r\n            ...item.calculateGridItem(itemRect.left - this.parentRect.left,\r\n                itemRect.top - this.parentRect.top, helpLinesParent,\r\n                width || itemRect.width, height || itemRect.height, this.parentRect, true, !dragging),\r\n            itemRect, parentRect: this.parentRect\r\n        };\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        return this.gridItemStyle;\r\n    };\r\n\r\n    render () {\r\n        let {show, item, transform, fakeItemRect} = this.props;\r\n        if (!show)\r\n            return null;\r\n\r\n        if (!item.mounted)\r\n            return null;\r\n\r\n        let {gridItemStyle, coordinates, itemRect, parentRect, coordinatesAbs} = this.calculate();\r\n        this.gridItemStyle = cloneObject(gridItemStyle);\r\n        if (fakeItemRect)\r\n            itemRect = fakeItemRect;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentHelpLinesRoot\"\r\n                style={{\r\n                    width: coordinatesAbs.cx2 - coordinatesAbs.cx1,\r\n                    height: coordinatesAbs.cy2 - coordinatesAbs.cy1,\r\n                    top: coordinatesAbs.cy1,\r\n                    left: coordinatesAbs.cx1,\r\n                }}\r\n            >\r\n                <div className=\"AdjustmentHelpLinesRect\" style={{\r\n                    top: itemRect.top - coordinatesAbs.cy1,\r\n                    left: itemRect.left - coordinatesAbs.cx1,\r\n                    width: itemRect.width,\r\n                    height: itemRect.height\r\n                }}/>\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&*/\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\")? \"visible\": \"hidden\"}\r\n                            x1={0}\r\n                            x2={itemRect.left - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&\r\n                        !this.props.dragging &&*/\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                !this.props.dragging)? \"visible\" : \"hidden\"}\r\n                            cx={0}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width}\r\n                            x2={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={0}\r\n                            y2={itemRect.top - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={0}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height}\r\n                            y2={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                </svg>\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-start\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                        left: (itemRect.left - coordinatesAbs.cx1) / 2,\r\n                        transform: \"translateY(-125%) translateX(-50%)\",\r\n                        margin: 0,\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#0013ff\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    >\r\n                            {this.getValue(gridItemStyle.marginLeft)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                            right: (coordinatesAbs.cx2 - itemRect.left - itemRect.width) / 2,\r\n                            transform: \"translateY(-125%) translateX(50%)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginRight)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: (itemRect.top - coordinatesAbs.cy1) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(-50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginTop)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            bottom: (coordinatesAbs.cy2 - itemRect.top - itemRect.height) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginBottom)}\r\n                    </p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {isGroupSelected, isHideInBreakpoint} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentHelpLines from \"./AdjustmentHelpLines\";\r\n\r\nexport default class AdjustmentHelpLinesWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n\r\n        this.helpLineRef = React.createRef();\r\n    }\r\n\r\n    update = (item, helpLineParent, itemRect, dragging, fakeItemRect) => {\r\n        this.setState({item, itemRect, dragging, fakeItemRect});\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        if (this.helpLineRef.current)\r\n            return this.helpLineRef.current.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, itemRect, dragging, fakeItemRect} = this.state;\r\n        return (\r\n            <>\r\n                {\r\n                    !item.state.showAnimation &&\r\n                    !isHideInBreakpoint(item) &&\r\n                    <AdjustmentHelpLines\r\n                        ref={this.helpLineRef}\r\n                        show={!item.props.helplineOff /*&& item.state.selected*/ &&\r\n                        item.state.helpLinesParent && !item.getFromTempData(\"pageResize\") &&\r\n                        !isGroupSelected(item)}\r\n                        helpLinesParent={item.state.helpLinesParent}\r\n                        item={item}\r\n                        dragging={dragging}\r\n                        itemRect={itemRect}\r\n                        fakeItemRect={fakeItemRect}\r\n                        width={itemRect.width}\r\n                        height={itemRect.height}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\n\r\nexport default class AdjustmentHover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n    }\r\n\r\n    update = (item, size, clear) => {\r\n        if (!clear)\r\n            if (!item.state.selected)\r\n                this.setState({item, size, itemId: item.props.id});\r\n            else\r\n                this.setState({item, size, itemId: undefined});\r\n        else {\r\n            if (this.state.itemId === item.props.id) {\r\n                this.setState({item, size, itemId: undefined});\r\n            }\r\n        }\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.itemId)\r\n            return null;\r\n        return (\r\n            <Popper\r\n                open={true}\r\n                anchorEl={document.getElementById(this.state.itemId)}\r\n                placement=\"top-start\"\r\n                style={{\r\n                    zIndex: 9999999,\r\n                    pointerEvents: \"none\"\r\n                }}\r\n                disablePortal={false}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: false\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: false,\r\n                    },\r\n                    hide: {\r\n                        enabled: false,\r\n                    },\r\n                }}\r\n            >\r\n                {\r\n                    this.state.itemId ?\r\n                        <div\r\n                            className=\"AwesomeGridLayoutRootHover\"\r\n                            key={`hover`}\r\n                            style={{\r\n                                width: this.state.size ? this.state.size.width : 0,\r\n                                height: this.state.size ? this.state.size.height : 0,\r\n                            }}\r\n                        >\r\n                            <span className=\"AGLHoverCompName\">\r\n                                {this.state.item.props.tagName}\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                }\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Layout.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            treeData: []\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent > 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent, open: (percent === 100)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = () => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent < 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent, open: (percent !== 0)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    setLayout = (layout) => {\r\n        this.processLayout(layout)\r\n    };\r\n\r\n    processLayout = (layout) => {\r\n        if (!layout)\r\n            return;\r\n\r\n        let {idMan} = this.props;\r\n\r\n        let getTreeItem = (layoutItem) => {\r\n            let item = idMan.getItem(layoutItem.childData.props.id);\r\n            return {\r\n                title: layoutItem.childData.tagName,\r\n                layoutItem: layoutItem,\r\n                children: layoutItem.childrenData.map(childLayout => {\r\n                    return getTreeItem(childLayout);\r\n                }),\r\n                expanded: item.getFromTempData(\"layoutTreeExpanded\"),\r\n                parentItemId: item.props.parent && item.props.parent.props.id\r\n            };\r\n        };\r\n\r\n        this.setState({\r\n            treeData: [getTreeItem(layout[0])]\r\n        });\r\n    };\r\n\r\n    setTree = (treeData) => {\r\n        let {idMan} = this.props;\r\n        let updateItem = (treeItem) => {\r\n            let item = idMan.getItem(treeItem.layoutItem.childData.props.id);\r\n            item.setTempData(\"layoutTreeExpanded\", treeItem.expanded);\r\n            treeItem.children.forEach((childTreeItem, index) => {\r\n                item.setChildZIndex(childTreeItem.layoutItem.childData.props.id, index + 1);\r\n            });\r\n            item.updateLayout();\r\n            treeItem.children.map(childTreeItem => {\r\n                updateItem(childTreeItem);\r\n            });\r\n        };\r\n\r\n        updateItem(treeData[0]);\r\n\r\n        this.setState({treeData});\r\n    };\r\n\r\n    render() {\r\n        let {idMan} = this.props;\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"LayoutRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"LayoutTreeRootHeader\"\r\n                    >\r\n                        {/*Header*/}\r\n                        <div\r\n                            className=\"LayoutTreeRootHeaderContainer\"\r\n                        >\r\n                            <span className=\"LayoutTreeRootHeaderTitle\">\r\n                                Layers\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.close}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"LayoutTreeRoot\"\r\n                    >\r\n                        Coming soon ...\r\n                        {/*<SortableTree\r\n                            className=\"LayoutSortableTree\"\r\n                            treeData={this.state.treeData}\r\n                            onChange={treeData => this.setTree(treeData)}\r\n                            innerStyle={{\r\n                                outline: 'none',\r\n                            }}\r\n                            generateNodeProps={rowInfo => {\r\n                                let layoutItem = rowInfo.node.layoutItem; // {tagName, childData, childrenData}\r\n                                let item = idMan.getItem(layoutItem.childData.props.id);\r\n                                let rowWrapperStyle = {};\r\n                                if (item.state.selected)\r\n                                    rowWrapperStyle.backgroundColor = \"#e4ffea\";\r\n\r\n                                let buttons = [\r\n                                    <IconButton\r\n                                        key={\"rightClick\"}\r\n                                        onClick={(e) => {\r\n                                            item.onContextMenu(e);\r\n                                        }}\r\n                                        imageContainerStyle={{\r\n                                            padding: 4\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={16}\r\n                                            height={16}\r\n                                            src={process.env.PUBLIC_URL + 'static/icon/more-black.svg'}\r\n                                        />\r\n                                    </IconButton>\r\n                                ];\r\n                                if (isHideInBreakpoint(item)) {\r\n                                    buttons.unshift(\r\n                                        <IconButton\r\n                                            key={\"hidedInBp\"}\r\n                                            onClick={(e) => {\r\n                                                showInBreakPoint(item);\r\n                                            }}\r\n                                            imageContainerStyle={{\r\n                                                padding: 4\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                draggable={false}\r\n                                                width={16}\r\n                                                height={16}\r\n                                                src={process.env.PUBLIC_URL + 'static/icon/hide.svg'}\r\n                                            />\r\n                                        </IconButton>\r\n                                    )\r\n                                }\r\n\r\n                                return ({\r\n                                    rowWrapperStyle: rowWrapperStyle,\r\n                                    onClick: (e) => {\r\n                                        let eClass = e.target.getAttribute(\"class\");\r\n                                        if (eClass !== \"expandButton\" && eClass !== \"collapseButton\")\r\n                                            item.onSelect(true, undefined, undefined, true);\r\n                                    },\r\n                                    icons: [\r\n                                        <Image\r\n                                            draggable={false}\r\n                                            width={16}\r\n                                            height={16}\r\n                                            src={item.props.favIconUrl}\r\n                                            style={{\r\n                                                marginTop: 2\r\n                                            }}\r\n                                            errorsrc={process.env.PUBLIC_URL + '/static/icon/rectangle.svg'}\r\n                                        />\r\n                                    ],\r\n                                    buttons: buttons,\r\n                                })\r\n                            }}\r\n                            canDrag={({ node, path, treeIndex, lowerSiblingCounts, isSearchMatch,\r\n                                          isSearchFocus}) => {\r\n                                let item = idMan.getItem(node.layoutItem.childData.props.id);\r\n                                return !item.props.isPage && !item.props.isSection;\r\n                            }}\r\n                            canDrop={({ node, nextParent, prevPath, nextPath }) => {\r\n                                return !!(nextParent && node.parentItemId === nextParent.layoutItem.childData.props.id);\r\n                            }}\r\n                        />*/}\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nLayout.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './AddComponent.css';\r\nimport {createItem, sortBy} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class ComponentGrid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.rootRef = React.createRef();\r\n    }\r\n\r\n    getItemStyle = (item) => {\r\n        let rootWidth = this.rootRef.current?\r\n            this.rootRef.current.getBoundingClientRect().width - 24: 400 - 24;\r\n\r\n        return {\r\n            width: rootWidth / (item.widthRatio || 2),\r\n            // height: rootWidth / (item.widthRatio || 2) / (item.aspectRatio || 2)\r\n            height: \"fit-content\"\r\n        };\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setDraggingItem = (draggingItem, e) => {\r\n        e.persist();\r\n        this.setState({draggingItem});\r\n\r\n        clearTimeout(this.closingTimeOut);\r\n        this.closingTimeOut = setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            if (this.state.draggingItem) {\r\n                this.props.closeMenu(true);\r\n                this.createItemAndDrag(this.state.draggingItem, e);\r\n            }\r\n        }, 200);\r\n    };\r\n\r\n    createItemAndDrag = (item, e) => {\r\n        let {pageRef, editor} = this.props;\r\n        let selectedItem = editor.select.getSelected();\r\n\r\n        createItem(pageRef.current, {\r\n            tagName: item.tagName,\r\n            props: cloneObject(item.presetProps)\r\n        }, undefined, undefined, undefined, (agl) => {\r\n            console.log(\"mouseDown\", agl.props.input.mouseDown);\r\n            if (agl.props.input.mouseDown)\r\n                window.requestAnimationFrame(() => {\r\n                    agl.onMouseDown(e, true);\r\n                });\r\n            else\r\n                window.requestAnimationFrame(() => {\r\n                    this.changeItemParent(agl, selectedItem);\r\n                });\r\n        });\r\n    };\r\n\r\n    changeItemParent = (agl, selectedItem) => {\r\n        let size = agl.getSize(false);\r\n\r\n        if (!selectedItem || selectedItem.props.isPage)\r\n            selectedItem = this.props.editor.rootLayoutRef.current.props.aglComponent.getSectionOfPoint(\r\n                size.left, size.top, size.width, size.height\r\n            );\r\n\r\n        let newGridItemStyle = {\r\n            alignSelf: \"center\",\r\n            justifySelf: \"center\",\r\n            position: \"relative\",\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            gridArea: \"1/1/2/2\",\r\n        };\r\n\r\n        agl.props.dragdrop.dropItem(agl, agl.props.parent, selectedItem, (newItem) => {\r\n            newItem.setGridItemStyle(newGridItemStyle, newItem.props.breakpointmanager.getHighestBpName());\r\n        });\r\n    };\r\n\r\n    createItem = (item, e) => {\r\n        this.props.closeMenu(true);\r\n        let {pageRef, editor} = this.props;\r\n        let selectedItem = editor.select.getSelected();\r\n\r\n        createItem(pageRef.current, {\r\n            tagName: item.tagName,\r\n            props: cloneObject(item.presetProps)\r\n        }, undefined, undefined, undefined, (agl) => {\r\n            window.requestAnimationFrame(() => {\r\n                this.changeItemParent(agl, selectedItem);\r\n            });\r\n        });\r\n    };\r\n\r\n    setDraggingEnd = () => {\r\n        this.setState({draggingItem: undefined});\r\n    };\r\n\r\n    render() {\r\n        let {allItems, id} = this.props;\r\n        if (!allItems)\r\n            return null;\r\n\r\n        return (\r\n            <React.Fragment key={id}>\r\n                <div\r\n                    className=\"AddComponentItemGrid\"\r\n                    ref={this.rootRef}\r\n                    key={id}\r\n                >\r\n                    {\r\n                        sortBy(allItems, \"order\").map((item, index) => {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <div\r\n                                        className=\"AddComponentItemGridItem\"\r\n                                        style={this.getItemStyle(item)}\r\n                                        onDragStart={(e) => {\r\n                                            this.setDraggingItem(item, e);\r\n                                        }}\r\n                                        onDragEnd={(e) => {\r\n                                            this.setDraggingEnd();\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.createItem(item, e);\r\n                                        }}\r\n                                        draggable\r\n                                    >\r\n                                        <img\r\n                                            className=\"AddComponentItemGridItemImage\"\r\n                                            src={item.imageUrl || '/static/image/box.webp'}\r\n                                            width={\"100%\"}\r\n                                            draggable={false}\r\n                                        />\r\n                                        {\r\n                                            item.label &&\r\n                                            <div\r\n                                                className=\"AddComponentItemGridItemLabel\"\r\n                                            >\r\n                                                {item.label}\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AddComponent.css';\r\nimport ComponentGrid from \"./ComponentGrid\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\nimport debounce from 'lodash.debounce';\r\nimport {sortBy} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AddComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            componentListItem: undefined,\r\n            componentSubListItem: undefined,\r\n            componentListItemHover: undefined,\r\n            componentSubListItemHover: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setComponentListItemDebounce = debounce((componentListItem) => {\r\n        this.setComponentListItem(componentListItem);\r\n    }, 500);\r\n\r\n    setComponentListItemLeave = (componentListItem) => {\r\n        if (this.state.componentListItemHover === componentListItem) {\r\n            this.setState({componentListItemHover: undefined});\r\n        }\r\n    };\r\n\r\n    setComponentListItem = (componentListItem) => {\r\n        if (componentListItem !== this.state.componentListItem &&\r\n            componentListItem === this.state.componentListItemHover)\r\n            this.setState({componentListItem,\r\n                componentSubListItem: componentListItem.subList && Object.values(componentListItem.subList)[0]?\r\n                    Object.values(componentListItem.subList)[0][0]: undefined\r\n            });\r\n    };\r\n\r\n    setComponentSubListItemDebounce = debounce((componentSubListItem) => {\r\n        this.setComponentSubListItem(componentSubListItem);\r\n    }, 500);\r\n\r\n    setComponentSubListItemLeave = (componentSubListItem) => {\r\n        if (this.state.componentSubListItemHover === componentSubListItem) {\r\n            this.setState({componentSubListItemHover: undefined});\r\n        }\r\n    };\r\n\r\n    setComponentSubListItem = (componentSubListItem) => {\r\n        if (componentSubListItem !== this.state.componentSubListItem &&\r\n            componentSubListItem.listName === this.state.componentListItem.name &&\r\n            componentSubListItem === this.state.componentSubListItemHover)\r\n            this.setState({componentSubListItem});\r\n    };\r\n\r\n    render() {\r\n        let {allComponentData} = this.props;\r\n        if (!allComponentData)\r\n            return null;\r\n\r\n        let allItems;\r\n        if (this.state.componentListItem && this.state.componentListItem.allItems)\r\n            allItems = this.state.componentListItem.allItems;\r\n        if (this.state.componentSubListItem && this.state.componentSubListItem.allItems)\r\n            allItems = this.state.componentSubListItem.allItems;\r\n\r\n        if (!this.state.componentListItem)\r\n            allItems = undefined;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"AddComponentRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"AddComponentList\"\r\n                    >\r\n                        {\r\n                            sortBy(Object.values(allComponentData.builtin), \"order\").map(componentListItem => {\r\n                                let style = {};\r\n                                if (componentListItem === this.state.componentListItem)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={componentListItem.name}\r\n                                        className=\"AddComponentListItem\"\r\n                                        onMouseEnter={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setComponentListItem(componentListItem);\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            this.setComponentListItemLeave(componentListItem);\r\n                                        }}\r\n                                        style={style}\r\n                                    >\r\n                                        {componentListItem.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <Divider/>\r\n                        {\r\n                            sortBy(Object.values(allComponentData.apps), \"order\").map(componentListItem => {\r\n                                let style = {};\r\n                                if (componentListItem === this.state.componentListItem)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={componentListItem.name}\r\n                                        className=\"AddComponentListItem\"\r\n                                        onMouseEnter={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setComponentListItem(componentListItem);\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            this.setComponentListItemLeave(componentListItem);\r\n                                        }}\r\n                                        style={style}\r\n                                    >\r\n                                        {componentListItem.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.componentListItem &&\r\n                        this.state.componentListItem.subList &&\r\n                        <div\r\n                            className=\"AddComponentSubList\"\r\n                        >\r\n                            {\r\n                                sortBy(Object.keys(allComponentData.builtin[this.state.componentListItem.name].subList), \"order\")\r\n                                    .map(groupName => {\r\n                                        let componentSubListItems =\r\n                                            allComponentData.builtin[this.state.componentListItem.name].subList[groupName];\r\n                                        return (\r\n                                            <React.Fragment key={groupName}>\r\n                                                <div\r\n                                                    key={groupName}\r\n                                                    className=\"AddComponentSubListGroup\"\r\n                                                >\r\n                                                    {groupName}\r\n                                                </div>\r\n                                                {\r\n                                                    sortBy(componentSubListItems, \"order\").map(componentSubListItem => {\r\n                                                        let style = {};\r\n                                                        if (componentSubListItem === this.state.componentSubListItem)\r\n                                                            style.backgroundColor = \"#e5ffff\";\r\n                                                        return (\r\n                                                            <div\r\n                                                                key={componentSubListItem.name}\r\n                                                                className=\"AddComponentSubListItem\"\r\n                                                                onMouseEnter={(e) => {\r\n                                                                    this.setState({componentSubListItemHover: componentSubListItem});\r\n                                                                    this.setComponentSubListItemDebounce(componentSubListItem);\r\n                                                                }}\r\n                                                                onMouseOver={(e) => {\r\n                                                                    this.setState({componentSubListItemHover: componentSubListItem});\r\n                                                                    this.setComponentSubListItemDebounce(componentSubListItem);\r\n                                                                }}\r\n                                                                onClick={(e) => {\r\n                                                                    this.setComponentSubListItem(componentSubListItem);\r\n                                                                }}\r\n                                                                onMouseOut={(e) => {\r\n                                                                    this.setComponentSubListItemLeave(componentSubListItem);\r\n                                                                }}\r\n                                                                style={style}\r\n                                                            >\r\n                                                                {componentSubListItem.name}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                    <ComponentGrid\r\n                        allItems={allItems}\r\n                        id={this.state.componentSubListItem? this.state.componentSubListItem.name:\r\n                            this.state.componentListItem? this.state.componentListItem.name: null}\r\n                        closeMenu={this.close}\r\n                        pageRef={this.props.pageRef}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nAddComponent.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport './PageTypeTitle.css';\r\n\r\nexport default class PageTypeTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: props.defaultOpen || false\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ButtonBase className=\"PageTypeTitle\" onClick={(e) => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(!this.state.open);\r\n                this.setState({open: !this.state.open});\r\n            }}>\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n\r\n                    <div className=\"PageTypeTitleExpandIcon\">\r\n                        {\r\n                            this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/down-arrow.svg'} />\r\n                        }\r\n                        {\r\n                            !this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/right-arrow.svg'} />\r\n                        }\r\n                    </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class PageInfo extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onRename = (e) => {\r\n        this.newPageName = e.target.value;\r\n    };\r\n\r\n    rename = () => {\r\n        let {pageData} = this.props;\r\n\r\n        if (this.newPageName === pageData.props.pageName)\r\n            return;\r\n\r\n        if (!this.newPageName) {\r\n            // TODO show error\r\n            return;\r\n        }\r\n\r\n        pageData.props.pageName = this.newPageName;\r\n        this.newPageName = undefined;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    setAsHomePage = () => {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n\r\n        let home = Object.values(siteData.allPages).find(p => {return p.props.isHome});\r\n\r\n        if (home)\r\n            delete home.props.isHome;\r\n        pageData.props.isHome = true;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's this page's name (on your menu)?\r\n                    </span>\r\n                    <input\r\n                        defaultValue={pageData.props.pageName}\r\n                        className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.onRename}\r\n                        onBlur={this.rename}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.rename()\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        <Image\r\n                            draggable={false}\r\n                            width={16}\r\n                            height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/home.svg'}\r\n                            style={{\r\n                                marginTop: 2,\r\n                                marginRight: 12\r\n                            }}\r\n                        />\r\n                        {\r\n                            pageData.props.isHome &&\r\n                            \"This page is your home page\"\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            \"Set this page as your home page\"\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            <Button className=\"PageInfoHomePageButton\" variant=\"contained\"\r\n                                onClick={this.setAsHomePage}\r\n                            >\r\n                                Set as Home Page\r\n                            </Button>\r\n                        }\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Radio from \"@material-ui/core/Radio/Radio\";\r\n\r\nconst AglRadio = withStyles((theme) => ({\r\n    root: {\r\n        padding: 6,\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    checked: {\r\n        color: '#137cbd',\r\n    },\r\n}))(Radio);\r\n\r\nexport default AglRadio;\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport GridViewer from \"../../../Menus/CommonComponents/GridViewer\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\r\nimport AglRadio from \"../../../Menus/CommonComponents/AglRadio\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class Permissions extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    changePermission = (type) => (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.type = type;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onSetPassword = (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.password = e.target.value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onChangeMemberType = (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.memberType = e.target.value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onRoleChange = (checked, role) => {\r\n        let {pageData} = this.props;\r\n        if (checked) {\r\n            if (pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role) < 0)\r\n                pageData.props.pageSetting.permissions.memberRoles.push(role);\r\n        } else {\r\n            if (pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role) >= 0) {\r\n                let index = pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role);\r\n                pageData.props.pageSetting.permissions.memberRoles.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Who can view this page?\r\n                    </span>\r\n\r\n                    <GridViewer>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Everyone\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={process.env.PUBLIC_URL + '/static/icon/world.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Everyone\r\n                            </span>\r\n                        </div>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Password Holder\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Password Holder\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={process.env.PUBLIC_URL + '/static/icon/password.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Password Holder\r\n                            </span>\r\n                        </div>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Member Only\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Member Only\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={process.env.PUBLIC_URL + '/static/icon/group.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Member Only\r\n                            </span>\r\n                        </div>\r\n                    </GridViewer>\r\n\r\n                    <span className=\"PermissionsDescription\">\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" &&\r\n                            \"Everyone can see this page\"\r\n                        }\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Password Holder\" &&\r\n                            \"Visitors with a password can see this page\"\r\n                        }\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Member Only\" &&\r\n                            \"Visitors need to sign up to see this page\"\r\n                        }\r\n                    </span>\r\n                </div>\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type === \"Password Holder\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            What's the page's password?\r\n                        </span>\r\n\r\n                        <input\r\n                            defaultValue={pageData.props.pageSetting.permissions.password}\r\n                            className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                            type=\"text\"\r\n                            onChange={this.onSetPassword}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type === \"Member Only\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            Which member can access this page?\r\n                        </span>\r\n\r\n                        <RadioGroup className=\"PermissionsRadioGroup\"\r\n                                    value={pageData.props.pageSetting.permissions.memberType}\r\n                                    onChange={this.onChangeMemberType}\r\n                        >\r\n                            <FormControlLabel\r\n                                value=\"all\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    All members\r\n                                </span>}\r\n                            />\r\n                            <FormControlLabel\r\n                                className=\"PermissionsFormLabel\"\r\n                                value=\"role\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    Members with some role\r\n                                </span>}\r\n                            />\r\n                            <FormControlLabel\r\n                                disabled\r\n                                className=\"PermissionsFormLabel\"\r\n                                value=\"pay\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    Paying customers\r\n                                </span>}\r\n                            />\r\n                        </RadioGroup>\r\n\r\n                        {\r\n                            pageData.props.pageSetting.permissions.memberType === \"role\" &&\r\n                            <div className=\"PageInfoBox\">\r\n                                <span className=\"PageInfoBoxTitle\">\r\n                                    Select from your member roles\r\n                                </span>\r\n\r\n                                <div className=\"PermissionsRolesInput NumberInput PageManagerRenameInput\"\r\n                                    onClick={(e) => {\r\n                                        this.setState({roleAnchor: e.target})\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        pageData.props.pageSetting.permissions.memberRoles.map(role => {\r\n                                            return role;\r\n                                        }).join(\" \")\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            this.state.roleAnchor &&\r\n                            <Menu\r\n                                style={{\r\n                                    zIndex: 99999999999,\r\n                                }}\r\n                                anchorEl={this.state.roleAnchor}\r\n                                open={this.state.roleAnchor !== undefined}\r\n                                onClose={(e) => {\r\n                                    this.setState({roleAnchor: undefined})\r\n                                }}\r\n                                MenuListProps={{\r\n                                    style: {\r\n                                        padding: 0,\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <MenuItem dense disabled style={{\r\n                                    opacity: 1\r\n                                }}>\r\n                                    <span className=\"PermissionsSelectRole\">\r\n                                        Select roles\r\n                                    </span>\r\n                                </MenuItem>\r\n\r\n                                {\r\n                                    siteData.allApps.member.setting.roles.map(role => {\r\n                                        return (\r\n                                            <MenuItem dense onClick={(e) => {\r\n                                                this.onRoleChange(!(pageData.props.pageSetting.permissions.memberRoles\r\n                                                    .findIndex(r => r === role) > -1), role);\r\n                                            }}\r\n                                                      key={role}\r\n                                                      style={{\r\n                                                          paddingTop: 0,\r\n                                                          paddingBottom: 0\r\n                                                      }}\r\n                                            >\r\n                                                <Checkbox\r\n                                                    size={'small'}\r\n                                                    checked={\r\n                                                        pageData.props.pageSetting.permissions.memberRoles\r\n                                                            .findIndex(r => r === role) > -1\r\n                                                    }\r\n                                                    onChange={(e) => {\r\n                                                        this.onRoleChange(e.target.checked, role);\r\n                                                    }}\r\n                                                    color=\"default\"\r\n                                                />\r\n                                                <span className=\"PermissionsRole\">\r\n                                                    {role}\r\n                                                </span>\r\n                                            </MenuItem>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                                <MenuItem dense onClick={(e) => {\r\n                                    // TODO connect to member manager\r\n                                    console.log(\"Soon\")\r\n                                }}\r\n                                >\r\n                                    <span className=\"PermissionsNewRole\">\r\n                                        Add New Role\r\n                                    </span>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        }\r\n\r\n                        {\r\n                            pageData.props.pageSetting.permissions.memberType === \"pay\" &&\r\n                            <div className=\"PageInfoBox\">\r\n                                <span className=\"PageInfoBoxTitle\">\r\n                                    Coming soon\r\n                                </span>\r\n\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class SeoGoogle extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChangeSeoSetting = (param) => (e, value) => {\r\n        let {pageData} = this.props;\r\n\r\n        value = value || e.target.value;\r\n        console.log(\"onChangeSeoSetting\", value, param);\r\n        if (param === \"endUrl\") {\r\n            if (!this.newEndUrl)\r\n                return;\r\n\r\n            value = this.newEndUrl.replace(/\\s+/g, '').toLowerCase();\r\n            let siteData = this.context.siteData;\r\n            let same = Object.values(siteData.allPages).find(p => p.props.pageSetting.seoGoogle.endUrl === value);\r\n            if (same) {\r\n                console.log(\"onChangeSeoSetting2\");\r\n                this.setState({endUrlError: true});\r\n                delete this.newEndUrl;\r\n                return;\r\n            }\r\n\r\n            delete this.newEndUrl;\r\n        }\r\n\r\n        pageData.props.pageSetting.seoGoogle[param] = value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Preview on Google search\r\n                    </span>\r\n\r\n                    <div className=\"SeoGooglePreviewRoot\">\r\n                        <span className=\"SeoGooglePreviewTitle\">\r\n                            {\r\n                                pageData.props.pageSetting.seoGoogle.pageTitle ||\r\n                                    pageData.props.pageName\r\n                            }\r\n                        </span>\r\n                        <span className=\"SeoGooglePreviewUrl\">\r\n                            {\r\n                                siteData.setting.baseUrl + (\r\n                                    pageData.props.pageSetting.seoGoogle.endUrl ||\r\n                                    pageData.props.pageName.toLowerCase()\r\n                                )\r\n                            }\r\n                        </span>\r\n                        <span className=\"SeoGooglePreviewDesc\">\r\n                            {\r\n                                pageData.props.pageSetting.seoGoogle.pageDescription\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the lat part (or slug) of url?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.endUrl || pageData.props.pageName.toLowerCase()}\r\n                        className={`PageSettingInput PageManagerRenameInput PageInfoNameInput ${\r\n                            this.state.endUrlError? 'PageInfoNameInputError': \"\"\r\n                        }`}\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newEndUrl = e.target.value;\r\n                            this.setState({endUrlError: undefined});\r\n                        }}\r\n                        onBlur={this.onChangeSeoSetting(\"endUrl\")}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"endUrl\")(e);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page's title on search results and browser tabs?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.pageTitle || pageData.props.pageName}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newPageTitle = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSeoSetting(\"pageTitle\")(e, this.newPageTitle);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"pageTitle\")(e, this.newPageTitle);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page about? Add a description\r\n                    </span>\r\n\r\n                    <textarea\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.pageDescription}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        style={{\r\n                            resize: \"none\",\r\n                            minHeight: 120\r\n                        }}\r\n                        onChange={(e) => {\r\n                            this.newPageDescription = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSeoSetting(\"pageDescription\")(e, this.newPageDescription);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"pageDescription\")(e, this.newPageDescription);\r\n                            }\r\n                        }}\r\n                        rows={5}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Show this page in search results\r\n                    </span>\r\n\r\n                    <Switch\r\n                        className=\"SeoGoogleShowInSearch\"\r\n                        checked={\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" ?\r\n                            pageData.props.pageSetting.seoGoogle.showInSearch: false\r\n                        }\r\n                        disabled={pageData.props.pageSetting.permissions.type !== \"Everyone\"}\r\n                        onChange={(e) => {\r\n                            let checked = e.target.checked;\r\n                            this.onChangeSeoSetting('showInSearch')(e, checked);\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type !== \"Everyone\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            Note: You’ve made changes to who can view this page, so it won’t show in search results. Go to the Permissions tab to change this.\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class SocialShare extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChangeSocialShareSetting = (param) => (e, value) => {\r\n        let {pageData} = this.props;\r\n\r\n        value = value || e.target.value;\r\n        pageData.props.pageSetting.socialShare[param] = value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <div className=\"SocialShareTitle\">\r\n                        What is Social Share\r\n                    </div>\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Add the text and image that display when this page is shared on social networks like Facebook, Instagram and more.\r\n                    </span>\r\n                </div>\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Preview on social\r\n                    </span>\r\n\r\n                    <div className=\"SocialPreviewBox\">\r\n                        <div className=\"SocialPreviewRoot\">\r\n                            <span className=\"SocialPreviewImageNoImage\">\r\n                                {\r\n                                    pageData.props.pageSetting.socialShare.imageUrl &&\r\n                                    <Image\r\n                                        className=\"SocialPreviewImage\"\r\n                                        src={pageData.props.pageSetting.socialShare.imageUrl}\r\n                                    />\r\n                                }\r\n\r\n                                <Button\r\n                                    className=\"SocialPreviewImageSelect\"\r\n                                >\r\n                                    Upload or Select an Image\r\n                                </Button>\r\n                            </span>\r\n                            <div className=\"SocialPreviewDetailBox\">\r\n                                <span className=\"SocialPreviewUrl\">\r\n                                    {\r\n                                        siteData.setting.baseUrl.substring(0, siteData.setting.baseUrl.lastIndexOf('/'))\r\n                                            .replace(/(^\\w+:|^)\\/\\//, '')\r\n\r\n                                    }\r\n                                </span>\r\n                                <span className=\"SocialPreviewTitle\">\r\n                                    {\r\n                                        pageData.props.pageSetting.socialShare.title ||\r\n                                        pageData.props.pageSetting.seoGoogle.pageTitle\r\n                                    }\r\n                                </span>\r\n                                <span className=\"SocialPreviewDescription\">\r\n                                    {\r\n                                        pageData.props.pageSetting.socialShare.description ||\r\n                                        pageData.props.pageSetting.seoGoogle.pageDescription\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page's title on social networks?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.socialShare.title ||\r\n                            pageData.props.pageSetting.seoGoogle.pageTitle || pageData.props.pageName}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newTitle = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSocialShareSetting(\"title\")(e, this.newTitle);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSocialShareSetting(\"title\")(e, this.newTitle);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page about? Add a description\r\n                    </span>\r\n\r\n                    <textarea\r\n                        defaultValue={pageData.props.pageSetting.socialShare.description ||\r\n                            pageData.props.pageSetting.seoGoogle.pageDescription}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        style={{\r\n                            resize: \"none\",\r\n                            minHeight: 120\r\n                        }}\r\n                        onChange={(e) => {\r\n                            this.newDescription = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSocialShareSetting(\"description\")(e, this.newDescription);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSocialShareSetting(\"description\")(e, this.newDescription);\r\n                            }\r\n                        }}\r\n                        rows={5}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab/Tab\";\r\nimport PageInfo from \"./PageInfo\";\r\nimport Permissions from \"./Permissions\";\r\nimport SeoGoogle from \"./SeoGoogle\";\r\nimport SocialShare from \"./SocialShare\";\r\n\r\nexport default class PageSetting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tabValue: \"Page Info\"\r\n        }\r\n    }\r\n\r\n    onChangeTab = (e, tabValue) => {\r\n        this.setState({tabValue});\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        return (\r\n            <Modal\r\n                open={this.props.open}\r\n                onClose={this.props.onClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                className=\"PageSettingModal\"\r\n                disableBackdropClick\r\n            >\r\n                <div className=\"PageSettingRoot\">\r\n                    {/*Header*/}\r\n                    <div className=\"PageSettingHeader\">\r\n                        <div\r\n                            className=\"PageManagerHeaderContainer\"\r\n                        >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                Page Setting ({pageData.props.pageName})\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.props.onClose}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Tabs\r\n                        className=\"PageSettingTabBox\"\r\n                        value={this.state.tabValue}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={this.onChangeTab}\r\n                        aria-label=\"disabled tabs example\"\r\n                    >\r\n                        <Tab label=\"Page Info\" value=\"Page Info\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Permissions\" value=\"Permissions\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"SEO (Google)\" value=\"SEO (Google)\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Social Share\" value=\"Social Share\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Advanced SEO\" value=\"Advanced SEO\" className=\"PageSettingTab\"/>\r\n\r\n                    </Tabs>\r\n\r\n                    {\r\n                        this.state.tabValue === \"Page Info\" &&\r\n                        <PageInfo\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Permissions\" &&\r\n                        <Permissions\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"SEO (Google)\" &&\r\n                        <SeoGoogle\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Social Share\" &&\r\n                        <SocialShare\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Advanced SEO\" &&\r\n                        <div style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\"\r\n                        }}>\r\n                            Coming Soon\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport PageSetting from \"./PageSetting/PageSetting\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class PageItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pageMenuAnchorEl: undefined\r\n        };\r\n\r\n        this.renameInput = React.createRef();\r\n    }\r\n\r\n    duplicate = () => {\r\n        // TODO ask verify\r\n        let {pageData, editor} = this.props;\r\n\r\n        let newName = `${pageData.props.pageName}(Copy)`;\r\n        let newId = uuidv4();\r\n\r\n        this.context.siteData.allPages[newId] = cloneObject(pageData);\r\n        this.context.siteData.allPages[newId].props.pageName = newName;\r\n        this.context.siteData.allPages[newId].props.pageId = newId;\r\n        delete this.context.siteData.allPages[newId].props.isHome;\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    delete = () => {\r\n        // TODO ask verify\r\n        let {pageData, editor} = this.props;\r\n\r\n        delete this.context.siteData.allPages[pageData.props.pageId];\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.onPageChange(Object.keys(this.context.siteData.allPages)[0], true);\r\n    };\r\n\r\n    setAsHome = () => {\r\n        let {pageData, editor} = this.props;\r\n        let home = Object.values(this.context.siteData.allPages).find(p => {return p.props.isHome});\r\n\r\n        if (home)\r\n            delete home.props.isHome;\r\n        pageData.props.isHome = true;\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    setting = (active) => {\r\n        this.setState({setting: active, pageMenuAnchorEl: undefined});\r\n    };\r\n\r\n    rename = (active) => {\r\n        this.setState({rename: active, pageMenuAnchorEl: undefined}, () => {\r\n            if (active)\r\n                this.renameInput.current.focus();\r\n        });\r\n\r\n        if (!active) {\r\n            let {pageData, editor} = this.props;\r\n\r\n            if (this.newPageName === pageData.props.pageName)\r\n                return;\r\n\r\n            if (!this.newPageName) {\r\n                // TODO show error\r\n                return;\r\n            }\r\n\r\n            pageData.props.pageName = this.newPageName;\r\n            this.newPageName = undefined;\r\n\r\n            editor.setState({reload: true});\r\n        }\r\n    };\r\n\r\n    onRename = (e) => {\r\n        this.newPageName = e.target.value;\r\n    };\r\n\r\n    render () {\r\n        let {pageData, onClick, editor} = this.props;\r\n        let boxClasses = classNames(\r\n            \"PageManagerNormalPageBox\",\r\n            this.context.pageData === pageData && \"PageManagerNormalPageBoxSelected\"\r\n        );\r\n        return (\r\n            <div className={boxClasses} key={pageData.props.pageId}\r\n            >\r\n                {\r\n                    !this.state.rename &&\r\n                    <span className=\"PageManagerNormalPageTitle\">\r\n                        {pageData.props.pageName}\r\n                    </span>\r\n                }\r\n\r\n                <div className=\"PageManagerNormalPageClick\" onClick={onClick}>\r\n\r\n                </div>\r\n\r\n                {\r\n                    this.state.rename &&\r\n                    <input\r\n                        ref={this.renameInput}\r\n                        defaultValue={pageData.props.pageName}\r\n                        className=\"NumberInput PageManagerRenameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.onRename}\r\n                        onBlur={(e) => this.rename(false)}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.rename(false)\r\n                            }\r\n                        }}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            // TODO\r\n                        }}\r\n                    >\r\n                    </input>\r\n                }\r\n\r\n                {\r\n                    pageData.props.isHome &&\r\n                    <IconButton\r\n                        className=\"PageManagerNormalSiteButton\"\r\n                        onClick={(e) => {\r\n                            // TODO\r\n                        }}\r\n                        disabled\r\n                    >\r\n                        <Image\r\n                            src={process.env.PUBLIC_URL + '/static/icon/home.svg'}\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    </IconButton>\r\n                }\r\n\r\n                <IconButton\r\n                    className=\"PageManagerNormalSiteButton\"\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                        this.setState({pageMenuAnchorEl: e.target})\r\n                    }}\r\n                >\r\n                    <Image\r\n                        src={process.env.PUBLIC_URL + '/static/icon/more-black.svg'}\r\n                        width={16}\r\n                        height={16}\r\n                    />\r\n                </IconButton>\r\n\r\n                {\r\n                    this.state.pageMenuAnchorEl &&\r\n                    <Menu\r\n                        style={{\r\n                            zIndex: 99999999999\r\n                        }}\r\n                        anchorEl={this.state.pageMenuAnchorEl}\r\n                        open={this.state.pageMenuAnchorEl !== undefined}\r\n                        onClose={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setState({pageMenuAnchorEl: undefined});\r\n                        }}\r\n                        MenuListProps={{\r\n                            style: {\r\n                                padding: 0,\r\n                            }\r\n                        }}\r\n                    >\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setting(true);\r\n                        }}\r\n                        >\r\n                            Setting\r\n                        </MenuItem>\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.rename(true)\r\n                        }}>\r\n                            Rename\r\n                        </MenuItem>\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.duplicate(true)\r\n                        }}\r\n                        >\r\n                            Duplicate\r\n                        </MenuItem>\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            <MenuItem dense onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.delete()\r\n                            }}\r\n                            >\r\n                                Delete\r\n                            </MenuItem>\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome && !pageData.props.isDynamic &&\r\n                            <MenuItem dense onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.setAsHome()\r\n                            }}\r\n                            >\r\n                                Set as Home Page\r\n                            </MenuItem>\r\n                        }\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setState({pageMenuAnchorEl: undefined});\r\n                            onClick();\r\n                        }} >\r\n                            Edit Page\r\n                        </MenuItem>\r\n                    </Menu>\r\n                }\r\n\r\n                {\r\n                    this.state.setting &&\r\n                    <PageSetting\r\n                        open={this.state.setting !== undefined}\r\n                        onClose={() => this.setState({setting: undefined})}\r\n                        pageData={pageData}\r\n                        editor={editor}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AddNewPageDialogItem.css';\r\n\r\nexport default class AddNewPageDialogItem extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"AddNewPageDialogItemRoot\">\r\n                <span className=\"AddNewPageDialogItemTitle\">\r\n                    {this.props.title}\r\n                </span>\r\n\r\n                <span className=\"AddNewPageDialogItemDesc\">\r\n                    {this.props.description}\r\n                </span>\r\n\r\n                <span className=\"AddNewPageDialogItemAdd\">\r\n                    Add\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport AddNewPageDialogItem from \"./AddNewPageDialogItem\";\r\n\r\nexport default class AddNewPageDialog extends React.Component {\r\n    addNormalPage = () => {\r\n        this.props.onClose();\r\n        this.props.onAddNormalPage();\r\n    };\r\n\r\n    addDynamicPage = () => {\r\n        this.props.onClose();\r\n        this.props.onAddDynamicPage();\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Menu\r\n                style={{\r\n                    zIndex: 99999999999,\r\n                }}\r\n                anchorEl={this.props.anchorEl}\r\n                open={this.props.open}\r\n                onClose={(e) => {\r\n                    this.props.onClose();\r\n                }}\r\n                MenuListProps={{\r\n                    style: {\r\n                        padding: 0,\r\n                    }\r\n                }}\r\n            >\r\n                <MenuItem dense onClick={(e) => {\r\n                    this.addNormalPage();\r\n                }}\r\n                >\r\n                    <AddNewPageDialogItem\r\n                        title={\"Page\"}\r\n                        description={\"Add a standard blank page\"}\r\n                    />\r\n                </MenuItem>\r\n                <MenuItem dense onClick={(e) => {\r\n                    this.addDynamicPage();\r\n                }}>\r\n                    <AddNewPageDialogItem\r\n                        title={\"Dynamic Page\"}\r\n                        description={\"Design once and generate a lot of different page\"}\r\n                    />\r\n                </MenuItem>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport PageTypeTitle from \"./PageTypeTitle\";\r\nimport PageItem from \"./PageItem\";\r\nimport AddNewPageDialog from \"./AddNewPageDialog\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class PageManager extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            openNormalPage: true,\r\n            openDynamicPage: false\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    onChangeSearch = (e) => {\r\n        let searchValue = e.target.value;\r\n        this.setState({searchValue});\r\n    };\r\n\r\n    getFilteredPages = () => {\r\n        let {siteData} = this.context;\r\n        return Object.keys(siteData.allPages).filter(siteId => {\r\n            if (!this.state.searchValue)\r\n                return true;\r\n\r\n            let pageData = siteData.allPages[siteId];\r\n\r\n            return pageData.props.pageName.toLowerCase().includes(this.state.searchValue.toLowerCase());\r\n        }).map(siteId => {\r\n            return siteData.allPages[siteId];\r\n        });\r\n    };\r\n\r\n    onPageClick = (pageData) => {\r\n        this.context.setPageData(pageData.props.pageId);\r\n    };\r\n\r\n    onAddNormalPage = () => {\r\n        let {siteData} = this.context;\r\n\r\n        if (!this.props.newPageDataUrl) {\r\n            fetch('/static/json/newPageData.json')\r\n                .then((r) => r.json())\r\n                .then((pageData) =>{\r\n                    let newName = \"New Page\";\r\n                    let newId = uuidv4();\r\n\r\n                    pageData.props.pageName = newName;\r\n                    pageData.props.pageId = newId;\r\n\r\n                    siteData.allPages[newId] = pageData;\r\n\r\n                    this.onPageClick(siteData.allPages[newId]);\r\n                });\r\n            // return;\r\n        }\r\n    };\r\n\r\n    onAddDynamicPage = (data) => {\r\n        // TODO\r\n    };\r\n\r\n    render() {\r\n        let {siteData} = this.context;\r\n\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"PageManagerRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    {/*Header*/}\r\n                    <div className=\"PageManagerHeader\">\r\n                        <div\r\n                            className=\"PageManagerHeaderContainer\"\r\n                        >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                Site Pages\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    this.context.toggleRightMenu(\"pageManager\", false);\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*Search box*/}\r\n                    <div className=\"PageManagerSearchBox\">\r\n                        <input\r\n                            className=\"NumberInput PageManagerSearchInput\"\r\n                            type=\"text\"\r\n                            onChange={this.onChangeSearch}\r\n                        >\r\n                        </input>\r\n\r\n                        <Image\r\n                            className=\"PageManagerSearchImage\"\r\n                            src={process.env.PUBLIC_URL + '/static/icon/search.svg'}\r\n                        />\r\n                    </div>\r\n\r\n                    {/*Sites list*/}\r\n\r\n                    <PageTypeTitle\r\n                        defaultOpen={this.state.openNormalPage}\r\n                        title=\"Main Pages\" onChange={(openNormalPage) => {\r\n                        this.setState({openNormalPage});\r\n                    }}/>\r\n\r\n                    <div className=\"PageManagerNormalPageList\">\r\n                        {\r\n                            this.state.openNormalPage &&\r\n                            this.getFilteredPages().map(pageData => {\r\n                                return (\r\n                                    <PageItem\r\n                                        key={pageData.props.pageId}\r\n                                        pageData={pageData}\r\n                                        onClick={(e) => {\r\n                                            this.onPageClick(pageData);\r\n                                        }}\r\n                                        editor={this.props.editor}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <ButtonBase className=\"PageManagerAddPageButton\"\r\n                        onClick={(e) => {\r\n                            this.setState({showAddPage: e.target})\r\n                        }}\r\n                    >\r\n                        Add New Page\r\n                    </ButtonBase>\r\n\r\n                    {\r\n                        this.state.showAddPage &&\r\n                        <AddNewPageDialog\r\n                            anchorEl={this.state.showAddPage}\r\n                            open={this.state.showAddPage !== undefined}\r\n                            onClose={(e) => {\r\n                                this.setState({showAddPage: undefined})\r\n                            }}\r\n                            onAddDynamicPage={this.onAddDynamicPage}\r\n                            onAddNormalPage={this.onAddNormalPage}\r\n                        />\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nPageManager.defaultProps = {\r\n    open: false,\r\n    speed: 800,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ThemeTextItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onEditClick = (e) => {\r\n\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let {siteData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"ThemeTextItemRoot\">\r\n                <span className=\"ThemeTextItemName\">\r\n                    {item.name}\r\n                </span>\r\n                <span className=\"ThemeTextItemDetail\">\r\n                    {item.font}, {item.fontSize}px\r\n                </span>\r\n                <span style={{\r\n                    fontFamily: `${item.font} Arial`,\r\n                    fontWeight: item.fontWeight,\r\n                    fontStyle: item.fontStyle,\r\n                    fontSize: Math.min(item.fontSize, 40),\r\n                    color: item.color,\r\n                    lineHeight: '1.4em'\r\n                }}>\r\n                    For Bold Creators\r\n                </span>\r\n\r\n                <IconButton\r\n                    className=\"ThemeTextItemEdit\"\r\n                    onClick={this.onEditClick}\r\n                >\r\n                    <img\r\n                        draggable={false}\r\n                        width={16}\r\n                        height={16}\r\n                        src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                    />\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport {getColorScheme} from \"../../AwesomwGridLayoutHelper\";\r\nimport HexColorPicker from \"./HexColorPicker\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ThemeColorsItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onEditClick = (paletteName, key, color) => (e) => {\r\n        this.setState({\r\n            toChange: {\r\n                paletteName, key, color\r\n            }\r\n        })\r\n    };\r\n\r\n    onChangeColor = (color) => {\r\n        let {editor} = this.props;\r\n        let {siteData} = this.context;\r\n        let {toChange} = this.state;\r\n        siteData.theme.Colors.items[toChange.paletteName][toChange.key] = color;\r\n\r\n        if (toChange.key === \"main\") {\r\n            siteData.theme.Colors.calculated = false;\r\n        }\r\n\r\n        toChange.color = color;\r\n        this.setState({toChange});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let {siteData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"ThemeColorsItemRoot\">\r\n                <span className=\"ThemeTextItemName\">\r\n                    {item.name}\r\n                </span>\r\n\r\n                <div className=\"ThemeColorsItemDetail\">\r\n                    <div className=\"ThemeColorsItemDetailMain\" style={{\r\n                            backgroundColor: getColorScheme(item.main)[\"3\"]\r\n                        }}\r\n                        onClick={this.onEditClick(item.name, \"main\", getColorScheme(item.main)[\"3\"])}\r\n                    >\r\n\r\n                        <Image\r\n                            className=\"ThemeColorsItemDetailOverlay\"\r\n                            style={{opacity: 1}}\r\n                            src={process.env.PUBLIC_URL + 'static/icon/edit-white.svg'}\r\n                            width={18}\r\n                            height={18}\r\n                        />\r\n                    </div>\r\n                    <div className=\"ThemeColorsItemDetailSecondary\">\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"1\"] || getColorScheme(item.main)[\"1\"],\r\n                            borderTopRightRadius: 4,\r\n                            borderBottomRightRadius: 4\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"1\", item[\"1\"] || getColorScheme(item.main)[\"1\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + 'static/icon/edit-white.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"2\"] || getColorScheme(item.main)[\"2\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"2\", item[\"2\"] || getColorScheme(item.main)[\"2\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit-white.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"3\"] || getColorScheme(item.main)[\"3\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"3\", item[\"3\"] || getColorScheme(item.main)[\"3\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"4\"] || getColorScheme(item.main)[\"4\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"4\", item[\"4\"] || getColorScheme(item.main)[\"4\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"5\"] || getColorScheme(item.main)[\"5\"],\r\n                            borderTopLeftRadius: 4,\r\n                            borderBottomLeftRadius: 4\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"5\", item[\"5\"] || getColorScheme(item.main)[\"5\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.toChange &&\r\n                    <HexColorPicker\r\n                        onClose={() => this.setState({toChange: undefined})}\r\n                        color={this.state.toChange.color}\r\n                        onChangeComplete={ this.onChangeColor }\r\n                        disableAlpha\r\n                        width={224}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport {getColorScheme, sortBy} from \"../../AwesomwGridLayoutHelper\";\r\nimport ThemeTextItem from \"./ThemeTextItem\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport ThemeColorsItem from \"./ThemeColorsItem\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nconst colorKeys = [\r\n    \"1\",\"2\",\"3\",\"4\",\"5\",\r\n];\r\nexport default class ThemeManager extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            // category: sortBy(Object.values(props.siteData.theme), \"order\")[0],\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.setState({\r\n            category: sortBy(Object.values(this.context.siteData.theme), \"order\")[0],\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setCategory = (category) => (e) => {\r\n        if (category !== this.state.category)\r\n            this.setState({category});\r\n    };\r\n\r\n    calculateTheme = () => {\r\n        let {siteData} = this.context;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        if (!theme.Colors.calculated) {\r\n            Object.values(theme.Colors.items).forEach(item => {\r\n                let scheme = getColorScheme(item.main);\r\n                colorKeys.forEach(key => {\r\n                    item[key] = scheme[key];\r\n                })\r\n            });\r\n\r\n            theme.Colors.calculated = true;\r\n        }\r\n    };\r\n\r\n    getColor = (paletteName, key) => {\r\n        let {siteData} = this.context;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        this.calculateTheme();\r\n\r\n        return theme.Colors.items[paletteName][key];\r\n    };\r\n\r\n    render() {\r\n        let {editor} = this.props;\r\n        let {siteData, pageData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"ThemeManagerRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"ThemeManagerList\"\r\n                    >\r\n                        {\r\n                            sortBy(Object.values(siteData.theme), \"order\").map(category => {\r\n                                let style = {};\r\n                                if (category === this.state.category)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={category.name}\r\n                                        className=\"ThemeManagerCategoryItem\"\r\n                                        onClick={this.setCategory(category)}\r\n                                        style={style}\r\n                                    >\r\n                                        {category.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.category &&\r\n                        <div className=\"ThemeManagerItemRoot\">\r\n                            {/*Header*/}\r\n                            <div\r\n                                className=\"ThemeManagerItemHeaderContainer\"\r\n                            >\r\n                            <span className=\"ThemeManagerItemHeaderTitle\">\r\n                                Theme\r\n                            </span>\r\n\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.context.toggleRightMenu(\"themeManager\", false);\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={12}\r\n                                        height={12}\r\n                                        src={require('../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeManagerItemScroll\">\r\n                                {\r\n                                    Object.keys(this.state.category.items).map(key => {\r\n                                        if (this.state.category.name === \"Text\") {\r\n                                            return (\r\n                                                <ThemeTextItem\r\n                                                    key={key}\r\n                                                    item={this.state.category.items[key]}\r\n                                                    editor={editor}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                        if (this.state.category.name === \"Colors\") {\r\n                                            return (\r\n                                                <ThemeColorsItem\r\n                                                    key={key}\r\n                                                    item={this.state.category.items[key]}\r\n                                                    editor={editor}\r\n                                                    recalculateColors={this.calculateTheme()}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nThemeManager.defaultProps = {\r\n    open: false,\r\n    speed: 1200,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport {EditorContext} from \"../EditorContext\";\r\n\r\nexport default class EditorHeaderZoom extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <>\r\n                    <IconButton\r\n                        buttonBaseStyle={{\r\n                            marginLeft: 0,\r\n                            marginRight: 10,\r\n                            backgroundColor: this.state.zoomSetting && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.setState({zoomSetting: e.currentTarget});\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/zoom-in.svg'}\r\n                        />\r\n\r\n                    </IconButton>\r\n\r\n                    {\r\n                        this.state.zoomSetting &&\r\n                        <Menu\r\n                            style={{\r\n                                zIndex: 99999999999,\r\n                            }}\r\n                            anchorEl={this.state.zoomSetting}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            getContentAnchorEl={null}\r\n                            anchorPosition={{ left: 0, top: 0 }}\r\n                            PaperProps={{\r\n                                style:{\r\n                                    transformOrigin: \"top right\",\r\n                                    transform: `scale(${1/editorContext.zoomScale})`\r\n                                }\r\n                            }}\r\n                            marginThreshold={0}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={true}\r\n                            onClose={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.setState({zoomSetting: undefined});\r\n                            }}\r\n                            MenuListProps={{\r\n                                style: {\r\n                                    padding: 0,\r\n                                }\r\n                            }}\r\n                            transitionDuration={0}\r\n                        >\r\n                            <Paper style={{\r\n                                padding: 10,\r\n                                display: \"flex\",\r\n                                alignItems: \"center\"\r\n                            }}>\r\n                                <IconButton\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 0,\r\n                                        marginRight: 10,\r\n                                        pointerEvents: \"auto\"\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 10\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        e.preventDefault();\r\n                                        this.props.onZoomChange(Math.min(1.3, editorContext.zoomScale + 0.1));\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={14}\r\n                                        height={14}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/add.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <span style={{\r\n                                    width: 70,\r\n                                    textAlign: \"center\"\r\n                                }}>\r\n                                    {(editorContext.zoomScale * 100).toFixed(0)}%\r\n                                </span>\r\n                                <IconButton\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 10,\r\n                                        marginRight: 10,\r\n                                        pointerEvents: \"auto\"\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 10\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        e.preventDefault();\r\n                                        this.props.onZoomChange(Math.max(0.5 ,editorContext.zoomScale - 0.1));\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={14}\r\n                                        height={14}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/minus.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <Button className=\"EditorHeaderZoomReset\"\r\n                                    onClick={(e) => {\r\n                                        this.props.onZoomChange(1);\r\n                                    }}\r\n                                >\r\n                                    Reset\r\n                                </Button>\r\n                            </Paper>\r\n                        </Menu>\r\n                    }\r\n                    </>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport './EditorHeaderPageSelect.css';\r\n\r\nexport default class EditorHeaderPageSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getOptions = (editorContext) => {\r\n        let options = Object.values(editorContext.siteData.allPages).map(pageData => {\r\n            return pageData.props.pageName;\r\n        });\r\n\r\n        !editorContext.preview && options.push(\r\n            <div\r\n                className=\"EditorHeaderPageSelectPageManagerButton\"\r\n                onClick={() => {\r\n                    editorContext.toggleRightMenu(\"pageManager\", true);\r\n                }}\r\n            >\r\n                Page Manager\r\n            </div>\r\n        );\r\n\r\n        return options;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        <DropDown\r\n                            options={editorContext.siteData ? this.getOptions(editorContext) : [\"...\"]}\r\n                            onChange={(v) => {\r\n                                let pageData = Object.values(editorContext.siteData.allPages).find(pd => {\r\n                                    return pd.props.pageName === v;\r\n                                });\r\n\r\n                                if (pageData)\r\n                                    editorContext.setPageData(pageData.props.pageId);\r\n                            }}\r\n                            value={editorContext.pageData ? editorContext.pageData.props.pageName : \"...\"}\r\n                            spanStyle={{\r\n                                width: 200,\r\n                                fontSize: 14,\r\n                                border: \"0px solid #cfcfcf\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class NumberInputEnterToChange extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"props.min\", props.min)\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    inputFilter = (value, oldValue) => {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = parseFloat(value).toFixed(0);\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        if (this.props.lazy)\r\n            return;\r\n\r\n        let value = this.inputFilter(this.state.tempValue, this.props.value);\r\n        this.props.onChange(value);\r\n        this.setState({tempValue: undefined});\r\n    };\r\n\r\n    onTempChange = (e) => {\r\n        let tempValue = e.target.value;\r\n        this.setState({tempValue});\r\n\r\n        if (this.props.lazy)\r\n            this.props.onChange(tempValue);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className={\"NumberInput \" + this.props.className || \"\"}\r\n                value={this.state.tempValue || this.props.value || 0}\r\n                onChange={this.onTempChange}\r\n                onBlur={this.onChange}\r\n                onKeyPress={(e) => {\r\n                    if((e.keyCode || e.which) === 13) {\r\n                        this.onChange();\r\n                        if (this.props.onKeyPress)\r\n                            this.props.onKeyPress();\r\n                    }\r\n                }}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport const getBreakpointIcon = (bpData) => {\r\n    if (bpData.start >= 1255)\r\n        return <img draggable={false} width={24} height={24} src={process.env.PUBLIC_URL + '/static/icon/computer.svg'} />\r\n    if (bpData.start >= 1001)\r\n        return <img draggable={false} width={24} height={24} src={process.env.PUBLIC_URL + '/static/icon/laptop.svg'} />\r\n    if (bpData.start >= 751)\r\n        return <img draggable={false} width={18} height={18} src={process.env.PUBLIC_URL + '/static/icon/ipad.svg'} />\r\n\r\n    return <img draggable={false} width={16} height={16} src={process.env.PUBLIC_URL + '/static/icon/phone.svg'} />\r\n};\r\n\r\nexport const getBreakpointName = (bpData) => {\r\n    if (bpData.start >= 1255)\r\n        return 'Desktop'\r\n    if (bpData.start >= 1001)\r\n        return 'Laptop'\r\n    if (bpData.start >= 751)\r\n        return 'Tablet'\r\n\r\n    return 'Mobile'\r\n};\r\n\r\nexport const getCommonDevices = () => {\r\n    return [\r\n        {\r\n            name: \"Galaxy S7\",\r\n            start: 360\r\n        },\r\n        {\r\n            name: \"Galaxy S8/S9\",\r\n            start: 360\r\n        },\r\n        {\r\n            name: \"iPad\",\r\n            start: 768\r\n        },\r\n        {\r\n            name: \"iPad Pro\",\r\n            start: 1024\r\n        },\r\n        {\r\n            name: \"iPhone 6/7/8\",\r\n            start: 375\r\n        },\r\n        {\r\n            name: \"iPhone 6/7/8 Plus\",\r\n            start: 414\r\n        },\r\n        {\r\n            name: \"iPhone X\",\r\n            start: 375\r\n        },\r\n        {\r\n            name: \"Pixel 2\",\r\n            start: 411\r\n        },\r\n        {\r\n            name: \"Pixel 2 XL\",\r\n            start: 411\r\n        }\r\n    ];\r\n};\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpointsSettingItem.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport {getBreakpointIcon} from \"./BreakpointHelper\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport default class EditorHeaderBreakpointsSettingItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: props.bpData.name? false: true\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    isHighestBp = (editorContext) => {\r\n        let {bpData} = this.props;\r\n        return editorContext.editor.breakpointmanager.getHighestBpName() === bpData.name;\r\n    };\r\n\r\n    done = (editorContext) => {\r\n        let {bpData} = this.props;\r\n\r\n        if (isNaN(this.tempEnd)) {\r\n            return;\r\n        }\r\n\r\n        this.tempEnd = parseInt(this.tempEnd);\r\n\r\n        editorContext.editor.breakpointmanager.updateBreakpoint(\r\n            bpData.name, undefined, this.tempEnd\r\n        );\r\n\r\n        this.setState({editMode: false})\r\n\r\n        editorContext.update();\r\n    };\r\n\r\n    create = (editorContext) => {\r\n        if (!this.tempEnd)\r\n            this.tempEnd = editorContext.pageSize;\r\n\r\n        if (isNaN(this.tempEnd)) {\r\n            return;\r\n        }\r\n\r\n        this.tempEnd = parseInt(this.tempEnd);\r\n\r\n        let {newBpData, prevBpData} = editorContext.editor.breakpointmanager.updateBreakpoint(\r\n            uuidv4(), this.tempEnd, undefined\r\n        );\r\n\r\n        this.props.onCancel();\r\n\r\n        editorContext.onNewBpAdded(newBpData, prevBpData);\r\n    };\r\n\r\n    delete = (editorContext) => {\r\n        let {bpData} = this.props;\r\n\r\n        editorContext.editor.breakpointmanager.deleteBreakpoint(bpData.name);\r\n\r\n        editorContext.update();\r\n    }\r\n\r\n    cancelEditMode = () => {\r\n        this.setState({editMode: false});\r\n    };\r\n\r\n    render () {\r\n        let {bpData, nextBpData} = this.props;\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div className=\"BreakpointSettingItemRoot\">\r\n                        <div className=\"BreakpointSettingItemIcon\">\r\n                            {\r\n                                getBreakpointIcon(bpData)\r\n                            }\r\n                        </div>\r\n\r\n                        {\r\n                            bpData.name &&\r\n                            <p className=\"BreakpointSettingItemStart\">\r\n                                {bpData.start} {\r\n                                    this.isHighestBp(editorContext) ? \" & Up\" : \" -\"\r\n                                }\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <p className=\"BreakpointSettingItemEndText\">\r\n                                {bpData.end}\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <NumberInputEnterToChange\r\n                                className=\"BreakpointSettingItemEndInput\"\r\n                                inputStyle={{\r\n                                    marginLeft: 0\r\n                                }}\r\n                                min={bpData.name? bpData.start + 1: 320}\r\n                                max={bpData.name? nextBpData.end - 2 : 9999}\r\n                                value={bpData.end || editorContext.pageSize}\r\n                                onChange={(tempEnd) => {\r\n                                    this.tempEnd = tempEnd;\r\n                                }}\r\n                                onKeyPress={() => {\r\n                                    bpData.name?\r\n                                        this.done(editorContext):\r\n                                        this.create(editorContext);\r\n                                }}\r\n                                lazy\r\n                            />\r\n                        }\r\n\r\n                        {\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <p className=\"BreakpointSettingItemPx\">\r\n                                {\"px\"}\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <div className=\"BreakpointSettingItemNoneEdit\">\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.delete(editorContext)\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/delete.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.props.onEditMode && this.props.onEditMode();\r\n                                        this.setState({editMode: true})\r\n                                        this.tempEnd = bpData.end;\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/edit2.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <div className=\"BreakpointSettingItemEditMode\">\r\n                                {\r\n                                    bpData.name &&\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className=\"BreakpointSettingItemButtons BreakpointSettingItemDone\"\r\n                                        onClick={() => {\r\n                                            this.done(editorContext);\r\n                                        }}\r\n                                    >\r\n                                        Done\r\n                                    </Button>\r\n                                }\r\n                                {\r\n                                    !bpData.name &&\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className=\"BreakpointSettingItemButtons BreakpointSettingItemDone\"\r\n                                        onClick={() => {\r\n                                            this.create(editorContext);\r\n                                        }}\r\n                                    >\r\n                                        Create\r\n                                    </Button>\r\n                                }\r\n                                <Button\r\n                                    className=\"BreakpointSettingItemButtons BreakpointSettingItemCancel\"\r\n                                    onClick={() => {\r\n                                        bpData.name ?\r\n                                            this.setState({editMode: false}) :\r\n                                            this.props.onCancel();\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpointsSetting.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport EditorHeaderBreakpointsSettingItem from \"./EditorHeaderBreakpointsSettingItem\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport default class EditorHeaderBreakpointsSetting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    clearEditMode = () => {\r\n        console.log(\"clearEditMode\")\r\n        Object.values(this.bpItemrRefs).forEach(bpItemRef => {\r\n            console.log(\"clearEditMode1\", bpItemRef)\r\n            if (bpItemRef.current)\r\n                bpItemRef.current.cancelEditMode();\r\n        });\r\n    };\r\n\r\n    getBpItemRef = (name) => {\r\n        if (!this.bpItemrRefs)\r\n            this.bpItemrRefs = {};\r\n\r\n        if (!this.bpItemrRefs[name])\r\n            this.bpItemrRefs[name] = React.createRef();\r\n\r\n        return this.bpItemrRefs[name];\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <Menu\r\n                        style={{\r\n                            zIndex: 99999999999\r\n                        }}\r\n                        anchorEl={this.props.anchorEl}\r\n                        open={true}\r\n                        onClose={(e) => {\r\n                            this.props.onClose();\r\n                        }}\r\n                        MenuListProps={{\r\n                            style: {\r\n                                padding: 0\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div className=\"BpSettingRoot\">\r\n                            {/*Header*/}\r\n                            <div className=\"BpSettingHeader\">\r\n                                <div\r\n                                    className=\"BpSettingHeaderContainer\"\r\n                                >\r\n                            <span className=\"BpSettingHeaderTitle\">\r\n                                Customize Breakpoints\r\n                            </span>\r\n\r\n                                    <IconButton\r\n                                        onClick={this.props.onClose}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={12}\r\n                                            height={12}\r\n                                            src={process.env.PUBLIC_URL + '/static/icon/close.svg'}\r\n                                        />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <p className=\"BpSettingGuideSpan\">\r\n                                Add, edit or delete this page's breakpoints to design for different viewport sizes.\r\n                            </p>\r\n\r\n                            {\r\n                                editorContext.editor.breakpointmanager.breakpoints.map((bpData, index) => {\r\n                                    return (\r\n                                        <EditorHeaderBreakpointsSettingItem\r\n                                            key={bpData.name}\r\n                                            bpData={bpData}\r\n                                            nextBpData={editorContext.editor.breakpointmanager.breakpoints[index - 1]}\r\n                                            onEditMode={this.clearEditMode}\r\n                                            ref={this.getBpItemRef(bpData.name)}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            {\r\n                                this.state.newBpData &&\r\n                                <EditorHeaderBreakpointsSettingItem\r\n                                    bpData={this.state.newBpData}\r\n                                    onCancel={() => {\r\n                                        this.setState({newBpData: undefined});\r\n                                    }}\r\n                                />\r\n                            }\r\n\r\n                            <Button\r\n                                className=\"BpSettingAddBp\"\r\n                                onClick={() => {\r\n                                    this.clearEditMode();\r\n                                    this.setState({newBpData: {}});\r\n                                }}\r\n                            >\r\n                                Add New Breakpoint\r\n                            </Button>\r\n                        </div>\r\n                    </Menu>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpoints.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab/Tab\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport EditorHeaderBreakpointsSetting from \"./EditorHeaderBreakpointsSetting\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {getBreakpointIcon} from \"./BreakpointHelper\";\r\n\r\nexport default class EditorHeaderBreakpoints extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onChangeTab = (editorContext) => (e, bpName) => {\r\n        this.setState({tabValue: bpName});\r\n        console.log(\"bpName\", bpName, editorContext.editor.breakpointmanager.current())\r\n\r\n        if (editorContext.editor.breakpointmanager.current() === bpName)\r\n            return;\r\n\r\n        let bpData = editorContext.editor.breakpointmanager.getBpData(bpName);\r\n\r\n        if (!bpData)\r\n            return;\r\n\r\n        let width;\r\n        if (bpData.prefer >= bpData.start && bpData.prefer <= bpData.end)\r\n            width = bpData.prefer;\r\n        else\r\n            width = bpData.start;\r\n\r\n        editorContext.editor.onPageResize(width);\r\n    };\r\n\r\n    getTabValue = (editorContext) => {\r\n        let width = editorContext.editor.rootLayoutRef.current.getSize(false).width;\r\n        return editorContext.editor.breakpointmanager.current(width);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <Tabs\r\n                                className=\"EditorHeaderBreakpointsTabRoot\"\r\n                                value={\r\n                                    this.getTabValue(editorContext)\r\n                                }\r\n                                indicatorColor=\"primary\"\r\n                                textColor=\"primary\"\r\n                                onChange={this.onChangeTab(editorContext)}\r\n                                aria-label=\"disabled tabs example\"\r\n                            >\r\n                                {\r\n                                    editorContext.editor.breakpointmanager.breakpoints.map((bpData, index) => {\r\n                                        return (\r\n                                            <Tab\r\n                                                key={bpData.name}\r\n                                                className=\"EditorHeaderBreakpointsTab\"\r\n                                                label={getBreakpointIcon(bpData)}\r\n                                                value={bpData.name}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </Tabs>\r\n                        }\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <IconButton\r\n                                buttonBaseStyle={{marginLeft: 10}}\r\n                                onClick={(e) => {\r\n                                    this.setState({settingAnchor: e.currentTarget});\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={18}\r\n                                    height={18}\r\n                                    src={process.env.PUBLIC_URL + '/static/icon/open-menu.svg'}\r\n                                />\r\n                            </IconButton>\r\n                        }\r\n\r\n                        <div style={{\r\n                            backgroundColor: \"#cfcfcf\",\r\n                            height: \"auto\",\r\n                            width: 1,\r\n                            marginLeft: 10\r\n                        }}>\r\n\r\n                        </div>\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <>\r\n                                <span\r\n                                    style={{\r\n                                        marginLeft: 10,\r\n                                        display:\"flex\",\r\n                                        alignItems: \"center\",\r\n                                        fontSize: 12\r\n                                    }}\r\n                                >\r\n                                    Width\r\n                                </span>\r\n                                <NumberInputEnterToChange\r\n                                    inputStyle={{\r\n                                        marginLeft: 10\r\n                                    }}\r\n                                    min={editorContext.editor.breakpointmanager.getMinWidth()}\r\n                                    max={9999}\r\n                                    value={editorContext.editor.rootLayoutRef.current.getSize(false).width}\r\n                                    onChange={(width) => {\r\n                                        editorContext.setPageSizeWidth(width);\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n\r\n                        {\r\n                            this.state.settingAnchor &&\r\n                            <EditorHeaderBreakpointsSetting\r\n                                anchorEl={this.state.settingAnchor}\r\n                                onClose={(e) => {\r\n                                    this.setState({settingAnchor: undefined});\r\n                                }}\r\n                            />\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\n\r\nexport default class EditorHeader extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onInspectorClickState: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    setRightMenuOpen = (openMenu, state) => {\r\n        let changedState = {};\r\n        [\r\n            \"onAddComponentClick\",\r\n            \"onThemeManagerClick\",\r\n            \"onPageManagerClick\"\r\n        ].forEach(name => {\r\n            if (this.state[`${name}State`] && `${name}State` !== openMenu) {\r\n                console.log(\"setRightMenuOpen\", name);\r\n                this.props[name](true);\r\n            }\r\n\r\n            changedState[`${name}State`] = false;\r\n        });\r\n        this.setState({\r\n            ...changedState,\r\n            [openMenu]: state\r\n        });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"EditorHeaderRoot\" style={{\r\n                width: `${this.context.zoomScale*100}%`,\r\n            }}>\r\n                <div className=\"EditorHeaderRightShortcuts\">\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.addComponent.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"addComponent\");\r\n                            // let onAddComponentClickState = this.props.onAddComponentClick();\r\n                            // this.setRightMenuOpen(\"onAddComponentClickState\", onAddComponentClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/add.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.pageManager.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"pageManager\");\r\n                            // let onPageManagerClickState = this.props.onPageManagerClick();\r\n                            // this.setRightMenuOpen(\"onPageManagerClickState\", onPageManagerClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/page.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.themeManager.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"themeManager\");\r\n                            // let onThemeManagerClickState = this.props.onThemeManagerClick();\r\n                            // this.setRightMenuOpen(\"onThemeManagerClickState\", onThemeManagerClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/water.svg'}\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"EditorHeaderCenterShortcuts\">\r\n                    <EditorHeaderPageSelect\r\n                        className=\"EditorHeaderCenterDiv\"\r\n                        style={{\r\n                            width: 200\r\n                        }}\r\n                    />\r\n                    <EditorHeaderBreakpoints\r\n                        className=\"EditorHeaderCenterDiv EditorHeaderLastCenterDiv EditorHeaderBreakpoints\"\r\n                    />\r\n                </div>\r\n                <div className=\"EditorHeaderLeftShortcuts\">\r\n                    <IconButton\r\n                        buttonBaseStyle={{\r\n                            marginLeft: 0,\r\n                            marginRight: 10,\r\n                            backgroundColor: this.state.onInspectorClickState && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            let onInspectorClickState = this.props.onInspectorClick(e);\r\n                            this.setState({onInspectorClickState})\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/inspector.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <EditorHeaderZoom\r\n                        onZoomChange={(zoomScale) => {\r\n                            this.props.onPageZoomChange(zoomScale);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport DropDown from \"../Menus/CommonComponents/DropDown\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\nimport {getScrollbarWidth} from \"../AwesomeGridLayoutUtils\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\n\r\nexport default class EditorPreview extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"EditorPreviewRoot\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorPreview from \"./EditorPreview\";\r\n\r\nexport default class EditorType extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        if (this.props.preview) {\r\n            return (\r\n                <EditorPreview>\r\n                    {this.props.children}\r\n                </EditorPreview>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"EditorBoundaryContent\">\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PreviewHeaderBreakpoints.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport {getBreakpointIcon, getBreakpointName} from \"./BreakpointHelper\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\n\r\nexport default class PreviewHeaderBreakpoints extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lastBpData: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getCurrentValue = (editorContext) => {\r\n        if (!editorContext.editor.rootLayoutRef.current)\r\n            return \"...\";\r\n\r\n        let width = editorContext.editor.rootLayoutRef.current.getSize(false).width;\r\n\r\n        let bpData = this.getOptions(editorContext).filter(bpData => {\r\n            console.log(\"getCurrentValue\", bpData.name, bpData.type, bpData.start, width, bpData.type === 'device' && bpData.start === width)\r\n            return bpData.type === 'device' && bpData.start === width;\r\n        })[0];\r\n\r\n        if (bpData) {\r\n            return (this.state.lastBpData && this.state.lastBpData.type === \"device\" && this.state.lastBpData) || bpData;\r\n        }\r\n\r\n        return editorContext.editor.breakpointmanager.currentBpData(width);\r\n    };\r\n\r\n    getOptions = (editorContext) => {\r\n        let options = [{\r\n            title: \"Page Breakpoints\", disabled:true\r\n        }];\r\n\r\n        if (!editorContext.editor.breakpointmanager) return [];\r\n\r\n        let breakpoints = editorContext.editor.breakpointmanager.getSortedBreakPoints().reverse();\r\n\r\n        breakpoints.forEach(bpData => {\r\n            options.push(bpData);\r\n        });\r\n\r\n        options.push({\r\n            title: \"Common Devices\", disabled:true\r\n        });\r\n\r\n        (this.props.devices || []).sort((a, b) => {\r\n            if (a.start > b.start) {\r\n                return -1;\r\n            } else if (a.start === b.start) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        }).forEach(bpData => {\r\n            bpData.type = 'device';\r\n            options.push(bpData);\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        <DropDown\r\n                            options={editorContext.siteData ? this.getOptions(editorContext) : [\"...\"]}\r\n                            onChange={(bpData) => {\r\n                                this.setState({lastBpData: bpData});\r\n                                editorContext.setPageSizeWidth(bpData.prefer || bpData.start);\r\n                            }}\r\n                            value={editorContext.pageData ? this.getCurrentValue(editorContext) : \"...\"}\r\n                            spanStyle={{\r\n                                width: 256,\r\n                                fontSize: 14,\r\n                                border: \"0px solid #cfcfcf\",\r\n                            }}\r\n                            renderer={(bpData) => {\r\n                                return (\r\n                                    <div className=\"PreviewHeaderBreakpointsRenderer\">\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererIcon\">\r\n                                                {\r\n                                                    getBreakpointIcon(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererName\">\r\n                                                {\r\n                                                    bpData.type === 'device' ? bpData.name :\r\n                                                    getBreakpointName(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererSize\">\r\n                                                {\r\n                                                    bpData.start + \" px\"\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            !bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererTitle\">\r\n                                                {\r\n                                                    bpData.title\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                            valueRenderer={(bpData) => {\r\n                                return (\r\n                                    <div className=\"PreviewHeaderBreakpointsRenderer\">\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererIcon\">\r\n                                                {\r\n                                                    getBreakpointIcon(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererName\">\r\n                                                {\r\n                                                    bpData.type === 'device' ? bpData.name :\r\n                                                    getBreakpointName(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            !bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererTitle\">\r\n                                                {\r\n                                                    bpData.title\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        />\r\n\r\n                        <div style={{\r\n                            backgroundColor: \"#cfcfcf\",\r\n                            height: \"auto\",\r\n                            width: 1,\r\n                            marginLeft: 10\r\n                        }}>\r\n\r\n                        </div>\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <>\r\n                                <span\r\n                                    style={{\r\n                                        marginLeft: 10,\r\n                                        display:\"flex\",\r\n                                        alignItems: \"center\",\r\n                                        fontSize: 12\r\n                                    }}\r\n                                >\r\n                                    Width\r\n                                </span>\r\n                                <NumberInputEnterToChange\r\n                                    inputStyle={{\r\n                                        marginLeft: 10\r\n                                    }}\r\n                                    min={editorContext.editor.breakpointmanager.getMinWidth()}\r\n                                    max={9999}\r\n                                    value={editorContext.editor.rootLayoutRef.current.getSize(false).width}\r\n                                    onChange={(width) => {\r\n                                        editorContext.setPageSizeWidth(width);\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport PreviewHeaderBreakpoints from \"./Breakpoints/PreviewHeaderBreakpoints\";\r\nimport {getCommonDevices} from \"./Breakpoints/BreakpointHelper\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport default class PreviewHeader extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"EditorHeaderRoot\" style={{\r\n                width: `${this.context.zoomScale*100}%`,\r\n            }}>\r\n                <div className=\"EditorHeaderRightShortcuts\">\r\n                </div>\r\n                <div className=\"EditorHeaderCenterShortcuts\">\r\n                    <EditorHeaderPageSelect\r\n                        className=\"EditorHeaderCenterDiv\"\r\n                        style={{\r\n                            width: 200\r\n                        }}\r\n                    />\r\n                    <PreviewHeaderBreakpoints\r\n                        className=\"EditorHeaderCenterDiv EditorHeaderLastCenterDiv EditorHeaderBreakpoints\"\r\n                        devices={getCommonDevices()}\r\n                    />\r\n                </div>\r\n                <div className=\"PreviewHeaderLeftShortcuts\">\r\n                    <Button className=\"PublishButton\" onClick={() => {\r\n                        this.context.sendPublishCommand();\r\n                    }}>\r\n                        Publish\r\n                    </Button>\r\n                    <Button className=\"PreviewButton\" onClick={() => {\r\n                        this.context.sendEditCommand();\r\n                    }}>\r\n                        Edit\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport DropDown from \"../Menus/CommonComponents/DropDown\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\nimport {getScrollbarWidth} from \"../AwesomeGridLayoutUtils\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\n\r\nexport default class PageView extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        if (this.context.production) {\r\n            return (\r\n                this.props.children\r\n            )\r\n        } else {\r\n            return (\r\n                <div\r\n                    className=\"EditorBoundaryPageHolder\"\r\n                    style={{\r\n                        // TODO add scale support\r\n                        padding: \"0 50px\"\r\n                    }}\r\n                    onScroll={this.props.onScrollBoundary}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"EditorBoundaryPageHolderHover\"\r\n                        style={{\r\n                            bottom: getScrollbarWidth()\r\n                        }}\r\n                        onClick={() => {\r\n                            this.props.rootLayoutRef.current.onSelect(true);\r\n                        }}\r\n                    />\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport BreakPointManager from \"../BreakPointManager\";\r\nimport DragDropManager from \"../DragDropManager\";\r\nimport InputManager from \"../InputManager\";\r\nimport SelectManager from \"../SelectManager\";\r\nimport SnapManager from \"../SnapManager\";\r\nimport CopyManager from \"../CopyManager\";\r\nimport IdManager from \"../IdManager\";\r\nimport UndoRedo from \"../UndoRedo\";\r\nimport GridLineManager from \"../GridLineManager\";\r\nimport AnchorManager from \"../AnchorManager\";\r\nimport {initDynamicAnimations, initDynamicComponents} from \"../Dynamic/DynamicComponents\";\r\nimport AdjustmentGrid from \"../Adjustment/AdjustmentGrid\";\r\nimport AdjustmentSnap from \"../Adjustment/AdjustmentSnap\";\r\nimport AdjustmentGridLines from \"../Adjustment/AdjustmentGridLines\";\r\nimport AdjustmentGroupRect from \"../Adjustment/AdjustmentGroupRect\";\r\nimport MenuHolder from \"../Menus/MenuHolder\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport './EditorBoundary.css';\r\nimport IFrameCommunicator from \"../Test/IFrameCommunicator\";\r\nimport EditorController from \"../Test/EditorController\";\r\nimport Inspector from \"../Test/Inspector/Inspector\";\r\nimport AdjustmentResizeWrapper from \"../Adjustment/AdjustmentResizeWrapper\";\r\nimport AdjustmentHelpLinesWrapper from \"../Adjustment/AdjustmentHelpLinesWrapper\";\r\nimport AdjustmentHover from \"../Adjustment/AdjustmentHover\";\r\nimport {cloneObject, getScrollbarWidth} from \"../AwesomeGridLayoutUtils\";\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from \"lodash.throttle\";\r\nimport Layout from \"../Test/Layout/Layout\";\r\nimport AddComponent from \"../Test/AddComponent/AddComponent\";\r\nimport PageManager from \"../Test/PageManager/PageManager\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport ThemeManager from \"../Test/Theme/ThemeManager\";\r\nimport defaultSiteData from \"../../data/defaultSiteData.json\";\r\nimport defaultAllComponentData from \"../../data/allComponentData.json\";\r\nimport EditorHeader from \"./EditorHeader\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorType from \"./EditorType\";\r\nimport PreviewHeader from \"./PreviewHeader\";\r\nimport PageView from \"./PageView\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class EditorBoundary extends React.Component{\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            preview: true\r\n        };\r\n\r\n        this.init(props);\r\n    }\r\n\r\n    // Declare all managers & refs\r\n    init = (props) => {\r\n        this.rootLayoutRef = React.createRef();\r\n        this.snapSvgRef = React.createRef();\r\n        this.gridContainerRef = React.createRef();\r\n        this.gridEditorRef = React.createRef();\r\n        this.groupSelectRef = React.createRef();\r\n        this.miniMenuHolderRef = React.createRef();\r\n        this.resizeRef = React.createRef();\r\n        this.helpLinesRef = React.createRef();\r\n        this.inspectorRef = React.createRef();\r\n        this.hoverRef = React.createRef();\r\n        this.layoutRef = React.createRef();\r\n        this.addComponentRef = React.createRef();\r\n        this.pageManagerRef = React.createRef();\r\n        this.themeManagerRef = React.createRef();\r\n        this.dragdrop = new DragDropManager();\r\n        this.inputManager = new InputManager();\r\n        this.select = new SelectManager(this.inputManager, this.groupSelectRef,\r\n            this.rootLayoutRef, this.miniMenuHolderRef, this.inspectorRef, this.resizeRef,\r\n            this.helpLinesRef, this.hoverRef);\r\n        this.snap = new SnapManager(5, this.snapSvgRef);\r\n        this.copyMan = new CopyManager(this.select, this.rootLayoutRef);\r\n        this.idMan = new IdManager('comp');\r\n        this.undoredo = new UndoRedo(100, document, this.idMan);\r\n        this.gridLine = new GridLineManager(this.gridContainerRef);\r\n        this.anchorMan = new AnchorManager();\r\n\r\n        initDynamicComponents();\r\n        initDynamicAnimations();\r\n\r\n        this.iFrameCommunicator = new IFrameCommunicator(undefined, \"WeblancerIFrameCommunicator\",\r\n            window.parent, this.onMessage);\r\n\r\n        // TODO test, clean them after test finished\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 80 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + P\");\r\n                this.pinInspector();\r\n            }\r\n            if ( key === 76 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + L\");\r\n                this.toggleThemeManager(true);\r\n            }\r\n            if ( key === 79 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + O\");\r\n                this.toggleThemeManager(false);\r\n            }\r\n            if ( key === 69 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + E\");\r\n                this.exportSiteData();\r\n            }\r\n        });\r\n\r\n\r\n    };\r\n\r\n    initContext = () => {\r\n        this.context.initContext({\r\n            editor: this,\r\n            rightMenus: {\r\n                addComponent: {\r\n                    state: false,\r\n                    toggle: this.toggleAddComponent\r\n                },\r\n                pageManager: {\r\n                    state: false,\r\n                    toggle: this.togglePageManager\r\n                },\r\n                themeManager: {\r\n                    state: false,\r\n                    toggle: this.toggleThemeManager\r\n                }\r\n            }\r\n        });\r\n\r\n        this.select.setContext(this.context);\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.initContext();\r\n        this.loadSiteData();\r\n    }\r\n\r\n    loadSiteData = () => {\r\n        fetch(process.env.PUBLIC_URL + '/static/json/env.json').then((res) => res.json())\r\n        .then((data) => {\r\n            if (data.value === 'editor') {\r\n                this.postMessage({\r\n                    type: \"Holder\",\r\n                    func: \"onEditorMounted\",\r\n                    inputs: []\r\n                }, (data) => {\r\n                    console.log(\"componentDidMount initFromHolder\", data);\r\n                    this.initFromHolder(data.result);\r\n                });\r\n            } else {\r\n                fetch(process.env.PUBLIC_URL + '/static/json/siteData.json').then((res) => res.json())\r\n                    .then((siteData) => {\r\n                        this.context.setProduction(() => {\r\n                            this.onSiteDataUpdated(siteData);\r\n                        });\r\n                    }).catch(err => {\r\n                    console.log(\"loadSiteData error\", err);\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"loadSiteData error\", err);\r\n        })\r\n    };\r\n\r\n    initFromHolder = (data) => {\r\n        this.onSetZoomScale(data.zoomScale);\r\n    };\r\n\r\n    onMessage = (data, res) => {\r\n        EditorController.onMessage(data, res, this);\r\n    };\r\n\r\n    postMessage = (data, callback) => {\r\n        this.iFrameCommunicator.post(data, callback);\r\n    };\r\n\r\n    setPreview = (preview, callback) => {\r\n        callback && callback();\r\n        this.context.setPreview(preview);\r\n    }\r\n\r\n    testWebsite = () => {\r\n        let siteData = cloneObject(defaultSiteData);\r\n        let allComponentData = cloneObject(defaultAllComponentData);\r\n\r\n        this.onComponentDataUpdated(allComponentData);\r\n        this.onSiteDataUpdated(siteData);\r\n    };\r\n\r\n    onSiteDataUpdated = (siteData) => {\r\n        if (!siteData) {\r\n            siteData = cloneObject(defaultSiteData);\r\n        }\r\n\r\n        this.context.setSiteData(siteData, () => {\r\n            let pageData = siteData.allPages[Object.keys(siteData.allPages)[0]];\r\n            this.context.setPageData(pageData.props.pageId, false, this.onHeightChange);\r\n        });\r\n\r\n        // TODO Test\r\n        let allComponentData = cloneObject(defaultAllComponentData);\r\n        this.onComponentDataUpdated(allComponentData);\r\n    };\r\n\r\n    setBreakpoints = (breakpoints) => {\r\n        this.breakpointmanager = new BreakPointManager(breakpoints, this,\r\n            undefined, this.onZoomLevelChange,\r\n            this.onHeightChange, this.onResize);\r\n    }\r\n\r\n    onComponentDataUpdated = (allComponentData) => {\r\n        this.setState({allComponentData});\r\n    };\r\n\r\n    onPageChange = (pageId, force) => {\r\n        if (!force && this.context.pageData.props.pageId === pageId) {\r\n            return;\r\n        }\r\n\r\n        console.log(\"onPageChange\");\r\n        this.rootLayoutRef.current.onSelect(true, () => {\r\n            this.idMan.clear();\r\n\r\n            this.context.setPageData(undefined , () => {\r\n                let pageData = this.context.siteData.allPages[pageId];\r\n                this.context.setPageData(pageData);\r\n            });\r\n        });\r\n    };\r\n\r\n    togglePreview = (preview) => {\r\n        this.setState({preview});\r\n    };\r\n\r\n    setZoomLevel = (zoomLevel) => {\r\n        this.setState({zoomLevel: zoomLevel || 100});\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.breakpointmanager.dispose();\r\n    }\r\n\r\n    onPageZoomChange = (zoomScale) => {\r\n        this.postMessage({\r\n            type: \"Holder\",\r\n            func: \"changePageZoom\",\r\n            inputs: [zoomScale]\r\n        }, (data) => {\r\n            this.onSetZoomScale(data.result)\r\n        });\r\n    };\r\n\r\n    onSetZoomScale = (zoomScale) => {\r\n        document.documentElement.style.setProperty('--zoom-scale', zoomScale);\r\n\r\n        this.context.setZoomScale(zoomScale, this.onZoomLevelChange);\r\n    };\r\n\r\n    // Just in editor\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.rootLayoutRef.current)\r\n            width = this.rootLayoutRef.current.getSize(false).width;\r\n\r\n        this.onPageResize(width, this.rootLayoutRef.current);\r\n    };\r\n\r\n    notifyBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        this.rootLayoutRef.current.props.aglComponent.updateTemplates();\r\n        this.rootLayoutRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n    };\r\n\r\n    onZoomLevelChange = (newDevicePixelRatio) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n        !this.isPreview() && this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() && this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n    };\r\n\r\n    isPreview = () => {\r\n        return this.context.preview;\r\n    }\r\n\r\n    onHeightChange = (e) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n        this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() && this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n        this.rootLayoutRef.current.updateLayout();\r\n\r\n        this.onResize(e);\r\n    };\r\n\r\n    toggleInspector = () => {\r\n        return this.inspectorRef.current.toggle();\r\n    };\r\n\r\n    pinInspector = () => {\r\n        this.context.setInspectorPinned(!this.context.inspectorPinned, () => {\r\n            this.select.onScrollItem();\r\n            this.rootLayoutRef.current.invalidateSize();\r\n        });\r\n\r\n        // this.editorData.innerWidth = window.innerWidth -\r\n        // this.context.inspectorPinned ? this.context.inspectorWidth : 0;\r\n\r\n        this.onScrollBoundary();\r\n        this.rootLayoutRef.current.updateLayout();\r\n    };\r\n\r\n    onPageResize = (width, pageAgl, force) => {\r\n        let result = this.breakpointmanager.checkBreakPointChange(width);\r\n\r\n        this.onResize(undefined, width);\r\n\r\n        console.log(\"onPageResize\", width)\r\n        this.context.setPageSizeWidth(width);\r\n\r\n        if (result.changed || force) {\r\n            this.notifyBreakpointChange(width, result.currentBreakpointName,\r\n                this.breakpointmanager.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onResize = (e, width) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        this.onResizeD(e, width);\r\n        this.onResizeT(e, width);\r\n    };\r\n\r\n    onResizeD = debounce((e, width) => {\r\n        if (!width)\r\n            width = this.rootLayoutRef.current.getSize(false, true).width;\r\n        document.documentElement.style.setProperty('--vw-ratio', width / window.innerWidth);\r\n    }, 100);\r\n\r\n    onResizeT = throttle((e, width) => {\r\n        if (!width)\r\n            width = this.rootLayoutRef.current.getSize(false, true).width;\r\n\r\n        document.documentElement.style.setProperty('--vw-ratio', width / window.innerWidth);\r\n    }, 100);\r\n\r\n    onPageResizeStart = () => {\r\n        if (this.isPreview()) return;\r\n        this.resizeRef.current.activate(false);\r\n        this.helpLinesRef.current.activate(false);\r\n        this.miniMenuHolderRef.current.activate(false);\r\n    };\r\n\r\n    onPageResizeStop = () => {\r\n        if (this.isPreview()) return;\r\n        this.resizeRef.current.activate(true);\r\n        this.helpLinesRef.current.activate(true);\r\n        this.miniMenuHolderRef.current.activate(true);\r\n    };\r\n\r\n    onScrollBoundary = (e) => {\r\n        !this.isPreview() && this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() &&this.select.onScrollItem();\r\n\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n    };\r\n\r\n    updateLayout = () => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        let layout = [];\r\n\r\n        let getLayoutItem = (item, childData) => {\r\n            if (!item || !item.mounted)\r\n                return;\r\n\r\n            return {\r\n                id: childData.props.id,\r\n                childData: childData,\r\n                childrenData: Object.keys(item.getFromTempData(\"savedChildren\")).map(childId => {\r\n                    let childData = item.getFromTempData(\"savedChildren\")[childId];\r\n                    return getLayoutItem(\r\n                        item.allChildRefs[childId].current,\r\n                        childData\r\n                    );\r\n                }).filter(il => {\r\n                    return il;\r\n                })\r\n            };\r\n        };\r\n\r\n        let pageChildData = {\r\n            tagName: this.rootLayoutRef.current.props.tagName,\r\n            props: this.rootLayoutRef.current.getClearProps({...this.rootLayoutRef.current.props}),\r\n            zIndex: 0\r\n        };\r\n\r\n        layout.push(getLayoutItem(this.rootLayoutRef.current, pageChildData));\r\n\r\n        this.layoutRef.current.setLayout(layout);\r\n    };\r\n\r\n    openLayout = () => {\r\n        this.layoutRef.current.open();\r\n    };\r\n\r\n    closeLayout = () => {\r\n        this.layoutRef.current.close();\r\n    };\r\n\r\n    toggleAddComponent = (force, state) => {\r\n        if (state === true) {\r\n            this.addComponentRef.current.open();\r\n            return true;\r\n        }\r\n        return this.addComponentRef.current.toggle(force);\r\n    };\r\n\r\n    togglePageManager = (force, state) => {\r\n        if (state === true) {\r\n            this.pageManagerRef.current.open();\r\n            return true;\r\n        }\r\n        return this.pageManagerRef.current.toggle(force);\r\n    };\r\n\r\n    toggleThemeManager = (force, state) => {\r\n        if (state === true) {\r\n            this.themeManagerRef.current.open();\r\n            return true;\r\n        }\r\n        return this.themeManagerRef.current.toggle(force);\r\n    };\r\n\r\n    // pageData is a childData that is for PageBase component\r\n    getLivePageData = () => {\r\n        return {\r\n            tagName: \"PageBase\",\r\n            props: this.rootLayoutRef.current.getClearProps({...this.rootLayoutRef.current.props})\r\n        };\r\n    };\r\n\r\n    getLiveSiteData = () => {\r\n        let siteData = this.context.siteData || {allPages: {}};\r\n\r\n        siteData.allPages[uuidv4()] = this.getLivePageData();\r\n\r\n        return siteData;\r\n    };\r\n\r\n    exportSiteData = () => {\r\n        let siteData = this.getLiveSiteData();\r\n\r\n        const fileName = \"siteData\";\r\n        const json = JSON.stringify(siteData);\r\n        const blob = new Blob([json],{type:'application/json'});\r\n        const href = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = href;\r\n        link.download = fileName + \".json\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    getSiteData = (callback) => {\r\n        callback && callback(this.context.siteData);\r\n        return this.context.siteData;\r\n    }\r\n\r\n    isProduction = () => {\r\n        return this.context.production;\r\n    }\r\n\r\n    render() {\r\n        // TODO if this.context.siteData not loaded, show loading component\r\n        let borderClassess = classNames(\r\n            \"PageBaseWhiteBackground\",\r\n            this.context.production ? \"PageBaseWhiteBackgroundHeightProduction\" : \"PageBaseWhiteBackgroundHeightEditor\",\r\n        );\r\n        if (this.context.pageData) {\r\n            return (\r\n                <div className=\"EditorBoundaryRoot\" onContextMenu={(e) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }}>\r\n                    {\r\n                        !this.isPreview() && !this.isProduction() &&\r\n                        <div className=\"EditorBoundaryHeader\">\r\n                            <EditorHeader\r\n                                onAddComponentClick={this.toggleAddComponent}\r\n                                onInspectorClick={this.toggleInspector}\r\n                                onThemeManagerClick={this.toggleThemeManager}\r\n                                onPageManagerClick={this.togglePageManager}\r\n                                onPageZoomChange={this.onPageZoomChange}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        this.isPreview() && !this.isProduction() &&\r\n                        <div className=\"EditorBoundaryHeader\">\r\n                            <PreviewHeader\r\n                                onAddComponentClick={this.toggleAddComponent}\r\n                                onInspectorClick={this.toggleInspector}\r\n                                onThemeManagerClick={this.toggleThemeManager}\r\n                                onPageManagerClick={this.togglePageManager}\r\n                                onPageZoomChange={this.onPageZoomChange}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    <div className=\"EditorBoundaryContent\">\r\n                        {\r\n                            !this.isPreview() && !this.isProduction() &&\r\n                            <>\r\n                                <AdjustmentGrid\r\n                                    ref={this.gridEditorRef}\r\n                                />\r\n                                <AdjustmentSnap\r\n                                    ref={this.snapSvgRef}\r\n                                />\r\n                                <AdjustmentGridLines\r\n                                    ref={this.gridContainerRef}\r\n                                />\r\n                                <AdjustmentGroupRect\r\n                                    ref={this.groupSelectRef}\r\n                                />\r\n\r\n                                <PageManager\r\n                                    ref={this.pageManagerRef}\r\n                                    editor={this}\r\n                                    onPageChange={this.onPageChange}\r\n                                />\r\n                            </>\r\n                        }\r\n\r\n                        {\r\n                            this.context.pageData &&\r\n                            <PageView\r\n                                onScrollBoundary={this.onScrollBoundary}\r\n                                rootLayoutRef={this.rootLayoutRef}\r\n                            >\r\n                                <div className={borderClassess} style={{\r\n                                    marginTop: this.context.production? 0 : `${8*this.context.zoomScale}vh`\r\n                                }}>\r\n                                    <PageBase\r\n                                        key={this.context.pageData.props.pageId}\r\n                                        id=\"page\"\r\n                                        aglRef={this.rootLayoutRef}\r\n                                        viewRef={this.rootLayoutRef}\r\n                                        breakpointmanager={this.breakpointmanager}\r\n                                        undoredo={this.undoredo}\r\n                                        dragdrop={this.dragdrop}\r\n                                        select={this.select}\r\n                                        snap={this.snap}\r\n                                        input={this.inputManager}\r\n                                        idMan={this.idMan}\r\n                                        gridLine={this.gridLine}\r\n                                        gridEditorRef={this.gridEditorRef}\r\n                                        anchorMan={this.anchorMan}\r\n                                        copyMan={this.copyMan}\r\n                                        editorData={this.editorData}\r\n                                        onPageResize={this.onPageResize}\r\n                                        onPageResizeStart={this.onPageResizeStart}\r\n                                        onPageResizeStop={this.onPageResizeStop}\r\n                                        editor={!this.isPreview() && this}\r\n                                        devicePixelRatio={this.state.devicePixelRatio}\r\n                                        {...this.context.pageData.props}\r\n                                        pageSize={this.context.pageSize}\r\n                                    />\r\n                                </div>\r\n                            </PageView>\r\n                            /*<div\r\n                                className=\"EditorBoundaryPageHolder\"\r\n                                style={{\r\n                                    // TODO add scale support\r\n                                    padding: \"0 50px\"\r\n                                }}\r\n                                onScroll={this.onScrollBoundary}\r\n                                onContextMenu={(e) => {\r\n                                    e.stopPropagation();\r\n                                    e.preventDefault();\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    className=\"EditorBoundaryPageHolderHover\"\r\n                                    style={{\r\n                                        bottom: getScrollbarWidth()\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        this.rootLayoutRef.current.onSelect(true);\r\n                                    }}\r\n                                />\r\n                                <div className=\"PageBaseWhiteBackground\" style={{\r\n                                    marginTop: `${8*this.context.zoomScale}vh`\r\n                                }}>\r\n                                    <PageBase\r\n                                        key={this.context.pageData.props.pageId}\r\n                                        id=\"page\"\r\n                                        aglRef={this.rootLayoutRef}\r\n                                        viewRef={this.rootLayoutRef}\r\n                                        breakpointmanager={this.breakpointmanager}\r\n                                        undoredo={this.undoredo}\r\n                                        dragdrop={this.dragdrop}\r\n                                        select={this.select}\r\n                                        snap={this.snap}\r\n                                        input={this.inputManager}\r\n                                        idMan={this.idMan}\r\n                                        gridLine={this.gridLine}\r\n                                        gridEditorRef={this.gridEditorRef}\r\n                                        anchorMan={this.anchorMan}\r\n                                        copyMan={this.copyMan}\r\n                                        editorData={this.editorData}\r\n                                        onPageResize={this.onPageResize}\r\n                                        onPageResizeStart={this.onPageResizeStart}\r\n                                        onPageResizeStop={this.onPageResizeStop}\r\n                                        editor={!this.isPreview() && this}\r\n                                        devicePixelRatio={this.state.devicePixelRatio}\r\n                                        {...this.context.pageData.props}\r\n                                        pageSize={this.context.pageSize}\r\n                                    />\r\n                                </div>\r\n                            </div>*/\r\n                        }\r\n\r\n                        {\r\n                            !this.isPreview() && !this.isProduction() &&\r\n                            <>\r\n                                {\r\n                                    !this.context.pageData &&\r\n                                    <div>\r\n                                        {/*Loading...*/}\r\n                                    </div>\r\n                                }\r\n\r\n                                <AdjustmentHover\r\n                                    ref={this.hoverRef}\r\n                                />\r\n\r\n                                <AdjustmentHelpLinesWrapper\r\n                                    ref={this.helpLinesRef}\r\n                                />\r\n\r\n                                <AdjustmentResizeWrapper\r\n                                    ref={this.resizeRef}\r\n                                />\r\n\r\n                                {\r\n                                    this.context.pageData &&\r\n                                    <Layout\r\n                                        ref={this.layoutRef}\r\n                                        idMan={this.idMan}\r\n                                    />\r\n                                }\r\n\r\n                                {\r\n                                    this.context.siteData &&\r\n                                    this.context.pageData &&\r\n                                    <ThemeManager\r\n                                        ref={this.themeManagerRef}\r\n                                        editor={this}\r\n                                    />\r\n                                }\r\n\r\n                                <AddComponent\r\n                                    ref={this.addComponentRef}\r\n                                    allComponentData={this.state.allComponentData}\r\n                                    pageRef={this.rootLayoutRef}\r\n                                    editor={this}\r\n                                />\r\n\r\n                                <Inspector\r\n                                    ref={this.inspectorRef}\r\n                                    pinInspector={this.pinInspector}\r\n                                />\r\n                                <MenuHolder\r\n                                    ref={this.miniMenuHolderRef}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport EditorBoundary from \"./AwesomeGridLayout/Editor/EditorBoundary\";\r\nimport EditorContextProvider from \"./AwesomeGridLayout/Editor/EditorContext\";\r\n\r\nReactDOM.render(\r\n    <EditorContextProvider>\r\n        <EditorBoundary />\r\n    </EditorContextProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/close.ebf2f3f4.svg\";"],"sourceRoot":""}