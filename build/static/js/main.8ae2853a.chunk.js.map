{"version":3,"sources":["AwesomeGridLayout/icons/paint.svg","AwesomeGridLayout/Adjustment/icons/plus.svg","AwesomeGridLayout/icons/align-left.svg","AwesomeGridLayout/icons/align-center.svg","AwesomeGridLayout/icons/align-right.svg","AwesomeGridLayout/icons/align-top.svg","AwesomeGridLayout/icons/align-middle.svg","AwesomeGridLayout/icons/align-bottom.svg","AwesomeGridLayout/icons/chain.svg","AwesomeGridLayout/icons/unlink.svg","AwesomeGridLayout/icons/more.svg","AwesomeGridLayout/icons/question.svg","AwesomeGridLayout/Adjustment/icons/minimize.svg","AwesomeGridLayout/Adjustment/icons/maximize.svg","serviceWorker.js","AwesomeGridLayout/AwesomeGridLayoutUtils.js","AwesomeGridLayout/BreakPointManager.js","AwesomeGridLayout/Editor/EditorContext.js","AwesomeGridLayout/DragDropManager.js","AwesomeGridLayout/GridChildContainerChildren.js","AwesomeGridLayout/Test/Inspector/InspectorBreadcrumbs.js","AwesomeGridLayout/HelperComponents/IconButton.js","AwesomeGridLayout/Test/Inspector/InspectorAligns.js","AwesomeGridLayout/AwesomwGridLayoutHelper.js","AwesomeGridLayout/Menus/CommonComponents/NumberInputWithUnit.js","AwesomeGridLayout/Test/Inspector/InspectorTitle.js","AwesomeGridLayout/Test/Inspector/InspectorSize.js","AwesomeGridLayout/Test/Inspector/DockSwitch.js","AwesomeGridLayout/Test/Inspector/InspectorPosition.js","AwesomeGridLayout/Menus/CommonComponents/DropDown.js","AwesomeGridLayout/Menus/CommonComponents/NumberInput.js","AwesomeGridLayout/Test/Inspector/InspectorScroll.js","AwesomeGridLayout/Test/Inspector/InspectorPadding.js","AwesomeGridLayout/Test/Inspector/InspectorOverflow.js","AwesomeGridLayout/Menus/CommonComponents/TextInput.js","AwesomeGridLayout/Test/Inspector/InspectorAnchor.js","AwesomeGridLayout/Test/Inspector/InspectorAdjustment.js","AwesomeGridLayout/Components/Helpers/AGLComponent.js","AwesomeGridLayout/Menus/MenuBase/MenuButton.js","AwesomeGridLayout/Menus/MenuBase/MenuBaseIndexTitle.js","AwesomeGridLayout/Components/Containers/Menus/Components/LightTooltip.js","AwesomeGridLayout/Menus/MenuBase/MenuBase.js","AwesomeGridLayout/Menus/CommonComponents/Slider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInputControlled.js","AwesomeGridLayout/Menus/CommonComponents/Image.js","AwesomeGridLayout/Portal.js","AwesomeGridLayout/Test/Theme/HexColorPicker.js","AwesomeGridLayout/Test/Theme/ThemeColorPicker.js","AwesomeGridLayout/Menus/CommonComponents/ColorPicker.js","AwesomeGridLayout/Components/Containers/Menus/Components/Background.js","AwesomeGridLayout/Menus/CommonComponents/Divider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInput.js","AwesomeGridLayout/Components/Containers/Menus/Components/Border.js","AwesomeGridLayout/Components/Containers/Menus/Components/Corners.js","AwesomeGridLayout/Menus/CommonComponents/CircularSlider.js","AwesomeGridLayout/Menus/CommonComponents/Angle.js","AwesomeGridLayout/Components/Containers/Menus/Components/Shadow.js","AwesomeGridLayout/Components/Containers/Menus/BorderDesign.js","AwesomeGridLayout/Menus/CommonComponents/GridViewer.js","AwesomeGridLayout/Components/Containers/Menus/Components/AnimationSelector.js","AwesomeGridLayout/Components/Containers/Menus/Components/AnimationOptions.js","AwesomeGridLayout/Components/Containers/Menus/AnimationDesign.js","AwesomeGridLayout/Components/Containers/ContainerBase.js","AwesomeGridLayout/Components/Containers/Menus/SectionDesign.js","AwesomeGridLayout/Components/Containers/Header.js","AwesomeGridLayout/Components/Containers/Footer.js","AwesomeGridLayout/Components/Containers/Section.js","AwesomeGridLayout/Test/Inspector/InspectorBackground.js","AwesomeGridLayout/Components/Pages/PageBase.js","AwesomeGridLayout/Components/Stack/VerticalSpacer.js","AwesomeGridLayout/Test/Animations/FadeInAnimation.js","AwesomeGridLayout/Test/Animations/BounceInAnimation.js","AwesomeGridLayout/Test/Animations/GlideInAnimation.js","AwesomeGridLayout/Test/Animations/FloatInAnimation.js","AwesomeGridLayout/Test/Animations/ExpandInAnimation.js","AwesomeGridLayout/Test/Animations/SpinInAnimation.js","AwesomeGridLayout/Test/Animations/FlyInAnimation.js","AwesomeGridLayout/Test/Animations/TurnInAnimation.js","AwesomeGridLayout/Test/Animations/ArcInAnimation.js","AwesomeGridLayout/Test/Animations/PuffInAnimation.js","AwesomeGridLayout/Test/Animations/FoldInAnimation.js","AwesomeGridLayout/Test/Animations/FlipInAnimation.js","AwesomeGridLayout/Test/Animations/RevealAnimation.js","AwesomeGridLayout/Components/Text/TextHelper.js","AwesomeGridLayout/Components/Text/Menus/InputDiv.js","AwesomeGridLayout/Components/Text/Menus/InputWrapper.js","AwesomeGridLayout/Components/Text/Menus/TextEditorButton.js","AwesomeGridLayout/Components/Text/Menus/components/FontSizeAutoComplete.js","AwesomeGridLayout/Components/Text/Menus/components/FontSizeSelector.js","AwesomeGridLayout/Components/Text/Menus/components/TextColorSelector.js","AwesomeGridLayout/Components/Text/Menus/TextEditor.js","AwesomeGridLayout/Components/Text/TextWrapper.js","AwesomeGridLayout/Components/Text/Text.js","AwesomeGridLayout/Dynamic/DynamicComponents.js","AwesomeGridLayout/Adjustment/AdjustmentPageControllers.js","AwesomeGridLayout/GridChildContainerFixedHolder.js","AwesomeGridLayout/Test/PaddingInterface.js","AwesomeGridLayout/Test/ParentSelectInterface.js","AwesomeGridLayout/GridChildContainer.js","AwesomeGridLayout/AGLAnchor.js","AwesomeGridLayout/Adjustment/ResizePanePage.js","AwesomeGridLayout/Adjustment/AdjustmentResizePage.js","AwesomeGridLayout/Test/EventTrigger.js","AwesomeGridLayout/Test/WindowCache.js","AwesomeGridLayout/AnimationHolder.js","AwesomeGridLayout/Test/VisibilitySensorWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpSize.js","AwesomeGridLayout/AwesomeGridLayout2.js","AwesomeGridLayout/Components/Helpers/AGLWrapper.js","AwesomeGridLayout/Components/Stack/StackSpacerContainer.js","AwesomeGridLayout/Adjustment/AdjustmentMove.js","AwesomeGridLayout/Components/Stack/StackSpacerResizer.js","AwesomeGridLayout/Components/Stack/StackSpacer.js","AwesomeGridLayout/Components/Stack/Stack.js","AwesomeGridLayout/Test/ContextMenu.js","AwesomeGridLayout/InputManager.js","AwesomeGridLayout/SelectManager.js","AwesomeGridLayout/SnapManager.js","AwesomeGridLayout/CopyManager.js","AwesomeGridLayout/IdManager.js","AwesomeGridLayout/UndoRedo.js","AwesomeGridLayout/GridLineManager.js","AwesomeGridLayout/AnchorManager.js","AwesomeGridLayout/Adjustment/AdjustmentGridRoot.js","AwesomeGridLayout/Adjustment/AdjustmentGridRow.js","AwesomeGridLayout/Adjustment/AdjustmentGrid.js","AwesomeGridLayout/Adjustment/AdjustmentSnapLines.js","AwesomeGridLayout/Adjustment/AdjustmentSnap.js","AwesomeGridLayout/Adjustment/GridLine.js","AwesomeGridLayout/Adjustment/AdjustmentGridLinesWrapper2.js","AwesomeGridLayout/Adjustment/AdjustmentGridLines.js","AwesomeGridLayout/Adjustment/ResizePane.js","AwesomeGridLayout/Adjustment/AdjustmentGroupRect.js","AwesomeGridLayout/Menus/MiniMenu/Components/RightClick.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenuVerticalDivider.js","AwesomeGridLayout/Menus/MiniMenu/Components/Help.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenu.js","AwesomeGridLayout/Menus/MenuHolder.js","AwesomeGridLayout/Test/IFrameCommunicator.js","AwesomeGridLayout/Test/EditorController.js","AwesomeGridLayout/Test/Inspector/Inspector.js","AwesomeGridLayout/Adjustment/AdjustmentStretch.js","AwesomeGridLayout/Adjustment/AdjustmentResize.js","AwesomeGridLayout/Adjustment/AdjustmentResizeWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLines.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLinesWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHover.js","AwesomeGridLayout/Test/Layout/Layout.js","AwesomeGridLayout/Test/AddComponent/ComponentGrid.js","AwesomeGridLayout/Test/AddComponent/AddComponent.js","AwesomeGridLayout/Test/PageManager/PageTypeTitle.js","AwesomeGridLayout/Test/PageManager/PageSetting/PageInfo.js","AwesomeGridLayout/Menus/CommonComponents/AglRadio.js","AwesomeGridLayout/Test/PageManager/PageSetting/Permissions.js","AwesomeGridLayout/Test/PageManager/PageSetting/SeoGoogle.js","AwesomeGridLayout/Test/PageManager/PageSetting/SocialShare.js","AwesomeGridLayout/Test/PageManager/PageSetting/PageSetting.js","AwesomeGridLayout/Test/PageManager/PageItem.js","AwesomeGridLayout/Test/PageManager/AddNewPageDialogItem.js","AwesomeGridLayout/Test/PageManager/AddNewPageDialog.js","AwesomeGridLayout/Test/PageManager/PageManager.js","AwesomeGridLayout/Test/Theme/ThemeTextItem.js","AwesomeGridLayout/Test/Theme/ThemeColorsItem.js","AwesomeGridLayout/Test/Theme/ThemeManager.js","AwesomeGridLayout/Editor/Zoom/EditorHeaderZoom.js","AwesomeGridLayout/Editor/PageSelect/EditorHeaderPageSelect.js","AwesomeGridLayout/Menus/CommonComponents/NumberInputEnterToChange.js","AwesomeGridLayout/Editor/Breakpoints/BreakpointHelper.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpointsSettingItem.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpointsSetting.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpoints.js","AwesomeGridLayout/Editor/EditorHeader.js","AwesomeGridLayout/Editor/Breakpoints/PreviewHeaderBreakpoints.js","AwesomeGridLayout/Editor/PreviewHeader.js","AwesomeGridLayout/Editor/PageView.js","AwesomeGridLayout/Editor/EditorBoundary.js","index.js","AwesomeGridLayout/icons/close.svg"],"names":["module","exports","Boolean","window","location","hostname","match","initGriddata","griddataProp","breakpointdata","initialized","clone","cloneObject","props","griddata","getDefaultChildgriddata","bpData","exist","props2","prop","hasOwnProperty","k","sample","x","y","w","h","minW","undefined","maxW","minH","maxH","constraints","left","top","right","bottom","margin","all","units","scrollType","absolute","fix","autoHeight","autoWidth","overflowData","state","overflowY","resizable","draggable","hasOwnBreakPoints","isContainer","autoDock","sortedBreakPoints","getSortedBreakPoints","name","obj","Array","copy","i","len","length","Object","attr","shallowEqual","objA","objB","keysA","keys","keysB","throttleDebounce","fn","ms","deTimer","dontCall","_","args","arguments","apply","setTimeout","clearTimeout","scrollbarWidth","getScrollbarWidth","document","div","createElement","css","width","height","position","overflow","MsOverflowStyle","body","appendChild","offsetWidth","clientWidth","removeChild","assignData","newData","assign","JSToCSS","JS","cssString","objectKey","replace","g","toLowerCase","updateStyle","styleNode","style","styleName","innerHTML","styleSheet","cssText","createTextNode","appendStyle","styleId","setAttribute","type","getElementsByTagName","swapArrayElements","arr","indexA","indexB","temp","BreakPointManager","breakpoints","editor","onBreakpointChange","onZoomLevelChange","onHeightChange","onResize","fixBreakpointRules","forEach","end","updateBreakpoint","start","prevBp","bp","find","b","getUpperBreakPoint","push","newBpData","prevBpData","deleteBreakpoint","index","findIndex","splice","fromClone","windowInnerWidth","lastWidth","editorData","copyDesign","designDatas","sourceItem","cloneDesignDatas","getCopyDesign","pasteDesign","item","designData","design","justOneBp","currentBpName","breakpointmanager","current","bpName","getWindowWidth","getWindowHeight","rootLayoutRef","getSize","setWindowWidth","getBpData","getDevicePixelRatio","devicePixelRatio","onDevicePixelRatioChange","changed","onHeightResize","e","lastHeight","innerHeight","onWindowResize","newWidth","innerWidth","context","inspectorPinned","inspectorWidth","result","checkBreakPointChange","currentBreakpointName","lastBreakpointName","size","currentBpData","setData","dataSet","param","value","breakpointName","params","split","override","getFromData","firstParamResult","findFirstUpperBreakPointParam","slice","p","getHighestBpName","getCompositeFromData","results","checkBreakpointName","composite","merge","hasDataInBreakPoint","findFirstUpperBreakPointName","getMinWidth","minSize","filter","sort","a","getDefault","this","addEventListener","removeEventListener","prefer","breakPointData","getColorScheme","baseColor","chroma","luminance","EditorContext","React","createContext","colorKeys","EditorContextProvider","getThemeColorClass","color","paletteName","key","replaceAll","getThemeBackColorClass","getTheme","category","values","siteData","theme","items","t","getColor","calculateTheme","Colors","force","calculated","scheme","main","calculateColorCSS","doc","colorsCSS","console","log","id","backColor","cssId","getElementById","addCSS","setProduction","callback","setState","production","preview","sendEditCommand","postMessage","func","inputs","setPreview","sendPublishCommand","pageData","setPageData","idMan","clear","pageId","update","reload","initContext","getInnerWidth","setZoomScale","zoomScale","setSiteData","postSiteData","allPages","setBreakpoints","onSelect","onNewBpAdded","pageChildData","tagName","getClearProps","zIndex","changeGriddata","childData","mounted","getFromTempData","map","childId","allChildRefs","setInspectorPinned","setInspectorWidth","setDevicePixelRatio","setAllComponentData","allComponentData","toggleRightMenu","menuName","rightMenus","toggle","setPageSizeWidth","pageSize","setPageSize","setRightMenus","getInnerWith","addComponent","pageManager","themeManager","Provider","children","Component","DragDropManager","setDragging","draggingItem","getDragging","isDraggingItemFixed","portalNodeId","setDraggingStop","mouseOver","parent","getParentsId","includes","prepareRects","dropItem","newParent","fromUndoRedo","undoPower","toggleHelpLines","onChildLeave","drop","onChildDrop","newItem","itemId","firstRelativeX","dragData","firstPos","firstRelativeY","parentRect","lastRelativeX","lastRelativeY","newParentRect","parentId","newParentId","undoredo","add","getItem","setMouseOver","setPosition","dragdrop","gridLine","hasGridLine","removeMouseOver","positionData","toggleGridLines","setMouseOverForNonDragging","mouseOverNonDragging","getMouseOverForNonDragging","GridChildContainerChildren","saveState","allChildren","allChildId","allChildIndex","c","z","child","getSorted","getChildren","agl","getChildrenOverride","nextProps","nextState","nextContext","JSON","stringify","InspectorBreadcrumbs","className","reverse","onClick","IconButton","aria-label","marginLeft","borderRadius","boxSizing","buttonBaseStyle","disabled","ref","rootRef","display","justifyContent","alignItems","padding","imageContainerStyle","icon","InspectorAligns","getButtonsData","horizontal","img","src","require","vertical","data","alignItem","saveGridItemStyle","setGridItemStyle","select","onScrollItem","gridItemStyle","alignSelf","marginTop","marginBottom","justifySelf","marginRight","baseDocks","getBaseDocks","setDocks","NumberInputWithUnit","inputFilter","oldValue","okay","parseFloat","isNaN","Math","min","max","onChange","target","endsWith","getValue","onShowUnits","anchorEl","currentTarget","round","showUnits","unitIconButton","createRef","classes","classNames","textAlign","inputStyle","unit","unitButtonStyle","disableUnit","unitMenuStyle","open","onClose","MenuListProps","dense","onUnitChange","InspectorTitle","defaultOpen","title","process","InspectorSize","onItemPropsChange","owner","getUnit","getViewRatioStyle","setNewSize","parentValue","defaultValue","getPxValueFromCSSValue","runtimeValueToStyleValue","propName","onPropsChange","addListener","removeListener","runtimeStyle","runtimeGridItemStyle","getRuntimeGridItemStyle","widthForPercent","heightForPercent","Infinity","disabledProps","scrollWidthMinusPadding","widthUnits","scrollHeightMinusPadding","heightUnits","minWidth","maxWidth","minWidthUnits","minHeight","maxHeight","minHeightUnits","maxWidthUnits","maxHeightUnits","defaultProps","DockSwitch","withStyles","root","switchBase","transform","opacity","backgroundColor","thumb","boxShadow","track","checked","Switch","InspectorPosition","onDockActiveChange","side","oldDocks","updateHelpLines","helpLinesParent","dragging","onDockAutoChange","setTempData","parentProp","compositeGridItemStyle","onValueChange","getUnitFromStyleValue","updateResizePanes","docks","auto","fontSize","DropDown","option","valueRenderer","renderer","rootStyle","spanStyle","cursor","menuStyle","options","pointerEvents","menuItemStyle","NumberInput","test","toFixed","InspectorScroll","onChangeScrollEffect","offsetTop","setScrollBehaviour","viewRef","onChangeOffsetTop","behaviour","getValueFromCSSValue","InspectorPadding","compositePadding","setDataInBreakpoint","equalPadding","pxValue","getStyleValueFromPx","invalidateSize","requestAnimationFrame","onEqualPadding","InspectorOverflow","onChangeState","thisBpOverflowData","compositOverflowData","overflowX","newOverflowData","changeScrollDirection","onChangeAuto","ToggleButtonGroup","exclusive","ToggleButton","TextInput","InspectorAnchor","onEnableAnchor","enable","anchor","anchorMan","addAnchor","removeAnchor","onChangeName","newName","modifyAnchor","v","InspectorAdjustment","onRotationChange","degree","warn","rotate","oldDegree","setTransformStyle","updateLayout","AGLComponent","resolveDesignData","getData","componentData","getDefaultData","componentBpData","tempBpData","getAgl","aglRef","onDesignChange","designKey","updateDesign","getCompositeDesignData","getInspector","getInspectorOverride","MenuButton","menu","updateMenu","MenuBaseIndexTitle","disableRipple","onIndexClick","LightTooltip","tooltip","shadows","Tooltip","LightMenuTooltip","MenuBase","close","selectedIndexNo","getDefaultPos","defaultPosition","defaultIndexNo","handle","bounds","styles","menuTitle","indexData","PopperProps","placement","render","Slider","step","SliderInputControlled","handleStyle","Image","onError","hasError","errorsrc","Portal","canUseDOM","defaultNode","node","nodeId","ReactDOM","createPortal","HexColorPicker","onChangeComplete","hex","disableAlpha","ThemeColorPicker","onSelectColor","onAddColor","myColors","unshift","onAddColorClick","addColor","themeColorCategoryItems","parseColor","contextType","ColorPicker","getRgbA","r","rgba","handleClick","displayColorPicker","handleClose","handleChangeComplete","lastValue","alpha","getColorAndAlpha","handleAlphaChange","background","getBoundingClientRect","Background","Divider","SliderInput","Border","border","Corners","radius","changeSide","link","_side","onLinkClick","direction","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","CircularSlider","onMouseDown","rect","rootDivRef","onMouseMove","onMouseUp","clientX","clientY","vx","vy","angle","atan2","PI","Angle","loop","deg2rad","rad2deg","Shadow","shadow","getDegree","xOffset","yOffset","ratio","atan","getRatio","tan","calcDegree","xO","yO","abs","distance","blur","BorderDesign","getIndex","viewBox","fillRule","d","getOptions","fillColor","GridViewer","AnimationSelector","onSelectAnimation","playAnimation","allAnimationNames","animation","noneClasses","displayName","join","charAt","toUpperCase","AnimationOptions","DynamicAnimations","duration","delay","once","AnimationDesign","ContainerBase","getPrimaryOptions","compositeDesign","getStaticChildren","shadowColor","borderColor","topLeft","topRight","bottomRight","bottomLeft","aglComponent","SectionDesign","Header","isSection","setStyleParam","defaultGridItemStyle","gridArea","as","autoConstraintsOff","helplineOff","Footer","Section","isVerticalSection","designStyle","InspectorBackground","onChangeColor","PageBase","initDataFromPageData","allSectionsH","allSectionsV","grid","gridX","gridY","gridTemplateRows","gridTemplateColumns","initKeyboard","event","which","keyCode","ctrl","ctrlKey","preventDefault","selectedItem","getSelected","getHorizontalSection","moveUp","moveDown","getVerticalSection","moveLeft","moveRight","pageResize","containerHeight","deleteHorizontalSection","currentSection","areas","getGridArea","x1","parseInt","x2","firstRow","lastRow","verticalSection","x12","y12","x22","y22","setGridArea","horizontalSection","x13","y13","x23","y23","fill","setGrid","deleteVerticalSection","y1","y2","firstCol","lastCol","mainColIndex","getMainColIndex","addSectionQueue","dynamicComponents","isVertical","addQueue","checkingAddQueue","nextOne","shift","checkAddQueue","addVerticalSection","newNextOne","addHorizontalSection","onItemPreDelete","allow","onItemPreResizeStop","dir","delta","yLineRefs","getYlineRef","firstLineTop","getGridLineRect","targetTop","selectedX1","lineTop","checkIndex","nextSectionV","targetBottom","selectedX2","lineBottom","currentSectionIndex","currentSectionGridArea","Tag","section","resizeSides","addChild","insertIndex","areas2","currentIndex","sideSection","updateTemplates","isHideInBreakpoint","hasMiniMenuOverride","invalidateSizeOverride","self","updateParent","updateChildren","sourceId","tempSize","childRef","getSectionOfPoint","isPointInclude","fullWidth","isPage","page","VerticalSpacer","FadeInAnimation","animationStyles","StyleSheet","create","fadeIn","animationName","animationDuration","animationDelay","BounceInAnimation","bounceIn","GlideInAnimation","tx","sin","ty","cos","glideIn","FloatInAnimation","floatIn","ExpandInAnimation","power","expandIn","SpinInAnimation","spinNo","firstRotate","spinIn","FlyInAnimation","windowSize","flyIn","TurnInAnimation","viewSize","turnIn","animationTimingFunction","ArcInAnimation","arcIn","PuffInAnimation","puffIn","FoldInAnimation","transformOrigin","foldIn","FlipInAnimation","flipIn","RevealAnimation","clipPath","reveal","getTextStyle","textTheme","textStaticData","textDesignData","fontFamily","fontWeight","fontStyle","fontDecoration","lineHeight","letterSpacing","getSelectionHtmlRemoveProperty","win","propertyName","selection","createRange","htmlText","getSelection","rangeCount","clonedSelection","getRangeAt","cloneContents","nodes","removeProperty","getRandomColor","floor","random","InputDiv","TextTag","tag","textareaRef","contentEditable","whiteSpace","dangerouslySetInnerHTML","__html","InputWrapper","updateHeight","scrollHeight","onInput","keydown","stopPropagation","range","line","parentLine","startContainer","found","newParantLine","parentNode","getParentLine","deleteContents","setEndAfter","text","innerText","getSelectionText","iframeNode","contentWindow","br","after","setStartBefore","html","setStartAfter","insertAdjacentHTML","trim","focus","String","fromCharCode","sel","insertNode","setStart","collapse","removeAllRanges","addRange","init","inited","textEditorRef","onLoad","prevProps","prevState","snapshot","onUpdate","resize","TextEditorButton","useStyles","makeStyles","popper","borderRight","paddingRight","FontSizeAutoComplete","Autocomplete","FontSizeSelector","filterOptions","getAllowableFontSize","onFontSizeChange","reason","tempFontSize","setFontSize","getFontSizeValue","setFontSizeUi","ignoreState","toString","getOptionLabel","popupIcon","renderInput","InputProps","disableUnderline","inputProps","TextField","blurOnSelect","onKeyDown","TextColorSelector","buttonRef","TextEditor","getTextDir","anchorEI","modifiers","flip","enabled","preventOverflow","boundariesElement","onDoubleClick","onChangeData","updateInputWrapper","inputWrapperRef","execCommand","querySelectorAll","removeAttribute","randomColor","classList","startsWith","remove","childs","childNode","TextWrapper","setEditableStyle","editableStyle","onEditorStateChange","editorState","updateStyleSheets","setEditMode","editMode","onEditModeChange","getTag","iframe","iframeWidth","iframeHeight","frame","ClickAwayListener","onClickAway","head","documentRef","resizeIFrameToFitContent","textValue","PureComponent","Text","textRef","onThemeChange","onDoubleClickOverride","onDeSelectListener","noStretch","DynamicComponents","AdjustmentPageControllers","addSection","getAnchor","needUpdate","updateTimeout","forceUpdate","containerClasses","hide","GridChildContainerFixedHolder","clientHeight","PaddingInterface","borderTop","borderLeft","borderBottom","ParentSelectInterface","GridChildContainer","aglStyle","modifyContainerStyle","modifyContainerStyleOverride","paddingTop","paddingLeft","paddingBottom","getContainerStyleId","modifyOverflowStyle","getOverflowStyleId","getOverflowStyle","webkitScrollbarStyle","webkitScrollbarStyleId","scrollStyleNode","updateAdjustments","controllerRef","fixedHolderRef","needOverflow","selectAsParent","selected","show","overflowClasses","containerRef","overflowRef","onScroll","AGLAnchor","ResizePanePage","isLeftClick","mouseDown","pointerType","button","moving","onDrag","onDragStart","onDragStop","lastMouseX","lastMouseY","onResizeStart","onResizeStop","isCorner","draggingStart","onPointerDown","AdjustmentResizePage","sides","EventTrigger","defaultListener","listener","listeners","l","trigger","windowCache","boundingRects","clientsWidth","clientsHeight","scrollsTop","scrollsLeft","scrollsWidth","scrollsHeight","clearCache","clearCacheTimeuot","getCachedBoundingRect","getCachedClientWidth","getCachedClientHeight","getCachedScrollTop","scrollTop","getCachedScrollLeft","scrollLeft","getCachedScrollWidth","scrollWidth","getCachedScrollHeight","addToCache","AnimationHolder","transformRef","VisibilitySensorWrapper","partialVisibility","containment","getPageOverflowRef","active","disableVS","AdjustmentHelpSize","getText","resizeHelpData","AwesomeGridLayout2","callOverride","funcName","getOverrideProp","hasOverride","needRender","lastZIndex","getNextIndexData","savedChildren","savedChildrenArray","oldId","createChildByData","Children","createdChild","renderChild","childrenData","initLayout","getDefaultStyle","setStyle","defaultGrid","defaultStyle","lateMounted","addToSnap","onPageResize","onChildMounted","isEditor","getShortcutOptions","hasMiniMenu","debounce","getBoundarySize","snap","addSnap","p1","p2","parentsId","getGridLineSnaps","snaps","horizontals","verticals","xLineRef","getXlineRef","yLineRef","newId","fixed","getId","AGLProps","input","copyMan","gridEditorRef","getAllChildOverrideProps","component","fullForce","widthMinusPadding","heightMinusPadding","onWindowSizeChange","getRenderChildData","arrangeIndex","nextZIndex","nextChild","prevZIndex","prevChild","firstZIndex","changeIndex","allChildData","change","startIndex","lastIndex","testChildData","setChildZIndex","childZIndex","forceCalculate","childElement","newProps","keepChildren","Error","onChildAdd","newBreakpointName","delete","getChildData","createItem","clearItem","removeChildElement","clearMiniMenu","getAllOverrideProps","removeId","removeGridLine","removeSnap","updateHelpSizeLines","setInspector","onMouseOver","fromEnter","setItemHover","onMouseOut","hover","updateHover","onMouseEnter","outAllParent","forceRect","forceGridLines","gridType","isPrepared","onNewChildMounted","calcResult","coordinates","childRect","thisRect","calculateChildGridItem","relativeY","setProps","clearFromAllBp","newChild","removeIdAndChildrenId","nonePointerEventForChildren","parentDragging","onParentDragging","setRuntimeStyle","group","callGroup","resizing","moveWithMouse","firstBoundaryPos","setDraggingState","groupDragStart","boundarySize","isFixed","checkSnapOnDrag","updateGridLines","groupDrag","addGrid","groupDragStop","drawSnap","dropped","updateMiniMenu","relativeX","redoData","undoData","calculateGridItem","fakeStyle","snapDelta1","getSnapDelta","snapDelta2","snapDelta3","snapDelta","deltaX","snapV","deltaY","snapH","pointOfSnapH","pointOfSnapV","parentGridLines","checkSnap","dontCalculate","getDocks","fromState","dontAutoDock","cy1","cy2","cx1","cx2","calculateGridArea","coordinatesAbs","coordinateToRelative","oldGridItemStyle","centerX","centerY","parentCenterMinusX","parentCenterPlusX","cy2IsLastLine","centerDiffX","centerDiffY","getPxOrPcOrValue","cx2IsLastLine","coordinateToAbsolute","getTopLeft","pageResizeStart","resizeData","firstX","firstLeft","activateHover","onPageResizeStart","pageResizeCalculate","firstY","firstTop","firstBoundaryWidth","firstBoundaryHeight","firstBoundaryTop","firstBoundaryLeft","onResizeCalculate","updatePageAdjustments","onResizeData","backContainerRef","finalDelta","rad","cx","cy","cxy","sqrt","cxp","cyp","thetaH","thetaW","Dh","Dw","dxH","dyH","dxW","dyW","getResizeDelta","rotateDegree","checkSnapOnResize","setResizeHelpData","pageResizeStop","onPageResizeStop","setSize","firstWidth","firstHeight","gridCoordinates","dontAddToSnap","oldStyle","isPercent","isViewRatio","newValue","getParentProps","postFix","newRuntimeStyle","animationCss","getGridItemStyleId","newGridItemStyle","dontOverride","getStyleId","getDesignStyleId","setDesignStyle","newDesignStyle","designStyleNode","getTransformStyleId","newTransform","transformStyleNode","getTransformStyle","compositeTransform","rules","newStyle","excludeBp","getGridLineOfPoint","gridLine1","gridLine2","mouseMoved","lastClientX","lastClientY","startMillis","Date","getTime","isRightClick","canMove","isGroupSelected","currentMillis","groupSelected","onContextMenu","deselectParent","clicked","dontUpdateAdjustment","isSelectable","selectItem","removeGridLineByType","showGridLines","updateParentsRect","onScrollEnd","onRootScroll","forceScroll","scrollReset","targetScroll","maxTop","scrollTo","behavior","editGrid","editing","updateGridEditor","setAnchor","disable","stateChange","forceKey","showAnimation","onAnimationEnd","activateResize","getCompositeAnimationCss","compositeAnimation","getAnimationCSS","getContextMenu","childContainers","windowWidth","setItem","compositeStyle","holderClasses","TagAs","onWheel","childSize","showSideResize","layoutType","compactType","AGLWrapper","fillWithData","StackSpacerContainer","updateSpacers","spacers","spacer","AdjustmentMove","StackSpacerResizer","StackSpacer","setPointerEvents","updateSpacerData","newHeight","spacerData","stack","updateSize","order","Stack","sortedChildrenArray","lateMountedOverride","lateMountedComplete","setOrder","calculateGridItemChildOverride","calculateWrapper","calculateChildGridItemOverride","child1","centerDiff","childRelativeY","childHeight","childFound","childOrderSet","sorted","relativeYA","relativeYB","relativeY2","getSpacer","getSpacerData","spacerContainerRef","allSpacerData","allSpacerRef","onStackDragStart","onStackDragStop","onMouseOverSpacer","onMouseEnterSpacer","onMouseOutSpacer","setMouseOverOverride","setPointerEventOfSpacers","setMouseOverForNonDraggingOverride","spacerRef","setGridItemStyleChildOverride","container","flexDirection","onChildLeaveOverride","removing","stretchChildOverride","stretch","isStretch","isStretchChildOverride","setStyleParamOverride","isStack","onDragStartChildOverride","onDragChildOverride","onDragStopChildOverride","ContextMenu","getFakeAnchor","popperStyle","mouseEvent","autoFocusItem","hasDivider","menuItem","j","ContextMenuItem","subMenu","interactive","leaveDelay","shortcut","deepEqual","saveStyle","beStretch","allowStretch","disableStretch","pageAgl","oldBehaviour","oldOffsetTop","oldIsFixed","lastSectionId","itemRect","sectionParent","addFixedChildToRoot","oldParentRect","pageRect","hideInBreakPoint","showInBreakPoint","fromAll","getSectionId","uuidv4","createStack","itemsParent","getSectionParent","lastBottom","rightFromLeft","topA","topB","stackNode","_stack","stackId","itemIds","newItems","removeStackFromAGL","addToStack","parentWidth","stackAgl","childIds","removeChilds","addToUndo","saveValue","oldType","oldZIndex","breakpointData","createContextMenu","copySection","paste","duplicate","copyDesignItem","item1","item2","isSameFamily","allOldDesign","sourceItemTemp","overrideBps","pasteFromBreakpointDesign","fromName","toName","fromData","currentData","oldData","deleteSection","shortcutSection","sectionSection","sortBy","array","editorContext","chromaColor","SelectManager","alt","inputManager","groupSelectRef","pageAglRef","miniMenuHolderRef","inspectorRef","resizeRef","helpLinesRef","hoverRef","setContext","dontUpdateAdjustments","createGroup","clearGroup","addMiniMenu","addMenu","inspectorMenu","setMenu","updateGroupRect","mainItem","deleteGroup","firstRect","updateRect","throttle","helpLineParent","activate","fakeItemRect","test1","test2","test3","SnapManager","snapThreshold","snapSvgRef","ignoreId","additionalSnaps","topUp","topDown","leftUp","leftDown","concat","CopyManager","selectManager","pageRef","copyItem","getCopyItem","destinationItem","copyRect","IdManager","prefix","allId","preferName","fixName","baseId","postNo","UndoRedo","getQueueObject","undo","redo","undoQueue","pop","redoQueue","undoFunc","object","hasUndo","hasRedo","GridLineManager","gridContainerRef","positions","getIdCache","AnchorManager","allAnchors","goToAnchor","saveToHistory","AdjustmentGridRoot","AdjustmentGridRow","gridLineManager","rowLines","rowLineRect","nextRowLineRect","rowHeight","AdjustmentGrid","addRow","rowsHeight","addColumn","columnsWidth","changeColumnWidth","changeRowHeight","deleteRow","deleteColumn","AdjustmentSnapLines","stroke","AdjustmentSnap","GridLine","lineRef","AdjustmentGridLinesWrapper2","yNo","xNo","refId","AdjustmentGridLines","fixLineRef","idCache","updateGridLine","prepared","xNoA","yNoA","xNoB","yNoB","xNoT","yNoT","xLineRefA","yLineRefA","xLineRefB","yLineRefB","xLineRefT","yLineRefT","ResizePane","AdjustmentGroupRect","RightClick","MiniMenuVerticalDivider","Help","MiniMenu","primary","MenuHolder","miniMenuRef","contextMenu","miniMenuItem","IFrameCommunicator","origin","authKey","otherWindow","onMessage","processIncomingMessage","callbacks","responseFunc","responses","post","counter","EditorController","AllowFunctions","res","Inspector","opening","clearInterval","closeInterval","openInterval","setInterval","percent","speed","interval","closing","pinInspector","toggleState","getDefaultMenu","AdjustmentStretch","AdjustmentResize","transformStyleId","stretchStyle","AdjustmentResizeWrapper","AdjustmentHelpLines","calculate","visibility","strokeDasharray","AdjustmentHelpLinesWrapper","helpLineRef","AdjustmentHover","disablePortal","Layout","setLayout","layout","processLayout","treeData","getTreeItem","layoutItem","childLayout","expanded","parentItemId","setTree","updateItem","treeItem","childTreeItem","ComponentGrid","getItemStyle","widthRatio","setDraggingItem","persist","closingTimeOut","closeMenu","createItemAndDrag","presetProps","changeItemParent","setDraggingEnd","allItems","Fragment","onDragEnd","imageUrl","label","AddComponent","setComponentListItemDebounce","componentListItem","setComponentListItem","setComponentListItemLeave","componentListItemHover","componentSubListItem","subList","setComponentSubListItemDebounce","setComponentSubListItem","setComponentSubListItemLeave","componentSubListItemHover","listName","builtin","apps","groupName","componentSubListItems","PageTypeTitle","PageInfo","onRename","newPageName","rename","pageName","setAsHomePage","home","isHome","onBlur","onKeyPress","variant","AglRadio","Radio","Permissions","changePermission","pageSetting","permissions","onSetPassword","password","onChangeMemberType","memberType","onRoleChange","role","memberRoles","control","roleAnchor","allApps","member","setting","roles","SeoGoogle","onChangeSeoSetting","newEndUrl","seoGoogle","endUrl","endUrlError","pageTitle","baseUrl","pageDescription","newPageTitle","newPageDescription","rows","showInSearch","SocialShare","onChangeSocialShareSetting","socialShare","substring","lastIndexOf","description","newTitle","newDescription","PageSetting","onChangeTab","tabValue","Modal","aria-labelledby","aria-describedby","disableBackdropClick","indicatorColor","textColor","PageItem","pageMenuAnchorEl","onPageChange","setAsHome","renameInput","boxClasses","isDynamic","AddNewPageDialogItem","AddNewPageDialog","addNormalPage","onAddNormalPage","addDynamicPage","onAddDynamicPage","PageManager","onChangeSearch","searchValue","getFilteredPages","siteId","onPageClick","newPageDataUrl","fetch","then","json","openNormalPage","openDynamicPage","showAddPage","ThemeTextItem","onEditClick","font","ThemeColorsItem","toChange","ThemeManager","setCategory","EditorHeaderZoom","Consumer","zoomSetting","anchorOrigin","getContentAnchorEl","anchorPosition","PaperProps","marginThreshold","transitionDuration","onZoomChange","EditorHeaderPageSelect","pd","NumberInputEnterToChange","lazy","tempValue","onTempChange","getBreakpointIcon","getBreakpointName","EditorHeaderBreakpointsSettingItem","isHighestBp","done","tempEnd","onCancel","cancelEditMode","nextBpData","onEditMode","EditorHeaderBreakpointsSetting","clearEditMode","bpItemrRefs","bpItemRef","getBpItemRef","EditorHeaderBreakpoints","getTabValue","settingAnchor","EditorHeader","setRightMenuOpen","openMenu","changedState","onInspectorClickState","onInspectorClick","onPageZoomChange","PreviewHeaderBreakpoints","getCurrentValue","lastBpData","devices","PreviewHeader","PageView","onScrollBoundary","EditorBoundary","layoutRef","addComponentRef","pageManagerRef","themeManagerRef","InputManager","iFrameCommunicator","toggleThemeManager","exportSiteData","toggleAddComponent","togglePageManager","loadSiteData","initFromHolder","onSiteDataUpdated","catch","err","onSetZoomScale","testWebsite","defaultSiteData","defaultAllComponentData","onComponentDataUpdated","togglePreview","setZoomLevel","zoomLevel","documentElement","setProperty","notifyBreakpointChange","newDevicePixelRatio","isPreview","toggleInspector","onResizeD","onResizeT","getLayoutItem","il","openLayout","closeLayout","getLivePageData","getLiveSiteData","blob","Blob","href","URL","createObjectURL","download","fileName","click","getSiteData","isProduction","dispose","borderClassess","onAddComponentClick","onThemeManagerClick","onPageManagerClick","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8ae2853a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paint.b4611be4.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.4ffb5b5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-left.0a5b083d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-center.c06baa72.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-right.47dacf61.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-top.a4e81be5.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-middle.18bded08.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-bottom.b15149df.svg\";","module.exports = __webpack_public_path__ + \"static/media/chain.91ca2215.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlink.91af3919.svg\";","module.exports = __webpack_public_path__ + \"static/media/more.7e1c1c4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.910508a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/minimize.d1b14794.svg\";","module.exports = __webpack_public_path__ + \"static/media/maximize.c16a073e.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {Resizable} from \"re-resizable\";\r\nimport css from 'dom-css';\r\nimport {exist, getFromData, getSortedBreakPoints, setData} from \"./BreakPointManager\";\r\nimport debounce from 'lodash.debounce';\r\n// import {css, StyleSheet} from 'aphrodite'\r\n\r\nlet CalculateLayout = (griddatas, layoutType, parentSize, dir, compactType, scrollType, snap\r\n                       , breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    parentGriddata = parentGriddata || getDefaultChildgriddata(breakpointdata);\r\n\r\n    let dummy;\r\n    let childContainers = griddatas.map((griddata) => {\r\n        if (griddata.id === undefined)\r\n            console.error(\"direct child must have a id props\");\r\n\r\n        let result = {\r\n            griddata: griddata,\r\n        };\r\n\r\n        result.griddata.id = griddata.id;\r\n        result.isContainer = griddata.isContainer;\r\n        result.selected = griddata.selected;\r\n        result.resizable = griddata.resizable;\r\n        result.draggable = griddata.draggable;\r\n        result.dragging = griddata.dragging;\r\n\r\n        result.w = getPxFromPercent(\r\n            getFromData(result.griddata, \"w\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.h = getPxFromPercent(\r\n            getFromData(result.griddata, \"h\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.x = getPxFromPercent(\r\n            getFromData(result.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.y = getPxFromPercent(\r\n            getFromData(result.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.rotate = getFromData(result.griddata, \"rotate\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.absolute = getFromData(result.griddata, \"absolute\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.fix = getFromData(result.griddata, \"fix\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.zIndex = getFromData(result.griddata, \"zIndex\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        if (result.griddata.dragging) {\r\n            dummy = {};\r\n            dummy.griddata = cloneObject(result.griddata);\r\n            // dummy.griddata.dragging = false;\r\n            dummy.griddata.id = \"dummy\";\r\n            dummy.x = result.x;\r\n            dummy.y = result.y;\r\n            dummy.w = result.w;\r\n            dummy.h = result.h;\r\n            dummy.griddata.draggable = false;\r\n            dummy.griddata.resizable = false;\r\n            dummy.absolute = result.absolute;\r\n            dummy.fix = result.fix;\r\n            dummy.zIndex = result.zIndex;\r\n            dummy.dragging = result.dragging;\r\n\r\n            dummy.isDummy = true;\r\n        }\r\n\r\n        return result;\r\n    });\r\n\r\n    if (!childContainers)\r\n        childContainers = [];\r\n\r\n    if (dummy)\r\n        childContainers.push(dummy);\r\n\r\n    sortChilds(childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints);\r\n\r\n    let layouts = [];\r\n    let layoutContainers = [];\r\n\r\n    let maxHeight = scatter(childContainers, layoutContainers, layouts, layoutType, parentSize\r\n        , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n    return {childContainers: childContainers, layouts: layouts, maxHeight: maxHeight};\r\n};\r\n\r\nlet getDummy = (w, h) => {\r\n    return (\r\n        <Resizable\r\n            enable={false}\r\n            size={{\r\n                width: w,\r\n                height: h,\r\n            }}\r\n        >\r\n            <div style={{\r\n                backgroundColor: \"rgba(201, 76, 76, 0.3)\",\r\n                width: \"100%\",\r\n                height: \"100%\"\r\n            }}>\r\n            </div>\r\n        </Resizable>\r\n    );\r\n};\r\n\r\nlet scatter = (childContainers, layoutContainers, layouts, layoutType, parentSize\r\n               , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let notCompareChilds = [];\r\n    let maxHeight = 0;\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        if (childContainer.griddata.dragging) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (childContainer.absolute || childContainer.fix) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (layoutType === \"free\") {\r\n            maxHeight = scatterFree(childContainer, childContainers, layoutContainers\r\n                , parentSize, compactType, scrollType, snap, maxHeight, breakpointdata\r\n                , hasOwnBreakPoints, parentGriddata);\r\n        }\r\n\r\n        layoutContainers.push(childContainer);\r\n    }\r\n\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        layouts.push(childContainer.griddata);\r\n    }\r\n\r\n    notCompareChilds.forEach(childContainer => {\r\n        if (childContainer.absolute)\r\n            fixAbsoluteChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n        if (childContainer.fix)\r\n            fixFixChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n        setChildPosition(childContainer, {x:childContainer.x, y:childContainer.y}\r\n             , parentSize, breakpointdata, hasOwnBreakPoints);\r\n\r\n        layoutContainers.push(childContainer);\r\n        layouts.push(childContainer.griddata);\r\n    });\r\n\r\n    return maxHeight;\r\n};\r\n\r\nlet fixFixChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    if (left)\r\n        left += parentSize.scrollLeft;\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    if (top)\r\n        top += parentSize.scrollTop;\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    if (right)\r\n        right += (parentSize.x - parentSize.clientWidth - parentSize.scrollLeft);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n    if (bottom)\r\n        bottom += (parentSize.y - parentSize.clientHeight - parentSize.scrollTop);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet fixAbsoluteChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet scatterFree = (childContainer, childContainers, layoutContainers, parentSize, compactType, scrollType\r\n                   , snap, maxHeight, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let autoWidth =\r\n        getFromData(parentGriddata, \"autoWidth\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    if (!autoWidth) {\r\n        if (childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n        }\r\n    }\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.x > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.x -= snap.x;\r\n        }\r\n    }\r\n    if (compactType === \"vertical\")\r\n    {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.y > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.y -= snap.y;\r\n        }\r\n    }\r\n\r\n    childContainer.x = Math.max(0, childContainer.x);\r\n    childContainer.y = Math.max(0, childContainer.y);\r\n\r\n    let collide;\r\n    while (checkCollide(childContainer, layoutContainers)) {\r\n        collide = checkCollide(childContainer, layoutContainers);\r\n        if (compactType === \"horizontal\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.x + collide.w, \"x\");\r\n        }\r\n        if (compactType === \"vertical\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.y + collide.h, \"y\");\r\n        }\r\n        // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\r\n        if ((compactType === \"horizontal\") &&\r\n            childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n            childContainer.y++;\r\n        }\r\n    }\r\n\r\n    if (childContainer.y + childContainer.h > maxHeight)\r\n        maxHeight = childContainer.y + childContainer.h;\r\n\r\n    return maxHeight;\r\n};\r\n\r\nconst heightWidth = { x: \"w\", y: \"h\" };\r\nlet resolveCompactionCollision = (layout, item, moveToCoord, axis) => {\r\n    const sizeProp = heightWidth[axis];\r\n    item[axis] += 1;\r\n    const itemIndex = layout\r\n        .map(layoutItem => {\r\n            return layoutItem.griddata.id;\r\n        })\r\n        .indexOf(item.griddata.id);\r\n\r\n    // Go through each item we collide with.\r\n    for (let i = itemIndex + 1; i < layout.length; i++) {\r\n        const otherItem = layout[i];\r\n        // Ignore static items\r\n        if (otherItem.static || otherItem.griddata.dragging) continue;\r\n\r\n        // Optimization: we can break early if we know we're past this el\r\n        // We can do this b/c it's a sorted layout\r\n        if (otherItem.y > item.y + item.h) break;\r\n\r\n        if (collide(item, otherItem)) {\r\n            resolveCompactionCollision(\r\n                layout,\r\n                otherItem,\r\n                moveToCoord + item[sizeProp],\r\n                axis\r\n            );\r\n        }\r\n    }\r\n\r\n    item[axis] = moveToCoord;\r\n};\r\n\r\nlet bottom = (layoutContainers) => {\r\n    let max = 0,\r\n        bottomY;\r\n    for (let i = 0, len = layoutContainers.length; i < len; i++) {\r\n        bottomY = layoutContainers[i].y + layoutContainers[i].h;\r\n        if (bottomY > max) max = bottomY;\r\n    }\r\n    return max;\r\n};\r\n\r\nlet checkCollide = (childContainer, layoutContainers) => {\r\n    for (let i = 0; i < layoutContainers.length; i++) {\r\n        if (collide(childContainer, layoutContainers[i]))\r\n            return layoutContainers[i];\r\n    }\r\n    return false;\r\n};\r\n\r\nlet collide = (child1, child2) => {\r\n    if (child1.griddata.id === child2.griddata.id) return false; // same element\r\n    if (child1.x + child1.w <= child2.x) return false; // l1 is left of l2\r\n    if (child1.x >= child2.x + child2.w) return false; // l1 is right of l2\r\n    if (child1.y + child1.h <= child2.y) return false; // l1 is above l2\r\n    if (child1.y >= child2.y + child2.h) return false; // l1 is below l2\r\n    return true; // boxes overlap\r\n};\r\n\r\nlet sortChilds = (childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints) => {\r\n    childContainers.forEach(childContainer => {\r\n            childContainer.x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.x);\r\n            childContainer.y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.y);\r\n    });\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainers.sort((a, b) => {\r\n            if (a.x > b.x || (a.x === b.x && a.y > b.y)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    } else {\r\n        childContainers.sort((a, b) => {\r\n            if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    }\r\n};\r\n\r\nlet getPxFromPercent = (val, parentVal) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (getUnit(val) === \"%\") {\r\n            let percent = parseFloat(val.replace(\"%\", \"\")) / 100;\r\n            return parentVal * percent;\r\n        }\r\n        return val;\r\n    } else {\r\n        return val;\r\n    }\r\n};\r\n\r\nlet getUnit = (val) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (val.includes(\"%\"))\r\n            return \"%\";\r\n    }\r\n    return \"\";\r\n};\r\n\r\nlet hasDir = (dir, target) => {\r\n    return dir.toLowerCase().includes(target);\r\n};\r\n\r\nlet setChildSize = (childContainer, newSize, parentSize, breakpointdata, hasOwnBreakPoints\r\n                    , dir, delta) => {\r\n    setData(childContainer.griddata, \"w\", newSize.w, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.w\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"w\",\r\n            (getFromData(childContainer.griddata, \"w\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.w\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"h\", newSize.h, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.h\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"h\",\r\n            (getFromData(childContainer.griddata, \"h\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.h\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    if (delta) {\r\n        if (hasDir(dir, \"right\") || hasDir(dir, \"left\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            if (hasDir(dir, \"right\"))\r\n                x = x + delta.width / 2;\r\n            else\r\n                x = x - delta.width / 2;\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n        if (hasDir(dir, \"top\") || hasDir(dir, \"bottom\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n            if (hasDir(dir, \"bottom\"))\r\n                y = y + delta.height / 2;\r\n            else\r\n                y = y - delta.height / 2;\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n    }\r\n};\r\n\r\nlet setChildPosition = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints) => {\r\n    setData(childContainer.griddata, \"x\", newPosition.x, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.x\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"x\",\r\n            (getFromData(childContainer.griddata, \"x\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.x\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"y\", newPosition.y, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.y\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"y\",\r\n            (getFromData(childContainer.griddata, \"y\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.y\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n};\r\n\r\n/*let updateConstraints = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints\r\n                        , parentGridSystem) =>\r\n{\r\n    if (!parentGridSystem)\r\n        parentGridSystem = getDefaultGridSystem();\r\n};*/\r\n\r\n/*let getDefaultGridSystem = () => {\r\n    return {\r\n        xNumber: 1,\r\n        yNumber: 1,\r\n        widths: [100],\r\n        widthUnits: [\"%\"],\r\n        heights: [100],\r\n        heightUnits: [\"%\"]\r\n    }\r\n};*/\r\n\r\nlet fixGriddata = (griddata, breakpointdata) => {\r\n    if (!griddata)\r\n        return;\r\n\r\n    if (griddata.initialized) {\r\n        let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            let name = sortedBreakPoints[i].name;\r\n\r\n            if (!griddata[name])\r\n                continue;\r\n\r\n            if (!griddata[name].units)\r\n                griddata[name].units = {};\r\n\r\n            griddata[name].units.x = getUnit(griddata[name].x);\r\n            griddata[name].units.y = getUnit(griddata[name].y);\r\n            griddata[name].units.w = getUnit(griddata[name].w);\r\n            griddata[name].units.h = getUnit(griddata[name].h);\r\n        }\r\n    } else {\r\n        if (!griddata.units)\r\n            griddata.units = {};\r\n\r\n        griddata.units.x = getUnit(griddata.x);\r\n        griddata.units.y = getUnit(griddata.y);\r\n        griddata.units.w = getUnit(griddata.w);\r\n        griddata.units.h = getUnit(griddata.h);\r\n\r\n    }\r\n};\r\n\r\nlet initGriddata = (griddataProp, breakpointdata) => {\r\n    if (griddataProp && griddataProp.initialized)\r\n        return griddataProp;\r\n\r\n    if (!griddataProp)\r\n        griddataProp = {};\r\n\r\n    let clone = cloneObject(griddataProp);\r\n\r\n    for (let props in griddataProp) delete griddataProp[props];\r\n\r\n    let griddata = getDefaultChildgriddata(breakpointdata);\r\n    if (clone.bpData) {\r\n        for (let props in griddata.bpData) {\r\n            if (exist(props, breakpointdata)) {\r\n                    for(let props2 in clone.bpData) {\r\n                        griddata.bpData[props][props2] = cloneObject(clone.bpData[props2]);\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    for (let prop in clone) {\r\n        if (clone.hasOwnProperty(prop) && prop !== \"bpData\") {\r\n            griddata[prop] = clone[prop];\r\n        }\r\n    }\r\n\r\n    for(let k in griddata) griddataProp[k]=griddata[k];\r\n\r\n    return griddataProp;\r\n};\r\n\r\nlet getDefaultChildgriddata = (breakpointdata) => {\r\n    let sample = {\r\n        x: \"50%\",\r\n        y: \"50%\",\r\n        w: \"100%\",\r\n        h: \"100%\",\r\n        minW: undefined,\r\n        maxW: undefined,\r\n        minH: undefined,\r\n        maxH: undefined,\r\n        constraints: {\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined,\r\n        },\r\n        margin: {\r\n            all: undefined,\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined\r\n        },\r\n        units: {\r\n            x: \"%\",\r\n            y: \"%\",\r\n            w: \"%\",\r\n            h: \"%\",\r\n        },\r\n        scrollType: \"vertical\",\r\n        absolute: true,\r\n        fix: false,\r\n        autoHeight: false,\r\n        autoWidth: false,\r\n        overflowData: {\r\n            state: 'hide',\r\n            overflowY: 'scroll'\r\n        },\r\n    };\r\n    let griddata = {\r\n        initialized: true,\r\n        resizable: true,\r\n        draggable: true,\r\n        hasOwnBreakPoints: false,\r\n        isContainer: false,\r\n        autoDock: true,\r\n        bpData: {}\r\n    };\r\n    let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n    griddata.bpData[sortedBreakPoints[0].name] = cloneObject(sample);\r\n    return griddata;\r\n};\r\n\r\nlet cloneObject = (obj) => {\r\n    if (obj instanceof Array) {\r\n        let copy = [];\r\n        for (let i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = cloneObject(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n    if (obj instanceof Object) {\r\n        if (null == obj) return obj;\r\n        let copy = {};\r\n        for (let attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = cloneObject(obj[attr]);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nlet shallowEqual = (objA, objB) => {\r\n    if (objA === objB) {\r\n        return true;\r\n    }\r\n\r\n    if (typeof objA !== 'object' || objA === null ||\r\n        typeof objB !== 'object' || objB === null) {\r\n        return false;\r\n    }\r\n\r\n    let keysA = Object.keys(objA);\r\n    let keysB = Object.keys(objB);\r\n\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n\r\n    // Test for A's keys different from B.\r\n    for (let i = 0; i < keysA.length; i++) {\r\n        if (!objB.hasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nfunction throttleDebounce(fn, ms) {\r\n    let deTimer;\r\n    let dontCall;\r\n\r\n    return _ => {\r\n        let args = arguments;\r\n\r\n        if (!dontCall) {\r\n            dontCall = true;\r\n            fn.apply(this, args);\r\n            setTimeout(_ => {\r\n                dontCall = false;\r\n            }, ms);\r\n        }\r\n\r\n        clearTimeout(deTimer);\r\n        deTimer = setTimeout(_ => {\r\n            fn.apply(this, args);\r\n        }, ms);\r\n    };\r\n}\r\n\r\nfunction throttleDebounce2(fn, threshold) {\r\n    threshold = threshold || 250;\r\n    let last, deferTimer;\r\n\r\n    let db = debounce(fn);\r\n    return function() {\r\n        let now = +new Date, args = arguments;\r\n        if(!last || (last && now < last + threshold)) {\r\n            clearTimeout(deferTimer);\r\n            db.apply(this, args);\r\n            deferTimer = setTimeout(function() {\r\n                last = now;\r\n                fn.apply(this, args);\r\n            }, threshold);\r\n        } else {\r\n            last = now;\r\n            fn.apply(this, args);\r\n        }\r\n    }\r\n}\r\n\r\nlet getOverFlow = (griddata, parent, breakpointdata) => {\r\n    if (!griddata)\r\n        return {x:\"hidden\", y:\"hidden\"};\r\n    let parentSizeX;\r\n    if (parent)\r\n        parentSizeX = parent.getSize().x;\r\n\r\n    let scrollType;\r\n    if (parentSizeX) {\r\n        scrollType = getFromData(griddata, \"scrollType\", parentSizeX\r\n                , griddata? griddata.hasOwnBreakPoints: false, breakpointdata);\r\n    } else {\r\n        scrollType = getFromData(griddata, \"scrollType\", 0\r\n                , false, breakpointdata);\r\n    }\r\n    switch (scrollType) {\r\n        case \"hide\":\r\n            return {x:\"hidden\", y:\"hidden\"};\r\n        case \"show\":\r\n            return {x:\"visible\", y:\"visible\"};\r\n        case \"horizontal\":\r\n            return {x:\"overlay\", y:\"hidden\"};\r\n        case \"vertical\":\r\n            return {x:\"hidden\", y:\"overlay\"};\r\n        case \"both\":\r\n            return {x:\"overlay\", y:\"overlay\"};\r\n        default:\r\n            return {x:\"visible\", y:\"visible\"};\r\n    }\r\n};\r\n\r\nlet scrollbarWidth = false;\r\nlet getScrollbarWidth = () => {\r\n    if (scrollbarWidth !== false) return scrollbarWidth;\r\n    /* istanbul ignore else */\r\n    if (typeof document !== 'undefined') {\r\n        const div = document.createElement('div');\r\n        css(div, {\r\n            width: 100,\r\n            height: 100,\r\n            position: 'absolute',\r\n            top: -9999,\r\n            overflow: 'scroll',\r\n            MsOverflowStyle: 'scrollbar'\r\n        });\r\n        document.body.appendChild(div);\r\n        scrollbarWidth = (div.offsetWidth - div.clientWidth);\r\n        document.body.removeChild(div);\r\n    } else {\r\n        scrollbarWidth = 0;\r\n    }\r\n    return scrollbarWidth || 0;\r\n};\r\n\r\nexport let assignData = (griddata, newData) => {\r\n    if (!griddata)\r\n        griddata = {};\r\n    return Object.assign(griddata, newData || {})\r\n};\r\n\r\nexport function getOffsetLeft( elem )\r\n{\r\n    let offsetLeft = 0;\r\n    do {\r\n        let elemOffsetLeft = elem.offsetLeft;\r\n        if ( !isNaN( elemOffsetLeft ) )\r\n        {\r\n            offsetLeft += elemOffsetLeft;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetLeft;\r\n}\r\n\r\nexport function getOffsetTop( elem )\r\n{\r\n    let offsetTop = 0;\r\n    do {\r\n        let elemOffsetTop = elem.offsetTop;\r\n        if ( !isNaN( elemOffsetTop ) )\r\n        {\r\n            offsetTop += elemOffsetTop;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetTop;\r\n}\r\n\r\n\r\nexport function JSToCSS(JS){\r\n    let cssString = \"\";\r\n    for (let objectKey in JS) {\r\n        cssString += objectKey.replace(/([A-Z])/g, (g) => `-${g[0].toLowerCase()}`) + \": \" + JS[objectKey] + \"; \";\r\n    }\r\n    return cssString;\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n\r\n    styleNode.innerHTML = \"\";\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n};\r\n\r\nexport function appendStyle(style, styleId, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n    let styleNode = document.createElement('style');\r\n    styleNode.setAttribute(\"id\", styleId);\r\n    // styleNode.setAttribute(\"title\", styleId);\r\n\r\n    styleNode.type = 'text/css';\r\n\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n\r\n    document.getElementsByTagName('head')[0].appendChild(styleNode);\r\n};\r\n\r\nexport function addCSS(cssText, cssId, doc){\r\n    let styleNode = (doc || document).getElementById(cssId);\r\n\r\n    console.log(\"addCSS1\", styleNode)\r\n    if (!styleNode) {\r\n        styleNode = (doc || document).createElement('style');\r\n        styleNode.setAttribute(\"id\", cssId);\r\n        styleNode.type = 'text/css';\r\n    } else {\r\n        styleNode.innerHTML = \"\";\r\n    }\r\n\r\n    console.log(\"addCSS\", cssId, doc, styleNode)\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = cssText;\r\n    } else {\r\n        styleNode.appendChild((doc || document).createTextNode(cssText));\r\n    }\r\n\r\n    (doc || document).getElementsByTagName('head')[0].appendChild(styleNode);\r\n};\r\n\r\n/*export function appendStyle(style, styleId, styleName){\r\n    return StyleSheet.create({\r\n        [styleId]: style\r\n    })[styleId];\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    return StyleSheet.create({\r\n        [styleName]: style\r\n    });\r\n};*/\r\n\r\nexport function getScrollParent(node) {\r\n    if (node == null) {\r\n        return null;\r\n    }\r\n\r\n    if (node.scrollHeight > node.clientHeight) {\r\n        return node;\r\n    } else {\r\n        return getScrollParent(node.parentNode);\r\n    }\r\n}\r\n\r\nexport function swapArrayElements(arr, indexA, indexB) {\r\n    let temp = arr[indexA];\r\n    arr[indexA] = arr[indexB];\r\n    arr[indexB] = temp;\r\n}\r\n\r\nexport {CalculateLayout, cloneObject, getPxFromPercent, shallowEqual\r\n        ,throttleDebounce, setChildSize, fixGriddata, setChildPosition\r\n        ,getDefaultChildgriddata, initGriddata, getOverFlow, getScrollbarWidth, getDummy}\r\n","import {cloneObject, throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from \"lodash.merge\";\r\n\r\nexport default class BreakPointManager {\r\n    constructor(breakpoints, editor, onBreakpointChange, onZoomLevelChange, onHeightChange, onResize) {\r\n        if (!breakpoints)\r\n            breakpoints = BreakPointManager.getDefault();\r\n\r\n        this.fixBreakpointRules(breakpoints);\r\n\r\n        // TODO test\r\n\r\n        this.breakpoints = breakpoints;\r\n        this.editor = editor;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        this.lastWidth = window.innerWidth;\r\n        this.onBreakpointChange = onBreakpointChange || (() => {});\r\n        this.onZoomLevelChange = onZoomLevelChange || (() => {});\r\n        this.onHeightChange = onHeightChange || (() => {});\r\n\r\n        window.addEventListener(\"resize\", onResize);\r\n        if (onBreakpointChange)\r\n            window.addEventListener(\"resize\", this.onWindowResize);\r\n        if (onZoomLevelChange)\r\n            window.addEventListener(\"resize\", this.onDevicePixelRatioChange);\r\n        if (onHeightChange)\r\n            window.addEventListener(\"resize\", this.onHeightResize);\r\n    }\r\n\r\n    fixBreakpointRules = (breakpoints) => {\r\n        breakpoints.forEach(bpData => {\r\n            if (!bpData.end)\r\n                bpData.end = 99999;\r\n        });\r\n    }\r\n\r\n    updateBreakpoint = (name, start, end) => {\r\n        let bp = this.breakpoints.find(b => b.name === name);\r\n        if (bp) {\r\n            bp.end = end;\r\n            let upperBP = this.getUpperBreakPoint(name);\r\n            if (upperBP) this.getUpperBreakPoint(name).start = end + 1;\r\n            return;\r\n        }\r\n\r\n        start++;\r\n        bp = {name, start, end};\r\n        let prevBp;\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bp.start === sortedBreakPoints[i].start + 1) {\r\n                bp.start++;\r\n            }\r\n            if (bp.start >= sortedBreakPoints[i].start) {\r\n                bp.end = sortedBreakPoints[i].end;\r\n                sortedBreakPoints[i].end = bp.start - 1;\r\n                prevBp = sortedBreakPoints[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.breakpoints.push(bp);\r\n\r\n        return {newBpData: bp, prevBpData: prevBp};\r\n    };\r\n\r\n    deleteBreakpoint = (name) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (name === sortedBreakPoints[i].name) {\r\n                let upper = sortedBreakPoints[i - 1];\r\n                upper.start = sortedBreakPoints[i].start;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let index = this.breakpoints.findIndex(bp => {\r\n            return bp.name === name;\r\n        });\r\n\r\n        this.breakpoints.splice(index, 1);\r\n    };\r\n\r\n    fromClone = (clone) => {\r\n        this.breakpoints = clone.breakpoints;\r\n        this.windowInnerWidth = clone.windowInnerWidth;\r\n        this.lastWidth = clone.lastWidth;\r\n        this.editor = clone.editorData;\r\n\r\n        return this;\r\n    };\r\n\r\n    copyDesign = (designDatas, sourceItem) => {\r\n        this.cloneDesignDatas = {\r\n            designDatas: cloneObject(designDatas),\r\n            sourceItem\r\n        };\r\n    };\r\n\r\n    getCopyDesign = () => {\r\n        return this.cloneDesignDatas;\r\n    };\r\n\r\n    pasteDesign = (item) => {\r\n        if (!this.getCopyDesign())\r\n            return;\r\n\r\n        this.getCopyDesign().designDatas.forEach((designData, index) => {\r\n            let design = designData.design;\r\n            if (!designData.justOneBp) {\r\n                let bpName = designData.bpName;\r\n                if (!item.props.griddata.bpData[bpName])\r\n                    item.props.griddata.bpData[bpName] = {};\r\n                item.props.griddata.bpData[bpName].design = cloneObject(design);\r\n            } else {\r\n                let currentBpName = item.props.breakpointmanager.current();\r\n                if (!item.props.griddata.bpData[currentBpName])\r\n                    item.props.griddata.bpData[currentBpName] = {};\r\n                item.props.griddata.bpData[currentBpName].design = cloneObject(design);\r\n            }\r\n        });\r\n    };\r\n\r\n    getWindowWidth = () => {\r\n        return this.lastWidth\r\n    };\r\n\r\n    getWindowHeight = () => {\r\n        return this.editor.rootLayoutRef.current.getSize(false).height;\r\n        // return window.innerHeight * 0.8;\r\n    };\r\n\r\n    setWindowWidth = (width) => {\r\n        this.lastWidth = width;\r\n    };\r\n\r\n    getBpData = (bpName) => {\r\n        return this.breakpoints.find(bp => {\r\n            return bp.name === bpName;\r\n        });\r\n    };\r\n\r\n    dispose() {\r\n        window.removeEventListener(\"resize\", this.onWindowResize);\r\n    }\r\n\r\n    getDevicePixelRatio = () => {\r\n        return window.devicePixelRatio;\r\n    };\r\n\r\n    onDevicePixelRatioChange = () => {\r\n        let changed = this.devicePixelRatio !== window.devicePixelRatio;\r\n\r\n        this.devicePixelRatio = window.devicePixelRatio;\r\n\r\n        if (changed) {\r\n            this.onZoomLevelChange(this.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onHeightResize = throttleDebounce((e) => {\r\n        if (this.lastHeight !== window.innerHeight) {\r\n            this.lastHeight = window.innerHeight;\r\n            this.onHeightChange(e);\r\n        }\r\n    }, 100);\r\n\r\n    onWindowResize = throttleDebounce(() => {\r\n        let newWidth = window.innerWidth -\r\n            this.editor.context.inspectorPinned ? this.editor.context.inspectorWidth : 0;\r\n\r\n        let result = this.checkBreakPointChange(newWidth);\r\n\r\n        this.setWindowWidth(newWidth);\r\n\r\n        if (result.changed) {\r\n            this.onBreakpointChange(newWidth, result.currentBreakpointName, this.getDevicePixelRatio());\r\n        }\r\n    }, 100);\r\n\r\n    checkBreakPointChange = (newWidth) => {\r\n        let lastBreakpointName = this.current(this.getWindowWidth());\r\n        let currentBreakpointName = this.current(newWidth);\r\n\r\n        return {\r\n            changed: (lastBreakpointName !== currentBreakpointName),\r\n            currentBreakpointName\r\n        }\r\n    };\r\n\r\n    current = (size) => {\r\n        if (!size)\r\n            size = this.getWindowWidth();\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (this.getSize(size) >= sortedBreakPoints[i].start)\r\n                return sortedBreakPoints[i].name;\r\n        }\r\n\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].name;\r\n    };\r\n\r\n    currentBpData = (size) => {\r\n        if (!size)\r\n            size = this.getWindowWidth();\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (this.getSize(size) >= sortedBreakPoints[i].start)\r\n                return sortedBreakPoints[i];\r\n        }\r\n\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1];\r\n    };\r\n\r\n    getUpperBreakPoint = (bpName) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bpName === sortedBreakPoints[i].name)\r\n                return sortedBreakPoints[i - 1] && sortedBreakPoints[i - 1];\r\n        }\r\n    };\r\n\r\n    setData = (dataSet, param, value, breakpointName) => {\r\n        let params = param.split('.');\r\n        let name = breakpointName ||\r\n            this.current(this.getSize());\r\n        if (!dataSet.bpData[name]) {\r\n            dataSet.bpData[name] = {};\r\n        }\r\n        if (params.length === 1) {\r\n            if (value !== undefined)\r\n                dataSet.bpData[name][params[0]] = value;\r\n            else\r\n                delete dataSet.bpData[name][params[0]];\r\n        } else {\r\n            if (dataSet.bpData[name][params[0]] === undefined)\r\n                dataSet.bpData[name][params[0]] = {};\r\n            let override = dataSet.bpData[name][params[0]];\r\n            for(let i = 1; i < params.length; i++) {\r\n                if (i === params.length - 1) { // Last index\r\n                    if (value !== undefined)\r\n                        override[params[i]] = value;\r\n                    else\r\n                        delete override[params[i]];\r\n                }\r\n                else\r\n                {\r\n                    if (override[params[i]] === undefined)\r\n                        override[params[i]] = {};\r\n                    override = override[params[i]];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getFromData = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n        else {\r\n            firstParamResult = this.findFirstUpperBreakPointParam(dataSet, params[0]\r\n                , this.getSize());\r\n        }\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    getHighestBpName = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[0].name;\r\n    };\r\n\r\n    getCompositeFromData = (dataSet, param) => {\r\n        let params = param.split('.');\r\n        let results = [];\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints(this.getWindowWidth());\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            let checkBreakpointName = sortedBreakPoints[i].name;\r\n\r\n            let firstParamResult;\r\n            if (dataSet.bpData[checkBreakpointName] &&\r\n                dataSet.bpData[checkBreakpointName][params[0]] !== undefined)\r\n                firstParamResult = dataSet.bpData[checkBreakpointName][params[0]];\r\n\r\n            if (firstParamResult === undefined)\r\n                continue;\r\n\r\n            if (params.length === 1) {\r\n                results.push(firstParamResult);\r\n            } else {\r\n                params.slice(1).forEach(p => {\r\n                    if (firstParamResult)\r\n                        firstParamResult = firstParamResult[p];\r\n                });\r\n\r\n                results.push(firstParamResult);\r\n            }\r\n        }\r\n\r\n        if (!(results[0] instanceof Object))\r\n            return results[0];\r\n\r\n        let composite = {};\r\n        for (let i = results.length - 1; i >= 0; i--) {\r\n            composite = merge(composite, results[i]);\r\n        }\r\n\r\n        return composite;\r\n    };\r\n\r\n    hasDataInBreakPoint = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    findFirstUpperBreakPointParam = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name] &&\r\n                    dataSet.bpData[sortedBreakPoints[i].name][param] !== undefined)\r\n                    return dataSet.bpData[sortedBreakPoints[i].name][param];\r\n            }\r\n        }\r\n    };\r\n\r\n    findFirstUpperBreakPointName = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name]/* && dataSet[sortedBreakPoints[i].name][param] !== undefined*/)\r\n                    return sortedBreakPoints[i].name;\r\n            }\r\n        }\r\n    };\r\n\r\n    getMinWidth = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].start;\r\n    };\r\n\r\n    getSortedBreakPoints = (minSize) => {\r\n        let breakpoints = this.breakpoints;\r\n        if (minSize) {\r\n            breakpoints = this.breakpoints.filter(bp => {\r\n                return bp.end >= minSize;\r\n            });\r\n        }\r\n        // console.log(\"breakpoints.length\", breakpoints.length, minSize)\r\n        return breakpoints.sort((a,b) => {\r\n            if (a.start > b.start) {\r\n                return -1;\r\n            } else if (a.start === b.start) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        });\r\n    };\r\n\r\n    exist = (name) => {\r\n        return this.breakpoints.find(b => {\r\n            return b.name === name;\r\n        });\r\n    };\r\n\r\n    static getDefault = () => {\r\n        return [\r\n            {\r\n                name: \"laptop\",\r\n                start: 1001,\r\n                end: 99999,\r\n                prefer: 1006\r\n            },\r\n            {\r\n                name: \"tablet\",\r\n                start: 751,\r\n                end: 1000,\r\n                prefer: 768\r\n            },\r\n            {\r\n                name: \"mobile\",\r\n                start: 320,\r\n                end: 750,\r\n                prefer: 360\r\n            },\r\n        ]\r\n    };\r\n\r\n    getSize = (size) => {\r\n        return size || this.getWindowWidth();\r\n    };\r\n};\r\n\r\nexport let setData = (dataSet, param, value, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    breakPointManager.setData(dataSet, param, value, breakpointName);\r\n};\r\n\r\nexport let getFromData = (dataSet, param, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getFromData(dataSet, param, breakpointName);\r\n};\r\n\r\nexport let getCompositeFromData = (dataSet, param, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getCompositeFromData(dataSet, param);\r\n};\r\n\r\nexport let getSortedBreakPoints = (breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.getSortedBreakPoints();\r\n};\r\n\r\nexport let exist = (name, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.exist(name);\r\n};\r\n","import React from 'react';\r\nimport BreakPointManager from \"../BreakPointManager\";\r\nimport chroma from \"chroma-js\";\r\nimport {addCSS, JSToCSS} from \"../AwesomeGridLayoutUtils\";\r\n\r\nfunction getColorScheme (baseColor) {\r\n    return {\r\n        \"1\": chroma(baseColor).luminance(0.025).css(),\r\n        \"2\": chroma(baseColor).luminance(0.06).css(),\r\n        \"3\": chroma(baseColor).luminance(0.15).css(),\r\n        \"4\": chroma(baseColor).luminance(0.35).css(),\r\n        \"5\": chroma(baseColor).luminance(0.55).css(),\r\n    }\r\n}\r\n\r\nexport const EditorContext = React.createContext({});\r\n\r\nconst colorKeys = [\r\n    \"1\",\"2\",\"3\",\"4\",\"5\",\r\n];\r\n\r\nexport default class EditorContextProvider extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            update: this.update,\r\n            initContext: this.initContext,\r\n            zoomScale: 1,\r\n            editor: undefined,\r\n            setZoomScale: this.setZoomScale,\r\n            siteData: undefined,\r\n            setSiteData: this.setSiteData,\r\n            pageSize: 1006,\r\n            setPageSize: this.setPageSize,\r\n            setPageSizeWidth: this.setPageSizeWidth,\r\n            pageData: undefined,\r\n            setPageData: this.setPageData,\r\n            inspectorPinned: true,\r\n            setInspectorPinned: this.setInspectorPinned,\r\n            inspectorWidth: 260,\r\n            getInnerWith: this.getInnerWidth,\r\n            setInspectorWidth: this.setInspectorWidth,\r\n            devicePixelRatio: window.devicePixelRatio,\r\n            setDevicePixelRatio: this.setDevicePixelRatio,\r\n            allComponentData: undefined,\r\n            setAllComponentData: this.setAllComponentData,\r\n            rightMenus: {\r\n                addComponent: {\r\n                    state: false,\r\n                },\r\n                pageManager: {\r\n                    state: false,\r\n                },\r\n                themeManager: {\r\n                    state: false,\r\n                }\r\n            },\r\n            setRightMenus: this.setRightMenus,\r\n            toggleRightMenu: this.toggleRightMenu,\r\n            onNewBpAdded: this.onNewBpAdded,\r\n            setPreview: this.setPreview,\r\n            sendEditCommand: this.sendEditCommand,\r\n            sendPublishCommand: this.sendPublishCommand,\r\n            setProduction: this.setProduction,\r\n            preview: false,\r\n            production: false,\r\n            getTheme: this.getTheme,\r\n            getColor: this.getColor,\r\n            getThemeColorClass: this.getThemeColorClass,\r\n            getThemeBackColorClass: this.getThemeBackColorClass,\r\n            calculateTheme: this.calculateTheme,\r\n            calculateColorCSS: this.calculateColorCSS\r\n        };\r\n    }\r\n\r\n    getThemeColorClass = (color) => {\r\n        if (!color.paletteName || !color.key)\r\n            return '';\r\n\r\n        let name = color.paletteName.replaceAll(' ', '_');\r\n        return `Color_${name}_${color.key}`;\r\n    }\r\n\r\n    getThemeBackColorClass = (color) => {\r\n        if (!color.paletteName || !color.key)\r\n            return '';\r\n\r\n        let name = color.paletteName.replaceAll(' ', '_');\r\n        return `BackColor_${name}_${color.key}`;\r\n    }\r\n\r\n    getTheme = (category, name) => {\r\n        if (name)\r\n            return Object.values(this.state.siteData.theme[category].items).find(t => {\r\n                return t.name === name;\r\n            })\r\n\r\n        return Object.values(this.state.siteData.theme[category].items);\r\n    }\r\n\r\n    getColor = (paletteName, key) => {\r\n        let {siteData} = this.state;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        this.calculateTheme(false);\r\n\r\n        return theme.Colors.items[paletteName][key];\r\n    };\r\n\r\n    calculateTheme = (force = true) => {\r\n        let {siteData} = this.state;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        if (!theme.Colors.calculated) {\r\n            Object.values(theme.Colors.items).forEach(item => {\r\n                let scheme = getColorScheme(item.main);\r\n                colorKeys.forEach(key => {\r\n                    if (force || !item[key])\r\n                        item[key] = scheme[key];\r\n                })\r\n            });\r\n\r\n            theme.Colors.calculated = true;\r\n\r\n            this.calculateColorCSS();\r\n        }\r\n    };\r\n\r\n    calculateColorCSS = (doc) => {\r\n        let {siteData} = this.state;\r\n        let theme = siteData.theme;\r\n        let colorsCSS = [];\r\n        console.log(\"calculateColorCSS\", doc);\r\n        Object.values(theme.Colors.items).forEach(item => {\r\n            colorKeys.forEach(key => {\r\n                let id = this.getThemeColorClass({\r\n                    paletteName: item.name,\r\n                    key: key\r\n                });\r\n                let backColor = this.getThemeBackColorClass({\r\n                    paletteName: item.name,\r\n                    key: key\r\n                });\r\n\r\n                let cssText = `\r\n                    .${id} {\r\n                        color: ${item[key]}\r\n                    }\r\n                    \r\n                    .${backColor} {\r\n                        background-color: ${item[key]}\r\n                    }\r\n                    `;\r\n\r\n                colorsCSS.push({cssText, id});\r\n                addCSS(cssText, id, doc);\r\n            })\r\n        });\r\n    }\r\n\r\n    setProduction = (callback) => {\r\n        this.setState({production:true, preview:true}, callback);\r\n    }\r\n\r\n    sendEditCommand = (callback) => {\r\n        this.state.editor.postMessage({\r\n            type: \"Holder\",\r\n            func: \"onEditMode\",\r\n            inputs: []\r\n        });\r\n        this.setPreview(false, callback);\r\n    }\r\n\r\n    sendPublishCommand = () => {\r\n        this.sendEditCommand(() => {\r\n            this.state.editor.postMessage({\r\n                type: \"Holder\",\r\n                func: \"onPublishClick\",\r\n                inputs: []\r\n            });\r\n        });\r\n    }\r\n\r\n    setPreview = (preview, callback) => {\r\n        let pageData = this.state.pageData;\r\n        this.setPageData(undefined, false, () => {\r\n            this.state.editor.idMan.clear();\r\n            this.setState({preview}, () => {\r\n                this.setPageData(pageData.props.pageId, false, callback);\r\n            });\r\n        });\r\n    }\r\n\r\n    update = (callback) => {\r\n        this.setState({reload: true}, callback);\r\n    };\r\n\r\n    initContext = (state, callback) => {\r\n        this.setState(state, callback);\r\n    };\r\n\r\n    getInnerWidth = () => {\r\n        return window.innerWidth - this.state.inspectorPinned ? this.state.inspectorWidth : 0;\r\n    };\r\n\r\n    setZoomScale = (zoomScale, callback) => {\r\n        this.setState({zoomScale}, callback);\r\n    };\r\n\r\n    setSiteData = (siteData, callback) => {\r\n        this.setState({siteData}, () => {\r\n            this.postSiteData();\r\n            callback && callback();\r\n        });\r\n    };\r\n\r\n    postSiteData = () => {\r\n        this.calculateColorCSS();\r\n    }\r\n\r\n    setPageData = (pageId, force, callback) => {\r\n        if (this.state.pageData && !force && this.state.pageData.props.pageId === pageId) {\r\n            return;\r\n        }\r\n\r\n        if (!pageId) {\r\n            this.setState({pageData: undefined}, callback);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.pageData) {\r\n            let pageData = this.state.siteData.allPages[pageId];\r\n\r\n            if (!pageData.breakpoints) {\r\n                pageData.breakpoints = BreakPointManager.getDefault();\r\n            }\r\n\r\n            this.state.editor.setBreakpoints(pageData.breakpoints);\r\n            this.setState({pageData}, callback);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.preview) {\r\n            this.state.editor.rootLayoutRef.current.onSelect(true, () => {\r\n                this.state.editor.idMan.clear();\r\n\r\n                this.state.setPageData(undefined, false , () => {\r\n                    let pageData = this.state.siteData.allPages[pageId];\r\n\r\n                    if (!pageData.breakpoints) {\r\n                        pageData.breakpoints = BreakPointManager.getDefault();\r\n                    }\r\n\r\n                    this.state.editor.setBreakpoints(pageData.breakpoints);\r\n                    this.setState({pageData}, callback);\r\n                });\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.state.editor.idMan.clear();\r\n\r\n            console.log(\"setPageData\", 62)\r\n            this.state.setPageData(undefined, false , () => {\r\n                let pageData = this.state.siteData.allPages[pageId];\r\n\r\n                if (!pageData.breakpoints) {\r\n                    pageData.breakpoints = BreakPointManager.getDefault();\r\n                }\r\n\r\n                console.log(\"setPageData\", 72)\r\n                this.state.editor.setBreakpoints(pageData.breakpoints);\r\n                this.setState({pageData}, callback);\r\n            });\r\n        }\r\n    };\r\n\r\n    onNewBpAdded = (newBpData, prevBpData) => {\r\n        if (!prevBpData){\r\n            this.update();\r\n            return;\r\n        }\r\n\r\n        console.log(\"newBpData\", newBpData.name, prevBpData.name)\r\n\r\n        let changeGriddata = (item, childData) => {\r\n            if (!item || !item.mounted)\r\n                return;\r\n\r\n            let bpData = childData.props.griddata.bpData;\r\n            bpData[newBpData.name] = bpData[prevBpData.name];\r\n            delete bpData[prevBpData.name];\r\n\r\n            Object.keys(item.getFromTempData(\"savedChildren\")).map(childId => {\r\n                let childData = item.getFromTempData(\"savedChildren\")[childId];\r\n                changeGriddata(\r\n                    item.allChildRefs[childId].current,\r\n                    childData\r\n                );\r\n            })\r\n        };\r\n\r\n        let pageChildData = {\r\n            tagName: this.state.editor.rootLayoutRef.current.props.tagName,\r\n            props: this.state.editor.rootLayoutRef.current.getClearProps({...this.state.editor.rootLayoutRef.current.props}),\r\n            zIndex: 0\r\n        };\r\n\r\n        changeGriddata(this.state.editor.rootLayoutRef.current, pageChildData);\r\n\r\n        this.update();\r\n    }\r\n\r\n    setInspectorPinned = (inspectorPinned, callback) => {\r\n        this.setState({inspectorPinned}, callback);\r\n    };\r\n\r\n    setInspectorWidth = (inspectorWidth, callback) => {\r\n        this.setState({inspectorWidth}, callback);\r\n    };\r\n\r\n    setDevicePixelRatio = (devicePixelRatio, callback) => {\r\n        this.setState({devicePixelRatio}, callback);\r\n    };\r\n\r\n    setAllComponentData = (allComponentData, callback) => {\r\n        this.setState({allComponentData}, callback);\r\n    };\r\n\r\n    toggleRightMenu = (menuName, state) => {\r\n        let {rightMenus} = this.state;\r\n\r\n        if (state === rightMenus[menuName].state)\r\n            return;\r\n\r\n        for(let props in rightMenus) {\r\n            if (rightMenus[props].state) {\r\n                rightMenus[props].state = false;\r\n                rightMenus[props].toggle(true);\r\n            }\r\n        }\r\n\r\n        rightMenus[menuName].state = rightMenus[menuName].toggle(false, state);\r\n\r\n        this.setState({rightMenus: {...rightMenus}});\r\n    };\r\n\r\n    setPageSizeWidth = (width) => {\r\n        this.state.editor.rootLayoutRef.current.setPageSizeWidth(width);\r\n        this.state.editor.breakpointmanager.setWindowWidth(width);\r\n        this.setState({pageSize: width});\r\n    };\r\n\r\n    setPageSize = (pageSize) => {\r\n        this.setState({pageSize});\r\n    };\r\n\r\n    setRightMenus = (rightMenus, callback) => {\r\n        this.setState({rightMenus}, callback);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </EditorContext.Provider>\r\n        )\r\n    }\r\n}\r\n","import {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\n\r\nexport default class DragDropManager {\r\n    setDragging = (item) => {\r\n        this.draggingItem = item;\r\n    };\r\n\r\n    getDragging = () => {\r\n        return this.draggingItem;\r\n    };\r\n\r\n    isDraggingItemFixed = () => {\r\n        if (!this.draggingItem)\r\n            return false;\r\n        return this.draggingItem.state.portalNodeId === \"page_fixed_holder\";\r\n    };\r\n\r\n    // return true if dropping on another parent\r\n    setDraggingStop = () => {\r\n        if (this.draggingItem && this.mouseOver &&\r\n            this.draggingItem.props.parent !== this.mouseOver &&\r\n            !this.mouseOver.getParentsId().includes(this.draggingItem.props.id) &&\r\n            !this.isDraggingItemFixed())\r\n        {\r\n            this.mouseOver.prepareRects();\r\n            this.dropItem(this.draggingItem, this.draggingItem.props.parent, this.mouseOver);\r\n\r\n            this.draggingItem = undefined;\r\n            return true;\r\n        }\r\n\r\n        this.draggingItem = undefined;\r\n        return false;\r\n    };\r\n\r\n    dropItem = (item, parent, newParent, callback, fromUndoRedo, undoPower) => {\r\n        item.toggleHelpLines();\r\n        parent.onChildLeave(item);\r\n\r\n        let drop = () => {\r\n            newParent.onChildDrop(item, undefined, undefined, (newItem) => {\r\n                if (callback)\r\n                    callback(newItem);\r\n\r\n                if (!fromUndoRedo) {\r\n                    let itemId = item.props.id;\r\n                    let firstRelativeX =\r\n                        (item.dragData? item.dragData.firstPos.left : newItem.getSize(false).left)\r\n                        - parent.getSize(false).left;\r\n                    let firstRelativeY =\r\n                        (item.dragData? item.dragData.firstPos.top : newItem.getSize(false).top)\r\n                        - parent.getSize(false).top;\r\n                    let parentRect = cloneObject(parent.getSize(false));\r\n                    let lastRelativeX = newItem.getSize(false).left - newParent.getSize(false).left;\r\n                    let lastRelativeY = newItem.getSize(false).top - newParent.getSize(false).top;\r\n                    let newParentRect = cloneObject(newParent.getSize(false));\r\n                    let width = newItem.getSize(false).width;\r\n                    let height = newItem.getSize(false).height;\r\n\r\n                    let parentId = parent.props.id;\r\n                    let newParentId = newParent.props.id;\r\n                    item.props.undoredo.add((idMan) => {\r\n                        idMan.getItem(itemId).onSelect(true);\r\n                        this.setMouseOver(idMan.getItem(newParentId));\r\n                        this.dropItem(idMan.getItem(itemId), idMan.getItem(parentId), idMan.getItem(newParentId),\r\n                            (newItem) => {\r\n                                setTimeout(() => {\r\n                                    idMan.getItem(itemId).setPosition(false, lastRelativeX, lastRelativeY, undefined, undefined,\r\n                                        width, height, newParentRect, true);\r\n                                }, 0);\r\n                            }, true);\r\n                    }, (idMan) => {\r\n                        idMan.getItem(itemId).onSelect(true);\r\n                        this.setMouseOver(idMan.getItem(parentId));\r\n                        this.dropItem(idMan.getItem(itemId), idMan.getItem(newParentId), idMan.getItem(parentId),\r\n                            (newItem) => {\r\n                                setTimeout(() => {\r\n                                    idMan.getItem(itemId).setPosition(false, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                                        width, height, parentRect, true);\r\n                                }, 0);\r\n                            }, true);\r\n                    }, undoPower);\r\n                }\r\n            });\r\n        };\r\n        if (item.props.dragdrop.mouseOver === newParent &&\r\n            item.props.gridLine.hasGridLine(newParent.props.id)) {\r\n            drop();\r\n        } else {\r\n            item.props.dragdrop.setMouseOver(newParent, undefined, drop);\r\n        }\r\n    };\r\n\r\n    removeMouseOver = () => {\r\n        delete this.mouseOver;\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.isDraggingItemFixed())\r\n            return;\r\n\r\n        if (this.mouseOver) {\r\n            if (!this.mouseOver.getFromTempData(\"selected\")) {\r\n                if (this.mouseOver !== item)\r\n                    this.mouseOver.toggleGridLines(false);\r\n            }\r\n        }\r\n\r\n        this.mouseOver = item;\r\n\r\n        if(this.draggingItem)\r\n            this.draggingItem.toggleHelpLines();\r\n\r\n        item.toggleGridLines(true, () => {\r\n            if(this.draggingItem)\r\n                this.draggingItem.toggleHelpLines(item);\r\n            if (callback)\r\n                callback(this.draggingItem, this.mouseOver);\r\n        }, \"B\");\r\n    };\r\n\r\n    setMouseOverForNonDragging = (item) => {\r\n        this.mouseOverNonDragging = item;\r\n    };\r\n\r\n    getMouseOverForNonDragging = () => {\r\n        return this.mouseOverNonDragging;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport {shallowEqual} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerChildren extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(JSON.stringify(this.allChildIndex),\r\n                JSON.stringify(Object.values(nextProps.allChildren).map(c => {\r\n                    return {\r\n                        z: c.zIndex,\r\n                        i: c.child.props.id\r\n                    }\r\n                })))\r\n        )\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => {\r\n            return {\r\n                z: c.zIndex,\r\n                i: c.child.props.id\r\n            }\r\n        });\r\n    };\r\n\r\n    getSorted = (children) => {\r\n        return children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex)\r\n                return 1;\r\n            if (a.zIndex < b.zIndex)\r\n                return -1;\r\n\r\n            return 0;\r\n        })\r\n    };\r\n\r\n    getChildren = (allChildren, agl) => {\r\n        if (this.props.getChildrenOverride)\r\n            return this.props.getChildrenOverride(this.getSorted(Object.values(allChildren)), agl);\r\n\r\n        return this.getSorted(Object.values(allChildren)).map((child) => {\r\n            return child.child;\r\n        })\r\n    };\r\n\r\n    render () {\r\n        this.saveState();\r\n        let {allChildren, agl} = this.props;\r\n        return (\r\n            this.getChildren(allChildren, agl)\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorBreadcrumbs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div\r\n                className=\"InspectorOptionRoot\"\r\n            >\r\n                <div\r\n                    className=\"InspectorBreadcrumbsParentsRoot\"\r\n                >\r\n                        {\r\n                            item.getParentsId().slice(0, 2).reverse().map(parentId => {\r\n                                let parent = item.props.idMan.getItem(parentId);\r\n                                return (\r\n                                    <ButtonBase\r\n                                        className={\"InspectorBreadcrumbsParentsButton\"}\r\n                                        onClick={(e) => {\r\n                                            parent.onSelect(true);\r\n                                        }}\r\n                                        key={parent.props.id}\r\n                                    >\r\n                                        {\r\n                                            parent.props.tagName + \" >\"\r\n                                        }\r\n                                    </ButtonBase>\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n\r\n                <span\r\n                    className=\"InspectorBreadcrumbsTagName\"\r\n                >\r\n                    {item.props.tagName}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class IconButton extends React.Component {\r\n    render () {\r\n        return (\r\n            <ButtonBase\r\n                aria-label={this.props[\"aria-label\"] || \"aria-label\"}\r\n                onClick={this.props.onClick}\r\n                style={{...{\r\n                    marginLeft: 4,\r\n                    borderRadius: 4,\r\n                    boxSizing: \"border-box\"\r\n                }, ...this.props.buttonBaseStyle}}\r\n                className={this.props.className}\r\n                disabled={this.props.disabled}\r\n                ref={this.props.rootRef}\r\n            >\r\n                <div style={{...{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    padding: 6,\r\n                }, ...this.props.imageContainerStyle}}>\r\n                    {\r\n                        this.props.icon\r\n                    }\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {alignItem} from \"../../AwesomwGridLayoutHelper\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class InspectorAligns extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                name: \"Align to left\",\r\n                horizontal: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-left.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to center\",\r\n                horizontal: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-center.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to right\",\r\n                horizontal: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-right.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to top\",\r\n                vertical: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-top.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to middle\",\r\n                vertical: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-middle.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to bottom\",\r\n                vertical: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-bottom.svg')}\r\n                />\r\n            },\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div className=\"InspectorOptionRoot\">\r\n                <span className=\"InspectorOptionTextTitle\">\r\n                    Alignment\r\n                </span>\r\n                <div\r\n                    className=\"InspectorAlignsRoot\"\r\n                >\r\n                    {\r\n                        this.getButtonsData().map((data, i) => {\r\n                            return (\r\n                                <IconButton\r\n                                    key={data.name}\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 0,\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 6\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        alignItem(item, data.vertical, data.horizontal)\r\n                                    }}\r\n                                    className=\"InspectorAlignsButtons\"\r\n                                >\r\n                                    {data.img}\r\n                                </IconButton>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from 'lodash.merge';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport Stack from \"./Components/Stack/Stack\";\r\nimport DynamicComponents from \"./Dynamic/DynamicComponents\";\r\nimport {getCompositeFromData, getFromData, setData} from \"./BreakPointManager\";\r\nimport ContextMenu from \"./Test/ContextMenu\";\r\nimport chroma from \"chroma-js\";\r\n\r\nlet deepEqual = require('fast-deep-equal/es6');\r\n\r\nexport function stretch(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let saveStyle = cloneObject(item.getFromData(\"style\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            stretch(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).setStyle(saveStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (item.hasOverride(\"stretch\")) {\r\n        item.callOverride(\"stretch\", item);\r\n        return;\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let beStretch = false;\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (!isStretch(item))\r\n        beStretch = true;\r\n\r\n    item.setDocks(beStretch, beStretch, false, beStretch, item.getFromTempData(\"autoDock\"), undefined, true);\r\n\r\n    gridItemStyle.alignSelf = beStretch? \"start\": \"start\";\r\n    gridItemStyle.justifySelf = beStretch? \"stretch\": \"center\";\r\n    gridItemStyle.marginTop = \"0px\";\r\n    gridItemStyle.marginLeft = \"0px\";\r\n    gridItemStyle.marginRight = \"0px\";\r\n    gridItemStyle.marginBottom = \"0px\";\r\n    item.setStyleParam(\"width\", \"auto\");\r\n    item.setStyleParam(\"height\", \"100%\");\r\n    item.setStyleParam(\"minHeight\", \"unset\");\r\n\r\n    if (!beStretch) {\r\n        let parentRect = item.props.parent.getSize();\r\n        gridItemStyle.marginTop = `${(parentRect.height - 0.8 * parentRect.height) / 2}px`;\r\n\r\n        item.setStyleParam(\"width\", \"80%\");\r\n        item.setStyleParam(\"height\", \"auto\");\r\n        item.setStyleParam(\"minHeight\", `${0.8 * parentRect.height}px`);\r\n    }\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function getFromTempData(item, prop) {\r\n    let dataToRead = item.props.griddata;\r\n    return dataToRead[prop];\r\n}\r\n\r\nexport function isStretch(item, log) {\r\n    if (item.hasOverride(\"isStretch\")) {\r\n        return item.callOverride(\"isStretch\", item, log);\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    return !(gridItemStyle.alignSelf !== \"start\" || gridItemStyle.justifySelf !== \"stretch\" ||\r\n        gridItemStyle.marginTop !== \"0px\" || gridItemStyle.marginLeft !== \"0px\" ||\r\n        gridItemStyle.marginRight !== \"0px\" || gridItemStyle.marginBottom !== \"0px\");\r\n}\r\n\r\nexport function allowStretch(item) {\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    if (item.props.as === \"section\" || item.props.as === \"header\" || item.props.as === \"footer\")\r\n        return false;\r\n\r\n    return !item.props.disableStretch;\r\n}\r\n\r\nexport function alignItem(item, vertical, horizontal, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            alignItem(idMan.getItem(itemId), vertical, horizontal, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (vertical) {\r\n        gridItemStyle.alignSelf = vertical;\r\n        gridItemStyle.marginTop = \"0px\";\r\n        gridItemStyle.marginBottom = \"0px\";\r\n    }\r\n    if (horizontal) {\r\n        gridItemStyle.justifySelf = horizontal;\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n    }\r\n\r\n    let baseDocks = item.getBaseDocks();\r\n    item.setDocks(\r\n        baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n        item.getFromTempData(\"autoDock\"), undefined, true\r\n    );\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function setScrollBehaviour(item, behaviour, pageAgl, fromUndoRedo, {offsetTop} = {}) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let pageId = pageAgl.props.id;\r\n        let oldBehaviour = item.getFromData(\"isFixed\")? \"fixed\": item.getFromData(\"scrollBehaviour\") || \"none\";\r\n        let oldOffsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        item.props.undoredo.add((idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), behaviour, idMan.getItem(pageId), true, {offsetTop});\r\n        }, (idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), oldBehaviour, idMan.getItem(pageId), true,\r\n                {offsetTop: oldOffsetTop});\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let oldIsFixed = item.getFromTempData(\"isFixed\");\r\n\r\n    let lastSectionId = item.getFromTempData(\"lastSectionId\");\r\n    if (oldIsFixed && behaviour !== \"fixed\" && lastSectionId) {\r\n        item.props.parent.onChildLeave(item);\r\n        let itemRect = item.getSize(false);\r\n        let sectionParent = item.props.viewRef.current\r\n            .props.aglComponent.getSectionOfPoint(itemRect.left, itemRect.top);\r\n\r\n        sectionParent.onSelect(true, undefined, undefined, undefined, true);\r\n        sectionParent.prepareRects();\r\n        sectionParent.onChildDrop(item, undefined, false, (newItem) => {\r\n            newItem.setState({portalNodeId: undefined});\r\n            window.requestAnimationFrame(() => {\r\n                newItem.onSelect(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    item.setTempData(\"isFixed\", behaviour === \"fixed\");\r\n    item.setDataInBreakpoint(\"scrollBehaviour\", behaviour);\r\n    item.setDataInBreakpoint(\"scrollStickyOffsetTop\", offsetTop);\r\n\r\n    switch (behaviour) {\r\n        case \"none\":\r\n            item.setStyleParam(\"position\", undefined);\r\n            item.setStyleParam(\"top\", undefined);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"sticky\":\r\n            item.setStyleParam(\"position\", \"sticky\");\r\n            item.setStyleParam(\"top\", offsetTop || 0);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"fixed\":\r\n            if (!oldIsFixed) {\r\n                addFixedChildToRoot(item, pageAgl);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\nfunction addFixedChildToRoot(item, pageAgl) {\r\n    let oldParentRect = item.props.parent.getSize(false);\r\n    item.toggleHelpLines();\r\n    item.setTempData(\"lastSectionId\", item.props.parent.props.id);\r\n    item.props.parent.onChildLeave(item);\r\n    pageAgl.onSelect(true, undefined, undefined, undefined, true);\r\n    let pageRect = pageAgl.prepareRects();\r\n    let itemRect = item.getSize(false);\r\n\r\n    pageAgl.onChildDrop(item, undefined, true, (newItem) => {\r\n        window.requestAnimationFrame(() => {\r\n            newItem.onSelect(true);\r\n        });\r\n    });\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n    gridItemStyle.gridArea = \"1/1/2/2\";\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n\r\n    let style = item.getCompositeFromData(\"style\");\r\n\r\n    let newWidth = itemRect.width *  oldParentRect.width / pageRect.width;\r\n    item.setStyleParam(\"width\", getStyleValueFromPx(newWidth, oldParentRect.width,\r\n        getUnitFromStyleValue(style.width), item));\r\n    item.setStyleParam(\"height\", getStyleValueFromPx(itemRect.height, oldParentRect.height,\r\n        getUnitFromStyleValue(style.height), item));\r\n    item.setStyleParam(\"position\", undefined);\r\n    item.setStyleParam(\"top\", undefined);\r\n    item.setStyleParam(\"pointerEvents\", \"auto\");\r\n}\r\n\r\nexport function isFixed(item) {\r\n    return item.getFromTempData(\"isFixed\");\r\n}\r\n\r\nexport function hideInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", \"none !important\");\r\n    item.props.viewRef.current.props.aglComponent.updateTemplates();\r\n    item.props.select.onScrollItem();\r\n    item.props.editor.updateLayout();\r\n}\r\n\r\nexport function isHideInBreakPoint(item, fromUndoRedo) {\r\n    return item.getCompositeFromData(\"style\").display === \"none !important\";\r\n}\r\n\r\nexport function showInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", undefined);\r\n    let newStyle = item.getFromData(\"style\");\r\n    if (newStyle && Object.keys(newStyle).length === 0) {\r\n        item.setDataInBreakpoint(\"style\", undefined);\r\n    }\r\n    item.props.viewRef.current.props.aglComponent.updateTemplates();\r\n    item.props.editor.updateLayout();\r\n}\r\n\r\nexport function getFromComponentData(item, prop, breakpointName) {\r\n    return item.props.breakpointmanager\r\n        .getFromData(item.props.griddata, prop, breakpointName)\r\n};\r\n\r\nexport function hasBreakpointDesign(fromName, item) {\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n    return !(fromData === undefined);\r\n}\r\n\r\nexport function pasteFromBreakpointDesign(item, fromName, toName, fromUndoRedo) {\r\n    let fromData = item.props.griddata.bpData[fromName].design;\r\n    if (fromData === undefined)\r\n        return;\r\n\r\n    if (!toName)\r\n        toName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[toName])\r\n        item.props.griddata.bpData[toName] = {};\r\n\r\n    let currentData = item.props.griddata.bpData[toName].design;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(currentData);\r\n        item.props.undoredo.add((idMan) => {\r\n            pasteFromBreakpointDesign(idMan.getItem(itemId), fromName, toName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[toName].design = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    if (!currentData)\r\n        currentData = {};\r\n    merge(currentData, fromData);\r\n    item.props.griddata.bpData[toName].design = currentData;\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function deepAssign(fromData, currentData) {\r\n    Object.keys(fromData).map(key => {\r\n        let currentValue = currentData[key];\r\n        let fromValue = fromData[key];\r\n        if (currentValue === undefined) {\r\n            currentData[key] = cloneObject(fromValue);\r\n        } else {\r\n            if (fromValue instanceof Object) {\r\n                if (!currentValue)\r\n                    currentData[key] = {};\r\n                deepAssign(fromValue, currentValue)\r\n            } else {\r\n                currentData[key] = cloneObject(fromValue);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function removeOverrides(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (fromName === \"laptop\")\r\n        return;\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(item.props.griddata.bpData[fromName] || {});\r\n        item.props.undoredo.add((idMan) => {\r\n            removeOverrides(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[fromName] = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.griddata.bpData[fromName] = {};\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function applyOnAllBreakPoint(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n\r\n    let undoData = {};\r\n\r\n    let sortedBreakPoints = item.props.breakpointmanager.getSortedBreakPoints();\r\n    for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n        let toName = sortedBreakPoints[i].name;\r\n        if (fromData !== toName) {\r\n            undoData[toName] = cloneObject(item.props.griddata.bpData[toName] || {});\r\n            item.props.griddata.bpData[toName] = cloneObject(fromData);\r\n        }\r\n    }\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            applyOnAllBreakPoint(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            Object.keys(undoData).forEach(key => {\r\n                idMan.getItem(itemId).props.griddata.bpData[key] = undoData[key];\r\n            });\r\n\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function copyDesign(item, fromAll) {\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n\r\n    let designDatas = [];\r\n    if (!fromAll && item.props.griddata.bpData[currentBpName])\r\n        designDatas[0] = {\r\n            bpName: currentBpName,\r\n            design: item.props.griddata.bpData[currentBpName].design,\r\n            justOneBp: true\r\n        };\r\n    else if (fromAll) {\r\n        Object.keys(item.props.griddata.bpData).forEach((key, index) => {\r\n            designDatas[index] = {\r\n                bpName: key,\r\n                design: item.props.griddata.bpData[key].design\r\n            };\r\n        });\r\n    }\r\n\r\n    console.log(\"copyDesign\", designDatas);\r\n    if (designDatas.length > 0)\r\n        item.props.breakpointmanager.copyDesign(designDatas, item);\r\n}\r\n\r\nexport function pasteDesign(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let copyDesign = cloneObject(item.props.breakpointmanager.getCopyDesign().designDatas);\r\n        let allOldDesign = cloneObject(Object.keys(item.props.griddata.bpData).map(key => {\r\n            return {\r\n                bpName: key,\r\n                design: item.props.griddata.bpData[key].design\r\n            }\r\n        }));\r\n        item.props.undoredo.add((idMan) => {\r\n            let item = idMan.getItem(itemId);\r\n            console.log(111);\r\n            let temp = cloneObject(item.props.breakpointmanager.getCopyDesign().designDatas);\r\n            let sourceItemTemp = item.props.breakpointmanager.getCopyDesign().sourceItem;\r\n            console.log(222);\r\n            item.props.breakpointmanager.cloneDesignDatas = {\r\n                designDatas: copyDesign,\r\n                sourceItem: item\r\n            };\r\n            item.props.breakpointmanager.pasteDesign(item);\r\n            console.log(333);\r\n            item.props.breakpointmanager.cloneDesignDatas = {\r\n                designDatas: temp,\r\n                sourceItem: sourceItemTemp\r\n            };\r\n\r\n            item.onBreakpointChange(\r\n                item.props.breakpointmanager.getWindowWidth(),\r\n                item.props.breakpointmanager.current());\r\n\r\n            item.props.aglComponent.updateDesign &&\r\n                item.props.aglComponent.updateDesign(item.getCompositeFromData(\"design\"));\r\n\r\n            item.updateLayout();\r\n            console.log(444);\r\n        }, (idMan) => {\r\n            let item = idMan.getItem(itemId);\r\n            allOldDesign.forEach(designData => {\r\n                item.props.griddata.bpData[designData.bpName].design = cloneObject(designData.design);\r\n            });\r\n\r\n            item.onBreakpointChange(\r\n                item.props.breakpointmanager.getWindowWidth(),\r\n                item.props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.breakpointmanager.pasteDesign(item);\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n\r\n    item.props.aglComponent.updateDesign &&\r\n        item.props.aglComponent.updateDesign(item.getCompositeFromData(\"design\"));\r\n\r\n    item.updateLayout();\r\n}\r\n\r\nexport function isGroupSelected(item) {\r\n    return item.props.select.group;\r\n}\r\n\r\nexport function getSectionId(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent.props.id;\r\n\r\n    return uuidv4();\r\n}\r\n\r\nexport function getSectionParent(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent;\r\n}\r\n\r\nexport function createStack(items, fromUndoRedo) {\r\n    if (!items || items.length < 2)\r\n        return;\r\n\r\n    let itemsParent = getSectionParent(items[0]);\r\n\r\n    if (!itemsParent)\r\n        return;\r\n\r\n    let top = 99999999;\r\n    let left = 99999999;\r\n    let rightFromLeft = 0;\r\n    let allSpacerData = [];\r\n    let lastBottom;\r\n\r\n    items.sort((a,b) => {\r\n        if (a && b){\r\n            let topA = a.getSize(false).top;\r\n            let topB = b.getSize(false).top;\r\n            if (topA < topB) {\r\n                return -1;\r\n            } else if (topA === topB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    items.forEach((item) => {\r\n        let rect = item.getSize(false);\r\n        top = Math.min(rect.top, top);\r\n        left = Math.min(rect.left, left);\r\n        rightFromLeft = Math.max(rect.left + rect.width, rightFromLeft);\r\n\r\n        if (lastBottom) {\r\n            allSpacerData.push({\r\n                height: Math.max(0, rect.top - lastBottom)\r\n            });\r\n        }\r\n\r\n        lastBottom = rect.top + rect.height;\r\n    });\r\n\r\n    let stack;\r\n    let stackNode =\r\n        <Stack\r\n            style={{\r\n                width: `${rightFromLeft - left}px`,\r\n            }}\r\n            lateMountedComplete={(_stack) => {\r\n                stack = _stack;\r\n            }}\r\n            allSpacerData={allSpacerData}\r\n            document={items[0].props.document}\r\n        />;\r\n\r\n    let parentRect = itemsParent.prepareRects();\r\n    itemsParent.addChild(stackNode, undefined, undefined, undefined, (agl) => {\r\n        if (!fromUndoRedo) {\r\n            let stackId = agl.props.id;\r\n            let itemIds = items.map(item => {\r\n                return item.props.id;\r\n            });\r\n            agl.props.undoredo.add((idMan) => {\r\n                let newItems = itemIds.map(id => {\r\n                    return idMan.getItem(id);\r\n                });\r\n                newItems.forEach(item => {\r\n                    item.onSelect(true);\r\n                });\r\n                createStack(newItems, true);\r\n            }, (idMan) => {\r\n                removeStackFromAGL(idMan.getItem(stackId), undefined, true);\r\n            });\r\n        }\r\n\r\n        agl.onSelect(true);\r\n        let {gridItemStyle} =\r\n            agl.calculateGridItem(left - parentRect.left, top - parentRect.top,\r\n                itemsParent, undefined, undefined, itemsParent.getSize(false));\r\n        agl.setGridItemStyle(gridItemStyle);\r\n        agl.prepareRects();\r\n        // agl.prepareRects(true);\r\n        setTimeout(() => {\r\n            items = items.filter(item => {\r\n                return item.props.id !== agl.props.id;\r\n            });\r\n\r\n            let addToStack = (items) => {\r\n                let item = items.shift();\r\n                if (!item)\r\n                    return;\r\n\r\n                item.props.parent.onChildLeave(item);\r\n                agl.onChildDrop(item, undefined, undefined, () => {\r\n                    addToStack(items);\r\n                });\r\n            };\r\n            addToStack(items);\r\n            setTimeout(() => {\r\n                stack.setOrder();\r\n                setTimeout(() => {\r\n                    let width = agl.getSize(false, true).width;\r\n                    let parentWidth = agl.props.parent.getSize(false).width;\r\n                    agl.setProps(\"width\", `${width / parentWidth * 100}%`);\r\n                    agl.onSelect(true);\r\n                }, 0);\r\n            }, 0);\r\n        }, 0);\r\n    });\r\n}\r\n\r\nexport function removeStack(stack, childIds, fromUndoRedo) {\r\n    removeStackFromAGL (stack.aglRef.current, childIds, fromUndoRedo);\r\n}\r\n\r\nexport function removeStackFromAGL(stackAgl, childIds, fromUndoRedo) {\r\n    stackAgl.removing = true;\r\n    if (!stackAgl || !stackAgl.props.isStack)\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let stackId = stackAgl.props.id;\r\n        stackAgl.props.undoredo.add((idMan) => {\r\n            removeStackFromAGL(idMan.getItem(stackId), childIds, true);\r\n        }, (idMan) => {\r\n            let newItems = childIds.map(id => {\r\n                return idMan.getItem(id);\r\n            });\r\n            createStack(newItems, true);\r\n        });\r\n    }\r\n\r\n    let newParent = stackAgl.props.parent;\r\n    stackAgl.clearItem();\r\n\r\n    let sorted = Object.values(stackAgl.allChildRefs).sort((a,b) => {\r\n        if (a && a.current && b && b.current){\r\n            let relativeYA = a.current.getFromData(\"relativeY\");\r\n            let relativeYB = b.current.getFromData(\"relativeY\");\r\n            if (relativeYA < relativeYB) {\r\n                return 1;\r\n            } else if (relativeYA === relativeYB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    newParent.onSelect(true);\r\n    newParent.prepareRects();\r\n    // newParent.prepareRects(true);\r\n    let removeChilds = (sorted) => {\r\n        let item = sorted.shift();\r\n\r\n        if (!item) {\r\n            setTimeout(() => {\r\n                newParent.onChildLeave(stackAgl);\r\n            }, 0);\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            if (item && item.current) {\r\n                item.current.props.parent.onChildLeave(item.current);\r\n                newParent.onChildDrop(item.current);\r\n            }\r\n            removeChilds(sorted, newParent);\r\n        }, 0);\r\n    };\r\n\r\n    removeChilds(sorted);\r\n    /*sorted.forEach(item => {\r\n        if (item && item.current) {\r\n            console.log(\"onChildDrop\", item.current.props.id);\r\n            item.current.props.parent.onChildLeave(item.current);\r\n            newParent.onChildDrop(item.current);\r\n        }\r\n    });*/\r\n}\r\n\r\nexport function createItem(parent, childData, fromUndoRedo, gridItemStyle, style, onChildMounted) {\r\n    childData.props = cloneObject(parent.getClearProps({...childData.props}, true));\r\n    childData.zIndex = parent.getNextIndexData(0).lastZIndex + 1;\r\n\r\n    if (gridItemStyle) {\r\n        parent.setDataInBreakpoint(\r\n            \"gridItemStyle\", gridItemStyle, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n    if (style) {\r\n        parent.setDataInBreakpoint(\r\n            \"style\", style, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n\r\n    let child = parent.createChildByData(\r\n        childData , DynamicComponents, undefined, (newItem) => {\r\n        newItem.onSelect(true);\r\n\r\n        onChildMounted && onChildMounted(newItem);\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = newItem.props.id;\r\n            let parentId = parent.props.id;\r\n            let childData = cloneObject(parent.getChildData(itemId));\r\n            parent.props.undoredo.add((idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true, gridItemStyle, style);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            });\r\n        }\r\n    });\r\n\r\n    parent.children[childData.props.id] = {\r\n        child: child,\r\n        zIndex: childData.zIndex\r\n    };\r\n\r\n    let savedChildren = parent.getFromTempData(\"savedChildren\");\r\n    savedChildren[childData.props.id] = childData;\r\n\r\n    parent.updateLayout();\r\n}\r\n\r\nexport function setDataInBreakpoint(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(prop, undefined, breakpointName);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setDataInBreakpoint(prop, saveValue, idMan.getItem(itemId), false, breakpointName, updateLayout);\r\n        }, (idMan) => {\r\n            setDataInBreakpoint(prop, oldValue, idMan.getItem(itemId), false, breakpointName, updateLayout);\r\n        }, addToUndo);\r\n    }\r\n    item.setDataInBreakpoint(prop, value, undefined, breakpointName);\r\n\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setTempData(prop, value, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromTempData(prop);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setTempData(prop, saveValue, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setTempData(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setTempData(prop, value);\r\n}\r\n\r\nexport function setStyle(newStyle, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let saveStyle = cloneObject(newStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setStyle(newStyle);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setStyleParam (param, value, item, addToUndo, breakpointName, dontAddToSnap) {\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyleParam(param, value, idMan.getItem(itemId), false, breakpointName, dontAddToSnap);\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        }, addToUndo);\r\n    }\r\n\r\n    let style = item.hasDataInBreakPoint(\"style\", undefined, breakpointName) || {};\r\n    style[param] = value;\r\n    if (value === undefined)\r\n        delete style[param];\r\n    item.setStyle(style, undefined, breakpointName, undefined, dontAddToSnap);\r\n}\r\n\r\nexport function setNewSize(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(`style.${prop}`, undefined, breakpointName);\r\n        let saveStyle = cloneObject(item.getFromData(\"style)\"));\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setNewSize(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setNewSize(prop, value);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setGridItemStyle(newGridItemStyle, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGridItemStyle = item.getFromData(\"gridItemStyle\", undefined, breakpointName);\r\n        oldGridItemStyle = cloneObject(oldGridItemStyle);\r\n        let saveGridItemStyle = cloneObject(newGridItemStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridItemStyle(saveGridItemStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridItemStyle(oldGridItemStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridItemStyle(newGridItemStyle);\r\n    item.invalidateSize(true, true, true);\r\n}\r\n\r\nexport function setGridArea(newGridArea, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldGridArea = item.getGridArea();\r\n        oldGridArea = cloneObject(oldGridArea);\r\n        let saveGridArea = cloneObject(newGridArea);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridArea(saveGridArea, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridArea(oldGridArea, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridArea(newGridArea);\r\n}\r\n\r\nexport function setGrid(newGrid, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGrid = item.getFromData(\"grid\", undefined, breakpointName);\r\n        oldGrid = cloneObject(oldGrid);\r\n        let saveGrid = cloneObject(newGrid);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGrid(saveGrid, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGrid(oldGrid, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGrid(newGrid);\r\n}\r\n\r\nexport function setAnchor(newAnchor, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldAnchor = item.getFromTempData(\"anchor\");\r\n        oldAnchor = cloneObject(oldAnchor);\r\n        let saveAnchor = cloneObject(newAnchor);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setAnchor(saveAnchor, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setAnchor(oldAnchor, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setAnchor(newAnchor);\r\n}\r\n\r\nexport function arrangeIndex(item, child, type, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldType = type === \"forward\"? \"backward\":\r\n            type === \"backward\"? \"forward\": undefined;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), type);\r\n        }, (idMan) => {\r\n            if (oldType)\r\n                arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldType);\r\n            else\r\n                changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.arrangeIndex(child, type);\r\n}\r\n\r\nexport function changeIndex (item, child, index, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), index);\r\n        }, (idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.changeIndex(child, index);\r\n}\r\n\r\nexport function resolveDesignData (item, key, value){\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName()))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    if (!key)\r\n        return;\r\n\r\n    let design = getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName());\r\n    if (!design[key])\r\n        design[key] = value || {};\r\n}\r\n\r\nexport function getCompositeDesignData (item) {\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getCompositeFromData(item.props.griddata, \"design\", breakpointData))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    return getCompositeFromData(item.props.griddata, \"design\", breakpointData);\r\n}\r\n\r\nexport function rotate (item, degree, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldDegree = item.getFromData(\"rotateDegree\");\r\n        item.props.undoredo.add((idMan) => {\r\n            rotate(idMan.getItem(itemId), degree, true);\r\n        }, (idMan) => {\r\n            rotate(idMan.getItem(itemId), oldDegree || 0, true);\r\n        });\r\n    }\r\n\r\n    item.setDataInBreakpoint(\"transform.rotateDegree\", degree);\r\n    item.setTransformStyle(item.getFromData(\"transform\"));\r\n    item.updateLayout(item.props.select.onScrollItem);\r\n}\r\n\r\nexport function getViewRatioStyle (value) {\r\n    if (value.includes('vh'))\r\n        return`calc(${value} * var(--vh-ratio))`;\r\n    if (value.includes('vw'))\r\n        return`calc(${value} * var(--vw-ratio))`;\r\n\r\n    return value;\r\n}\r\n\r\nexport function getValueFromCSSValue (value) {\r\n    if (!value)\r\n        return \"\";\r\n\r\n    if (value.includes(\"%\")) {\r\n        return Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        return Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        return Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function getPxValueFromCSSValue (value, parentValue, item) {\r\n    if (!value)\r\n        return;\r\n    if (!isNaN(value))\r\n        return value;\r\n\r\n    if (value.includes(\"%\")) {\r\n        let percent = Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n        return percent * parentValue / 100;\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        let percent = Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n\r\n        return percent * item.props.breakpointmanager.getWindowHeight() / 100;\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        let percent =  Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n\r\n        return percent * item.props.breakpointmanager.getWindowWidth() / 100;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function getStyleValueFromPx (value, parentValue, unit, item) {\r\n    if (!unit)\r\n        unit = \"px\";\r\n\r\n    if (unit === \"px\") {\r\n        return `${value}${unit}`;\r\n    }\r\n    if (unit === \"%\") {\r\n        return `${value / parentValue * 100}${unit}`;\r\n    }\r\n    if (unit === \"vh\") {\r\n        value = `${value / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n        return `calc(${value} * var(--vh-ratio))`;\r\n    }\r\n    if (unit === \"vw\") {\r\n        value = `${value / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n        return `calc(${value} * var(--vw-ratio))`;\r\n    }\r\n\r\n    return unit;\r\n}\r\n\r\nexport function getUnitFromStyleValue (value) {\r\n    if (!value)\r\n        return \"none\";\r\n\r\n    if (value.includes(\"%\")) {\r\n        return \"%\";\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return \"px\";\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        return \"vw\";\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        return \"vh\";\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function createContextMenu(e, item, onClose) {\r\n    if (item.props.isPage)\r\n        return;\r\n\r\n    let menu = [];\r\n\r\n    item.getContextMenu() && menu.push(item.getContextMenu());\r\n\r\n    // Copy section\r\n    let copySection = [\r\n        {\r\n            name: \"Copy\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.copy(item);\r\n            },\r\n            shortcut: \"Ctrl + C\"\r\n        },\r\n        {\r\n            name: \"Paste\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.paste(item);\r\n            },\r\n            shortcut: \"Ctrl + V\"\r\n        },\r\n        {\r\n            name: \"Duplicate\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.duplicate(item);\r\n            },\r\n            shortcut: \"Ctrl + D\"\r\n        },\r\n        {\r\n            name: \"Copy Element Design\",\r\n            subMenu: [\r\n                {\r\n                    name: \"From this breakpoint\",\r\n                    onClick: (e) => {\r\n                        copyDesign(item);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"From all breakpoint\",\r\n                    onClick: (e) => {\r\n                        copyDesign(item, true);\r\n                    }\r\n                },\r\n            ]\r\n        },\r\n    ];\r\n    let copyDesignItem = item.props.breakpointmanager.getCopyDesign();\r\n    if (copyDesignItem && isSameFamily(copyDesignItem.sourceItem, item))\r\n        copySection.push({\r\n            name: \"Paste Design\",\r\n            onClick: (e) => {\r\n                pasteDesign(item);\r\n            }\r\n        });\r\n    let overrideBps = [];\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n    Object.keys(item.props.griddata.bpData).forEach(bpName => {\r\n        if (bpName === currentBpName ||\r\n            item.props.breakpointmanager.getHighestBpName() === bpName)\r\n            return;\r\n\r\n        if (item.props.griddata.bpData[bpName] && item.props.griddata.bpData[bpName].design) {\r\n            if (!item.props.griddata.bpData[currentBpName] ||\r\n                !deepEqual(item.props.griddata.bpData[bpName].design,\r\n                    item.props.griddata.bpData[currentBpName].design)) {\r\n                overrideBps.push(bpName);\r\n            }\r\n        }\r\n    });\r\n    if (overrideBps.length > 0) {\r\n        copySection.push({\r\n            name: \"Paste From Breakpoint\",\r\n            subMenu: overrideBps.map(bpName => {\r\n                return {\r\n                    name: bpName,\r\n                    onClick: (e) => {\r\n                        pasteFromBreakpointDesign(item, bpName, currentBpName);\r\n                    }\r\n                };\r\n            })\r\n        });\r\n    }\r\n    menu.push(copySection);\r\n\r\n    let deleteSection = [];\r\n    if (!isHideInBreakpoint(item)) {\r\n        deleteSection.push(\r\n            {\r\n                name: \"Hide In Breakpoint\",\r\n                onClick: (e) => {\r\n                    hideInBreakPoint(item);\r\n                }\r\n            });\r\n    }\r\n    deleteSection.push({\r\n        name: \"Delete\",\r\n        onClick: (e) => {\r\n            item.delete();\r\n        },\r\n        shortcut: \"Delete\"\r\n    });\r\n\r\n    if (currentBpName !== item.props.breakpointmanager.getHighestBpName()) {\r\n        if (item.props.griddata.bpData[currentBpName] &&\r\n            Object.keys(item.props.griddata.bpData[currentBpName]).length > 0)\r\n        {\r\n            deleteSection.unshift({\r\n                name: \"Remove Breakpoint Overrides\",\r\n                onClick: (e) => {\r\n                    // TODO add these lines to a function with undo support\r\n                    delete item.props.griddata.bpData[currentBpName];\r\n                    item.onBreakpointChange(\r\n                        item.props.breakpointmanager.getWindowWidth(),\r\n                        item.props.breakpointmanager.current());\r\n                    item.props.select.onScrollItem();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    menu.push(deleteSection);\r\n\r\n    let shortcutSection = [];\r\n    if (!item.props.griddata.isSection) {\r\n        shortcutSection.push({\r\n            name: \"Arrange\",\r\n            subMenu: [\r\n                {\r\n                    name: \"Move Forward\",\r\n                    shortcut: \"Ctrl + Alt + ↑\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"forward\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move to Front\",\r\n                    shortcut: \"Ctrl + ↑\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"front\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move Backward\",\r\n                    shortcut: \"Ctrl + Alt + ↓\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"backward\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move to Back\",\r\n                    shortcut: \"Ctrl + ↓\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"back\", true);\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    menu.push(shortcutSection);\r\n\r\n    let sectionSection = [];\r\n    if (item.props.isSection) {\r\n        if (item.props.isVerticalSection) {\r\n            sectionSection.push({\r\n                name: \"Move Left\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveLeft(item.props.id);\r\n                },\r\n            });\r\n            sectionSection.push({\r\n                name: \"Move Right\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveRight(item.props.id);\r\n                },\r\n            });\r\n        } else {\r\n            sectionSection.push({\r\n                name: \"Move Up\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveUp(item.props.id);\r\n                },\r\n            });\r\n            sectionSection.push({\r\n                name: \"Move Down\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveDown(item.props.id);\r\n                },\r\n            });\r\n        }\r\n    }\r\n    menu.unshift(sectionSection);\r\n\r\n    let masterSection = [\r\n    ];\r\n\r\n    return <ContextMenu\r\n        menu={menu}\r\n        onClose={onClose}\r\n        clientX={e.clientX}\r\n        clientY={e.clientY}\r\n    />\r\n}\r\n\r\nexport function isHideInBreakpoint(item) {\r\n    if (!item)\r\n        return false;\r\n\r\n    if (typeof item.getCompositeFromData(\"style\").display === 'string')\r\n        return item.getCompositeFromData(\"style\").display.includes(\"none\");\r\n\r\n    return false;\r\n}\r\n\r\nexport function isSameFamily(item1, item2) {\r\n    if (item1.props.tagName === item2.props.tagName)\r\n        return true;\r\n\r\n    if (item1.props.griddata.isSection && item2.props.griddata.isSection)\r\n        return true;\r\n}\r\n\r\nexport function isLeftClick (e) {\r\n    if (e.button === 0)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport function isRightClick (e) {\r\n    if (e.button === 2)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport function getResizeDelta (degree, dir, delta) {\r\n    let rad = degree * Math.PI / 180;\r\n    let cx = delta.x, cy = delta.y;\r\n    let cxy = Math.sqrt(cx * cx + cy * cy);\r\n    let cxp = cy !== 0 ? cy / Math.tan(rad) : 0;\r\n    let cyp = cx !== 0 ? -cx / Math.tan(rad) : 0;\r\n\r\n    let thetaH = Math.atan(Math.abs(cy) / Math.abs(cx));\r\n    let thetaW = Math.atan(Math.abs(cy) / Math.abs(cx));\r\n\r\n    if (cx * cy > 0)\r\n        thetaW = -thetaW;\r\n    if (cx * cy > 0)\r\n        thetaH = -thetaH;\r\n\r\n    let Dh = Math.abs(Math.sin(rad + thetaH) * cxy);\r\n    let Dw = Math.abs(Math.cos(rad + thetaW) * cxy);\r\n\r\n    if (cxp < cx)\r\n        Dh = -Dh;\r\n    if (cyp > cy)\r\n        Dw = -Dw;\r\n\r\n    if (degree > 180) {\r\n        Dh = -Dh;\r\n        Dw = -Dw;\r\n    }\r\n\r\n    let dxH = Dh * Math.sin(rad);\r\n    let dyH = Dh * Math.cos(rad);\r\n    let dxW = Dw * Math.cos(rad);\r\n    let dyW = Dw * Math.sin(rad);\r\n\r\n    let finalDelta = {\r\n        top: 0, left: 0, width: 0, height: 0\r\n    };\r\n\r\n    if (dir.includes('n')) {\r\n        finalDelta.height -= Dh;\r\n        finalDelta.top += ((Dh + dyH) / 2);\r\n        finalDelta.left -= (dxH / 2);\r\n    }\r\n\r\n    if (dir.includes('s')) {\r\n        finalDelta.height += Dh;\r\n        finalDelta.top -= ((Dh - dyH) / 2);\r\n        finalDelta.left -= (dxH / 2);\r\n    }\r\n\r\n    if (dir.includes('w')) {\r\n        finalDelta.width -= Dw;\r\n        finalDelta.top += (dyW / 2);\r\n        finalDelta.left += ((Dw + dxW) / 2);\r\n    }\r\n\r\n    if (dir.includes('e')) {\r\n        finalDelta.width += Dw;\r\n        finalDelta.top += (dyW / 2);\r\n        finalDelta.left -= ((Dw - dxW) / 2);\r\n    }\r\n\r\n    console.log(\"finalDelta\", finalDelta, Dw, dyW, dxW);\r\n    return finalDelta;\r\n}\r\n\r\nexport function sortBy (array, param) {\r\n    array = array.sort((a, b) => {\r\n        if (a[param] < b[param]) {\r\n            return -1;\r\n        } else if (a[param] === b[param]) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    });\r\n    return array;\r\n}\r\n\r\nexport function getColorScheme (baseColor) {\r\n    return {\r\n        \"1\": chroma(baseColor).luminance(0.025).css(),\r\n        \"2\": chroma(baseColor).luminance(0.06).css(),\r\n        \"3\": chroma(baseColor).luminance(0.15).css(),\r\n        \"4\": chroma(baseColor).luminance(0.35).css(),\r\n        \"5\": chroma(baseColor).luminance(0.55).css(),\r\n    }\r\n}\r\n\r\nexport function parseColor (color, alpha, editorContext) {\r\n    if (!color) {\r\n        color = '#000000';\r\n        alpha = alpha || 0;\r\n    }\r\n\r\n    if (color instanceof Object) {\r\n        let chromaColor = chroma(editorContext.getColor(color.paletteName, color.key));\r\n        if (alpha !== undefined || color.alpha !== undefined)\r\n            chromaColor = chromaColor.alpha(alpha || color.alpha);\r\n        else\r\n            chromaColor = chromaColor.alpha(1);\r\n\r\n        return chromaColor.css();\r\n    } else {\r\n        let chromaColor = chroma(color);\r\n        // chromaColor = chromaColor.alpha(alpha || 1);\r\n        if (alpha !== undefined)\r\n            chromaColor = chromaColor.alpha(alpha);\r\n        return chromaColor.css();\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class NumberInputWithUnit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    inputFilter = (value, oldValue) => {\r\n        let okay = false;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (!isNaN(value))\r\n                okay = true;\r\n        } catch {}\r\n        if (okay) {\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\" || isNaN(value)) {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (value.endsWith(\".\"))\r\n            value += \"0\";\r\n        value = this.inputFilter(value, this.getValue(this.props.value));\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    onShowUnits = (e) => {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    getValue = (value) => {\r\n        if (!value)\r\n            return \"\";\r\n\r\n        if (typeof value !== 'string')\r\n            return value;\r\n\r\n        if (value.includes(\"%\")) {\r\n            return Math.round(parseFloat(value.replace(\"%\", \"\")) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return Math.round(parseFloat(value.replace(\"px\", \"\")) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return Math.round(parseFloat(\r\n                value.replace(/[^0-9\\.]/g, '')\r\n            ) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return Math.round(parseFloat(\r\n                value.replace(/[^0-9\\.]/g, '')\r\n            ) * 10) / 10;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let classes = classNames(\r\n            \"NumberInputWithUnit\",\r\n            this.props.className\r\n        );\r\n\r\n        return (\r\n            <div className={classes}>\r\n                <input\r\n                    style={{...{\r\n                        textAlign: \"left\",\r\n                        width: 64\r\n                    }, ...this.props.inputStyle}}\r\n                    className=\"NumberInput\"\r\n                    value={![\"%\", \"px\", \"vw\", \"vh\", \"°\"].includes(this.props.unit) ? \"\" :\r\n                        (this.getValue(this.props.value) || 0)}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    disabled={![\"%\", \"px\", \"vw\", \"vh\", \"°\"].includes(this.props.unit) || this.props.disabled}\r\n                >\r\n                </input>\r\n\r\n                <IconButton\r\n                    ref={this.unitIconButton}\r\n                    className=\"InputUnitButton\"\r\n                    buttonBaseStyle={{\r\n                        marginLeft: 0,\r\n                    }}\r\n                    imageContainerStyle={{\r\n                        padding: 6\r\n                    }}\r\n                    onClick={!this.props.disabled ? this.onShowUnits : undefined}\r\n                    style={this.props.unitButtonStyle}\r\n                    disabled={this.props.disableUnit}\r\n                >\r\n                    <span style={{\r\n                        color: \"#0a108b\"\r\n                    }}>\r\n                        {this.props.unit || \"none\"}\r\n                    </span>\r\n                </IconButton>\r\n\r\n                <Menu\r\n                    style={{...{\r\n                            zIndex: 99999999999\r\n                        }, ...this.props.unitMenuStyle}}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.units.map((unit, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onUnitChange)\r\n                                            this.props.onUnitChange(unit);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                >\r\n                                    <span style={{\r\n                                        color: \"#0a108b\"\r\n                                    }}>\r\n                                        {unit}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n\r\n                {\r\n                    this.props.disabled &&\r\n                    <div\r\n                        className=\"NumberInputWithUnitDisabled\"\r\n                        style={{...{\r\n                                textAlign: \"left\",\r\n                                width: 64\r\n                            }, ...this.props.inputStyle}}\r\n                    >\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: props.defaultOpen || false\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ButtonBase className=\"InspectorOptionTitle\" onClick={(e) => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(!this.state.open);\r\n                this.setState({open: !this.state.open});\r\n            }}>\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n\r\n                    <div className=\"InspectorOptionTitleExpandIcon\">\r\n                        {\r\n                            this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/down-arrow.svg'} />\r\n                        }\r\n                        {\r\n                            !this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/right-arrow.svg'} />\r\n                        }\r\n                    </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue,\r\n    getViewRatioStyle,\r\n    setNewSize\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorSize extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let oldValue = item.getCompositeFromData(\"style\")[prop];\r\n        if ([\"%\", \"px\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n        } else if ([\"vh\", \"vw\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n            value = getViewRatioStyle(value);\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    onUnitChange = (prop, unit, parentValue, defaultValue) => {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n\r\n        if (isNaN(defaultValue))\r\n            defaultValue = 0;\r\n\r\n        let value;\r\n        if (unit === \"px\") {\r\n            value = `${item.getSize(false)[prop] ||\r\n            getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            parentValue * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n            value = getViewRatioStyle(value);\r\n        } else if (unit === \"vw\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n            value = getViewRatioStyle(value);\r\n        } else if (unit === \"none\") {\r\n            value = undefined;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value || value === \"unset\")\r\n            return \"none\";\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return \"px\";\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return \"vw\";\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return \"vh\";\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    runtimeValueToStyleValue = (propName, parentValue, value, style,) => {\r\n        let unit = this.getUnit(style[propName]);\r\n        let {item} = this.props;\r\n\r\n        if (unit === \"px\") {\r\n            value = `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${value /\r\n            parentValue * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${value / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n            value = `calc(${value} * var(--vh-ratio))`;\r\n        } else if (unit === \"vw\") {\r\n            value = `${value / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n            value = `calc(${value} * var(--vw-ratio))`;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n        let runtimeStyle = item.state.runtimeStyle;\r\n        let runtimeGridItemStyle = item.getRuntimeGridItemStyle() || {\r\n            widthForPercent: item.props.breakpointmanager.getWindowWidth(),\r\n            heightForPercent: item.props.breakpointmanager.getWindowHeight(),\r\n        };\r\n        return (\r\n            <>\r\n                <InspectorTitle defaultOpen title=\"Size\" onChange={(open)=>{\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorSizeRow\">\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Width\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('width')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"width\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.width}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"width\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        this.onUnitChange(\"width\", unit, parentRect.scrollWidthMinusPadding);\r\n                                    }}\r\n                                    units={this.props.widthUnits}\r\n                                    unit={this.getUnit(style.width)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Height\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('height')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"height\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.height}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"height\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        this.onUnitChange(\"height\", unit, parentRect.scrollHeightMinusPadding);\r\n                                    }}\r\n                                    units={this.props.heightUnits}\r\n                                    unit={this.getUnit(style.height)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"InspectorSizeRow\">\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min W\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('minWidth')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"minWidth\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.minWidth}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"minWidth\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 1;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let width = getPxValueFromCSSValue(style.width, parentRect.scrollWidthMinusPadding, item);\r\n                                        let maxWidth = getPxValueFromCSSValue(style.maxWidth, parentRect.scrollWidthMinusPadding, item);\r\n                                        if (isNaN(width) && !isNaN(maxWidth))\r\n                                            defaultValue = maxWidth;\r\n                                        else if (!isNaN(width) && isNaN(maxWidth))\r\n                                            defaultValue = width;\r\n                                        else if (!isNaN(width) && !isNaN(maxWidth))\r\n                                            defaultValue = Math.min(width, maxWidth);\r\n\r\n                                        this.onUnitChange(\"minWidth\", unit, parentRect.scrollWidthMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.minWidthUnits}\r\n                                    unit={this.getUnit(style.minWidth)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min H\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('minHeight')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"minHeight\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.minHeight}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"minHeight\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 1;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let height = getPxValueFromCSSValue(style.height, parentRect.scrollHeightMinusPadding, item);\r\n                                        let maxHeight = getPxValueFromCSSValue(style.maxHeight, parentRect.scrollHeightMinusPadding, item);\r\n                                        if (isNaN(height) && !isNaN(maxHeight))\r\n                                            defaultValue = maxHeight;\r\n                                        else if (!isNaN(height) && isNaN(maxHeight))\r\n                                            defaultValue = height;\r\n                                        else if (!isNaN(height) && !isNaN(maxHeight))\r\n                                            defaultValue = Math.min(height, maxHeight);\r\n\r\n                                        this.onUnitChange(\"minHeight\", unit, parentRect.scrollHeightMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.minHeightUnits}\r\n                                    unit={this.getUnit(style.minHeight)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"InspectorSizeRow\" style={{\r\n                            marginBottom: 0\r\n                        }}>\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max W\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('maxWidth')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"maxWidth\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.maxWidth}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"maxWidth\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 200;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let width = getPxValueFromCSSValue(style.width, parentRect.scrollWidthMinusPadding, item);\r\n                                        let minWidth = getPxValueFromCSSValue(style.minWidth, parentRect.scrollWidthMinusPadding, item);\r\n                                        if (isNaN(width) && !isNaN(minWidth))\r\n                                            defaultValue = minWidth;\r\n                                        else if (!isNaN(width) && isNaN(minWidth))\r\n                                            defaultValue = width;\r\n                                        else if (!isNaN(width) && !isNaN(minWidth))\r\n                                            defaultValue = Math.max(width, minWidth);\r\n\r\n                                        this.onUnitChange(\"maxWidth\", unit, parentRect.scrollWidthMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.maxWidthUnits}\r\n                                    unit={this.getUnit(style.maxWidth)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max H\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('maxHeight')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"maxHeight\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.maxHeight}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"maxHeight\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 200;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let height = getPxValueFromCSSValue(style.height, parentRect.scrollHeightMinusPadding, item);\r\n                                        let minHeight = getPxValueFromCSSValue(style.minHeight, parentRect.scrollHeightMinusPadding, item);\r\n                                        if (isNaN(height) && !isNaN(minHeight))\r\n                                            defaultValue = minHeight;\r\n                                        else if (!isNaN(height) && isNaN(minHeight))\r\n                                            defaultValue = height;\r\n                                        else if (!isNaN(height) && !isNaN(minHeight))\r\n                                            defaultValue = Math.max(height, minHeight);\r\n\r\n                                        this.onUnitChange(\"maxHeight\", unit, parentRect.scrollHeightMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.maxHeightUnits}\r\n                                    unit={this.getUnit(style.maxHeight)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspectorSize.defaultProps = {\r\n    disabledProps: []\r\n};\r\n","import Switch from \"@material-ui/core/Switch/Switch\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst DockSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 42,\r\n        height: 10,\r\n        padding: 4,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 0,\r\n        color: \"#d2d2d2\",\r\n        '&$checked': {\r\n            transform: 'translateX(28px) scale(1)',\r\n            color: \"#849dff\",\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: \"#849dff\",\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 10,\r\n        height: 10,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: \"#a2a2a2\",\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n\r\nexport default DockSwitch;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue,\r\n    getUnitFromStyleValue,\r\n    setGridItemStyle,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport DockSwitch from \"./DockSwitch\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorPosition extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onDockActiveChange = (side, value) => {\r\n        let {item} = this.props;\r\n        let oldDocks = cloneObject(item.getFromData(\"docks\") || {});\r\n\r\n        oldDocks[side] = value;\r\n        if (side === \"top\" && value) {\r\n            oldDocks.bottom = false;\r\n        }\r\n        if (side === \"bottom\" && value) {\r\n            oldDocks.top = false;\r\n        }\r\n\r\n        item.setDocks(oldDocks.top, oldDocks.left, oldDocks.bottom, oldDocks.right,\r\n            item.getFromTempData(\"autoDeck\"));\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n    };\r\n\r\n    onDockAutoChange = () => {\r\n        let {item} = this.props;\r\n        setTempData(\"autoDock\", !item.getFromTempData(\"autoDock\"), item, true);\r\n    };\r\n\r\n    onUnitChange = (prop, parentProp, unit) => {\r\n        let {item} = this.props;\r\n        let gridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let compositeGridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        if (!gridItemStyle)\r\n            gridItemStyle = {};\r\n\r\n        let parentRect = item.props.parent.getSize(false);\r\n        let value = getPxValueFromCSSValue(compositeGridItemStyle[prop], parentRect.scrollWidthMinusPadding, item);\r\n\r\n        if (unit === \"px\") {\r\n            gridItemStyle[prop] = `${value}${unit}`;\r\n        } else if (unit === \"%\") {\r\n            // let runtimeGridItemStyle = item.getRuntimeGridItemStyle();\r\n            gridItemStyle[prop] = `${value / parentRect.scrollWidthMinusPadding * 100}${unit}`;\r\n        }\r\n\r\n        setGridItemStyle(gridItemStyle, item, true);\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n    };\r\n\r\n    onValueChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let gridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let compositeGridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        if (!gridItemStyle)\r\n            gridItemStyle = {};\r\n        gridItemStyle[prop] = `${value}${getUnitFromStyleValue(compositeGridItemStyle[prop])}`;\r\n\r\n        setGridItemStyle(gridItemStyle, item, true);\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n        item.props.select.updateResizePanes(item, item.getSize(false));\r\n    };\r\n\r\n    runtimeValueToStyleValue = (propName, parentValue, value, style) => {\r\n        if (!style)\r\n            return;\r\n\r\n        let unit = getUnitFromStyleValue(style[propName]);\r\n        let {item} = this.props;\r\n\r\n        if (unit === \"px\") {\r\n            value = `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${value /\r\n            parentValue * 100}%`;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let docks = item.getCompositeFromData(\"docks\");\r\n        let auto = item.getFromTempData(\"autoDock\");\r\n        let gridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        let runtimeStyle = item.state.runtimeStyle;\r\n        let runtimeGridItemStyle = item.getRuntimeGridItemStyle();\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Position\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorDockingRoot\">\r\n                            <span className=\"InspectorDockingRootTitle\">\r\n                                Docking\r\n                            </span>\r\n\r\n                            <div className=\"InspectorDockingDocks\">\r\n                                <div className=\"InspectorDockingLeft\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch\"\r\n                                        checked={docks.left || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('left', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingRight\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch\"\r\n                                        checked={docks.right || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('right', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingTop\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch90\"\r\n                                        checked={docks.top || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('top', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingBottom\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch90\"\r\n                                        checked={docks.bottom || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('bottom', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    auto &&\r\n                                    <div className=\"InspectorDockingDisable\"/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"InspectorOverflowDir\">\r\n                        <span className=\"InspectorOverflowDirTitle\">\r\n                            Auto docking\r\n                        </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={auto || false}\r\n                                onChange={(e) => {\r\n                                    this.onDockAutoChange();\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"InspectorOverflowMarginRoot\">\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.top || auto}\r\n                                value={docks.top && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginTop : gridItemStyle.marginTop)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginTop\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginTop\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={\r\n                                    docks.top &&\r\n                                    getUnitFromStyleValue(\r\n                                        runtimeStyle && runtimeGridItemStyle ?\r\n                                            runtimeGridItemStyle.marginTop : gridItemStyle.marginTop)\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.left || auto}\r\n                                value={docks.left && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginLeft : gridItemStyle.marginLeft)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginLeft\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginLeft\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.left &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginLeft : gridItemStyle.marginLeft)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.bottom || auto}\r\n                                value={docks.bottom && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginBottom : gridItemStyle.marginBottom)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginBottom\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginBottom\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.bottom &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginBottom : gridItemStyle.marginBottom)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.right || auto}\r\n                                value={docks.right && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginRight : gridItemStyle.marginRight)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginRight\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginRight\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.right &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginRight : gridItemStyle.marginRight)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\n\r\nexport default class DropDown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    onChange = (option) => {\r\n        this.props.onChange(option);\r\n    };\r\n\r\n    getValue = () => {\r\n        if (this.props.valueRenderer) {\r\n            return this.props.valueRenderer(this.props.value) ||\r\n                (this.props.renderer && this.props.renderer(this.props.value)) ||\r\n                this.props.value || \"\";\r\n        } else {\r\n            return this.props.value || \"\";\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"DropDownRoot\" style={this.props.rootStyle}>\r\n                <span\r\n                    className=\"DropDownSpan\"\r\n                    style={{...this.props.spanStyle, ...{\r\n                        cursor: \"pointer\"\r\n                    }}}\r\n                    onClick={this.onClick}\r\n                >\r\n                    {this.getValue()}\r\n                </span>\r\n\r\n                <Menu\r\n                    style={{...{\r\n                            zIndex: 99999999999\r\n                        }, ...this.props.menuStyle}}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0,\r\n                            width: this.props.spanStyle? this.props.spanStyle.width: \"auto\"\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.options.map((option, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onChange)\r\n                                            this.props.onChange(option);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                    style={{...(option.disabled && {\r\n                                        pointerEvents: \"none\"\r\n                                    }), ...this.props.menuItemStyle}}\r\n                                >\r\n                                    <span style={{\r\n                                        width: \"100%\"\r\n                                    }}>\r\n                                        {this.props.renderer ? this.props.renderer(option) : option}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n\r\n                <div\r\n                    className=\"DropDOwnArrow\"\r\n                >\r\n                    <img width={10} height={10} src={process.env.PUBLIC_URL + \"/static/icon/down-arrow.svg\"}/>\r\n                </div>\r\n\r\n                {\r\n                    this.props.disabled &&\r\n                    <div\r\n                        className=\"DropDOwnDisabled\"\r\n                        style={this.props.spanStyle}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class NumberInput extends React.Component {\r\n    inputFilter = (value, oldValue) => {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = parseFloat(value).toFixed(0);\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = this.inputFilter(e.target.value, this.props.value);\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className=\"NumberInput\"\r\n                value={this.props.value || 0}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport {getValueFromCSSValue, setScrollBehaviour} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInput from \"../../Menus/CommonComponents/NumberInput\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorScroll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeScrollEffect = (option) => {\r\n        let {item} = this.props;\r\n        let offsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        setScrollBehaviour(item, option, item.props.viewRef.current, false, {offsetTop});\r\n    };\r\n\r\n    onChangeOffsetTop = (offsetTop) => {\r\n        offsetTop = `${offsetTop}px`;\r\n        let {item} = this.props;\r\n        let behaviour = item.getFromData(\"scrollBehaviour\");\r\n        setScrollBehaviour(item, behaviour, item.props.viewRef.current, false, {offsetTop});\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let behaviour = item.getFromData(\"scrollBehaviour\");\r\n        let offsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Scroll\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorScrollEffect\"\r\n                             style={{\r\n                                 marginBottom: behaviour === 'sticky' ? 12 : 0\r\n                             }}\r\n                        >\r\n                            <div className=\"InspectorScrollTitle\">\r\n                                Scroll effect\r\n                            </div>\r\n\r\n                            <DropDown\r\n                                options={this.props.options || ['none', 'fixed', 'sticky']}\r\n                                onChange={this.onChangeScrollEffect}\r\n                                value={behaviour || 'none'}\r\n                                spanStyle={{\r\n                                    width: 96,\r\n                                    fontSize: 12\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            behaviour === 'sticky' &&\r\n                            <div className=\"InspectorScrollEffect\">\r\n                                <div className=\"InspectorScrollTitle\">\r\n                                    Offset top\r\n                                </div>\r\n\r\n                                <NumberInput\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    value={getValueFromCSSValue(offsetTop)}\r\n                                    onChange={this.onChangeOffsetTop}\r\n                                    inputStyle={{\r\n                                        width: 96,\r\n                                        fontSize: 12,\r\n                                        textAlign: \"left\"\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue, getStyleValueFromPx,\r\n    getUnitFromStyleValue,\r\n    setDataInBreakpoint,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorPadding extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onUnitChange = (prop, parentProp, unit) => {\r\n        let {item} = this.props;\r\n        let padding = cloneObject(item.getFromData(\"padding\")) || {};\r\n        let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n\r\n        let parentRect = item.props.parent.getSize(false);\r\n        let value = getPxValueFromCSSValue(compositePadding[prop], parentRect.width, item);\r\n\r\n        if (unit === \"px\") {\r\n            padding[prop] = `${value}${unit}`;\r\n        } else if (unit === \"%\") {\r\n            padding[prop] = `${value / item.props.parent.getSize(false).width * 100}${unit}`;\r\n        }\r\n        else if (unit === \"vh\") {\r\n            padding[prop] = `${value / item.props.breakpointmanager.getWindowHeight() * 100}${unit}`;\r\n        }\r\n        else if (unit === \"vw\") {\r\n            padding[prop] = `${value / item.props.breakpointmanager.getWindowWidth() * 100}${unit}`;\r\n        }\r\n\r\n        setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n    };\r\n\r\n    onValueChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let equalPadding = item.getFromTempData(\"equalPadding\");\r\n        let padding = cloneObject(item.getFromData(\"padding\")) || {};\r\n        let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n        padding[prop] = `${value}${getUnitFromStyleValue(compositePadding[prop] || \"px\")}`;\r\n        if (equalPadding) {\r\n            let parentRect = item.props.parent? item.props.parent.getSize(false):\r\n                {\r\n                    scrollWidthMinusPadding: item.props.breakpointmanager.getWindowWidth()\r\n                };\r\n            let pxValue = getPxValueFromCSSValue(padding[prop], parentRect.scrollWidthMinusPadding, item);\r\n            padding = {\r\n                top: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.top || \"px\"), item)}`,\r\n                left: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.left || \"px\"), item)}`,\r\n                bottom: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.bottom || \"px\"), item)}`,\r\n                right: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.right || \"px\"), item)}`,\r\n            };\r\n        }\r\n\r\n        setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n\r\n        item.invalidateSize(true, true, true, undefined, true);\r\n\r\n        window.requestAnimationFrame(() => {\r\n            item.props.select.onScrollItem();\r\n        })\r\n    };\r\n\r\n    onEqualPadding = (equalPadding) => {\r\n        let {item} = this.props;\r\n\r\n        setTempData(\"equalPadding\", equalPadding, item, true);\r\n        if (equalPadding) {\r\n            let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n\r\n            let parentRect = item.props.parent? item.props.parent.getSize(false):\r\n                {\r\n                    scrollWidthMinusPadding: item.props.breakpointmanager.getWindowWidth()\r\n                };\r\n            let max = Math.max(\r\n                getPxValueFromCSSValue(compositePadding.top, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.left, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.bottom, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.right, parentRect.scrollWidthMinusPadding, item) || 0,\r\n            );\r\n\r\n            let padding = {\r\n                top: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.top || \"px\"), item)}`,\r\n                left: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.left || \"px\"), item)}`,\r\n                bottom: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.bottom || \"px\"), item)}`,\r\n                right: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.right || \"px\"), item)}`,\r\n            };\r\n\r\n            setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n\r\n            item.invalidateSize(true, true, true, undefined, true);\r\n        }\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let padding = item.getCompositeFromData(\"padding\") || {};\r\n        let equalPadding = item.getFromTempData(\"equalPadding\") || false;\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Padding\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorOverflowMarginRoot\">\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.top || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"top\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"top\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.top || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.left || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"left\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"left\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.left || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.bottom || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"bottom\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"bottom\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.bottom || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.right || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"right\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"right\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.right || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"InspectorAdjustRotate\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Equal padding\r\n                                </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={equalPadding}\r\n                                onChange={(e) => {\r\n                                    let checked = e.target.checked;\r\n                                    this.onEqualPadding(checked);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport {setDataInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorOverflow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeState = (e, value) => {\r\n        let {item} = this.props;\r\n        let thisBpOverflowData = item.getFromData(\"overflowData\");\r\n        let compositOverflowData = item.getCompositeFromData(\"overflowData\");\r\n        if (value === 'scroll' &&\r\n            (!compositOverflowData ||\r\n            ((!compositOverflowData.overflowY || compositOverflowData.overflowY === \"hidden\")&&\r\n            (!compositOverflowData.overflowX || compositOverflowData.overflowX === \"hidden\"))))\r\n        {\r\n            let newOverflowData = cloneObject(thisBpOverflowData || {});\r\n            newOverflowData.state = 'scroll';\r\n            newOverflowData.overflowY = 'scroll';\r\n            console.log(\"onChangeState\", JSON.stringify(newOverflowData));\r\n            setDataInBreakpoint(\"overflowData\", newOverflowData, item, true, undefined, true);\r\n            return;\r\n        }\r\n\r\n        setDataInBreakpoint(\"overflowData.state\", value, item, true, undefined, true);\r\n    };\r\n\r\n    changeScrollDirection = (propName, checked) => {\r\n        let {item} = this.props;\r\n        setDataInBreakpoint(`overflowData.${propName}`, checked? 'scroll': undefined\r\n            , item, true, undefined, true);\r\n    };\r\n\r\n    onChangeAuto = (e, value) => {\r\n        let {item} = this.props;\r\n        setDataInBreakpoint(\"overflowData.auto\", value, item, true, undefined, true);\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let overflowData = item.getCompositeFromData(\"overflowData\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Overflow content\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorAnchorNameTitle\">\r\n                            Overflow\r\n                        </div>\r\n                        <ToggleButtonGroup\r\n                            className=\"InspectorOverflowType\"\r\n                            size='small'\r\n                            value={overflowData.state}\r\n                            exclusive\r\n                            onChange={this.onChangeState}\r\n                        >\r\n                            <ToggleButton value=\"show\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                        style={{\r\n                                            padding: 3\r\n                                        }}\r\n                            >\r\n                                Show\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"hide\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                          style={{\r\n                                              padding: 3\r\n                                          }}\r\n                            >\r\n                                Hide\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"scroll\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                          style={{\r\n                                              padding: 3\r\n                                          }}\r\n                            >\r\n                                Scroll\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n\r\n                        {\r\n                            overflowData.state === 'scroll' &&\r\n                            <>\r\n                                <div className=\"InspectorOverflowDir\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scroll vertically\r\n                                </span>\r\n                                    <Switch\r\n                                        className=\"InspectorOverflowDirSwitch\"\r\n                                        checked={overflowData.overflowY === \"scroll\" || overflowData.overflowY === \"auto\"}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.changeScrollDirection('overflowY', checked);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorOverflowDir\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scroll horizontally\r\n                                </span>\r\n                                    <Switch\r\n                                        className=\"InspectorOverflowDirSwitch\"\r\n                                        checked={overflowData.overflowX === \"scroll\" || overflowData.overflowX === \"auto\"}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.changeScrollDirection('overflowX', checked);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorOverflowAuto\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scrollbar visibility\r\n                                </span>\r\n                                </div>\r\n                                <ToggleButtonGroup\r\n                                    className=\"InspectorOverflowAutoToggles\"\r\n                                    size='small'\r\n                                    value={overflowData.auto || \"always\"}\r\n                                    exclusive\r\n                                    onChange={this.onChangeAuto}\r\n                                >\r\n                                    <ToggleButton value=\"hide\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Hide\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"auto\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Auto\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"always\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Show\r\n                                    </ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class TextInput extends React.Component {\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (this.props.onChange)\r\n            this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                {...this.props}\r\n                className=\"NumberInput\"\r\n                value={this.props.value || \"\"}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport TextInput from \"../../Menus/CommonComponents/TextInput\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorAnchor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onEnableAnchor = (enable) => {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        if (enable) {\r\n            item.props.anchorMan.addAnchor(item.props.id.replace(\"comp_\", ''), item);\r\n        }\r\n        else {\r\n            item.props.anchorMan.removeAnchor(anchor.id, item);\r\n        }\r\n    };\r\n\r\n    onChangeName = (newName) => {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        item.props.anchorMan.modifyAnchor(anchor.id, newName, item);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Anchor\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n\r\n                        <div className=\"InspectorOverflowDir\">\r\n                        <span className=\"InspectorOverflowDirTitle\">\r\n                            Enable Anchor\r\n                        </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={anchor !== undefined}\r\n                                onChange={(e) => {\r\n                                    this.onEnableAnchor(e.target.checked);\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            anchor &&\r\n                            <div className=\"InspectorAnchorName\">\r\n                                <div className=\"InspectorAnchorNameTitle\">\r\n                                    Anchor name\r\n                                </div>\r\n                                <TextInput\r\n                                    value={anchor.name}\r\n                                    onChange={(v) => this.onChangeName(v)}\r\n                                    inputStyle={{\r\n                                        width: \"auto\",\r\n                                        textAlign: \"left\"\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {rotate} from \"../../AwesomwGridLayoutHelper\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\n\r\nexport default class InspectorAdjustment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onRotationChange = (degree) => {\r\n        console.warn(\"onRotationChange\", degree)\r\n        let {item} = this.props;\r\n\r\n        rotate(item, degree);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let rotate = item.getFromData(\"transform.rotateDegree\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Adjust\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorAdjustRotate\">\r\n                            <span className=\"InspectorOverflowDirTitle\">\r\n                                Rotate\r\n                            </span>\r\n                            <NumberInputWithUnit\r\n                                min={0}\r\n                                max={360}\r\n                                value={rotate || 0}\r\n                                onChange={(value) => {\r\n                                    this.onRotationChange(value);\r\n                                }}\r\n                                units={[\"°\"]}\r\n                                unit={\"°\"}\r\n                                inputStyle={{\r\n                                    width: 64,\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                                disableUnit\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {assignData, cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport {getCompositeDesignData, setDataInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorPosition from \"../../Test/Inspector/InspectorPosition\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport InspectorAdjustment from \"../../Test/Inspector/InspectorAdjustment\";\r\n\r\nexport default class AGLComponent extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    resolveDesignData = () => {\r\n        // Must Override\r\n    };\r\n\r\n    getData = () => {\r\n        let componentData = this.getDefaultData && this.getDefaultData();\r\n        let componentBpData = componentData.bpData;\r\n        componentData = assignData(componentData, cloneObject(this.props.data));\r\n        if (componentBpData) {\r\n            let tempBpData = componentData.bpData;\r\n            componentData.bpData = assignData(componentBpData, tempBpData);\r\n        }\r\n\r\n        return componentData;\r\n    };\r\n\r\n    getAgl = () => {\r\n        return this.props.aglRef.current;\r\n    };\r\n\r\n    onDesignChange = (designKey, value) => {\r\n        console.log(\"onDesignChange\", designKey, value)\r\n        setDataInBreakpoint(designKey, value, this.getAgl(), true, undefined, true);\r\n        this.updateDesign(getCompositeDesignData(this.getAgl()));\r\n    };\r\n\r\n    getInspector = () => {\r\n        if (this.getInspectorOverride)\r\n            return this.getInspectorOverride();\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPosition\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAdjustment\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class MenuButton extends React.Component {\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    onClick = (e) => {\r\n        let {menu} = this.props;\r\n        this.props.select.updateMenu((typeof menu === \"function\") ? menu(e) : menu);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                {\r\n                    this.props.icon\r\n                }\r\n                {\r\n                    this.props.children\r\n                }\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport '../../HelperStyle.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class MenuBaseIndexTitle extends React.Component {\r\n    render () {\r\n        return (\r\n            <div\r\n                className=\"MenuBaseIndexTitle\"\r\n            >\r\n                <ButtonBase\r\n                    disableRipple={!this.props.onIndexClick}\r\n                    onClick={(e) => {\r\n                        this.props.onIndexClick &&\r\n                        this.props.onIndexClick(e, this.props.title, this.props.index)\r\n                    }}\r\n                >\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n                </ButtonBase>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst LightTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#fff\",\r\n        color: '#000000',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 14,\r\n    },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip\r\n\r\nexport const LightMenuTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#fff\",\r\n        color: '#000000',\r\n        boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n        fontSize: 14,\r\n        padding: 0\r\n    },\r\n}))(Tooltip);\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport Draggable from 'react-draggable';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport '../../HelperStyle.css';\r\nimport MenuBaseIndexTitle from \"./MenuBaseIndexTitle\";\r\nimport LightTooltip from \"../../Components/Containers/Menus/Components/LightTooltip\";\r\n\r\nexport default class MenuBase extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedIndexNo: props.defaultIndexNo\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        this.props.select.updateMenu();\r\n    };\r\n\r\n    onIndexClick = (e, key, selectedIndexNo) => {\r\n        this.setState({selectedIndexNo})\r\n    };\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Draggable\r\n                handle=\".MenuBaseHeaderTitle\"\r\n                bounds=\"parent\"\r\n                defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n            >\r\n                <div\r\n                    className=\"MenuBaseRoot\"\r\n                    style={this.props.styles.root}\r\n                >\r\n                    {/*Header*/}\r\n                    <div\r\n                        className=\"MenuBaseHeaderContainer\"\r\n                    >\r\n                        <span className=\"MenuBaseHeaderTitle\">\r\n                            {this.props.menuTitle || \"Menu Title\"}\r\n                        </span>\r\n\r\n                        <IconButton\r\n                            onClick={this.close}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={16}\r\n                                height={16}\r\n                                src={require('../../icons/close.svg')}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                    {/*Body*/}\r\n                    <div\r\n                        className=\"MenuBaseBodyContainer\"\r\n                    >\r\n                        <div className=\"MenuBaseBodyIndex\">\r\n                            {\r\n                                this.props.index.map((indexData, i) => {\r\n                                    return (\r\n                                        <LightTooltip\r\n                                            key={i}\r\n                                            title={indexData.key}\r\n                                            PopperProps={{\r\n                                                style: {\r\n                                                    zIndex: 999999999999999\r\n                                                }\r\n                                            }}\r\n                                            placement=\"right\"\r\n                                        >\r\n                                            <div\r\n                                                key={i}\r\n                                                style={{\r\n                                                    backgroundColor: this.state.selectedIndexNo === i &&\r\n                                                        'rgba(115, 115, 115, 0.36)'\r\n                                                }}\r\n                                            >\r\n                                                <IconButton\r\n                                                    key={indexData.key}\r\n                                                    onClick={(e) => {\r\n                                                        this.onIndexClick(e, indexData.key, i);\r\n                                                    }}\r\n                                                    buttonBaseStyle={{\r\n                                                        marginLeft: 0\r\n                                                    }}\r\n                                                >\r\n                                                    {indexData.icon}\r\n                                                </IconButton>\r\n                                            </div>\r\n                                        </LightTooltip>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"MenuBaseBodyOptions\">\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                <MenuBaseIndexTitle\r\n                                    index={this.state.selectedIndexNo}\r\n                                    key={this.props.options[this.state.selectedIndexNo].key}\r\n                                    title={this.props.options[this.state.selectedIndexNo].key}\r\n                                />\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                this.props.options[this.state.selectedIndexNo].render\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo === undefined &&\r\n                                this.props.options.map((option, i) => {\r\n                                    return (\r\n                                        <MenuBaseIndexTitle\r\n                                            index={i}\r\n                                            key={option.key}\r\n                                            title={option.key}\r\n                                            onIndexClick={this.onIndexClick}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nMenuBase.defaultProps = {\r\n    styles: {}\r\n};\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport RCSlider from 'rc-slider';\r\n\r\nexport default class Slider extends React.Component {\r\n    render () {\r\n        return (\r\n            <RCSlider\r\n                {...this.props}\r\n                min={this.props.min}\r\n                max={this.props.max}\r\n                step={this.props.step}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInputControlled extends React.Component {\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 24 }}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                    handleStyle={{\r\n                        marginLeft: 7\r\n                    }}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class Image extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            src: props.src,\r\n            hasError: false,\r\n        };\r\n    }\r\n\r\n    onError = (e) => {\r\n        if (!this.state.hasError) {\r\n            let {errorsrc} = this.props;\r\n            this.setState({\r\n                src: errorsrc,\r\n                hasError: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <img\r\n                {...this.props}\r\n                // onError={this.onError}\r\n                src={this.state.src/* || this.props.errorsrc*/}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends React.Component {\r\n    componentWillUnmount() {\r\n        if (this.defaultNode) {\r\n            document.body.removeChild(this.defaultNode);\r\n        }\r\n        this.defaultNode = null;\r\n    }\r\n\r\n    canUseDOM = !!(\r\n        typeof window !== 'undefined' &&\r\n        window.document &&\r\n        window.document.createElement\r\n    );\r\n\r\n    render() {\r\n        if (!this.canUseDOM) {\r\n            return null;\r\n        }\r\n        let node = this.props.node;\r\n        if (this.props.disabled) {\r\n            return this.props.children;\r\n        }\r\n        if (this.props.nodeId) {\r\n            node = document && document.getElementById(this.props.nodeId);\r\n        }\r\n        if (!node && !this.defaultNode) {\r\n            this.defaultNode = document.createElement('div');\r\n            document.body.appendChild(this.defaultNode);\r\n        }\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            node || this.defaultNode\r\n        );\r\n    }\r\n}\r\n\r\nPortal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    node: PropTypes.any\r\n};\r\n\r\nexport default Portal;\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport './ThemeColorPicker.css';\r\n// import {SketchPicker} from \"react-color\";\r\nimport SketchPicker from \"react-color/lib/components/sketch/Sketch\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class HexColorPicker extends React.Component {\r\n    onChangeComplete = (color) => {\r\n        this.props.onChangeComplete(color.hex);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Portal node={document.body}>\r\n                <div style={ {\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                    zIndex: 999999999999\r\n                }} onClick={ this.props.onClose }/>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    left: \"50%\",\r\n                    top: \"50%\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                    zIndex: 999999999999\r\n                }}>\r\n                    <SketchPicker\r\n                        color={this.props.color}\r\n                        onChangeComplete={ this.onChangeComplete }\r\n                        disableAlpha={this.props.disableAlpha}\r\n                        width={this.props.width || 224}\r\n                    />\r\n                </div>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport './ThemeColorPicker.css';\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport Draggable from \"react-draggable\";\r\nimport Portal from \"../../Portal\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport chroma from \"chroma-js\";\r\nimport HexColorPicker from \"./HexColorPicker\";\r\nimport {parseColor} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nconst colorKeys = [\r\n    \"1\",\"2\",\"3\",\"4\",\"5\",\r\n];\r\n\r\nexport default class ThemeColorPicker extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: props.color\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    onSelectColor = (color) => {\r\n        this.setState({color});\r\n        this.props.onChangeComplete && this.props.onChangeComplete(color);\r\n    };\r\n\r\n    onAddColor = (color) => {\r\n        let siteData = this.context.siteData;\r\n        if (!siteData.myColors.find(c => c === color))\r\n            siteData.myColors.unshift(color);\r\n\r\n        siteData.myColors = siteData.myColors.slice(0, 17);\r\n\r\n        this.onSelectColor(color);\r\n        this.context.update();\r\n    };\r\n\r\n    onAddColorClick = () => {\r\n        this.setState({addColor: true});\r\n    };\r\n\r\n    render() {\r\n        let {editor} = this.context;\r\n        let siteData = this.context.siteData;\r\n        let themeColorCategoryItems = siteData.theme.Colors.items;\r\n        return (\r\n            <Portal node={document.body}>\r\n                <div style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                    zIndex: 999999999999999\r\n                }}>\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        top: '0px',\r\n                        right: '0px',\r\n                        bottom: '0px',\r\n                        left: '0px',\r\n                    }} onClick={ (e) => this.props.onClose && this.props.onClose() }/>\r\n\r\n                    <Draggable\r\n                        handle=\".ThemeColorPickerHeaderTitle\"\r\n                        bounds=\"parent\"\r\n                        defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n                    >\r\n                        <div className=\"ThemeColorPickerRoot\"\r\n                             style={{\r\n                                 zIndex: 99999999999999999,\r\n                             }}>\r\n                            <div className=\"ThemeColorPickerHeaderRoot\">\r\n                                <div className=\"ThemeColorPickerHeaderTitle\">\r\n                                    Color Picker\r\n                                </div>\r\n\r\n                                <IconButton\r\n                                    onClick={(e) => this.props.onClose && this.props.onClose()}\r\n                                    className=\"ThemeColorPickerHeaderClose\"\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={require('../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                Site Colors\r\n                                <div className=\"ThemeColorPickerSiteColorEdit\">\r\n                                    Edit\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorGrid\">\r\n                                {\r\n                                    colorKeys.map(key => {\r\n                                        return (\r\n                                            Object.values(themeColorCategoryItems).map(item => {\r\n                                               return (\r\n                                                   <div\r\n                                                       key={item.name + key}\r\n                                                       className={`ThemeColorPickerSiteColorItem ${\r\n                                                           parseColor(this.state.color, undefined, this.context) ===\r\n                                                           this.context.getColor(item.name, key) ?\r\n                                                               \"ThemeColorPickerSiteColorItemSelected\": ''\r\n                                                           }`}\r\n                                                       style={{\r\n                                                           backgroundColor:\r\n                                                               this.context.getColor(item.name, key)\r\n                                                       }}\r\n                                                       onClick={(e) => {\r\n                                                           this.onSelectColor(\r\n                                                               {\r\n                                                                   paletteName: item.name,\r\n                                                                   key: key\r\n                                                               }\r\n                                                           )\r\n                                                       }}\r\n                                                   >\r\n\r\n                                                   </div>\r\n                                               )\r\n                                            })\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                My Colors\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerMyColorGrid\">\r\n                                <div className=\"ThemeColorPickerMyColorItemAdd\" onClick={this.onAddColorClick}>\r\n                                    <Image\r\n                                        width={10}\r\n                                        height={10}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/add.svg'}\r\n                                    />\r\n                                </div>\r\n\r\n                                {\r\n                                    Object.values(siteData.myColors).map(color => {\r\n                                        return (\r\n                                            <div className={`ThemeColorPickerMyColorItem ${\r\n                                                    this.state.color === color ?\r\n                                                        \"ThemeColorPickerMyColorItemSelected\": ''\r\n                                                    }`}\r\n                                                 key={color}\r\n                                                 style={{\r\n                                                backgroundColor: color\r\n                                            }}\r\n                                                 onClick={(e) => {\r\n                                                     this.onSelectColor(\r\n                                                         color\r\n                                                     )\r\n                                                 }}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                <div className=\"ThemeColorPickerSiteColorHexTitle\">\r\n                                    <div className=\"ThemeColorPickerSiteColorHexAddColor\" onClick={this.onAddColorClick}>\r\n                                        Add Color\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"ThemeColorPickerSiteColorHex\">\r\n                                    {chroma(parseColor(this.state.color, 1, this.context)).hex()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Draggable>\r\n\r\n                    {/*{\r\n                        this.state.addColor &&\r\n                        <>\r\n                            <div style={ {\r\n                                position: 'fixed',\r\n                                top: '0px',\r\n                                right: '0px',\r\n                                bottom: '0px',\r\n                                left: '0px',\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.2)'\r\n                            }} onClick={ () => this.setState({addColor: undefined}) }/>\r\n                            <div style={{\r\n                                position: 'absolute',\r\n                                left: \"50%\",\r\n                                top: \"50%\",\r\n                                transform: \"translate(-50%, -50%)\",\r\n                                zIndex: '2',\r\n                            }}>\r\n                                <SketchPicker\r\n                                    color={this.state.color}\r\n                                    onChangeComplete={ this.onAddColor }\r\n                                    disableAlpha={this.props.disableAlpha}\r\n                                    width={224}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    }*/}\r\n                    {\r\n                        this.state.addColor &&\r\n                        <HexColorPicker\r\n                            onClose={() => this.setState({addColor: undefined})}\r\n                            color={this.state.color}\r\n                            onChangeComplete={ this.onAddColor }\r\n                            disableAlpha={this.props.disableAlpha}\r\n                            width={224}\r\n                        />\r\n                    }\r\n                </div>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport SliderInputControlled from \"./SliderInputControlled\";\r\nimport ThemeColorPicker from \"../../Test/Theme/ThemeColorPicker\";\r\nimport chroma from \"chroma-js\";\r\nimport {parseColor} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ColorPicker extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.lastValue = props.color || 'rgba(0,0,0,0)';\r\n    }\r\n\r\n    getRgbA = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if (value instanceof Object) {\r\n            value = this.context.getColor(value.paletteName, value.key);\r\n        }\r\n\r\n        let color = chroma(value);\r\n        return {\r\n            r: color.rgba()[0],\r\n            g: color.rgba()[1],\r\n            b: color.rgba()[2],\r\n            a: color.rgba()[3]\r\n        }\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        if (this.state.displayColorPicker)\r\n            this.setState({ displayColorPicker: false });\r\n        else\r\n            this.setState({ displayColorPicker: e.target })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        if (color instanceof Object) {\r\n            console.log(\"handlehangeComplete1 this.lastValue\", this.lastValue, parseColor(this.lastValue, this.lastValue.alpha, this.context));\r\n            color.alpha = chroma(parseColor(this.lastValue, this.lastValue.alpha, this.context)).alpha();\r\n            console.log(\"handlehangeComplete1 alpha\", color.alpha);\r\n            this.lastValue = color;\r\n            // color.alpha = chroma(parseColor(color, undefined, this.context)).alpha();\r\n            this.props.onDesignChange(this.props.designKey, color);\r\n            return;\r\n        }\r\n\r\n        console.log(\"handleChangeComplete\", this.getColorAndAlpha().alpha)\r\n        let alpha = this.getColorAndAlpha().alpha || 100;\r\n\r\n        let value = this.lastValue = chroma(color).alpha(alpha / 100).css();\r\n\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n    };\r\n\r\n    getColorAndAlpha = () => {\r\n        let result = {\r\n            color: chroma(parseColor(this.props.color, 1, this.context)).alpha(0).hex(),\r\n            alpha: chroma(parseColor(this.props.color, this.props.color && this.props.color.alpha, this.context)).alpha() * 100\r\n        };\r\n\r\n        return result;\r\n    };\r\n\r\n    handleAlphaChange = (alpha) => {\r\n        if (this.lastValue instanceof Object) {\r\n            this.lastValue.alpha = alpha / 100;\r\n        } else {\r\n            this.lastValue = chroma(this.lastValue).alpha(alpha / 100).css();\r\n        }\r\n        this.props.onDesignChange(this.props.designKey, this.lastValue);\r\n    };\r\n\r\n    render () {\r\n        let {color, alpha} = this.getColorAndAlpha();\r\n        return (\r\n                <div className=\"CommonMenuRoot ColorPickerRoot\">\r\n                    <ButtonBase\r\n                        style={{\r\n                            background: `url(${process.env.PUBLIC_URL}'/static/icon/transparency.png')`,\r\n                        }}\r\n                        className=\"ColorPickerRGB\"\r\n                        onClick={ this.handleClick }\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                background: parseColor(this.props.color, alpha/100, this.context),\r\n                            }}\r\n                        />\r\n                    </ButtonBase>\r\n\r\n                    <div\r\n                        className=\"ColorPickerAlpha\"\r\n                    >\r\n                        <SliderInputControlled\r\n                            min={0}\r\n                            max={100}\r\n                            value={alpha || 0}\r\n                            onChange={this.handleAlphaChange}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.displayColorPicker &&\r\n                            <ThemeColorPicker\r\n                                color={color}\r\n                                onClose={this.handleClose}\r\n                                onChangeComplete={ this.handleChangeComplete }\r\n                                disableAlpha\r\n                                editor={this.props.editor}\r\n                                defaultPosition={\r\n                                    this.state.displayColorPicker.getBoundingClientRect()\r\n                                }\r\n                            />\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nexport default class Background extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Background</p>\r\n\r\n                <ColorPicker\r\n                    color={this.props.color}\r\n                    designKey={this.props.designKey}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.editor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class Divider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"Divider\" style={this.props.style}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 24 }}\r\n                    step={this.props.step}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value || 0}\r\n                    onChange={this.onChange}\r\n                    handleStyle={{\r\n                        marginLeft: 7\r\n                    }}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value || 0}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\nimport 'rc-slider/assets/index.css';\r\nimport '../style.css';\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\n\r\nexport default class Border extends React.Component {\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.border.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Width (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={15}\r\n                            value={this.props.border.width}\r\n                            designKey={`${this.props.designKey}.width`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport NumberInput from \"../../../../Menus/CommonComponents/NumberInput\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\nimport {cloneObject} from \"../../../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class Corners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            radius: cloneObject(props.radius),\r\n            link: true\r\n        }\r\n    }\r\n\r\n    onChange = (value, side) => {\r\n        let radius = this.state.radius;\r\n        let changeSide = [side];\r\n        if (this.state.link)\r\n            changeSide = [\"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"];\r\n        changeSide.forEach(_side => {\r\n            radius[_side] = value;\r\n            this.props.onDesignChange(`${this.props.designKey}.${_side}`, value);\r\n        });\r\n        this.setState({radius});\r\n    };\r\n\r\n    onLinkClick = () => {\r\n        this.setState({link: !this.state.link});\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Radius (px)</p>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"topLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"topRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{position: \"relative\"}}>\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowTopLeft\"\r\n                             style={{\r\n                                 borderTopLeftRadius: this.state.radius[\"topLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowTopRight\"\r\n                             style={{\r\n                                 borderTopRightRadius: this.state.radius[\"topRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowBottomLeft\"\r\n                             style={{\r\n                                 borderBottomLeftRadius: this.state.radius[\"bottomLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowBottomRight\"\r\n                             style={{\r\n                                 borderBottomRightRadius: this.state.radius[\"bottomRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersLink\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginLeft: 0\r\n                            }}\r\n                            onClick={this.onLinkClick}\r\n                        >\r\n                            {\r\n                                this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../../icons/chain.svg')} />\r\n                            }\r\n                            {\r\n                                !this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../../icons/unlink.svg')} />\r\n                            }\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class CircularSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.rect = this.rootDivRef.current.getBoundingClientRect();\r\n        window.addEventListener(\"pointermove\", this.onMouseMove);\r\n        window.addEventListener(\"pointerup\", this.onMouseUp);\r\n\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                className={`CircularSliderRoot ${this.props.className}`}\r\n                style={{\r\n                    transform: `rotate(${this.props.value}deg)`\r\n                }}\r\n                onMouseDown={this.onMouseDown}\r\n                ref={this.rootDivRef}\r\n            >\r\n                <div\r\n                    className=\"CircularSliderBg\"\r\n                    style={{\r\n                        width: this.props.width || 90,\r\n                        height: this.props.width || 90\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"CircularSliderLine\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderCenter\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderKnob\"\r\n                    />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport CircularSlider from \"./CircularSlider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class Angle extends React.Component {\r\n    onChange = (value) => {\r\n        if (this.props.loop && value === 360)\r\n            value = 0;\r\n\r\n        this.props.onChange(value.toFixed(0));\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"AngleRoot\">\r\n                <CircularSlider\r\n                    {...this.props}\r\n                    className=\"AngleSlider\"\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                    min={0}\r\n                    max={360}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"AngleInput\"\r\n                    min={0}\r\n                    max={360}\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport '../style.css';\r\nimport Angle from \"../../../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nconst deg2rad = Math.PI/180;\r\nconst rad2deg = 180/Math.PI;\r\nexport default class Shadow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange = (key, value) => {\r\n        let shadow = this.props.shadow;\r\n        shadow[key] = value;\r\n        this.setState({shadow});\r\n        this.props.onDesignChange(`${this.props.designKey}.${key}`, value);\r\n    };\r\n\r\n    getDegree = (xOffset, yOffset) => {\r\n        if (xOffset === undefined) xOffset = -1;\r\n        if (yOffset === undefined) yOffset = 1;\r\n        let ratio = (xOffset) / (yOffset);\r\n        let degree;\r\n        if (xOffset < 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg;\r\n        if (xOffset < 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 360;\r\n\r\n        return Math.round(degree);\r\n    };\r\n\r\n    getRatio = (degree) => {\r\n        return Math.tan( degree * deg2rad );\r\n    };\r\n\r\n    calcDegree = (degree) => {\r\n        let ratio = this.getRatio(degree);\r\n        let xO, yO;\r\n        if (ratio === 0) {\r\n            xO = 0;\r\n            yO = 1;\r\n        } else if (ratio === Infinity) {\r\n            xO = 1;\r\n            yO = 0;\r\n        } else {\r\n            xO = ratio;\r\n            yO = 1;\r\n            if (Math.abs(ratio) > 1) {\r\n                xO /= Math.abs(ratio);\r\n                yO /= Math.abs(ratio);\r\n            }\r\n        }\r\n        this.onChange(\"xOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? -xO : xO);\r\n        this.onChange(\"yOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? yO : -yO);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                    <div className=\"ShadowRoot\">\r\n                        <Angle\r\n                            className=\"ShadowAngle\"\r\n                            angle={this.getDegree(this.props.shadow.xOffset , this.props.shadow.yOffset)}\r\n                            onChange={this.calcDegree}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Distance (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.distance}\r\n                            designKey={`${this.props.designKey}.distance`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Size (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.size}\r\n                            designKey={`${this.props.designKey}.size`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Blur (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.blur}\r\n                            designKey={`${this.props.designKey}.blur`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.shadow.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Components/Background\";\r\nimport Border from \"./Components/Border\";\r\nimport Corners from \"./Components/Corners\";\r\nimport Shadow from \"./Components/Shadow\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class BorderDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/water.svg'} />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/border.svg'} />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/corner.svg'} />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                icon: <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" className=\"symbol symbol-shadowDesign\">\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M11.5 14.5h-8v-2h8c.55 0 1-.45 1-1v-9h2v9c0 1.65-1.35 3-3 3zm-3-4h-7c-1.1 0-2-.9-2-2v-7c0-1.1.9-2 2-2h7c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2z\"/>\r\n                </svg>\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                render: <Border\r\n                    border={design.border}\r\n                    designKey={\"design.border\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                render: <Corners\r\n                    radius={design.border.radius}\r\n                    designKey={\"design.border.radius\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                render: <Shadow\r\n                    shadow={design.border.shadow}\r\n                    designKey={\"design.border.shadow\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport classNames from \"classnames\";\r\n\r\nexport default class GridViewer extends React.Component {\r\n    render () {\r\n        let classes = classNames(\r\n            \"GridViewerRoot\",\r\n            this.props.className\r\n        );\r\n        return (\r\n            <div className={classes}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport GridViewer from \"../../../../Menus/CommonComponents/GridViewer\";\r\nimport classNames from \"classnames\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class AnimationSelector extends React.Component {\r\n    onSelectAnimation = (name) => {\r\n        this.props.onDesignChange(this.props.designKey, name);\r\n        window.requestAnimationFrame(() => {\r\n            this.props.item.playAnimation();\r\n        });\r\n    };\r\n\r\n    render () {\r\n        let {allAnimationNames, animation} = this.props;\r\n        let noneClasses = classNames(\r\n            \"MenuOptionAnimationItem\",\r\n            (!animation || !animation.name) && \"MenuOptionAnimationItemSelected\"\r\n        );\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n\r\n                <GridViewer>\r\n                    <ButtonBase\r\n                        className={noneClasses}\r\n                        key='none'\r\n                        onClick={(e) => this.onSelectAnimation()}\r\n                    >\r\n                        <img\r\n                            className=\"MenuOptionAnimationItemImage\"\r\n                            draggable={false} width={48} height={48}\r\n                            // src={process.env.PUBLIC_URL + `/static/icons/animation/${name}.svg`} />\r\n                            src={process.env.PUBLIC_URL + `/static/icon/animation-black.svg`}\r\n                        />\r\n                        <span>\r\n                            none\r\n                        </span>\r\n                    </ButtonBase>\r\n                    {\r\n                        allAnimationNames.map(name => {\r\n                            let classes = classNames(\r\n                                \"MenuOptionAnimationItem\",\r\n                                animation && name === animation.name && \"MenuOptionAnimationItemSelected\"\r\n                            );\r\n                            let displayName = name.split(/(?=[A-Z])/).join(' ');\r\n                            displayName = displayName.charAt(0).toUpperCase() + displayName.slice(1);\r\n                            return (\r\n                                <ButtonBase\r\n                                    className={classes}\r\n                                    key={name}\r\n                                    onClick={(e) => this.onSelectAnimation(name)}\r\n                                >\r\n                                    <img\r\n                                        className=\"MenuOptionAnimationItemImage\"\r\n                                        draggable={false} width={48} height={48}\r\n                                        // src={process.env.PUBLIC_URL + `/static/icons/animation/${name}.svg`} />\r\n                                        src={process.env.PUBLIC_URL + `/static/icon/animation-black.svg`}\r\n                                    />\r\n                                    <span className=\"MenuOptionAnimationItemTitle\">\r\n                                        {displayName}\r\n                                    </span>\r\n                                </ButtonBase>\r\n                            )\r\n                        })\r\n                    }\r\n                </GridViewer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {DynamicAnimations} from \"../../../../Dynamic/DynamicComponents\";\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\n\r\nexport default class AnimationOptions extends React.Component {\r\n\r\n    render () {\r\n        let {animation, onDesignChange, designKey, item} = this.props;\r\n        if (!animation || !animation.name) {\r\n            return <div className=\"MenuOptionSectionTitle\" style={{\r\n                textAlign: \"center\"\r\n            }}>\r\n                Select an Animation to See Options\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection MenuOptionGrid2\">\r\n                    <span className=\"MenuOptionSectionTitleNoMargin\">Play animation</span>\r\n\r\n                    <IconButton onClick={(e) => {\r\n                                    item.playAnimation();\r\n                                }}\r\n                                imageContainerStyle={{\r\n                                    padding: 0\r\n                                }}\r\n                                buttonBaseStyle={{\r\n                                    borderRadius: 999\r\n                                }}\r\n                    >\r\n                        <img draggable={false} width={24} height={24}\r\n                                   src={process.env.PUBLIC_URL + '/static/icon/play-button.svg'}\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                {\r\n                    animation.name &&\r\n                        DynamicAnimations[animation.name].getOptions(this.props)\r\n                }\r\n\r\n                {\r\n                    animation.name && DynamicAnimations[animation.name].getOptions(this.props) &&\r\n                    <Divider/>\r\n                }\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Duration</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={5}\r\n                            step={0.1}\r\n                            value={animation.options? animation.options.duration !== undefined?\r\n                                animation.options.duration: 1 : 1}\r\n                            designKey={`${designKey}.duration`}\r\n                            onDesignChange={onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Delay</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={10}\r\n                            step={0.1}\r\n                            value={animation.options? animation.options.delay !== undefined?\r\n                                animation.options.delay: 0 : 0}\r\n                            designKey={`${designKey}.delay`}\r\n                            onDesignChange={onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionAnimationOnceRoot\">\r\n                    <p className=\"MenuOptionSectionTitle\">Only animate first time</p>\r\n                    <Switch\r\n                        className=\"InspectorOverflowDirSwitch\"\r\n                        checked={animation.options && animation.options.once ? animation.options.once : false}\r\n                        onChange={(e) => {\r\n                            onDesignChange(`${designKey}.once`, e.target.checked);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\nimport AnimationSelector from \"./Components/AnimationSelector\";\r\nimport AnimationOptions from \"./Components/AnimationOptions\";\r\n\r\nexport default class AnimationDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Animation Type\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/animation-black.svg'} />\r\n            },\r\n            {\r\n                key: \"Animation Options\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/time.svg'} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Animation Type\",\r\n                render: <AnimationSelector\r\n                    animation={design.animation}\r\n                    designKey={\"design.animation.name\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    allAnimationNames={[\r\n                        'fadeIn',\r\n                        'bounceIn',\r\n                        'glideIn',\r\n                        'floatIn',\r\n                        'expandIn',\r\n                        'spinIn',\r\n                        'flyIn',\r\n                        'turnIn',\r\n                        'arcIn',\r\n                        'puffIn',\r\n                        'foldIn',\r\n                        'flipIn',\r\n                        'reveal',\r\n                    ]}\r\n                    item={this.props.item}\r\n                />\r\n            },\r\n            {\r\n                key: \"Animation Options\",\r\n                render: <AnimationOptions\r\n                    animation={design.animation}\r\n                    designKey={\"design.animation.options\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    item={this.props.item}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n                defaultIndexNo={0}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport BorderDesign from \"./Menus/BorderDesign\";\r\nimport '../../HelperStyle.css';\r\nimport './ContainerBase.css';\r\nimport {getCompositeDesignData, parseColor, resolveDesignData} from \"../../AwesomwGridLayoutHelper\";\r\nimport AnimationDesign from \"./Menus/AnimationDesign\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ContainerBase extends AGLComponent{\r\n    static contextType = EditorContext;\r\n\r\n    resolveDesignData = () => {\r\n        resolveDesignData(this, \"border\", {shadow: {\r\n                xOffset: -1,\r\n                yOffset: 1,\r\n                distance: 1,\r\n                size: 0,\r\n                blur: 4\r\n        }, radius: {}});\r\n    };\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <BorderDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />,\r\n            <MenuButton\r\n                key={2}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/animation.svg'} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <AnimationDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n    };\r\n\r\n    getStaticChildren = () => {\r\n        this.resolveDesignData();\r\n\r\n        let border = getCompositeDesignData(this).border;\r\n        let fillColor = getCompositeDesignData(this).fillColor;\r\n        if (fillColor)\r\n            fillColor = parseColor(fillColor, fillColor.alpha, this.context);\r\n\r\n        border.radius = border.radius || {};\r\n        border.shadow = border.shadow || {};\r\n\r\n        let shadowColor = border.shadow.color;\r\n        if (shadowColor)\r\n            shadowColor = parseColor(shadowColor, shadowColor.alpha, this.context);\r\n        let borderColor = border.color;\r\n        if (borderColor)\r\n            borderColor = parseColor(borderColor, borderColor.alpha, this.context);\r\n\r\n        return <div\r\n            className=\"ContainerBaseBorderRoot\"\r\n            style={{\r\n                border:\r\n                    `${border.width || 0}px solid ${borderColor || 'rgba(186,218,85,0.63)'}`,\r\n                backgroundColor: fillColor,\r\n                borderRadius:\r\n                    `${border.radius.topLeft || 0}px ${border.radius.topRight || 0}px ${border.radius.bottomRight || 0}px ${border.radius.bottomLeft || 0}px`,\r\n                boxShadow: `${(border.shadow.xOffset) * (border.shadow.distance)}px ${(border.shadow.yOffset) * (border.shadow.distance)}px ${border.shadow.blur}px ${border.shadow.size}px ${shadowColor || 'rgba(186,218,85,0.63)'}`\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"ContainerBase\"\r\n                aglComponent={this}\r\n                {...this.props}\r\n                data={this.getData()}\r\n                getPrimaryOptions={this.getPrimaryOptions}\r\n                getInspector={this.getInspector}\r\n                getStaticChildren={this.getStaticChildren}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nContainerBase.defaultProps = {\r\n    tagName: \"ContainerBase\"\r\n};\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Components/Background\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class SectionDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/water.svg'} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle={this.props.menuTitle || \"Box Design\"}\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Header extends AGLComponent{\r\n    static contextType = EditorContext;\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Header Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        console.log(\"updateDesign\", compositeDesign.fillColor)\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.context);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={[\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Header\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"1/1/2/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{\r\n                            // backgroundColor: \"#bcbcbc\",\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"150px\",\r\n                            zIndex: \"50\"\r\n                        }}\r\n                        as=\"header\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.defaultProps = {\r\n    tagName: \"Header\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Footer extends AGLComponent{\r\n    static contextType = EditorContext;\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Footer Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.context);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={[\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Footer\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"3/1/4/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"100px\",\r\n                            zIndex: \"51\"\r\n                        }}\r\n                        as=\"footer\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nFooter.defaultProps = {\r\n    tagName: \"Footer\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport {parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Section extends AGLComponent{\r\n    static contextType = EditorContext;\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Section Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.context);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={!this.props.isVerticalSection ? [\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ] : [\r\n                        'height', 'minHeight', 'maxHeight'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Section\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"2/1/3/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{...{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"500px\",\r\n                        }, ...this.props.style}}\r\n                        designStyle={{...{\r\n                                // backgroundColor: \"#b3faf5\",\r\n                        }, ...this.props.designStyle}}\r\n                        data={this.getData()}\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        as={\"section\"}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nSection.defaultProps = {\r\n    tagName: \"Section\"\r\n};\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport ColorPicker from \"../../Menus/CommonComponents/ColorPicker\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\nimport Background from \"../../Components/Containers/Menus/Components/Background\";\r\n\r\nexport default class InspectorBackground extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { open: true};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeColor = (key, value) => {\r\n        let {item} = this.props;\r\n        setStyleParam(\"backgroundColor\", value,\r\n            item, true, undefined, true);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let style = item.getFromData(\"style\") || {};\r\n        return (\r\n            <>\r\n                <InspectorTitle defaultOpen title=\"Background\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <span className=\"InspectorBackgroundColorTitle\">\r\n                            Color\r\n                        </span>\r\n                        <ColorPicker\r\n                            color={style.backgroundColor || 'rgba(0, 0, 0, 0)'}\r\n                            designKey={\"design.fillColor\"}\r\n                            // onDesignChange={this.onChangeColor}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                            editor={this.props.item.props.editor}\r\n                        />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport Section from \"../Containers/Section\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {initGriddata, swapArrayElements} from \"../../AwesomeGridLayoutUtils\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorBackground from \"../../Test/Inspector/InspectorBackground\";\r\nimport './PageBase.css';\r\nimport {isHideInBreakpoint, parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nconst mainColTemplate = \"minmax(0px,1fr)\";\r\n\r\nexport default class PageBase extends AGLComponent {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.gridTemplateRows = \"auto\";\r\n        this.gridTemplateColumns = mainColTemplate;\r\n        this.gridX = 0;\r\n        this.gridY = 1;\r\n\r\n        this.allSectionsH = [];\r\n        this.allSectionsV = [null];\r\n\r\n        this.root = React.createRef();\r\n\r\n        this.initKeyboard();\r\n\r\n        this.initDataFromPageData(props);\r\n    }\r\n\r\n    initDataFromPageData = (props) => {\r\n        if (!props.griddata.initialized)\r\n            initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (!props.griddata.allSectionsH)\r\n            props.griddata.allSectionsH = [];\r\n        if (!props.griddata.allSectionsV)\r\n            props.griddata.allSectionsV = [null];\r\n\r\n        this.allSectionsH = props.griddata.allSectionsH;\r\n        this.allSectionsV = props.griddata.allSectionsV;\r\n        let grid = this.props.breakpointmanager.getFromData(props.griddata, \"grid\");\r\n        if (grid) {\r\n            this.gridX = grid.x;\r\n            this.gridY = grid.y;\r\n            this.gridTemplateRows = grid.gridTemplateRows;\r\n            this.gridTemplateColumns = grid.gridTemplateColumns;\r\n        }\r\n    };\r\n\r\n    initKeyboard = () => {\r\n        window.addEventListener(\"keydown\", (e) => {\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if (key === 38 && ctrl) {\r\n                e.preventDefault();\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveUp(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 40 && ctrl) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Down\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveDown(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 37 && ctrl) {\r\n                e.preventDefault();\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveLeft(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 39 && ctrl) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Right\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveRight(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        // TODO remove tests\r\n        // this.addSectionQueue(0, \"Header\", DynamicComponents, undefined, false);\r\n        // this.addSectionQueue(1, \"Section\", DynamicComponents, undefined, false);\r\n        // this.addSectionQueue(2, \"Footer\", DynamicComponents, undefined, false);\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            draggable: false,\r\n            resizable: true,\r\n            pageResize: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"scroll\",\r\n                    overflowY: \"scroll\",\r\n                    auto: true\r\n                },\r\n                grid: {\r\n                    x: this.gridX,\r\n                    y: this.gridY,\r\n                    gridTemplateRows: this.gridTemplateRows,\r\n                    gridTemplateColumns: this.gridTemplateColumns\r\n                },\r\n                containerHeight: \"max-content\",\r\n            }\r\n        };\r\n    };\r\n\r\n    getHorizontalSection = (id) => {\r\n        return this.props.idMan.getItem(this.allSectionsH.find(h => {\r\n            return h === id;\r\n        }));\r\n    };\r\n\r\n    deleteHorizontalSection = (id) => {\r\n        let index = this.allSectionsH.findIndex(h => {\r\n            return h === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        if (this.allSectionsH.length === 1)\r\n            return false;\r\n\r\n        this.gridX--;\r\n\r\n        let currentSection = this.allSectionsH[index];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (firstRow >= x12 && lastRow <= x22) {\r\n                x22--;\r\n            } else if (lastRow <= x12) {\r\n                x22--;\r\n                x12--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (lastRow <= x13) {\r\n                x13--;\r\n                x23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        index >= 0 && this.allSectionsH.splice(index, 1);\r\n\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n        return true;\r\n    };\r\n\r\n    getVerticalSection = (id) => {\r\n        return this.props.idMan.getItem(this.allSectionsV.find(h => {\r\n            if (h === null)\r\n                return false;\r\n\r\n            return h === id;\r\n        })) || null;\r\n    };\r\n\r\n    deleteVerticalSection = (id) => {\r\n        let index = this.allSectionsV.findIndex(h => {\r\n            if (h === null)\r\n                return false;\r\n            return h === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        this.gridY--;\r\n\r\n        let currentSection = this.allSectionsV[index];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n        let firstCol = y1;\r\n        let lastCol = y2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (y12 >= firstCol) {\r\n                y12--;\r\n                y22--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (y13 >= lastCol) {\r\n                // fully right\r\n                y13--;\r\n                y23--;\r\n            } else if (y23 >= lastRow) {\r\n                // partially right\r\n                y23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.allSectionsV.splice(index, 1);\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n        return true;\r\n    };\r\n\r\n    addSectionQueue = (index, tagName, dynamicComponents, as, isVertical, callback) => {\r\n        if (!this.addQueue)\r\n            this.addQueue = [];\r\n\r\n        this.addQueue.push({\r\n            index, tagName, dynamicComponents, as, isVertical, callback\r\n        });\r\n\r\n        if (!this.checkingAddQueue) {\r\n            let nextOne = this.addQueue.shift();\r\n            this.checkAddQueue(nextOne);\r\n        }\r\n    };\r\n\r\n    checkAddQueue = (nextOne) => {\r\n        this.checkingAddQueue = true;\r\n        if (!nextOne.isVertical) {\r\n            this.addHorizontalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        } else {\r\n            this.addVerticalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        }\r\n    };\r\n\r\n    onItemPreDelete = (item) => {\r\n        let allow = this.deleteHorizontalSection(item.props.id);\r\n        if (!allow)\r\n            allow = this.deleteVerticalSection(item.props.id);\r\n\r\n        return allow;\r\n    };\r\n\r\n    // Just for vertical items\r\n    onItemPreResizeStop = (item, e, dir, delta, runtimeStyle) => {\r\n        console.log(\"small from top0\", this.allSectionsH, this.allSectionsV)\r\n        if (dir === 'e' || dir === 'w')\r\n            return;\r\n\r\n        let gridArea = item.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        this.root.current.prepareRects(false, true);\r\n        let yLineRefs = this.props.gridLine.getYlineRef(this.root.current.props.id);\r\n        let firstLineTop =\r\n            this.root.current.getGridLineRect(yLineRefs[0], 0, 'y', this.root.current).top;\r\n\r\n        console.log(\"small from top1\", this.allSectionsH, this.allSectionsV)\r\n        if (dir === 'n') {\r\n            if (delta.y > 0) { // small from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                console.log(\"small from top\", this.allSectionsH, this.allSectionsV)\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x1 && x12 < selectedX1) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n            else { // big from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x22 <= x1 && x12 >= selectedX1) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n        }\r\n        else { // dir === 's'\r\n            if (delta.y > 0) { // big from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x2 && x12 < selectedX2) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n            else { // small from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 < x2 && x12 >= selectedX2) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = -1;\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n        }\r\n\r\n        item.setGridArea(\r\n            `${x1}/${y1}/${x2}/${y2}`\r\n            , this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    addHorizontalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridX++;\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length + 1).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        let currentSectionIndex = index !== 0 ? index - 1 : 0;\r\n\r\n        let currentSection = this.allSectionsH[currentSectionIndex];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea ? `${index + 1}/${\r\n                currentSectionGridArea.split('/')[1]\r\n                }/${index + 2}/${\r\n                currentSectionGridArea.split('/')[3]\r\n                }` :\r\n            \"1/1/2/2\"\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            isSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n            }}\r\n            resizeSides={['s', 'n']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n        />;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstRow = index + 1;\r\n\r\n            if (x2 >= firstRow)\r\n                x2++;\r\n            if (x1 >= firstRow)\r\n                x1++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (x1 >= firstCol)\r\n                x1++;\r\n            if (x2 > firstCol)\r\n                x2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsH.splice(index, 0, agl.props.id);\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    getMainColIndex = (insertIndex) => {\r\n        let index = this.allSectionsV.findIndex(v => {\r\n            return v === null;\r\n        });\r\n\r\n        if (insertIndex !== undefined && index >= insertIndex)\r\n            return index + 1;\r\n\r\n        return index;\r\n    };\r\n\r\n    addVerticalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridY++;\r\n\r\n        let currentSectionIndex = index !== 0 ? index - 1 : 0;\r\n\r\n        let currentSection = this.allSectionsV[currentSectionIndex] || null;\r\n        if (currentSection === null)\r\n            currentSection = this.allSectionsV[currentSectionIndex + 1];\r\n\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea ? `${\r\n                currentSectionGridArea.split('/')[0]\r\n                }/${index + 1}/${\r\n                currentSectionGridArea.split('/')[2]\r\n                }/${index + 2}` :\r\n            `${1}/${index + 1}/${this.gridX + 1}/${index + 2}`\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            isSection\r\n            isVerticalSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n                isVerticalSection: true,\r\n            }}\r\n            style={{\r\n                width: \"200px\",\r\n                height: \"auto\",\r\n                minHeight: \"auto\",\r\n            }}\r\n            resizeSides={['e', 'w', 'n', 's']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n            onItemPreResizeStop={this.onItemPreResizeStop}\r\n        />;\r\n\r\n        console.log(\"this.allSectionsH\", this.allSectionsH)\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        let mainColIndex = this.getMainColIndex(index);\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length + 1).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsV.splice(index, 0, agl.props.id);\r\n            this.props.select.onScrollItem();\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    moveUp = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex - 1];\r\n        sideSection = this.props.idMan.getItem(sideSection);\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 + 1}/${y1}/${x22 + 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 - 1}/${y12}/${x2 - 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveDown = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex + 1];\r\n        sideSection = this.props.idMan.getItem(sideSection);\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 - 1}/${y1}/${x22 - 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 + 1}/${y12}/${x2 + 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveRight = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex + 1];\r\n        if (sideSection !== null){\r\n            sideSection = this.props.idMan.getItem(sideSection);\r\n        }\r\n        // sideSection = this.props.idMan.getItem(sideSection) || null;\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 - 1}/${x2}/${y22 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 + 1}/${x22}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n\r\n            this.getAgl().invalidateSize();\r\n            this.props.select.onScrollItem();\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 + 1}/${x2}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                console.log(\"moveRight firstRow:\", firstRow, \"lastRow:\", lastRow, \"x13:\", x13, \"x23:\", x23);\r\n                if (x13 >= firstRow && x23 <= lastRow) {\r\n                    console.log(\"moveRight yes\");\r\n                    y13--;\r\n                    y23--;\r\n\r\n                    if (y23 > y1 + 1)\r\n                        y23 = y1 + 1;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveLeft = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex - 1];\r\n        if (sideSection !== null){\r\n            sideSection = this.props.idMan.getItem(sideSection);\r\n        }\r\n        // sideSection = this.props.idMan.getItem(sideSection) || null;\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 + 1}/${x2}/${y22 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 - 1}/${x22}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n\r\n            this.getAgl().invalidateSize();\r\n            this.props.select.onScrollItem();\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 - 1}/${x2}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                if (x13 >= firstRow && x23 <= lastRow) {\r\n                    y13++;\r\n                    y23++;\r\n\r\n                    if (y13 < y2 - 1)\r\n                        y13 = y2 - 1;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    updateTemplates = () => {\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            if (isHideInBreakpoint(this.props.idMan.getItem(this.allSectionsV[i])))\r\n                return \"0px\";\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map((a, i) => {\r\n            if (isHideInBreakpoint(this.props.idMan.getItem(this.allSectionsH[i])))\r\n                return \"0px\";\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    hasMiniMenuOverride = () => {\r\n        return false;\r\n    };\r\n\r\n    invalidateSizeOverride = (agl, self, updateParent, updateChildren, sourceId) => {\r\n        if (self)\r\n            delete this.tempSize;\r\n\r\n        Object.values(agl.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current && sourceId !== childRef.current.props.id) {\r\n                childRef.current.invalidateSize(true, false, true);\r\n            }\r\n        });\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorBackground\r\n                    item={this.getAgl()}\r\n                    onDesignChange={this.onDesignChange}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    getSectionOfPoint = (left, top, width, height) => {\r\n        let childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n            if (childRef && childRef.current) {\r\n                if (childRef.current.isPointInclude(left, top))\r\n                    return true;\r\n            }\r\n        });\r\n\r\n        if (!childRef)\r\n            childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n                if (childRef && childRef.current) {\r\n                    if (childRef.current.isPointInclude(left + width, top + height))\r\n                        return true;\r\n                }\r\n            });\r\n\r\n        if (!childRef)\r\n            childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n                return (childRef && childRef.current);\r\n            });\r\n\r\n        return childRef.current;\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        console.log(\"updateDesign\", compositeDesign.fillColor)\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.context);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n    // White Background\r\n    getStaticChildren = () => {\r\n\r\n        return <div\r\n            className=\"PageBaseWhiteBackground\"\r\n            style={{\r\n\r\n            }}\r\n        />\r\n    };\r\n\r\n    render() {\r\n        // let fullWidth = (this.getAgl() && this.getAgl().getSize(false)) || (1002);\r\n        let fullWidth = this.props.pageSize;\r\n        return (\r\n            <AGLWrapper tagName=\"PageBase\"\r\n                        aglRef={!this.props.aglRef ? this.root : this.root = this.props.aglRef}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        className=\"Page1Root\"\r\n                        style={{\r\n                            width: this.context.production ? \"100%\" : `${fullWidth}px`,\r\n                            height: \"100%\",\r\n                            boxShadow: \"0 2px 12px 6px rgba(134,138,165,.41)\",\r\n                            display: \"inline-block\",\r\n                        }}\r\n                        data={this.getData()}\r\n                        isPage\r\n                        resizeSides={[]}\r\n                        page={this}\r\n                        hasMiniMenuOverride={this.hasMiniMenuOverride}\r\n                        getInspector={this.getInspector}\r\n                        invalidateSizeOverride={this.invalidateSizeOverride}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nPageBase.defaultProps = {\r\n    tagName: \"PageBase\",\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\n\r\nexport default class VerticalSpacer extends AGLComponent{\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"VerticalSpacer\"\r\n                {...this.props}\r\n                data={this.getData()}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"20px\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\n\r\nlet FadeInAnimation = {};\r\n\r\nFadeInAnimation.getOptions = (props) => {\r\n    return null;\r\n};\r\n\r\nFadeInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {duration, delay} = options;\r\n    let animationStyles = StyleSheet.create({\r\n        fadeIn: {\r\n            animationName: {\r\n                \"0%\": {\r\n                    opacity: 0\r\n                },\r\n                \"100%\": {\r\n                    opacity: 1\r\n                }\r\n            },\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.fadeIn);\r\n};\r\n\r\nFadeInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FadeInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet BounceInAnimation = {};\r\n\r\nBounceInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From center',\r\n                    'From top left',\r\n                    'From top right',\r\n                    'From bottom left',\r\n                    'From bottom right'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nBounceInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `scale3d(0, 0, 0) translate3d(${\r\n                direction.includes('center')? '0': direction.includes('left')? '-100%': direction.includes('right')?\r\n                    '100%': '0'\r\n            }, ${\r\n                direction.includes('center')? '0': direction.includes('top')? '-100%': direction.includes('bottom')?\r\n                    '100%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['20%'] = {\r\n        opacity: 0.33,\r\n        transform: `scale3d(1.1, 1.1, 1.1) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '7%': direction.includes('right')?\r\n                '-7%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '7%': direction.includes('bottom')?\r\n                '-7%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['40%'] = {\r\n        opacity: 0.66,\r\n        transform: `scale3d(0.9, 0.9, 0.9) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '-5%': direction.includes('right')?\r\n                '5%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '-5%': direction.includes('bottom')?\r\n                '5%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['60%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(1.03, 1.03, 1.03) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '3%': direction.includes('right')?\r\n                '-3%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '3%': direction.includes('bottom')?\r\n                '-3%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['80%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(0.97, 0.97, 0.97) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '-1%': direction.includes('right')?\r\n                '1%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '-1%': direction.includes('bottom')?\r\n                '1%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(1, 1, 1)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        bounceIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.bounceIn);\r\n};\r\n\r\nBounceInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default BounceInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\nimport SliderInput from \"../../Menus/CommonComponents/SliderInput\";\r\nimport Angle from \"../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\n\r\nlet GlideInAnimation = {};\r\n\r\nGlideInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <>\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                <Angle\r\n                    className=\"ShadowAngle\"\r\n                    angle={options.angle || 90}\r\n                    onChange={(d) => {\r\n                        onDesignChange(`${designKey}.angle`, d);\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Distance</p>\r\n\r\n                <div\r\n                    className=\"BorderWidth\"\r\n                >\r\n                    <SliderInput\r\n                        className=\"BorderWidthSlider\"\r\n                        min={0}\r\n                        max={300}\r\n                        value={options.distance || 100}\r\n                        designKey={`${designKey}.distance`}\r\n                        onDesignChange={onDesignChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nGlideInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {distance, angle, duration, delay} = options;\r\n    distance = distance || 100;\r\n    angle = angle || 90;\r\n\r\n    let animationName = {};\r\n    let tx = - distance * Math.sin(angle * Math.PI / 180);\r\n    let ty = distance * Math.cos(angle * Math.PI / 180);\r\n    animationName['0%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(${tx}px, ${ty}px, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        glideIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.glideIn);\r\n};\r\n\r\nGlideInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default GlideInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FloatInAnimation = {};\r\n\r\nFloatInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFloatInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n                direction.includes('left')? '-20%': direction.includes('right')? '20%': 0\r\n            }, ${\r\n                direction.includes('top')? '-20%': direction.includes('bottom')? '20%': 0\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        floatIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.floatIn);\r\n};\r\n\r\nFloatInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FloatInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet ExpandInAnimation = {};\r\n\r\nExpandInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'Soft',\r\n                    'Medium',\r\n                    'Hard'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.power`, v);\r\n                }}\r\n                value={options.power || 'Hard'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nExpandInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, duration, delay} = options;\r\n    power = power || 'Hard';\r\n\r\n    let animationName = {};\r\n    animationName[\"0%\"] = {\r\n        opacity: 0,\r\n        transform: `scale3d(${\r\n                power === \"Hard\"? '0.2': power === \"Medium\"? '0.5': '0.8'\r\n            }, ${\r\n                power === \"Hard\"? '0.2': power === \"Medium\"? '0.5': '0.8'\r\n            }, 0)`\r\n    };\r\n    animationName[\"100%\"] = {\r\n        opacity: 1,\r\n        transform: 'scale3d(1,1,1)'\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        expandIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.expandIn);\r\n};\r\n\r\nExpandInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default ExpandInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../Menus/CommonComponents/SliderInput\";\r\n\r\nlet SpinInAnimation = {};\r\n\r\nSpinInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <>\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n                <DropDown\r\n                    options={[\r\n                        'Soft',\r\n                        'Medium',\r\n                        'Hard'\r\n                    ]}\r\n                    onChange={(v) => {\r\n                        onDesignChange(`${designKey}.power`, v);\r\n                    }}\r\n                    value={options.power || 'Hard'}\r\n                    spanStyle={{\r\n                        width: \"100%\",\r\n                        fontSize: 14,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n                <DropDown\r\n                    options={[\r\n                        'Clockwise',\r\n                        'Counter clockwise',\r\n                    ]}\r\n                    onChange={(v) => {\r\n                        onDesignChange(`${designKey}.direction`, v);\r\n                    }}\r\n                    value={options.direction || 'Clockwise'}\r\n                    spanStyle={{\r\n                        width: \"100%\",\r\n                        fontSize: 14,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Spin number</p>\r\n\r\n                <div\r\n                    className=\"BorderWidth\"\r\n                >\r\n                    <SliderInput\r\n                        className=\"BorderWidthSlider\"\r\n                        min={0}\r\n                        max={15}\r\n                        step={0.1}\r\n                        value={options.spinNo || 2}\r\n                        designKey={`${designKey}.spinNo`}\r\n                        onDesignChange={onDesignChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nSpinInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, direction, spinNo, duration, delay} = options;\r\n    power = power || 'Hard';\r\n    direction = direction || 'Clockwise';\r\n    spinNo = spinNo || 2;\r\n\r\n    let animationName = {};\r\n    let firstRotate = 360 * spinNo * (direction === 'Clockwise'? -1: 1);\r\n    animationName[\"0%\"] = {\r\n        opacity: 0,\r\n        transform: `rotate(${firstRotate}deg) scale3d(${\r\n                power === \"Hard\"? '0.3': power === \"Medium\"? '0.6': '1'\r\n            }, ${\r\n                power === \"Hard\"? '0.3': power === \"Medium\"? '0.6': '1'\r\n            }, 1)`\r\n    };\r\n    animationName[\"100%\"] = {\r\n        opacity: 1,\r\n        transform: 'rotate(0deg) scale3d(1,1,1)'\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        spinIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.spinIn);\r\n};\r\n\r\nSpinInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default SpinInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FlyInAnimation = {};\r\n\r\nFlyInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                    'From top left',\r\n                    'From top right',\r\n                    'From bottom left',\r\n                    'From bottom right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFlyInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let size = item.getSize(true);\r\n    let windowSize = {\r\n        width: item.props.breakpointmanager.getWindowWidth(),\r\n        height: item.props.breakpointmanager.getWindowHeight(),\r\n    };\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n                direction.includes('left')? `${-size.left}px`: direction.includes('right')? `${\r\n                    windowSize.width - size.left - size.width\r\n                }px`: 0\r\n            }, ${\r\n                direction.includes('top')? `${-size.top}px`: direction.includes('bottom')? `${\r\n                    windowSize.height - size.top - size.height\r\n                }px`: 0\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        flyIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.flyIn);\r\n};\r\n\r\nFlyInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FlyInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet TurnInAnimation = {};\r\n\r\nTurnInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From left',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nTurnInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let size = item.getSize(true);\r\n    let viewSize = item.props.viewRef.current.getSize(false);\r\n    let windowSize = {\r\n        width: item.props.breakpointmanager.getWindowWidth(),\r\n        height: item.props.breakpointmanager.getWindowHeight(),\r\n    };\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n                -(size.left - viewSize.left)\r\n                }px`: `${\r\n            windowSize.width - (size.left - viewSize.left) - size.width\r\n                }px`\r\n            }, -200%, 0) rotate(${\r\n            direction.includes('left')? '-45': '45'\r\n            }deg) `\r\n    };\r\n    animationName['30%'] = {\r\n        opacity: 0.3,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n            -(size.left - viewSize.left) * 0.7\r\n                }px`: `${\r\n            (windowSize.width - (size.left - viewSize.left) - size.width) * 0.7\r\n                }px`\r\n            }, -${200*0.85}%, 0) rotate(${\r\n            direction.includes('left')? -45 * 0.7: 45 * 0.7\r\n            }deg) `\r\n    };\r\n    animationName['60%'] = {\r\n        opacity: 0.6,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n            -(size.left - viewSize.left) * 0.4\r\n                }px`: `${\r\n            (windowSize.width - (size.left - viewSize.left) - size.width) * 0.4\r\n                }px`\r\n            }, -${200*0.55}%, 0) rotate(${\r\n            direction.includes('left')? -45 * 0.4: 45 * 0.4\r\n            }deg) `\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0) rotate(0deg) `\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        turnIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            animationTimingFunction: 'linear',\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.turnIn);\r\n};\r\n\r\nTurnInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default TurnInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\n\r\nlet ArcInAnimation = {};\r\n\r\nArcInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From left',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From right'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nArcInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From right';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) scale(0) rotateY(${\r\n            direction.includes('left') ? '-' : ''\r\n            }180deg) translateZ(600px)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) scale(1) rotateY(0deg) translateZ(0px)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        arcIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            animationTimingFunction: 'linear',\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.arcIn);\r\n};\r\n\r\nArcInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default ArcInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet PuffInAnimation = {};\r\n\r\nPuffInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'Soft',\r\n                    'Medium',\r\n                    'Hard'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.power`, v);\r\n                }}\r\n                value={options.power || 'Hard'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nPuffInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, duration, delay} = options;\r\n    power = power || 'Hard';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) translateZ(${\r\n            power === \"Hard\"? 400: power === \"Medium\"? 200: 100\r\n            }px)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) translateZ(0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        puffIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.puffIn);\r\n};\r\n\r\nPuffInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default PuffInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FoldInAnimation = {};\r\n\r\nFoldInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFoldInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) rotateY(${\r\n                direction.includes('left')? 90: direction.includes('right')? -90: 0\r\n            }deg) rotateX(${\r\n                direction.includes('top')? -90: direction.includes('bottom')? 90: 0\r\n            }deg)`,\r\n        transformOrigin: `${\r\n            direction.includes('left')? 'left': direction.includes('right')? 'right': 'center'\r\n            } ${\r\n            direction.includes('top')? 'top': direction.includes('bottom')? 'bottom': 'center'\r\n            } 0`,\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) rotateY(0deg) rotateX(0deg)`,\r\n        transformOrigin: `${\r\n            direction.includes('left')? 'left': direction.includes('right')? 'right': 'center'\r\n            } ${\r\n            direction.includes('top')? 'top': direction.includes('bottom')? 'bottom': 'center'\r\n            } 0`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        foldIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.foldIn);\r\n};\r\n\r\nFoldInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FoldInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FlipInAnimation = {};\r\n\r\nFlipInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFlipInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) rotateY(${\r\n                direction.includes('left')? -90: direction.includes('right')? 90: 0\r\n            }deg) rotateX(${\r\n                direction.includes('top')? 90: direction.includes('bottom')? -90: 0\r\n            }deg)`,\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) rotateY(0deg) rotateX(0deg)`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        flipIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.flipIn);\r\n};\r\n\r\nFlipInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FlipInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet RevealAnimation = {};\r\n\r\nRevealAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From center',\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From center'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nRevealAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From center';\r\n\r\n    let animationName = {};\r\n    switch (direction) {\r\n        case 'From center':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)`,\r\n            };\r\n            break;\r\n        case 'From left':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 0, 0 0, 0 100%, 0 100%)`,\r\n            };\r\n            break;\r\n        case 'From right':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(100% 0, 100% 0, 100% 100%, 100% 100%)`,\r\n            };\r\n            break;\r\n        case 'From top':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 0, 0 100%, 0 100%, 0 0)`,\r\n            };\r\n            break;\r\n        case 'From bottom':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 100%, 100% 100%, 100% 100%, 0 100%)`,\r\n            };\r\n            break;\r\n    }\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        clipPath: `polygon(0 0, 100% 0, 100% 100%, 0 100%)`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        reveal: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.reveal);\r\n};\r\n\r\nRevealAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default RevealAnimation;\r\n","export function getTextStyle (textTheme, textStaticData, textDesignData) {\r\n    return {\r\n        fontFamily: \"'Arial'\",\r\n        textAlign: `${textDesignData.textAlign || 'left'}`,\r\n        fontSize: `${textDesignData.fontSize || textTheme.fontSize || 22}px`,\r\n        fontWeight: `${textDesignData.fontWeight || textTheme.fontWeight || 'normal'}`,\r\n        fontStyle: `${textDesignData.fontStyle || textTheme.fontStyle || 'normal'}`,\r\n        fontDecoration: textDesignData.fontDecoration || textTheme.fontDecoration,\r\n        color: textDesignData.color || textTheme.color || '#181818',\r\n        backgroundColor: textDesignData.backgroundColor || textTheme.backgroundColor,\r\n        lineHeight: textDesignData.lineHeight || textTheme.lineHeight || 'normal',\r\n        letterSpacing: textDesignData.letterSpacing || textTheme.letterSpacing || 'normal'\r\n    }\r\n}\r\n\r\nexport function getInheritTextStyle () {\r\n    return {\r\n        fontFamily: \"inherit\",\r\n        textAlign: \"inherit\",\r\n        fontSize: \"inherit\",\r\n        fontWeight: \"inherit\",\r\n        fontStyle: \"inherit\",\r\n        fontDecoration: \"inherit\",\r\n        color: \"inherit\",\r\n        backgroundColor: \"inherit\",\r\n        lineHeight: \"inherit\",\r\n        letterSpacing: \"inherit\",\r\n    }\r\n}\r\n\r\nexport function applyProperty (doc, win, propertyName, value, tagName = 'span') {\r\n    let html = getSelectionHtmlRemoveProperty(doc, win, propertyName);\r\n    if (html && !html.includes('<')) {\r\n        let sel = doc.getSelection();\r\n        let range = sel.getRangeAt(0);\r\n        range.deleteContents();\r\n        var span = doc.createElement(tagName);\r\n        span.setAttribute(\"style\", `${propertyName}: ${value}; display: inline`);\r\n        span.innerText = html;\r\n        range.insertNode(span);\r\n        sel.addRange(range);\r\n    }\r\n    else if (html) {\r\n        doc.execCommand(\r\n            'insertHTML', false, `<${tagName} style=\"${propertyName}: ${value}\">${html}</${tagName}>`);\r\n    }\r\n}\r\n\r\nexport function getSelectionHtmlRemoveProperty (doc, win, propertyName, tagName = 'span') {\r\n    let range;\r\n    if (doc.selection && doc.selection.createRange) {\r\n        range = doc.selection.createRange();\r\n        return range.htmlText;\r\n    }\r\n    else if (win.getSelection) {\r\n        let selection = win.getSelection();\r\n        if (selection.rangeCount > 0) {\r\n            range = selection.getRangeAt(0);\r\n            let clonedSelection = range.cloneContents();\r\n            let div = doc.createElement(tagName);\r\n            div.appendChild(clonedSelection);\r\n            let nodes = div.getElementsByTagName(\"*\");\r\n            for (let node of nodes) {\r\n                if (node.style && node.style.removeProperty)\r\n                    node.style.removeProperty(propertyName);\r\n            }\r\n            return div.innerHTML;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n\r\nexport function getSelectionText (doc, win, tagName = 'span') {\r\n    let range;\r\n    if (doc.selection && doc.selection.createRange) {\r\n        range = doc.selection.createRange();\r\n        return range.htmlText;\r\n    }\r\n    else if (win.getSelection) {\r\n        let selection = win.getSelection();\r\n        if (selection.rangeCount > 0) {\r\n            range = selection.getRangeAt(0);\r\n            let clonedSelection = range.cloneContents();\r\n            let div = doc.createElement(tagName);\r\n            div.appendChild(clonedSelection);\r\n            return div.innerText;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n\r\nfunction nextNode(node) {\r\n    if (node.hasChildNodes()) {\r\n        return node.firstChild;\r\n    } else {\r\n        while (node && !node.nextSibling) {\r\n            node = node.parentNode;\r\n        }\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        return node.nextSibling;\r\n    }\r\n}\r\n\r\nexport function getRangeSelectedNodes(range) {\r\n    var node = range.startContainer;\r\n    var endNode = range.endContainer;\r\n\r\n    // Special case for a range that is contained within a single node\r\n    if (node == endNode) {\r\n        return [node];\r\n    }\r\n\r\n    // Iterate nodes until we hit the end container\r\n    var rangeNodes = [];\r\n    while (node && node != endNode) {\r\n        rangeNodes.push( node = nextNode(node) );\r\n    }\r\n\r\n    // Add partially selected nodes at the start of the range\r\n    node = range.startContainer;\r\n    while (node && node != range.commonAncestorContainer) {\r\n        rangeNodes.unshift(node);\r\n        node = node.parentNode;\r\n    }\r\n\r\n    return rangeNodes;\r\n}\r\n\r\nexport function getParentLine(range) {\r\n    var node = range.startContainer;\r\n    let found = false;\r\n    let parentLine;\r\n    while (!found) {\r\n        let newParantLine = (parentLine || node).parentNode;\r\n        if (!newParantLine) {\r\n            parentLine = undefined;\r\n            break;\r\n        }\r\n\r\n        if (newParantLine.id === \"editableDiv\") {\r\n            found = true;\r\n            break;\r\n        } else {\r\n            parentLine = newParantLine;\r\n        }\r\n    }\r\n\r\n    return parentLine;\r\n}\r\n\r\nexport function getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\nexport function getLineSelected(selection) {\r\n    let range = selection.getRangeAt(0);\r\n    let nodes = getRangeSelectedNodes(range);\r\n\r\n    let lineNodes = [];\r\n\r\n    nodes.forEach(node => {\r\n        let found = false;\r\n        let parentLine = node;\r\n        while (!found) {\r\n            let newParantLine = parentLine.parentNode;\r\n            if (!newParantLine) {\r\n                parentLine = undefined;\r\n                break;\r\n            }\r\n\r\n            if (newParantLine.id === \"editableDiv\") {\r\n                found = true;\r\n                break;\r\n            } else {\r\n                parentLine = newParantLine;\r\n            }\r\n        }\r\n\r\n        if (parentLine && !lineNodes.includes(parentLine))\r\n            lineNodes.push(parentLine);\r\n    })\r\n\r\n    return lineNodes;\r\n}\r\n","import React from \"react\";\r\nimport {getInheritTextStyle} from \"../TextHelper\";\r\n\r\nexport default class InputDiv extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return false;\r\n    }\r\n\r\n    render () {\r\n        let TextTag = this.props.tag;\r\n        return (\r\n            <TextTag\r\n                id={\"editableDiv\"}\r\n                key={'textEditor'}\r\n                ref={this.props.textareaRef}\r\n                contentEditable={true}\r\n                style={{...{\r\n                    width: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    margin: 0,\r\n                    height: \"auto\",\r\n                    overflow: \"hidden\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: 'pre-wrap'\r\n                }, ...getInheritTextStyle()}}\r\n                dangerouslySetInnerHTML={{ __html: this.props.value }}\r\n            >\r\n            </TextTag>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport InputDiv from \"./InputDiv\";\r\nimport {\r\n    getInheritTextStyle,\r\n    getParentLine,\r\n    getSelectionHtmlRemoveProperty,\r\n    getSelectionText,\r\n    getTextStyle\r\n} from \"../TextHelper\";\r\nimport {JSToCSS} from \"../../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class InputWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.textareaRef = React.createRef();\r\n        this.textEditorRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onLoad && this.props.onLoad();\r\n        this.updateHeight();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.props.onUpdate && this.props.onUpdate();\r\n    }\r\n\r\n    updateHeight = () => {\r\n        this.setState({\r\n            // width: this.textareaRef.current.scrollWidth,\r\n            height: this.textareaRef.current.scrollHeight,\r\n        })\r\n    }\r\n\r\n    onChange = (e, callback) => {\r\n        this.updateHeight();\r\n        this.props.onChange && this.props.onChange(e, callback);\r\n    }\r\n\r\n    onInput = (e) => {\r\n        if (e)\r\n            e.target.value = this.textareaRef.current.innerHTML;\r\n        else\r\n            e = {target: {value: this.textareaRef.current.innerHTML}}\r\n\r\n        this.onChange(e);\r\n    }\r\n\r\n    keydown = (e) => {\r\n        e = e || window.event;\r\n        let key = e.which || e.keyCode; // keyCode detection\r\n        if (key === 13) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            let sel = this.props.doc.getSelection();\r\n            let range = sel.getRangeAt(0);\r\n            let line = getParentLine(range);\r\n            if (!line)\r\n                return;\r\n\r\n            range.deleteContents();\r\n\r\n            range.setEndAfter(line);\r\n\r\n            let text = getSelectionText(this.props.doc, this.props.iframeNode.contentWindow);\r\n\r\n            if (!text) {\r\n                let br = this.props.doc.createElement(\"br\");\r\n                range.startContainer.after(br);\r\n                range.setStartBefore(br);\r\n            }\r\n\r\n            let html = getSelectionHtmlRemoveProperty(this.props.doc, this.props.iframeNode.contentWindow);\r\n\r\n            console.log(\"html\", html, text)\r\n\r\n            range.deleteContents();\r\n\r\n            range.setStartAfter(line);\r\n\r\n            line.insertAdjacentHTML('afterend', html)\r\n            this.onInput();\r\n        } else {\r\n            // this.props.doc.execCommand('selectAll');\r\n                // let text = getSelectionText(this.props.doc, this.props.iframeNode.contentWindow);\r\n\r\n            console.log(\"text\", this.textareaRef.current.innerText)\r\n            if (!this.textareaRef.current.innerText.trim()) {\r\n                this.textareaRef.current.innerHTML = '';\r\n\r\n                console.log(\"this.props.tag\", this.props.tag)\r\n                let div = this.props.doc.createElement(this.props.tag);\r\n                div.setAttribute(\"title\", \"line\");\r\n                div.setAttribute(\"style\", JSToCSS({...getInheritTextStyle(), ...{margin: \"0px\"}}))\r\n                div.focus();\r\n                div.innerText = String.fromCharCode(key);\r\n\r\n                let sel = this.props.doc.getSelection();\r\n                let range = sel.getRangeAt(0);\r\n\r\n                range.insertNode(div);\r\n                range.setStart(div, 1);\r\n                range.collapse(true)\r\n\r\n                sel.removeAllRanges()\r\n                sel.addRange(range)\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        }\r\n    }\r\n\r\n    init = (doc) => {\r\n        if (!this.inited) {\r\n            this.inited = true;\r\n            doc.getElementById(\"textEditor\").addEventListener(\"input\", this.onInput);\r\n            // doc.getElementById(\"textEditor\").addEventListener(\"keydown\", this.keydown);\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let {textTheme, textStaticData, textDesignData} = this.props;\r\n        let TextTag = this.props.tag;\r\n        return (\r\n            <div\r\n                dir={textStaticData.dir || \"ltr\"}\r\n                ref={this.textEditorRef}\r\n                id={'textEditor'}\r\n                style={{...{\r\n                    width: this.props.width,\r\n                    boxSizing: \"border-box\",\r\n                    margin: 0,\r\n                    height: this.state.height || this.props.height,\r\n                    resize: \"none\",\r\n                    overflow: \"hidden\"\r\n                }, ...getTextStyle(textTheme, textStaticData, textDesignData)}}\r\n            >\r\n                <InputDiv\r\n                    textareaRef={this.textareaRef}\r\n                    value={this.props.value}\r\n                    tag={this.props.tag}\r\n                    textTheme={this.props.textTheme}\r\n                    textStaticData={this.props.textStaticData}\r\n                    textDesignData={this.props.textDesignData}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport './TextEditor.css';\r\nimport {alignItem} from \"../../../AwesomwGridLayoutHelper\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\n\r\nexport default class TextEditorButton extends React.Component {\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                buttonBaseStyle={{\r\n                    marginLeft: 4,\r\n                }}\r\n                imageContainerStyle={{\r\n                    padding: 6\r\n                }}\r\n                onClick={this.props.onClick}\r\n                rootRef={this.props.rootRef}\r\n            >\r\n                {this.props.children}\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles({\r\n    popper: {\r\n        zIndex: 999999999999999999\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        borderRight: \"1px solid #c6c6c6\",\r\n        paddingRight: 12\r\n    }\r\n});\r\n\r\nexport default function FontSizeAutoComplete(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Autocomplete\r\n            classes={{\r\n                popper: classes.popper,\r\n                root: classes.root\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FontSizeAutoComplete from \"./FontSizeAutoComplete\";\r\n\r\nexport default class FontSizeSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n    filterOptions = (options) => {\r\n        return [\"6\",\"8\",\"10\",\"12\",\"14\",\"16\",\"18\",\"20\",\"22\",\"24\",\"28\",\"32\",\"48\",\"72\"];\r\n    }\r\n\r\n    getAllowableFontSize = () => {\r\n        return (new Array(100)).fill(\"0\").map((v, i) => {\r\n            return `${i + 1}`;\r\n        });\r\n    }\r\n\r\n    onFontSizeChange = (e, value, reason) => {\r\n        console.log(\"onFontSizeChange value reason\", value, reason);\r\n        if (reason === \"input\") {\r\n            console.log(\"onFontSizeChange input\", value);\r\n            this.setState({tempFontSize: value});\r\n        } else if (reason === \"select-option\") {\r\n            console.log(\"onFontSizeChange select-option\", value);\r\n            this.setFontSize(value);\r\n        } else if (reason === \"enter\") {\r\n            console.log(\"onFontSizeChange enter\", value, this.getAllowableFontSize());\r\n            if (this.getAllowableFontSize().includes(value))\r\n                this.setFontSize(value);\r\n            else\r\n                this.setState({tempFontSize: this.getFontSizeValue(value !== \"\" && true)});\r\n        }\r\n    }\r\n\r\n    setFontSize = (value) => {\r\n        this.setState({tempFontSize: value});\r\n        this.props.onChange(value);\r\n    }\r\n\r\n    setFontSizeUi = (value) => {\r\n        this.setState({tempFontSize: value});\r\n    }\r\n\r\n    getFontSizeValue = (ignoreState = false) => {\r\n        let {textTheme, textStaticData, textDesignData} = this.props;\r\n\r\n        if (!ignoreState && this.state.tempFontSize !== undefined)\r\n            return this.state.tempFontSize;\r\n\r\n        return (!ignoreState && this.state.tempFontSize) ||\r\n            (textDesignData.fontSize && textDesignData.fontSize.toString()) ||\r\n            (textTheme.fontSize &&\r\n                textTheme.fontSize.toString()) ||\r\n            \"22\"\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <FontSizeAutoComplete\r\n                size={\"small\"}\r\n                options={this.getAllowableFontSize()}\r\n                value={this.getFontSizeValue()}\r\n                getOptionLabel={(option) => option}\r\n                filterOptions={this.filterOptions}\r\n                style={this.props.style || { width: 64 }}\r\n                popupIcon={\r\n                    <img width={10} height={10} src={process.env.PUBLIC_URL + \"/static/icon/down-arrow.svg\"}/>\r\n                }\r\n                renderInput={(params) => {\r\n                    params.InputProps.disableUnderline = true;\r\n                    params.inputProps.style = {padding: 0, fontSize: 14};\r\n                    return (\r\n                        <TextField {...params} onChange={(e) => {\r\n                            this.onFontSizeChange(e, e.target.value, 'input');\r\n                        }}/>\r\n                    )\r\n                }}\r\n                blurOnSelect\r\n                onChange={this.onFontSizeChange}\r\n                onKeyDown={(e) => {\r\n                    if((e.keyCode || e.which) === 13){\r\n                        this.onFontSizeChange(e, e.target.value, 'enter');\r\n                    }\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport TextEditorButton from \"../TextEditorButton\";\r\nimport {EditorContext} from \"../../../../Editor/EditorContext\";\r\nimport ThemeColorPicker from \"../../../../Test/Theme/ThemeColorPicker\";\r\n\r\nexport default class TextColorSelector extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.buttonRef = React.createRef();\r\n    }\r\n\r\n    handleChangeComplete = (color) => {\r\n        this.props.onChange(color);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <TextEditorButton\r\n                    rootRef={this.buttonRef}\r\n                    onClick={(e) => {\r\n                        this.setState({open: true})\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </TextEditorButton>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <ThemeColorPicker\r\n                        onClose={(e) => {\r\n                            this.setState({open: false})\r\n                        }}\r\n                        onChangeComplete={ this.handleChangeComplete }\r\n                        disableAlpha\r\n                        editor={this.context.editor}\r\n                        defaultPosition={\r\n                            this.buttonRef.current.getBoundingClientRect()\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport './TextEditor.css';\r\nimport TextEditorButton from \"./TextEditorButton\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\nimport DropDown from \"../../../Menus/CommonComponents/DropDown\";\r\nimport {getRandomColor} from \"../TextHelper\";\r\nimport FontSizeSelector from \"./components/FontSizeSelector\";\r\nimport TextColorSelector from \"./components/TextColorSelector\";\r\n\r\nexport default class TextEditor extends React.Component {\r\n    static contextType = EditorContext;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    // Depricated: These function does not support undo redo\r\n    // applyProperty = (propertyName, value, tagName = 'span') => {\r\n    //     applyProperty(this.props.doc, this.props.iframeNode.contentWindow, propertyName, value, tagName);\r\n    //     this.props.inputWrapperRef.current.onInput();\r\n    // }\r\n\r\n    getTextDir = () => {\r\n        let {textStaticData} = this.props;\r\n\r\n        if (!textStaticData.dir)\r\n            return \"ltr\";\r\n\r\n        return textStaticData.dir;\r\n    }\r\n\r\n    render () {\r\n        let {textTheme, textStaticData, textDesignData, anchorEI} = this.props;\r\n        return (\r\n            <Popper\r\n                open={true}\r\n                anchorEl={anchorEI}\r\n                placement=\"top-start\"\r\n                style={{\r\n                    zIndex: 9999999999999999\r\n                }}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'scrollParent',\r\n                    },\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"TextEditorRoot\"\r\n                    onMouseDown={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }}\r\n                    onDoubleClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }}\r\n                >\r\n                    <div className=\"TextEditorContainer\">\r\n                        <div className=\"TextEditorContainerRow\">\r\n                            <DropDown\r\n                                rootStyle={{\r\n                                    borderRight: \"1px solid #c6c6c6\",\r\n                                    marginRight: 12,\r\n                                    marginLeft: 4\r\n                                }}\r\n                                menuItemStyle={{\r\n                                    padding: 0\r\n                                }}\r\n                                options={this.context.getTheme(\"Text\")}\r\n                                onChange={(v) => {\r\n                                    textDesignData.textTheme = v.name;\r\n                                    this.props.onChangeData(textStaticData, textDesignData);\r\n                                    window.requestAnimationFrame(() => {\r\n                                        this.props.updateInputWrapper();\r\n                                        this.props.inputWrapperRef.current.onInput();\r\n                                    })\r\n                                }}\r\n                                value={textTheme}\r\n                                spanStyle={{\r\n                                    width: 180,\r\n                                    fontSize: 14,\r\n                                    border: \"0px solid #cfcfcf\",\r\n                                }}\r\n                                renderer={(textTheme) => {\r\n                                    return (\r\n                                        <div className=\"TextEditorThemeRendererRoot\">\r\n                                        <span className=\"TextEditorThemeRendererColor\" style={{\r\n                                            backgroundColor: textTheme.color\r\n                                        }}>\r\n                                        </span>\r\n                                            <span className=\"TextEditorThemeRendererName\">\r\n                                            {textTheme.name}\r\n                                        </span>\r\n                                            <span className=\"TextEditorThemeRendererSize\">\r\n                                            {textTheme.fontSize}px\r\n                                        </span>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                valueRenderer={(textTheme) => {\r\n                                    return (\r\n                                        <span>\r\n                                        {textTheme.name}\r\n                                    </span>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <FontSizeSelector\r\n                                style={{ width: 64 }}\r\n                                textTheme={textTheme}\r\n                                textStaticData={textStaticData}\r\n                                textDesignData={textDesignData}\r\n                                onChange={(value) => {\r\n                                    this.props.doc.execCommand('fontSize', false, 1);\r\n\r\n                                    let nodes = this.props.doc.querySelectorAll(`[size=\"1\"]`);\r\n\r\n                                    nodes.forEach(node => {\r\n                                        node.removeAttribute(\"size\");\r\n                                        node.style.fontSize = `${value}px`;\r\n                                    })\r\n\r\n                                    this.props.inputWrapperRef.current.onInput();\r\n                                }}\r\n                            />\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('bold');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/bold.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('italic');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/italic.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('underline');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/underline.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextColorSelector\r\n                                onChange={(color) => {\r\n                                    let randomColor = getRandomColor();\r\n                                    this.props.doc.execCommand('foreColor', false, randomColor);\r\n\r\n                                    let nodes = this.props.doc.querySelectorAll(`[color=\"${randomColor}\"]`);\r\n\r\n                                    if (color instanceof Object) {\r\n                                        nodes.forEach(node => {\r\n                                            node.removeAttribute(\"color\");\r\n                                            [...node.classList].forEach(className => {\r\n                                                if (className.startsWith('Color_'))\r\n                                                    node.classList.remove(className);\r\n                                            });\r\n                                            node.classList.add(this.context.getThemeColorClass(color));\r\n                                            let childs = node.getElementsByTagName(\"*\");\r\n                                            for (let childNode of childs) {\r\n                                                [...childNode.classList].forEach(className => {\r\n                                                    if (className.startsWith('Color_'))\r\n                                                        childNode.classList.remove(className);\r\n                                                });\r\n                                            }\r\n                                        })\r\n                                    } else {\r\n                                        nodes.forEach(node => {\r\n                                            node.setAttribute(\"color\", color);\r\n                                            [...node.classList].forEach(className => {\r\n                                                if (className.startsWith('Color_'))\r\n                                                    node.classList.remove(className);\r\n                                            });\r\n                                            let childs = node.getElementsByTagName(\"*\");\r\n                                            for (let childNode of childs) {\r\n                                                [...childNode.classList].forEach(className => {\r\n                                                    if (className.startsWith('Color_'))\r\n                                                        childNode.classList.remove(className);\r\n                                                });\r\n                                            }\r\n                                        })\r\n                                    }\r\n\r\n                                    this.props.inputWrapperRef.current.onInput();\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/color.svg'} />\r\n                            </TextColorSelector>\r\n                            <TextColorSelector\r\n                                onChange={(color) => {\r\n                                    let randomColor = getRandomColor();\r\n                                    this.props.doc.execCommand('fontSize', false, 1);\r\n                                    this.props.doc.execCommand('backColor', false, randomColor);\r\n\r\n                                    let nodes = this.props.doc.querySelectorAll(`[size=\"1\"]`);\r\n\r\n                                    if (color instanceof Object) {\r\n                                        nodes.forEach(node => {\r\n                                            node.removeAttribute(\"size\");\r\n                                            [...node.classList].forEach(className => {\r\n                                                if (className.startsWith('BackColor_'))\r\n                                                    node.classList.remove(className);\r\n                                            });\r\n                                            node.classList.add(this.context.getThemeBackColorClass(color));\r\n                                            if (node.style && node.style.removeProperty)\r\n                                                node.style.removeProperty(\"background-color\");\r\n                                            let childs = node.getElementsByTagName(\"*\");\r\n                                            for (let childNode of childs) {\r\n                                                [...childNode.classList].forEach(className => {\r\n                                                    if (className.startsWith('BackColor_'))\r\n                                                        childNode.classList.remove(className);\r\n                                                });\r\n                                            }\r\n                                        })\r\n                                    } else {\r\n                                        nodes.forEach(node => {\r\n                                            node.removeAttribute(\"size\");\r\n                                            if (node.style)\r\n                                                node.style.backgroundColor = color;\r\n                                            [...node.classList].forEach(className => {\r\n                                                if (className.startsWith('BackColor_'))\r\n                                                    node.classList.remove(className);\r\n                                            });\r\n                                            let childs = node.getElementsByTagName(\"*\");\r\n                                            for (let childNode of childs) {\r\n                                                [...childNode.classList].forEach(className => {\r\n                                                    if (className.startsWith('BackColor_'))\r\n                                                        childNode.classList.remove(className);\r\n                                                });\r\n                                            }\r\n                                        })\r\n                                    }\r\n\r\n                                    this.props.inputWrapperRef.current.onInput();\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/fill.svg'} />\r\n                            </TextColorSelector>\r\n                        </div>\r\n                        <div className=\"TextEditorContainerRow\">\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('justifyLeft');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/align-left.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('justifyCenter');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/align-center.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('justifyRight');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/align-right.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('justifyFull');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/justify.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('insertUnorderedList');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/list-dot.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('insertOrderedList');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/list-number.svg'} />\r\n                            </TextEditorButton>\r\n                            {/*<TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('indent');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/indent-plus.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('outdent');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/indent-remove.svg'} />\r\n                            </TextEditorButton>*/}\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    // let sel = this.props.doc.getSelection();\r\n                                    // console.log(\"Selected Lines\", getLineSelected(sel))\r\n                                    if (this.getTextDir() === \"ltr\")\r\n                                        textStaticData.dir = \"rtl\";\r\n                                    else\r\n                                        textStaticData.dir = \"ltr\";\r\n\r\n                                    this.props.onChangeData(textStaticData, textDesignData);\r\n                                }}\r\n                            >\r\n                                {\r\n                                    <img draggable={false} width={16} height={16}\r\n                                         src={process.env.PUBLIC_URL + `/static/icon/texteditor/text-direction-${this.getTextDir()}.svg`} />\r\n                                }\r\n                            </TextEditorButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Frame from 'iframe-react';\r\nimport InputWrapper from \"./Menus/InputWrapper\";\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport TextEditor from \"./Menus/TextEditor\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\nimport {getTextStyle} from \"./TextHelper\";\r\n\r\nexport default class TextWrapper extends React.PureComponent {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editMode: false,\r\n            editableStyle: {\r\n\r\n            },\r\n            iframeNode: undefined\r\n        };\r\n\r\n        this.iframe = React.createRef();\r\n        this.inputWrapperRef = React.createRef();\r\n    }\r\n\r\n    setEditableStyle = (editableStyle) => {\r\n        this.setState({editableStyle});\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n\r\n    resizeIFrameToFitContent( document ) {\r\n        let textarea = document.getElementById(\"textEditor\");\r\n        let rect = textarea.getBoundingClientRect();\r\n        this.setState({\r\n            iframeWidth: rect.width,\r\n            iframeHeight: rect.height,\r\n        })\r\n\r\n        this.inputWrapperRef.current && this.inputWrapperRef.current.init(document);\r\n\r\n        this.setState({iframeNode: this.iframe.current.frame})\r\n\r\n        this.updateStyleSheets();\r\n    }\r\n\r\n    updateStyleSheets = () => {\r\n        if (this.doc)\r\n            this.context.calculateColorCSS(this.doc);\r\n    }\r\n\r\n    setEditMode = (editMode) => {\r\n        if (!editMode)\r\n            this.setState({iframeNode: undefined});\r\n        this.setState({editMode});\r\n        this.props.onEditModeChange && this.props.onEditModeChange(editMode);\r\n    }\r\n\r\n    getTag = () => {\r\n        let {textDesignData} = this.props;\r\n        let textTheme = this.context.getTheme(\"Text\", textDesignData.textTheme) || {};\r\n        return textDesignData.tagName || textTheme.tagName || \"h6\";\r\n    }\r\n\r\n    updateInputWrapper = () => {\r\n        this.inputWrapperRef.current.updateHeight();\r\n    }\r\n\r\n    render () {\r\n        let {textTheme, textStaticData, textDesignData} = this.props;\r\n\r\n        let TextTag = this.getTag();\r\n\r\n        if (!this.state.editMode) {\r\n            return (\r\n                <TextTag\r\n                    className=\"TextRoot\"\r\n                    style={getTextStyle(textTheme, textStaticData, textDesignData)}\r\n                    dir={textStaticData.dir || \"ltr\"}\r\n                    dangerouslySetInnerHTML={{ __html: textStaticData.textValue }}\r\n                >\r\n                    {/*<div*/}\r\n                    {/*    style={{...{*/}\r\n                    {/*        width: \"100%\",*/}\r\n                    {/*        boxSizing: \"border-box\",*/}\r\n                    {/*        margin: 0,*/}\r\n                    {/*        height: \"auto\",*/}\r\n                    {/*        overflow: \"hidden\",*/}\r\n                    {/*        display: \"inline-block\",*/}\r\n                    {/*        whiteSpace: 'pre-wrap'*/}\r\n                    {/*    }}}*/}\r\n                    {/*    dangerouslySetInnerHTML={{ __html: textStaticData.textValue }}*/}\r\n                    {/*>*/}\r\n                    {/*</div>*/}\r\n                </TextTag>\r\n            )\r\n        } else {\r\n            return (\r\n                <ClickAwayListener onClickAway={(e) => this.setEditMode(false)}>\r\n                    <>\r\n                    {\r\n                        this.state.iframeNode &&\r\n                        <TextEditor\r\n                            onChangeData={this.props.onChangeData}\r\n                            inputWrapperRef={this.inputWrapperRef}\r\n                            onChange={this.props.onChange}\r\n                            textStaticData={textStaticData}\r\n                            textTheme={textTheme}\r\n                            textDesignData={textDesignData}\r\n                            anchorEI={this.state.iframeNode}\r\n                            iframeNode={this.state.iframeNode}\r\n                            updateInputWrapper={this.updateInputWrapper}\r\n                            doc={this.doc}\r\n                        />\r\n                    }\r\n                    <Frame\r\n                        id={\"Hello\"}\r\n                        key={'textEditorFrame'}\r\n                        ref={this.iframe}\r\n                        title=\"iFrame example\"\r\n                        style={{\r\n                            width: this.state.iframeWidth || \"unset\",\r\n                            height: this.state.iframeHeight || \"unset\",\r\n                            border: 0\r\n                        }}\r\n                        head={<>\r\n                            <style type=\"text/css\">\r\n                                {`\r\n                                body{\r\n                                    width: fit-content;\r\n                                    height: fit-content;\r\n                                    box-sizing: border-box;\r\n                                    margin: 0px;\r\n                                    display: flex;\r\n                                    overflow: hidden;\r\n                                }\r\n                                body>div{\r\n                                    width: fit-content;\r\n                                    height: fit-content;\r\n                                    box-sizing: border-box;\r\n                                    margin: 0px;\r\n                                    display: flex;\r\n                                    overflow: hidden;\r\n                                }\r\n//                                 html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, font, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td {\r\n//   margin: 0;\r\n//   padding: 0;\r\n//   border: 0;\r\n//   outline: 0;\r\n//   vertical-align: baseline;\r\n//   background: transparent;\r\n// }\r\n                            `}\r\n                            </style>\r\n                        </>}\r\n                        documentRef={(doc) => {\r\n                            this.doc = doc;\r\n                        }}\r\n                    >\r\n                        <InputWrapper\r\n                            onLoad={() => {\r\n                                this.resizeIFrameToFitContent(this.doc);\r\n                            }}\r\n                            onUpdate={() => {\r\n                                this.resizeIFrameToFitContent(this.doc);\r\n                            }}\r\n                            onChange={this.props.onChange}\r\n                            value={textStaticData.textValue}\r\n                            width={this.props.width}\r\n                            ref={this.inputWrapperRef}\r\n                            tag={this.getTag()}\r\n                            textTheme={textTheme}\r\n                            textStaticData={textStaticData}\r\n                            textDesignData={textDesignData}\r\n                            iframeNode={this.state.iframeNode}\r\n                            doc={this.doc}\r\n                        >\r\n                        </InputWrapper>\r\n                    </Frame>\r\n                    </>\r\n                </ClickAwayListener>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport '../../HelperStyle.css';\r\nimport './Text.css';\r\nimport {\r\n    getCompositeDesignData,\r\n    getFromTempData,\r\n    setDataInBreakpoint,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport TextWrapper from \"./TextWrapper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Text extends AGLComponent{\r\n    static contextType = EditorContext;\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editMode: false\r\n        }\r\n\r\n        this.textRef = React.createRef();\r\n    }\r\n\r\n    resolveDesignData = () => {\r\n        // resolveDesignData(this, \"border\", {});\r\n    };\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n        };\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n\r\n    };\r\n\r\n    onChange = (e, callback) => {\r\n        if (e) {\r\n            let textStaticData = getFromTempData(this, \"textStaticData\");\r\n            textStaticData.textValue = e.target.value;\r\n        }\r\n\r\n        this.props.select.onScrollItem();\r\n    }\r\n\r\n    onEditModeChange = (editMode) => {\r\n        this.setState({editMode});\r\n        this.props.select.onScrollItem();\r\n    }\r\n\r\n    onChangeData = (textStaticData, textDesignData) => {\r\n        setTempData(\"textStaticData\", textStaticData, this.getAgl(), true);\r\n        setDataInBreakpoint(\"design.textDesignData\", textDesignData, this.getAgl(), true, undefined, true);\r\n        this.props.select.onScrollItem();\r\n    }\r\n\r\n    getStaticChildren = () => {\r\n        this.resolveDesignData();\r\n\r\n        let textStaticData = getFromTempData(this, \"textStaticData\");\r\n        let textDesignData = getCompositeDesignData(this).textDesignData;\r\n        let textTheme = this.context.getTheme(\"Text\", textDesignData.textTheme);\r\n\r\n        let rect = {};\r\n        if (this.getAgl()){\r\n            rect = this.getAgl().getSize(false);\r\n        }\r\n\r\n        return (\r\n            <TextWrapper\r\n                ref={this.textRef}\r\n                width={rect.width}\r\n                height={rect.height}\r\n                onChange={this.onChange}\r\n                onChangeData={this.onChangeData}\r\n                onEditModeChange={this.onEditModeChange}\r\n                textStaticData={textStaticData}\r\n                textDesignData={textDesignData}\r\n                textTheme={textTheme}\r\n                onThemeChange={this.onThemeChange}\r\n            >\r\n            </TextWrapper>\r\n        )\r\n    };\r\n\r\n    onDoubleClickOverride = (agl, e) => {\r\n        if (!this.props.editor)\r\n            return;\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        this.textRef.current.setEditMode(true);\r\n    }\r\n\r\n    onDeSelectListener = (agl) => {\r\n        if (!this.props.editor)\r\n            return;\r\n\r\n        this.textRef.current.setEditMode(false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"Text\"\r\n                aglComponent={this}\r\n                {...this.props}\r\n                data={this.getData()}\r\n                resizeSides={!this.state.editMode ? ['e', 'w'] : []}\r\n                style={{\r\n                    height: \"auto\",\r\n                    minHeight: \"auto\",\r\n                    // pointerEvents: \"none\"\r\n                }}\r\n                getPrimaryOptions={this.getPrimaryOptions}\r\n                getInspector={this.getInspector}\r\n                getStaticChildren={this.getStaticChildren}\r\n                noStretch\r\n                onDoubleClickOverride={this.onDoubleClickOverride}\r\n                onDeSelectListener={this.onDeSelectListener}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nText.defaultProps = {\r\n    tagName: \"Text\"\r\n};\r\n","import ContainerBase from \"../Components/Containers/ContainerBase\";\r\nimport Header from \"../Components/Containers/Header\";\r\nimport Footer from \"../Components/Containers/Footer\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport Section from \"../Components/Containers/Section\";\r\nimport Stack from \"../Components/Stack/Stack\";\r\nimport VerticalSpacer from \"../Components/Stack/VerticalSpacer\";\r\nimport FadeInAnimation from \"../Test/Animations/FadeInAnimation\";\r\nimport BounceInAnimation from \"../Test/Animations/BounceInAnimation\";\r\nimport GlideInAnimation from \"../Test/Animations/GlideInAnimation\";\r\nimport FloatInAnimation from \"../Test/Animations/FloatInAnimation\";\r\nimport ExpandInAnimation from \"../Test/Animations/ExpandInAnimation\";\r\nimport SpinInAnimation from \"../Test/Animations/SpinInAnimation\";\r\nimport FlyInAnimation from \"../Test/Animations/FlyInAnimation\";\r\nimport TurnInAnimation from \"../Test/Animations/TurnInAnimation\";\r\nimport ArcInAnimation from \"../Test/Animations/ArcInAnimation\";\r\nimport PuffInAnimation from \"../Test/Animations/PuffInAnimation\";\r\nimport FoldInAnimation from \"../Test/Animations/FoldInAnimation\";\r\nimport FlipInAnimation from \"../Test/Animations/FlipInAnimation\";\r\nimport RevealAnimation from \"../Test/Animations/RevealAnimation\";\r\nimport Text from \"../Components/Text/Text\";\r\n\r\nlet DynamicComponents = {};\r\n\r\nexport let initDynamicComponents = () => {\r\n    DynamicComponents[\"ContainerBase\"] = ContainerBase;\r\n    DynamicComponents[\"PageBase\"] = PageBase;\r\n    DynamicComponents[\"Header\"] = Header;\r\n    DynamicComponents[\"Footer\"] = Footer;\r\n    DynamicComponents[\"Section\"] = Section;\r\n    DynamicComponents[\"Stack\"] = Stack;\r\n    DynamicComponents[\"VerticalSpacer\"] = VerticalSpacer;\r\n    DynamicComponents[\"Text\"] = Text;\r\n};\r\n\r\nexport default DynamicComponents;\r\n\r\nexport let DynamicAnimations = {};\r\n\r\nexport let initDynamicAnimations = () => {\r\n    DynamicAnimations[\"fadeIn\"] = FadeInAnimation;\r\n    DynamicAnimations[\"bounceIn\"] = BounceInAnimation;\r\n    DynamicAnimations[\"glideIn\"] = GlideInAnimation;\r\n    DynamicAnimations[\"floatIn\"] = FloatInAnimation;\r\n    DynamicAnimations[\"expandIn\"] = ExpandInAnimation;\r\n    DynamicAnimations[\"spinIn\"] = SpinInAnimation;\r\n    DynamicAnimations[\"flyIn\"] = FlyInAnimation;\r\n    DynamicAnimations[\"turnIn\"] = TurnInAnimation;\r\n    DynamicAnimations[\"arcIn\"] = ArcInAnimation;\r\n    DynamicAnimations[\"puffIn\"] = PuffInAnimation;\r\n    DynamicAnimations[\"foldIn\"] = FoldInAnimation;\r\n    DynamicAnimations[\"flipIn\"] = FlipInAnimation;\r\n    DynamicAnimations[\"reveal\"] = RevealAnimation;\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\nimport DynamicComponents from \"../Dynamic/DynamicComponents\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport '../HelperStyle.css';\r\n\r\nexport default class AdjustmentPageControllers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    addSection = (index, isVertical) => {\r\n        let {page} = this.props;\r\n        page.addSectionQueue(index, \"Section\", DynamicComponents, undefined, isVertical);\r\n    };\r\n\r\n    getAnchor = (index) => {\r\n        return  document.getElementById(`page_add_horizontal_${index}`)\r\n    };\r\n\r\n    needUpdate = () => {\r\n        clearTimeout(this.updateTimeout);\r\n        this.updateTimeout = setTimeout(() => {\r\n            if (!this.mounted) {\r\n                clearTimeout(this.updateTimeout);\r\n                return;\r\n            }\r\n            this.forceUpdate();\r\n        }, 500);\r\n    };\r\n\r\n    render () {\r\n        let {grid} = this.props;\r\n        return (\r\n                [\r\n                    new Array(grid.y + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `1/${index}/2/${index + 1}`\r\n                        };\r\n                        index === 0 && (style.justifySelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                        >\r\n                            <div\r\n                                className={containerClasses}\r\n                                onClick={(e) => {\r\n                                    this.addSection(index, true);\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={8} height={8} src={require('./icons/plus.svg')} />\r\n                            </div>\r\n                        </div>\r\n                    }),\r\n                    new Array(grid.x + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `${index}/1/${index + 1}/2`,\r\n                            pointerEvents: \"auto\"\r\n                        };\r\n                        index === 0 && (style.alignSelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddHorizontalSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddHorizontalSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddHorizontalSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                            id={`page_add_horizontal_${index}`}\r\n                            onClick={(e) => {\r\n                                this.setState({anchorEl: e.currentTarget})\r\n                            }}\r\n                        >\r\n                            {!this.getAnchor(index) && this.needUpdate()}\r\n                            <Popper open={Boolean(document.getElementById(`page_add_horizontal_${index}`))}\r\n                                    anchorEl={\r\n                                        () => {\r\n                                            return this.getAnchor(index);\r\n                                        }\r\n                                    }\r\n                                    modifiers={{\r\n                                        preventOverflow: {\r\n                                            enabled: false,\r\n                                            boundariesElement: 'scrollParent',\r\n                                        },\r\n                                        hide: {\r\n                                            enabled: false,\r\n                                        },\r\n                                    }}\r\n                            >\r\n                                <div\r\n                                    className={containerClasses}\r\n                                    onClick={(e) => {\r\n                                        this.addSection(index, false);\r\n                                    }}\r\n                                >\r\n                                    <img draggable={false} className=\"IconImage\" width={8} height={8} src={require('./icons/plus.svg')} />\r\n                                </div>\r\n                            </Popper>\r\n                        </div>\r\n                    })\r\n                ]\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerFixedHolder extends React.Component {\r\n    render () {\r\n        let {size, id} = this.props;\r\n        return (\r\n            <div\r\n                className=\"fixed-holder\"\r\n                style={{\r\n                    top: size? size.top: 0,\r\n                    left: size? size.left: 0,\r\n                    width: size? size.width: 0,\r\n                    height: size? size.clientHeight || size.height: 0,\r\n                }}\r\n                id={`${id}_fixed_holder`}\r\n            >\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class PaddingInterface extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    borderTop: this.props.padding.top ? `${this.props.padding.top} solid rgba(2, 242, 255, 0.3` : \"unset\",\r\n                    borderLeft: this.props.padding.left ? `${this.props.padding.left} solid rgba(2, 242, 255, 0.3)` : \"unset\",\r\n                    borderBottom: this.props.padding.bottom ? `${this.props.padding.bottom} solid rgba(2, 242, 255, 0.3)` : \"unset\",\r\n                    borderRight: this.props.padding.right ? `${this.props.padding.right} solid rgba(2, 242, 255, 0.3)` : \"unset\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ParentSelectInterface extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    border: '1px solid rgb(2 50 255 / 40%)'\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {appendStyle, cloneObject, shallowEqual, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\nimport GridChildContainerChildren from \"./GridChildContainerChildren\";\r\nimport classNames from \"classnames\";\r\nimport AdjustmentPageControllers from \"./Adjustment/AdjustmentPageControllers\";\r\nimport GridChildContainerFixedHolder from \"./GridChildContainerFixedHolder\";\r\nimport PaddingInterface from \"./Test/PaddingInterface\";\r\nimport ParentSelectInterface from \"./Test/ParentSelectInterface\";\r\n\r\nexport default class GridChildContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.controllerRef = React.createRef();\r\n        this.fixedHolderRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.modifyOverflowStyle(this.props.overflowData, this.props.aglStyle);\r\n        this.modifyContainerStyle(this.props.grid, this.props.aglStyle, this.props.padding);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(this.grid, nextProps.grid) ||\r\n            !shallowEqual(this.size, nextProps.size) ||\r\n            this.props.selectAsParent !== nextProps.selectAsParent ||\r\n            this.props.selected !== nextProps.selected ||\r\n            !shallowEqual(this.padding, nextProps.padding) ||\r\n            !shallowEqual(JSON.stringify(this.allChildIndex),\r\n                JSON.stringify(Object.values(nextProps.allChildren).map(c => {\r\n                    return {\r\n                        z: c.zIndex,\r\n                        i: c.child.props.id\r\n                    }\r\n                })))\r\n        ) {\r\n            if (!shallowEqual(this.overflowData, nextProps.overflowData))\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n\r\n            if (!shallowEqual(this.grid, nextProps.grid) || !shallowEqual(this.padding, nextProps.padding))\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n\r\n            if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!shallowEqual(this.overflowData, nextProps.overflowData)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            return true;\r\n        }\r\n        if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren, grid, overflowData, aglStyle, size, padding} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => {\r\n            return {\r\n                z: c.zIndex,\r\n                i: c.child.props.id\r\n            }\r\n        });\r\n        this.grid = cloneObject(grid);\r\n        this.overflowData = cloneObject(overflowData);\r\n        this.aglStyle = cloneObject(aglStyle);\r\n        this.size = cloneObject(size);\r\n        this.padding = cloneObject(padding);\r\n    };\r\n\r\n    modifyContainerStyle = (grid, aglStyle, padding) => {\r\n        if (!grid)\r\n            grid = this.props.grid;\r\n\r\n        let {modifyContainerStyleOverride, agl} = this.props;\r\n\r\n        if (modifyContainerStyleOverride){\r\n            modifyContainerStyleOverride(this, agl, grid, aglStyle);\r\n            return;\r\n        }\r\n\r\n        let style = {\r\n            width: (aglStyle && aglStyle.width === \"auto\") ? \"auto\": \"100%\",\r\n            height: (aglStyle && aglStyle.height === \"auto\") ? \"auto\":\r\n                agl.getFromData(\"containerHeight\") || \"100%\",\r\n            display: \"grid\",\r\n            position: \"relative\",\r\n            boxSizing: \"border-box\",\r\n            gridTemplateRows: grid.gridTemplateRows,\r\n            gridTemplateColumns: grid.gridTemplateColumns,\r\n        };\r\n\r\n        if (padding) {\r\n            if (padding.top) style.paddingTop = padding.top;\r\n            if (padding.left) style.paddingLeft = padding.left;\r\n            if (padding.bottom) style.paddingBottom = padding.bottom;\r\n            if (padding.right) style.paddingRight = padding.right;\r\n\r\n            /*style.backgroundImage = \"\";\r\n            Object.keys(padding).forEach(key => {\r\n                if (key === \"top\")\r\n                    style.backgroundImage += `linear-gradient(to bottom, #00f3ffa8 ${padding.top}, transparent 10px),`\r\n                if (key === \"bottom\")\r\n                    style.backgroundImage += `linear-gradient(to top, #00f3ffa8 ${padding.bottom}, transparent 10px),`\r\n                if (key === \"left\")\r\n                    style.backgroundImage += `linear-gradient(to right, #00f3ffa8 ${padding.left}, transparent 10px),`\r\n                if (key === \"right\")\r\n                    style.backgroundImage += `linear-gradient(to left, #00f3ffa8 ${padding.right}, transparent 10px),`\r\n            });\r\n\r\n            if (style.backgroundImage)\r\n                style.backgroundImage = style.backgroundImage.slice(0, -1);*/\r\n        }\r\n\r\n        let styleNode = document.getElementById(this.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, this.getContainerStyleId(), this.getContainerStyleId());\r\n        } else {\r\n            updateStyle(styleNode, style, this.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    modifyOverflowStyle = (overflowData, aglStyle) => {\r\n        let styleNode = document.getElementById(this.getOverflowStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId()\r\n                , this.getOverflowStyleId());\r\n        } else {\r\n            updateStyle(styleNode, this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId());\r\n        }\r\n\r\n        let webkitScrollbarStyle = {};\r\n        let webkitScrollbarStyleId = this.getOverflowStyleId() + '::-webkit-scrollbar';\r\n        if (overflowData.auto === 'hide') webkitScrollbarStyle.display = \"none\";\r\n\r\n        let scrollStyleNode = document.getElementById(webkitScrollbarStyleId);\r\n\r\n        if (!scrollStyleNode) {\r\n            appendStyle(webkitScrollbarStyle, webkitScrollbarStyleId, webkitScrollbarStyleId);\r\n        } else {\r\n            updateStyle(scrollStyleNode, webkitScrollbarStyle, webkitScrollbarStyleId);\r\n        }\r\n    };\r\n\r\n    getOverflowStyle = (overflowData, aglStyle) => {\r\n        let style = {\r\n            display: \"grid\",\r\n            gridTemplateRows: \"1fr\",\r\n            gridTemplateColumns: \"1fr\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n        };\r\n\r\n        if (aglStyle && aglStyle.width === \"auto\") {\r\n            style.position = \"relative\";\r\n            delete style.left;\r\n            delete style.right;\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n        if (aglStyle && aglStyle.height === \"auto\") {\r\n            style.position = \"relative\";\r\n            delete style.left;\r\n            delete style.right;\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n\r\n        if (!overflowData)\r\n            overflowData = this.props.overflowData;\r\n\r\n        if (!overflowData)\r\n            return style;\r\n\r\n        if (overflowData.state === 'show') {\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'hide') {\r\n            style.overflowX = \"hidden\";\r\n            style.overflowY = \"hidden\";\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'scroll') {\r\n            style.overflowX = overflowData.overflowX? overflowData.auto === 'auto'? \"auto\" : \"scroll\" : \"hidden\" ;\r\n            style.overflowY = overflowData.overflowY? overflowData.auto === 'auto'? \"auto\" : \"scroll\" : \"hidden\" ;\r\n        }\r\n\r\n        if (overflowData.auto === 'hide') {\r\n            // TODO hide scrollbar with webkit\r\n            style.scrollbarWidth = 'none';\r\n            style.overflow = '-moz-scrollbars-none';\r\n            style['-ms-overflow-style'] = 'none';\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    getOverflowStyleId = () => {\r\n        return `style_overflow_${this.props.id}`\r\n    };\r\n\r\n    getContainerStyleId = () => {\r\n        return `style_container_${this.props.id}`\r\n    };\r\n\r\n    updateAdjustments = () => {\r\n        this.controllerRef.current && this.controllerRef.current.forceUpdate();\r\n        this.fixedHolderRef.current && this.fixedHolderRef.current.forceUpdate();\r\n    };\r\n\r\n    needOverflow = () => {\r\n        let overflowData = this.props.overflowData;\r\n\r\n        if (overflowData.state !== 'scroll')\r\n            return false;\r\n\r\n        if (overflowData.overflowX === 'scroll')\r\n                return true;\r\n        if (overflowData.overflowY === 'scroll')\r\n                return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        if (!this.props.show)\r\n            return null;\r\n        this.saveState();\r\n        let {allChildren, id, grid, isPage, page, size, getChildrenOverride, agl, editor} = this.props;\r\n\r\n        let overflowClasses = classNames(\r\n            this.getOverflowStyleId()\r\n        );\r\n        let containerClasses = classNames(\r\n            this.getContainerStyleId()\r\n        );\r\n\r\n        if (!isPage) {\r\n            if (this.needOverflow()) {\r\n                return (\r\n                    <div\r\n                        id={`${id}_overflow`}\r\n                        className={overflowClasses}\r\n                        ref={this.props.overflowRef}\r\n                        onScroll={this.props.onScroll}\r\n                    >\r\n                        <div\r\n                            id={`${id}_container`}\r\n                            className={containerClasses}\r\n                            ref={this.props.containerRef}\r\n                        >\r\n                            {\r\n                                this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                                <PaddingInterface padding={this.props.padding} />\r\n                            }\r\n                            {\r\n                                this.props.selectAsParent &&\r\n                                <ParentSelectInterface />\r\n                            }\r\n                            <GridChildContainerChildren\r\n                                allChildren={allChildren}\r\n                                getChildrenOverride={getChildrenOverride}\r\n                                agl={agl}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        id={`${id}_container`}\r\n                        className={containerClasses}\r\n                        ref={this.props.containerRef}\r\n                    >\r\n                        {\r\n                            this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                            <PaddingInterface padding={this.props.padding} />\r\n                        }\r\n                        {\r\n                            this.props.selectAsParent &&\r\n                            <ParentSelectInterface />\r\n                        }\r\n                        <GridChildContainerChildren\r\n                            allChildren={allChildren}\r\n                            getChildrenOverride={getChildrenOverride}\r\n                            agl={agl}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                    <div\r\n                        id={`${id}_container`}\r\n                        className={containerClasses}\r\n                        ref={this.props.containerRef}\r\n                    >\r\n                        {\r\n                            this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                            <PaddingInterface padding={this.props.padding} />\r\n                        }\r\n                        {\r\n                            this.props.selectAsParent &&\r\n                            <ParentSelectInterface />\r\n                        }\r\n                        <GridChildContainerChildren\r\n                            allChildren={allChildren}\r\n                            getChildrenOverride={getChildrenOverride}\r\n                            agl={agl}\r\n                        />\r\n\r\n                        {\r\n                            editor &&\r\n                            <AdjustmentPageControllers\r\n                                grid={grid}\r\n                                page={page}\r\n                                editor={editor}\r\n                                ref={this.controllerRef}\r\n                            />\r\n                        }\r\n\r\n                        <GridChildContainerFixedHolder\r\n                            ref={this.fixedHolderRef}\r\n                            size={size}\r\n                            id={id}\r\n                        />\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomeGridLayout.css';\r\n\r\nexport default class AGLAnchor extends React.Component {\r\n    render () {\r\n        let {anchor} = this.props;\r\n\r\n        if (!anchor)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                className=\"AGLAnchor\"\r\n                id={anchor.id}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ResizePanePage extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane-page`,\r\n            \"Adjustment-Pane\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.onMouseDown}\r\n                className={classes}\r\n                style={style}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePanePage from \"./ResizePanePage\";\r\n\r\nexport default class AdjustmentResizePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render () {\r\n        let {top, left, width, height} = this.props;\r\n        if (top === undefined || left === undefined || width === undefined || height === undefined)\r\n            return null;\r\n\r\n        return (\r\n                <div\r\n                    id=\"AdjustmentResizePage\"\r\n                    style={{\r\n                        width: width,\r\n                        height: \"80vh\",\r\n                        // left: left? left: 0,\r\n                        // top: top? top : 0,\r\n                        // bottom: top? window.innerHeight - top - height: 0,\r\n                        // right: left? window.innerWidth - left - width: 0,\r\n                    }}\r\n                    // className=\"AdjustmentResizeRootPage\"\r\n                    className=\"AdjustmentResizeRoot\"\r\n                >\r\n                    {\r\n                        this.props.sides.map((side, index) => {\r\n                            return <ResizePanePage\r\n                                key={index}\r\n                                side={side}\r\n                                onResizeStart={this.props.onResizeStart}\r\n                                onResize={this.props.onResize}\r\n                                onResizeStop={this.props.onResizeStop}\r\n                                draggingStart={this.props.draggingStart}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class EventTrigger {\r\n    constructor(owner, defaultListener) {\r\n        this.owner = owner;\r\n        this.listeners = [];\r\n        if (defaultListener)\r\n            this.listeners.push(defaultListener);\r\n    }\r\n\r\n    addListener = (listener) => {\r\n        if (!this.listeners.find(l => { return l === listener; })) {\r\n            this.listeners.push(listener);\r\n        }\r\n    };\r\n\r\n    trigger = throttleDebounce((data) => {\r\n        this.listeners.forEach(l => {\r\n            l(this.owner, data);\r\n        });\r\n    }, 50);\r\n\r\n    removeListener = (listener) => {\r\n        let index = this.listeners.findIndex(l => { return l === listener; })\r\n        if (index >= 0)\r\n            this.listeners.splice(index, 1);\r\n    };\r\n}\r\n","let windowCache = {\r\n    boundingRects: {},\r\n    clientsWidth: {},\r\n    clientsHeight: {},\r\n    scrollsTop: {},\r\n    scrollsLeft: {},\r\n    scrollsWidth: {},\r\n    scrollsHeight: {}\r\n};\r\n\r\nlet clearCache = () => {\r\n    windowCache.boundingRects = {};\r\n    windowCache.clientsWidth = {};\r\n    windowCache.clientsHeight = {};\r\n    windowCache.scrollsTop = {};\r\n    windowCache.scrollsLeft = {};\r\n    windowCache.scrollsWidth = {};\r\n    windowCache.scrollsHeight = {};\r\n    delete windowCache.clearCacheTimeuot;\r\n};\r\n\r\nexport let getCachedBoundingRect = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.boundingRects[id])\r\n        windowCache.boundingRects[id] = node.getBoundingClientRect();\r\n\r\n    return windowCache.boundingRects[id];\r\n};\r\n\r\nexport let getCachedClientWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.clientsWidth[id])\r\n        windowCache.clientsWidth[id] = node.clientWidth;\r\n\r\n    return windowCache.clientsWidth[id];\r\n};\r\n\r\nexport let getCachedClientHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.clientsHeight[id])\r\n        windowCache.clientsHeight[id] = node.clientHeight;\r\n\r\n    return windowCache.clientsHeight[id];\r\n};\r\n\r\nexport let getCachedScrollTop = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsTop[id])\r\n        windowCache.scrollsTop[id] = node.scrollTop;\r\n\r\n    return windowCache.scrollsTop[id];\r\n};\r\n\r\nexport let getCachedScrollLeft = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsLeft[id])\r\n        windowCache.scrollsLeft[id] = node.scrollLeft;\r\n\r\n    return windowCache.scrollsLeft[id];\r\n};\r\n\r\nexport let getCachedScrollWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsWidth[id])\r\n        windowCache.scrollsWidth[id] = node.scrollWidth;\r\n\r\n    return windowCache.scrollsWidth[id];\r\n};\r\n\r\nexport let getCachedScrollHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsHeight[id])\r\n        windowCache.scrollsHeight[id] = node.scrollHeight;\r\n\r\n    return windowCache.scrollsHeight[id];\r\n};\r\n\r\nexport let addToCache = (id, rect, propName) => {\r\n    windowCache[propName][id] = rect;\r\n};\r\n","import React from \"react\";\r\nexport default class AnimationHolder extends React.Component {\r\n    render () {\r\n        if (!this.props.disabled)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <div\r\n                    className={this.props.className}\r\n                    id={this.props.id}\r\n                    ref={this.props.transformRef}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nexport default class VisibilitySensorWrapper extends React.Component {\r\n    render () {\r\n        if (!this.props.animation)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <VisibilitySensor\r\n                    partialVisibility onChange={(v) => {\r\n                        if (this.props.animation.name &&\r\n                            (this.props.animation.options && this.props.animation.options.once)\r\n                            && v) {\r\n                            !this.props.editor && this.props.playAnimation(true);\r\n                            return;\r\n                        }\r\n\r\n                        if (this.props.animation.name && v)\r\n                            !this.props.editor && this.props.playAnimation();\r\n                    }}\r\n                    containment={this.props.select.getPageOverflowRef()}\r\n                    active={this.props.animation.name && !this.props.disableVS}\r\n                >\r\n                    {this.props.children}\r\n                </VisibilitySensor>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentHelpSize extends React.Component {\r\n    getText = () => {\r\n        let {width, height} = this.props.resizeHelpData;\r\n\r\n        return `${width? \"W: \" + width.toFixed(0).toString() + \"  \": \"\"}\r\n        ${height? \"H: \" + height.toFixed(0).toString() + \"\": \"\"}`;\r\n    };\r\n    render () {\r\n        let {x, y} = this.props.resizeHelpData;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpSize\"\r\n                className=\"AdjustmentHelpSizeRoot\"\r\n            >\r\n                <p\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: y,\r\n                        left: x,\r\n                        margin: 0,\r\n                        transform: \"translateX(20px) translateY(20px)\",\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#ffffff\",\r\n                        backgroundColor: \"#4b4b4b\",\r\n                        padding: 4,\r\n                        borderRadius: 4,\r\n                        width: \"fit-content\"\r\n                    }}\r\n                >\r\n                    {this.getText()}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport debounce from 'lodash.debounce';\r\nimport {appendStyle, cloneObject, initGriddata, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './AwesomeGridLayout.css';\r\nimport GridChildContainer from \"./GridChildContainer\";\r\nimport DynamicComponents, {DynamicAnimations} from \"./Dynamic/DynamicComponents\";\r\nimport classNames from \"classnames\";\r\nimport Portal from \"./Portal\";\r\nimport {\r\n    createItem,\r\n    getCompositeDesignData, getPxValueFromCSSValue, getResizeDelta, getViewRatioStyle,\r\n    isFixed,\r\n    isGroupSelected, isRightClick,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport AGLAnchor from \"./AGLAnchor\";\r\nimport AdjustmentResizePage from \"./Adjustment/AdjustmentResizePage\";\r\nimport EventTrigger from \"./Test/EventTrigger\";\r\nimport {\r\n    addToCache,\r\n    getCachedBoundingRect,\r\n    getCachedClientHeight, getCachedScrollLeft,\r\n    getCachedScrollTop,\r\n    getCachedClientWidth, getCachedScrollHeight, getCachedScrollWidth\r\n} from \"./Test/WindowCache\";\r\nimport ChildHolder from \"./AnimationHolder\";\r\nimport VisibilitySensorWrapper from \"./Test/VisibilitySensorWrapper\";\r\nimport AdjustmentHelpSize from \"./Adjustment/AdjustmentHelpSize\";\r\n\r\nexport default class AwesomeGridLayout2 extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            childContainers: [],\r\n            grid: {x: 1, y: 1, gridTemplateRows: \"1fr\", gridTemplateColumns: \"1fr\"},\r\n            portalNodeId: props.portalNodeId,\r\n            windowWidth: props.breakpointmanager.getWindowWidth()\r\n        };\r\n\r\n        this.rootDivRef = React.createRef();\r\n        this.overflowRef = !props.isPage? React.createRef(): this.rootDivRef;\r\n        this.containerRef = React.createRef();\r\n        this.backContainerRef = React.createRef();\r\n        this.transformRef = React.createRef();\r\n        this.allChildRefs = {};\r\n\r\n        this.children = {};\r\n\r\n        initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        this.props.idMan.setItem(this.props.id, this);\r\n\r\n        this.onPropsChange = new EventTrigger(this);\r\n\r\n        props.id === \"comp_ContainerBase_1_1_1_1_1_1\" && console.log(\"AwesomeGridLayout2 constructor\", props.griddata)\r\n\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n        this.init();\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n        if (this.needRender) {\r\n            delete this.needRender;\r\n            this.updateLayout(() => {\r\n                this.isEditor() ? this.onSelect(this.getFromTempData(\"selected\"), this.lateMounted) : this.lateMounted();\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.isEditor() && this.props.editor.updateLayout();\r\n    }\r\n\r\n    callOverride = (funcName, ...args) => {\r\n        let override = this.getOverrideProp(funcName);\r\n        if (override) {\r\n            return override(this, ...args);\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    hasOverride = (funcName) => {\r\n        return this.getOverrideProp(funcName);\r\n    };\r\n\r\n    init = () => {\r\n        this.needRender = true;\r\n\r\n        this.children = {};\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let savedChildren = this.props.griddata.savedChildren;\r\n        if (!savedChildren) {\r\n            this.props.griddata.savedChildren = {};\r\n            savedChildren = this.props.griddata.savedChildren;\r\n\r\n            React.Children.map(this.props.children, (child, i)=> {\r\n                if (child) {\r\n                    let props = {...child.props};\r\n                    let createdChild = this.createChildByData({\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: props\r\n                    }, DynamicComponents);\r\n                    this.children[props.id] = {\r\n                        // child: this.getChildClone(child),\r\n                        child: createdChild,\r\n                        zIndex: lastZIndex + 1\r\n                    };\r\n\r\n                    savedChildren[props.id] = {\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: this.getClearProps(props),\r\n                        zIndex: this.children[props.id].zIndex\r\n                    };\r\n\r\n                    lastZIndex++;\r\n                }\r\n            });\r\n\r\n            if (this.renderChild) {\r\n                let childs = this.renderChild();\r\n                if (childs instanceof Array) {\r\n                    childs.forEach(c => {\r\n                        if (c) {\r\n                            let props = {...c.props};\r\n                            let createdChild = this.createChildByData({\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: props\r\n                            }, DynamicComponents);\r\n                            this.children[props.id] = {\r\n                                child: createdChild,\r\n                                zIndex: lastZIndex + 1\r\n                            };\r\n\r\n                            savedChildren[props.id] = {\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: this.getClearProps(props),\r\n                                zIndex: this.children[props.id].zIndex\r\n                            };\r\n\r\n                            lastZIndex++;\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (childs) {\r\n                        let props = {...childs.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.props.childrenData) {\r\n                let childs = this.props.childrenData();\r\n                childs.forEach(c => {\r\n                    if (c) {\r\n                        let props = {...c.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: c.tagName,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: c.tagName,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            let savedChildrenArray = Object.values(savedChildren);\r\n            savedChildrenArray.sort((a, b) => {\r\n                if (a.zIndex > b.zIndex) {\r\n                    return 1;\r\n                } else if (a.zIndex === b.zIndex) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    return 0;\r\n                }\r\n                return -1;\r\n            });\r\n            savedChildrenArray.forEach(childData => {\r\n                let oldId = childData.props.id;\r\n                let child = this.createChildByData(childData, DynamicComponents);\r\n                this.children[childData.props.id] = {\r\n                    child: child,\r\n                    zIndex: childData.zIndex\r\n                };\r\n\r\n                if (oldId !== childData.props.id) {\r\n                    delete savedChildren[oldId];\r\n                    savedChildren[childData.props.id] = childData;\r\n                }\r\n            })\r\n        }\r\n\r\n        this.initLayout();\r\n    };\r\n\r\n    initLayout = () => {\r\n        if (this.callOverride(\"initLayout\"))\r\n            return;\r\n\r\n        let style = this.getCompositeFromData(\"style\") || this.getDefaultStyle();\r\n\r\n        this.setTransformStyle(this.getCompositeFromData(\"transform\"), undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGridItemStyle(this.getCompositeFromData(\"gridItemStyle\") ||\r\n            this.props.defaultGridItemStyle,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        if (this.props.isPage)\r\n            style.width = this.props.style.width;\r\n\r\n        this.setStyle(style, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGrid(this.getCompositeFromData(\"grid\") || this.props.defaultGrid, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    getDefaultStyle = () => {\r\n        let style = { ...this.props.defaultStyle, ...this.props.style};\r\n\r\n        if ((this.props.defaultGridItemStyle).justifySelf === \"stretch\" &&\r\n            (this.getFromTempData(\"resizable\") &&\r\n                (!this.props.resizeSides || (!this.props.resizeSides.includes(\"w\") &&\r\n                    !this.props.resizeSides.includes(\"e\"))))) {\r\n            style.width = \"auto\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    lateMounted = () => {\r\n        if (this.hasOverride(\"lateMounted\")) {\r\n            return this.callOverride(\"lateMounted\");\r\n        }\r\n\r\n        let size = this.getSize(false, true, true);\r\n        this.addToSnap();\r\n\r\n        let baseDocks = this.getBaseDocks();\r\n        this.setDocks(baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n            this.getFromTempData(\"autoDock\"),\r\n            this.props.breakpointmanager.getHighestBpName(), true);\r\n\r\n        console.log(\"AwesomeGridLayout2 lateMounted\", this.props.id)\r\n        if (this.props.onPageResize) {\r\n            console.log(\"AwesomeGridLayout2 lateMounted.onPageResize\", this.props.id)\r\n            this.props.onPageResize(size.width, this, true);\r\n        }\r\n\r\n        this.props.onChildMounted && this.props.onChildMounted(this);\r\n        this.isEditor() && this.props.editor.updateLayout();\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        return this.props.getPrimaryOptions && this.props.getPrimaryOptions();\r\n    };\r\n\r\n    getShortcutOptions = () => {\r\n        return this.props.getShortcutOptions && this.props.getShortcutOptions();\r\n    };\r\n\r\n    hasMiniMenu = () => {\r\n        if (this.hasOverride(\"hasMiniMenu\")) {\r\n            return this.callOverride(\"hasMiniMenu\");\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    addToSnap = debounce(() => {\r\n        if (this.callOverride(\"addToSnap\"))\r\n            return;\r\n\r\n        // let rect = this.getSize(false);\r\n        let rect = this.getBoundarySize() || this.getSize(false);\r\n        if (rect) {\r\n            this.props.snap.addSnap(this.props.id,\r\n                [\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    },\r\n                    !this.props.isPage && {\r\n                        id: this.props.id,\r\n                        value: rect.top + rect.height / 2,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top + rect.height,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    }\r\n                ],\r\n                [\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    },\r\n                    !this.props.isPage && {\r\n                        id: this.props.id,\r\n                        value: rect.left + rect.width / 2,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left + rect.width,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    }\r\n                ],\r\n                this.getParentsId()\r\n            );\r\n        }\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current){\r\n                childRef.current.addToSnap();\r\n            }\r\n        });\r\n    }, 500);\r\n\r\n    getParentsId = () => {\r\n        let parentsId = [];\r\n        let parent = this.props.parent;\r\n\r\n        while (parent) {\r\n            parentsId.push(parent.props.id);\r\n            parent = parent.props.parent;\r\n        }\r\n\r\n        return parentsId;\r\n    };\r\n\r\n    getGridLineSnaps = () => {\r\n        let snaps = {\r\n            horizontals: [],\r\n            verticals: [],\r\n            id: this.props.id\r\n        };\r\n        this.prepareRects();\r\n        let xLineRef = this.props.gridLine.getXlineRef(this.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            // let current = xLineRef[i].current;\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.verticals.push({\r\n                id: this.props.id,\r\n                value: rect.left + ((i === xLineRef.length - 1)? 1: 0),\r\n                p1: rect.top,\r\n                p2: rect.top + rect.height\r\n            });\r\n        }\r\n        let yLineRef = this.props.gridLine.getYlineRef(this.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let current = yLineRef[i].current;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.horizontals.push({\r\n                id: this.props.id,\r\n                value: rect.top + ((i === yLineRef.length - 1)? 1: 0),\r\n                p1: rect.left,\r\n                p2: rect.left + rect.width\r\n            });\r\n        }\r\n\r\n        return [snaps];\r\n    };\r\n\r\n    createChildByData = (childData, dynamicComponents, newId, onChildMounted, fixed) => {\r\n        if (this.callOverride(\"addToSnap\", childData, dynamicComponents, newId, onChildMounted, fixed))\r\n            return;\r\n\r\n        let tagName = childData.tagName;\r\n        let props = childData.props;\r\n\r\n        let griddata = initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (newId)\r\n            props.id = newId;\r\n        if (!props.id)\r\n            props.id = this.props.idMan.getId(tagName);\r\n        else\r\n            props.id = this.props.idMan.getId(tagName, props.id);\r\n\r\n        griddata.id = props.id;\r\n        if (!props.griddata || newId)\r\n            props.griddata = griddata;\r\n\r\n        this.allChildRefs[props.id] = React.createRef();\r\n\r\n        if (this.getFromTempData(\"isFixed\", props.griddata))\r\n            fixed = true;\r\n\r\n        let AGLProps = {};\r\n        if (tagName[0] == tagName[0].toUpperCase()) {\r\n            console.log(\"createChildByData portalNodeId\",props.portalNodeId, (fixed && `${this.props.id}_fixed_holder`))\r\n            AGLProps = {\r\n                aglRef: this.allChildRefs[props.id],\r\n                viewRef: this.props.viewRef,\r\n                breakpointmanager: this.props.breakpointmanager,\r\n                undoredo: this.props.undoredo,\r\n                dragdrop: this.props.dragdrop,\r\n                select: this.props.select,\r\n                snap: this.props.snap,\r\n                idMan: this.props.idMan,\r\n                input: this.props.input,\r\n                copyMan: this.props.copyMan,\r\n                window: this.props.window,\r\n                document: this.props.document,\r\n                editorData: this.props.editorData,\r\n                anchorMan: this.props.anchorMan,\r\n                gridLine: this.props.gridLine,\r\n                gridEditorRef: this.props.gridEditorRef,\r\n                parent: this,\r\n                editor: this.props.editor,\r\n                onChildMounted: onChildMounted,\r\n                portalNodeId: (fixed && `${this.props.id}_fixed_holder`),\r\n                ...this.getAllChildOverrideProps()\r\n            };\r\n        }\r\n\r\n        let component = tagName[0] === tagName[0].toUpperCase()? dynamicComponents[tagName]: tagName;\r\n\r\n        if (tagName[0] !== tagName[0].toUpperCase())\r\n            delete props.griddata;\r\n\r\n        return React.createElement(\r\n            component,\r\n            {\r\n                ...props,\r\n                key: props.id,\r\n                ...AGLProps,\r\n            }\r\n        );\r\n    };\r\n\r\n    getSize = (updateState = true, force, fullForce) => {\r\n        if (!this.rootDivRef.current)\r\n            return;\r\n\r\n        if (this.tempSize && !force)\r\n            return cloneObject(this.tempSize);\r\n\r\n        let rect = fullForce ? this.rootDivRef.current.getBoundingClientRect() :\r\n            getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n\r\n        let clientWidth = rect.width;\r\n        let clientHeight = rect.height;\r\n        let scrollTop = 0;\r\n        let scrollLeft = 0;\r\n        let scrollWidth = rect.width;\r\n        let scrollHeight = rect.height;\r\n        if (this.overflowRef.current) {\r\n            clientWidth = fullForce ? this.overflowRef.current.clientWidth :\r\n                getCachedClientWidth(this.props.id, this.overflowRef.current);\r\n            clientHeight = fullForce ? this.overflowRef.current.clientHeight :\r\n                getCachedClientHeight(this.props.id, this.overflowRef.current);\r\n            scrollTop = fullForce ? this.overflowRef.current.scrollTop :\r\n                getCachedScrollTop(this.props.id, this.overflowRef.current);\r\n            scrollLeft = fullForce ? this.overflowRef.current.scrollLeft :\r\n                getCachedScrollLeft(this.props.id, this.overflowRef.current);\r\n            scrollWidth = fullForce ? this.overflowRef.current.scrollWidth :\r\n                getCachedScrollWidth(this.props.id, this.overflowRef.current);\r\n            scrollHeight = fullForce ? this.overflowRef.current.scrollHeight :\r\n                getCachedScrollHeight(this.props.id, this.overflowRef.current);\r\n        }\r\n\r\n        let padding = cloneObject(this.getCompositeFromData(\"padding\")) || {};\r\n        ['top', 'left', 'bottom', 'right'].forEach(key => {\r\n            padding[key] = getPxValueFromCSSValue(padding[key], 0, this) || 0;\r\n        });\r\n        let temp = {\r\n            x: rect.width,\r\n            y: rect.height,\r\n            clientWidth: clientWidth,\r\n            clientHeight: clientHeight,\r\n            scrollTop: scrollTop,\r\n            scrollLeft: scrollLeft,\r\n            scrollWidth: scrollWidth,\r\n            scrollHeight: scrollHeight,\r\n            top: rect.top,\r\n            left: rect.left,\r\n            bottom: rect.bottom,\r\n            right: rect.right,\r\n            width: rect.width,\r\n            height: rect.height,\r\n            widthMinusPadding: rect.width - (padding.left||0)- (padding.right||0),\r\n            heightMinusPadding: rect.height - (padding.top||0)- (padding.bottom||0),\r\n            scrollWidthMinusPadding: scrollWidth - (padding.left||0)- (padding.right||0),\r\n            scrollHeightMinusPadding: scrollHeight - (padding.top||0)- (padding.bottom||0)\r\n        };\r\n\r\n        this.tempSize = temp;\r\n\r\n        if (fullForce) {\r\n            addToCache(this.props.id, this.tempSize, \"boundingRects\");\r\n            addToCache(this.props.id, clientWidth, \"clientsWidth\");\r\n            addToCache(this.props.id, clientHeight, \"clientsHeight\");\r\n            addToCache(this.props.id, scrollTop, \"scrollsTop\");\r\n            addToCache(this.props.id, scrollLeft, \"scrollsLeft\");\r\n            addToCache(this.props.id, scrollWidth, \"scrollsWidth\");\r\n            addToCache(this.props.id, scrollHeight, \"scrollsHeight\");\r\n        }\r\n\r\n        return temp;\r\n    };\r\n\r\n    getBoundarySize = (force) => {\r\n        if (this.transformRef.current) {\r\n            if (!force)\r\n                return getCachedBoundingRect(`${this.props.id}_transform`, this.transformRef.current);\r\n            else\r\n                return this.transformRef.current.getBoundingClientRect();\r\n        }\r\n    };\r\n\r\n    invalidateSize = (self = true, updateParent = true, updateChildren = true, sourceId,\r\n                      addToSnap = false) => {\r\n        if (this.callOverride(\"invalidateSize\", self, updateParent, updateChildren, sourceId))\r\n            return;\r\n\r\n        if (addToSnap)\r\n            this.addToSnap();\r\n\r\n        if (!sourceId)\r\n            sourceId = this.props.id;\r\n\r\n        if (self)\r\n            delete this.tempSize;\r\n\r\n        if (updateChildren) {\r\n            Object.values(this.allChildRefs).forEach(childRef => {\r\n                if (childRef && childRef.current && sourceId !== childRef.current.props.id) {\r\n                    childRef.current.invalidateSize(true, false, true, sourceId, addToSnap);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (updateParent) {\r\n            this.getParentsId().forEach(id => {\r\n                let parent = this.props.idMan.getItem(id);\r\n                if (parent && parent.mounted && sourceId !== parent.props.id) {\r\n                    parent.invalidateSize(true, false, false, sourceId, addToSnap);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onWindowSizeChange = () => {\r\n        this.addToSnap();\r\n        this.prepareRects();\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onWindowSizeChange();\r\n            }\r\n        });\r\n    };\r\n\r\n    getRenderChildData = (id) => {\r\n        return this.children[id];\r\n    };\r\n\r\n    arrangeIndex = (child, type) => {\r\n        let childData = this.getFromTempData(\"savedChildren\")[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let indexData = this.getNextIndexData(currentIndex);\r\n        switch (type) {\r\n            case \"forward\":\r\n                childData.zIndex = indexData.nextZIndex;\r\n                if (indexData.nextChild) {\r\n                    indexData.nextChild.zIndex = currentIndex;\r\n                    this.getRenderChildData(indexData.nextChild.props.id).zIndex = currentIndex;\r\n                }\r\n                break;\r\n            case \"backward\":\r\n                childData.zIndex = indexData.prevZIndex;\r\n                if (indexData.prevChild) {\r\n                    indexData.prevChild.zIndex = currentIndex;\r\n                    this.getRenderChildData(indexData.prevChild.props.id).zIndex = currentIndex;\r\n                }\r\n                break;\r\n            case \"front\":\r\n                childData.zIndex = indexData.lastZIndex + 1;\r\n                break;\r\n            case \"back\":\r\n                childData.zIndex = indexData.firstZIndex - 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    changeIndex = (child, index) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (currentIndex === index)\r\n            return;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let findIndex = (zIndex) => {\r\n            return allChildData.findIndex(a => {\r\n                return a.zIndex === zIndex;\r\n            });\r\n        };\r\n\r\n        let change = currentIndex < index ? -1 : 1;\r\n\r\n        if (findIndex(index)) // if false, means index is free to set\r\n        {\r\n            let startIndex = currentIndex < index ? findIndex(currentIndex) || 0 : findIndex(index);\r\n            let lastIndex = currentIndex < index ? findIndex(index) : findIndex(currentIndex) || 0 ;\r\n\r\n            for (let i = startIndex; i < lastIndex + 1; i++) {\r\n                let testChildData = allChildData[i];\r\n                testChildData.zIndex += change;\r\n                this.getRenderChildData(testChildData.props.id).zIndex = testChildData.zIndex;\r\n            }\r\n        }\r\n\r\n        childData.zIndex = index;\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    setChildZIndex = (childId, zIndex) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[childId];\r\n        childData.zIndex = zIndex;\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n    };\r\n\r\n    getNextIndexData = (currentIndex) => {\r\n        let children = Object.values(this.getFromTempData(\"savedChildren\") || {});\r\n        children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex) {\r\n                return 1;\r\n            } else if (a.zIndex === b.zIndex) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n        let result = {};\r\n        for (let i = 0; i < children.length; i++){\r\n            let child = children[i];\r\n\r\n            let childZIndex = child.zIndex;\r\n\r\n            if (i === 0) {\r\n                result.firstZIndex = childZIndex;\r\n            }\r\n\r\n            if (i === children.length - 1) {\r\n                result.lastZIndex = childZIndex;\r\n            }\r\n\r\n            if (result.nextChild === undefined && childZIndex > currentIndex){\r\n                result.nextChild = child;\r\n                result.nextZIndex = childZIndex;\r\n                continue;\r\n            }\r\n\r\n            if (childZIndex < currentIndex){\r\n                result.prevChild = child;\r\n                result.prevZIndex = childZIndex;\r\n                // continue;\r\n            }\r\n        }\r\n\r\n        if (!result.nextChild)\r\n            result.nextZIndex = result.lastZIndex + 1;\r\n        if (!result.prevChild)\r\n            result.prevZIndex = result.firstZIndex - 1;\r\n\r\n        if (result.lastZIndex === undefined)\r\n            result.lastZIndex = 0;\r\n\r\n        return result;\r\n    };\r\n\r\n    updateLayout = (callback) => {\r\n        if (this.callOverride(\"updateLayout\", callback))\r\n            return;\r\n\r\n        this.setState({reload: true}, callback);\r\n    };\r\n\r\n    isPointInclude = (x, y, forceCalculate) => {\r\n        let rect = this.getSize(false, forceCalculate);\r\n        return x >= rect.left && x <= rect.left + rect.width &&\r\n            y >= rect.top && y <= rect.top + rect.height;\r\n    };\r\n\r\n    addChild = (childElement, newId, newProps, callback, onChildMounted, fixed, keepChildren) => {\r\n        if (this.callOverride(\"addChild\", childElement, newId, newProps, callback, onChildMounted, fixed))\r\n            return;\r\n\r\n        if (!childElement.props.tagName && !childElement.type) {\r\n            throw new Error(\"childElement must pass tagName prop to AGL or be primitive type\");\r\n        }\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let props = newId? newProps: {...childElement.props};\r\n        let createdChild = this.createChildByData({\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props, keepChildren)\r\n        }, DynamicComponents, newId, onChildMounted, fixed);\r\n        this.children[props.id] = {\r\n            child: createdChild,\r\n            zIndex: lastZIndex + 1\r\n        };\r\n\r\n        this.props.griddata.savedChildren[props.id] = {\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props),\r\n            zIndex: this.children[props.id].zIndex\r\n        };\r\n\r\n        this.updateLayout(callback);\r\n        this.props.onChildAdd && this.props.onChildAdd();\r\n    };\r\n\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.callOverride(\"onBreakpointChange\", width, newBreakpointName, devicePixelRatio))\r\n            return;\r\n\r\n        let style = this.getCompositeFromData(\"style\");\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let transform = this.getCompositeFromData(\"transform\");\r\n        this.setStyle(style, undefined, undefined, true);\r\n        this.setGridItemStyle(gridItemStyle, undefined, true);\r\n        this.setTransformStyle(transform, undefined, undefined, true);\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n            }\r\n        });\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    delete = (fromUndoRedo) => {\r\n        if (this.callOverride(\"delete\"))\r\n            return;\r\n\r\n        if (!this.props.parent)\r\n            return;\r\n\r\n        if (this.props.onItemPreDelete) {\r\n            let allow = this.props.onItemPreDelete(this);\r\n            if (!allow)\r\n                return;\r\n        }\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let childData = cloneObject(this.props.parent.getChildData(itemId));\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            }, (idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true);\r\n            });\r\n        }\r\n\r\n        this.clearItem();\r\n\r\n        this.props.parent.removeChildElement(this);\r\n\r\n        this.props.select.clearMiniMenu();\r\n    };\r\n\r\n    getChildData = (childId) => {\r\n        return this.props.griddata.savedChildren[childId];\r\n    };\r\n\r\n    getOverrideProp = (funcName) => {\r\n        let key = Object.keys(this.props).find(key => {\r\n            return key === `${funcName}Override`;\r\n        });\r\n\r\n        return this.props[key];\r\n    };\r\n\r\n    getAllOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"Override\")) {\r\n                result[key] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    getAllChildOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"ChildOverride\")) {\r\n                result[key.replace(\"ChildOverride\", \"Override\")] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    clearItem = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        this.props.gridLine.removeGridLine(this.props.id);\r\n        this.props.snap.removeSnap(this.props.id);\r\n        this.state.selected && this.props.select.updateResizePanes();\r\n        this.state.selected && this.props.select.updateHelpSizeLines();\r\n        this.state.selected && this.props.select.setInspector();\r\n        if (this.state.selected)\r\n            this.props.select.selectedItem = false;\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.clearItem();\r\n            }\r\n        });\r\n    };\r\n\r\n    getClearProps = (props, keepChildren) => {\r\n        delete props.breakpointmanager;\r\n        delete props.undoredo;\r\n        delete props.dragdrop;\r\n        delete props.select;\r\n        delete props.editor;\r\n        delete props.snap;\r\n        delete props.idMan;\r\n        delete props.input;\r\n        delete props.copyMan;\r\n        delete props.anchorMan;\r\n        delete props.aglRef;\r\n        delete props.parent;\r\n        delete props.window;\r\n        delete props.document;\r\n        delete props.viewRef;\r\n        delete props.aglComponent;\r\n        if (!keepChildren)\r\n            delete props.children;\r\n        delete props.allChildRefs;\r\n        delete props.gridLine;\r\n        delete props.page;\r\n        delete props.gridEditorRef;\r\n        delete props.onChildMounted;\r\n\r\n        Object.keys(this.getAllOverrideProps(props)).forEach(key => {\r\n            delete props[key];\r\n        });\r\n\r\n        Object.keys(props).forEach(key => {\r\n            if (typeof props[key] === \"function\")\r\n                delete props[key];\r\n        });\r\n\r\n        return props;\r\n    };\r\n\r\n    removeChildElement = (childElement, callback) => {\r\n        if (this.hasOverride(\"removeChildElement\"))\r\n            return this.callOverride(\"removeChildElement\", childElement);\r\n\r\n        delete this.children[childElement.props.id];\r\n        delete this.allChildRefs[childElement.props.id];\r\n        delete this.props.griddata.savedChildren[childElement.props.id];\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n            this.updateLayout(callback);\r\n        }, 0);\r\n    };\r\n\r\n    // Can be remove carefully\r\n    hide = () => {\r\n        this.setState({hide: true});\r\n    };\r\n\r\n    // Can be remove carefully\r\n    show = () => {\r\n        this.setState({hide: false});\r\n    };\r\n\r\n    onMouseOver = (e, fromEnter) => {\r\n        if (!this.props.dragdrop.getDragging()) {\r\n            e.stopPropagation();\r\n\r\n            // if (this.getFromTempData(\"selected\"))\r\n            //     return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            this.setMouseOverForNonDragging(this);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n        } else {\r\n            if (this.props.isPage)\r\n                return;\r\n\r\n            if (this.props.dragdrop.getDragging().props.id === this.props.id)\r\n                return;\r\n\r\n            e.stopPropagation();\r\n\r\n            let rect = getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n            if (e.clientX < rect.x - 1 || e.clientX > (rect.x + rect.width) ||\r\n                e.clientY < rect.y - 1 || e.clientY > (rect.y + rect.height))\r\n                return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n\r\n            this.setMouseOver(this, {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            }, (draggingItem, mouseOver) => {\r\n                // on new parent state changed\r\n                draggingItem.toggleHelpLines(this);\r\n            });\r\n        }\r\n    };\r\n\r\n    setMouseOverForNonDragging = () => {\r\n        if (this.hasOverride(\"setMouseOverForNonDragging\"))\r\n            return this.callOverride(\"setMouseOverForNonDragging\");\r\n\r\n        this.props.dragdrop.setMouseOverForNonDragging(this);\r\n    };\r\n\r\n    setItemHover = (hover) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        if (hover)\r\n            this.props.select.updateHover(this, this.getSize(false));\r\n        else\r\n            this.props.select.updateHover(this, undefined, true);\r\n    };\r\n\r\n    onMouseEnter = (e) => {\r\n        this.onMouseOver(e, true);\r\n    };\r\n\r\n    onMouseOut = (e, outAllParent) => {\r\n        if (outAllParent && this.props.parent && this.props.parent.onMouseOut)\r\n            this.props.parent.onMouseOut(e);\r\n\r\n        this.setItemHover(false);\r\n    };\r\n\r\n    prepareRects = (forceRect, forceGridLines, callback, gridType) => {\r\n        if (this.hasOverride(\"prepareRects\"))\r\n            return this.callOverride(\"prepareRects\", forceRect, forceGridLines);\r\n\r\n        let rect = this.getSize(false, forceRect);\r\n\r\n        if (forceGridLines || !this.props.gridLine.isPrepared(this.props.id)) {\r\n            this.isEditor() && this.props.gridLine.prepareRects(this.props.id);\r\n        }\r\n\r\n        return rect;\r\n    };\r\n\r\n    onChildDrop = (child, newId, fixed, onNewChildMounted) => {\r\n        if (this.callOverride(\"onChildDrop\", child, newId, fixed, onNewChildMounted))\r\n            return;\r\n\r\n        let childRect = child.getSize(false);\r\n        let thisRect = this.getSize(false, true);\r\n\r\n        let calcResult, gridItemStyle, coordinates, newProps;\r\n\r\n        if (!newId) {\r\n            let relativeY = childRect.top - thisRect.top;\r\n            // if (fixed) {\r\n            //     // relativeY = childRect.top - this.props.breakpointmanager.getWindowHeight() / 8;\r\n            //     relativeY = childRect.top - thisRect.top;\r\n            // }\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                childRect.left - thisRect.left, relativeY, this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n        else\r\n        {\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                thisRect.width / 2 - childRect.width / 2,\r\n                thisRect.height / 2 - childRect.height / 2,\r\n                this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n\r\n        gridItemStyle = calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n        if (!newId) {\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                if (child.getFromData(\"style\").width !== \"auto\")\r\n                    child.setProps(\"width\", childRect.width, coordinates, undefined,\r\n                        this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                child.setProps(\"width\", \"auto\", undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                if (child.getFromData(\"style\").minHeight !== \"auto\")\r\n                    child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                        this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                if (child.getFromData(\"style\").height !== \"auto\")\r\n                    child.setProps(\"height\", childRect.height, coordinates, undefined,\r\n                        this.props.breakpointmanager.getHighestBpName());\r\n                if (child.getFromData(\"style\").minHeight !== \"auto\")\r\n                    child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                        this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        } else {\r\n            newProps = {...child.props};\r\n            newProps.griddata = cloneObject(newProps.griddata);\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, newProps.griddata, undefined,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            this.setTempData(\"selected\", true, newProps.griddata);\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                this.setProps(\"width\", childRect.width, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                this.setProps(\"width\", \"auto\", undefined, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                this.setProps(\"height\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        }\r\n\r\n        child.clearFromAllBp(\"style\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n        child.clearFromAllBp(\"gridItemStyle\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.addChild(child, newId, newProps, () => {\r\n            let newChild = this.allChildRefs[newId? newProps.id: child.props.id].current;\r\n            newChild.setGridItemStyle(gridItemStyle,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            if (!newId) {\r\n                newChild.state.selected && newChild.toggleHelpLines(this);\r\n            }\r\n\r\n        }, (agl) => {\r\n            window.requestAnimationFrame(() => {\r\n                this.invalidateSize(true, true, true);\r\n                window.requestAnimationFrame(() => {\r\n                    this.props.select.onScrollItem();\r\n                });\r\n            });\r\n            if (onNewChildMounted)\r\n                onNewChildMounted(agl);\r\n        }, fixed, undefined);\r\n    };\r\n\r\n    onChildLeave = (child, callback) => {\r\n        if (this.hasOverride(\"onChildLeave\"))\r\n            return this.callOverride(\"onChildLeave\", child);\r\n\r\n        this.removeChildElement(child, callback);\r\n        child.removeIdAndChildrenId();\r\n    };\r\n\r\n    removeIdAndChildrenId = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.removeIdAndChildrenId();\r\n            }\r\n        });\r\n    };\r\n\r\n    nonePointerEventForChildren = (parentDragging) => {\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onParentDragging(parentDragging);\r\n            }\r\n        });\r\n    };\r\n\r\n    onParentDragging = (parentDragging) => {\r\n        this.nonePointerEventForChildren(parentDragging);\r\n        if (!parentDragging) {\r\n            this.setRuntimeStyle();\r\n            return;\r\n        }\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.pointerEvents = \"none\";\r\n        this.setRuntimeStyle(runtimeStyle);\r\n    };\r\n\r\n    onDragStart = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDragStart\", e, group, callGroup))\r\n            return;\r\n\r\n        if (this.getFromTempData(\"dontMove\") || this.resizing || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        if (!group)\r\n            this.props.dragdrop.setDragging(this);\r\n\r\n        this.nonePointerEventForChildren(true);\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        if (!this.moveWithMouse) {\r\n            runtimeStyle.top = thisRect.top;\r\n            runtimeStyle.left = thisRect.left;\r\n        } else {\r\n            runtimeStyle.top = e.clientY - thisRect.height / 2;\r\n            runtimeStyle.left = e.clientX - thisRect.width / 2;\r\n        }\r\n\r\n        this.dragData = {\r\n            firstPos: {\r\n                top: runtimeStyle.top,\r\n                left: runtimeStyle.left\r\n            },\r\n            firstBoundaryPos: this.getBoundarySize() && {\r\n                top: this.moveWithMouse? e.clientX - thisRect.width / 2 : this.getBoundarySize().top,\r\n                left: this.moveWithMouse? e.clientY - thisRect.height / 2 : this.getBoundarySize().left\r\n            },\r\n            x: runtimeStyle.left,\r\n            y: runtimeStyle.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n        this.draggingStart = true;\r\n        this.setDraggingState(true, true, undefined, runtimeStyle);\r\n\r\n        this.props.select.updateMenu();\r\n        this.props.select.clearMiniMenu();\r\n\r\n        if (this.props.dragdrop.getMouseOverForNonDragging()) {\r\n            this.props.dragdrop.getMouseOverForNonDragging().onMouseOver(e);\r\n        }\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStart(e, this);\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.hasOverride(\"setMouseOver\"))\r\n            return this.callOverride(\"setMouseOver\", item, positionData, callback);\r\n\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    onDrag = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDrag\", e, group, callGroup))\r\n            return;\r\n\r\n        if (!this.props.parent.children[this.props.id]) {\r\n            return;\r\n        }\r\n        if (this.resizing || !this.state.draggingStart) {\r\n            if (this.props.dragdrop.getDragging()) {\r\n                this.props.dragdrop.setDragging();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.dragData.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.dragData.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.top = this.dragData.y;\r\n        runtimeStyle.left = this.dragData.x;\r\n\r\n        // For snaps\r\n        let boundarySize = this.getBoundarySize();\r\n        if (boundarySize)\r\n            boundarySize = {\r\n                top: this.dragData.firstBoundaryPos.top + (this.dragData.y - this.dragData.firstPos.top),\r\n                left: this.dragData.firstBoundaryPos.left + (this.dragData.x - this.dragData.firstPos.left),\r\n                width: boundarySize.width,\r\n                height: boundarySize.height\r\n            };\r\n        else\r\n            boundarySize = runtimeStyle;\r\n\r\n        if (!isFixed(this) && !group)\r\n            this.checkSnapOnDrag(runtimeStyle, boundarySize);\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.props.select.updateResizePanes(this, runtimeStyle);\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                runtimeStyle.top,\r\n                runtimeStyle.left,\r\n                window.innerHeight - runtimeStyle.top - runtimeStyle.height,\r\n                window.innerWidth - runtimeStyle.left - runtimeStyle.width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                cloneObject(runtimeStyle), this.state.dragging);\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDrag(e, this);\r\n    };\r\n\r\n    updateGridLines = (top, left, bottom, right, gridType) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        if (!this.getFromTempData(\"isContainer\"))\r\n            return;\r\n\r\n        let grid = this.getFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top,\r\n                left,\r\n                bottom,\r\n                right,\r\n            }\r\n        )\r\n    };\r\n\r\n    onDragStop = (e, group, callGroup) => {\r\n        if (this.hasOverride(\"onDragStop\"))\r\n            return this.callOverride(\"onDragStop\", e, group, callGroup);\r\n\r\n        if (this.resizing || !this.state.draggingStart || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStop(e, this);\r\n\r\n        if (group)\r\n            // this.props.parent.prepareRects(true);\r\n            this.props.parent.prepareRects();\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n\r\n        this.props.snap.drawSnap();\r\n        this.getSize(true, true);\r\n        if (group || !this.props.dragdrop.setDraggingStop()){\r\n            let parentRect = this.props.parent.getSize(false);\r\n            this.setPosition(\r\n                group,\r\n                left - parentRect.left,\r\n                top - parentRect.top,\r\n                this.dragData.firstPos.left - parentRect.left,\r\n                this.dragData.firstPos.top - parentRect.top, width, height, parentRect);\r\n            return;\r\n        } else if (!group) {\r\n            this.dropped = true;\r\n        }\r\n\r\n        // this.setState({dragging: false, draggingStart: false});\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                top, left,\r\n                window.innerHeight - top - height,\r\n                window.innerWidth - left - width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateMiniMenu();\r\n    };\r\n\r\n    setPosition = (group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                   width, height, parentRect, fromUndoRedo) => {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let redoData = [group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect];\r\n            let undoData = [group, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                width, height, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setPosition\"))\r\n            return this.callOverride(\"setPosition\",\r\n                group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect, fromUndoRedo);\r\n\r\n        let {gridItemStyle, coordinates} = this.calculateGridItem(relativeX, relativeY, this.props.parent,\r\n            width, height, parentRect);\r\n\r\n        // TODO uncomment if bug found\r\n        // if (gridItemStyle.justifySelf !== \"stretch\"){\r\n        //     this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n        // } else {\r\n        //     this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n        // }\r\n        // if (this.getCompositeFromData(\"style\").height === \"auto\")\r\n        //     this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        // else {\r\n        //     this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n        //     this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        // }\r\n\r\n        this.setGridItemStyle(gridItemStyle);\r\n\r\n        this.nonePointerEventForChildren(false);\r\n        this.setRuntimeStyle();\r\n        // this.setState({dragging: false, draggingStart: false}, () => {\r\n        //     this.addToSnap();\r\n        // });\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                {top, left, width, height}, this.state.dragging);\r\n\r\n        this.dropped = false;\r\n\r\n        // this.props.select.updateSize();\r\n        // this.props.select.updateResizePanes(this, {top, left, width, height});\r\n        // this.props.select.updateMiniMenu();\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.invalidateSize(false, true, true);\r\n    };\r\n\r\n    setDraggingState = (dragging, draggingStart, callback, rect) => {\r\n        let fakeStyle = cloneObject({\r\n            ...this.getCompositeFromData(\"style\"),\r\n            ...this.getCompositeFromData(\"gridItemStyle\"),\r\n        });\r\n        this.setState({dragging, draggingStart, fakeStyle}, callback);\r\n    };\r\n\r\n    checkSnapOnDrag = (runtimeStyle, boundarySize) => {\r\n        if (this.callOverride(\"checkSnapOnDrag\", runtimeStyle, boundarySize))\r\n            return;\r\n\r\n        let snapDelta1 = this.getSnapDelta(\r\n            boundarySize.top, boundarySize.left);\r\n        let snapDelta2 = this.getSnapDelta(\r\n            boundarySize.top + boundarySize.height/2, boundarySize.left + boundarySize.width/2);\r\n        let snapDelta3 = this.getSnapDelta(\r\n            boundarySize.top + boundarySize.height, boundarySize.left + boundarySize.width);\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2.snapV? snapDelta2.deltaX:\r\n                snapDelta1.snapV? snapDelta1.deltaX:\r\n                    snapDelta3.snapV? snapDelta3.deltaX: 0,\r\n            deltaY: snapDelta2.snapH? snapDelta2.deltaY:\r\n                snapDelta1.snapH? snapDelta1.deltaY:\r\n                    snapDelta3.snapH? snapDelta3.deltaY: 0,\r\n            snapH: (snapDelta2.snapH || snapDelta1.snapH) || snapDelta3.snapH,\r\n            snapV: (snapDelta2.snapV || snapDelta1.snapV) || snapDelta3.snapV\r\n        };\r\n\r\n        runtimeStyle.left += snapDelta.deltaX;\r\n        runtimeStyle.top += snapDelta.deltaY;\r\n        if (boundarySize !== runtimeStyle) {\r\n            boundarySize.left += snapDelta.deltaX;\r\n            boundarySize.top += snapDelta.deltaY;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: boundarySize.left,\r\n            p2: boundarySize.left + boundarySize.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: boundarySize.top,\r\n            p2: boundarySize.top + boundarySize.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    getSnapDelta = (top, left) => {\r\n        let parentGridLines = [];\r\n        if (this.props.parent) {\r\n            if (this.resizing) {\r\n                parentGridLines = this.props.parent.getGridLineSnaps();\r\n            } else {\r\n                // dragging\r\n                if (this.props.dragdrop.mouseOver &&\r\n                    this.props.gridLine.hasGridLine(this.props.dragdrop.mouseOver.props.id))\r\n                    parentGridLines = this.props.dragdrop.mouseOver &&\r\n                        this.props.dragdrop.mouseOver.getGridLineSnaps();\r\n            }\r\n        }\r\n\r\n        let {snapH, snapV} =\r\n            this.props.snap.checkSnap(top, left, this.props.id, parentGridLines);\r\n\r\n        let deltaX = 0;\r\n        let deltaY = 0;\r\n        if (snapH) {\r\n            deltaY = snapH.value - top;\r\n        }\r\n        if (snapV) {\r\n            deltaX = snapV.value - left;\r\n        }\r\n\r\n        return {\r\n            deltaX, deltaY, snapH, snapV\r\n        }\r\n    };\r\n\r\n    setDocks = (top, left, bottom, right, auto, breakpointName, dontCalculate) => {\r\n        this.setDataInBreakpoint(\"docks\", {top, left, bottom, right}, undefined, breakpointName);\r\n        this.setTempData(\"autoDock\", auto);\r\n\r\n        if (!this.props.parent || dontCalculate)\r\n            return;\r\n\r\n        this.props.parent.prepareRects();\r\n        let thisRect = this.getSize(false);\r\n        let parentRect = this.props.parent.getSize(false);\r\n        let {gridItemStyle} =\r\n            this.calculateGridItem(\r\n                thisRect.left - parentRect.left,\r\n                thisRect.top - parentRect.top,\r\n                this.props.parent,\r\n                thisRect.width,\r\n                thisRect.height,\r\n                parentRect\r\n            );\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width === \"auto\")\r\n        {\r\n            this.setStyleParam(\"width\", `${this.getSize(false).width}px`, undefined, undefined, true);\r\n        }\r\n        else if (gridItemStyle.justifySelf === \"stretch\")\r\n        {\r\n            this.setStyleParam(\"width\", \"auto\", undefined, undefined, true);\r\n        }\r\n    };\r\n\r\n    getDocks = () => {\r\n        return this.getFromData(\"docks\");\r\n    };\r\n\r\n    getBaseDocks = () => {\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return {\r\n            top: gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\",\r\n            bottom: gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\",\r\n            left: gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\",\r\n            right: gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\",\r\n        }\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        return this.props.select.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    calculateGridItem = (relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateGridItem\", relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = this.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let gridArea, coordinates;\r\n        if (isFixed(this)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.height,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.width\r\n            }\r\n        } else {\r\n            let result = this.calculateGridArea(\r\n                parentRect.left + relativeX,\r\n                parentRect.top + relativeY,\r\n                width,\r\n                height,\r\n                parent,\r\n                parentRect\r\n            );\r\n            gridArea = result.gridArea;\r\n            coordinates = result.coordinates;\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        this.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let oldGridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let gridItemStyle = cloneObject(oldGridItemStyle);\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(this);\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        let cx2IsLastLine = gridArea.x2 === xLineRef.length || isFixed(this);\r\n\r\n        let widthForPercent = coordinates.cx2 - coordinates.cx1/* + (cx2IsLastLine?1:0)*/;\r\n        let heightForPercent = coordinates.cy2 - coordinates.cy1/* + (cy2IsLastLine?1:0)*/;\r\n\r\n        let autoDock = this.getFromTempData(\"autoDock\");\r\n        let docks = this.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2) && relativeY >= 0) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                widthForPercent,\r\n                \"px\");\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                `${(relativeY - coordinates.cy1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginTop) || \"px\");\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginLeft) || \"%\");\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginBottom) || \"px\");\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginRight) || \"%\");\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        gridItemStyle.widthForPercent = widthForPercent;\r\n        gridItemStyle.heightForPercent = heightForPercent;\r\n\r\n        /*if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // this is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n            `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    getPxOrPcOrValue = (value, parentValue, unit) => {\r\n        if (unit === \"px\") {\r\n            return `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            return `${parseFloat(value) / parentValue * 100}%`;\r\n        } else {\r\n            return value\r\n        }\r\n    };\r\n\r\n    calculateChildGridItem = (child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateChildGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateChildGridItem\",child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        if (isFixed(child)) {\r\n            if (relativeY < 0) relativeY = 0;\r\n            if (relativeY > parentRect.scrollHeightMinusPadding - height)\r\n                relativeY = parentRect.scrollHeightMinusPadding - height;\r\n            if (relativeX < 0) relativeX = 0;\r\n            if (relativeX > parentRect.scrollWidthMinusPadding - width)\r\n                relativeX = parentRect.scrollWidthMinusPadding - width;\r\n        }\r\n\r\n        let gridArea, coordinates;\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.height,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.width\r\n            }\r\n        } else {\r\n            let result = this.calculateGridArea(\r\n                parentRect.left + relativeX,\r\n                parentRect.top + relativeY,\r\n                width,\r\n                height,\r\n                parent,\r\n                parentRect\r\n            );\r\n            gridArea = result.gridArea;\r\n            coordinates = result.coordinates;\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let oldGridItemStyle = child.getCompositeFromData(\"gridItemStyle\");\r\n        let gridItemStyle = cloneObject(oldGridItemStyle);\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        let cx2IsLastLine = gridArea.x2 === xLineRef.length || isFixed(child);\r\n\r\n        let widthForPercent = coordinates.cx2 - coordinates.cx1 + (cx2IsLastLine?1:0);\r\n        let heightForPercent = coordinates.cy2 - coordinates.cy1 + (cy2IsLastLine?1:0);\r\n\r\n        let autoDock = child.getFromTempData(\"autoDock\");\r\n        let docks = child.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2) && relativeY >= 0) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                widthForPercent,\r\n                \"px\");\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeY - coordinates.cy1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginTop) || \"px\");\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginLeft) || \"%\");\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginBottom) || \"px\");\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginRight) || \"%\");\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        gridItemStyle.widthForPercent = widthForPercent;\r\n        gridItemStyle.heightForPercent = heightForPercent;\r\n\r\n        /*\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n                `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    coordinateToRelative = (coordinates, parentRect) => {\r\n        coordinates.cx1 -= parentRect.left;\r\n        coordinates.cx2 -= parentRect.left;\r\n        coordinates.cy1 -= parentRect.top;\r\n        coordinates.cy2 -= parentRect.top;\r\n    };\r\n\r\n    coordinateToAbsolute = (coordinates, parentRect) => {\r\n        coordinates.cx1 += parentRect.left;\r\n        coordinates.cx2 += parentRect.left;\r\n        coordinates.cy1 += parentRect.top;\r\n        coordinates.cy2 += parentRect.top;\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        } else {\r\n            return \"px\";\r\n        }\r\n    };\r\n\r\n    getTopLeft = (force) => {\r\n        let size = this.getSize(false, force);\r\n        return {\r\n            top: size.top,\r\n            left: size.left\r\n        }\r\n    };\r\n\r\n    pageResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n\r\n        this.resizing = true;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.width = this.getSize().x;\r\n        runtimeStyle.height = this.getSize().y;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstLeft: this.getSize().left,\r\n            top: this.getSize().top,\r\n            left: this.getSize().left\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        this.isEditor() && this.props.select.activateHover(false);\r\n\r\n        if (this.props.onPageResizeStart)\r\n            this.props.onPageResizeStart();\r\n\r\n        window.requestAnimationFrame(this.pageResizeCalculate);\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResizeStart\", e, dir, delta, group))\r\n            return;\r\n\r\n        if (this.resizing)\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        this.resizing = true;\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.maxWidth = \"unset\";\r\n        runtimeStyle.maxHeight = \"unset\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        runtimeStyle.top = thisRect.top;\r\n        runtimeStyle.left = thisRect.left;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstY: runtimeStyle.height,\r\n            firstTop: runtimeStyle.top,\r\n            firstLeft: runtimeStyle.left,\r\n            lastWidth: runtimeStyle.width,\r\n            lastHeight: runtimeStyle.height,\r\n            firstBoundaryWidth: this.getBoundarySize() && this.getBoundarySize().width,\r\n            firstBoundaryHeight: this.getBoundarySize() && this.getBoundarySize().height,\r\n            firstBoundaryTop: this.getBoundarySize() && this.getBoundarySize().top,\r\n            firstBoundaryLeft: this.getBoundarySize() && this.getBoundarySize().left\r\n        };\r\n\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        this.props.select.clearMiniMenu();\r\n        this.props.select.activateHover(false);\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    pageResize = (e, dir, delta) => {\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let deltaX = delta.x;\r\n        let minWidth = this.props.breakpointmanager.getMinWidth();\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= (-deltaX* 2 + minWidth))\r\n                deltaX = -(this.resizeData.firstX - minWidth) / 2;\r\n\r\n            runtimeStyle.width = this.resizeData.firstX + deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft - deltaX;\r\n            if (this.resizeData.firstLeft - deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= (deltaX * 2 + minWidth))\r\n                deltaX = (this.resizeData.firstX - minWidth) / 2;\r\n            runtimeStyle.width = this.resizeData.firstX - deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft + deltaX;\r\n            if (this.resizeData.firstLeft + deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n\r\n        this.updateGridLines(\r\n            this.resizeData.top,\r\n            this.resizeData.left,\r\n            window.innerHeight - this.resizeData.top - runtimeStyle.height,\r\n            window.innerWidth - this.resizeData.left - runtimeStyle.width,\r\n            \"A\"\r\n        );\r\n\r\n        this.updatePageAdjustments();\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n        };\r\n    };\r\n\r\n    updatePageAdjustments = () => {\r\n        this.backContainerRef.current.updateAdjustments();\r\n    };\r\n\r\n    pageResizeCalculate = () => {\r\n        if (this.callOverride(\"pageResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.pageResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle} = this.resizeData.onResizeData;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        if (this.props.onPageResize) {\r\n            this.props.onPageResize(runtimeStyle.width, this);\r\n        }\r\n\r\n        window.requestAnimationFrame(this.pageResizeCalculate);\r\n    };\r\n\r\n    onResize = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResize\", e, dir, delta, group))\r\n            return;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let degree = (this.getCompositeFromData(\"transform\") || {}).rotateDegree || 0;\r\n\r\n        let finalDelta = getResizeDelta(degree, dir, delta);\r\n        runtimeStyle.left = this.resizeData.firstLeft + finalDelta.left;\r\n        runtimeStyle.top = this.resizeData.firstTop + finalDelta.top;\r\n        runtimeStyle.width = this.resizeData.firstX + finalDelta.width;\r\n        runtimeStyle.height = this.resizeData.firstY + finalDelta.height;\r\n\r\n        // For snaps\r\n        let boundarySize = this.getBoundarySize();\r\n\r\n        if (!group && !boundarySize)\r\n            this.checkSnapOnResize(runtimeStyle, dir, this.resizeData);\r\n        // this.checkSnapOnResize(rect, dir, this.resizeData);\r\n\r\n        let rect = {\r\n            top: runtimeStyle.top,\r\n            left: runtimeStyle.left,\r\n            width: runtimeStyle.width,\r\n            height: runtimeStyle.height\r\n        };\r\n\r\n        this.props.select.updateResizePanes(this, rect);\r\n\r\n        if (!group)\r\n            this.setResizeHelpData({\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                width: (dir.includes('w') || dir.includes('e')) && rect.width,\r\n                height: (dir.includes('n') || dir.includes('s')) && rect.height,\r\n            });\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                rect.top,\r\n                rect.left,\r\n                window.innerHeight - rect.top - rect.height,\r\n                window.innerWidth - rect.left - rect.width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n            rect, this.state.dragging);\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n        };\r\n    };\r\n\r\n    onResizeCalculate = () => {\r\n        if (this.callOverride(\"onResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.onResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle} = this.resizeData.onResizeData;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    setResizeHelpData = (resizeHelpData) => {\r\n        this.setState({resizeHelpData})\r\n    };\r\n\r\n    pageResizeStop = (e, dir, delta) => {\r\n        let {width, height} = this.state.runtimeStyle;\r\n        this.isEditor() && this.props.select.activateHover(true);\r\n        this.setPageSize(this.resizeData.top, this.resizeData.left, width, height);\r\n    };\r\n\r\n    setPageSize = (top, left, width, height) => {\r\n        this.setProps(\"width\", width, undefined, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.setRuntimeStyle();\r\n        this.invalidateSize();\r\n\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.resizing = false;\r\n\r\n        this.updateGridLines(\r\n            top, left,\r\n            window.innerHeight - top - height,\r\n            window.innerWidth - left - width,\r\n            \"A\"\r\n        );\r\n\r\n        this.isEditor() && this.props.select.onScrollItem(this);\r\n\r\n        this.prepareRects();\r\n\r\n        if (this.props.onPageResizeStop)\r\n            this.props.onPageResizeStop(width, this);\r\n\r\n        this.resizeData = undefined;\r\n    };\r\n\r\n    setPageSizeWidth = (width) => {\r\n        this.setProps(\"width\", width, undefined, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.invalidateSize();\r\n\r\n        this.addToSnap();\r\n\r\n        let rect = this.getSize(false);\r\n        let minWidth = this.props.breakpointmanager.getMinWidth();\r\n\r\n        if (width < minWidth)\r\n            width = minWidth;\r\n\r\n        let deltaX = width - rect.width;\r\n        let firstLeft = rect.left;\r\n        let left = firstLeft + deltaX;\r\n        if (left < 50)\r\n            left = 50;\r\n\r\n        let top = rect.top;\r\n\r\n        this.updateGridLines(\r\n            top, left,\r\n            window.innerHeight - top - rect.height,\r\n            window.innerWidth - left - width,\r\n            \"A\"\r\n        );\r\n\r\n        this.isEditor() && this.props.select.onScrollItem(this);\r\n\r\n        this.prepareRects();\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta, group) => {\r\n        if (this.hasOverride(\"onResizeStop\"))\r\n            return this.callOverride(\"onResizeStop\", e, dir, delta, group);\r\n        this.resizing = false;\r\n\r\n        if (this.props.onItemPreResizeStop) {\r\n            this.props.onItemPreResizeStop(this, e, dir, delta, this.state.runtimeStyle);\r\n        }\r\n        this.getSize(true, true);\r\n\r\n        if (group)\r\n            this.props.parent.prepareRects();\r\n        // this.props.parent.prepareRects(true);\r\n\r\n        let parentRect = this.props.parent.getSize(false);\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n        // width = this.resizeData.lastWidth;\r\n        // height = this.resizeData.lastHeight;\r\n        this.setSize(\r\n            dir, delta, group,\r\n            left - parentRect.left,\r\n            top - parentRect.top, width, height,\r\n            this.resizeData.firstLeft - parentRect.left,\r\n            this.resizeData.firstTop - parentRect.top,\r\n            this.resizeData.firstX,\r\n            this.resizeData.firstY, parentRect\r\n        );\r\n        this.props.select.updateMiniMenu();\r\n        this.props.select.activateHover(true);\r\n    };\r\n\r\n    setSize = (dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n               firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo) =>\r\n    {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let redoData = [dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect];\r\n            let undoData = [dir, delta, group, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, undefined,\r\n                undefined, undefined, undefined, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setSize\"))\r\n            return this.callOverride(\"setSize\",\r\n                dir, delta, group, relativeX, relativeY, height, width, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo);\r\n\r\n        let gridItemStyle, coordinates;\r\n        let calcResult = this.calculateGridItem(relativeX, relativeY, this.props.parent, width, height);\r\n\r\n        gridItemStyle = this.props.autoConstraintsOff?  this.getCompositeFromData(\"gridItemStyle\"):\r\n            calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n\r\n        if (dir.includes('e') || dir.includes('w')) {\r\n            if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width !== \"auto\")\r\n                this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n            else\r\n                this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n\r\n            if (this.getCompositeFromData(\"style\").minWidth) {\r\n                this.setProps(\"minWidth\", width, coordinates, undefined, undefined, true);\r\n            }\r\n            if (this.getCompositeFromData(\"style\").maxWidth) {\r\n                this.setProps(\"maxWidth\", width, coordinates, undefined, undefined, true);\r\n            }\r\n        }\r\n\r\n        if (dir.includes('s') || dir.includes('n')) {\r\n            if (this.getCompositeFromData(\"style\").height !== \"auto\") {\r\n                this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n            }\r\n            if (!this.getFromTempData(\"isVerticalSection\")) {\r\n                if (this.getCompositeFromData(\"style\").minHeight) {\r\n                    this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n                }\r\n                if (this.getCompositeFromData(\"style\").maxHeight) {\r\n                    this.setProps(\"maxHeight\", height, coordinates, undefined, undefined, true);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!this.getFromTempData(\"isSection\"))\r\n            this.setGridItemStyle(gridItemStyle);\r\n        this.setRuntimeStyle();\r\n        this.setResizeHelpData();\r\n\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.props.snap.drawSnap();\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                this.getSize(false).top, this.getSize(false).left,\r\n                window.innerHeight - this.getSize(false).top - height,\r\n                window.innerWidth - this.getSize(false).left - width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                this.getSize(false), this.state.dragging);\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.resizeData = undefined;\r\n\r\n        this.invalidateSize(false, true, true);\r\n    };\r\n\r\n    checkSnapOnResize = (runtimeStyle, dir, resizeData) => {\r\n        if (this.callOverride(\"checkSnapOnResize\", runtimeStyle, dir, resizeData))\r\n            return;\r\n\r\n        let snapDelta1, snapDelta2;\r\n        if (dir.includes(\"n\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"s\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top + runtimeStyle.height, runtimeStyle.left);\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"e\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left + runtimeStyle.width);\r\n        }\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2? snapDelta2.deltaX: 0,\r\n            deltaY: snapDelta1? snapDelta1.deltaY: 0,\r\n            snapH: snapDelta1 && snapDelta1.snapH,\r\n            snapV: snapDelta2 && snapDelta2.snapV\r\n        };\r\n\r\n        if (dir.includes(\"n\")) {\r\n            runtimeStyle.height -= snapDelta.deltaY;\r\n            runtimeStyle.top += snapDelta.deltaY;\r\n        } else if (dir.includes(\"s\")) {\r\n            runtimeStyle.height += snapDelta.deltaY;\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            runtimeStyle.width -= snapDelta.deltaX;\r\n            runtimeStyle.left += snapDelta.deltaX;\r\n        } else if (dir.includes(\"e\")) {\r\n            runtimeStyle.width += snapDelta.deltaX;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: runtimeStyle.left,\r\n            p2: runtimeStyle.left + runtimeStyle.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: runtimeStyle.top,\r\n            p2: runtimeStyle.top + runtimeStyle.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    setProps = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setProps\"))\r\n            return this.callOverride(\"setProps\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        if (prop === \"width\" || prop === \"height\" ||\r\n            prop === \"minWidth\" || prop === \"minHeight\" ||\r\n            prop === \"maxWidth\" || prop === \"maxHeight\")\r\n        {\r\n            this.setNewSize(prop, value, gridCoordinates, data, breakpointName, dontAddToSnap);\r\n        } else {\r\n            this.setDataInBreakpoint(prop, value, data, breakpointName);\r\n        }\r\n    };\r\n\r\n    setDataInBreakpoint = (prop, value, data, breakpointName) => {\r\n        this.props.breakpointmanager.setData(data || this.props.griddata, prop, value, breakpointName);\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setTempData = (prop, value, data) => {\r\n        let dataToWrite = data || this.props.griddata;\r\n        dataToWrite[prop] = value;\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getFromTempData = (prop, data) => {\r\n        let dataToRead = data || this.props.griddata;\r\n        return dataToRead[prop];\r\n    };\r\n\r\n    hasDataInBreakPoint = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .hasDataInBreakPoint(data || this.props.griddata, prop, breakpointName);\r\n    };\r\n\r\n    getFromData = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .getFromData(data || this.props.griddata, prop, breakpointName)\r\n    };\r\n\r\n    getCompositeFromData = (prop, data) => {\r\n        return this.props.breakpointmanager\r\n            .getCompositeFromData(data || this.props.griddata, prop, undefined)\r\n    };\r\n\r\n    setNewSize = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setNewSize\"))\r\n            return this.callOverride(\"setNewSize\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        let oldStyle = this.getCompositeFromData(\"style\", data, breakpointName);\r\n        let oldValue = oldStyle && oldStyle[prop];\r\n\r\n        if (value === undefined) {\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        if (!oldValue || (!this.isPercent(oldValue) && !this.isViewRatio(oldValue)) ||\r\n            value === \"auto\" || isNaN(value)) {\r\n            if (!isNaN(value)) {\r\n                value+=\"px\";\r\n            }\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        if (isNaN(value) && value.includes('px'))\r\n            value = parseFloat(value.replace('px', ''));\r\n\r\n        if (this.isPercent(oldValue)) {\r\n            let parentRect = {\r\n                width: gridCoordinates? (gridCoordinates.cx2 - gridCoordinates.cx1): window.innerWidth,\r\n                height: gridCoordinates?(gridCoordinates.cy2 - gridCoordinates.cy1): window.innerHeight\r\n            };\r\n            let newValue = (value / parentRect[this.getParentProps(prop)] * 100).toString() + \"%\";\r\n            this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n        } else if (this.isViewRatio(oldValue)) {\r\n            let parentValue;\r\n            let postFix;\r\n            if (oldValue.includes('vh')) {\r\n                parentValue = this.props.breakpointmanager.getWindowHeight();\r\n                postFix = 'vh'\r\n            }\r\n            if (oldValue.includes('vw')) {\r\n                parentValue = this.props.breakpointmanager.getWindowWidth();\r\n                postFix = 'vw'\r\n            }\r\n            let newValue = (value / parentValue * 100).toString() + postFix;\r\n            newValue = getViewRatioStyle(newValue);\r\n            this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n        }\r\n    };\r\n\r\n    getParentProps = (prop) => {\r\n        if (prop === \"width\" ||\r\n            prop === \"minWidth\" ||\r\n            prop === \"maxWidth\")\r\n        {\r\n            return \"width\";\r\n        }\r\n\r\n        return \"height\";\r\n    };\r\n\r\n    isPercent = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"%\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    isViewRatio = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"vh\") || value.includes(\"vw\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setRuntimeStyle = (newRuntimeStyle, animationCss) => {\r\n        if (this.callOverride(\"setRuntimeStyle\", newRuntimeStyle))\r\n            return;\r\n\r\n        let runtimeStyle = newRuntimeStyle && {...newRuntimeStyle};\r\n        this.setState({runtimeStyle, animationCss});\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getGridItemStyleId = () => {\r\n        return `style_grid_item_${this.props.id}`;\r\n    };\r\n\r\n    setGridItemStyle = (newGridItemStyle, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setGridItemStyle\", newGridItemStyle, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let gridItemStyle = {...newGridItemStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, undefined, breakpointName);\r\n\r\n        let styleNode = document.getElementById(this.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getCompositeFromData(\"gridItemStyle\"),\r\n                this.getGridItemStyleId(), this.getGridItemStyleId(), this);\r\n        } else {\r\n            updateStyle(styleNode, this.getCompositeFromData(\"gridItemStyle\"), this.getGridItemStyleId());\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setGridArea = (gridArea, breakpointName) => {\r\n        if (this.callOverride(\"setGridArea\", gridArea))\r\n            return;\r\n\r\n        let gridItemStyle = this.getFromData(\"gridItemStyle\");\r\n        gridItemStyle.gridArea = gridArea;\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n    };\r\n\r\n    getGridArea = () => {\r\n        if (this.callOverride(\"getGridArea\"))\r\n            return;\r\n\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return gridItemStyle.gridArea;\r\n    };\r\n\r\n    setStyleParam = (param, value, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setStyleParam\"))\r\n            return this.callOverride(\"setStyleParam\", param, value, data, breakpointName);\r\n\r\n        let style = this.hasDataInBreakPoint(\"style\", data, breakpointName) || {};\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        this.setStyle(style, data, breakpointName, undefined, dontAddToSnap);\r\n    };\r\n\r\n    getStyleId = () => {\r\n        return `style_${this.props.id}`;\r\n    };\r\n\r\n    getDesignStyleId = () => {\r\n        return `style_design_${this.props.id}`;\r\n    };\r\n\r\n    setDesignStyle = (newDesignStyle, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setDesignStyle\", newDesignStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let designStyle = {...newDesignStyle};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"designStyle\", designStyle, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let designStyleNode = document.getElementById(this.getDesignStyleId());\r\n\r\n            if (!designStyleNode) {\r\n                appendStyle(this.getCompositeFromData(\"designStyle\"),\r\n                    this.getDesignStyleId(), this.getDesignStyleId(), this);\r\n            } else {\r\n                updateStyle(designStyleNode, this.getCompositeFromData(\"designStyle\"), this.getDesignStyleId());\r\n            }\r\n\r\n            this.invalidateSize();\r\n            this.addToSnap();\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyleId = () => {\r\n        return `style-transform-${this.props.id}`;\r\n    };\r\n\r\n    setTransformStyle = (newTransform, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setTransformStyle\", newTransform, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let transform = {...newTransform};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"transform\", transform, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let transformStyleNode = document.getElementById(this.getTransformStyleId());\r\n\r\n            if (!transformStyleNode) {\r\n                appendStyle(this.getTransformStyle(),\r\n                    this.getTransformStyleId(), this.getTransformStyleId(), this);\r\n            } else {\r\n                updateStyle(transformStyleNode, this.getTransformStyle(), this.getTransformStyleId());\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyle = (compositeTransform) => {\r\n        if (!compositeTransform)\r\n            compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n\r\n        let rules = [];\r\n\r\n        // TODO add more rules\r\n        compositeTransform.rotateDegree && rules.push(`rotate(${compositeTransform.rotateDegree}deg)`);\r\n\r\n        return {transform: rules.join(' ')};\r\n    };\r\n\r\n    setStyle = (newStyle, data, breakpointName, dontOverride, dontAddToSnap) => {\r\n        if (this.callOverride(\"setStyle\", newStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let style = {...newStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"style\", style, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let styleNode = document.getElementById(this.getStyleId());\r\n\r\n            if (!styleNode) {\r\n                appendStyle(\r\n                    this.getCompositeFromData(\"style\"),\r\n                    this.getStyleId(), this.getStyleId(), this);\r\n            } else {\r\n                updateStyle(styleNode,\r\n                    this.getCompositeFromData(\"style\"),\r\n                    this.getStyleId());\r\n            }\r\n\r\n            if (!dontAddToSnap) {\r\n                this.invalidateSize();\r\n                this.addToSnap();\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    clearFromAllBp = (props, data, excludeBp) => {\r\n        let sortedBp = this.props.breakpointmanager.getSortedBreakPoints();\r\n        sortedBp.forEach( bp => {\r\n            if (excludeBp !== bp.name || !excludeBp.includes(bp.name))\r\n                this.setDataInBreakpoint(props, undefined, data, bp.name);\r\n        });\r\n    };\r\n\r\n    setGrid = (grid, callback, breakpointName) => {\r\n        if (this.callOverride(\"setGrid\", grid, callback, breakpointName))\r\n            return;\r\n\r\n        this.setDataInBreakpoint(\"grid\", grid, undefined, breakpointName);\r\n        this.setState({grid: grid}, () => {\r\n            if (this.props.gridLine.hasGridLine(this.props.id)) {\r\n                let size = this.getSize(false);\r\n                this.updateGridLines(\r\n                    size.top,\r\n                    size.left,\r\n                    size.top + size.clientHeight,\r\n                    size.left + size.clientWidth,\r\n                    this.props.gridLine.hasGridLine(this.props.id)\r\n                );\r\n            }\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    getGridLineRect = (ref, index, dir, item) => {\r\n        if (ref.current) {\r\n            return ref.current.rect;\r\n        }\r\n\r\n        let parentRect = item.props.parent && item.props.parent.getSize(false) || {\r\n            width: item.props.breakpointmanager.getWindowWidth()\r\n        };\r\n        let padding = cloneObject(item.getCompositeFromData(\"padding\")) || {};\r\n        ['top', 'left', 'bottom', 'right'].forEach(key => {\r\n            padding[key] = getPxValueFromCSSValue(padding[key], parentRect.width, item) || 0;\r\n        });\r\n\r\n        let thisRect = item.getSize(false);\r\n        if (dir === 'x') {\r\n            if (index === 0) {\r\n                return {\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left ,\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top,\r\n                    height: thisRect.scrollHeight - padding.top - padding.bottom,\r\n                    width: 1\r\n                }\r\n            } else {\r\n                return {\r\n                    left: thisRect.left - thisRect.scrollLeft + thisRect.scrollWidth - padding.right - 1,\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top,\r\n                    height: thisRect.scrollHeight - padding.top - padding.bottom,\r\n                    width: 1\r\n                }\r\n            }\r\n        } else {\r\n            if (index === 0) {\r\n                return {\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top ,\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left,\r\n                    height: 1,\r\n                    width: thisRect.scrollWidth - padding.left - padding.right,\r\n                }\r\n            } else {\r\n                return {\r\n                    top: thisRect.top - thisRect.scrollTop + thisRect.scrollHeight - padding.bottom - 1,\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left,\r\n                    height: 1,\r\n                    width: thisRect.scrollWidth - padding.left - padding.right,\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getGridLineOfPoint = (left, top, parent, after = false, parentRect) => {\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false);\r\n        let x;\r\n        let cx;\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', parent);\r\n            if (left < rect.left || (after && left <= rect.left)) {\r\n                x = i;\r\n                if (!after) {\r\n                    if (xLineRef[i - 1]) {\r\n                        // rect = xLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = xLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(xLineRef[i - 1], i - 1, 'x', parent);\r\n                        cx = rect.left;\r\n                    } else {\r\n                        // cx = parentRect.left - parentRect.scrollLeft;\r\n                        cx = rect.left;\r\n                    }\r\n                } else {\r\n                    cx = rect.left;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (x === undefined) {\r\n            x = xLineRef.length;\r\n            // let rect = xLineRef[xLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = xLineRef[xLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(xLineRef[xLineRef.length - 1], xLineRef.length - 1, 'x', parent);\r\n            cx = rect.left;\r\n        }\r\n\r\n        let y;\r\n        let cy;\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let rect = yLineRef[i].current.getBoundingClientRect();\r\n            // let rect = yLineRef[i].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', parent);\r\n            if (top < rect.top || (after && top <= rect.top)) {\r\n                y = i;\r\n                if (!after) {\r\n                    if (yLineRef[i - 1]) {\r\n                        // rect = yLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = yLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(yLineRef[i - 1], i - 1, 'y', parent);\r\n                        cy = rect.top;\r\n                    } else {\r\n                        // cy = parentRect.top - parentRect.scrollTop;\r\n                        cy = rect.top;\r\n                    }\r\n                } else {\r\n                    cy = rect.top;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (y === undefined) {\r\n            y = yLineRef.length;\r\n            // let rect = yLineRef[yLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = yLineRef[yLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[yLineRef.length - 1], yLineRef.length - 1, 'y', parent);\r\n            cy = rect.top;\r\n        }\r\n\r\n        if (after) {\r\n            x++;\r\n            y++;\r\n        }\r\n\r\n        x = Math.max(1, x);\r\n        x = Math.min(xLineRef.length, x);\r\n        y = Math.max(1, y);\r\n        y = Math.min(yLineRef.length, y);\r\n\r\n        if (x === xLineRef.length)\r\n            cx++;\r\n        if (y === yLineRef.length)\r\n            cy++;\r\n\r\n        return {x, y, cx, cy};\r\n    };\r\n\r\n    calculateGridArea = (left, top, width, height, parent, parentRect) => {\r\n        if (!this.props.gridLine.hasGridLine(parent.props.id)) {\r\n            return {\r\n                gridArea: {x1: 1, y1: 1, x2: 2, y2: 2},\r\n                coordinates: {cx1: 0, cy1: 0, cx2: 0, cy2: 0}\r\n            }\r\n        }\r\n        let gridLine1 = this.getGridLineOfPoint(left, top, parent, false, parentRect);\r\n        let gridLine2 = this.getGridLineOfPoint(left + width, top + height, parent, true, parentRect);\r\n        return {\r\n            gridArea: {x1: gridLine1.x, y1: gridLine1.y, x2: gridLine2.x, y2: gridLine2.y},\r\n            coordinates: {cx1: gridLine1.cx, cy1: gridLine1.cy, cx2: gridLine2.cx, cy2: gridLine2.cy}\r\n        };\r\n    };\r\n\r\n    onMouseDown = (e, moveWithMouse) => {\r\n        if (!this.isEditor())\r\n            return;\r\n\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            this.moveWithMouse = moveWithMouse;\r\n            this.mouseMoved = {\r\n                deltaX: 0,\r\n                deltaY: 0,\r\n                lastClientX: e.clientX,\r\n                lastClientY: e.clientY,\r\n                startMillis: (new Date()).getTime()\r\n            };\r\n            window.addEventListener(\"mousemove\", this.onMouseMove);\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        } else if (isRightClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseMoved.deltaX += (e.clientX - this.mouseMoved.lastClientX);\r\n        this.mouseMoved.deltaY += (e.clientY - this.mouseMoved.lastClientY);\r\n        this.mouseMoved.lastClientX = e.clientX;\r\n        this.mouseMoved.lastClientY = e.clientY;\r\n\r\n        if (!this.moving) {\r\n            let currentMillis = new Date().getTime();\r\n            if (Math.abs(this.mouseMoved.deltaX) > 10 ||\r\n                Math.abs(this.mouseMoved.deltaY) > 10 ||\r\n                currentMillis - this.mouseMoved.startMillis > 500)\r\n            {\r\n                if (!this.state.groupSelected && this.getFromTempData(\"draggable\") && !this.state.selected) {\r\n                    this.onSelect(true);\r\n                }\r\n                this.moving = true;\r\n                this.canMove() && this.onDragStart(e, isGroupSelected(this), true);\r\n            }\r\n        } else {\r\n            this.canMove() && this.onDrag(e, isGroupSelected(this), true);\r\n        }\r\n    };\r\n\r\n    canMove = () => {\r\n        return (this.state.selected || this.state.groupSelected) && this.getFromTempData(\"draggable\");\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        delete this.moveWithMouse;\r\n\r\n        if (isRightClick(e)) {\r\n            this.onContextMenu(e);\r\n            this.mouseDown = false;\r\n            window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n            return;\r\n        }\r\n\r\n        let currentMillis = new Date().getTime();\r\n        if (!this.moving && currentMillis - this.mouseMoved.startMillis < 500) {\r\n            if (!this.dropped) {\r\n                e.stopPropagation();\r\n                this.onSelect(true, undefined, undefined, true);\r\n            } else {\r\n                this.dropped = false;\r\n            }\r\n        }\r\n\r\n        if (this.moving && this.canMove()) {\r\n            window.requestAnimationFrame(() => {\r\n                this.onDragStop(e, isGroupSelected(this), true);\r\n            });\r\n        }\r\n\r\n        this.moving = false;\r\n        this.mouseDown = false;\r\n\r\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\r\n        window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n    };\r\n\r\n    onSelect = (selected, callback, deselectParent, clicked, dontUpdateAdjustment) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        if (this.callOverride(\"onSelect\", selected, callback, deselectParent))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n        if (!this.props.isSelectable)\r\n            return;\r\n\r\n        if (selected) {\r\n            this.props.select.selectItem(this, clicked, dontUpdateAdjustment);\r\n            this.props.gridLine.removeGridLineByType(\"A\");\r\n            this.toggleGridLines(selected, undefined, \"A\");\r\n        } else {\r\n            this.props.onDeSelectListener && this.props.onDeSelectListener(this);\r\n            this.props.select.updateHelpSizeLines();\r\n        }\r\n\r\n        if (this.props.parent) {\r\n            if (selected || deselectParent)\r\n                this.props.parent.toggleGridLines(selected, () => {\r\n                    this.toggleHelpLines(selected && this.props.parent);\r\n                }, \"B\");\r\n        } else {\r\n            selected && this.props.gridLine.removeGridLineByType(\"B\");\r\n            this.props.select.updateHelpSizeLines();\r\n        }\r\n\r\n        this.setTempData(\"selected\", selected);\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        this.setState({selected, groupSelected: false}, () => {\r\n            selected && this.setItemHover(true);\r\n\r\n            this.props.editor.updateLayout();\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    toggleGridLines = (showGridLines, callback, gridType) => {\r\n        if (this.callOverride(\"toggleGridLines\", showGridLines, callback, gridType))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        if (!showGridLines) {\r\n            this.props.gridLine.removeGridLine(this.props.id);\r\n            this.updateLayout();\r\n            return;\r\n        }\r\n\r\n        if (!this.getFromTempData(\"isContainer\"))\r\n            return;\r\n\r\n        if (this.props.gridLine.hasGridLine(this.props.id, gridType)) {\r\n            if (callback)\r\n                callback();\r\n\r\n            this.updateLayout();\r\n\r\n            return;\r\n        }\r\n\r\n        let grid = this.getCompositeFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            },\r\n            () => {\r\n                if (callback)\r\n                    callback();\r\n\r\n                this.updateLayout();\r\n            }\r\n        );\r\n    };\r\n\r\n    toggleHelpLines = (helpLinesParent, callback) => {\r\n        if (this.callOverride(\"toggleHelpLines\", helpLinesParent, callback))\r\n            return;\r\n\r\n        if (this.mounted) {\r\n            this.setState({\r\n                helpLinesParent: helpLinesParent !== this && helpLinesParent\r\n            }, () => {\r\n                helpLinesParent &&\r\n                this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                    this.getSize(false), this.state.dragging);\r\n\r\n                if (callback)\r\n                    callback();\r\n            });\r\n        }\r\n    };\r\n\r\n    onScroll = (e) => {\r\n        console.log(\"onScroll\", this.props.id);\r\n        if (this.callOverride(\"onScroll\", e))\r\n            return;\r\n\r\n        this.isEditor() && this.invalidateSize(true, false, true);\r\n        this.isEditor() && this.props.select.updateParentsRect();\r\n        this.isEditor() && this.props.select.onScrollItem();\r\n        this.onScrollEnd(e);\r\n    };\r\n\r\n    onRootScroll = (e) => {\r\n        if (this.getFromTempData(\"isFixed\")) {\r\n            this.props.parent.forceScroll(e);\r\n        }\r\n    };\r\n\r\n    forceScroll = (e) => {\r\n        console.log(\"forceScroll\", this.props.id, this.rootDivRef.current.scrollTop, e.deltaY);\r\n\r\n        clearTimeout(this.scrollReset);\r\n\r\n        if (!this.targetScroll) this.targetScroll = {\r\n            top: this.rootDivRef.current.scrollTop\r\n        };\r\n\r\n        if (this.targetScroll.top < 0 && e.deltaY > 0)\r\n            this.targetScroll.top = 0;\r\n\r\n        let maxTop = this.rootDivRef.current.scrollHeight - this.getSize(false).height;\r\n        if (this.targetScroll.top > maxTop && e.deltaY < 0) {\r\n            this.targetScroll.top = maxTop;\r\n        }\r\n\r\n        this.targetScroll.top += e.deltaY;\r\n\r\n        this.rootDivRef.current.scrollTo({\r\n            top: this.targetScroll.top,\r\n            behavior: 'smooth'\r\n        });\r\n\r\n        this.scrollReset = setTimeout(() => {\r\n            this.targetScroll = {\r\n                top: this.rootDivRef.current.scrollTop\r\n            };\r\n        }, 500);\r\n    }\r\n\r\n    onScrollEnd = debounce((e) => {\r\n        if (this.callOverride(\"onScrollEnd\", e))\r\n            return;\r\n\r\n        this.isEditor() && this.invalidateSize();\r\n        this.isEditor() && this.addToSnap();\r\n    }, 500);\r\n\r\n    editGrid = () => {\r\n        this.props.gridEditorRef.current.editing(this);\r\n    };\r\n\r\n    updateGridEditor = () => {\r\n        this.props.gridEditorRef.current.update(this);\r\n    };\r\n\r\n    setAnchor = (anchor) => {\r\n        if (this.callOverride(\"setAnchor\", anchor))\r\n            return;\r\n\r\n        this.setTempData(\"anchor\", anchor);\r\n        this.updateLayout();\r\n    };\r\n\r\n    isEditor = () => {\r\n        return this.props.editor;\r\n    }\r\n\r\n    playAnimation = (disable) => {\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        if (!compositeDesign.animation || !compositeDesign.animation.name)\r\n            return;\r\n\r\n        if (this.getFromData(\"dontAnimate\"))\r\n            return;\r\n\r\n        // Component going to show animation, so add end listener for more action\r\n        let onAnimationEnd = DynamicAnimations[compositeDesign.animation.name].onAnimationEnd;\r\n\r\n        let stateChange = {\r\n            forceKey: \"animationReplay\",\r\n            showAnimation: true,\r\n            onAnimationEnd\r\n        };\r\n\r\n        if (disable) {\r\n            stateChange.disableVS = true;\r\n            this.setTempData(\"dontAnimate\", true);\r\n        }\r\n\r\n        this.isEditor() && this.props.select.activateHover(false);\r\n        this.isEditor() && this.props.select.activateResize(false);\r\n\r\n        this.setState(stateChange);\r\n    };\r\n\r\n    onAnimationEnd = () => {\r\n        this.setState({forceKey: undefined, showAnimation: undefined});\r\n        this.isEditor() && this.props.select.activateHover(true);\r\n        this.isEditor() && this.props.select.activateResize(true);\r\n    };\r\n\r\n    getCompositeAnimationCss = (compositeAnimation = {}) => {\r\n        if (!(compositeAnimation.name && this.state.forceKey && this.state.showAnimation))\r\n            return;\r\n\r\n        return DynamicAnimations[compositeAnimation.name]\r\n            .getAnimationCSS(this, compositeAnimation.options);\r\n    };\r\n\r\n    onContextMenu = (e) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        e.preventDefault();\r\n        this.onSelect(true);\r\n        this.props.select.onContextMenu(e, this);\r\n    };\r\n\r\n    getContextMenu = () => {\r\n        if (this.hasOverride(\"getContextMenu\"))\r\n            return this.callOverride(\"getContextMenu\");\r\n    };\r\n\r\n    onDoubleClick = (e) => {\r\n        if (this.callOverride(\"onDoubleClick\", e))\r\n            return;\r\n    }\r\n\r\n    render () {\r\n        let {className, animationCss, as, editor, select, id, getStaticChildren,\r\n            isPage, page, getChildrenOverride, modifyContainerStyleOverride} = this.props;\r\n        let {selected, runtimeStyle, portalNodeId, disableVS, showAnimation, forceKey, grid,\r\n            draggingStart, showGridLines, resizeHelpData} = this.state;\r\n        let isContainer = this.props.griddata.isContainer;\r\n        let children = this.children;\r\n        let resizeData = this.resizeData;\r\n        let size = runtimeStyle || this.getSize(false);\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        let compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n        let compositeStyle = this.getCompositeFromData(\"style\");\r\n        let overflowData = this.getCompositeFromData(\"overflowData\");\r\n        let anchor = this.getFromTempData(\"anchor\");\r\n        let selectAsParent = this.props.gridLine.hasGridLine(this.props.id, \"B\") !== undefined;\r\n\r\n        let classes = classNames(\r\n            \"AwesomeGridLayoutRoot\",\r\n            \"AwesomeGridLayoutGrid\",\r\n            className,\r\n            this.getDesignStyleId(),\r\n            this.getGridItemStyleId(),\r\n            this.getStyleId(),\r\n            this.getCompositeAnimationCss(compositeDesign.animation),\r\n            isPage && \"PageScrollBar\"\r\n        );\r\n\r\n        let holderClasses = classNames(\r\n            \"AwesomeGridLayoutHolder\",\r\n            this.getTransformStyleId(),\r\n        );\r\n\r\n        let TagAs = as || \"div\";\r\n\r\n        return (\r\n            <Portal nodeId={portalNodeId} disabled={!portalNodeId}>\r\n                <VisibilitySensorWrapper\r\n                    animation={compositeDesign.animation}\r\n                    editor={editor}\r\n                    playAnimation={this.playAnimation}\r\n                    select={select}\r\n                    disableVS={disableVS}\r\n                >\r\n                        <TagAs\r\n                            onMouseDown={!showAnimation ? this.onMouseDown : undefined}\r\n                            onMouseOver={this.onMouseOver}\r\n                            onMouseEnter={this.onMouseEnter}\r\n                            onMouseOut={this.onMouseOut}\r\n                            onScroll={this.onRootScroll}\r\n                            onWheel={this.onRootScroll}\r\n                            onDoubleClick={this.onDoubleClick}\r\n                            id={id}\r\n                            className={classes}\r\n                            style={{\r\n                                ...runtimeStyle,\r\n                                ...(this.canMove() && {cursor: \"move\"}),\r\n                                // ...(!this.isEditor() && this.getFromTempData(\"isFixed\") && {pointerEvents: \"none\"}),\r\n                                ...(isPage && {overflowY: \"auto\", overflowX: \"hidden\"}),\r\n                                ...(overflowData.state === 'hide' && {\r\n                                    overflowY: 'hidden',\r\n                                    overflowX: 'hidden',\r\n                                }),\r\n                                ...(showAnimation && {\r\n                                    opacity: 0\r\n                                })\r\n                            }}\r\n                            ref={this.rootDivRef}\r\n                            key={id}\r\n                            onAnimationEnd={this.onAnimationEnd}\r\n                        >\r\n                            {\r\n                                this.getFromTempData(\"pageResize\") &&\r\n                                !showAnimation &&\r\n                                <AdjustmentResizePage\r\n                                    id={id}\r\n                                    key={`${id}_resize`}\r\n                                    sides={['e','w']}\r\n                                    onResizeStart={this.pageResizeStart}\r\n                                    onResize={this.pageResize}\r\n                                    onResizeStop={this.pageResizeStop}\r\n                                    data={runtimeStyle || size}\r\n                                    top={(resizeData && resizeData.top) || (size && size.top)}\r\n                                    left={(resizeData && resizeData.left) || (size && size.left)}\r\n                                    width={(runtimeStyle && runtimeStyle.width) || (size && size.width)}\r\n                                    height={(runtimeStyle && runtimeStyle.height) || (size && size.height)}\r\n                                    draggingStart={draggingStart}\r\n                                    itemId={id}\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                selected && resizeHelpData &&\r\n                                !this.getFromTempData(\"pageResize\") &&\r\n                                !showAnimation &&\r\n                                !isGroupSelected(this) &&\r\n                                <AdjustmentHelpSize\r\n                                    resizeHelpData={resizeHelpData}\r\n                                />\r\n                            }\r\n\r\n                            <ChildHolder\r\n                                className={holderClasses}\r\n                                key={forceKey || `${id}_container`}\r\n                                id={`${id}_child_holder`}\r\n                                disabled={Object.keys(compositeTransform).length > 0}\r\n                                transformRef={this.transformRef}\r\n                            >\r\n                                {\r\n                                    getStaticChildren && getStaticChildren()\r\n                                }\r\n\r\n                                <GridChildContainer\r\n                                    id={id}\r\n                                    key={`${id}_container`}\r\n                                    allChildren={children}\r\n                                    grid={grid}\r\n                                    overflowData={overflowData}\r\n                                    showGridLines={showGridLines}\r\n                                    aglStyle={compositeStyle}\r\n                                    overflowRef={this.overflowRef}\r\n                                    containerRef={this.containerRef}\r\n                                    show={isContainer}\r\n                                    onScroll={this.onScroll}\r\n                                    isPage={isPage}\r\n                                    editor={editor}\r\n                                    page={page}\r\n                                    ref={this.backContainerRef}\r\n                                    size={runtimeStyle || size}\r\n                                    getChildrenOverride={getChildrenOverride}\r\n                                    agl={this}\r\n                                    padding={this.getCompositeFromData(\"padding\")}\r\n                                    modifyContainerStyleOverride={modifyContainerStyleOverride}\r\n                                    selectAsParent={selectAsParent}\r\n                                    selected={selected}\r\n                                />\r\n                            </ChildHolder>\r\n\r\n                            <AGLAnchor\r\n                                anchor={anchor}\r\n                            />\r\n\r\n                            {\r\n                                this.state.dragging && this.props.parent &&\r\n                                <Portal nodeId={this.state.portalNodeId ||\r\n                                    `${this.props.parent.props.id}_container`}\r\n                                >\r\n                                    <div\r\n                                        className={this.state.fakeStyle}\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            pointerEvents: \"none\",\r\n                                            ...this.state.fakeStyle\r\n                                        }}\r\n                                    />\r\n                                </Portal>\r\n                            }\r\n\r\n                        </TagAs>\r\n                </VisibilitySensorWrapper>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n\r\nAwesomeGridLayout2.defaultProps = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    childSize: {w: \"100%\", h: \"100%\"},\r\n    showSideResize: false,\r\n    isSelectable: true,\r\n    layoutType: \"free\", // free, grid\r\n    snap: {x: 1, y: 1},\r\n    dir: \"rtl\", // rtl, ltr,\r\n    compactType: \"vertical\", // none, vertical, horizontal\r\n    defaultGrid: {\r\n        x: 1,\r\n        y: 1,\r\n        gridTemplateRows: \"1fr\",\r\n        gridTemplateColumns: \"1fr\"\r\n    },\r\n    defaultStyle: {\r\n        width: \"50%\",\r\n        height: \"50%\",\r\n    },\r\n    defaultGridItemStyle: {\r\n        alignSelf: \"center\",\r\n        justifySelf: \"center\",\r\n        position: \"relative\",\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        gridArea: \"1/1/2/2\",\r\n    }\r\n};\r\n","import AwesomeGridLayout2 from \"../../AwesomeGridLayout2\";\r\nimport React from \"react\";\r\nimport {assignData, initGriddata} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AGLWrapper extends React.Component{\r\n    render() {\r\n        let griddata = this.props.aglRef.current && this.props.aglRef.current.props.griddata;\r\n        if (!griddata) griddata = this.props.griddata;\r\n        if (griddata && griddata.initialized) {\r\n            if (!griddata.fillWithData) {\r\n                griddata.fillWithData = true;\r\n                let bpData = this.props.data.bpData;\r\n                Object.keys(this.props.data).forEach(key => {\r\n                    if (key !== \"bpData\") {\r\n                        griddata[key] = this.props.data[key];\r\n                    }\r\n                });\r\n                assignData(griddata.bpData[\"laptop\"], bpData);\r\n            }\r\n        } else {\r\n            griddata = assignData(this.props.griddata, this.props.data);\r\n            initGriddata(griddata, this.props.breakpointmanager);\r\n        }\r\n\r\n        return (\r\n            <AwesomeGridLayout2\r\n                className={this.props.className}\r\n                {...this.props}\r\n                ref={this.props.aglRef}\r\n                griddata={griddata}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class StackSpacerContainer extends React.PureComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n    }\r\n\r\n    updateSpacers = (spacers) => {\r\n        setTimeout(() => {\r\n            this.setState({spacers});\r\n        }, 0);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.state.spacers.map((spacer, index) => {\r\n                return <Portal nodeId={`${this.props.aglRef.current.props.id}_container`}\r\n                               key={index}\r\n                               document={this.props.document}\r\n                >\r\n                    {spacer}\r\n                </Portal>\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentMove extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        let rect = this.rootDivRef.current.getBoundingClientRect();\r\n        if (this.isLeftClick(e) && e.clientX >= rect.left && e.clientX <= rect.left + rect.width &&\r\n            e.clientY >= rect.top && e.clientY <= rect.top + rect.height) {\r\n            e.stopPropagation();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        } else {\r\n            if (this.props.onClick)\r\n                this.props.onClick(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.props.onDragStart(e);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.props.onDrag(e);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentMove\"\r\n                className=\"AdjustmentMoveRoot\"\r\n                ref={this.rootDivRef}\r\n                onPointerDown={this.onMouseDown}\r\n                style={{\r\n                    cursor: this.props.cursor || \"move\"\r\n                }}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\n\r\nexport default class StackSpacerResizer extends React.PureComponent{\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerResizerRoot\"\r\n            >\r\n                <AdjustmentMove\r\n                    onDragStart={this.props.onDragStart}\r\n                    onDrag={this.props.onDrag}\r\n                    onDragStop={this.props.onDragStop}\r\n                    cursor={this.props.cursor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\nimport StackSpacerResizer from \"./StackSpacerResizer\";\r\n\r\nexport default class StackSpacer extends React.PureComponent{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            pointerEvents: \"auto\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setPointerEvents = (pointerEvents) => {\r\n        this.mounted && this.setState({pointerEvents});\r\n    };\r\n\r\n    updateSpacerData = (newHeight) => {\r\n        this.props.spacerData.height = newHeight;\r\n        this.props.stack.props.select.updateSize();\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClick = (e) => {\r\n        this.props.aglRef.current.onSelect(true);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        if (this.props.onDragStart)\r\n            this.props.onDragStart(e);\r\n\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n            firstHeight: this.props.spacerData.height\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        e.preventDefault();\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        let newHeight = this.dragData.firstHeight + deltaY;\r\n\r\n        newHeight = Math.max(0, newHeight);\r\n        this.updateSpacerData(newHeight);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerRoot\"\r\n                style={{\r\n                    height: `${this.props.spacerData.height}px`,\r\n                    order: this.props.order,\r\n                    pointerEvents: this.state.pointerEvents\r\n                }}\r\n                onClick={this.onClick}\r\n                onMouseOver={this.props.onMouseOver}\r\n                onMouseEnter={this.props.onMouseEnter}\r\n                onMouseOut={this.props.onMouseOut}\r\n            >\r\n\r\n                <StackSpacerResizer\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n\r\n                {\r\n                    this.props.aglRef.current.getSize(false).width > 150 &&\r\n                    <p\r\n                        className=\"StackSpacerText\"\r\n                    >\r\n                        Spacer\r\n                    </p>\r\n                }\r\n\r\n                <p\r\n                    className=\"StackSpacerSizeText\"\r\n                >\r\n                    {`${this.props.spacerData.height.toFixed(0)}px`}\r\n                </p>\r\n\r\n                <AdjustmentMove\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    onClick={this.onClick}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {isFixed, isStretch} from \"../../AwesomwGridLayoutHelper\";\r\nimport {appendStyle, cloneObject, updateStyle} from \"../../AwesomeGridLayoutUtils\";\r\nimport StackSpacerContainer from \"./StackSpacerContainer\";\r\nimport StackSpacer from \"./StackSpacer\";\r\n\r\nexport default class Stack extends AGLComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n        this.aglRef = React.createRef();\r\n        this.spacerContainerRef = React.createRef();\r\n\r\n        if (props.allSpacerData)\r\n            this.allSpacerData = props.allSpacerData;\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n        };\r\n    };\r\n\r\n    getChildrenOverride = (sortedChildrenArray, agl) => { // [{child: child, zIndex: zIndex}], agl\r\n        return sortedChildrenArray.map((child, index) => {\r\n            return child.child;\r\n        });\r\n    };\r\n\r\n    lateMountedOverride = (agl) => {\r\n        agl.invalidateSize();\r\n        agl.addToSnap();\r\n        agl.onSelect(agl.getFromTempData(\"selected\"));\r\n\r\n        if (agl.props.onPageResize) {\r\n            let rect = agl.getSize(false, true);\r\n            agl.props.onPageResize(rect.width, agl, true);\r\n        }\r\n\r\n        agl.props.onChildMounted && agl.props.onChildMounted(agl);\r\n        if (this.props.lateMountedComplete)\r\n            this.props.lateMountedComplete(this);\r\n\r\n        this.setOrder();\r\n    };\r\n\r\n    calculateGridItemChildOverride = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateChildGridItemOverride =\r\n        (child1, child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateWrapper = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) => {\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let {gridArea, coordinates} = child.calculateGridArea(\r\n            parentRect.left + relativeX,\r\n            parentRect.top + relativeY,\r\n            width,\r\n            height,\r\n            parent,\r\n            parentRect\r\n        );\r\n\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.clientHeight,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.clientWidth\r\n            }\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let gridItemStyle = {...(child.state.gridItemStyle || child.props.defaultGridItemStyle)};\r\n        delete gridItemStyle.marginLeft;\r\n        delete gridItemStyle.marginRight;\r\n\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.alignSelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.alignSelf = \"flex-end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"flex-start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            // if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n            // gridItemStyle.alignSelf = \"end\";\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // } else {\r\n            // gridItemStyle.alignSelf = \"start\";\r\n            // gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            // }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }\r\n\r\n        delete gridItemStyle.justifySelf;\r\n        delete gridItemStyle.marginTop;\r\n        delete gridItemStyle.marginBottom;\r\n        delete gridItemStyle.gridArea;\r\n\r\n        child.setDataInBreakpoint(\"relativeY\", relativeY);\r\n\r\n        this.setOrder(child.props.id, child, relativeY, height, fromState);\r\n\r\n        child.setStyleParam(\"height\", \"auto\");\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    setOrder = (childId, child, childRelativeY, childHeight, fromState) => {\r\n        let childFound = false;\r\n        let childOrderSet = false;\r\n        let sorted = Object.values(this.aglRef.current.allChildRefs).sort((a,b) => {\r\n            if (a && a.current && b && b.current){\r\n                if (a.current.props.id === childId || b.current.props.id === childId)\r\n                    childFound = true;\r\n\r\n                let relativeYA = a.current.getFromData(\"relativeY\");\r\n                let relativeYB = b.current.getFromData(\"relativeY\");\r\n                if (relativeYA < relativeYB) {\r\n                    return -1;\r\n                } else if (relativeYA === relativeYB) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    if (childId === a.current.props.id)\r\n                        return -1;\r\n                    else if (childId === b.current.props.id)\r\n                        return 1;\r\n                    else\r\n                        return 0;\r\n                }\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        let order = 1;\r\n        let relativeY = 0;\r\n        let spacers = [];\r\n        let length = sorted.filter(childRef => {\r\n            return (childRef && childRef.current);\r\n        }).length;\r\n\r\n        sorted.forEach((childRef, index) => {\r\n            if (childRef && childRef.current) {\r\n                if (childRelativeY && !childFound) {\r\n                    let relativeY2 = childRef.current.getFromData(\"relativeY\");\r\n                    if (!childOrderSet && relativeY2 > childRelativeY) {\r\n                        childOrderSet = true;\r\n                        child.setStyleParam(\"order\", order);\r\n                        child.setDataInBreakpoint(\"order\", order);\r\n                        order++;\r\n                    }\r\n                }\r\n                childRef.current.setStyleParam(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"relativeY\", relativeY);\r\n                let size = childRef.current.getSize(false);\r\n                relativeY += size.height;\r\n\r\n                if (childId === childRef.current.props.id) {\r\n                    childOrderSet = true;\r\n                }\r\n                order++;\r\n\r\n                if (length > index + 1) {\r\n                    spacers[index] = this.getSpacer(index, order);\r\n                    relativeY+= this.getSpacerData(index).height;\r\n                    order++;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (child && !childOrderSet) {\r\n            childOrderSet = true;\r\n            child.setStyleParam(\"order\", order);\r\n            child.setDataInBreakpoint(\"order\", order);\r\n            order++;\r\n        }\r\n\r\n        this.spacerContainerRef.current.updateSpacers(spacers);\r\n        setTimeout(() => {\r\n            this.props.select.updateSize();\r\n        }, 0);\r\n    };\r\n\r\n    getSpacer = (index, order) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        if (!this.allSpacerRef[index]) {\r\n            this.allSpacerRef[index] = React.createRef();\r\n        }\r\n\r\n        return <StackSpacer\r\n            key={index}\r\n            order={order}\r\n            spacerData={this.allSpacerData[index]}\r\n            ref={this.allSpacerRef[index]}\r\n            aglRef={this.aglRef}\r\n            onDragStart={this.onStackDragStart}\r\n            onDragStop={this.onStackDragStop}\r\n            stack={this}\r\n            onMouseOver={this.onMouseOverSpacer}\r\n            onMouseEnter={this.onMouseEnterSpacer}\r\n            onMouseOut={this.onMouseOutSpacer}\r\n        />;\r\n    };\r\n\r\n    onStackDragStart = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", true);\r\n    };\r\n\r\n    onStackDragStop = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", false);\r\n    };\r\n\r\n    getSpacerData = (index) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        return this.allSpacerData[index];\r\n    };\r\n\r\n    setMouseOverOverride = (agl, item, positionData, callback) => {\r\n        this.setPointerEventOfSpacers(\"none\");\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    setMouseOverForNonDraggingOverride = (agl) => {\r\n        this.setPointerEventOfSpacers(\"auto\");\r\n        agl.props.dragdrop.setMouseOverForNonDragging(agl);\r\n    };\r\n\r\n    setPointerEventOfSpacers = (pointerEvents) => {\r\n        if (!this.allSpacerRef)\r\n            this.allSpacerRef = [];\r\n\r\n        this.allSpacerRef.forEach((spacerRef) => {\r\n            if (spacerRef && spacerRef.current)\r\n                spacerRef.current.setPointerEvents(pointerEvents);\r\n        })\r\n    };\r\n\r\n    setGridItemStyleChildOverride = (child, newGridItemStyle) => {\r\n        let gridItemStyle = {...newGridItemStyle};\r\n        delete gridItemStyle.gridArea;\r\n        child.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle);\r\n        let styleNode = document.getElementById(child.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(gridItemStyle, child.getGridItemStyleId(), child.getGridItemStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, gridItemStyle, child.getGridItemStyleId());\r\n        }\r\n    };\r\n\r\n    modifyContainerStyleOverride = (container, agl, grid, aglStyle) => {\r\n        let style;\r\n\r\n        style = {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            position: \"relative\"\r\n        };\r\n\r\n        let styleNode = document.getElementById(container.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, container.getContainerStyleId(), container.getContainerStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, style, container.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    onChildLeaveOverride = (agl, child) => {\r\n        agl.removeChildElement(child);\r\n        child.removeIdAndChildrenId();\r\n\r\n        this.setOrder();\r\n\r\n        if (!agl.removing && Object.values(agl.allChildRefs).length === 1) {\r\n            agl.removing = true;\r\n            setTimeout(() => {\r\n                Object.values(agl.allChildRefs)[0] &&\r\n                this.props.dragdrop.dropItem(\r\n                    Object.values(agl.allChildRefs)[0].current,\r\n                    Object.values(agl.allChildRefs)[0].current.props.parent,\r\n                    this.props.parent, undefined, false, 2);\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    stretchChildOverride = (child, item) => {\r\n        if (!item.props.parent)\r\n            return;\r\n\r\n        let stretch = false;\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n\r\n        if (!isStretch(item, true)) {\r\n            stretch = true;\r\n        }\r\n\r\n        gridItemStyle.alignSelf = stretch? \"stretch\": \"center\";\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n        item.setStyleParam(\"width\", \"100%\");\r\n\r\n        if (!stretch) {\r\n            item.setStyleParam(\"width\", \"80%\");\r\n        }\r\n\r\n        item.setGridItemStyle(gridItemStyle);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    isStretchChildOverride = (child, item, log) => {\r\n        if (!item.props.parent)\r\n            return false;\r\n\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n        return !(gridItemStyle.alignSelf !== \"stretch\" ||\r\n            gridItemStyle.marginLeft !== \"0px\" ||\r\n            gridItemStyle.marginRight !== \"0px\");\r\n    };\r\n\r\n    setStyleParamOverride = (agl, param, value, data) => {\r\n        if (param === \"height\" || param === \"minHeight\")\r\n            return;\r\n\r\n        let style = !data? agl.getFromData(\"style\"): agl.getFromData(\"style\", data);\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        agl.setStyle(style, data);\r\n    };\r\n\r\n    onMouseOverSpacer = (e) => {\r\n        this.aglRef.current.onMouseOver(e);\r\n    };\r\n\r\n    onMouseEnterSpacer = (e) => {\r\n        this.aglRef.current.onMouseEnter(e);\r\n    };\r\n\r\n    onMouseOutSpacer = (e) => {\r\n        this.aglRef.current.onMouseOut(e);\r\n    };\r\n\r\n    onChildAdd = () => {\r\n        this.getAgl().removing = false;\r\n    };\r\n\r\n    render() {\r\n        return [\r\n            <AGLWrapper tagName=\"Stack\"\r\n                        key=\"Stack\"\r\n                        aglRef={!this.props.aglRef? this.aglRef: this.aglRef = this.props.aglRef}\r\n                        {...this.props}\r\n                        data={this.getData()}\r\n                        style={{...{\r\n                            height: \"auto\"\r\n                        }, ...this.props.style}}\r\n                        getChildrenOverride={this.getChildrenOverride}\r\n                        isStack={true}\r\n                        resizeSides={['e','w']}\r\n                        onDragStartChildOverride={this.onDragStartChildOverride}\r\n                        onDragChildOverride={this.onDragChildOverride}\r\n                        onDragStopChildOverride={this.onDragStopChildOverride}\r\n                        setGridItemStyleChildOverride={this.setGridItemStyleChildOverride}\r\n                        calculateGridItemChildOverride={this.calculateGridItemChildOverride}\r\n                        calculateChildGridItemOverride={this.calculateChildGridItemOverride}\r\n                        modifyContainerStyleOverride={this.modifyContainerStyleOverride}\r\n                        setMouseOverOverride={this.setMouseOverOverride}\r\n                        setMouseOverForNonDraggingOverride={this.setMouseOverForNonDraggingOverride}\r\n                        stretchChildOverride={this.stretchChildOverride}\r\n                        isStretchChildOverride={this.isStretchChildOverride}\r\n                        lateMountedOverride={this.lateMountedOverride}\r\n                        setStyleParamOverride={this.setStyleParamOverride}\r\n                        onChildLeaveOverride={this.onChildLeaveOverride}\r\n                        onChildAdd={this.onChildAdd}\r\n\r\n            >\r\n            </AGLWrapper>,\r\n            <StackSpacerContainer ref={this.spacerContainerRef} key=\"spacers\"\r\n                                  aglRef={this.aglRef}\r\n                                  document={this.props.document}\r\n            />\r\n        ]\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Divider from \"../Menus/CommonComponents/Divider\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport {LightMenuTooltip} from \"../Components/Containers/Menus/Components/LightTooltip\";\r\nimport {isLeftClick} from \"../AwesomwGridLayoutHelper\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener/ClickAwayListener\";\r\nimport MenuList from \"@material-ui/core/MenuList/MenuList\";\r\n\r\nexport default class ContextMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getFakeAnchor = (clientX, clientY) => {\r\n        return {\r\n            clientWidth: 0,\r\n            clientHeight: 0,\r\n            getBoundingClientRect: () => {\r\n                return {\r\n                    top: clientY,\r\n                    left: clientX,\r\n                    width: 0,\r\n                    height: 0,\r\n                    bottom: clientY,\r\n                    right: clientX\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let {menu, clientX, clientY, popperStyle, onClose} = this.props;\r\n        return (\r\n            <>\r\n                <Popper\r\n                    style={{...{\r\n                            zIndex: 99999999999999\r\n                        }, ...popperStyle}}\r\n                    // anchorReference=\"anchorPosition\"\r\n                    // anchorPosition={\r\n                    //     clientY !== null && clientX !== null\r\n                    //         ? { top: clientY, left: clientX }\r\n                    //         : undefined\r\n                    // }\r\n                    anchorEl={this.getFakeAnchor(clientX, clientY)}\r\n                    open={true}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                    placement=\"bottom-start\"\r\n                >\r\n                    <Paper style={{\r\n                        boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n                    }}>\r\n                        <ClickAwayListener onClickAway={onClose} mouseEvent='onMouseDown'>\r\n                            <MenuList autoFocusItem={true} style={{padding: 0}}\r\n                                      onPointerDown={(e) => {\r\n                                          e.preventDefault();\r\n                                          e.stopPropagation();\r\n                                      }}\r\n                            >\r\n                                {\r\n                                    menu.map((section, i) => {\r\n                                        let hasDivider = (i !== menu.length - 1);\r\n                                        return (\r\n                                            [\r\n                                                section.map((menuItem, j) => {\r\n                                                    return (\r\n                                                        <ContextMenuItem\r\n                                                            key={`${i}${j}`}\r\n                                                            onClose={onClose}\r\n                                                            menuItem={menuItem}\r\n                                                        />\r\n                                                    )\r\n                                                }),\r\n                                                hasDivider && <Divider style={{\r\n                                                    width: \"100%\",\r\n                                                    margin: 0,\r\n                                                    display: \"block\"\r\n                                                }}/>\r\n                                            ]\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                </Popper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport class ContextMenuItem extends React.Component {\r\n    render () {\r\n        let {menuItem, onClose} = this.props;\r\n\r\n        if (!menuItem.subMenu)\r\n            return (\r\n                <MenuItem\r\n                    dense\r\n                    onClick={(e) => {\r\n                        if (menuItem.onClick) {\r\n                            menuItem.onClick(e);\r\n                            onClose && onClose(e);\r\n                        }\r\n                    }}\r\n                    onPointerDown={(e) => {\r\n                        if (!isLeftClick(e)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }\r\n                    }}\r\n                >\r\n                    <span style={{\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"1fr auto\",\r\n                        alignItems: \"center\",\r\n                        width: \"100%\"\r\n                    }}>\r\n                        {menuItem.name}\r\n                        <span style={{\r\n                            fontSize: 10,\r\n                            marginLeft: 24,\r\n                            color: \"#9a9a9a\"\r\n                        }}>\r\n                            {\r\n                                menuItem.shortcut\r\n                            }\r\n                        </span>\r\n                    </span>\r\n                </MenuItem>\r\n            );\r\n        else\r\n            return (\r\n                <LightMenuTooltip\r\n                    title={\r\n                        menuItem.subMenu.map((menuItem, j) => {\r\n                            return (\r\n                                <ContextMenuItem\r\n                                    key={`${j}`}\r\n                                    onClose={onClose}\r\n                                    menuItem={menuItem}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    interactive\r\n                    placement=\"right\"\r\n                    leaveDelay={200}\r\n                    PopperProps={{\r\n                        style: {\r\n                            zIndex: 99999999999999,\r\n                        },\r\n                        modifiers:{\r\n                            flip: {\r\n                                enabled: true,\r\n                            },\r\n                            preventOverflow: {\r\n                                enabled: true,\r\n                                boundariesElement: 'viewport',\r\n                            },\r\n                        }}\r\n                    }\r\n                >\r\n                    <MenuItem\r\n                        dense\r\n                        onPointerDown={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation()\r\n                        }}\r\n                    >\r\n                        <span style={{\r\n                            display: \"grid\",\r\n                            gridTemplateColumns: \"1fr auto\",\r\n                            alignItems: \"center\",\r\n                            width: \"100%\"\r\n                        }}>\r\n                            {menuItem.name}\r\n                            <img draggable={false} width={8} height={8}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/right-arrow.svg'}\r\n                                style={{\r\n                                    marginLeft: 24,\r\n                                    color: \"#9a9a9a\"\r\n                                }}\r\n                            />\r\n                    </span>\r\n                    </MenuItem>\r\n                </LightMenuTooltip>\r\n            )\r\n    }\r\n}\r\n\r\n/*\r\n* Structure of input menu object\r\n* [\r\n*   [ // each section has one array\r\n    *   {\r\n    *       name: \"delete\",\r\n    *       onClick: function,\r\n    *       icon: <img ... />\r\n    *       shortcut: \"Ctrl + D\"\r\n    *       subMenu: {other Menu}\r\n    *   }\r\n*   ]\r\n* ]\r\n* */\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {isLeftClick} from \"./AwesomwGridLayoutHelper\";\r\n\r\nexport default class SelectManager {\r\n    constructor() {\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            this.ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n        });\r\n        window.addEventListener(\"keyup\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            if (key === 17) {\r\n                this.ctrl = false;\r\n            }\r\n        });\r\n\r\n        this.ctrl = false;\r\n        this.shift = false;\r\n        this.alt = false;\r\n\r\n        this.mouseDown = 0;\r\n        window.addEventListener(\"mousedown\",(e) =>{\r\n            if (isLeftClick(e))\r\n                this.mouseDown = 1;\r\n        });\r\n        window.addEventListener(\"mouseup\",(e) =>{\r\n            if (isLeftClick(e) && this.mouseDown > 0)\r\n                this.mouseDown = 0;\r\n        });\r\n    }\r\n}\r\n","import {throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport {\r\n    createStack,\r\n    getSectionId,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport ContainerBase from \"./Components/Containers/ContainerBase\";\r\nimport React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport throttle from \"lodash.throttle\";\r\nimport Text from \"./Components/Text/Text\";\r\n\r\nexport default class SelectManager {\r\n    constructor(inputManager, groupSelectRef, pageAglRef, miniMenuHolderRef,\r\n                inspectorRef, resizeRef, helpLinesRef, hoverRef) {\r\n        this.inputManager = inputManager;\r\n        this.groupSelectRef = groupSelectRef;\r\n        this.pageAglRef = pageAglRef;\r\n        this.miniMenuHolderRef = miniMenuHolderRef;\r\n        this.inspectorRef = inspectorRef;\r\n        this.resizeRef = resizeRef;\r\n        this.helpLinesRef = helpLinesRef;\r\n        this.hoverRef = hoverRef;\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 71 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + G\");\r\n                this.editGrid();\r\n            }\r\n            if ( key === 49 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 1\");\r\n                this.test1();\r\n            }\r\n            if ( key === 50 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 2\");\r\n                this.test2();\r\n            }\r\n            if ( key === 51 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 3\");\r\n                this.test3();\r\n            }\r\n        });\r\n    }\r\n\r\n    setContext = (editorContext) => {\r\n        this.context = editorContext;\r\n    }\r\n\r\n    getPageOverflowRef = () => {\r\n        if (this.pageAglRef.current)\r\n            return this.pageAglRef.current.overflowRef.current;\r\n    };\r\n\r\n    editGrid = (item) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        } else if (!item){\r\n            item = this.getSelected();\r\n        }\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.editGrid();\r\n    };\r\n\r\n    selectItem = (item, clicked, dontUpdateAdjustments) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        }\r\n\r\n        if (this.inputManager.ctrl && clicked && getSectionId(this.selectedItem) === getSectionId(item)) {\r\n            this.createGroup(item);\r\n            return;\r\n        } else if (this.inputManager.ctrl){\r\n            // TODO can notify to user that can't select multiple item from different section\r\n            this.clearGroup();\r\n        } else {\r\n            this.clearGroup();\r\n        }\r\n\r\n        if (this.selectedItem.props.id !== item.props.id){\r\n            this.selectedItem.onSelect(false, undefined, true);\r\n        }\r\n\r\n        if (!dontUpdateAdjustments) {\r\n            if (this.selectedItem.props.id !== item.props.id){\r\n                this.updateMenu();\r\n            }\r\n\r\n            this.updateMiniMenu(item);\r\n            this.setInspector(\r\n                item.props.getInspector()\r\n            );\r\n            this.updateResizePanes(item, item.getSize(false));\r\n        }\r\n\r\n        this.selectedItem = item;\r\n    };\r\n\r\n    clearMiniMenu = () => {\r\n        this.miniMenuHolderRef.current.clearMiniMenu();\r\n    };\r\n\r\n    onContextMenu = (e, item) => {\r\n        this.miniMenuHolderRef.current.onContextMenu(e, item);\r\n    };\r\n\r\n    updateMiniMenu = (item) => {\r\n        if(!item)\r\n            item = this.getSelected();\r\n\r\n        if (item && item.hasMiniMenu())\r\n            this.miniMenuHolderRef.current.addMiniMenu(item);\r\n        else\r\n            this.clearMiniMenu();\r\n    };\r\n\r\n    updateMenu = (menu) => {\r\n        this.miniMenuHolderRef.current.addMenu(menu);\r\n    };\r\n\r\n    setInspector = (inspectorMenu) => {\r\n        this.inspectorRef.current.setMenu(inspectorMenu);\r\n    };\r\n\r\n    clearGroup = () => {\r\n        if (!this.group)\r\n            return;\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: false,\r\n                groupDragStart: undefined,\r\n                groupDrag: undefined,\r\n                groupDragStop: undefined,\r\n            });\r\n            item.onSelect(false, undefined, true);\r\n        });\r\n\r\n        this.group = undefined;\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    createGroup = (item) => {\r\n        let selectedItem = this.selectedItem;\r\n        this.selectedItem = undefined;\r\n\r\n        if (!this.group) {\r\n            this.group = [];\r\n            selectedItem && this.group.push(selectedItem);\r\n        }\r\n\r\n        item && this.group.push(item);\r\n\r\n        this.updateResizePanes();\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: true,\r\n                groupDragStart: this.groupDragStart,\r\n                groupDrag: this.groupDrag,\r\n                groupDragStop: this.groupDragStop,\r\n            });\r\n        });\r\n\r\n        this.updateGroupRect();\r\n        this.clearMiniMenu();\r\n        this.updateMenu();\r\n    };\r\n\r\n    groupDragStart = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStart(e, true);\r\n        });\r\n    };\r\n\r\n    groupDrag = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDrag(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    groupDragStop = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStop(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    deleteGroup = () => {\r\n        if (!this.group) {\r\n            return;\r\n        }\r\n\r\n        this.group.forEach(item => {\r\n            item.delete();\r\n        });\r\n\r\n        this.clearGroup();\r\n    };\r\n\r\n    updateGroupRect = () => {\r\n        if (!this.group) {\r\n            this.groupSelectRef.current && this.groupSelectRef.current.updateRect();\r\n            return;\r\n        }\r\n\r\n        let firstRect = this.group[0].getSize(false, true);\r\n        let top = firstRect.top;\r\n        let left = firstRect.left;\r\n        let bottom = window.innerHeight - firstRect.top - firstRect.height;\r\n        let right =  window.innerWidth - firstRect.left - firstRect.width;\r\n\r\n        this.group.slice(1, this.group.length).forEach(item => {\r\n            let rect = item.getSize(false, true);\r\n            top = Math.min(top, rect.top);\r\n            left = Math.min(left, rect.left);\r\n            bottom = Math.min(bottom, window.innerHeight - rect.top - rect.height);\r\n            right = Math.min(right, window.innerWidth - rect.left - rect.width);\r\n        });\r\n\r\n        this.groupSelectRef.current.updateRect({\r\n            top, left, bottom, right\r\n        }, this.group);\r\n    };\r\n\r\n    getSelected = () => {\r\n        return this.selectedItem;\r\n    };\r\n\r\n    updateParentsRect = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects(true, true);\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects(true, true);\r\n    }, 40);\r\n\r\n    isEditor = () => {\r\n        return !this.context.preview;\r\n    }\r\n\r\n    // change grid line positions and resize panes\r\n    onScrollItem = throttleDebounce(() => {\r\n        if (!this.isEditor())\r\n            return;\r\n\r\n        this.updateGroupRect();\r\n\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects();\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects();\r\n\r\n        let size = item.getSize(false, true);\r\n        item.updateGridLines(\r\n            size.top, size.left,\r\n            window.innerHeight - size.top - size.height,\r\n            window.innerWidth - size.left - size.width,\r\n            \"A\"\r\n        );\r\n        item.updateGridEditor();\r\n        this.updateMiniMenu();\r\n        this.updateResizePanes(item, size);\r\n\r\n        this.updateHelpSizeLines(item, item.state.helpLinesParent, size, item.state.dragging,\r\n            item.getBoundarySize(true));\r\n        this.updateHover(item, size);\r\n    }, 50);\r\n\r\n    // updateSize\r\n    updateSize = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        let size = item.getSize(true, true);\r\n\r\n        this.updateResizePanes(item, size);\r\n    }, 100);\r\n\r\n    updateResizePanes = (item, data) => {\r\n        this.resizeRef.current.update(item, data, item && item.getTransformStyleId());\r\n    };\r\n\r\n    updateHelpLines = throttle((item, helpLineParent, itemRect, dragging) => {\r\n        this.updateHelpSizeLines(item, helpLineParent, itemRect, dragging,\r\n            item.getBoundarySize());\r\n    }, 50);\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        if (this.helpLinesRef.current)\r\n            return this.helpLinesRef.current.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    updateHover = (item, size, clear) => {\r\n        this.hoverRef.current.update(item, size, clear);\r\n    };\r\n\r\n    activateHover = (active) => {\r\n        this.hoverRef.current.activate(active);\r\n    };\r\n\r\n    activateResize = (active) => {\r\n        this.resizeRef.current.activate(active);\r\n    };\r\n\r\n    updateHelpSizeLines = (item, helpLineParent, itemRect, dragging, fakeItemRect) => {\r\n        if (this.helpLinesRef.current)\r\n            this.helpLinesRef.current.update(item, helpLineParent, itemRect, dragging, fakeItemRect);\r\n    };\r\n\r\n    test1 = () => {\r\n        createStack(this.group);\r\n    };\r\n\r\n    test2 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        let child =\r\n            <Text\r\n                style={{\r\n                    width: \"50%\",\r\n                    height: \"auto\"\r\n                }}\r\n                data={{\r\n                    textStaticData: {\r\n                        textValue: \"Normal Text\"\r\n                    },\r\n                    bpData: {\r\n                        design: {\r\n                            textDesignData: {\r\n                                textTheme: \"Heading 6\"\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />;\r\n\r\n        item.addChild(child, undefined, undefined, undefined, (agl) => {\r\n        }, undefined, true);\r\n    };\r\n\r\n    test3 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        item.playAnimation();\r\n    };\r\n}\r\n","export default class SnapManager {\r\n    constructor (snapThreshold, snapSvgRef) {\r\n        this.snaps = {};\r\n        this.snapThreshold = snapThreshold || 10;\r\n        this.snapSvgRef = snapSvgRef;\r\n    }\r\n\r\n    addSnap = (id, horizontals = [], verticals = [], parentsId) => {\r\n        this.snaps[id] = {\r\n            horizontals, verticals, id, parentsId\r\n        };\r\n    };\r\n\r\n    removeSnap = (id) => {\r\n        delete this.snaps[id];\r\n    };\r\n\r\n    checkSnap = (top, left, ignoreId, additionalSnaps = []) => {\r\n        let snapH, snapV;\r\n        let topUp = top + this.snapThreshold;\r\n        let topDown = top - this.snapThreshold;\r\n        let leftUp = left + this.snapThreshold;\r\n        let leftDown = left - this.snapThreshold;\r\n\r\n        let snaps = Object.values(this.snaps);\r\n        snaps = snaps.concat(additionalSnaps);\r\n\r\n        for (let i = 0; i < snaps.length; i++) {\r\n            let snap = snaps[i];\r\n            if (!snap)\r\n                continue;\r\n\r\n            if (snap.id === ignoreId)\r\n                continue;\r\n            if (snap.parentsId && snap.parentsId.includes(ignoreId))\r\n                continue;\r\n\r\n            if (!snapH){\r\n                for (let h = 0; h < snap.horizontals.length; h++) {\r\n                    let horizontal = snap.horizontals[h];\r\n                    if (!horizontal)\r\n                        continue;\r\n                    if (horizontal.value <= topUp && horizontal.value >= topDown) {\r\n                        snapH = horizontal;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!snapV) {\r\n                for (let v = 0; v < snap.verticals.length; v++) {\r\n                    let vertical = snap.verticals[v];\r\n                    if (!vertical)\r\n                        continue;\r\n                    if (vertical.value <= leftUp && vertical.value >= leftDown) {\r\n                        snapV = vertical;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (snapH && snapV)\r\n                break;\r\n        }\r\n\r\n        return {snapH, snapV};\r\n    }\r\n\r\n    drawSnap = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.snapSvgRef.current.update(snapH, snapV, pointOfSnapH, pointOfSnapV)\r\n    }\r\n}\r\n","import {createItem} from \"./AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport throttle from \"lodash.throttle\";\r\n\r\nexport default class CopyManager {\r\n    constructor(selectManager, pageRef, dragdrop) {\r\n        this.selectManager = selectManager;\r\n        this.pageRef = pageRef;\r\n        this.dragdrop = dragdrop;\r\n\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 86 && ctrl ) {\r\n                console.log(\"ctrl + V\");\r\n                this.paste();\r\n            } else if ( key === 67 && ctrl ) {\r\n                console.log(\"ctrl + C\");\r\n                this.copy();\r\n            } else if ( key === 68 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + D\");\r\n                this.duplicate();\r\n            } else if ( key === 46 ) {\r\n                console.log(\"delete\");\r\n                this.delete();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    copy = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copyItem = item;\r\n    };\r\n\r\n    getCopyItem = () => {\r\n        return this.copyItem;\r\n    };\r\n\r\n    paste = throttle((selectedItem) => {\r\n        if (!this.copyItem)\r\n            return;\r\n        let destinationItem;\r\n        if (!selectedItem)\r\n            selectedItem = this.selectManager.getSelected() || this.pageRef.current;\r\n\r\n        while (!destinationItem)  {\r\n            if (selectedItem.getFromTempData(\"isContainer\")) {\r\n                destinationItem = selectedItem;\r\n            } else {\r\n                selectedItem = selectedItem.props.parent;\r\n            }\r\n        }\r\n\r\n        let style = cloneObject(this.getCopyItem().getFromData(\"style\"));\r\n        let gridItemStyle = cloneObject(this.getCopyItem().getFromData(\"gridItemStyle\"));\r\n        let copyRect = this.getCopyItem().getSize(false);\r\n        let parentRect = destinationItem.getSize(false);\r\n        if (destinationItem === this.getCopyItem().props.parent) {\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginLeft =\r\n                    (parseFloat(gridItemStyle.marginLeft.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginTop =\r\n                    (parseFloat(gridItemStyle.marginTop.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginRight)\r\n                gridItemStyle.marginRight =\r\n                    (parseFloat(gridItemStyle.marginRight.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginBottom)\r\n                gridItemStyle.marginBottom =\r\n                    (parseFloat(gridItemStyle.marginBottom.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n\r\n            if (!gridItemStyle.marginLeft && !gridItemStyle.marginRight)\r\n                gridItemStyle.marginLeft = \"20px\";\r\n            if (!gridItemStyle.marginTop && !gridItemStyle.marginBottom)\r\n                gridItemStyle.marginTop = \"20px\";\r\n        } else {\r\n            delete gridItemStyle.marginLeft;\r\n            delete gridItemStyle.marginTop;\r\n            delete gridItemStyle.marginRight;\r\n            delete gridItemStyle.marginBottom;\r\n\r\n            gridItemStyle.justifySelf = \"center\";\r\n            gridItemStyle.alignSelf = \"center\";\r\n\r\n            if (style.width.toString().includes(\"%\")) {\r\n                style.width = (copyRect.width / parentRect.width * 100).toString() + \"%\";\r\n            }\r\n            if (style.height.toString().includes(\"%\")) {\r\n                style.height = (copyRect.height / parentRect.height * 100).toString() + \"%\";\r\n            }\r\n        }\r\n\r\n        createItem(destinationItem, {\r\n            props: this.getCopyItem().props,\r\n            tagName: this.getCopyItem().props.tagName\r\n        }, undefined, gridItemStyle, style);\r\n    }, 200);\r\n\r\n    duplicate = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copy(item);\r\n        this.paste(item.props.parent);\r\n        this.copyItem = false;\r\n    };\r\n\r\n    delete = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item && !this.selectManager.group)\r\n            return;\r\n\r\n        this.selectManager.deleteGroup();\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.delete();\r\n    };\r\n}\r\n","export default class IdManager {\r\n    constructor(prefix) {\r\n        this.prefix = prefix + '_';\r\n        this.allId = {};\r\n    }\r\n\r\n    clear = () => {\r\n        this.allId = {};\r\n    };\r\n\r\n    getId = (preferName, fixName) => {\r\n        let result;\r\n        let baseId = !fixName? this.prefix + preferName: fixName;\r\n        let id = baseId;\r\n        let postNo = 1;\r\n        while (!result) {\r\n            if (this.allId[id]) {\r\n                id = baseId + \"_\" + postNo;\r\n                postNo++;\r\n            } else {\r\n                result = id;\r\n            }\r\n        }\r\n\r\n        this.allId[id] = true;\r\n\r\n        return result;\r\n    };\r\n\r\n    setItem = (id, item) => {\r\n        this.allId[id] = item;\r\n    };\r\n\r\n    // return agl reference\r\n    getItem = (id) => {\r\n        return this.allId[id];\r\n    };\r\n\r\n    removeId = (id) => {\r\n        delete this.allId[id];\r\n    };\r\n}\r\n","import throttle from 'lodash.throttle';\r\n\r\nexport default class UndoRedo {\r\n    constructor(max, document, idMan) {\r\n        this.undoQueue = [];\r\n        this.redoQueue = [];\r\n        this.max = max || 20;\r\n        this.idMan = idMan;\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'z') {\r\n                this.undo();\r\n            }\r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'Z') {\r\n                this.redo();\r\n            }\r\n        });\r\n    }\r\n\r\n    getQueueObject = (func, undo, power) => {\r\n        return {\r\n            redo: func,\r\n            undo: undo,\r\n            power: (typeof power === 'number') ? power : undefined\r\n        }\r\n    };\r\n\r\n    add = (func, undo, power) => {\r\n        this.undoQueue.unshift(this.getQueueObject(func, undo, power));\r\n        if (this.undoQueue.length > this.max)\r\n            this.undoQueue.pop();\r\n        this.redoQueue = [];\r\n    };\r\n\r\n    undo = throttle(() => {\r\n        this.undoFunc();\r\n    }, 200);\r\n\r\n    undoFunc = () => {\r\n        if (this.undoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.undoQueue.shift();\r\n        let power = object.power || 1;\r\n\r\n        power--;\r\n        object.undo(this.idMan);\r\n        this.redoQueue.unshift(object);\r\n\r\n        while (power > 0) {\r\n            power--;\r\n            this.undoFunc();\r\n        }\r\n    };\r\n\r\n    hasUndo = () => {\r\n        return this.undoQueue.length > 0;\r\n    };\r\n\r\n    redo = throttle(() => {\r\n        if (this.redoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.redoQueue.shift();\r\n        object.redo(this.idMan);\r\n        this.undoQueue.unshift(object);\r\n    }, 100);\r\n\r\n    hasRedo = () => {\r\n        return this.redoQueue.length > 0;\r\n    };\r\n};\r\n","export default class GridLineManager {\r\n    constructor(gridContainerRef) {\r\n        this.gridContainerRef = gridContainerRef;\r\n    }\r\n\r\n    addGrid = (id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.gridContainerRef.current.addGrid(id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.gridContainerRef.current.getIdCache(gridType);\r\n    };\r\n\r\n    getXlineRef = (id) => {\r\n        return this.gridContainerRef.current.getXlineRef(id);\r\n    };\r\n\r\n    getYlineRef = (id) => {\r\n        return this.gridContainerRef.current.getYlineRef(id);\r\n    };\r\n\r\n    removeGridLine = (id) => {\r\n        this.gridContainerRef.current.removeGridLine(id);\r\n    };\r\n\r\n    removeGridLineByType = (type) => {\r\n        this.gridContainerRef.current.removeGridLineByType(type);\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        this.gridContainerRef.current.prepareRects(id);\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (this.gridContainerRef.current)\r\n            return this.gridContainerRef.current.hasGridLine(id, gridType);\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.gridContainerRef.current)\r\n            return this.gridContainerRef.current.isPrepared(id);\r\n    };\r\n}\r\n","import {v4 as uuidv4} from 'uuid';\r\nimport { goToAnchor } from 'react-scrollable-anchor'\r\n\r\nexport default class AnchorManager {\r\n    constructor(siteData) {\r\n        // TODO init all anchors\r\n        this.allAnchors = {};\r\n    }\r\n\r\n    addAnchor = (name, item) => {\r\n        let pageId = item.props.viewRef.current.props.pageId;\r\n        let id = uuidv4();\r\n        this.allAnchors[id] = {pageId, name, id};\r\n        item.setAnchor(this.allAnchors[id]);\r\n    };\r\n\r\n    modifyAnchor = (id, newName, item) => {\r\n        let anchor = this.allAnchors[id];\r\n        if (!anchor) {\r\n            this.addAnchor(newName, item);\r\n            return;\r\n        }\r\n\r\n        anchor.name = newName;\r\n\r\n        item.setAnchor(anchor);\r\n    };\r\n\r\n    removeAnchor = (id, item) => {\r\n        delete this.allAnchors[id];\r\n        item.setAnchor();\r\n    };\r\n\r\n    goToAnchor = (id, saveToHistory) => {\r\n        goToAnchor(id, saveToHistory);\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentGridRoot extends React.PureComponent {\r\n    render () {\r\n        let {top, left, bottom, right} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridRoot\"\r\n                className=\"AdjustmentGridRoot\"\r\n                style={{top, left, bottom, right}}\r\n            >\r\n                {\r\n                    this.props.children\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentGridRow extends React.Component {\r\n    // TODO BUG: first and last grid line is not provided, fix the bug\r\n    render () {\r\n        let {gridLineManager, itemId, grid} = this.props;\r\n        let rowLines = gridLineManager.getYlineRef(itemId);\r\n        return (\r\n            <div\r\n                className=\"AdjustmentGridRowEditor\"\r\n            >\r\n                {\r\n                    new Array(grid.x).fill(0).map((x, index) => {\r\n                        let rowLine = rowLines[index];\r\n                        let rowLineRect = rowLine.current.rect;\r\n                        let nextRowLineRect = rowLines[index + 1].current.rect;\r\n                        let rowHeight = grid.gridTemplateRows.split(' ')[index];\r\n                        let classes = classNames(\r\n                            \"AdjustmentGridRowEditorItem\",\r\n                            index === 0 && \"AdjustmentGridRowEditorItemTop\",\r\n                            index === grid.x - 1 && \"AdjustmentGridRowEditorItemBottom\",\r\n                        );\r\n                        return(\r\n                                <div\r\n                                    key={`row_${index}`}\r\n                                    className={classes}\r\n                                    style={{\r\n                                        height: nextRowLineRect.top - rowLineRect.top,\r\n                                    }}\r\n                                >\r\n                                    <p style={{\r\n                                        margin: 0,\r\n                                        fontWeight: \"bold\"\r\n                                    }}>\r\n                                        {rowHeight}\r\n                                    </p>\r\n                                </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentGridRoot from \"./AdjustmentGridRoot\";\r\nimport AdjustmentGridRow from \"./AdjustmentGridRow\";\r\n\r\nexport default class AdjustmentGrid extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item: undefined,\r\n            grid: undefined,\r\n            gridLineManager: undefined\r\n        };\r\n    }\r\n\r\n    editing = (item) => {\r\n        let grid = item.getFromData(\"grid\");\r\n        let gridLineManager = item.props.gridLine;\r\n        this.setState({item, grid, gridLineManager});\r\n    };\r\n\r\n    update = (item) => {\r\n        if (item === item)\r\n            this.forceUpdate();\r\n    };\r\n\r\n    addRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        if (grid.x === 100)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        grid.x++;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 0, \"minmax(100px,max-content)\");\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    addColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 100)\r\n            return;\r\n\r\n        grid.y++;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 0, \"1fr\");\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeColumnWidth = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1, newValue);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeRowHeight = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1, newValue);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.x === 1)\r\n            return;\r\n\r\n        grid.x--;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 1)\r\n            return;\r\n\r\n        grid.y--;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    render () {\r\n        let {gridLineManager, item, grid} = this.state;\r\n        if (!item)\r\n            return null;\r\n\r\n        let positions = gridLineManager.getIdCache(\"A\").positions;\r\n        return (\r\n            <AdjustmentGridRoot\r\n                top={positions.top}\r\n                left={positions.left}\r\n                bottom={positions.bottom}\r\n                right={positions.right}\r\n            >\r\n                <AdjustmentGridRow\r\n                    gridLineManager={gridLineManager}\r\n                    itemId={item.props.id}\r\n                    grid={grid}\r\n                />\r\n            </AdjustmentGridRoot>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentSnapLines extends React.Component {\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.props;\r\n        if (!snapH && !snapV)\r\n            return null;\r\n\r\n        if (snapH) {\r\n            return (\r\n                <line\r\n                    x1={Math.min(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    x2={Math.max(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    y1={snapH.value}\r\n                    y2={snapH.value}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <line\r\n                    x1={snapV.value}\r\n                    x2={snapV.value}\r\n                    y1={Math.min(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    y2={Math.max(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\n\r\nexport default class AdjustmentSnap extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    update = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.setState({\r\n            snapH, snapV, pointOfSnapH, pointOfSnapV\r\n        });\r\n    };\r\n\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.state;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentSnapLinesRoot\"\r\n            >\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    <AdjustmentSnapLines\r\n                        snapH={snapH}\r\n                        pointOfSnapH={pointOfSnapH}\r\n                    />\r\n                    <AdjustmentSnapLines\r\n                        snapV={snapV}\r\n                        pointOfSnapV={pointOfSnapV}\r\n                    />\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class GridLine extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render () {\r\n        let {id, lineRef, style} = this.props;\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                id={id}\r\n                ref={lineRef}\r\n                style={style}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\nimport Portal from \"@material-ui/core/Portal/Portal\";\r\nimport GridLine from \"./GridLine\";\r\n\r\nexport default class AdjustmentGridLinesWrapper2 extends React.PureComponent {\r\n    needUpdate = throttleDebounce(() => {\r\n        this.forceUpdate();\r\n    }, 100);\r\n\r\n    render () {\r\n        let {yNo, xNo, yLineRef, xLineRef, refId} = this.props;\r\n\r\n        if (yNo >= 0 && xNo >= 0 && !document.getElementById(`${refId}_container`))\r\n            this.needUpdate();\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    new Array(yNo + 1).fill(0).map((y, index) => {\r\n                        if (index === 0 || index === yNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesY\"\r\n                                id={`y_${index}_${refId}`}\r\n                                lineRef={yLineRef[index]}\r\n                                style={{\r\n                                    top: index === yNo ? \"unset\" : 0,\r\n                                    bottom: index === yNo ? 0 : \"unset\",\r\n                                    gridArea: `${index + 1}/1/${index + 1}/${xNo + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n                {\r\n                    new Array(xNo + 1).fill(0).map((x, index) => {\r\n                        if (index === 0 || index === xNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesX\"\r\n                                id={`x_${index}_${refId}`}\r\n                                lineRef={xLineRef[index]}\r\n                                style={{\r\n                                    left: index === xNo? \"unset\": 0,\r\n                                    right: index === xNo? 0: \"unset\",\r\n                                    gridArea: `1/${index + 1}/${yNo + 1}/${index + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {getCachedBoundingRect} from \"../Test/WindowCache\";\r\nimport AdjustmentGridLinesWrapper2 from \"./AdjustmentGridLinesWrapper2\";\r\n\r\nexport default class AdjustmentGridLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xNoA: -1,\r\n            yNoA: -1,\r\n            xNoB: -1,\r\n            yNoB: -1,\r\n            xNoT: -1,\r\n            yNoT: -1,\r\n        };\r\n\r\n        this.xLineRefA = new Array(100);\r\n        this.yLineRefA = new Array(100);\r\n        this.xLineRefB = new Array(100);\r\n        this.yLineRefB = new Array(100);\r\n        this.xLineRefT = new Array(100);\r\n        this.yLineRefT = new Array(100);\r\n\r\n        this.idCache = {};\r\n    }\r\n\r\n    fixLineRef = (x, y, gridType) => {\r\n        for (let i = 0; i <= x; i++) {\r\n            if (!this[`xLineRef${gridType}`][i])\r\n                this[`xLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n        for (let i = 0; i <= y; i++) {\r\n            if (!this[`yLineRef${gridType}`][i])\r\n                this[`yLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n    };\r\n\r\n    addGrid = (id, y, x, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.fixLineRef(x, y, gridType);\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id && gridType === \"A\") {\r\n            this.updateGridLine(id, \"A\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id && gridType === \"B\") {\r\n            this.updateGridLine(id, \"B\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id && gridType === \"T\") {\r\n            this.updateGridLine(id, \"T\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else {\r\n            this.idCache[gridType] = {id, gridTemplateRows, gridTemplateColumns, positions, x, y};\r\n\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, () => {\r\n                // this.prepareRects(id);\r\n                if (callback)\r\n                    callback();\r\n            })\r\n        }\r\n    };\r\n\r\n    updateGridLine = (id, gridType, {gridTemplateRows, gridTemplateColumns, positions, x, y} = {}, callback) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        gridTemplateRows && (this.idCache[gridType].gridTemplateRows = gridTemplateRows);\r\n        gridTemplateColumns && (this.idCache[gridType].gridTemplateColumns = gridTemplateColumns);\r\n        positions && (this.idCache[gridType].positions = positions);\r\n        x && (this.idCache[gridType].x = x);\r\n        y && (this.idCache[gridType].y = y);\r\n\r\n        if (!x && !y) {\r\n            this.setState({reload: true}, callback);\r\n            return;\r\n        }\r\n\r\n        if (x || y)\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.idCache[gridType];\r\n    };\r\n\r\n    getXlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        return this[`xLineRef${gridType}`].slice(0, this.idCache[gridType].x + 1);\r\n    };\r\n\r\n    getYlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        return this[`yLineRef${gridType}`].slice(0, this.idCache[gridType].y + 1);\r\n    };\r\n\r\n    removeGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                return \"A\";\r\n\r\n            if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                return \"B\";\r\n\r\n            if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                return \"T\";\r\n        } else {\r\n            if (this.idCache[gridType] && this.idCache[gridType].id === id)\r\n                return gridType;\r\n        }\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].prepared)\r\n            return true;\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        let xLineRef = this.getXlineRef(id);\r\n        if (xLineRef)\r\n            for(let i = 0; i < xLineRef.length; i++) {\r\n                let current = xLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`xLineRef_${i}_${id}`, current);\r\n            }\r\n        let yLineRef = this.getYlineRef(id);\r\n        if (yLineRef)\r\n            for(let i = 0; i < yLineRef.length; i++) {\r\n                let current = yLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`yLineRef_${i}_${id}`, current);\r\n            }\r\n\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n            this.idCache[\"A\"].prepared = true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n            this.idCache[\"B\"].prepared = true;\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n            this.idCache[\"T\"].prepared = true;\r\n    };\r\n\r\n    removeGridLineByType = (gridType) => {\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridLinesRoot\"\r\n                className=\"AdjustmentGridLinesRoot\"\r\n            >\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_A\"}\r\n                    refId={this.idCache[\"A\"] && this.idCache[\"A\"].id}\r\n                    xNo={this.state.xNoA}\r\n                    yNo={this.state.yNoA}\r\n                    xLineRef={this.xLineRefA}\r\n                    yLineRef={this.yLineRefA}\r\n                    gridTemplateRows={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateColumns}\r\n                    top={this.idCache[\"A\"] && this.idCache[\"A\"].positions.top}\r\n                    bottom={this.idCache[\"A\"] && this.idCache[\"A\"].positions.bottom}\r\n                    left={this.idCache[\"A\"] && this.idCache[\"A\"].positions.left}\r\n                    right={this.idCache[\"A\"] && this.idCache[\"A\"].positions.right}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_B\"}\r\n                    refId={this.idCache[\"B\"] && this.idCache[\"B\"].id}\r\n                    xNo={this.state.xNoB}\r\n                    yNo={this.state.yNoB}\r\n                    xLineRef={this.xLineRefB}\r\n                    yLineRef={this.yLineRefB}\r\n                    gridTemplateRows={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateColumns}\r\n                    top={this.idCache[\"B\"] && this.idCache[\"B\"].positions.top}\r\n                    bottom={this.idCache[\"B\"] && this.idCache[\"B\"].positions.bottom}\r\n                    left={this.idCache[\"B\"] && this.idCache[\"B\"].positions.left}\r\n                    right={this.idCache[\"B\"] && this.idCache[\"B\"].positions.right}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_T\"}\r\n                    refId={this.idCache[\"T\"] && this.idCache[\"T\"].id}\r\n                    xNo={this.state.xNoT}\r\n                    yNo={this.state.yNoT}\r\n                    xLineRef={this.xLineRefT}\r\n                    yLineRef={this.yLineRefT}\r\n                    gridTemplateRows={this.idCache[\"T\"] && this.idCache[\"T\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"T\"] && this.idCache[\"T\"].gridTemplateColumns}\r\n                    top={this.idCache[\"T\"] && this.idCache[\"T\"].positions.top}\r\n                    bottom={this.idCache[\"T\"] && this.idCache[\"T\"].positions.bottom}\r\n                    left={this.idCache[\"T\"] && this.idCache[\"T\"].positions.left}\r\n                    right={this.idCache[\"T\"] && this.idCache[\"T\"].positions.right}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ResizePane extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane`,\r\n            this.props.enabled && `Adjustment-${this.props.side}-pane-circle`,\r\n            `Adjustment-${this.props.side}-pane-line`,\r\n            {\"Adjustment-CornerCircle\": this.props.enabled && this.isCorner()},\r\n            \"Adjustment-Pane\",\r\n            !this.props.enabled && \"ResizePanePointerNone\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.props.enabled ? this.onMouseDown : undefined}\r\n                className={classes}\r\n                style={{...style, ...this.props.style}}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport {cloneObject} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentGroupRect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rect: undefined,\r\n            group: undefined,\r\n            draggingStart: false\r\n        }\r\n    }\r\n\r\n    updateRect = (rect, group) => {\r\n        this.setState({rect, group});\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n        this.resizing = true;\r\n\r\n        this.setState({draggingStart: true});\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStart(e, dir, delta, true);\r\n        });\r\n\r\n        let {rect} = this.state;\r\n        this.resizeData = {\r\n            firstX: window.innerWidth - rect.left - rect.right,\r\n            firstY: window.innerHeight - rect.top - rect.bottom,\r\n            firstTop: rect.top,\r\n            firstLeft: rect.left,\r\n        };\r\n    };\r\n\r\n    onResize = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResize(e, dir, delta, true);\r\n        });\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n        delete rect.height;\r\n        delete rect.width;\r\n\r\n        let deltaY = delta.y;\r\n        let deltaX = delta.x;\r\n        if (dir.includes('n')) {\r\n            if (this.resizeData.firstY <= deltaY)\r\n                deltaY = this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY - deltaY;\r\n            rect.top = this.resizeData.firstTop + deltaY;\r\n        }\r\n        if (dir.includes('s')) {\r\n            if (this.resizeData.firstY <= -deltaY)\r\n                deltaY = -this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY + deltaY;\r\n        }\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= -deltaX)\r\n                deltaX = -this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX + deltaX;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= deltaX)\r\n                deltaX = this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX - deltaX;\r\n            rect.left = this.resizeData.firstLeft + deltaX;\r\n        }\r\n\r\n        if (rect.height)\r\n            rect.bottom = window.innerWidth - rect.top - rect.height;\r\n        if (rect.width)\r\n        rect.right = window.innerWidth - rect.left - rect.width;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStop(e, dir, delta, true);\r\n        });\r\n\r\n        this.resizing = false;\r\n\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStart(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let {rect} = this.state;\r\n\r\n        this.dragData = {\r\n            x: rect.left,\r\n            y: rect.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDrag(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let deltaX = (e.clientX - this.dragData.lastMouseX);\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.x += deltaX;\r\n        this.dragData.y += deltaY;\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n\r\n        rect.top = this.dragData.y;\r\n        rect.left = this.dragData.x;\r\n        rect.right -= deltaX;\r\n        rect.bottom -= deltaY;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStop(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    render () {\r\n        let {rect} = this.state;\r\n        if (!rect)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGroupRect\"\r\n                style={rect}\r\n                className=\"AdjustmentResizeRoot\"\r\n            >\r\n                {\r\n                    ['n','s','e','w','ne','nw','se','sw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.onResizeStart}\r\n                            onResize={this.onResize}\r\n                            onResizeStop={this.onResizeStop}\r\n                            draggingStart={this.state.draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n\r\n                {/*<AdjustmentMove*/}\r\n                    {/*key={`${this.props.id}_move`}*/}\r\n                    {/*onDragStart={this.onDragStart}*/}\r\n                    {/*onDrag={this.onDrag}*/}\r\n                    {/*onDragStop={this.onDragStop}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\n\r\nexport default class RightClick extends React.Component {\r\n    onClick = (e) => {\r\n        this.props.onClick && this.props.onClick(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/more.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\n\r\nexport default class MiniMenuVerticalDivider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MiniMenuVerticalDivider\"/>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport '../../../HelperStyle.css';\r\n\r\nexport default class Help extends React.Component {\r\n    onClick = (e) => {\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/question.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\nimport RightClick from \"./Components/RightClick\";\r\nimport MiniMenuVerticalDivider from \"./MiniMenuVerticalDivider\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Help from \"./Components/Help\";\r\nimport {isHideInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nconst miniMenuId = \"wl_mini_menu\";\r\nexport default class MiniMenu extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            clear: true\r\n        };\r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({clear: true});\r\n    };\r\n\r\n    update = (itemId, shortcut, primary, item) => {\r\n        this.setState({\r\n            itemId\r\n            , shortcut, primary, clear: false,\r\n            item\r\n        })\r\n    };\r\n\r\n    getAnchor = () => {\r\n        return document.getElementById(`${this.state.itemId}_child_holder`) ||\r\n            document.getElementById(this.state.itemId);\r\n    };\r\n\r\n    render () {\r\n        if (this.state.clear)\r\n            return null;\r\n        if (!this.state.itemId || !this.getAnchor() ||\r\n            isHideInBreakpoint(this.state.item))\r\n            return null;\r\n        return (\r\n            <Popper\r\n                key={\"miniMenu\"}\r\n                open={true}\r\n                anchorEl={this.getAnchor()}\r\n                placement=\"bottom-start\"\r\n                style={{\r\n                    zIndex: 9999999\r\n                }}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'scrollParent',\r\n                    },\r\n                }}\r\n            >\r\n                <div className=\"MiniMenuRoot\"\r\n                     id={miniMenuId}\r\n                     style={{\r\n                        opacity:  !this.state.clear? 1: 0\r\n                     }}\r\n                >\r\n                    <div className=\"MiniMenuContainer\"\r\n                    >\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.shortcut.map(option => {\r\n                                return option;\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.shortcut.length > 0 && <MiniMenuVerticalDivider/>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.primary.map(option => {\r\n                                return option;\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.primary.length > 0 && <MiniMenuVerticalDivider/>\r\n                        }\r\n\r\n                        <Help/>\r\n                        <RightClick/>\r\n                    </div>\r\n                </div>\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Menu.css';\r\nimport MiniMenu from \"./MiniMenu/MiniMenu\";\r\nimport {createContextMenu} from \"../AwesomwGridLayoutHelper\";\r\n\r\nconst miniMenuHolderId = \"wl_menu_holder\";\r\nexport default class MenuHolder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n\r\n        this.miniMenuRef = React.createRef();\r\n    }\r\n\r\n    clearMiniMenu = () => {\r\n        this.state.active && this.miniMenuRef.current.clear();\r\n    };\r\n\r\n    addMiniMenu = (item) => {\r\n        if (item && this.state.active)\r\n            this.miniMenuRef.current.update(\r\n                item.props.id,\r\n                item.getShortcutOptions() || [],\r\n                item.getPrimaryOptions() || [],\r\n                item\r\n        );\r\n    };\r\n\r\n    addMenu = (menu) => {\r\n        this.setState({\r\n            menu: undefined,\r\n        });\r\n        if (menu) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    menu,\r\n                });\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    onContextMenu = (e, item) => {\r\n        this.setState({\r\n            contextMenu: createContextMenu(e, item, () => {\r\n                this.setState({contextMenu: undefined})\r\n            })\r\n        });\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id={miniMenuHolderId}\r\n                key={miniMenuHolderId}\r\n                className=\"MenuHolderRoot\"\r\n            >\r\n                <MiniMenu\r\n                    itemId={this.state.miniMenuItem && this.state.miniMenuItem.props.id}\r\n                    key={\"miniMenu\"}\r\n                    ref={this.miniMenuRef}\r\n                />\r\n                {\r\n                    !this.state.contextMenu &&\r\n                    this.state.menu\r\n                }\r\n                {\r\n                    this.state.contextMenu\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default class IFrameCommunicator {\r\n    constructor(origin, authKey, otherWindow, onMessage) {\r\n        this.onMessage = onMessage;\r\n        this.origin = origin;\r\n        this.otherWindow = otherWindow;\r\n        this.counter = 0;\r\n        this.authKey = authKey;\r\n        this.callbacks = {};\r\n        this.responses = {};\r\n\r\n        window.addEventListener(\"message\", (event) => {\r\n            console.log(\"message\", event);\r\n            if (this.origin && event.origin !== this.origin) {\r\n                return;\r\n            }\r\n\r\n            this.processIncomingMessage(event);\r\n        });\r\n    }\r\n\r\n    processIncomingMessage = (event) => {\r\n        let data = event.data;\r\n\r\n        if (!data || data.authKey !== this.authKey)\r\n            return;\r\n\r\n        if (data && data.r) {\r\n            let r = data.r;\r\n            this.callbacks[r](data);\r\n            delete this.callbacks[r];\r\n        }\r\n        else\r\n        {\r\n            let responseFunc = () => {};\r\n            if (data && data.c) {\r\n                let c = data.c;\r\n                responseFunc = this.responses[c] = (result) => {\r\n                    let newData = {r: c, result};\r\n                    this.post(newData);\r\n                }\r\n            }\r\n\r\n            this.onMessage(event.data, responseFunc);\r\n        }\r\n    };\r\n\r\n    post = (data, callback) => {\r\n        if (callback) {\r\n            this.counter++;\r\n            data.c = this.counter;\r\n            this.callbacks[data.c] = callback;\r\n        }\r\n\r\n        data.authKey = this.authKey;\r\n\r\n        let otherWindow = typeof(this.otherWindow) === 'function' ? this.otherWindow() : this.otherWindow;\r\n\r\n        otherWindow.postMessage(data, this.origin || \"*\");\r\n    };\r\n}\r\n","let EditorController = {};\r\nlet AllowFunctions = {};\r\n\r\nEditorController.onMessage = (data, res, editor) => {\r\n    if (data.type === 'Controller' && AllowFunctions[data.func]) {\r\n        res(AllowFunctions[data.func](...data.inputs, editor));\r\n        return;\r\n    }\r\n\r\n    if (data.type === 'Editor' && editor[data.func]) {\r\n        editor[data.func](...data.inputs, res);\r\n        return;\r\n    }\r\n};\r\n//\r\n// // TODO GET functions\r\n// AllowFunctions.getItemGridData = (itemId, editor) => {\r\n//     return editor.idMan.getItem(itemId).props.griddata;\r\n// };\r\n// AllowFunctions.getLayout = (editor) => {\r\n//     let layout = {\r\n//         id: editor.rootLayoutRef.current.props.id,\r\n//         griddata: editor.rootLayoutRef.current.props.griddata,\r\n//         children: []\r\n//     };\r\n//     let fillData = (item, parent) => {\r\n//         parent[item.props.id] = {\r\n//             id: item.props.id,\r\n//             griddata: item.props.griddata,\r\n//             children: []\r\n//         };\r\n//\r\n//         Object.values(item.allChildRefs).forEach(child => {\r\n//             if (child && child.current)\r\n//                 fillData(child.current, parent[item.props.id].children);\r\n//         });\r\n//     };\r\n//\r\n//     fillData(editor.rootLayoutRef.current, layout.children);\r\n//\r\n//     return layout;\r\n// };\r\n// AllowFunctions.getSiteData = (editor) => {\r\n//     return editor.state.siteData;\r\n// };\r\n// AllowFunctions.getBreakpointsData = (itemId, editor) => {\r\n//     let item = editor.idMan.getItem(itemId);\r\n//     return {\r\n//         breakpoints: item.props.breakpointmanager.breakpoints,\r\n//         currentWidth: item.props.breakpointmanager.lastWidth\r\n//     }\r\n// };\r\n//\r\n// // TODO POST functions\r\n// AllowFunctions.changePage = (pageId, editor) => {\r\n//     editor.onPageChange(pageId);\r\n//     return true;\r\n// };\r\n// AllowFunctions.addItem = (parentId, childData, gridItemStyle, style, editor) => {\r\n//     createItem(editor.idMan.getItem(parentId), childData, false, gridItemStyle, style);\r\n//     return true;\r\n// };\r\n//\r\n// AllowFunctions.undoRedoMethod = (method, inputs, editor) => {\r\n//     editor.undoredo[method](inputs);\r\n//     return true;\r\n// };\r\n// AllowFunctions.togglePreview = (preview, editor) => {\r\n//     editor.togglePreview(preview);\r\n//     return true;\r\n// };\r\n// AllowFunctions.setZoomLevel = (zoomLevel, editor) => {\r\n//     editor.setZoomLevel(zoomLevel);\r\n//     return true;\r\n// };\r\n//\r\n// // TODO Edit functions\r\n// AllowFunctions.setDataInBackground = (itemId, prop, value, editor) => {\r\n//     let item = editor.idMan.getItem(itemId);\r\n//     setDataInBreakpoint(prop, value, item, true);\r\n//     return item.props.griddata;\r\n// };\r\n\r\nexport default EditorController;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Inspector extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open? 100: 0,\r\n            inspectorMenu: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        if (this.context.inspectorPinned) {\r\n            this.props.pinInspector();\r\n            this.close(force);\r\n            return;\r\n        }\r\n\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setMenu = (inspectorMenu) => {\r\n        this.setState({inspectorMenu});\r\n    };\r\n\r\n    getDefaultMenu = () => {\r\n        return <div\r\n            className=\"InspectorDefaultMenuRoot\"\r\n        >\r\n            <span>\r\n                Select a component to show options\r\n            </span>\r\n        </div>\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"InspectorRoot\"\r\n                    style={{...\r\n                        !this.context.inspectorPinned ? {\r\n                            right: `${this.state.percent - 100}%`,\r\n                            opacity: this.state.percent / 100\r\n                        } : {right: \"0%\", opacity: 1},\r\n                        ...{\r\n                        }}\r\n                    }\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div style={{\r\n                    }}>\r\n                    <div className=\"InspectorPin\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginLeft: 0,\r\n                                borderRadius: \"50%\",\r\n                                backgroundColor: this.context.inspectorPinned && \"#8d8d8d\"\r\n                            }}\r\n                            onClick={(e) => {\r\n                                this.props.pinInspector();\r\n                            }}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={12}\r\n                                height={12}\r\n                                src={this.context.inspectorPinned ?\r\n                                    process.env.PUBLIC_URL + '/static/icon/pin-white.svg':\r\n                                    process.env.PUBLIC_URL + '/static/icon/pin.svg'}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n                    {\r\n                        this.state.inspectorMenu || this.getDefaultMenu()\r\n                    }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.context.inspectorPinned &&\r\n\r\n                    <div\r\n                        className=\"InspectorPinRoot\"\r\n                    >\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspector.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport {stretch} from \"../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AdjustmentStretch extends React.Component {\r\n    onClick = (e) => {\r\n        let {itemId, idMan} = this.props;\r\n        stretch(idMan.getItem(itemId));\r\n    };\r\n\r\n    onMouseDown = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        let {isStretch} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                className=\"AdjustmentStretchRoot\"\r\n                onPointerDown={this.onMouseDown}\r\n                onClick={this.onClick}\r\n                style={this.props.style}\r\n            >\r\n                {\r\n                    isStretch && <img draggable={false} width={16} height={16} src={require('./icons/minimize.svg')} />\r\n                }\r\n                {\r\n                    !isStretch && <img draggable={false} width={16} height={16} src={require('./icons/maximize.svg')} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport AdjustmentStretch from \"./AdjustmentStretch\";\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentResize extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(nextProps.data, this.data))\r\n            return true;\r\n\r\n        if (!shallowEqual(nextProps, this.props))\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    render () {\r\n        let {data, allowStretch, idMan, itemId, isStretch, draggingStart, transformStyleId, item} = this.props;\r\n        this.data = cloneObject(data);\r\n        let stretchStyle = {};\r\n        if (!allowStretch) stretchStyle.display = \"none\";\r\n\r\n        let classes = classNames(\r\n            \"AdjustmentResizeRoot\",\r\n            transformStyleId\r\n        );\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                style={{\r\n                    width: data.width,\r\n                    height: data.height,\r\n                    top: data.top,\r\n                    left: data.left,\r\n                    // transform: transform\r\n                }}\r\n                className={classes}\r\n            >\r\n                {\r\n                    !isStretch &&\r\n                    ['s','n','e','w','se','ne','sw','nw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            enabled={this.props.sides.includes(side)}\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.props.onResizeStart}\r\n                            onResize={this.props.onResize}\r\n                            onResizeStop={this.props.onResizeStop}\r\n                            draggingStart={draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n                {\r\n                    !(item.getCompositeFromData(\"transform\") || {}).rotateDegree && !item.props.noStretch &&\r\n                    <AdjustmentStretch\r\n                        style={stretchStyle}\r\n                        isStretch={isStretch}\r\n                        idMan={idMan}\r\n                        itemId={itemId}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {allowStretch, isGroupSelected, isHideInBreakpoint, isStretch} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentResize from \"./AdjustmentResize\";\r\n\r\nexport default class AdjustmentResizeWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n    }\r\n\r\n    update = (item, data, transformStyleId) => {\r\n        this.setState({item, data, transformStyleId});\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, data} = this.state;\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    item.getFromTempData(\"resizable\") &&\r\n                    !item.state.showAnimation &&\r\n                    !isGroupSelected(item) &&\r\n                    !isHideInBreakpoint(item) &&\r\n                    <AdjustmentResize\r\n                        id={item.props.id}\r\n                        key={`resize`}\r\n                        sides={item.props.resizeSides || ['n','s','e','w','ne','nw','se','sw']}\r\n                        onResizeStart={item.onResizeStart}\r\n                        onResize={item.onResize}\r\n                        onResizeStop={item.onResizeStop}\r\n                        draggingStart={item.state.draggingStart}\r\n                        isStretch={isStretch(item)}\r\n                        allowStretch={allowStretch(item)}\r\n                        itemId={item.props.id}\r\n                        item={item}\r\n                        idMan={item.props.idMan}\r\n                        transformStyleId={this.state.transformStyleId}\r\n                        data={data}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentHelpLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.helpLinesParent) {\r\n            let newParentRect = nextProps.helpLinesParent.getSize(false);\r\n\r\n            if (!shallowEqual(this.parentRect, cloneObject(newParentRect))) {\r\n                this.parentRect = newParentRect;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.props.width !== nextProps.width ||\r\n            this.props.height !== nextProps.height ||\r\n            this.props.show !== nextProps.show ||\r\n            this.props.dragging !== nextProps.dragging)\r\n            return true;\r\n\r\n        if (!shallowEqual(this.props.itemRect, nextProps.itemRect)) {\r\n            return true;\r\n        }\r\n        if (!shallowEqual(this.props.fakeItemRect, nextProps.fakeItemRect)) {\r\n            return true;\r\n        }\r\n        if (!shallowEqual(nextProps.item.getCompositeFromData(\"gridItemStyle\"), this.gridItemStyle)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getValue = (value) => {\r\n        if (value.includes(\"px\")) {\r\n            return `${parseFloat(value.replace(\"px\", \"\")).toFixed(1)}px`;\r\n        }\r\n        if (value.includes(\"%\")) {\r\n            return `${parseFloat(value.replace(\"%\", \"\")).toFixed(1)}%`;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    calculate = () => {\r\n        let {helpLinesParent, item, itemRect, width, height, dragging, fakeItemRect} = this.props;\r\n        // this.parentRect = this.parentRect || helpLinesParent.getSize(false);\r\n        this.parentRect = helpLinesParent.prepareRects();\r\n\r\n        if (fakeItemRect)\r\n            itemRect = fakeItemRect;\r\n        return {\r\n            ...item.calculateGridItem(itemRect.left - this.parentRect.left,\r\n                itemRect.top - this.parentRect.top, helpLinesParent,\r\n                width || itemRect.width, height || itemRect.height, this.parentRect, true, !dragging),\r\n            itemRect, parentRect: this.parentRect\r\n        };\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        return this.gridItemStyle;\r\n    };\r\n\r\n    render () {\r\n        let {show, item, transform, fakeItemRect} = this.props;\r\n        if (!show)\r\n            return null;\r\n\r\n        if (!item.mounted)\r\n            return null;\r\n\r\n        let {gridItemStyle, coordinates, itemRect, parentRect, coordinatesAbs} = this.calculate();\r\n        this.gridItemStyle = cloneObject(gridItemStyle);\r\n        if (fakeItemRect)\r\n            itemRect = fakeItemRect;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentHelpLinesRoot\"\r\n                style={{\r\n                    width: coordinatesAbs.cx2 - coordinatesAbs.cx1,\r\n                    height: coordinatesAbs.cy2 - coordinatesAbs.cy1,\r\n                    top: coordinatesAbs.cy1,\r\n                    left: coordinatesAbs.cx1,\r\n                }}\r\n            >\r\n                <div className=\"AdjustmentHelpLinesRect\" style={{\r\n                    top: itemRect.top - coordinatesAbs.cy1,\r\n                    left: itemRect.left - coordinatesAbs.cx1,\r\n                    width: itemRect.width,\r\n                    height: itemRect.height\r\n                }}/>\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&*/\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\")? \"visible\": \"hidden\"}\r\n                            x1={0}\r\n                            x2={itemRect.left - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&\r\n                        !this.props.dragging &&*/\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                !this.props.dragging)? \"visible\" : \"hidden\"}\r\n                            cx={0}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width}\r\n                            x2={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={0}\r\n                            y2={itemRect.top - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={0}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height}\r\n                            y2={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                </svg>\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-start\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                        left: (itemRect.left - coordinatesAbs.cx1) / 2,\r\n                        transform: \"translateY(-125%) translateX(-50%)\",\r\n                        margin: 0,\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#0013ff\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    >\r\n                            {this.getValue(gridItemStyle.marginLeft)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                            right: (coordinatesAbs.cx2 - itemRect.left - itemRect.width) / 2,\r\n                            transform: \"translateY(-125%) translateX(50%)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginRight)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: (itemRect.top - coordinatesAbs.cy1) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(-50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginTop)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            bottom: (coordinatesAbs.cy2 - itemRect.top - itemRect.height) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginBottom)}\r\n                    </p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {isGroupSelected, isHideInBreakpoint} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentHelpLines from \"./AdjustmentHelpLines\";\r\n\r\nexport default class AdjustmentHelpLinesWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n\r\n        this.helpLineRef = React.createRef();\r\n    }\r\n\r\n    update = (item, helpLineParent, itemRect, dragging, fakeItemRect) => {\r\n        this.setState({item, itemRect, dragging, fakeItemRect});\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        if (this.helpLineRef.current)\r\n            return this.helpLineRef.current.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, itemRect, dragging, fakeItemRect} = this.state;\r\n        return (\r\n            <>\r\n                {\r\n                    !item.state.showAnimation &&\r\n                    !isHideInBreakpoint(item) &&\r\n                    <AdjustmentHelpLines\r\n                        ref={this.helpLineRef}\r\n                        show={!item.props.helplineOff /*&& item.state.selected*/ &&\r\n                        item.state.helpLinesParent && !item.getFromTempData(\"pageResize\") &&\r\n                        !isGroupSelected(item)}\r\n                        helpLinesParent={item.state.helpLinesParent}\r\n                        item={item}\r\n                        dragging={dragging}\r\n                        itemRect={itemRect}\r\n                        fakeItemRect={fakeItemRect}\r\n                        width={itemRect.width}\r\n                        height={itemRect.height}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\n\r\nexport default class AdjustmentHover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n    }\r\n\r\n    update = (item, size, clear) => {\r\n        if (!clear)\r\n            if (!item.state.selected)\r\n                this.setState({item, size, itemId: item.props.id});\r\n            else\r\n                this.setState({item, size, itemId: undefined});\r\n        else {\r\n            if (this.state.itemId === item.props.id) {\r\n                this.setState({item, size, itemId: undefined});\r\n            }\r\n        }\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.itemId)\r\n            return null;\r\n        return (\r\n            <Popper\r\n                open={true}\r\n                anchorEl={document.getElementById(this.state.itemId)}\r\n                placement=\"top-start\"\r\n                style={{\r\n                    zIndex: 9999999,\r\n                    pointerEvents: \"none\"\r\n                }}\r\n                disablePortal={false}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: false\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: false,\r\n                    },\r\n                    hide: {\r\n                        enabled: false,\r\n                    },\r\n                }}\r\n            >\r\n                {\r\n                    this.state.itemId ?\r\n                        <div\r\n                            className=\"AwesomeGridLayoutRootHover\"\r\n                            key={`hover`}\r\n                            style={{\r\n                                width: this.state.size ? this.state.size.width : 0,\r\n                                height: this.state.size ? this.state.size.height : 0,\r\n                            }}\r\n                        >\r\n                            <span className=\"AGLHoverCompName\">\r\n                                {this.state.item.props.tagName}\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                }\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Layout.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            treeData: []\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent > 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent, open: (percent === 100)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = () => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent < 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent, open: (percent !== 0)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    setLayout = (layout) => {\r\n        this.processLayout(layout)\r\n    };\r\n\r\n    processLayout = (layout) => {\r\n        if (!layout)\r\n            return;\r\n\r\n        let {idMan} = this.props;\r\n\r\n        let getTreeItem = (layoutItem) => {\r\n            let item = idMan.getItem(layoutItem.childData.props.id);\r\n            return {\r\n                title: layoutItem.childData.tagName,\r\n                layoutItem: layoutItem,\r\n                children: layoutItem.childrenData.map(childLayout => {\r\n                    return getTreeItem(childLayout);\r\n                }),\r\n                expanded: item.getFromTempData(\"layoutTreeExpanded\"),\r\n                parentItemId: item.props.parent && item.props.parent.props.id\r\n            };\r\n        };\r\n\r\n        this.setState({\r\n            treeData: [getTreeItem(layout[0])]\r\n        });\r\n    };\r\n\r\n    setTree = (treeData) => {\r\n        let {idMan} = this.props;\r\n        let updateItem = (treeItem) => {\r\n            let item = idMan.getItem(treeItem.layoutItem.childData.props.id);\r\n            item.setTempData(\"layoutTreeExpanded\", treeItem.expanded);\r\n            treeItem.children.forEach((childTreeItem, index) => {\r\n                item.setChildZIndex(childTreeItem.layoutItem.childData.props.id, index + 1);\r\n            });\r\n            item.updateLayout();\r\n            treeItem.children.map(childTreeItem => {\r\n                updateItem(childTreeItem);\r\n            });\r\n        };\r\n\r\n        updateItem(treeData[0]);\r\n\r\n        this.setState({treeData});\r\n    };\r\n\r\n    render() {\r\n        let {idMan} = this.props;\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"LayoutRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"LayoutTreeRootHeader\"\r\n                    >\r\n                        {/*Header*/}\r\n                        <div\r\n                            className=\"LayoutTreeRootHeaderContainer\"\r\n                        >\r\n                            <span className=\"LayoutTreeRootHeaderTitle\">\r\n                                Layers\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.close}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"LayoutTreeRoot\"\r\n                    >\r\n                        Coming soon ...\r\n                        {/*<SortableTree\r\n                            className=\"LayoutSortableTree\"\r\n                            treeData={this.state.treeData}\r\n                            onChange={treeData => this.setTree(treeData)}\r\n                            innerStyle={{\r\n                                outline: 'none',\r\n                            }}\r\n                            generateNodeProps={rowInfo => {\r\n                                let layoutItem = rowInfo.node.layoutItem; // {tagName, childData, childrenData}\r\n                                let item = idMan.getItem(layoutItem.childData.props.id);\r\n                                let rowWrapperStyle = {};\r\n                                if (item.state.selected)\r\n                                    rowWrapperStyle.backgroundColor = \"#e4ffea\";\r\n\r\n                                let buttons = [\r\n                                    <IconButton\r\n                                        key={\"rightClick\"}\r\n                                        onClick={(e) => {\r\n                                            item.onContextMenu(e);\r\n                                        }}\r\n                                        imageContainerStyle={{\r\n                                            padding: 4\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={16}\r\n                                            height={16}\r\n                                            src={process.env.PUBLIC_URL + 'static/icon/more-black.svg'}\r\n                                        />\r\n                                    </IconButton>\r\n                                ];\r\n                                if (isHideInBreakpoint(item)) {\r\n                                    buttons.unshift(\r\n                                        <IconButton\r\n                                            key={\"hidedInBp\"}\r\n                                            onClick={(e) => {\r\n                                                showInBreakPoint(item);\r\n                                            }}\r\n                                            imageContainerStyle={{\r\n                                                padding: 4\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                draggable={false}\r\n                                                width={16}\r\n                                                height={16}\r\n                                                src={process.env.PUBLIC_URL + 'static/icon/hide.svg'}\r\n                                            />\r\n                                        </IconButton>\r\n                                    )\r\n                                }\r\n\r\n                                return ({\r\n                                    rowWrapperStyle: rowWrapperStyle,\r\n                                    onClick: (e) => {\r\n                                        let eClass = e.target.getAttribute(\"class\");\r\n                                        if (eClass !== \"expandButton\" && eClass !== \"collapseButton\")\r\n                                            item.onSelect(true, undefined, undefined, true);\r\n                                    },\r\n                                    icons: [\r\n                                        <Image\r\n                                            draggable={false}\r\n                                            width={16}\r\n                                            height={16}\r\n                                            src={item.props.favIconUrl}\r\n                                            style={{\r\n                                                marginTop: 2\r\n                                            }}\r\n                                            errorsrc={process.env.PUBLIC_URL + '/static/icon/rectangle.svg'}\r\n                                        />\r\n                                    ],\r\n                                    buttons: buttons,\r\n                                })\r\n                            }}\r\n                            canDrag={({ node, path, treeIndex, lowerSiblingCounts, isSearchMatch,\r\n                                          isSearchFocus}) => {\r\n                                let item = idMan.getItem(node.layoutItem.childData.props.id);\r\n                                return !item.props.isPage && !item.props.isSection;\r\n                            }}\r\n                            canDrop={({ node, nextParent, prevPath, nextPath }) => {\r\n                                return !!(nextParent && node.parentItemId === nextParent.layoutItem.childData.props.id);\r\n                            }}\r\n                        />*/}\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nLayout.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './AddComponent.css';\r\nimport {createItem, sortBy} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class ComponentGrid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.rootRef = React.createRef();\r\n    }\r\n\r\n    getItemStyle = (item) => {\r\n        let rootWidth = this.rootRef.current?\r\n            this.rootRef.current.getBoundingClientRect().width - 24: 400 - 24;\r\n\r\n        return {\r\n            width: rootWidth / (item.widthRatio || 2),\r\n            // height: rootWidth / (item.widthRatio || 2) / (item.aspectRatio || 2)\r\n            height: \"fit-content\"\r\n        };\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setDraggingItem = (draggingItem, e) => {\r\n        e.persist();\r\n        this.setState({draggingItem});\r\n\r\n        clearTimeout(this.closingTimeOut);\r\n        this.closingTimeOut = setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            if (this.state.draggingItem) {\r\n                this.props.closeMenu(true);\r\n                this.createItemAndDrag(this.state.draggingItem, e);\r\n            }\r\n        }, 200);\r\n    };\r\n\r\n    createItemAndDrag = (item, e) => {\r\n        let {pageRef, editor} = this.props;\r\n        let selectedItem = editor.select.getSelected();\r\n\r\n        createItem(pageRef.current, {\r\n            tagName: item.tagName,\r\n            props: cloneObject(item.presetProps)\r\n        }, undefined, undefined, undefined, (agl) => {\r\n            console.log(\"mouseDown\", agl.props.input.mouseDown);\r\n            if (agl.props.input.mouseDown)\r\n                window.requestAnimationFrame(() => {\r\n                    agl.onMouseDown(e, true);\r\n                });\r\n            else\r\n                window.requestAnimationFrame(() => {\r\n                    this.changeItemParent(agl, selectedItem);\r\n                });\r\n        });\r\n    };\r\n\r\n    changeItemParent = (agl, selectedItem) => {\r\n        let size = agl.getSize(false);\r\n\r\n        if (!selectedItem || selectedItem.props.isPage)\r\n            selectedItem = this.props.editor.rootLayoutRef.current.props.aglComponent.getSectionOfPoint(\r\n                size.left, size.top, size.width, size.height\r\n            );\r\n\r\n        let newGridItemStyle = {\r\n            alignSelf: \"center\",\r\n            justifySelf: \"center\",\r\n            position: \"relative\",\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            gridArea: \"1/1/2/2\",\r\n        };\r\n\r\n        agl.props.dragdrop.dropItem(agl, agl.props.parent, selectedItem, (newItem) => {\r\n            newItem.setGridItemStyle(newGridItemStyle, newItem.props.breakpointmanager.getHighestBpName());\r\n        });\r\n    };\r\n\r\n    createItem = (item, e) => {\r\n        this.props.closeMenu(true);\r\n        let {pageRef, editor} = this.props;\r\n        let selectedItem = editor.select.getSelected();\r\n\r\n        createItem(pageRef.current, {\r\n            tagName: item.tagName,\r\n            props: cloneObject(item.presetProps)\r\n        }, undefined, undefined, undefined, (agl) => {\r\n            window.requestAnimationFrame(() => {\r\n                this.changeItemParent(agl, selectedItem);\r\n            });\r\n        });\r\n    };\r\n\r\n    setDraggingEnd = () => {\r\n        this.setState({draggingItem: undefined});\r\n    };\r\n\r\n    render() {\r\n        let {allItems, id} = this.props;\r\n        if (!allItems)\r\n            return null;\r\n\r\n        return (\r\n            <React.Fragment key={id}>\r\n                <div\r\n                    className=\"AddComponentItemGrid\"\r\n                    ref={this.rootRef}\r\n                    key={id}\r\n                >\r\n                    {\r\n                        sortBy(allItems, \"order\").map((item, index) => {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <div\r\n                                        className=\"AddComponentItemGridItem\"\r\n                                        style={this.getItemStyle(item)}\r\n                                        onDragStart={(e) => {\r\n                                            this.setDraggingItem(item, e);\r\n                                        }}\r\n                                        onDragEnd={(e) => {\r\n                                            this.setDraggingEnd();\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.createItem(item, e);\r\n                                        }}\r\n                                        draggable\r\n                                    >\r\n                                        <img\r\n                                            className=\"AddComponentItemGridItemImage\"\r\n                                            src={item.imageUrl || '/static/image/box.webp'}\r\n                                            width={\"100%\"}\r\n                                            draggable={false}\r\n                                        />\r\n                                        {\r\n                                            item.label &&\r\n                                            <div\r\n                                                className=\"AddComponentItemGridItemLabel\"\r\n                                            >\r\n                                                {item.label}\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AddComponent.css';\r\nimport ComponentGrid from \"./ComponentGrid\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\nimport debounce from 'lodash.debounce';\r\nimport {sortBy} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AddComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            componentListItem: undefined,\r\n            componentSubListItem: undefined,\r\n            componentListItemHover: undefined,\r\n            componentSubListItemHover: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setComponentListItemDebounce = debounce((componentListItem) => {\r\n        this.setComponentListItem(componentListItem);\r\n    }, 500);\r\n\r\n    setComponentListItemLeave = (componentListItem) => {\r\n        if (this.state.componentListItemHover === componentListItem) {\r\n            this.setState({componentListItemHover: undefined});\r\n        }\r\n    };\r\n\r\n    setComponentListItem = (componentListItem) => {\r\n        if (componentListItem !== this.state.componentListItem &&\r\n            componentListItem === this.state.componentListItemHover)\r\n            this.setState({componentListItem,\r\n                componentSubListItem: componentListItem.subList && Object.values(componentListItem.subList)[0]?\r\n                    Object.values(componentListItem.subList)[0][0]: undefined\r\n            });\r\n    };\r\n\r\n    setComponentSubListItemDebounce = debounce((componentSubListItem) => {\r\n        this.setComponentSubListItem(componentSubListItem);\r\n    }, 500);\r\n\r\n    setComponentSubListItemLeave = (componentSubListItem) => {\r\n        if (this.state.componentSubListItemHover === componentSubListItem) {\r\n            this.setState({componentSubListItemHover: undefined});\r\n        }\r\n    };\r\n\r\n    setComponentSubListItem = (componentSubListItem) => {\r\n        if (componentSubListItem !== this.state.componentSubListItem &&\r\n            componentSubListItem.listName === this.state.componentListItem.name &&\r\n            componentSubListItem === this.state.componentSubListItemHover)\r\n            this.setState({componentSubListItem});\r\n    };\r\n\r\n    render() {\r\n        let {allComponentData} = this.props;\r\n        if (!allComponentData)\r\n            return null;\r\n\r\n        let allItems;\r\n        if (this.state.componentListItem && this.state.componentListItem.allItems)\r\n            allItems = this.state.componentListItem.allItems;\r\n        if (this.state.componentSubListItem && this.state.componentSubListItem.allItems)\r\n            allItems = this.state.componentSubListItem.allItems;\r\n\r\n        if (!this.state.componentListItem)\r\n            allItems = undefined;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"AddComponentRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"AddComponentList\"\r\n                    >\r\n                        {\r\n                            sortBy(Object.values(allComponentData.builtin), \"order\").map(componentListItem => {\r\n                                let style = {};\r\n                                if (componentListItem === this.state.componentListItem)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={componentListItem.name}\r\n                                        className=\"AddComponentListItem\"\r\n                                        onMouseEnter={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setComponentListItem(componentListItem);\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            this.setComponentListItemLeave(componentListItem);\r\n                                        }}\r\n                                        style={style}\r\n                                    >\r\n                                        {componentListItem.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <Divider/>\r\n                        {\r\n                            sortBy(Object.values(allComponentData.apps), \"order\").map(componentListItem => {\r\n                                let style = {};\r\n                                if (componentListItem === this.state.componentListItem)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={componentListItem.name}\r\n                                        className=\"AddComponentListItem\"\r\n                                        onMouseEnter={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setComponentListItem(componentListItem);\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            this.setComponentListItemLeave(componentListItem);\r\n                                        }}\r\n                                        style={style}\r\n                                    >\r\n                                        {componentListItem.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.componentListItem &&\r\n                        this.state.componentListItem.subList &&\r\n                        <div\r\n                            className=\"AddComponentSubList\"\r\n                        >\r\n                            {\r\n                                sortBy(Object.keys(allComponentData.builtin[this.state.componentListItem.name].subList), \"order\")\r\n                                    .map(groupName => {\r\n                                        let componentSubListItems =\r\n                                            allComponentData.builtin[this.state.componentListItem.name].subList[groupName];\r\n                                        return (\r\n                                            <React.Fragment key={groupName}>\r\n                                                <div\r\n                                                    key={groupName}\r\n                                                    className=\"AddComponentSubListGroup\"\r\n                                                >\r\n                                                    {groupName}\r\n                                                </div>\r\n                                                {\r\n                                                    sortBy(componentSubListItems, \"order\").map(componentSubListItem => {\r\n                                                        let style = {};\r\n                                                        if (componentSubListItem === this.state.componentSubListItem)\r\n                                                            style.backgroundColor = \"#e5ffff\";\r\n                                                        return (\r\n                                                            <div\r\n                                                                key={componentSubListItem.name}\r\n                                                                className=\"AddComponentSubListItem\"\r\n                                                                onMouseEnter={(e) => {\r\n                                                                    this.setState({componentSubListItemHover: componentSubListItem});\r\n                                                                    this.setComponentSubListItemDebounce(componentSubListItem);\r\n                                                                }}\r\n                                                                onMouseOver={(e) => {\r\n                                                                    this.setState({componentSubListItemHover: componentSubListItem});\r\n                                                                    this.setComponentSubListItemDebounce(componentSubListItem);\r\n                                                                }}\r\n                                                                onClick={(e) => {\r\n                                                                    this.setComponentSubListItem(componentSubListItem);\r\n                                                                }}\r\n                                                                onMouseOut={(e) => {\r\n                                                                    this.setComponentSubListItemLeave(componentSubListItem);\r\n                                                                }}\r\n                                                                style={style}\r\n                                                            >\r\n                                                                {componentSubListItem.name}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                    <ComponentGrid\r\n                        allItems={allItems}\r\n                        id={this.state.componentSubListItem? this.state.componentSubListItem.name:\r\n                            this.state.componentListItem? this.state.componentListItem.name: null}\r\n                        closeMenu={this.close}\r\n                        pageRef={this.props.pageRef}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nAddComponent.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport './PageTypeTitle.css';\r\n\r\nexport default class PageTypeTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: props.defaultOpen || false\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ButtonBase className=\"PageTypeTitle\" onClick={(e) => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(!this.state.open);\r\n                this.setState({open: !this.state.open});\r\n            }}>\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n\r\n                    <div className=\"PageTypeTitleExpandIcon\">\r\n                        {\r\n                            this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/down-arrow.svg'} />\r\n                        }\r\n                        {\r\n                            !this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/right-arrow.svg'} />\r\n                        }\r\n                    </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class PageInfo extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onRename = (e) => {\r\n        this.newPageName = e.target.value;\r\n    };\r\n\r\n    rename = () => {\r\n        let {pageData} = this.props;\r\n\r\n        if (this.newPageName === pageData.props.pageName)\r\n            return;\r\n\r\n        if (!this.newPageName) {\r\n            // TODO show error\r\n            return;\r\n        }\r\n\r\n        pageData.props.pageName = this.newPageName;\r\n        this.newPageName = undefined;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    setAsHomePage = () => {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n\r\n        let home = Object.values(siteData.allPages).find(p => {return p.props.isHome});\r\n\r\n        if (home)\r\n            delete home.props.isHome;\r\n        pageData.props.isHome = true;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's this page's name (on your menu)?\r\n                    </span>\r\n                    <input\r\n                        defaultValue={pageData.props.pageName}\r\n                        className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.onRename}\r\n                        onBlur={this.rename}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.rename()\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        <Image\r\n                            draggable={false}\r\n                            width={16}\r\n                            height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/home.svg'}\r\n                            style={{\r\n                                marginTop: 2,\r\n                                marginRight: 12\r\n                            }}\r\n                        />\r\n                        {\r\n                            pageData.props.isHome &&\r\n                            \"This page is your home page\"\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            \"Set this page as your home page\"\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            <Button className=\"PageInfoHomePageButton\" variant=\"contained\"\r\n                                onClick={this.setAsHomePage}\r\n                            >\r\n                                Set as Home Page\r\n                            </Button>\r\n                        }\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Radio from \"@material-ui/core/Radio/Radio\";\r\n\r\nconst AglRadio = withStyles((theme) => ({\r\n    root: {\r\n        padding: 6,\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    checked: {\r\n        color: '#137cbd',\r\n    },\r\n}))(Radio);\r\n\r\nexport default AglRadio;\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport GridViewer from \"../../../Menus/CommonComponents/GridViewer\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\r\nimport AglRadio from \"../../../Menus/CommonComponents/AglRadio\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class Permissions extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    changePermission = (type) => (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.type = type;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onSetPassword = (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.password = e.target.value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onChangeMemberType = (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.memberType = e.target.value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onRoleChange = (checked, role) => {\r\n        let {pageData} = this.props;\r\n        if (checked) {\r\n            if (pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role) < 0)\r\n                pageData.props.pageSetting.permissions.memberRoles.push(role);\r\n        } else {\r\n            if (pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role) >= 0) {\r\n                let index = pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role);\r\n                pageData.props.pageSetting.permissions.memberRoles.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Who can view this page?\r\n                    </span>\r\n\r\n                    <GridViewer>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Everyone\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={process.env.PUBLIC_URL + '/static/icon/world.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Everyone\r\n                            </span>\r\n                        </div>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Password Holder\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Password Holder\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={process.env.PUBLIC_URL + '/static/icon/password.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Password Holder\r\n                            </span>\r\n                        </div>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Member Only\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Member Only\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={process.env.PUBLIC_URL + '/static/icon/group.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Member Only\r\n                            </span>\r\n                        </div>\r\n                    </GridViewer>\r\n\r\n                    <span className=\"PermissionsDescription\">\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" &&\r\n                            \"Everyone can see this page\"\r\n                        }\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Password Holder\" &&\r\n                            \"Visitors with a password can see this page\"\r\n                        }\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Member Only\" &&\r\n                            \"Visitors need to sign up to see this page\"\r\n                        }\r\n                    </span>\r\n                </div>\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type === \"Password Holder\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            What's the page's password?\r\n                        </span>\r\n\r\n                        <input\r\n                            defaultValue={pageData.props.pageSetting.permissions.password}\r\n                            className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                            type=\"text\"\r\n                            onChange={this.onSetPassword}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type === \"Member Only\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            Which member can access this page?\r\n                        </span>\r\n\r\n                        <RadioGroup className=\"PermissionsRadioGroup\"\r\n                                    value={pageData.props.pageSetting.permissions.memberType}\r\n                                    onChange={this.onChangeMemberType}\r\n                        >\r\n                            <FormControlLabel\r\n                                value=\"all\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    All members\r\n                                </span>}\r\n                            />\r\n                            <FormControlLabel\r\n                                className=\"PermissionsFormLabel\"\r\n                                value=\"role\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    Members with some role\r\n                                </span>}\r\n                            />\r\n                            <FormControlLabel\r\n                                disabled\r\n                                className=\"PermissionsFormLabel\"\r\n                                value=\"pay\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    Paying customers\r\n                                </span>}\r\n                            />\r\n                        </RadioGroup>\r\n\r\n                        {\r\n                            pageData.props.pageSetting.permissions.memberType === \"role\" &&\r\n                            <div className=\"PageInfoBox\">\r\n                                <span className=\"PageInfoBoxTitle\">\r\n                                    Select from your member roles\r\n                                </span>\r\n\r\n                                <div className=\"PermissionsRolesInput NumberInput PageManagerRenameInput\"\r\n                                    onClick={(e) => {\r\n                                        this.setState({roleAnchor: e.target})\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        pageData.props.pageSetting.permissions.memberRoles.map(role => {\r\n                                            return role;\r\n                                        }).join(\" \")\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            this.state.roleAnchor &&\r\n                            <Menu\r\n                                style={{\r\n                                    zIndex: 99999999999,\r\n                                }}\r\n                                anchorEl={this.state.roleAnchor}\r\n                                open={this.state.roleAnchor !== undefined}\r\n                                onClose={(e) => {\r\n                                    this.setState({roleAnchor: undefined})\r\n                                }}\r\n                                MenuListProps={{\r\n                                    style: {\r\n                                        padding: 0,\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <MenuItem dense disabled style={{\r\n                                    opacity: 1\r\n                                }}>\r\n                                    <span className=\"PermissionsSelectRole\">\r\n                                        Select roles\r\n                                    </span>\r\n                                </MenuItem>\r\n\r\n                                {\r\n                                    siteData.allApps.member.setting.roles.map(role => {\r\n                                        return (\r\n                                            <MenuItem dense onClick={(e) => {\r\n                                                this.onRoleChange(!(pageData.props.pageSetting.permissions.memberRoles\r\n                                                    .findIndex(r => r === role) > -1), role);\r\n                                            }}\r\n                                                      key={role}\r\n                                                      style={{\r\n                                                          paddingTop: 0,\r\n                                                          paddingBottom: 0\r\n                                                      }}\r\n                                            >\r\n                                                <Checkbox\r\n                                                    size={'small'}\r\n                                                    checked={\r\n                                                        pageData.props.pageSetting.permissions.memberRoles\r\n                                                            .findIndex(r => r === role) > -1\r\n                                                    }\r\n                                                    onChange={(e) => {\r\n                                                        this.onRoleChange(e.target.checked, role);\r\n                                                    }}\r\n                                                    color=\"default\"\r\n                                                />\r\n                                                <span className=\"PermissionsRole\">\r\n                                                    {role}\r\n                                                </span>\r\n                                            </MenuItem>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                                <MenuItem dense onClick={(e) => {\r\n                                    // TODO connect to member manager\r\n                                    console.log(\"Soon\")\r\n                                }}\r\n                                >\r\n                                    <span className=\"PermissionsNewRole\">\r\n                                        Add New Role\r\n                                    </span>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        }\r\n\r\n                        {\r\n                            pageData.props.pageSetting.permissions.memberType === \"pay\" &&\r\n                            <div className=\"PageInfoBox\">\r\n                                <span className=\"PageInfoBoxTitle\">\r\n                                    Coming soon\r\n                                </span>\r\n\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class SeoGoogle extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChangeSeoSetting = (param) => (e, value) => {\r\n        let {pageData} = this.props;\r\n\r\n        value = value || e.target.value;\r\n        console.log(\"onChangeSeoSetting\", value, param);\r\n        if (param === \"endUrl\") {\r\n            if (!this.newEndUrl)\r\n                return;\r\n\r\n            value = this.newEndUrl.replace(/\\s+/g, '').toLowerCase();\r\n            let siteData = this.context.siteData;\r\n            let same = Object.values(siteData.allPages).find(p => p.props.pageSetting.seoGoogle.endUrl === value);\r\n            if (same) {\r\n                console.log(\"onChangeSeoSetting2\");\r\n                this.setState({endUrlError: true});\r\n                delete this.newEndUrl;\r\n                return;\r\n            }\r\n\r\n            delete this.newEndUrl;\r\n        }\r\n\r\n        pageData.props.pageSetting.seoGoogle[param] = value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Preview on Google search\r\n                    </span>\r\n\r\n                    <div className=\"SeoGooglePreviewRoot\">\r\n                        <span className=\"SeoGooglePreviewTitle\">\r\n                            {\r\n                                pageData.props.pageSetting.seoGoogle.pageTitle ||\r\n                                    pageData.props.pageName\r\n                            }\r\n                        </span>\r\n                        <span className=\"SeoGooglePreviewUrl\">\r\n                            {\r\n                                siteData.setting.baseUrl + (\r\n                                    pageData.props.pageSetting.seoGoogle.endUrl ||\r\n                                    pageData.props.pageName.toLowerCase()\r\n                                )\r\n                            }\r\n                        </span>\r\n                        <span className=\"SeoGooglePreviewDesc\">\r\n                            {\r\n                                pageData.props.pageSetting.seoGoogle.pageDescription\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the lat part (or slug) of url?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.endUrl || pageData.props.pageName.toLowerCase()}\r\n                        className={`PageSettingInput PageManagerRenameInput PageInfoNameInput ${\r\n                            this.state.endUrlError? 'PageInfoNameInputError': \"\"\r\n                        }`}\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newEndUrl = e.target.value;\r\n                            this.setState({endUrlError: undefined});\r\n                        }}\r\n                        onBlur={this.onChangeSeoSetting(\"endUrl\")}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"endUrl\")(e);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page's title on search results and browser tabs?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.pageTitle || pageData.props.pageName}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newPageTitle = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSeoSetting(\"pageTitle\")(e, this.newPageTitle);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"pageTitle\")(e, this.newPageTitle);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page about? Add a description\r\n                    </span>\r\n\r\n                    <textarea\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.pageDescription}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        style={{\r\n                            resize: \"none\",\r\n                            minHeight: 120\r\n                        }}\r\n                        onChange={(e) => {\r\n                            this.newPageDescription = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSeoSetting(\"pageDescription\")(e, this.newPageDescription);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"pageDescription\")(e, this.newPageDescription);\r\n                            }\r\n                        }}\r\n                        rows={5}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Show this page in search results\r\n                    </span>\r\n\r\n                    <Switch\r\n                        className=\"SeoGoogleShowInSearch\"\r\n                        checked={\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" ?\r\n                            pageData.props.pageSetting.seoGoogle.showInSearch: false\r\n                        }\r\n                        disabled={pageData.props.pageSetting.permissions.type !== \"Everyone\"}\r\n                        onChange={(e) => {\r\n                            let checked = e.target.checked;\r\n                            this.onChangeSeoSetting('showInSearch')(e, checked);\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type !== \"Everyone\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            Note: You’ve made changes to who can view this page, so it won’t show in search results. Go to the Permissions tab to change this.\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class SocialShare extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChangeSocialShareSetting = (param) => (e, value) => {\r\n        let {pageData} = this.props;\r\n\r\n        value = value || e.target.value;\r\n        pageData.props.pageSetting.socialShare[param] = value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <div className=\"SocialShareTitle\">\r\n                        What is Social Share\r\n                    </div>\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Add the text and image that display when this page is shared on social networks like Facebook, Instagram and more.\r\n                    </span>\r\n                </div>\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Preview on social\r\n                    </span>\r\n\r\n                    <div className=\"SocialPreviewBox\">\r\n                        <div className=\"SocialPreviewRoot\">\r\n                            <span className=\"SocialPreviewImageNoImage\">\r\n                                {\r\n                                    pageData.props.pageSetting.socialShare.imageUrl &&\r\n                                    <Image\r\n                                        className=\"SocialPreviewImage\"\r\n                                        src={pageData.props.pageSetting.socialShare.imageUrl}\r\n                                    />\r\n                                }\r\n\r\n                                <Button\r\n                                    className=\"SocialPreviewImageSelect\"\r\n                                >\r\n                                    Upload or Select an Image\r\n                                </Button>\r\n                            </span>\r\n                            <div className=\"SocialPreviewDetailBox\">\r\n                                <span className=\"SocialPreviewUrl\">\r\n                                    {\r\n                                        siteData.setting.baseUrl.substring(0, siteData.setting.baseUrl.lastIndexOf('/'))\r\n                                            .replace(/(^\\w+:|^)\\/\\//, '')\r\n\r\n                                    }\r\n                                </span>\r\n                                <span className=\"SocialPreviewTitle\">\r\n                                    {\r\n                                        pageData.props.pageSetting.socialShare.title ||\r\n                                        pageData.props.pageSetting.seoGoogle.pageTitle\r\n                                    }\r\n                                </span>\r\n                                <span className=\"SocialPreviewDescription\">\r\n                                    {\r\n                                        pageData.props.pageSetting.socialShare.description ||\r\n                                        pageData.props.pageSetting.seoGoogle.pageDescription\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page's title on social networks?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.socialShare.title ||\r\n                            pageData.props.pageSetting.seoGoogle.pageTitle || pageData.props.pageName}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newTitle = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSocialShareSetting(\"title\")(e, this.newTitle);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSocialShareSetting(\"title\")(e, this.newTitle);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page about? Add a description\r\n                    </span>\r\n\r\n                    <textarea\r\n                        defaultValue={pageData.props.pageSetting.socialShare.description ||\r\n                            pageData.props.pageSetting.seoGoogle.pageDescription}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        style={{\r\n                            resize: \"none\",\r\n                            minHeight: 120\r\n                        }}\r\n                        onChange={(e) => {\r\n                            this.newDescription = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSocialShareSetting(\"description\")(e, this.newDescription);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSocialShareSetting(\"description\")(e, this.newDescription);\r\n                            }\r\n                        }}\r\n                        rows={5}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab/Tab\";\r\nimport PageInfo from \"./PageInfo\";\r\nimport Permissions from \"./Permissions\";\r\nimport SeoGoogle from \"./SeoGoogle\";\r\nimport SocialShare from \"./SocialShare\";\r\n\r\nexport default class PageSetting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tabValue: \"Page Info\"\r\n        }\r\n    }\r\n\r\n    onChangeTab = (e, tabValue) => {\r\n        this.setState({tabValue});\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        return (\r\n            <Modal\r\n                open={this.props.open}\r\n                onClose={this.props.onClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                className=\"PageSettingModal\"\r\n                disableBackdropClick\r\n            >\r\n                <div className=\"PageSettingRoot\">\r\n                    {/*Header*/}\r\n                    <div className=\"PageSettingHeader\">\r\n                        <div\r\n                            className=\"PageManagerHeaderContainer\"\r\n                        >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                Page Setting ({pageData.props.pageName})\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.props.onClose}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Tabs\r\n                        className=\"PageSettingTabBox\"\r\n                        value={this.state.tabValue}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={this.onChangeTab}\r\n                        aria-label=\"disabled tabs example\"\r\n                    >\r\n                        <Tab label=\"Page Info\" value=\"Page Info\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Permissions\" value=\"Permissions\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"SEO (Google)\" value=\"SEO (Google)\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Social Share\" value=\"Social Share\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Advanced SEO\" value=\"Advanced SEO\" className=\"PageSettingTab\"/>\r\n\r\n                    </Tabs>\r\n\r\n                    {\r\n                        this.state.tabValue === \"Page Info\" &&\r\n                        <PageInfo\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Permissions\" &&\r\n                        <Permissions\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"SEO (Google)\" &&\r\n                        <SeoGoogle\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Social Share\" &&\r\n                        <SocialShare\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Advanced SEO\" &&\r\n                        <div style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\"\r\n                        }}>\r\n                            Coming Soon\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport PageSetting from \"./PageSetting/PageSetting\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class PageItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pageMenuAnchorEl: undefined\r\n        };\r\n\r\n        this.renameInput = React.createRef();\r\n    }\r\n\r\n    duplicate = () => {\r\n        // TODO ask verify\r\n        let {pageData, editor} = this.props;\r\n\r\n        let newName = `${pageData.props.pageName}(Copy)`;\r\n        let newId = uuidv4();\r\n\r\n        this.context.siteData.allPages[newId] = cloneObject(pageData);\r\n        this.context.siteData.allPages[newId].props.pageName = newName;\r\n        this.context.siteData.allPages[newId].props.pageId = newId;\r\n        delete this.context.siteData.allPages[newId].props.isHome;\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    delete = () => {\r\n        // TODO ask verify\r\n        let {pageData, editor} = this.props;\r\n\r\n        delete this.context.siteData.allPages[pageData.props.pageId];\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.onPageChange(Object.keys(this.context.siteData.allPages)[0], true);\r\n    };\r\n\r\n    setAsHome = () => {\r\n        let {pageData, editor} = this.props;\r\n        let home = Object.values(this.context.siteData.allPages).find(p => {return p.props.isHome});\r\n\r\n        if (home)\r\n            delete home.props.isHome;\r\n        pageData.props.isHome = true;\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    setting = (active) => {\r\n        this.setState({setting: active, pageMenuAnchorEl: undefined});\r\n    };\r\n\r\n    rename = (active) => {\r\n        this.setState({rename: active, pageMenuAnchorEl: undefined}, () => {\r\n            if (active)\r\n                this.renameInput.current.focus();\r\n        });\r\n\r\n        if (!active) {\r\n            let {pageData, editor} = this.props;\r\n\r\n            if (this.newPageName === pageData.props.pageName)\r\n                return;\r\n\r\n            if (!this.newPageName) {\r\n                // TODO show error\r\n                return;\r\n            }\r\n\r\n            pageData.props.pageName = this.newPageName;\r\n            this.newPageName = undefined;\r\n\r\n            editor.setState({reload: true});\r\n        }\r\n    };\r\n\r\n    onRename = (e) => {\r\n        this.newPageName = e.target.value;\r\n    };\r\n\r\n    render () {\r\n        let {pageData, onClick, editor} = this.props;\r\n        let boxClasses = classNames(\r\n            \"PageManagerNormalPageBox\",\r\n            this.context.pageData === pageData && \"PageManagerNormalPageBoxSelected\"\r\n        );\r\n        return (\r\n            <div className={boxClasses} key={pageData.props.pageId}\r\n            >\r\n                {\r\n                    !this.state.rename &&\r\n                    <span className=\"PageManagerNormalPageTitle\">\r\n                        {pageData.props.pageName}\r\n                    </span>\r\n                }\r\n\r\n                <div className=\"PageManagerNormalPageClick\" onClick={onClick}>\r\n\r\n                </div>\r\n\r\n                {\r\n                    this.state.rename &&\r\n                    <input\r\n                        ref={this.renameInput}\r\n                        defaultValue={pageData.props.pageName}\r\n                        className=\"NumberInput PageManagerRenameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.onRename}\r\n                        onBlur={(e) => this.rename(false)}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.rename(false)\r\n                            }\r\n                        }}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            // TODO\r\n                        }}\r\n                    >\r\n                    </input>\r\n                }\r\n\r\n                {\r\n                    pageData.props.isHome &&\r\n                    <IconButton\r\n                        className=\"PageManagerNormalSiteButton\"\r\n                        onClick={(e) => {\r\n                            // TODO\r\n                        }}\r\n                        disabled\r\n                    >\r\n                        <Image\r\n                            src={process.env.PUBLIC_URL + '/static/icon/home.svg'}\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    </IconButton>\r\n                }\r\n\r\n                <IconButton\r\n                    className=\"PageManagerNormalSiteButton\"\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                        this.setState({pageMenuAnchorEl: e.target})\r\n                    }}\r\n                >\r\n                    <Image\r\n                        src={process.env.PUBLIC_URL + '/static/icon/more-black.svg'}\r\n                        width={16}\r\n                        height={16}\r\n                    />\r\n                </IconButton>\r\n\r\n                {\r\n                    this.state.pageMenuAnchorEl &&\r\n                    <Menu\r\n                        style={{\r\n                            zIndex: 99999999999\r\n                        }}\r\n                        anchorEl={this.state.pageMenuAnchorEl}\r\n                        open={this.state.pageMenuAnchorEl !== undefined}\r\n                        onClose={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setState({pageMenuAnchorEl: undefined});\r\n                        }}\r\n                        MenuListProps={{\r\n                            style: {\r\n                                padding: 0,\r\n                            }\r\n                        }}\r\n                    >\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setting(true);\r\n                        }}\r\n                        >\r\n                            Setting\r\n                        </MenuItem>\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.rename(true)\r\n                        }}>\r\n                            Rename\r\n                        </MenuItem>\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.duplicate(true)\r\n                        }}\r\n                        >\r\n                            Duplicate\r\n                        </MenuItem>\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            <MenuItem dense onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.delete()\r\n                            }}\r\n                            >\r\n                                Delete\r\n                            </MenuItem>\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome && !pageData.props.isDynamic &&\r\n                            <MenuItem dense onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.setAsHome()\r\n                            }}\r\n                            >\r\n                                Set as Home Page\r\n                            </MenuItem>\r\n                        }\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setState({pageMenuAnchorEl: undefined});\r\n                            onClick();\r\n                        }} >\r\n                            Edit Page\r\n                        </MenuItem>\r\n                    </Menu>\r\n                }\r\n\r\n                {\r\n                    this.state.setting &&\r\n                    <PageSetting\r\n                        open={this.state.setting !== undefined}\r\n                        onClose={() => this.setState({setting: undefined})}\r\n                        pageData={pageData}\r\n                        editor={editor}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AddNewPageDialogItem.css';\r\n\r\nexport default class AddNewPageDialogItem extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"AddNewPageDialogItemRoot\">\r\n                <span className=\"AddNewPageDialogItemTitle\">\r\n                    {this.props.title}\r\n                </span>\r\n\r\n                <span className=\"AddNewPageDialogItemDesc\">\r\n                    {this.props.description}\r\n                </span>\r\n\r\n                <span className=\"AddNewPageDialogItemAdd\">\r\n                    Add\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport AddNewPageDialogItem from \"./AddNewPageDialogItem\";\r\n\r\nexport default class AddNewPageDialog extends React.Component {\r\n    addNormalPage = () => {\r\n        this.props.onClose();\r\n        this.props.onAddNormalPage();\r\n    };\r\n\r\n    addDynamicPage = () => {\r\n        this.props.onClose();\r\n        this.props.onAddDynamicPage();\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Menu\r\n                style={{\r\n                    zIndex: 99999999999,\r\n                }}\r\n                anchorEl={this.props.anchorEl}\r\n                open={this.props.open}\r\n                onClose={(e) => {\r\n                    this.props.onClose();\r\n                }}\r\n                MenuListProps={{\r\n                    style: {\r\n                        padding: 0,\r\n                    }\r\n                }}\r\n            >\r\n                <MenuItem dense onClick={(e) => {\r\n                    this.addNormalPage();\r\n                }}\r\n                >\r\n                    <AddNewPageDialogItem\r\n                        title={\"Page\"}\r\n                        description={\"Add a standard blank page\"}\r\n                    />\r\n                </MenuItem>\r\n                <MenuItem dense onClick={(e) => {\r\n                    this.addDynamicPage();\r\n                }}>\r\n                    <AddNewPageDialogItem\r\n                        title={\"Dynamic Page\"}\r\n                        description={\"Design once and generate a lot of different page\"}\r\n                    />\r\n                </MenuItem>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport PageTypeTitle from \"./PageTypeTitle\";\r\nimport PageItem from \"./PageItem\";\r\nimport AddNewPageDialog from \"./AddNewPageDialog\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class PageManager extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            openNormalPage: true,\r\n            openDynamicPage: false\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    onChangeSearch = (e) => {\r\n        let searchValue = e.target.value;\r\n        this.setState({searchValue});\r\n    };\r\n\r\n    getFilteredPages = () => {\r\n        let {siteData} = this.context;\r\n        return Object.keys(siteData.allPages).filter(siteId => {\r\n            if (!this.state.searchValue)\r\n                return true;\r\n\r\n            let pageData = siteData.allPages[siteId];\r\n\r\n            return pageData.props.pageName.toLowerCase().includes(this.state.searchValue.toLowerCase());\r\n        }).map(siteId => {\r\n            return siteData.allPages[siteId];\r\n        });\r\n    };\r\n\r\n    onPageClick = (pageData) => {\r\n        this.context.setPageData(pageData.props.pageId);\r\n    };\r\n\r\n    onAddNormalPage = () => {\r\n        let {siteData} = this.context;\r\n\r\n        if (!this.props.newPageDataUrl) {\r\n            fetch('/static/json/newPageData.json')\r\n                .then((r) => r.json())\r\n                .then((pageData) =>{\r\n                    let newName = \"New Page\";\r\n                    let newId = uuidv4();\r\n\r\n                    pageData.props.pageName = newName;\r\n                    pageData.props.pageId = newId;\r\n\r\n                    siteData.allPages[newId] = pageData;\r\n\r\n                    this.onPageClick(siteData.allPages[newId]);\r\n                });\r\n            // return;\r\n        }\r\n    };\r\n\r\n    onAddDynamicPage = (data) => {\r\n        // TODO\r\n    };\r\n\r\n    render() {\r\n        let {siteData} = this.context;\r\n\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"PageManagerRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    {/*Header*/}\r\n                    <div className=\"PageManagerHeader\">\r\n                        <div\r\n                            className=\"PageManagerHeaderContainer\"\r\n                        >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                Site Pages\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    this.context.toggleRightMenu(\"pageManager\", false);\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*Search box*/}\r\n                    <div className=\"PageManagerSearchBox\">\r\n                        <input\r\n                            className=\"NumberInput PageManagerSearchInput\"\r\n                            type=\"text\"\r\n                            onChange={this.onChangeSearch}\r\n                        >\r\n                        </input>\r\n\r\n                        <Image\r\n                            className=\"PageManagerSearchImage\"\r\n                            src={process.env.PUBLIC_URL + '/static/icon/search.svg'}\r\n                        />\r\n                    </div>\r\n\r\n                    {/*Sites list*/}\r\n\r\n                    <PageTypeTitle\r\n                        defaultOpen={this.state.openNormalPage}\r\n                        title=\"Main Pages\" onChange={(openNormalPage) => {\r\n                        this.setState({openNormalPage});\r\n                    }}/>\r\n\r\n                    <div className=\"PageManagerNormalPageList\">\r\n                        {\r\n                            this.state.openNormalPage &&\r\n                            this.getFilteredPages().map(pageData => {\r\n                                return (\r\n                                    <PageItem\r\n                                        key={pageData.props.pageId}\r\n                                        pageData={pageData}\r\n                                        onClick={(e) => {\r\n                                            this.onPageClick(pageData);\r\n                                        }}\r\n                                        editor={this.props.editor}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <ButtonBase className=\"PageManagerAddPageButton\"\r\n                        onClick={(e) => {\r\n                            this.setState({showAddPage: e.target})\r\n                        }}\r\n                    >\r\n                        Add New Page\r\n                    </ButtonBase>\r\n\r\n                    {\r\n                        this.state.showAddPage &&\r\n                        <AddNewPageDialog\r\n                            anchorEl={this.state.showAddPage}\r\n                            open={this.state.showAddPage !== undefined}\r\n                            onClose={(e) => {\r\n                                this.setState({showAddPage: undefined})\r\n                            }}\r\n                            onAddDynamicPage={this.onAddDynamicPage}\r\n                            onAddNormalPage={this.onAddNormalPage}\r\n                        />\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nPageManager.defaultProps = {\r\n    open: false,\r\n    speed: 800,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ThemeTextItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onEditClick = (e) => {\r\n\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let {siteData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"ThemeTextItemRoot\">\r\n                <span className=\"ThemeTextItemName\">\r\n                    {item.name}\r\n                </span>\r\n                <span className=\"ThemeTextItemDetail\">\r\n                    {item.font}, {item.fontSize}px\r\n                </span>\r\n                <span style={{\r\n                    fontFamily: `${item.font} Arial`,\r\n                    fontWeight: item.fontWeight,\r\n                    fontStyle: item.fontStyle,\r\n                    fontSize: Math.min(item.fontSize, 40),\r\n                    color: item.color,\r\n                    lineHeight: '1.4em'\r\n                }}>\r\n                    For Bold Creators\r\n                </span>\r\n\r\n                <IconButton\r\n                    className=\"ThemeTextItemEdit\"\r\n                    onClick={this.onEditClick}\r\n                >\r\n                    <img\r\n                        draggable={false}\r\n                        width={16}\r\n                        height={16}\r\n                        src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                    />\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport {getColorScheme} from \"../../AwesomwGridLayoutHelper\";\r\nimport HexColorPicker from \"./HexColorPicker\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ThemeColorsItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onEditClick = (paletteName, key, color) => (e) => {\r\n        this.setState({\r\n            toChange: {\r\n                paletteName, key, color\r\n            }\r\n        })\r\n    };\r\n\r\n    onChangeColor = (color) => {\r\n        let {editor} = this.props;\r\n        let {siteData} = this.context;\r\n        let {toChange} = this.state;\r\n        siteData.theme.Colors.items[toChange.paletteName][toChange.key] = color;\r\n\r\n        if (toChange.key === \"main\") {\r\n            siteData.theme.Colors.calculated = false;\r\n            this.context.calculateTheme(true);\r\n        }\r\n\r\n        toChange.color = color;\r\n        this.setState({toChange});\r\n        this.context.update();\r\n        // editor.setState({reload: true});\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let {siteData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"ThemeColorsItemRoot\">\r\n                <span className=\"ThemeTextItemName\">\r\n                    {item.name}\r\n                </span>\r\n\r\n                <div className=\"ThemeColorsItemDetail\">\r\n                    <div className=\"ThemeColorsItemDetailMain\" style={{\r\n                            backgroundColor: getColorScheme(item.main)[\"3\"]\r\n                        }}\r\n                        onClick={this.onEditClick(item.name, \"main\", getColorScheme(item.main)[\"3\"])}\r\n                    >\r\n\r\n                        <Image\r\n                            className=\"ThemeColorsItemDetailOverlay\"\r\n                            style={{opacity: 1}}\r\n                            src={process.env.PUBLIC_URL + 'static/icon/edit-white.svg'}\r\n                            width={18}\r\n                            height={18}\r\n                        />\r\n                    </div>\r\n                    <div className=\"ThemeColorsItemDetailSecondary\">\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"1\"] || getColorScheme(item.main)[\"1\"],\r\n                            borderTopRightRadius: 4,\r\n                            borderBottomRightRadius: 4\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"1\", item[\"1\"] || getColorScheme(item.main)[\"1\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + 'static/icon/edit-white.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"2\"] || getColorScheme(item.main)[\"2\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"2\", item[\"2\"] || getColorScheme(item.main)[\"2\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit-white.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"3\"] || getColorScheme(item.main)[\"3\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"3\", item[\"3\"] || getColorScheme(item.main)[\"3\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"4\"] || getColorScheme(item.main)[\"4\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"4\", item[\"4\"] || getColorScheme(item.main)[\"4\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"5\"] || getColorScheme(item.main)[\"5\"],\r\n                            borderTopLeftRadius: 4,\r\n                            borderBottomLeftRadius: 4\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"5\", item[\"5\"] || getColorScheme(item.main)[\"5\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.toChange &&\r\n                    <HexColorPicker\r\n                        onClose={() => this.setState({toChange: undefined})}\r\n                        color={this.state.toChange.color}\r\n                        onChangeComplete={ this.onChangeColor }\r\n                        disableAlpha\r\n                        width={224}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport {sortBy} from \"../../AwesomwGridLayoutHelper\";\r\nimport ThemeTextItem from \"./ThemeTextItem\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport ThemeColorsItem from \"./ThemeColorsItem\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ThemeManager extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            // category: sortBy(Object.values(props.siteData.theme), \"order\")[0],\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.setState({\r\n            category: sortBy(Object.values(this.context.siteData.theme), \"order\")[0],\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setCategory = (category) => (e) => {\r\n        if (category !== this.state.category)\r\n            this.setState({category});\r\n    };\r\n\r\n    getColor = (paletteName, key) => {\r\n        let {siteData} = this.context;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        this.context.calculateTheme(false);\r\n\r\n        return theme.Colors.items[paletteName][key];\r\n    };\r\n\r\n    render() {\r\n        let {editor} = this.props;\r\n        let {siteData, pageData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"ThemeManagerRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"ThemeManagerList\"\r\n                    >\r\n                        {\r\n                            sortBy(Object.values(siteData.theme), \"order\").map(category => {\r\n                                let style = {};\r\n                                if (category === this.state.category)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={category.name}\r\n                                        className=\"ThemeManagerCategoryItem\"\r\n                                        onClick={this.setCategory(category)}\r\n                                        style={style}\r\n                                    >\r\n                                        {category.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.category &&\r\n                        <div className=\"ThemeManagerItemRoot\">\r\n                            {/*Header*/}\r\n                            <div\r\n                                className=\"ThemeManagerItemHeaderContainer\"\r\n                            >\r\n                            <span className=\"ThemeManagerItemHeaderTitle\">\r\n                                Theme\r\n                            </span>\r\n\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.context.toggleRightMenu(\"themeManager\", false);\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={12}\r\n                                        height={12}\r\n                                        src={require('../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeManagerItemScroll\">\r\n                                {\r\n                                    Object.keys(this.state.category.items).map(key => {\r\n                                        if (this.state.category.name === \"Text\") {\r\n                                            return (\r\n                                                <ThemeTextItem\r\n                                                    key={key}\r\n                                                    item={this.state.category.items[key]}\r\n                                                    editor={editor}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                        if (this.state.category.name === \"Colors\") {\r\n                                            return (\r\n                                                <ThemeColorsItem\r\n                                                    key={key}\r\n                                                    item={this.state.category.items[key]}\r\n                                                    editor={editor}\r\n                                                    // recalculateColors={this.context.calculateTheme()}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nThemeManager.defaultProps = {\r\n    open: false,\r\n    speed: 1200,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport {EditorContext} from \"../EditorContext\";\r\n\r\nexport default class EditorHeaderZoom extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <>\r\n                    <IconButton\r\n                        buttonBaseStyle={{\r\n                            marginLeft: 0,\r\n                            marginRight: 10,\r\n                            backgroundColor: this.state.zoomSetting && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.setState({zoomSetting: e.currentTarget});\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/zoom-in.svg'}\r\n                        />\r\n\r\n                    </IconButton>\r\n\r\n                    {\r\n                        this.state.zoomSetting &&\r\n                        <Menu\r\n                            style={{\r\n                                zIndex: 99999999999,\r\n                            }}\r\n                            anchorEl={this.state.zoomSetting}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            getContentAnchorEl={null}\r\n                            anchorPosition={{ left: 0, top: 0 }}\r\n                            PaperProps={{\r\n                                style:{\r\n                                    transformOrigin: \"top right\",\r\n                                    transform: `scale(${1/editorContext.zoomScale})`\r\n                                }\r\n                            }}\r\n                            marginThreshold={0}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={true}\r\n                            onClose={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.setState({zoomSetting: undefined});\r\n                            }}\r\n                            MenuListProps={{\r\n                                style: {\r\n                                    padding: 0,\r\n                                }\r\n                            }}\r\n                            transitionDuration={0}\r\n                        >\r\n                            <Paper style={{\r\n                                padding: 10,\r\n                                display: \"flex\",\r\n                                alignItems: \"center\"\r\n                            }}>\r\n                                <IconButton\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 0,\r\n                                        marginRight: 10,\r\n                                        pointerEvents: \"auto\"\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 10\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        e.preventDefault();\r\n                                        this.props.onZoomChange(Math.min(1.3, editorContext.zoomScale + 0.1));\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={14}\r\n                                        height={14}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/add.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <span style={{\r\n                                    width: 70,\r\n                                    textAlign: \"center\"\r\n                                }}>\r\n                                    {(editorContext.zoomScale * 100).toFixed(0)}%\r\n                                </span>\r\n                                <IconButton\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 10,\r\n                                        marginRight: 10,\r\n                                        pointerEvents: \"auto\"\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 10\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        e.preventDefault();\r\n                                        this.props.onZoomChange(Math.max(0.5 ,editorContext.zoomScale - 0.1));\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={14}\r\n                                        height={14}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/minus.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <Button className=\"EditorHeaderZoomReset\"\r\n                                    onClick={(e) => {\r\n                                        this.props.onZoomChange(1);\r\n                                    }}\r\n                                >\r\n                                    Reset\r\n                                </Button>\r\n                            </Paper>\r\n                        </Menu>\r\n                    }\r\n                    </>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport './EditorHeaderPageSelect.css';\r\n\r\nexport default class EditorHeaderPageSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getOptions = (editorContext) => {\r\n        let options = Object.values(editorContext.siteData.allPages).map(pageData => {\r\n            return pageData.props.pageName;\r\n        });\r\n\r\n        !editorContext.preview && options.push(\r\n            <div\r\n                className=\"EditorHeaderPageSelectPageManagerButton\"\r\n                onClick={() => {\r\n                    editorContext.toggleRightMenu(\"pageManager\", true);\r\n                }}\r\n            >\r\n                Page Manager\r\n            </div>\r\n        );\r\n\r\n        return options;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        <DropDown\r\n                            options={editorContext.siteData ? this.getOptions(editorContext) : [\"...\"]}\r\n                            onChange={(v) => {\r\n                                let pageData = Object.values(editorContext.siteData.allPages).find(pd => {\r\n                                    return pd.props.pageName === v;\r\n                                });\r\n\r\n                                if (pageData)\r\n                                    editorContext.setPageData(pageData.props.pageId);\r\n                            }}\r\n                            value={editorContext.pageData ? editorContext.pageData.props.pageName : \"...\"}\r\n                            spanStyle={{\r\n                                width: 200,\r\n                                fontSize: 14,\r\n                                border: \"0px solid #cfcfcf\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class NumberInputEnterToChange extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"props.min\", props.min)\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    inputFilter = (value, oldValue) => {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = parseFloat(value).toFixed(0);\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        if (this.props.lazy)\r\n            return;\r\n\r\n        let value = this.inputFilter(this.state.tempValue, this.props.value);\r\n        this.props.onChange(value);\r\n        this.setState({tempValue: undefined});\r\n    };\r\n\r\n    onTempChange = (e) => {\r\n        let tempValue = e.target.value;\r\n        this.setState({tempValue});\r\n\r\n        if (this.props.lazy)\r\n            this.props.onChange(tempValue);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className={\"NumberInput \" + this.props.className || \"\"}\r\n                value={this.state.tempValue || this.props.value || 0}\r\n                onChange={this.onTempChange}\r\n                onBlur={this.onChange}\r\n                onKeyPress={(e) => {\r\n                    if((e.keyCode || e.which) === 13) {\r\n                        this.onChange();\r\n                        if (this.props.onKeyPress)\r\n                            this.props.onKeyPress();\r\n                    }\r\n                }}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport const getBreakpointIcon = (bpData) => {\r\n    if (bpData.start >= 1255)\r\n        return <img draggable={false} width={24} height={24} src={process.env.PUBLIC_URL + '/static/icon/computer.svg'} />\r\n    if (bpData.start >= 1001)\r\n        return <img draggable={false} width={24} height={24} src={process.env.PUBLIC_URL + '/static/icon/laptop.svg'} />\r\n    if (bpData.start >= 751)\r\n        return <img draggable={false} width={18} height={18} src={process.env.PUBLIC_URL + '/static/icon/ipad.svg'} />\r\n\r\n    return <img draggable={false} width={16} height={16} src={process.env.PUBLIC_URL + '/static/icon/phone.svg'} />\r\n};\r\n\r\nexport const getBreakpointName = (bpData) => {\r\n    if (bpData.start >= 1255)\r\n        return 'Desktop'\r\n    if (bpData.start >= 1001)\r\n        return 'Laptop'\r\n    if (bpData.start >= 751)\r\n        return 'Tablet'\r\n\r\n    return 'Mobile'\r\n};\r\n\r\nexport const getCommonDevices = () => {\r\n    return [\r\n        {\r\n            name: \"Galaxy S7\",\r\n            start: 360\r\n        },\r\n        {\r\n            name: \"Galaxy S8/S9\",\r\n            start: 360\r\n        },\r\n        {\r\n            name: \"iPad\",\r\n            start: 768\r\n        },\r\n        {\r\n            name: \"iPad Pro\",\r\n            start: 1024\r\n        },\r\n        {\r\n            name: \"iPhone 6/7/8\",\r\n            start: 375\r\n        },\r\n        {\r\n            name: \"iPhone 6/7/8 Plus\",\r\n            start: 414\r\n        },\r\n        {\r\n            name: \"iPhone X\",\r\n            start: 375\r\n        },\r\n        {\r\n            name: \"Pixel 2\",\r\n            start: 411\r\n        },\r\n        {\r\n            name: \"Pixel 2 XL\",\r\n            start: 411\r\n        }\r\n    ];\r\n};\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpointsSettingItem.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport {getBreakpointIcon} from \"./BreakpointHelper\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport default class EditorHeaderBreakpointsSettingItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: props.bpData.name? false: true\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    isHighestBp = (editorContext) => {\r\n        let {bpData} = this.props;\r\n        return editorContext.editor.breakpointmanager.getHighestBpName() === bpData.name;\r\n    };\r\n\r\n    done = (editorContext) => {\r\n        let {bpData} = this.props;\r\n\r\n        if (isNaN(this.tempEnd)) {\r\n            return;\r\n        }\r\n\r\n        this.tempEnd = parseInt(this.tempEnd);\r\n\r\n        editorContext.editor.breakpointmanager.updateBreakpoint(\r\n            bpData.name, undefined, this.tempEnd\r\n        );\r\n\r\n        this.setState({editMode: false})\r\n\r\n        editorContext.update();\r\n    };\r\n\r\n    create = (editorContext) => {\r\n        if (!this.tempEnd)\r\n            this.tempEnd = editorContext.pageSize;\r\n\r\n        if (isNaN(this.tempEnd)) {\r\n            return;\r\n        }\r\n\r\n        this.tempEnd = parseInt(this.tempEnd);\r\n\r\n        let {newBpData, prevBpData} = editorContext.editor.breakpointmanager.updateBreakpoint(\r\n            uuidv4(), this.tempEnd, undefined\r\n        );\r\n\r\n        this.props.onCancel();\r\n\r\n        editorContext.onNewBpAdded(newBpData, prevBpData);\r\n    };\r\n\r\n    delete = (editorContext) => {\r\n        let {bpData} = this.props;\r\n\r\n        editorContext.editor.breakpointmanager.deleteBreakpoint(bpData.name);\r\n\r\n        editorContext.update();\r\n    }\r\n\r\n    cancelEditMode = () => {\r\n        this.setState({editMode: false});\r\n    };\r\n\r\n    render () {\r\n        let {bpData, nextBpData} = this.props;\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div className=\"BreakpointSettingItemRoot\">\r\n                        <div className=\"BreakpointSettingItemIcon\">\r\n                            {\r\n                                getBreakpointIcon(bpData)\r\n                            }\r\n                        </div>\r\n\r\n                        {\r\n                            bpData.name &&\r\n                            <p className=\"BreakpointSettingItemStart\">\r\n                                {bpData.start} {\r\n                                    this.isHighestBp(editorContext) ? \" & Up\" : \" -\"\r\n                                }\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <p className=\"BreakpointSettingItemEndText\">\r\n                                {bpData.end}\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <NumberInputEnterToChange\r\n                                className=\"BreakpointSettingItemEndInput\"\r\n                                inputStyle={{\r\n                                    marginLeft: 0\r\n                                }}\r\n                                min={bpData.name? bpData.start + 1: 320}\r\n                                max={bpData.name? nextBpData.end - 2 : 9999}\r\n                                value={bpData.end || editorContext.pageSize}\r\n                                onChange={(tempEnd) => {\r\n                                    this.tempEnd = tempEnd;\r\n                                }}\r\n                                onKeyPress={() => {\r\n                                    bpData.name?\r\n                                        this.done(editorContext):\r\n                                        this.create(editorContext);\r\n                                }}\r\n                                lazy\r\n                            />\r\n                        }\r\n\r\n                        {\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <p className=\"BreakpointSettingItemPx\">\r\n                                {\"px\"}\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <div className=\"BreakpointSettingItemNoneEdit\">\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.delete(editorContext)\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/delete.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.props.onEditMode && this.props.onEditMode();\r\n                                        this.setState({editMode: true})\r\n                                        this.tempEnd = bpData.end;\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/edit2.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <div className=\"BreakpointSettingItemEditMode\">\r\n                                {\r\n                                    bpData.name &&\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className=\"BreakpointSettingItemButtons BreakpointSettingItemDone\"\r\n                                        onClick={() => {\r\n                                            this.done(editorContext);\r\n                                        }}\r\n                                    >\r\n                                        Done\r\n                                    </Button>\r\n                                }\r\n                                {\r\n                                    !bpData.name &&\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className=\"BreakpointSettingItemButtons BreakpointSettingItemDone\"\r\n                                        onClick={() => {\r\n                                            this.create(editorContext);\r\n                                        }}\r\n                                    >\r\n                                        Create\r\n                                    </Button>\r\n                                }\r\n                                <Button\r\n                                    className=\"BreakpointSettingItemButtons BreakpointSettingItemCancel\"\r\n                                    onClick={() => {\r\n                                        bpData.name ?\r\n                                            this.setState({editMode: false}) :\r\n                                            this.props.onCancel();\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpointsSetting.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport EditorHeaderBreakpointsSettingItem from \"./EditorHeaderBreakpointsSettingItem\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport default class EditorHeaderBreakpointsSetting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    clearEditMode = () => {\r\n        console.log(\"clearEditMode\")\r\n        Object.values(this.bpItemrRefs).forEach(bpItemRef => {\r\n            console.log(\"clearEditMode1\", bpItemRef)\r\n            if (bpItemRef.current)\r\n                bpItemRef.current.cancelEditMode();\r\n        });\r\n    };\r\n\r\n    getBpItemRef = (name) => {\r\n        if (!this.bpItemrRefs)\r\n            this.bpItemrRefs = {};\r\n\r\n        if (!this.bpItemrRefs[name])\r\n            this.bpItemrRefs[name] = React.createRef();\r\n\r\n        return this.bpItemrRefs[name];\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <Menu\r\n                        style={{\r\n                            zIndex: 99999999999\r\n                        }}\r\n                        anchorEl={this.props.anchorEl}\r\n                        open={true}\r\n                        onClose={(e) => {\r\n                            this.props.onClose();\r\n                        }}\r\n                        MenuListProps={{\r\n                            style: {\r\n                                padding: 0\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div className=\"BpSettingRoot\">\r\n                            {/*Header*/}\r\n                            <div className=\"BpSettingHeader\">\r\n                                <div\r\n                                    className=\"BpSettingHeaderContainer\"\r\n                                >\r\n                            <span className=\"BpSettingHeaderTitle\">\r\n                                Customize Breakpoints\r\n                            </span>\r\n\r\n                                    <IconButton\r\n                                        onClick={this.props.onClose}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={12}\r\n                                            height={12}\r\n                                            src={process.env.PUBLIC_URL + '/static/icon/close.svg'}\r\n                                        />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <p className=\"BpSettingGuideSpan\">\r\n                                Add, edit or delete this page's breakpoints to design for different viewport sizes.\r\n                            </p>\r\n\r\n                            {\r\n                                editorContext.editor.breakpointmanager.breakpoints.map((bpData, index) => {\r\n                                    return (\r\n                                        <EditorHeaderBreakpointsSettingItem\r\n                                            key={bpData.name}\r\n                                            bpData={bpData}\r\n                                            nextBpData={editorContext.editor.breakpointmanager.breakpoints[index - 1]}\r\n                                            onEditMode={this.clearEditMode}\r\n                                            ref={this.getBpItemRef(bpData.name)}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            {\r\n                                this.state.newBpData &&\r\n                                <EditorHeaderBreakpointsSettingItem\r\n                                    bpData={this.state.newBpData}\r\n                                    onCancel={() => {\r\n                                        this.setState({newBpData: undefined});\r\n                                    }}\r\n                                />\r\n                            }\r\n\r\n                            <Button\r\n                                className=\"BpSettingAddBp\"\r\n                                onClick={() => {\r\n                                    this.clearEditMode();\r\n                                    this.setState({newBpData: {}});\r\n                                }}\r\n                            >\r\n                                Add New Breakpoint\r\n                            </Button>\r\n                        </div>\r\n                    </Menu>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpoints.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab/Tab\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport EditorHeaderBreakpointsSetting from \"./EditorHeaderBreakpointsSetting\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {getBreakpointIcon} from \"./BreakpointHelper\";\r\n\r\nexport default class EditorHeaderBreakpoints extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onChangeTab = (editorContext) => (e, bpName) => {\r\n        this.setState({tabValue: bpName});\r\n        console.log(\"bpName\", bpName, editorContext.editor.breakpointmanager.current())\r\n\r\n        if (editorContext.editor.breakpointmanager.current() === bpName)\r\n            return;\r\n\r\n        let bpData = editorContext.editor.breakpointmanager.getBpData(bpName);\r\n\r\n        if (!bpData)\r\n            return;\r\n\r\n        let width;\r\n        if (bpData.prefer >= bpData.start && bpData.prefer <= bpData.end)\r\n            width = bpData.prefer;\r\n        else\r\n            width = bpData.start;\r\n\r\n        editorContext.editor.onPageResize(width);\r\n    };\r\n\r\n    getTabValue = (editorContext) => {\r\n        let width = editorContext.editor.rootLayoutRef.current.getSize(false).width;\r\n        return editorContext.editor.breakpointmanager.current(width);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <Tabs\r\n                                className=\"EditorHeaderBreakpointsTabRoot\"\r\n                                value={\r\n                                    this.getTabValue(editorContext)\r\n                                }\r\n                                indicatorColor=\"primary\"\r\n                                textColor=\"primary\"\r\n                                onChange={this.onChangeTab(editorContext)}\r\n                                aria-label=\"disabled tabs example\"\r\n                            >\r\n                                {\r\n                                    editorContext.editor.breakpointmanager.breakpoints.map((bpData, index) => {\r\n                                        return (\r\n                                            <Tab\r\n                                                key={bpData.name}\r\n                                                className=\"EditorHeaderBreakpointsTab\"\r\n                                                label={getBreakpointIcon(bpData)}\r\n                                                value={bpData.name}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </Tabs>\r\n                        }\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <IconButton\r\n                                buttonBaseStyle={{marginLeft: 10}}\r\n                                onClick={(e) => {\r\n                                    this.setState({settingAnchor: e.currentTarget});\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={18}\r\n                                    height={18}\r\n                                    src={process.env.PUBLIC_URL + '/static/icon/open-menu.svg'}\r\n                                />\r\n                            </IconButton>\r\n                        }\r\n\r\n                        <div style={{\r\n                            backgroundColor: \"#cfcfcf\",\r\n                            height: \"auto\",\r\n                            width: 1,\r\n                            marginLeft: 10\r\n                        }}>\r\n\r\n                        </div>\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <>\r\n                                <span\r\n                                    style={{\r\n                                        marginLeft: 10,\r\n                                        display:\"flex\",\r\n                                        alignItems: \"center\",\r\n                                        fontSize: 12\r\n                                    }}\r\n                                >\r\n                                    Width\r\n                                </span>\r\n                                <NumberInputEnterToChange\r\n                                    inputStyle={{\r\n                                        marginLeft: 10\r\n                                    }}\r\n                                    min={editorContext.editor.breakpointmanager.getMinWidth()}\r\n                                    max={9999}\r\n                                    value={editorContext.editor.rootLayoutRef.current.getSize(false).width}\r\n                                    onChange={(width) => {\r\n                                        editorContext.setPageSizeWidth(width);\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n\r\n                        {\r\n                            this.state.settingAnchor &&\r\n                            <EditorHeaderBreakpointsSetting\r\n                                anchorEl={this.state.settingAnchor}\r\n                                onClose={(e) => {\r\n                                    this.setState({settingAnchor: undefined});\r\n                                }}\r\n                            />\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\n\r\nexport default class EditorHeader extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onInspectorClickState: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    setRightMenuOpen = (openMenu, state) => {\r\n        let changedState = {};\r\n        [\r\n            \"onAddComponentClick\",\r\n            \"onThemeManagerClick\",\r\n            \"onPageManagerClick\"\r\n        ].forEach(name => {\r\n            if (this.state[`${name}State`] && `${name}State` !== openMenu) {\r\n                console.log(\"setRightMenuOpen\", name);\r\n                this.props[name](true);\r\n            }\r\n\r\n            changedState[`${name}State`] = false;\r\n        });\r\n        this.setState({\r\n            ...changedState,\r\n            [openMenu]: state\r\n        });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"EditorHeaderRoot\" style={{\r\n                width: `${this.context.zoomScale*100}%`,\r\n            }}>\r\n                <div className=\"EditorHeaderRightShortcuts\">\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.addComponent.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"addComponent\");\r\n                            // let onAddComponentClickState = this.props.onAddComponentClick();\r\n                            // this.setRightMenuOpen(\"onAddComponentClickState\", onAddComponentClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/add.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.pageManager.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"pageManager\");\r\n                            // let onPageManagerClickState = this.props.onPageManagerClick();\r\n                            // this.setRightMenuOpen(\"onPageManagerClickState\", onPageManagerClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/page.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.themeManager.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"themeManager\");\r\n                            // let onThemeManagerClickState = this.props.onThemeManagerClick();\r\n                            // this.setRightMenuOpen(\"onThemeManagerClickState\", onThemeManagerClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/water.svg'}\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"EditorHeaderCenterShortcuts\">\r\n                    <EditorHeaderPageSelect\r\n                        className=\"EditorHeaderCenterDiv\"\r\n                        style={{\r\n                            width: 200\r\n                        }}\r\n                    />\r\n                    <EditorHeaderBreakpoints\r\n                        className=\"EditorHeaderCenterDiv EditorHeaderLastCenterDiv EditorHeaderBreakpoints\"\r\n                    />\r\n                </div>\r\n                <div className=\"EditorHeaderLeftShortcuts\">\r\n                    <IconButton\r\n                        buttonBaseStyle={{\r\n                            marginLeft: 0,\r\n                            marginRight: 10,\r\n                            backgroundColor: this.state.onInspectorClickState && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            let onInspectorClickState = this.props.onInspectorClick(e);\r\n                            this.setState({onInspectorClickState})\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/inspector.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <EditorHeaderZoom\r\n                        onZoomChange={(zoomScale) => {\r\n                            this.props.onPageZoomChange(zoomScale);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PreviewHeaderBreakpoints.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport {getBreakpointIcon, getBreakpointName} from \"./BreakpointHelper\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\n\r\nexport default class PreviewHeaderBreakpoints extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lastBpData: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getCurrentValue = (editorContext) => {\r\n        if (!editorContext.editor.rootLayoutRef.current)\r\n            return \"...\";\r\n\r\n        let width = editorContext.editor.rootLayoutRef.current.getSize(false).width;\r\n\r\n        let bpData = this.getOptions(editorContext).filter(bpData => {\r\n            console.log(\"getCurrentValue\", bpData.name, bpData.type, bpData.start, width, bpData.type === 'device' && bpData.start === width)\r\n            return bpData.type === 'device' && bpData.start === width;\r\n        })[0];\r\n\r\n        if (bpData) {\r\n            return (this.state.lastBpData && this.state.lastBpData.type === \"device\" && this.state.lastBpData) || bpData;\r\n        }\r\n\r\n        return editorContext.editor.breakpointmanager.currentBpData(width);\r\n    };\r\n\r\n    getOptions = (editorContext) => {\r\n        let options = [{\r\n            title: \"Page Breakpoints\", disabled:true\r\n        }];\r\n\r\n        if (!editorContext.editor.breakpointmanager) return [];\r\n\r\n        let breakpoints = editorContext.editor.breakpointmanager.getSortedBreakPoints().reverse();\r\n\r\n        breakpoints.forEach(bpData => {\r\n            options.push(bpData);\r\n        });\r\n\r\n        options.push({\r\n            title: \"Common Devices\", disabled:true\r\n        });\r\n\r\n        (this.props.devices || []).sort((a, b) => {\r\n            if (a.start > b.start) {\r\n                return -1;\r\n            } else if (a.start === b.start) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        }).forEach(bpData => {\r\n            bpData.type = 'device';\r\n            options.push(bpData);\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        <DropDown\r\n                            options={editorContext.siteData ? this.getOptions(editorContext) : [\"...\"]}\r\n                            onChange={(bpData) => {\r\n                                this.setState({lastBpData: bpData});\r\n                                editorContext.setPageSizeWidth(bpData.prefer || bpData.start);\r\n                            }}\r\n                            value={editorContext.pageData ? this.getCurrentValue(editorContext) : \"...\"}\r\n                            spanStyle={{\r\n                                width: 256,\r\n                                fontSize: 14,\r\n                                border: \"0px solid #cfcfcf\",\r\n                            }}\r\n                            renderer={(bpData) => {\r\n                                return (\r\n                                    <div className=\"PreviewHeaderBreakpointsRenderer\">\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererIcon\">\r\n                                                {\r\n                                                    getBreakpointIcon(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererName\">\r\n                                                {\r\n                                                    bpData.type === 'device' ? bpData.name :\r\n                                                    getBreakpointName(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererSize\">\r\n                                                {\r\n                                                    bpData.start + \" px\"\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            !bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererTitle\">\r\n                                                {\r\n                                                    bpData.title\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                            valueRenderer={(bpData) => {\r\n                                return (\r\n                                    <div className=\"PreviewHeaderBreakpointsRenderer\">\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererIcon\">\r\n                                                {\r\n                                                    getBreakpointIcon(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererName\">\r\n                                                {\r\n                                                    bpData.type === 'device' ? bpData.name :\r\n                                                    getBreakpointName(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            !bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererTitle\">\r\n                                                {\r\n                                                    bpData.title\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        />\r\n\r\n                        <div style={{\r\n                            backgroundColor: \"#cfcfcf\",\r\n                            height: \"auto\",\r\n                            width: 1,\r\n                            marginLeft: 10\r\n                        }}>\r\n\r\n                        </div>\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <>\r\n                                <span\r\n                                    style={{\r\n                                        marginLeft: 10,\r\n                                        display:\"flex\",\r\n                                        alignItems: \"center\",\r\n                                        fontSize: 12\r\n                                    }}\r\n                                >\r\n                                    Width\r\n                                </span>\r\n                                <NumberInputEnterToChange\r\n                                    inputStyle={{\r\n                                        marginLeft: 10\r\n                                    }}\r\n                                    min={editorContext.editor.breakpointmanager.getMinWidth()}\r\n                                    max={9999}\r\n                                    value={editorContext.editor.rootLayoutRef.current.getSize(false).width}\r\n                                    onChange={(width) => {\r\n                                        editorContext.setPageSizeWidth(width);\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport PreviewHeaderBreakpoints from \"./Breakpoints/PreviewHeaderBreakpoints\";\r\nimport {getCommonDevices} from \"./Breakpoints/BreakpointHelper\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport default class PreviewHeader extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"EditorHeaderRoot\" style={{\r\n                width: `${this.context.zoomScale*100}%`,\r\n            }}>\r\n                <div className=\"EditorHeaderRightShortcuts\">\r\n                </div>\r\n                <div className=\"EditorHeaderCenterShortcuts\">\r\n                    <EditorHeaderPageSelect\r\n                        className=\"EditorHeaderCenterDiv\"\r\n                        style={{\r\n                            width: 200\r\n                        }}\r\n                    />\r\n                    <PreviewHeaderBreakpoints\r\n                        className=\"EditorHeaderCenterDiv EditorHeaderLastCenterDiv EditorHeaderBreakpoints\"\r\n                        devices={getCommonDevices()}\r\n                    />\r\n                </div>\r\n                <div className=\"PreviewHeaderLeftShortcuts\">\r\n                    <Button className=\"PublishButton\" onClick={() => {\r\n                        this.context.sendPublishCommand();\r\n                    }}>\r\n                        Publish\r\n                    </Button>\r\n                    <Button className=\"PreviewButton\" onClick={() => {\r\n                        this.context.sendEditCommand();\r\n                    }}>\r\n                        Edit\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport DropDown from \"../Menus/CommonComponents/DropDown\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\nimport {getScrollbarWidth} from \"../AwesomeGridLayoutUtils\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\n\r\nexport default class PageView extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        if (this.context.production) {\r\n            return (\r\n                this.props.children\r\n            )\r\n        } else {\r\n            return (\r\n                <div\r\n                    className=\"EditorBoundaryPageHolder\"\r\n                    style={{\r\n                        // TODO add scale support\r\n                        padding: \"0 50px\"\r\n                    }}\r\n                    onScroll={this.props.onScrollBoundary}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"EditorBoundaryPageHolderHover\"\r\n                        style={{\r\n                            bottom: getScrollbarWidth()\r\n                        }}\r\n                        onClick={() => {\r\n                            this.props.rootLayoutRef.current.onSelect(true);\r\n                        }}\r\n                    />\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport BreakPointManager from \"../BreakPointManager\";\r\nimport DragDropManager from \"../DragDropManager\";\r\nimport InputManager from \"../InputManager\";\r\nimport SelectManager from \"../SelectManager\";\r\nimport SnapManager from \"../SnapManager\";\r\nimport CopyManager from \"../CopyManager\";\r\nimport IdManager from \"../IdManager\";\r\nimport UndoRedo from \"../UndoRedo\";\r\nimport GridLineManager from \"../GridLineManager\";\r\nimport AnchorManager from \"../AnchorManager\";\r\nimport {initDynamicAnimations, initDynamicComponents} from \"../Dynamic/DynamicComponents\";\r\nimport AdjustmentGrid from \"../Adjustment/AdjustmentGrid\";\r\nimport AdjustmentSnap from \"../Adjustment/AdjustmentSnap\";\r\nimport AdjustmentGridLines from \"../Adjustment/AdjustmentGridLines\";\r\nimport AdjustmentGroupRect from \"../Adjustment/AdjustmentGroupRect\";\r\nimport MenuHolder from \"../Menus/MenuHolder\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport './EditorBoundary.css';\r\nimport IFrameCommunicator from \"../Test/IFrameCommunicator\";\r\nimport EditorController from \"../Test/EditorController\";\r\nimport Inspector from \"../Test/Inspector/Inspector\";\r\nimport AdjustmentResizeWrapper from \"../Adjustment/AdjustmentResizeWrapper\";\r\nimport AdjustmentHelpLinesWrapper from \"../Adjustment/AdjustmentHelpLinesWrapper\";\r\nimport AdjustmentHover from \"../Adjustment/AdjustmentHover\";\r\nimport {cloneObject} from \"../AwesomeGridLayoutUtils\";\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from \"lodash.throttle\";\r\nimport Layout from \"../Test/Layout/Layout\";\r\nimport AddComponent from \"../Test/AddComponent/AddComponent\";\r\nimport PageManager from \"../Test/PageManager/PageManager\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport ThemeManager from \"../Test/Theme/ThemeManager\";\r\nimport defaultSiteData from \"../../data/defaultSiteData.json\";\r\nimport defaultAllComponentData from \"../../data/allComponentData.json\";\r\nimport EditorHeader from \"./EditorHeader\";\r\nimport PreviewHeader from \"./PreviewHeader\";\r\nimport PageView from \"./PageView\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class EditorBoundary extends React.Component{\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            preview: true\r\n        };\r\n\r\n        this.init(props);\r\n    }\r\n\r\n    // Declare all managers & refs\r\n    init = (props) => {\r\n        this.rootLayoutRef = React.createRef();\r\n        this.snapSvgRef = React.createRef();\r\n        this.gridContainerRef = React.createRef();\r\n        this.gridEditorRef = React.createRef();\r\n        this.groupSelectRef = React.createRef();\r\n        this.miniMenuHolderRef = React.createRef();\r\n        this.resizeRef = React.createRef();\r\n        this.helpLinesRef = React.createRef();\r\n        this.inspectorRef = React.createRef();\r\n        this.hoverRef = React.createRef();\r\n        this.layoutRef = React.createRef();\r\n        this.addComponentRef = React.createRef();\r\n        this.pageManagerRef = React.createRef();\r\n        this.themeManagerRef = React.createRef();\r\n        this.dragdrop = new DragDropManager();\r\n        this.inputManager = new InputManager();\r\n        this.select = new SelectManager(this.inputManager, this.groupSelectRef,\r\n            this.rootLayoutRef, this.miniMenuHolderRef, this.inspectorRef, this.resizeRef,\r\n            this.helpLinesRef, this.hoverRef);\r\n        this.snap = new SnapManager(5, this.snapSvgRef);\r\n        this.copyMan = new CopyManager(this.select, this.rootLayoutRef);\r\n        this.idMan = new IdManager('comp');\r\n        this.undoredo = new UndoRedo(100, document, this.idMan);\r\n        this.gridLine = new GridLineManager(this.gridContainerRef);\r\n        this.anchorMan = new AnchorManager();\r\n\r\n        initDynamicComponents();\r\n        initDynamicAnimations();\r\n\r\n        this.iFrameCommunicator = new IFrameCommunicator(undefined, \"WeblancerIFrameCommunicator\",\r\n            window.parent, this.onMessage);\r\n\r\n        // TODO test, clean them after test finished\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 80 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + P\");\r\n                this.pinInspector();\r\n            }\r\n            if ( key === 76 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + L\");\r\n                this.toggleThemeManager(true);\r\n            }\r\n            if ( key === 79 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + O\");\r\n                this.toggleThemeManager(false);\r\n            }\r\n            if ( key === 69 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + E\");\r\n                this.exportSiteData();\r\n            }\r\n        });\r\n\r\n\r\n    };\r\n\r\n    initContext = () => {\r\n        this.context.initContext({\r\n            editor: this,\r\n            rightMenus: {\r\n                addComponent: {\r\n                    state: false,\r\n                    toggle: this.toggleAddComponent\r\n                },\r\n                pageManager: {\r\n                    state: false,\r\n                    toggle: this.togglePageManager\r\n                },\r\n                themeManager: {\r\n                    state: false,\r\n                    toggle: this.toggleThemeManager\r\n                }\r\n            }\r\n        });\r\n\r\n        this.select.setContext(this.context);\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.initContext();\r\n        this.loadSiteData();\r\n    }\r\n\r\n    loadSiteData = () => {\r\n        fetch(process.env.PUBLIC_URL + '/static/json/env.json').then((res) => res.json())\r\n        .then((data) => {\r\n            if (data.value === 'editor') {\r\n                this.postMessage({\r\n                    type: \"Holder\",\r\n                    func: \"onEditorMounted\",\r\n                    inputs: []\r\n                }, (data) => {\r\n                    console.log(\"componentDidMount initFromHolder\", data);\r\n                    this.initFromHolder(data.result);\r\n                });\r\n            } else {\r\n                fetch(process.env.PUBLIC_URL + '/static/json/siteData.json').then((res) => res.json())\r\n                    .then((siteData) => {\r\n                        this.context.setProduction(() => {\r\n                            this.onSiteDataUpdated(siteData);\r\n                        });\r\n                    }).catch(err => {\r\n                    console.log(\"loadSiteData error\", err);\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"loadSiteData error\", err);\r\n        })\r\n    };\r\n\r\n    initFromHolder = (data) => {\r\n        this.onSetZoomScale(data.zoomScale);\r\n    };\r\n\r\n    onMessage = (data, res) => {\r\n        EditorController.onMessage(data, res, this);\r\n    };\r\n\r\n    postMessage = (data, callback) => {\r\n        this.iFrameCommunicator.post(data, callback);\r\n    };\r\n\r\n    setPreview = (preview, callback) => {\r\n        callback && callback();\r\n        this.context.setPreview(preview);\r\n    }\r\n\r\n    testWebsite = () => {\r\n        let siteData = cloneObject(defaultSiteData);\r\n        let allComponentData = cloneObject(defaultAllComponentData);\r\n\r\n        this.onComponentDataUpdated(allComponentData);\r\n        this.onSiteDataUpdated(siteData);\r\n    };\r\n\r\n    onSiteDataUpdated = (siteData) => {\r\n        if (!siteData) {\r\n            siteData = cloneObject(defaultSiteData);\r\n        }\r\n        // siteData = cloneObject(defaultSiteData);\r\n\r\n        this.context.setSiteData(siteData, () => {\r\n            let pageData = siteData.allPages[Object.keys(siteData.allPages)[0]];\r\n            this.context.setPageData(pageData.props.pageId, false, this.onHeightChange);\r\n        });\r\n\r\n        // TODO Test\r\n        let allComponentData = cloneObject(defaultAllComponentData);\r\n        this.onComponentDataUpdated(allComponentData);\r\n    };\r\n\r\n    setBreakpoints = (breakpoints) => {\r\n        this.breakpointmanager = new BreakPointManager(breakpoints, this,\r\n            undefined, this.onZoomLevelChange,\r\n            this.onHeightChange, this.onResize);\r\n    }\r\n\r\n    onComponentDataUpdated = (allComponentData) => {\r\n        this.setState({allComponentData});\r\n    };\r\n\r\n    onPageChange = (pageId, force) => {\r\n        if (!force && this.context.pageData.props.pageId === pageId) {\r\n            return;\r\n        }\r\n\r\n        console.log(\"onPageChange\");\r\n        this.rootLayoutRef.current.onSelect(true, () => {\r\n            this.idMan.clear();\r\n\r\n            this.context.setPageData(undefined , () => {\r\n                let pageData = this.context.siteData.allPages[pageId];\r\n                this.context.setPageData(pageData);\r\n            });\r\n        });\r\n    };\r\n\r\n    togglePreview = (preview) => {\r\n        this.setState({preview});\r\n    };\r\n\r\n    setZoomLevel = (zoomLevel) => {\r\n        this.setState({zoomLevel: zoomLevel || 100});\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.breakpointmanager.dispose();\r\n    }\r\n\r\n    onPageZoomChange = (zoomScale) => {\r\n        this.postMessage({\r\n            type: \"Holder\",\r\n            func: \"changePageZoom\",\r\n            inputs: [zoomScale]\r\n        }, (data) => {\r\n            this.onSetZoomScale(data.result)\r\n        });\r\n    };\r\n\r\n    onSetZoomScale = (zoomScale) => {\r\n        document.documentElement.style.setProperty('--zoom-scale', zoomScale);\r\n\r\n        this.context.setZoomScale(zoomScale, this.onZoomLevelChange);\r\n    };\r\n\r\n    // Just in editor\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.rootLayoutRef.current)\r\n            width = this.rootLayoutRef.current.getSize(false).width;\r\n\r\n        this.onPageResize(width, this.rootLayoutRef.current);\r\n    };\r\n\r\n    notifyBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        this.rootLayoutRef.current.props.aglComponent.updateTemplates();\r\n        this.rootLayoutRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n    };\r\n\r\n    onZoomLevelChange = (newDevicePixelRatio) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n        !this.isPreview() && this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() && this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n    };\r\n\r\n    isPreview = () => {\r\n        return this.context.preview;\r\n    }\r\n\r\n    onHeightChange = (e) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n        this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() && this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n        this.rootLayoutRef.current.updateLayout();\r\n\r\n        this.onResize(e);\r\n    };\r\n\r\n    toggleInspector = () => {\r\n        return this.inspectorRef.current.toggle();\r\n    };\r\n\r\n    pinInspector = () => {\r\n        this.context.setInspectorPinned(!this.context.inspectorPinned, () => {\r\n            this.select.onScrollItem();\r\n            this.rootLayoutRef.current.invalidateSize();\r\n        });\r\n\r\n        // this.editorData.innerWidth = window.innerWidth -\r\n        // this.context.inspectorPinned ? this.context.inspectorWidth : 0;\r\n\r\n        this.onScrollBoundary();\r\n        this.rootLayoutRef.current.updateLayout();\r\n    };\r\n\r\n    onPageResize = (width, pageAgl, force) => {\r\n        let result = this.breakpointmanager.checkBreakPointChange(width);\r\n\r\n        this.onResize(undefined, width);\r\n\r\n        console.log(\"onPageResize\", width)\r\n        this.context.setPageSizeWidth(width);\r\n\r\n        if (result.changed || force) {\r\n            this.notifyBreakpointChange(width, result.currentBreakpointName,\r\n                this.breakpointmanager.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onResize = (e, width) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        this.onResizeD(e, width);\r\n        this.onResizeT(e, width);\r\n    };\r\n\r\n    onResizeD = debounce((e, width) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        if (!width)\r\n            width = this.rootLayoutRef.current.getSize(false, true).width;\r\n        document.documentElement.style.setProperty('--vw-ratio', width / window.innerWidth);\r\n    }, 100);\r\n\r\n    onResizeT = throttle((e, width) => {\r\n        if (!width)\r\n            width = this.rootLayoutRef.current.getSize(false, true).width;\r\n\r\n        document.documentElement.style.setProperty('--vw-ratio', width / window.innerWidth);\r\n    }, 100);\r\n\r\n    onPageResizeStart = () => {\r\n        if (this.isPreview()) return;\r\n        this.resizeRef.current.activate(false);\r\n        this.helpLinesRef.current.activate(false);\r\n        this.miniMenuHolderRef.current.activate(false);\r\n    };\r\n\r\n    onPageResizeStop = () => {\r\n        if (this.isPreview()) return;\r\n        this.resizeRef.current.activate(true);\r\n        this.helpLinesRef.current.activate(true);\r\n        this.miniMenuHolderRef.current.activate(true);\r\n    };\r\n\r\n    onScrollBoundary = (e) => {\r\n        !this.isPreview() && this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() &&this.select.onScrollItem();\r\n\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n    };\r\n\r\n    updateLayout = () => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        let layout = [];\r\n\r\n        let getLayoutItem = (item, childData) => {\r\n            if (!item || !item.mounted)\r\n                return;\r\n\r\n            return {\r\n                id: childData.props.id,\r\n                childData: childData,\r\n                childrenData: Object.keys(item.getFromTempData(\"savedChildren\")).map(childId => {\r\n                    let childData = item.getFromTempData(\"savedChildren\")[childId];\r\n                    return getLayoutItem(\r\n                        item.allChildRefs[childId].current,\r\n                        childData\r\n                    );\r\n                }).filter(il => {\r\n                    return il;\r\n                })\r\n            };\r\n        };\r\n\r\n        let pageChildData = {\r\n            tagName: this.rootLayoutRef.current.props.tagName,\r\n            props: this.rootLayoutRef.current.getClearProps({...this.rootLayoutRef.current.props}),\r\n            zIndex: 0\r\n        };\r\n\r\n        layout.push(getLayoutItem(this.rootLayoutRef.current, pageChildData));\r\n\r\n        this.layoutRef.current.setLayout(layout);\r\n    };\r\n\r\n    openLayout = () => {\r\n        this.layoutRef.current.open();\r\n    };\r\n\r\n    closeLayout = () => {\r\n        this.layoutRef.current.close();\r\n    };\r\n\r\n    toggleAddComponent = (force, state) => {\r\n        if (state === true) {\r\n            this.addComponentRef.current.open();\r\n            return true;\r\n        }\r\n        return this.addComponentRef.current.toggle(force);\r\n    };\r\n\r\n    togglePageManager = (force, state) => {\r\n        if (state === true) {\r\n            this.pageManagerRef.current.open();\r\n            return true;\r\n        }\r\n        return this.pageManagerRef.current.toggle(force);\r\n    };\r\n\r\n    toggleThemeManager = (force, state) => {\r\n        if (state === true) {\r\n            this.themeManagerRef.current.open();\r\n            return true;\r\n        }\r\n        return this.themeManagerRef.current.toggle(force);\r\n    };\r\n\r\n    // pageData is a childData that is for PageBase component\r\n    getLivePageData = () => {\r\n        return {\r\n            tagName: \"PageBase\",\r\n            props: this.rootLayoutRef.current.getClearProps({...this.rootLayoutRef.current.props})\r\n        };\r\n    };\r\n\r\n    getLiveSiteData = () => {\r\n        let siteData = this.context.siteData || {allPages: {}};\r\n\r\n        siteData.allPages[uuidv4()] = this.getLivePageData();\r\n\r\n        return siteData;\r\n    };\r\n\r\n    exportSiteData = () => {\r\n        let siteData = this.getLiveSiteData();\r\n\r\n        const fileName = \"siteData\";\r\n        const json = JSON.stringify(siteData);\r\n        const blob = new Blob([json],{type:'application/json'});\r\n        const href = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = href;\r\n        link.download = fileName + \".json\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    getSiteData = (callback) => {\r\n        callback && callback(this.context.siteData);\r\n        return this.context.siteData;\r\n    }\r\n\r\n    isProduction = () => {\r\n        return this.context.production;\r\n    }\r\n\r\n    render() {\r\n        // TODO if this.context.siteData not loaded, show loading component\r\n        let borderClassess = classNames(\r\n            \"PageBaseWhiteBackground\",\r\n            this.context.production ? \"PageBaseWhiteBackgroundHeightProduction\" : \"PageBaseWhiteBackgroundHeightEditor\",\r\n        );\r\n        if (this.context.pageData) {\r\n            return (\r\n                <div className=\"EditorBoundaryRoot\" onContextMenu={(e) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }}>\r\n                    {\r\n                        !this.isPreview() && !this.isProduction() &&\r\n                        <div className=\"EditorBoundaryHeader\">\r\n                            <EditorHeader\r\n                                onAddComponentClick={this.toggleAddComponent}\r\n                                onInspectorClick={this.toggleInspector}\r\n                                onThemeManagerClick={this.toggleThemeManager}\r\n                                onPageManagerClick={this.togglePageManager}\r\n                                onPageZoomChange={this.onPageZoomChange}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        this.isPreview() && !this.isProduction() &&\r\n                        <div className=\"EditorBoundaryHeader\">\r\n                            <PreviewHeader\r\n                                onAddComponentClick={this.toggleAddComponent}\r\n                                onInspectorClick={this.toggleInspector}\r\n                                onThemeManagerClick={this.toggleThemeManager}\r\n                                onPageManagerClick={this.togglePageManager}\r\n                                onPageZoomChange={this.onPageZoomChange}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    <div className=\"EditorBoundaryContent\">\r\n                        {\r\n                            !this.isPreview() && !this.isProduction() &&\r\n                            <>\r\n                                <AdjustmentGrid\r\n                                    ref={this.gridEditorRef}\r\n                                />\r\n                                <AdjustmentSnap\r\n                                    ref={this.snapSvgRef}\r\n                                />\r\n                                <AdjustmentGridLines\r\n                                    ref={this.gridContainerRef}\r\n                                />\r\n                                <AdjustmentGroupRect\r\n                                    ref={this.groupSelectRef}\r\n                                />\r\n\r\n                                <PageManager\r\n                                    ref={this.pageManagerRef}\r\n                                    editor={this}\r\n                                    onPageChange={this.onPageChange}\r\n                                />\r\n                            </>\r\n                        }\r\n\r\n                        {\r\n                            this.context.pageData &&\r\n                            <PageView\r\n                                onScrollBoundary={this.onScrollBoundary}\r\n                                rootLayoutRef={this.rootLayoutRef}\r\n                            >\r\n                                <div className={borderClassess} style={{\r\n                                    marginTop: this.context.production? 0 : `${8*this.context.zoomScale}vh`\r\n                                }}>\r\n                                    <PageBase\r\n                                        key={this.context.pageData.props.pageId}\r\n                                        id=\"page\"\r\n                                        aglRef={this.rootLayoutRef}\r\n                                        viewRef={this.rootLayoutRef}\r\n                                        breakpointmanager={this.breakpointmanager}\r\n                                        undoredo={this.undoredo}\r\n                                        dragdrop={this.dragdrop}\r\n                                        select={this.select}\r\n                                        snap={this.snap}\r\n                                        input={this.inputManager}\r\n                                        idMan={this.idMan}\r\n                                        gridLine={this.gridLine}\r\n                                        gridEditorRef={this.gridEditorRef}\r\n                                        anchorMan={this.anchorMan}\r\n                                        copyMan={this.copyMan}\r\n                                        editorData={this.editorData}\r\n                                        onPageResize={this.onPageResize}\r\n                                        onPageResizeStart={this.onPageResizeStart}\r\n                                        onPageResizeStop={this.onPageResizeStop}\r\n                                        editor={!this.isPreview() && this}\r\n                                        devicePixelRatio={this.state.devicePixelRatio}\r\n                                        {...this.context.pageData.props}\r\n                                        pageSize={this.context.pageSize}\r\n                                    />\r\n                                </div>\r\n                            </PageView>\r\n                            /*<div\r\n                                className=\"EditorBoundaryPageHolder\"\r\n                                style={{\r\n                                    // TODO add scale support\r\n                                    padding: \"0 50px\"\r\n                                }}\r\n                                onScroll={this.onScrollBoundary}\r\n                                onContextMenu={(e) => {\r\n                                    e.stopPropagation();\r\n                                    e.preventDefault();\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    className=\"EditorBoundaryPageHolderHover\"\r\n                                    style={{\r\n                                        bottom: getScrollbarWidth()\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        this.rootLayoutRef.current.onSelect(true);\r\n                                    }}\r\n                                />\r\n                                <div className=\"PageBaseWhiteBackground\" style={{\r\n                                    marginTop: `${8*this.context.zoomScale}vh`\r\n                                }}>\r\n                                    <PageBase\r\n                                        key={this.context.pageData.props.pageId}\r\n                                        id=\"page\"\r\n                                        aglRef={this.rootLayoutRef}\r\n                                        viewRef={this.rootLayoutRef}\r\n                                        breakpointmanager={this.breakpointmanager}\r\n                                        undoredo={this.undoredo}\r\n                                        dragdrop={this.dragdrop}\r\n                                        select={this.select}\r\n                                        snap={this.snap}\r\n                                        input={this.inputManager}\r\n                                        idMan={this.idMan}\r\n                                        gridLine={this.gridLine}\r\n                                        gridEditorRef={this.gridEditorRef}\r\n                                        anchorMan={this.anchorMan}\r\n                                        copyMan={this.copyMan}\r\n                                        editorData={this.editorData}\r\n                                        onPageResize={this.onPageResize}\r\n                                        onPageResizeStart={this.onPageResizeStart}\r\n                                        onPageResizeStop={this.onPageResizeStop}\r\n                                        editor={!this.isPreview() && this}\r\n                                        devicePixelRatio={this.state.devicePixelRatio}\r\n                                        {...this.context.pageData.props}\r\n                                        pageSize={this.context.pageSize}\r\n                                    />\r\n                                </div>\r\n                            </div>*/\r\n                        }\r\n\r\n                        {\r\n                            !this.isPreview() && !this.isProduction() &&\r\n                            <>\r\n                                {\r\n                                    !this.context.pageData &&\r\n                                    <div>\r\n                                        {/*Loading...*/}\r\n                                    </div>\r\n                                }\r\n\r\n                                <AdjustmentHover\r\n                                    ref={this.hoverRef}\r\n                                />\r\n\r\n                                <AdjustmentHelpLinesWrapper\r\n                                    ref={this.helpLinesRef}\r\n                                />\r\n\r\n                                <AdjustmentResizeWrapper\r\n                                    ref={this.resizeRef}\r\n                                />\r\n\r\n                                {\r\n                                    this.context.pageData &&\r\n                                    <Layout\r\n                                        ref={this.layoutRef}\r\n                                        idMan={this.idMan}\r\n                                    />\r\n                                }\r\n\r\n                                {\r\n                                    this.context.siteData &&\r\n                                    this.context.pageData &&\r\n                                    <ThemeManager\r\n                                        ref={this.themeManagerRef}\r\n                                        editor={this}\r\n                                    />\r\n                                }\r\n\r\n                                <AddComponent\r\n                                    ref={this.addComponentRef}\r\n                                    allComponentData={this.state.allComponentData}\r\n                                    pageRef={this.rootLayoutRef}\r\n                                    editor={this}\r\n                                />\r\n\r\n                                <Inspector\r\n                                    ref={this.inspectorRef}\r\n                                    pinInspector={this.pinInspector}\r\n                                />\r\n                                <MenuHolder\r\n                                    ref={this.miniMenuHolderRef}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport EditorBoundary from \"./AwesomeGridLayout/Editor/EditorBoundary\";\r\nimport EditorContextProvider from \"./AwesomeGridLayout/Editor/EditorContext\";\r\n\r\nReactDOM.render(\r\n    <EditorContextProvider>\r\n        <EditorBoundary />\r\n    </EditorContextProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/close.ebf2f3f4.svg\";"],"sourceRoot":""}