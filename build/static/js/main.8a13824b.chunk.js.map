{"version":3,"sources":["AwesomeGridLayout/icons/paint.svg","AwesomeGridLayout/icons/errorred.svg","AwesomeGridLayout/icons/align-left.svg","AwesomeGridLayout/icons/align-center.svg","AwesomeGridLayout/icons/align-right.svg","AwesomeGridLayout/Adjustment/icons/plus.svg","AwesomeGridLayout/icons/align-top.svg","AwesomeGridLayout/icons/align-middle.svg","AwesomeGridLayout/icons/align-bottom.svg","AwesomeGridLayout/icons/chain.svg","AwesomeGridLayout/icons/unlink.svg","AwesomeGridLayout/icons/linkblue.svg","AwesomeGridLayout/icons/linkdisable.svg","AwesomeGridLayout/icons/link.svg","AwesomeGridLayout/icons/textwhite.svg","AwesomeGridLayout/icons/more.svg","AwesomeGridLayout/icons/question.svg","AwesomeGridLayout/Adjustment/icons/minimize.svg","AwesomeGridLayout/Adjustment/icons/maximize.svg","AwesomeGridLayout/icons/close.svg","AwesomeGridLayout/icons/cloudupload.svg","AwesomeGridLayout/icons/folderback.svg","AwesomeGridLayout/icons/folder.svg","AwesomeGridLayout/icons/file.svg","serviceWorker.js","AwesomeGridLayout/AwesomeGridLayoutUtils.js","AwesomeGridLayout/BreakPointManager.js","AwesomeGridLayout/Editor/EditorContext.js","AwesomeGridLayout/DragDropManager.js","AwesomeGridLayout/GridChildContainerChildren.js","AwesomeGridLayout/Test/Inspector/InspectorBreadcrumbs.js","AwesomeGridLayout/HelperComponents/IconButton.js","AwesomeGridLayout/Test/Inspector/InspectorAligns.js","AwesomeGridLayout/AwesomwGridLayoutHelper.js","AwesomeGridLayout/Menus/CommonComponents/NumberInputWithUnit.js","AwesomeGridLayout/Test/Inspector/InspectorTitle.js","AwesomeGridLayout/Test/Inspector/InspectorSize.js","AwesomeGridLayout/Test/Inspector/DockSwitch.js","AwesomeGridLayout/Test/Inspector/InspectorPosition.js","AwesomeGridLayout/Menus/CommonComponents/DropDown.js","AwesomeGridLayout/Menus/CommonComponents/NumberInput.js","AwesomeGridLayout/Test/Inspector/InspectorScroll.js","AwesomeGridLayout/Test/Inspector/InspectorPadding.js","AwesomeGridLayout/Test/Inspector/InspectorOverflow.js","AwesomeGridLayout/Menus/CommonComponents/TextInput.js","AwesomeGridLayout/Test/Inspector/InspectorAnchor.js","AwesomeGridLayout/Test/Inspector/InspectorAdjustment.js","AwesomeGridLayout/Components/Helpers/AGLComponent.js","AwesomeGridLayout/Menus/MenuBase/MenuButton.js","AwesomeGridLayout/Menus/MenuBase/MenuBaseIndexTitle.js","AwesomeGridLayout/Components/Containers/Menus/Components/LightTooltip.js","AwesomeGridLayout/Menus/MenuBase/MenuBase.js","AwesomeGridLayout/Menus/CommonComponents/Slider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInputControlled.js","AwesomeGridLayout/Menus/CommonComponents/Image.js","AwesomeGridLayout/Portal.js","AwesomeGridLayout/Test/Theme/HexColorPicker.js","AwesomeGridLayout/Test/Theme/ThemeColorPicker.js","AwesomeGridLayout/Menus/CommonComponents/ColorPicker.js","AwesomeGridLayout/Components/Containers/Menus/Components/Background.js","AwesomeGridLayout/Menus/CommonComponents/Divider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInput.js","AwesomeGridLayout/Components/Containers/Menus/Components/Border.js","AwesomeGridLayout/Components/Containers/Menus/Components/Corners.js","AwesomeGridLayout/Menus/CommonComponents/CircularSlider.js","AwesomeGridLayout/Menus/CommonComponents/Angle.js","AwesomeGridLayout/Components/Containers/Menus/Components/Shadow.js","AwesomeGridLayout/Components/Containers/Menus/BorderDesign.js","AwesomeGridLayout/Menus/CommonComponents/GridViewer.js","AwesomeGridLayout/Components/Containers/Menus/Components/AnimationSelector.js","AwesomeGridLayout/Components/Containers/Menus/Components/AnimationOptions.js","AwesomeGridLayout/Components/Containers/Menus/AnimationDesign.js","AwesomeGridLayout/Components/Text/TextHelper.js","AwesomeGridLayout/Components/Text/Menus/components/LinkHelper.js","AwesomeGridLayout/Components/Containers/ContainerBase.js","AwesomeGridLayout/Components/Containers/Menus/SectionDesign.js","AwesomeGridLayout/Components/Containers/Header.js","AwesomeGridLayout/Components/Containers/Footer.js","AwesomeGridLayout/Components/Containers/Section.js","AwesomeGridLayout/Test/Inspector/InspectorBackground.js","AwesomeGridLayout/Components/Pages/PageBase.js","AwesomeGridLayout/Components/Stack/VerticalSpacer.js","AwesomeGridLayout/Test/Animations/FadeInAnimation.js","AwesomeGridLayout/Test/Animations/BounceInAnimation.js","AwesomeGridLayout/Test/Animations/GlideInAnimation.js","AwesomeGridLayout/Test/Animations/FloatInAnimation.js","AwesomeGridLayout/Test/Animations/ExpandInAnimation.js","AwesomeGridLayout/Test/Animations/SpinInAnimation.js","AwesomeGridLayout/Test/Animations/FlyInAnimation.js","AwesomeGridLayout/Test/Animations/TurnInAnimation.js","AwesomeGridLayout/Test/Animations/ArcInAnimation.js","AwesomeGridLayout/Test/Animations/PuffInAnimation.js","AwesomeGridLayout/Test/Animations/FoldInAnimation.js","AwesomeGridLayout/Test/Animations/FlipInAnimation.js","AwesomeGridLayout/Test/Animations/RevealAnimation.js","AwesomeGridLayout/Components/Text/Menus/InputDiv.js","AwesomeGridLayout/Components/Text/Menus/InputWrapper.js","AwesomeGridLayout/Components/Text/Menus/TextEditorButton.js","AwesomeGridLayout/Components/Text/Menus/components/FontSizeAutoComplete.js","AwesomeGridLayout/Components/Text/Menus/components/FontSizeSelector.js","AwesomeGridLayout/Components/Text/Menus/components/TextColorSelector.js","AwesomeGridLayout/HelperComponents/SmallRadio.js","AwesomeGridLayout/Components/Text/Menus/components/LinkGenerator.js","AwesomeGridLayout/Components/Text/Menus/TextEditor.js","AwesomeGridLayout/Components/Text/TextWrapper.js","AwesomeGridLayout/Components/Text/Text.js","AwesomeGridLayout/Menus/CommonMenus/ColorAdjustment.js","AwesomeGridLayout/Components/Button/Menus/ButtonDesign.js","AwesomeGridLayout/Components/Button/Menus/FontSizeSelector2.js","AwesomeGridLayout/Components/Button/Menus/ButtonTextAppearance.js","AwesomeGridLayout/Components/Button/Menus/ButtonTextLayout.js","AwesomeGridLayout/Components/Button/Menus/TextDesign.js","AwesomeGridLayout/Components/Button/Button.js","AwesomeGridLayout/Components/Image/Image.js","AwesomeGridLayout/Dynamic/DynamicComponents.js","AwesomeGridLayout/Adjustment/AdjustmentPageControllers.js","AwesomeGridLayout/GridChildContainerFixedHolder.js","AwesomeGridLayout/Test/PaddingInterface.js","AwesomeGridLayout/Test/ParentSelectInterface.js","AwesomeGridLayout/GridChildContainer.js","AwesomeGridLayout/AGLAnchor.js","AwesomeGridLayout/Adjustment/ResizePanePage.js","AwesomeGridLayout/Adjustment/AdjustmentResizePage.js","AwesomeGridLayout/Test/EventTrigger.js","AwesomeGridLayout/Test/WindowCache.js","AwesomeGridLayout/AnimationHolder.js","AwesomeGridLayout/Test/VisibilitySensorWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpSize.js","AwesomeGridLayout/AwesomeGridLayout2.js","AwesomeGridLayout/Components/Helpers/AGLWrapper.js","AwesomeGridLayout/Components/Stack/StackSpacerContainer.js","AwesomeGridLayout/Adjustment/AdjustmentMove.js","AwesomeGridLayout/Components/Stack/StackSpacerResizer.js","AwesomeGridLayout/Components/Stack/StackSpacer.js","AwesomeGridLayout/Components/Stack/Stack.js","AwesomeGridLayout/Test/ContextMenu.js","AwesomeGridLayout/InputManager.js","AwesomeGridLayout/SelectManager.js","AwesomeGridLayout/SnapManager.js","AwesomeGridLayout/CopyManager.js","AwesomeGridLayout/IdManager.js","AwesomeGridLayout/UndoRedo.js","AwesomeGridLayout/GridLineManager.js","AwesomeGridLayout/AnchorManager.js","AwesomeGridLayout/Adjustment/AdjustmentGridRoot.js","AwesomeGridLayout/Adjustment/AdjustmentGridRow.js","AwesomeGridLayout/Adjustment/AdjustmentGrid.js","AwesomeGridLayout/Adjustment/AdjustmentSnapLines.js","AwesomeGridLayout/Adjustment/AdjustmentSnap.js","AwesomeGridLayout/Adjustment/GridLine.js","AwesomeGridLayout/Adjustment/AdjustmentGridLinesWrapper2.js","AwesomeGridLayout/Adjustment/AdjustmentGridLines.js","AwesomeGridLayout/Adjustment/ResizePane.js","AwesomeGridLayout/Adjustment/AdjustmentGroupRect.js","AwesomeGridLayout/Menus/MiniMenu/Components/RightClick.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenuVerticalDivider.js","AwesomeGridLayout/Menus/MiniMenu/Components/Help.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenu.js","AwesomeGridLayout/Menus/MenuHolder.js","AwesomeGridLayout/Test/IFrameCommunicator.js","AwesomeGridLayout/Test/EditorController.js","AwesomeGridLayout/Test/Inspector/Inspector.js","AwesomeGridLayout/Adjustment/AdjustmentStretch.js","AwesomeGridLayout/Adjustment/AdjustmentResize.js","AwesomeGridLayout/Adjustment/AdjustmentResizeWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLines.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLinesWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHover.js","AwesomeGridLayout/Test/Layout/Layout.js","AwesomeGridLayout/Test/AddComponent/ComponentGrid.js","AwesomeGridLayout/Test/AddComponent/AddComponent.js","AwesomeGridLayout/Test/PageManager/PageTypeTitle.js","AwesomeGridLayout/Test/PageManager/PageSetting/PageInfo.js","AwesomeGridLayout/Menus/CommonComponents/AglRadio.js","AwesomeGridLayout/Test/PageManager/PageSetting/Permissions.js","AwesomeGridLayout/Test/PageManager/PageSetting/SeoGoogle.js","AwesomeGridLayout/Test/PageManager/PageSetting/SocialShare.js","AwesomeGridLayout/Test/PageManager/PageSetting/PageSetting.js","AwesomeGridLayout/Test/PageManager/PageItem.js","AwesomeGridLayout/Test/PageManager/AddNewPageDialogItem.js","AwesomeGridLayout/Test/PageManager/AddNewPageDialog.js","AwesomeGridLayout/Test/PageManager/PageManager.js","AwesomeGridLayout/Test/Theme/ThemeTextItem.js","AwesomeGridLayout/Test/Theme/ThemeColorsItem.js","AwesomeGridLayout/Test/Theme/ThemeManager.js","AwesomeGridLayout/Editor/Zoom/EditorHeaderZoom.js","AwesomeGridLayout/Editor/PageSelect/EditorHeaderPageSelect.js","AwesomeGridLayout/Menus/CommonComponents/NumberInputEnterToChange.js","AwesomeGridLayout/Editor/Breakpoints/BreakpointHelper.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpointsSettingItem.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpointsSetting.js","AwesomeGridLayout/Editor/Breakpoints/EditorHeaderBreakpoints.js","AwesomeGridLayout/Editor/EditorHeader.js","AwesomeGridLayout/Editor/Breakpoints/PreviewHeaderBreakpoints.js","AwesomeGridLayout/Editor/PreviewHeader.js","AwesomeGridLayout/Editor/PageView.js","AwesomeGridLayout/Components/FileManager/Components/UploadButton.js","AwesomeGridLayout/Components/FileManager/FileManagerHelper.js","AwesomeGridLayout/Components/FileManager/Components/NewFolder.js","AwesomeGridLayout/Components/FileManager/Components/FileUploader.js","AwesomeGridLayout/Components/FileManager/FileManager.js","AwesomeGridLayout/Editor/EditorBoundary.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initGriddata","griddataProp","breakpointdata","initialized","clone","cloneObject","props","griddata","getDefaultChildgriddata","bpData","exist","props2","prop","hasOwnProperty","k","sample","x","y","w","h","minW","undefined","maxW","minH","maxH","constraints","left","top","right","bottom","margin","all","units","scrollType","absolute","fix","autoHeight","autoWidth","overflowData","state","overflowY","resizable","draggable","hasOwnBreakPoints","isContainer","autoDock","sortedBreakPoints","getSortedBreakPoints","name","obj","Array","copy","i","len","length","Object","attr","shallowEqual","objA","objB","keysA","keys","keysB","throttleDebounce","fn","ms","deTimer","dontCall","_","args","arguments","apply","setTimeout","clearTimeout","scrollbarWidth","getScrollbarWidth","document","div","createElement","css","width","height","position","overflow","MsOverflowStyle","body","appendChild","offsetWidth","clientWidth","removeChild","assignData","newData","assign","JSToCSS","JS","cssString","objectKey","replace","g","toLowerCase","updateStyle","styleNode","style","styleName","innerHTML","styleSheet","cssText","createTextNode","appendStyle","styleId","setAttribute","type","getElementsByTagName","swapArrayElements","arr","indexA","indexB","temp","BreakPointManager","breakpoints","editor","onBreakpointChange","onZoomLevelChange","onHeightChange","onResize","fixBreakpointRules","forEach","end","updateBreakpoint","start","prevBp","bp","find","b","getUpperBreakPoint","push","newBpData","prevBpData","deleteBreakpoint","index","findIndex","splice","fromClone","windowInnerWidth","lastWidth","editorData","copyDesign","designDatas","sourceItem","cloneDesignDatas","getCopyDesign","pasteDesign","item","designData","design","justOneBp","currentBpName","breakpointmanager","current","bpName","getWindowWidth","getWindowHeight","rootLayoutRef","getSize","setWindowWidth","getBpData","getDevicePixelRatio","devicePixelRatio","onDevicePixelRatioChange","changed","onHeightResize","e","lastHeight","innerHeight","onWindowResize","newWidth","innerWidth","context","inspectorPinned","inspectorWidth","result","checkBreakPointChange","currentBreakpointName","lastBreakpointName","size","currentBpData","setData","dataSet","param","value","breakpointName","params","split","override","getFromData","firstParamResult","findFirstUpperBreakPointParam","slice","p","getHighestBpName","getCompositeFromData","results","checkBreakpointName","composite","merge","hasDataInBreakPoint","findFirstUpperBreakPointName","getMinWidth","minSize","filter","sort","a","getDefault","this","addEventListener","removeEventListener","prefer","breakPointData","getColorScheme","baseColor","chroma","luminance","EditorContext","React","createContext","colorKeys","EditorContextProvider","setWebsiteId","websiteId","setState","getThemeColorClass","color","paletteName","key","replaceAll","getThemeBackColorClass","getTheme","category","values","siteData","theme","items","t","getColor","calculateTheme","Colors","force","calculated","scheme","main","calculateColorCSS","doc","colorsCSS","console","log","id","backColor","cssId","getElementById","addCSS","setProduction","callback","production","preview","postMessageToHolder","data","postMessage","sendEditCommand","func","inputs","setPreview","sendPublishCommand","isEditor","pageData","setPageData","idMan","clear","pageId","update","reload","initContext","getInnerWidth","setZoomScale","zoomScale","setSiteData","postSiteData","allPages","setBreakpoints","onSelect","onNewBpAdded","pageChildData","tagName","getClearProps","zIndex","changeGriddata","childData","mounted","getFromTempData","map","childId","allChildRefs","setInspectorPinned","setInspectorWidth","setDevicePixelRatio","setAllComponentData","allComponentData","toggleRightMenu","menuName","rightMenus","toggle","setPageSizeWidth","pageSize","setPageSize","setRightMenus","showLinkGenerator","linkData","onDone","showFileManager","options","getInnerWith","addComponent","pageManager","themeManager","Provider","children","Component","DragDropManager","setDragging","draggingItem","getDragging","isDraggingItemFixed","portalNodeId","setDraggingStop","mouseOver","parent","getParentsId","includes","prepareRects","dropItem","newParent","fromUndoRedo","undoPower","toggleHelpLines","onChildLeave","drop","onChildDrop","newItem","itemId","firstRelativeX","dragData","firstPos","firstRelativeY","parentRect","lastRelativeX","lastRelativeY","newParentRect","parentId","newParentId","undoredo","add","getItem","setMouseOver","setPosition","dragdrop","gridLine","hasGridLine","removeMouseOver","positionData","toggleGridLines","setMouseOverForNonDragging","mouseOverNonDragging","getMouseOverForNonDragging","GridChildContainerChildren","saveState","allChildren","allChildId","allChildIndex","c","z","child","getSorted","getChildren","agl","getChildrenOverride","nextProps","nextState","nextContext","JSON","stringify","InspectorBreadcrumbs","className","reverse","onClick","IconButton","selectStyle","selected","backgroundColor","selectedColor","aria-label","marginLeft","borderRadius","boxSizing","buttonBaseStyle","disabled","ref","rootRef","display","justifyContent","alignItems","padding","imageContainerStyle","icon","InspectorAligns","getButtonsData","horizontal","img","src","require","vertical","alignItem","saveGridItemStyle","setGridItemStyle","select","onScrollItem","gridItemStyle","alignSelf","marginTop","marginBottom","justifySelf","marginRight","baseDocks","getBaseDocks","setDocks","NumberInputWithUnit","inputFilter","oldValue","okay","parseFloat","isNaN","Math","min","max","onChange","target","endsWith","getValue","onShowUnits","anchorEl","currentTarget","round","showUnits","unitIconButton","createRef","classes","classNames","textAlign","inputStyle","unit","unitButtonStyle","disableUnit","unitMenuStyle","open","onClose","MenuListProps","dense","onUnitChange","InspectorTitle","defaultOpen","title","process","InspectorSize","onItemPropsChange","owner","getUnit","getViewRatioStyle","setNewSize","parentValue","defaultValue","getPxValueFromCSSValue","runtimeValueToStyleValue","propName","onPropsChange","addListener","removeListener","runtimeStyle","runtimeGridItemStyle","getRuntimeGridItemStyle","widthForPercent","heightForPercent","Infinity","disabledProps","scrollWidthMinusPadding","widthUnits","scrollHeightMinusPadding","heightUnits","minWidth","maxWidth","minWidthUnits","minHeight","maxHeight","minHeightUnits","maxWidthUnits","maxHeightUnits","defaultProps","DockSwitch","withStyles","root","switchBase","transform","opacity","thumb","boxShadow","track","checked","Switch","InspectorPosition","onDockActiveChange","side","oldDocks","updateHelpLines","helpLinesParent","dragging","onDockAutoChange","setTempData","parentProp","compositeGridItemStyle","onValueChange","getUnitFromStyleValue","updateResizePanes","docks","auto","fontSize","DropDown","option","valueRenderer","renderer","rootStyle","spanStyle","cursor","menuStyle","pointerEvents","menuItemStyle","NumberInput","test","toFixed","InspectorScroll","onChangeScrollEffect","offsetTop","setScrollBehaviour","viewRef","onChangeOffsetTop","behaviour","getValueFromCSSValue","InspectorPadding","compositePadding","setDataInBreakpoint","equalPadding","pxValue","getStyleValueFromPx","invalidateSize","requestAnimationFrame","onEqualPadding","InspectorOverflow","onChangeState","thisBpOverflowData","compositOverflowData","overflowX","newOverflowData","changeScrollDirection","onChangeAuto","ToggleButtonGroup","exclusive","ToggleButton","TextInput","InspectorAnchor","onEnableAnchor","enable","anchor","anchorMan","addAnchor","removeAnchor","onChangeName","newName","modifyAnchor","v","InspectorAdjustment","onRotationChange","degree","warn","rotate","oldDegree","setTransformStyle","updateLayout","AGLComponent","resolveDesignData","getData","componentData","getDefaultData","componentBpData","tempBpData","getAgl","aglRef","onDesignChange","designKey","updateDesign","getCompositeDesignData","getInspector","getInspectorOverride","MenuButton","menu","updateMenu","MenuBaseIndexTitle","disableRipple","onIndexClick","LightTooltip","tooltip","shadows","Tooltip","LightMenuTooltip","MenuBase","close","multiState","states","selectedIndexNo","getDefaultPos","defaultPosition","getOptions","currentState","getIndex","onChangeTab","defaultIndexNo","handle","bounds","styles","menuTitle","indicatorColor","textColor","variant","stateData","label","render","indexData","PopperProps","placement","Slider","step","SliderInputControlled","handleStyle","Image","onError","hasError","errorsrc","Portal","canUseDOM","defaultNode","node","nodeId","ReactDOM","createPortal","HexColorPicker","onChangeComplete","hex","disableAlpha","ThemeColorPicker","onSelectColor","onAddColor","myColors","unshift","onAddColorClick","addColor","themeColorCategoryItems","parseColor","contextType","ColorPicker","getRgbA","r","rgba","handleClick","displayColorPicker","handleClose","handleChangeComplete","lastValue","alpha","getColorAndAlpha","handleAlphaChange","background","getBoundingClientRect","Background","Divider","SliderInput","Border","border","Corners","radius","changeSide","link","_side","onLinkClick","direction","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","CircularSlider","onMouseDown","rect","rootDivRef","onMouseMove","onMouseUp","clientX","clientY","vx","vy","angle","atan2","PI","Angle","loop","deg2rad","rad2deg","Shadow","shadow","getDegree","xOffset","yOffset","ratio","atan","getRatio","tan","calcDegree","xO","yO","abs","distance","blur","BorderDesign","viewBox","fillRule","d","fillColor","GridViewer","AnimationSelector","onSelectAnimation","playAnimation","allAnimationNames","animation","noneClasses","displayName","join","charAt","toUpperCase","AnimationOptions","DynamicAnimations","duration","delay","once","AnimationDesign","getTextStyle","textTheme","textStaticData","textDesignData","fontFamily","fontWeight","fontStyle","fontDecoration","lineHeight","letterSpacing","getFontDataByFamily","allFonts","fontData","getFontDataByName","getSelectionHtmlRemoveProperty","win","propertyName","selection","createRange","htmlText","getSelection","rangeCount","clonedSelection","getRangeAt","cloneContents","nodes","removeProperty","nextNode","hasChildNodes","firstChild","nextSibling","parentNode","getRangeSelectedNodes","range","startContainer","endNode","endContainer","rangeNodes","commonAncestorContainer","getRandomColor","floor","random","addLinkData","linkId","lenght","letters","getRandomLinkId","getSelectedLinkId","execCommand","querySelectorAll","removeAttribute","insertBefore","removeSelectedLink","getSelectedLinkData","parse","getAttribute","hasAttribute","prepareLink","editorContext","url","pageLinkHandle","email","subject","number","ContainerBase","getPrimaryOptions","compositeDesign","getStaticChildren","shadowColor","borderColor","topLeft","topRight","bottomRight","bottomLeft","aglComponent","SectionDesign","Header","isSection","setStyleParam","defaultGridItemStyle","gridArea","as","autoConstraintsOff","helplineOff","Footer","Section","isVerticalSection","designStyle","InspectorBackground","onChangeColor","PageBase","initDataFromPageData","allSectionsH","allSectionsV","grid","gridX","gridY","gridTemplateRows","gridTemplateColumns","initKeyboard","event","which","keyCode","ctrl","ctrlKey","preventDefault","selectedItem","getSelected","getHorizontalSection","moveUp","moveDown","getVerticalSection","moveLeft","moveRight","pageResize","containerHeight","customStyle","scrollBehavior","deleteHorizontalSection","currentSection","areas","getGridArea","x1","parseInt","x2","firstRow","lastRow","verticalSection","x12","y12","x22","y22","setGridArea","horizontalSection","x13","y13","x23","y23","fill","setGrid","deleteVerticalSection","y1","y2","firstCol","lastCol","mainColIndex","getMainColIndex","addSectionQueue","dynamicComponents","isVertical","addQueue","checkingAddQueue","nextOne","shift","checkAddQueue","addVerticalSection","newNextOne","addHorizontalSection","onItemPreDelete","allow","onItemPreResizeStop","dir","delta","yLineRefs","getYlineRef","firstLineTop","getGridLineRect","targetTop","selectedX1","lineTop","checkIndex","nextSectionV","targetBottom","selectedX2","lineBottom","currentSectionIndex","currentSectionGridArea","Tag","section","resizeSides","addChild","insertIndex","areas2","currentIndex","sideSection","updateTemplates","isHideInBreakpoint","hasMiniMenuOverride","invalidateSizeOverride","self","updateParent","updateChildren","sourceId","tempSize","childRef","getSectionOfPoint","isPointInclude","fullWidth","isPage","page","VerticalSpacer","FadeInAnimation","animationStyles","StyleSheet","create","fadeIn","animationName","animationDuration","animationDelay","BounceInAnimation","bounceIn","GlideInAnimation","tx","sin","ty","cos","glideIn","FloatInAnimation","floatIn","ExpandInAnimation","power","expandIn","SpinInAnimation","spinNo","firstRotate","spinIn","FlyInAnimation","windowSize","flyIn","TurnInAnimation","viewSize","turnIn","animationTimingFunction","ArcInAnimation","arcIn","PuffInAnimation","puffIn","FoldInAnimation","transformOrigin","foldIn","FlipInAnimation","flipIn","RevealAnimation","clipPath","reveal","InputDiv","tag","TextTag","textareaRef","contentEditable","whiteSpace","dangerouslySetInnerHTML","__html","InputWrapper","updateHeight","scrollHeight","onInput","keydown","stopPropagation","line","parentLine","found","newParantLine","getParentLine","deleteContents","setEndAfter","text","innerText","getSelectionText","iframeNode","contentWindow","br","after","setStartBefore","html","setStartAfter","insertAdjacentHTML","trim","focus","String","fromCharCode","sel","insertNode","setStart","collapse","removeAllRanges","addRange","init","inited","textEditorRef","onLoad","prevProps","prevState","snapshot","onUpdate","resize","TextEditorButton","getImage","selectedIcon","disabledIcon","useStyles","makeStyles","popper","borderRight","paddingRight","FontSizeAutoComplete","Autocomplete","FontSizeSelector","filterOptions","getAllowableFontSize","setForceValue","onFontSizeChange","reason","tempFontSize","setFontSize","getFontSizeValue","setFontSizeUi","ignoreState","toString","getOptionLabel","popupIcon","renderInput","InputProps","disableUnderline","inputProps","TextField","blurOnSelect","onKeyDown","TextColorSelector","buttonRef","backgroundImage","outline","outlineOffset","checkedIcon","content","SmallRadio","Radio","clsx","LinkGenerator","getHomePageId","homePage","isHome","getPageOptions","pageName","getFirstLightBoxId","setLinkType","anchorId","lightBoxId","validURL","str","RegExp","validPhone","validEmail","isLinkReadyForDone","Modal","aria-labelledby","aria-describedby","disableBackdropClick","RadioGroup","FormControlLabel","control","tempUrl","onBlur","onKeyPress","placeholder","tempNumber","tempEmail","tempSubject","TextEditor","getTextDir","onIframeTextClicked","refreshState","getComputedStyle","anchorNode","parentElement","getPropertyValue","fontSizeSelectorRef","bold","italic","decoration","underline","StaticFonts","isTextSelcted","tryAgain","forceUpdate","anchorEI","modifiers","flip","enabled","preventOverflow","boundariesElement","onDoubleClick","onChangeData","updateInputWrapper","inputWrapperRef","isRtlStyle","isRtl","randomColor","classList","startsWith","remove","childs","childNode","linkGenerator","TextWrapper","setEditableStyle","editableStyle","onEditorStateChange","editorState","updateStyleSheets","setEditMode","editMode","onEditModeChange","getTag","iframe","textTagRef","element","iframeWidth","iframeHeight","frame","editDisplayNoneStyle","nonEditDisplayNoneStyle","textValue","ClickAwayListener","onClickAway","head","rel","href","documentRef","resizeIFrameToFitContent","PureComponent","Text","textRef","onThemeChange","onDoubleClickOverride","onDeSelectListener","noStretch","ColorAdjustment","ButtonDesign","stateName","normal","onStateChange","hover","FontSizeSelector2","ButtonTextAppearance","changeText","tempText","paddingLeft","ButtonTextLayout","TextDesign","spanData","Button","resolveRootTag","rootBorderRef","spanMarginStyle","onMouseOver","onMouseOut","fit","imageOpacity","filesData","fileData","imageData","objectFit","DynamicComponents","AdjustmentPageControllers","addSection","getAnchor","needUpdate","updateTimeout","containerClasses","hide","GridChildContainerFixedHolder","clientHeight","PaddingInterface","borderTop","borderLeft","borderBottom","ParentSelectInterface","GridChildContainer","aglStyle","modifyContainerStyle","modifyContainerStyleOverride","paddingTop","paddingBottom","getContainerStyleId","modifyOverflowStyle","getOverflowStyleId","getOverflowStyle","webkitScrollbarStyle","webkitScrollbarStyleId","scrollStyleNode","updateAdjustments","controllerRef","fixedHolderRef","needOverflow","selectAsParent","show","overflowClasses","containerRef","overflowRef","onScroll","AGLAnchor","ResizePanePage","isLeftClick","mouseDown","pointerType","button","moving","onDrag","onDragStart","onDragStop","lastMouseX","lastMouseY","onResizeStart","onResizeStop","isCorner","draggingStart","onPointerDown","AdjustmentResizePage","sides","EventTrigger","defaultListener","listener","listeners","l","trigger","windowCache","boundingRects","clientsWidth","clientsHeight","scrollsTop","scrollsLeft","scrollsWidth","scrollsHeight","clearCache","clearCacheTimeuot","getCachedBoundingRect","getCachedClientWidth","getCachedClientHeight","getCachedScrollTop","scrollTop","getCachedScrollLeft","scrollLeft","getCachedScrollWidth","scrollWidth","getCachedScrollHeight","addToCache","AnimationHolder","transformRef","VisibilitySensorWrapper","partialVisibility","containment","getPageOverflowRef","active","disableVS","AdjustmentHelpSize","getText","resizeHelpData","AwesomeGridLayout2","callOverride","funcName","getOverrideProp","hasOverride","needRender","lastZIndex","getNextIndexData","savedChildren","savedChildrenArray","oldId","createChildByData","Children","createdChild","renderChild","childrenData","initLayout","getDefaultStyle","setStyle","defaultGrid","defaultStyle","lateMounted","addToSnap","onPageResize","onChildMounted","getShortcutOptions","hasMiniMenu","debounce","getBoundarySize","snap","addSnap","p1","p2","parentsId","getGridLineSnaps","snaps","horizontals","verticals","xLineRef","getXlineRef","yLineRef","newId","fixed","getId","AGLProps","input","copyMan","gridEditorRef","getAllChildOverrideProps","component","fullForce","widthMinusPadding","heightMinusPadding","onWindowSizeChange","getRenderChildData","arrangeIndex","nextZIndex","nextChild","prevZIndex","prevChild","firstZIndex","changeIndex","allChildData","change","startIndex","lastIndex","testChildData","setChildZIndex","childZIndex","forceCalculate","childElement","newProps","keepChildren","Error","onChildAdd","newBreakpointName","delete","getChildData","createItem","clearItem","removeChildElement","clearMiniMenu","getAllOverrideProps","removeId","removeGridLine","removeSnap","updateHelpSizeLines","setInspector","filDataOnMount","fromEnter","setItemHover","updateHover","onMouseEnter","outAllParent","forceRect","forceGridLines","gridType","isPrepared","onNewChildMounted","calcResult","coordinates","childRect","thisRect","calculateChildGridItem","relativeY","setProps","clearFromAllBp","newChild","removeIdAndChildrenId","nonePointerEventForChildren","parentDragging","onParentDragging","setRuntimeStyle","group","callGroup","resizing","moveWithMouse","firstBoundaryPos","setDraggingState","groupDragStart","boundarySize","isFixed","checkSnapOnDrag","updateGridLines","groupDrag","addGrid","groupDragStop","drawSnap","dropped","updateMiniMenu","relativeX","redoData","undoData","calculateGridItem","fakeStyle","snapDelta1","getSnapDelta","snapDelta2","snapDelta3","snapDelta","deltaX","snapV","deltaY","snapH","pointOfSnapH","pointOfSnapV","parentGridLines","checkSnap","dontCalculate","getDocks","fromState","dontAutoDock","cy1","cy2","cx1","cx2","calculateGridArea","coordinatesAbs","coordinateToRelative","oldGridItemStyle","centerX","centerY","parentCenterMinusX","parentCenterPlusX","cy2IsLastLine","centerDiffX","centerDiffY","getPxOrPcOrValue","cx2IsLastLine","coordinateToAbsolute","getTopLeft","pageResizeStart","resizeData","firstX","firstLeft","activateHover","onPageResizeStart","pageResizeCalculate","firstY","firstTop","firstBoundaryWidth","firstBoundaryHeight","firstBoundaryTop","firstBoundaryLeft","onResizeCalculate","updatePageAdjustments","onResizeData","backContainerRef","finalDelta","rad","cx","cy","cxy","sqrt","cxp","cyp","thetaH","thetaW","Dh","Dw","dxH","dyH","dxW","dyW","getResizeDelta","rotateDegree","checkSnapOnResize","setResizeHelpData","pageResizeStop","onPageResizeStop","setSize","firstWidth","firstHeight","gridCoordinates","dontAddToSnap","oldStyle","isPercent","isViewRatio","newValue","getParentProps","postFix","newRuntimeStyle","animationCss","getGridItemStyleId","newGridItemStyle","dontOverride","getStyleId","getDesignStyleId","setDesignStyle","newDesignStyle","designStyleNode","getTransformStyleId","newTransform","transformStyleNode","getTransformStyle","compositeTransform","rules","newStyle","excludeBp","getGridLineOfPoint","gridLine1","gridLine2","mouseMoved","lastClientX","lastClientY","startMillis","Date","getTime","isRightClick","canMove","isGroupSelected","currentMillis","groupSelected","onContextMenu","deselectParent","clicked","dontUpdateAdjustment","isSelectable","selectItem","removeGridLineByType","showGridLines","updateParentsRect","onScrollEnd","onRootScroll","forceScroll","scrollReset","targetScroll","maxTop","scrollTo","behavior","editGrid","editing","updateGridEditor","setAnchor","disable","stateChange","forceKey","showAnimation","onAnimationEnd","activateResize","getCompositeAnimationCss","compositeAnimation","getAnimationCSS","getContextMenu","childContainers","windowWidth","setItem","compositeStyle","holderClasses","TagAs","onWheel","childSize","showSideResize","layoutType","compactType","AGLWrapper","StackSpacerContainer","updateSpacers","spacers","spacer","AdjustmentMove","StackSpacerResizer","StackSpacer","setPointerEvents","updateSpacerData","newHeight","spacerData","stack","updateSize","order","Stack","sortedChildrenArray","lateMountedOverride","lateMountedComplete","setOrder","calculateGridItemChildOverride","calculateWrapper","calculateChildGridItemOverride","child1","centerDiff","childRelativeY","childHeight","childFound","childOrderSet","sorted","relativeYA","relativeYB","relativeY2","getSpacer","getSpacerData","spacerContainerRef","allSpacerData","allSpacerRef","onStackDragStart","onStackDragStop","onMouseOverSpacer","onMouseEnterSpacer","onMouseOutSpacer","setMouseOverOverride","setPointerEventOfSpacers","setMouseOverForNonDraggingOverride","spacerRef","setGridItemStyleChildOverride","container","flexDirection","onChildLeaveOverride","removing","stretchChildOverride","stretch","isStretch","isStretchChildOverride","setStyleParamOverride","isStack","onDragStartChildOverride","onDragChildOverride","onDragStopChildOverride","ContextMenu","getFakeAnchor","popperStyle","mouseEvent","autoFocusItem","hasDivider","menuItem","j","ContextMenuItem","subMenu","interactive","leaveDelay","shortcut","deepEqual","saveStyle","beStretch","allowStretch","disableStretch","pageAgl","oldBehaviour","oldOffsetTop","oldIsFixed","lastSectionId","itemRect","sectionParent","addFixedChildToRoot","oldParentRect","pageRect","hideInBreakPoint","showInBreakPoint","fromAll","getSectionId","uuidv4","createStack","itemsParent","getSectionParent","lastBottom","rightFromLeft","topA","topB","stackNode","_stack","stackId","itemIds","newItems","removeStackFromAGL","addToStack","parentWidth","stackAgl","childIds","removeChilds","addToUndo","saveValue","oldType","oldZIndex","breakpointData","createContextMenu","copySection","paste","duplicate","copyDesignItem","item1","item2","isSameFamily","allOldDesign","sourceItemTemp","overrideBps","pasteFromBreakpointDesign","fromName","toName","fromData","currentData","oldData","deleteSection","shortcutSection","sectionSection","sortBy","array","chromaColor","SelectManager","alt","inputManager","groupSelectRef","pageAglRef","miniMenuHolderRef","inspectorRef","resizeRef","helpLinesRef","hoverRef","setContext","dontUpdateAdjustments","createGroup","clearGroup","addMiniMenu","addMenu","inspectorMenu","setMenu","updateGroupRect","mainItem","deleteGroup","firstRect","updateRect","throttle","helpLineParent","activate","fakeItemRect","test1","test2","test3","SnapManager","snapThreshold","snapSvgRef","ignoreId","additionalSnaps","topUp","topDown","leftUp","leftDown","concat","CopyManager","selectManager","pageRef","copyItem","getCopyItem","destinationItem","copyRect","IdManager","prefix","allId","preferName","fixName","baseId","postNo","UndoRedo","getQueueObject","undo","redo","undoQueue","pop","redoQueue","undoFunc","object","hasUndo","hasRedo","GridLineManager","gridContainerRef","positions","getIdCache","AnchorManager","allAnchors","goToAnchor","saveToHistory","AdjustmentGridRoot","AdjustmentGridRow","gridLineManager","rowLines","rowLineRect","nextRowLineRect","rowHeight","AdjustmentGrid","addRow","rowsHeight","addColumn","columnsWidth","changeColumnWidth","changeRowHeight","deleteRow","deleteColumn","AdjustmentSnapLines","stroke","AdjustmentSnap","GridLine","lineRef","AdjustmentGridLinesWrapper2","yNo","xNo","refId","AdjustmentGridLines","fixLineRef","idCache","updateGridLine","prepared","xNoA","yNoA","xNoB","yNoB","xNoT","yNoT","xLineRefA","yLineRefA","xLineRefB","yLineRefB","xLineRefT","yLineRefT","ResizePane","AdjustmentGroupRect","RightClick","MiniMenuVerticalDivider","Help","MiniMenu","primary","MenuHolder","miniMenuRef","contextMenu","miniMenuItem","IFrameCommunicator","origin","authKey","otherWindow","onMessage","processIncomingMessage","callbacks","responseFunc","responses","post","counter","EditorController","AllowFunctions","res","Inspector","opening","clearInterval","closeInterval","openInterval","setInterval","percent","speed","interval","closing","pinInspector","toggleState","getDefaultMenu","AdjustmentStretch","AdjustmentResize","transformStyleId","stretchStyle","AdjustmentResizeWrapper","AdjustmentHelpLines","calculate","visibility","strokeDasharray","AdjustmentHelpLinesWrapper","helpLineRef","AdjustmentHover","disablePortal","Layout","setLayout","layout","processLayout","treeData","getTreeItem","layoutItem","childLayout","expanded","parentItemId","setTree","updateItem","treeItem","childTreeItem","ComponentGrid","getItemStyle","widthRatio","setDraggingItem","persist","closingTimeOut","closeMenu","createItemAndDrag","presetProps","changeItemParent","setDraggingEnd","allItems","Fragment","onDragEnd","imageUrl","AddComponent","setComponentListItemDebounce","componentListItem","setComponentListItem","setComponentListItemLeave","componentListItemHover","componentSubListItem","subList","setComponentSubListItemDebounce","setComponentSubListItem","setComponentSubListItemLeave","componentSubListItemHover","listName","builtin","apps","groupName","componentSubListItems","PageTypeTitle","PageInfo","onRename","newPageName","rename","setAsHomePage","home","AglRadio","Permissions","changePermission","pageSetting","permissions","onSetPassword","password","onChangeMemberType","memberType","onRoleChange","role","memberRoles","roleAnchor","allApps","member","setting","roles","SeoGoogle","onChangeSeoSetting","newEndUrl","seoGoogle","endUrl","endUrlError","pageTitle","baseUrl","pageDescription","newPageTitle","newPageDescription","rows","showInSearch","SocialShare","onChangeSocialShareSetting","socialShare","substring","lastIndexOf","description","newTitle","newDescription","PageSetting","tabValue","PageItem","pageMenuAnchorEl","onPageChange","setAsHome","renameInput","boxClasses","isDynamic","AddNewPageDialogItem","AddNewPageDialog","addNormalPage","onAddNormalPage","addDynamicPage","onAddDynamicPage","PageManager","onChangeSearch","searchValue","getFilteredPages","siteId","onPageClick","newPageDataUrl","fetch","then","json","openNormalPage","openDynamicPage","showAddPage","ThemeTextItem","onEditClick","font","ThemeColorsItem","toChange","ThemeManager","setCategory","EditorHeaderZoom","Consumer","zoomSetting","anchorOrigin","getContentAnchorEl","anchorPosition","PaperProps","marginThreshold","transitionDuration","onZoomChange","EditorHeaderPageSelect","pd","NumberInputEnterToChange","lazy","tempValue","onTempChange","getBreakpointIcon","getBreakpointName","EditorHeaderBreakpointsSettingItem","isHighestBp","done","tempEnd","onCancel","cancelEditMode","nextBpData","onEditMode","EditorHeaderBreakpointsSetting","clearEditMode","bpItemrRefs","bpItemRef","getBpItemRef","EditorHeaderBreakpoints","getTabValue","settingAnchor","EditorHeader","setRightMenuOpen","openMenu","changedState","onInspectorClickState","onInspectorClick","onPageZoomChange","PreviewHeaderBreakpoints","getCurrentValue","lastBpData","devices","PreviewHeader","PageView","onScrollBoundary","UploadButton","inputRef","onFileSelected","multiple","click","FileManagerHelper","continuationToken","onSuccess","route","method","success","error","objectPath","file","objectSizeInMb","folderPath","deleteObjects","NewFolder","disableEnforceFocus","FileUploader","addFiles","newFIles","files","f","status","progress","working","next","finishing","onFinish","currentUploading","uploadSign","upload","signUrl","errorMessage","FormData","append","cancelTokenSource","axios","CancelToken","source","put","headers","onUploadProgress","cancelToken","token","response","onSingleFileUploaded","catch","loaded","total","cancelCurrent","cancel","cancelPendings","cancelAll","LinearProgress","FileManager","loadRoute","list","selectedFile","loadingPrefix","getCurrentPrefix","contents","Key","getFirstRoute","createNewFolder","folder","changeRoute","uploadFile","uploaderRef","uploadingData","getEmptyFolder","openFolder","folderName","onClickFile","onDoubleClickFile","getFileIconPreview","userDrag","userSelect","addFileManually","basePrefix","selectedMenu","storage","newRoute","currentRoute","newFolder","onDrop","acceptedFiles","getRootProps","getInputProps","CircularProgress","folders","filename","shortName","EditorBoundary","layoutRef","addComponentRef","pageManagerRef","themeManagerRef","InputManager","iFrameCommunicator","toggleThemeManager","exportSiteData","toggleAddComponent","togglePageManager","loadSiteData","initFromHolder","onSiteDataUpdated","err","onSetZoomScale","testWebsite","defaultSiteData","defaultAllComponentData","onComponentDataUpdated","togglePreview","setZoomLevel","zoomLevel","documentElement","setProperty","notifyBreakpointChange","newDevicePixelRatio","isPreview","toggleInspector","onResizeD","onResizeT","getLayoutItem","il","openLayout","closeLayout","getLivePageData","getLiveSiteData","blob","Blob","URL","createObjectURL","download","fileName","getSiteData","isProduction","fileManager","dispose","borderClassess","onAddComponentClick","onThemeManagerClick","onPageManagerClick","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8a13824b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paint.b4611be4.svg\";","module.exports = __webpack_public_path__ + \"static/media/errorred.b7152f66.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-left.0a5b083d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-center.c06baa72.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-right.47dacf61.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.4ffb5b5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-top.a4e81be5.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-middle.18bded08.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-bottom.b15149df.svg\";","module.exports = __webpack_public_path__ + \"static/media/chain.91ca2215.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlink.91af3919.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkblue.34eb0e55.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkdisable.b12d5832.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.3473cffc.svg\";","module.exports = __webpack_public_path__ + \"static/media/textwhite.0dd5b9bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/more.7e1c1c4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.910508a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/minimize.d1b14794.svg\";","module.exports = __webpack_public_path__ + \"static/media/maximize.c16a073e.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.ebf2f3f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudupload.dbdbbcac.svg\";","module.exports = __webpack_public_path__ + \"static/media/folderback.ec1620e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder.45405b61.svg\";","module.exports = __webpack_public_path__ + \"static/media/file.4fc544fb.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {Resizable} from \"re-resizable\";\r\nimport css from 'dom-css';\r\nimport {exist, getFromData, getSortedBreakPoints, setData} from \"./BreakPointManager\";\r\nimport debounce from 'lodash.debounce';\r\n// import {css, StyleSheet} from 'aphrodite'\r\n\r\nlet CalculateLayout = (griddatas, layoutType, parentSize, dir, compactType, scrollType, snap\r\n                       , breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    parentGriddata = parentGriddata || getDefaultChildgriddata(breakpointdata);\r\n\r\n    let dummy;\r\n    let childContainers = griddatas.map((griddata) => {\r\n        if (griddata.id === undefined)\r\n            console.error(\"direct child must have a id props\");\r\n\r\n        let result = {\r\n            griddata: griddata,\r\n        };\r\n\r\n        result.griddata.id = griddata.id;\r\n        result.isContainer = griddata.isContainer;\r\n        result.selected = griddata.selected;\r\n        result.resizable = griddata.resizable;\r\n        result.draggable = griddata.draggable;\r\n        result.dragging = griddata.dragging;\r\n\r\n        result.w = getPxFromPercent(\r\n            getFromData(result.griddata, \"w\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.h = getPxFromPercent(\r\n            getFromData(result.griddata, \"h\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.x = getPxFromPercent(\r\n            getFromData(result.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.y = getPxFromPercent(\r\n            getFromData(result.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.rotate = getFromData(result.griddata, \"rotate\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.absolute = getFromData(result.griddata, \"absolute\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.fix = getFromData(result.griddata, \"fix\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.zIndex = getFromData(result.griddata, \"zIndex\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        if (result.griddata.dragging) {\r\n            dummy = {};\r\n            dummy.griddata = cloneObject(result.griddata);\r\n            // dummy.griddata.dragging = false;\r\n            dummy.griddata.id = \"dummy\";\r\n            dummy.x = result.x;\r\n            dummy.y = result.y;\r\n            dummy.w = result.w;\r\n            dummy.h = result.h;\r\n            dummy.griddata.draggable = false;\r\n            dummy.griddata.resizable = false;\r\n            dummy.absolute = result.absolute;\r\n            dummy.fix = result.fix;\r\n            dummy.zIndex = result.zIndex;\r\n            dummy.dragging = result.dragging;\r\n\r\n            dummy.isDummy = true;\r\n        }\r\n\r\n        return result;\r\n    });\r\n\r\n    if (!childContainers)\r\n        childContainers = [];\r\n\r\n    if (dummy)\r\n        childContainers.push(dummy);\r\n\r\n    sortChilds(childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints);\r\n\r\n    let layouts = [];\r\n    let layoutContainers = [];\r\n\r\n    let maxHeight = scatter(childContainers, layoutContainers, layouts, layoutType, parentSize\r\n        , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n    return {childContainers: childContainers, layouts: layouts, maxHeight: maxHeight};\r\n};\r\n\r\nlet getDummy = (w, h) => {\r\n    return (\r\n        <Resizable\r\n            enable={false}\r\n            size={{\r\n                width: w,\r\n                height: h,\r\n            }}\r\n        >\r\n            <div style={{\r\n                backgroundColor: \"rgba(201, 76, 76, 0.3)\",\r\n                width: \"100%\",\r\n                height: \"100%\"\r\n            }}>\r\n            </div>\r\n        </Resizable>\r\n    );\r\n};\r\n\r\nlet scatter = (childContainers, layoutContainers, layouts, layoutType, parentSize\r\n               , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let notCompareChilds = [];\r\n    let maxHeight = 0;\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        if (childContainer.griddata.dragging) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (childContainer.absolute || childContainer.fix) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (layoutType === \"free\") {\r\n            maxHeight = scatterFree(childContainer, childContainers, layoutContainers\r\n                , parentSize, compactType, scrollType, snap, maxHeight, breakpointdata\r\n                , hasOwnBreakPoints, parentGriddata);\r\n        }\r\n\r\n        layoutContainers.push(childContainer);\r\n    }\r\n\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        layouts.push(childContainer.griddata);\r\n    }\r\n\r\n    notCompareChilds.forEach(childContainer => {\r\n        if (childContainer.absolute)\r\n            fixAbsoluteChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n        if (childContainer.fix)\r\n            fixFixChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n        setChildPosition(childContainer, {x:childContainer.x, y:childContainer.y}\r\n             , parentSize, breakpointdata, hasOwnBreakPoints);\r\n\r\n        layoutContainers.push(childContainer);\r\n        layouts.push(childContainer.griddata);\r\n    });\r\n\r\n    return maxHeight;\r\n};\r\n\r\nlet fixFixChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    if (left)\r\n        left += parentSize.scrollLeft;\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    if (top)\r\n        top += parentSize.scrollTop;\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    if (right)\r\n        right += (parentSize.x - parentSize.clientWidth - parentSize.scrollLeft);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n    if (bottom)\r\n        bottom += (parentSize.y - parentSize.clientHeight - parentSize.scrollTop);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet fixAbsoluteChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet scatterFree = (childContainer, childContainers, layoutContainers, parentSize, compactType, scrollType\r\n                   , snap, maxHeight, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let autoWidth =\r\n        getFromData(parentGriddata, \"autoWidth\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    if (!autoWidth) {\r\n        if (childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n        }\r\n    }\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.x > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.x -= snap.x;\r\n        }\r\n    }\r\n    if (compactType === \"vertical\")\r\n    {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.y > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.y -= snap.y;\r\n        }\r\n    }\r\n\r\n    childContainer.x = Math.max(0, childContainer.x);\r\n    childContainer.y = Math.max(0, childContainer.y);\r\n\r\n    let collide;\r\n    while (checkCollide(childContainer, layoutContainers)) {\r\n        collide = checkCollide(childContainer, layoutContainers);\r\n        if (compactType === \"horizontal\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.x + collide.w, \"x\");\r\n        }\r\n        if (compactType === \"vertical\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.y + collide.h, \"y\");\r\n        }\r\n        // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\r\n        if ((compactType === \"horizontal\") &&\r\n            childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n            childContainer.y++;\r\n        }\r\n    }\r\n\r\n    if (childContainer.y + childContainer.h > maxHeight)\r\n        maxHeight = childContainer.y + childContainer.h;\r\n\r\n    return maxHeight;\r\n};\r\n\r\nconst heightWidth = { x: \"w\", y: \"h\" };\r\nlet resolveCompactionCollision = (layout, item, moveToCoord, axis) => {\r\n    const sizeProp = heightWidth[axis];\r\n    item[axis] += 1;\r\n    const itemIndex = layout\r\n        .map(layoutItem => {\r\n            return layoutItem.griddata.id;\r\n        })\r\n        .indexOf(item.griddata.id);\r\n\r\n    // Go through each item we collide with.\r\n    for (let i = itemIndex + 1; i < layout.length; i++) {\r\n        const otherItem = layout[i];\r\n        // Ignore static items\r\n        if (otherItem.static || otherItem.griddata.dragging) continue;\r\n\r\n        // Optimization: we can break early if we know we're past this el\r\n        // We can do this b/c it's a sorted layout\r\n        if (otherItem.y > item.y + item.h) break;\r\n\r\n        if (collide(item, otherItem)) {\r\n            resolveCompactionCollision(\r\n                layout,\r\n                otherItem,\r\n                moveToCoord + item[sizeProp],\r\n                axis\r\n            );\r\n        }\r\n    }\r\n\r\n    item[axis] = moveToCoord;\r\n};\r\n\r\nlet bottom = (layoutContainers) => {\r\n    let max = 0,\r\n        bottomY;\r\n    for (let i = 0, len = layoutContainers.length; i < len; i++) {\r\n        bottomY = layoutContainers[i].y + layoutContainers[i].h;\r\n        if (bottomY > max) max = bottomY;\r\n    }\r\n    return max;\r\n};\r\n\r\nlet checkCollide = (childContainer, layoutContainers) => {\r\n    for (let i = 0; i < layoutContainers.length; i++) {\r\n        if (collide(childContainer, layoutContainers[i]))\r\n            return layoutContainers[i];\r\n    }\r\n    return false;\r\n};\r\n\r\nlet collide = (child1, child2) => {\r\n    if (child1.griddata.id === child2.griddata.id) return false; // same element\r\n    if (child1.x + child1.w <= child2.x) return false; // l1 is left of l2\r\n    if (child1.x >= child2.x + child2.w) return false; // l1 is right of l2\r\n    if (child1.y + child1.h <= child2.y) return false; // l1 is above l2\r\n    if (child1.y >= child2.y + child2.h) return false; // l1 is below l2\r\n    return true; // boxes overlap\r\n};\r\n\r\nlet sortChilds = (childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints) => {\r\n    childContainers.forEach(childContainer => {\r\n            childContainer.x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.x);\r\n            childContainer.y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.y);\r\n    });\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainers.sort((a, b) => {\r\n            if (a.x > b.x || (a.x === b.x && a.y > b.y)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    } else {\r\n        childContainers.sort((a, b) => {\r\n            if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    }\r\n};\r\n\r\nlet getPxFromPercent = (val, parentVal) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (getUnit(val) === \"%\") {\r\n            let percent = parseFloat(val.replace(\"%\", \"\")) / 100;\r\n            return parentVal * percent;\r\n        }\r\n        return val;\r\n    } else {\r\n        return val;\r\n    }\r\n};\r\n\r\nlet getUnit = (val) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (val.includes(\"%\"))\r\n            return \"%\";\r\n    }\r\n    return \"\";\r\n};\r\n\r\nlet hasDir = (dir, target) => {\r\n    return dir.toLowerCase().includes(target);\r\n};\r\n\r\nlet setChildSize = (childContainer, newSize, parentSize, breakpointdata, hasOwnBreakPoints\r\n                    , dir, delta) => {\r\n    setData(childContainer.griddata, \"w\", newSize.w, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.w\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"w\",\r\n            (getFromData(childContainer.griddata, \"w\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.w\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"h\", newSize.h, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.h\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"h\",\r\n            (getFromData(childContainer.griddata, \"h\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.h\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    if (delta) {\r\n        if (hasDir(dir, \"right\") || hasDir(dir, \"left\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            if (hasDir(dir, \"right\"))\r\n                x = x + delta.width / 2;\r\n            else\r\n                x = x - delta.width / 2;\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n        if (hasDir(dir, \"top\") || hasDir(dir, \"bottom\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n            if (hasDir(dir, \"bottom\"))\r\n                y = y + delta.height / 2;\r\n            else\r\n                y = y - delta.height / 2;\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n    }\r\n};\r\n\r\nlet setChildPosition = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints) => {\r\n    setData(childContainer.griddata, \"x\", newPosition.x, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.x\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"x\",\r\n            (getFromData(childContainer.griddata, \"x\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.x\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"y\", newPosition.y, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.y\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"y\",\r\n            (getFromData(childContainer.griddata, \"y\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.y\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n};\r\n\r\n/*let updateConstraints = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints\r\n                        , parentGridSystem) =>\r\n{\r\n    if (!parentGridSystem)\r\n        parentGridSystem = getDefaultGridSystem();\r\n};*/\r\n\r\n/*let getDefaultGridSystem = () => {\r\n    return {\r\n        xNumber: 1,\r\n        yNumber: 1,\r\n        widths: [100],\r\n        widthUnits: [\"%\"],\r\n        heights: [100],\r\n        heightUnits: [\"%\"]\r\n    }\r\n};*/\r\n\r\nlet fixGriddata = (griddata, breakpointdata) => {\r\n    if (!griddata)\r\n        return;\r\n\r\n    if (griddata.initialized) {\r\n        let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            let name = sortedBreakPoints[i].name;\r\n\r\n            if (!griddata[name])\r\n                continue;\r\n\r\n            if (!griddata[name].units)\r\n                griddata[name].units = {};\r\n\r\n            griddata[name].units.x = getUnit(griddata[name].x);\r\n            griddata[name].units.y = getUnit(griddata[name].y);\r\n            griddata[name].units.w = getUnit(griddata[name].w);\r\n            griddata[name].units.h = getUnit(griddata[name].h);\r\n        }\r\n    } else {\r\n        if (!griddata.units)\r\n            griddata.units = {};\r\n\r\n        griddata.units.x = getUnit(griddata.x);\r\n        griddata.units.y = getUnit(griddata.y);\r\n        griddata.units.w = getUnit(griddata.w);\r\n        griddata.units.h = getUnit(griddata.h);\r\n\r\n    }\r\n};\r\n\r\nlet initGriddata = (griddataProp, breakpointdata) => {\r\n    if (griddataProp && griddataProp.initialized)\r\n        return griddataProp;\r\n\r\n    if (!griddataProp)\r\n        griddataProp = {};\r\n\r\n    let clone = cloneObject(griddataProp);\r\n\r\n    for (let props in griddataProp) delete griddataProp[props];\r\n\r\n    let griddata = getDefaultChildgriddata(breakpointdata);\r\n    if (clone.bpData) {\r\n        for (let props in griddata.bpData) {\r\n            if (exist(props, breakpointdata)) {\r\n                    for(let props2 in clone.bpData) {\r\n                        griddata.bpData[props][props2] = cloneObject(clone.bpData[props2]);\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    for (let prop in clone) {\r\n        if (clone.hasOwnProperty(prop) && prop !== \"bpData\") {\r\n            griddata[prop] = clone[prop];\r\n        }\r\n    }\r\n\r\n    for(let k in griddata) griddataProp[k]=griddata[k];\r\n\r\n    return griddataProp;\r\n};\r\n\r\nlet getDefaultChildgriddata = (breakpointdata) => {\r\n    let sample = {\r\n        x: \"50%\",\r\n        y: \"50%\",\r\n        w: \"100%\",\r\n        h: \"100%\",\r\n        minW: undefined,\r\n        maxW: undefined,\r\n        minH: undefined,\r\n        maxH: undefined,\r\n        constraints: {\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined,\r\n        },\r\n        margin: {\r\n            all: undefined,\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined\r\n        },\r\n        units: {\r\n            x: \"%\",\r\n            y: \"%\",\r\n            w: \"%\",\r\n            h: \"%\",\r\n        },\r\n        scrollType: \"vertical\",\r\n        absolute: true,\r\n        fix: false,\r\n        autoHeight: false,\r\n        autoWidth: false,\r\n        overflowData: {\r\n            state: 'hide',\r\n            overflowY: 'scroll'\r\n        },\r\n    };\r\n    let griddata = {\r\n        initialized: true,\r\n        resizable: true,\r\n        draggable: true,\r\n        hasOwnBreakPoints: false,\r\n        isContainer: false,\r\n        autoDock: true,\r\n        bpData: {}\r\n    };\r\n    let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n    griddata.bpData[sortedBreakPoints[0].name] = cloneObject(sample);\r\n    return griddata;\r\n};\r\n\r\nlet cloneObject = (obj) => {\r\n    if (obj instanceof Array) {\r\n        let copy = [];\r\n        for (let i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = cloneObject(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n    if (obj instanceof Object) {\r\n        if (null == obj) return obj;\r\n        let copy = {};\r\n        for (let attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = cloneObject(obj[attr]);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nlet shallowEqual = (objA, objB) => {\r\n    if (objA === objB) {\r\n        return true;\r\n    }\r\n\r\n    if (typeof objA !== 'object' || objA === null ||\r\n        typeof objB !== 'object' || objB === null) {\r\n        return false;\r\n    }\r\n\r\n    let keysA = Object.keys(objA);\r\n    let keysB = Object.keys(objB);\r\n\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n\r\n    // Test for A's keys different from B.\r\n    for (let i = 0; i < keysA.length; i++) {\r\n        if (!objB.hasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nfunction throttleDebounce(fn, ms) {\r\n    let deTimer;\r\n    let dontCall;\r\n\r\n    return _ => {\r\n        let args = arguments;\r\n\r\n        if (!dontCall) {\r\n            dontCall = true;\r\n            fn.apply(this, args);\r\n            setTimeout(_ => {\r\n                dontCall = false;\r\n            }, ms);\r\n        }\r\n\r\n        clearTimeout(deTimer);\r\n        deTimer = setTimeout(_ => {\r\n            fn.apply(this, args);\r\n        }, ms);\r\n    };\r\n}\r\n\r\nfunction throttleDebounce2(fn, threshold) {\r\n    threshold = threshold || 250;\r\n    let last, deferTimer;\r\n\r\n    let db = debounce(fn);\r\n    return function() {\r\n        let now = +new Date, args = arguments;\r\n        if(!last || (last && now < last + threshold)) {\r\n            clearTimeout(deferTimer);\r\n            db.apply(this, args);\r\n            deferTimer = setTimeout(function() {\r\n                last = now;\r\n                fn.apply(this, args);\r\n            }, threshold);\r\n        } else {\r\n            last = now;\r\n            fn.apply(this, args);\r\n        }\r\n    }\r\n}\r\n\r\nlet getOverFlow = (griddata, parent, breakpointdata) => {\r\n    if (!griddata)\r\n        return {x:\"hidden\", y:\"hidden\"};\r\n    let parentSizeX;\r\n    if (parent)\r\n        parentSizeX = parent.getSize().x;\r\n\r\n    let scrollType;\r\n    if (parentSizeX) {\r\n        scrollType = getFromData(griddata, \"scrollType\", parentSizeX\r\n                , griddata? griddata.hasOwnBreakPoints: false, breakpointdata);\r\n    } else {\r\n        scrollType = getFromData(griddata, \"scrollType\", 0\r\n                , false, breakpointdata);\r\n    }\r\n    switch (scrollType) {\r\n        case \"hide\":\r\n            return {x:\"hidden\", y:\"hidden\"};\r\n        case \"show\":\r\n            return {x:\"visible\", y:\"visible\"};\r\n        case \"horizontal\":\r\n            return {x:\"overlay\", y:\"hidden\"};\r\n        case \"vertical\":\r\n            return {x:\"hidden\", y:\"overlay\"};\r\n        case \"both\":\r\n            return {x:\"overlay\", y:\"overlay\"};\r\n        default:\r\n            return {x:\"visible\", y:\"visible\"};\r\n    }\r\n};\r\n\r\nlet scrollbarWidth = false;\r\nlet getScrollbarWidth = () => {\r\n    if (scrollbarWidth !== false) return scrollbarWidth;\r\n    /* istanbul ignore else */\r\n    if (typeof document !== 'undefined') {\r\n        const div = document.createElement('div');\r\n        css(div, {\r\n            width: 100,\r\n            height: 100,\r\n            position: 'absolute',\r\n            top: -9999,\r\n            overflow: 'scroll',\r\n            MsOverflowStyle: 'scrollbar'\r\n        });\r\n        document.body.appendChild(div);\r\n        scrollbarWidth = (div.offsetWidth - div.clientWidth);\r\n        document.body.removeChild(div);\r\n    } else {\r\n        scrollbarWidth = 0;\r\n    }\r\n    return scrollbarWidth || 0;\r\n};\r\n\r\nexport let assignData = (griddata, newData) => {\r\n    if (!griddata)\r\n        griddata = {};\r\n    return Object.assign(griddata, newData || {})\r\n};\r\n\r\nexport function getOffsetLeft( elem )\r\n{\r\n    let offsetLeft = 0;\r\n    do {\r\n        let elemOffsetLeft = elem.offsetLeft;\r\n        if ( !isNaN( elemOffsetLeft ) )\r\n        {\r\n            offsetLeft += elemOffsetLeft;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetLeft;\r\n}\r\n\r\nexport function getOffsetTop( elem )\r\n{\r\n    let offsetTop = 0;\r\n    do {\r\n        let elemOffsetTop = elem.offsetTop;\r\n        if ( !isNaN( elemOffsetTop ) )\r\n        {\r\n            offsetTop += elemOffsetTop;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetTop;\r\n}\r\n\r\n\r\nexport function JSToCSS(JS){\r\n    let cssString = \"\";\r\n    for (let objectKey in JS) {\r\n        cssString += objectKey.replace(/([A-Z])/g, (g) => `-${g[0].toLowerCase()}`) + \": \" + JS[objectKey] + \"; \";\r\n    }\r\n    return cssString;\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n\r\n    styleNode.innerHTML = \"\";\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n};\r\n\r\nexport function appendStyle(style, styleId, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n    let styleNode = document.createElement('style');\r\n    styleNode.setAttribute(\"id\", styleId);\r\n    // styleNode.setAttribute(\"title\", styleId);\r\n\r\n    styleNode.type = 'text/css';\r\n\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n\r\n    document.getElementsByTagName('head')[0].appendChild(styleNode);\r\n};\r\n\r\nexport function addCSS(cssText, cssId, doc){\r\n    let styleNode = (doc || document).getElementById(cssId);\r\n\r\n    if (!styleNode) {\r\n        styleNode = (doc || document).createElement('style');\r\n        styleNode.setAttribute(\"id\", cssId);\r\n        styleNode.type = 'text/css';\r\n    } else {\r\n        styleNode.innerHTML = \"\";\r\n    }\r\n\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = cssText;\r\n    } else {\r\n        styleNode.appendChild((doc || document).createTextNode(cssText));\r\n    }\r\n\r\n    (doc || document).getElementsByTagName('head')[0].appendChild(styleNode);\r\n};\r\n\r\n/*export function appendStyle(style, styleId, styleName){\r\n    return StyleSheet.create({\r\n        [styleId]: style\r\n    })[styleId];\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    return StyleSheet.create({\r\n        [styleName]: style\r\n    });\r\n};*/\r\n\r\nexport function getScrollParent(node) {\r\n    if (node == null) {\r\n        return null;\r\n    }\r\n\r\n    if (node.scrollHeight > node.clientHeight) {\r\n        return node;\r\n    } else {\r\n        return getScrollParent(node.parentNode);\r\n    }\r\n}\r\n\r\nexport function swapArrayElements(arr, indexA, indexB) {\r\n    let temp = arr[indexA];\r\n    arr[indexA] = arr[indexB];\r\n    arr[indexB] = temp;\r\n}\r\n\r\nexport {CalculateLayout, cloneObject, getPxFromPercent, shallowEqual\r\n        ,throttleDebounce, setChildSize, fixGriddata, setChildPosition\r\n        ,getDefaultChildgriddata, initGriddata, getOverFlow, getScrollbarWidth, getDummy}\r\n","import {cloneObject, throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from \"lodash.merge\";\r\n\r\nexport default class BreakPointManager {\r\n    constructor(breakpoints, editor, onBreakpointChange, onZoomLevelChange, onHeightChange, onResize) {\r\n        if (!breakpoints)\r\n            breakpoints = BreakPointManager.getDefault();\r\n\r\n        this.fixBreakpointRules(breakpoints);\r\n\r\n        // TODO test\r\n\r\n        this.breakpoints = breakpoints;\r\n        this.editor = editor;\r\n        this.windowInnerWidth = window.innerWidth;\r\n        this.lastWidth = window.innerWidth;\r\n        this.onBreakpointChange = onBreakpointChange || (() => {});\r\n        this.onZoomLevelChange = onZoomLevelChange || (() => {});\r\n        this.onHeightChange = onHeightChange || (() => {});\r\n\r\n        window.addEventListener(\"resize\", onResize);\r\n        if (onBreakpointChange)\r\n            window.addEventListener(\"resize\", this.onWindowResize);\r\n        if (onZoomLevelChange)\r\n            window.addEventListener(\"resize\", this.onDevicePixelRatioChange);\r\n        if (onHeightChange)\r\n            window.addEventListener(\"resize\", this.onHeightResize);\r\n    }\r\n\r\n    fixBreakpointRules = (breakpoints) => {\r\n        breakpoints.forEach(bpData => {\r\n            if (!bpData.end)\r\n                bpData.end = 99999;\r\n        });\r\n    }\r\n\r\n    updateBreakpoint = (name, start, end) => {\r\n        let bp = this.breakpoints.find(b => b.name === name);\r\n        if (bp) {\r\n            bp.end = end;\r\n            let upperBP = this.getUpperBreakPoint(name);\r\n            if (upperBP) this.getUpperBreakPoint(name).start = end + 1;\r\n            return;\r\n        }\r\n\r\n        start++;\r\n        bp = {name, start, end};\r\n        let prevBp;\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bp.start === sortedBreakPoints[i].start + 1) {\r\n                bp.start++;\r\n            }\r\n            if (bp.start >= sortedBreakPoints[i].start) {\r\n                bp.end = sortedBreakPoints[i].end;\r\n                sortedBreakPoints[i].end = bp.start - 1;\r\n                prevBp = sortedBreakPoints[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.breakpoints.push(bp);\r\n\r\n        return {newBpData: bp, prevBpData: prevBp};\r\n    };\r\n\r\n    deleteBreakpoint = (name) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (name === sortedBreakPoints[i].name) {\r\n                let upper = sortedBreakPoints[i - 1];\r\n                upper.start = sortedBreakPoints[i].start;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let index = this.breakpoints.findIndex(bp => {\r\n            return bp.name === name;\r\n        });\r\n\r\n        this.breakpoints.splice(index, 1);\r\n    };\r\n\r\n    fromClone = (clone) => {\r\n        this.breakpoints = clone.breakpoints;\r\n        this.windowInnerWidth = clone.windowInnerWidth;\r\n        this.lastWidth = clone.lastWidth;\r\n        this.editor = clone.editorData;\r\n\r\n        return this;\r\n    };\r\n\r\n    copyDesign = (designDatas, sourceItem) => {\r\n        this.cloneDesignDatas = {\r\n            designDatas: cloneObject(designDatas),\r\n            sourceItem\r\n        };\r\n    };\r\n\r\n    getCopyDesign = () => {\r\n        return this.cloneDesignDatas;\r\n    };\r\n\r\n    pasteDesign = (item) => {\r\n        if (!this.getCopyDesign())\r\n            return;\r\n\r\n        this.getCopyDesign().designDatas.forEach((designData, index) => {\r\n            let design = designData.design;\r\n            if (!designData.justOneBp) {\r\n                let bpName = designData.bpName;\r\n                if (!item.props.griddata.bpData[bpName])\r\n                    item.props.griddata.bpData[bpName] = {};\r\n                item.props.griddata.bpData[bpName].design = cloneObject(design);\r\n            } else {\r\n                let currentBpName = item.props.breakpointmanager.current();\r\n                if (!item.props.griddata.bpData[currentBpName])\r\n                    item.props.griddata.bpData[currentBpName] = {};\r\n                item.props.griddata.bpData[currentBpName].design = cloneObject(design);\r\n            }\r\n        });\r\n    };\r\n\r\n    getWindowWidth = () => {\r\n        return this.lastWidth\r\n    };\r\n\r\n    getWindowHeight = () => {\r\n        return this.editor.rootLayoutRef.current.getSize(false).height;\r\n        // return window.innerHeight * 0.8;\r\n    };\r\n\r\n    setWindowWidth = (width) => {\r\n        this.lastWidth = width;\r\n    };\r\n\r\n    getBpData = (bpName) => {\r\n        return this.breakpoints.find(bp => {\r\n            return bp.name === bpName;\r\n        });\r\n    };\r\n\r\n    dispose() {\r\n        window.removeEventListener(\"resize\", this.onWindowResize);\r\n    }\r\n\r\n    getDevicePixelRatio = () => {\r\n        return window.devicePixelRatio;\r\n    };\r\n\r\n    onDevicePixelRatioChange = () => {\r\n        let changed = this.devicePixelRatio !== window.devicePixelRatio;\r\n\r\n        this.devicePixelRatio = window.devicePixelRatio;\r\n\r\n        if (changed) {\r\n            this.onZoomLevelChange(this.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onHeightResize = throttleDebounce((e) => {\r\n        if (this.lastHeight !== window.innerHeight) {\r\n            this.lastHeight = window.innerHeight;\r\n            this.onHeightChange(e);\r\n        }\r\n    }, 100);\r\n\r\n    onWindowResize = throttleDebounce(() => {\r\n        let newWidth = window.innerWidth -\r\n            this.editor.context.inspectorPinned ? this.editor.context.inspectorWidth : 0;\r\n\r\n        let result = this.checkBreakPointChange(newWidth);\r\n\r\n        this.setWindowWidth(newWidth);\r\n\r\n        if (result.changed) {\r\n            this.onBreakpointChange(newWidth, result.currentBreakpointName, this.getDevicePixelRatio());\r\n        }\r\n    }, 100);\r\n\r\n    checkBreakPointChange = (newWidth) => {\r\n        let lastBreakpointName = this.current(this.getWindowWidth());\r\n        let currentBreakpointName = this.current(newWidth);\r\n\r\n        return {\r\n            changed: (lastBreakpointName !== currentBreakpointName),\r\n            currentBreakpointName\r\n        }\r\n    };\r\n\r\n    current = (size) => {\r\n        if (!size)\r\n            size = this.getWindowWidth();\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (this.getSize(size) >= sortedBreakPoints[i].start)\r\n                return sortedBreakPoints[i].name;\r\n        }\r\n\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].name;\r\n    };\r\n\r\n    currentBpData = (size) => {\r\n        if (!size)\r\n            size = this.getWindowWidth();\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (this.getSize(size) >= sortedBreakPoints[i].start)\r\n                return sortedBreakPoints[i];\r\n        }\r\n\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1];\r\n    };\r\n\r\n    getUpperBreakPoint = (bpName) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bpName === sortedBreakPoints[i].name)\r\n                return sortedBreakPoints[i - 1] && sortedBreakPoints[i - 1];\r\n        }\r\n    };\r\n\r\n    setData = (dataSet, param, value, breakpointName) => {\r\n        let params = param.split('.');\r\n        let name = breakpointName ||\r\n            this.current(this.getSize());\r\n        if (!dataSet.bpData[name]) {\r\n            dataSet.bpData[name] = {};\r\n        }\r\n        if (params.length === 1) {\r\n            if (value !== undefined)\r\n                dataSet.bpData[name][params[0]] = value;\r\n            else\r\n                delete dataSet.bpData[name][params[0]];\r\n        } else {\r\n            if (dataSet.bpData[name][params[0]] === undefined)\r\n                dataSet.bpData[name][params[0]] = {};\r\n            let override = dataSet.bpData[name][params[0]];\r\n            for(let i = 1; i < params.length; i++) {\r\n                if (i === params.length - 1) { // Last index\r\n                    if (value !== undefined)\r\n                        override[params[i]] = value;\r\n                    else\r\n                        delete override[params[i]];\r\n                }\r\n                else\r\n                {\r\n                    if (override[params[i]] === undefined)\r\n                        override[params[i]] = {};\r\n                    override = override[params[i]];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getFromData = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n        else {\r\n            firstParamResult = this.findFirstUpperBreakPointParam(dataSet, params[0]\r\n                , this.getSize());\r\n        }\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    getHighestBpName = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[0].name;\r\n    };\r\n\r\n    getCompositeFromData = (dataSet, param) => {\r\n        let params = param.split('.');\r\n        let results = [];\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints(this.getWindowWidth());\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            let checkBreakpointName = sortedBreakPoints[i].name;\r\n\r\n            let firstParamResult;\r\n            if (dataSet.bpData[checkBreakpointName] &&\r\n                dataSet.bpData[checkBreakpointName][params[0]] !== undefined)\r\n                firstParamResult = dataSet.bpData[checkBreakpointName][params[0]];\r\n\r\n            if (firstParamResult === undefined)\r\n                continue;\r\n\r\n            if (params.length === 1) {\r\n                results.push(firstParamResult);\r\n            } else {\r\n                params.slice(1).forEach(p => {\r\n                    if (firstParamResult)\r\n                        firstParamResult = firstParamResult[p];\r\n                });\r\n\r\n                results.push(firstParamResult);\r\n            }\r\n        }\r\n\r\n        if (!(results[0] instanceof Object))\r\n            return results[0];\r\n\r\n        let composite = {};\r\n        for (let i = results.length - 1; i >= 0; i--) {\r\n            composite = merge(composite, results[i]);\r\n        }\r\n\r\n        return composite;\r\n    };\r\n\r\n    hasDataInBreakPoint = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    findFirstUpperBreakPointParam = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name] &&\r\n                    dataSet.bpData[sortedBreakPoints[i].name][param] !== undefined)\r\n                    return dataSet.bpData[sortedBreakPoints[i].name][param];\r\n            }\r\n        }\r\n    };\r\n\r\n    findFirstUpperBreakPointName = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name]/* && dataSet[sortedBreakPoints[i].name][param] !== undefined*/)\r\n                    return sortedBreakPoints[i].name;\r\n            }\r\n        }\r\n    };\r\n\r\n    getMinWidth = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].start;\r\n    };\r\n\r\n    getSortedBreakPoints = (minSize) => {\r\n        let breakpoints = this.breakpoints;\r\n        if (minSize) {\r\n            breakpoints = this.breakpoints.filter(bp => {\r\n                return bp.end >= minSize;\r\n            });\r\n        }\r\n        // console.log(\"breakpoints.length\", breakpoints.length, minSize)\r\n        return breakpoints.sort((a,b) => {\r\n            if (a.start > b.start) {\r\n                return -1;\r\n            } else if (a.start === b.start) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        });\r\n    };\r\n\r\n    exist = (name) => {\r\n        return this.breakpoints.find(b => {\r\n            return b.name === name;\r\n        });\r\n    };\r\n\r\n    static getDefault = () => {\r\n        return [\r\n            {\r\n                name: \"laptop\",\r\n                start: 1001,\r\n                end: 99999,\r\n                prefer: 1006\r\n            },\r\n            {\r\n                name: \"tablet\",\r\n                start: 751,\r\n                end: 1000,\r\n                prefer: 768\r\n            },\r\n            {\r\n                name: \"mobile\",\r\n                start: 320,\r\n                end: 750,\r\n                prefer: 360\r\n            },\r\n        ]\r\n    };\r\n\r\n    getSize = (size) => {\r\n        return size || this.getWindowWidth();\r\n    };\r\n};\r\n\r\nexport let setData = (dataSet, param, value, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    breakPointManager.setData(dataSet, param, value, breakpointName);\r\n};\r\n\r\nexport let getFromData = (dataSet, param, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getFromData(dataSet, param, breakpointName);\r\n};\r\n\r\nexport let getCompositeFromData = (dataSet, param, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getCompositeFromData(dataSet, param);\r\n};\r\n\r\nexport let getSortedBreakPoints = (breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.getSortedBreakPoints();\r\n};\r\n\r\nexport let exist = (name, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.exist(name);\r\n};\r\n","import React from 'react';\r\nimport BreakPointManager from \"../BreakPointManager\";\r\nimport chroma from \"chroma-js\";\r\nimport {addCSS, JSToCSS} from \"../AwesomeGridLayoutUtils\";\r\n\r\nfunction getColorScheme (baseColor) {\r\n    return {\r\n        \"1\": chroma(baseColor).luminance(0.025).css(),\r\n        \"2\": chroma(baseColor).luminance(0.06).css(),\r\n        \"3\": chroma(baseColor).luminance(0.15).css(),\r\n        \"4\": chroma(baseColor).luminance(0.35).css(),\r\n        \"5\": chroma(baseColor).luminance(0.55).css(),\r\n    }\r\n}\r\n\r\nexport const EditorContext = React.createContext({});\r\n\r\nconst colorKeys = [\r\n    \"1\",\"2\",\"3\",\"4\",\"5\",\r\n];\r\n\r\nexport default class EditorContextProvider extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            update: this.update,\r\n            initContext: this.initContext,\r\n            zoomScale: 1,\r\n            editor: undefined,\r\n            setZoomScale: this.setZoomScale,\r\n            siteData: undefined,\r\n            setSiteData: this.setSiteData,\r\n            pageSize: 1006,\r\n            setPageSize: this.setPageSize,\r\n            setPageSizeWidth: this.setPageSizeWidth,\r\n            pageData: undefined,\r\n            setPageData: this.setPageData,\r\n            inspectorPinned: true,\r\n            setInspectorPinned: this.setInspectorPinned,\r\n            inspectorWidth: 260,\r\n            getInnerWith: this.getInnerWidth,\r\n            setInspectorWidth: this.setInspectorWidth,\r\n            devicePixelRatio: window.devicePixelRatio,\r\n            setDevicePixelRatio: this.setDevicePixelRatio,\r\n            allComponentData: undefined,\r\n            setAllComponentData: this.setAllComponentData,\r\n            rightMenus: {\r\n                addComponent: {\r\n                    state: false,\r\n                },\r\n                pageManager: {\r\n                    state: false,\r\n                },\r\n                themeManager: {\r\n                    state: false,\r\n                }\r\n            },\r\n            setRightMenus: this.setRightMenus,\r\n            toggleRightMenu: this.toggleRightMenu,\r\n            onNewBpAdded: this.onNewBpAdded,\r\n            setPreview: this.setPreview,\r\n            sendEditCommand: this.sendEditCommand,\r\n            sendPublishCommand: this.sendPublishCommand,\r\n            setProduction: this.setProduction,\r\n            preview: false,\r\n            production: false,\r\n            getTheme: this.getTheme,\r\n            getColor: this.getColor,\r\n            getThemeColorClass: this.getThemeColorClass,\r\n            getThemeBackColorClass: this.getThemeBackColorClass,\r\n            calculateTheme: this.calculateTheme,\r\n            calculateColorCSS: this.calculateColorCSS,\r\n            showLinkGenerator: this.showLinkGenerator,\r\n            showFileManager: this.showFileManager,\r\n            isEditor: this.isEditor,\r\n            postMessageToHolder: this.postMessageToHolder,\r\n            setWebsiteId: this.setWebsiteId\r\n        };\r\n    }\r\n\r\n    setWebsiteId = (websiteId) => {\r\n        this.setState({websiteId});\r\n    }\r\n\r\n    getThemeColorClass = (color) => {\r\n        if (!color.paletteName || !color.key)\r\n            return '';\r\n\r\n        let name = color.paletteName.replaceAll(' ', '_');\r\n        return `Color_${name}_${color.key}`;\r\n    }\r\n\r\n    getThemeBackColorClass = (color) => {\r\n        if (!color.paletteName || !color.key)\r\n            return '';\r\n\r\n        let name = color.paletteName.replaceAll(' ', '_');\r\n        return `BackColor_${name}_${color.key}`;\r\n    }\r\n\r\n    getTheme = (category, name) => {\r\n        if (name)\r\n            return Object.values(this.state.siteData.theme[category].items).find(t => {\r\n                return t.name === name;\r\n            })\r\n\r\n        return Object.values(this.state.siteData.theme[category].items);\r\n    }\r\n\r\n    getColor = (paletteName, key) => {\r\n        let {siteData} = this.state;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        this.calculateTheme(false);\r\n\r\n        return theme.Colors.items[paletteName][key];\r\n    };\r\n\r\n    calculateTheme = (force = true) => {\r\n        let {siteData} = this.state;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        if (!theme.Colors.calculated) {\r\n            Object.values(theme.Colors.items).forEach(item => {\r\n                let scheme = getColorScheme(item.main);\r\n                colorKeys.forEach(key => {\r\n                    if (force || !item[key])\r\n                        item[key] = scheme[key];\r\n                })\r\n            });\r\n\r\n            theme.Colors.calculated = true;\r\n\r\n            this.calculateColorCSS();\r\n        }\r\n    };\r\n\r\n    calculateColorCSS = (doc) => {\r\n        let {siteData} = this.state;\r\n        let theme = siteData.theme;\r\n        let colorsCSS = [];\r\n        console.log(\"calculateColorCSS\", doc);\r\n        Object.values(theme.Colors.items).forEach(item => {\r\n            colorKeys.forEach(key => {\r\n                let id = this.getThemeColorClass({\r\n                    paletteName: item.name,\r\n                    key: key\r\n                });\r\n                let backColor = this.getThemeBackColorClass({\r\n                    paletteName: item.name,\r\n                    key: key\r\n                });\r\n\r\n                let cssText = `\r\n                    .${id} {\r\n                        color: ${item[key]}\r\n                    }\r\n                    \r\n                    .${backColor} {\r\n                        background-color: ${item[key]}\r\n                    }\r\n                    `;\r\n\r\n                colorsCSS.push({cssText, id});\r\n                addCSS(cssText, id, doc);\r\n            })\r\n        });\r\n    }\r\n\r\n    setProduction = (callback) => {\r\n        this.setState({production:true, preview:true}, callback);\r\n    }\r\n\r\n    postMessageToHolder = (data, callback) => {\r\n        this.state.editor.postMessage(data, callback);\r\n    }\r\n\r\n    sendEditCommand = (callback) => {\r\n        this.state.editor.postMessage({\r\n            type: \"Holder\",\r\n            func: \"onEditMode\",\r\n            inputs: []\r\n        });\r\n        this.setPreview(false, callback);\r\n    }\r\n\r\n    sendPublishCommand = () => {\r\n        this.sendEditCommand(() => {\r\n            this.state.editor.postMessage({\r\n                type: \"Holder\",\r\n                func: \"onPublishClick\",\r\n                inputs: []\r\n            });\r\n        });\r\n    }\r\n\r\n    isEditor = () => {\r\n        return !this.state.preview && !this.state.production;\r\n    }\r\n\r\n    setPreview = (preview, callback) => {\r\n        let pageData = this.state.pageData;\r\n        this.setPageData(undefined, false, () => {\r\n            this.state.editor.idMan.clear();\r\n            this.setState({preview}, () => {\r\n                this.setPageData(pageData.props.pageId, false, callback);\r\n            });\r\n        });\r\n    }\r\n\r\n    update = (callback) => {\r\n        this.setState({reload: true}, callback);\r\n    };\r\n\r\n    initContext = (state, callback) => {\r\n        this.setState(state, callback);\r\n    };\r\n\r\n    getInnerWidth = () => {\r\n        return window.innerWidth - this.state.inspectorPinned ? this.state.inspectorWidth : 0;\r\n    };\r\n\r\n    setZoomScale = (zoomScale, callback) => {\r\n        this.setState({zoomScale}, callback);\r\n    };\r\n\r\n    setSiteData = (siteData, callback) => {\r\n        this.setState({siteData}, () => {\r\n            this.postSiteData();\r\n            callback && callback();\r\n        });\r\n    };\r\n\r\n    postSiteData = () => {\r\n        this.calculateColorCSS();\r\n    }\r\n\r\n    setPageData = (pageId, force, callback) => {\r\n        if (this.state.pageData && !force && this.state.pageData.props.pageId === pageId) {\r\n            return;\r\n        }\r\n\r\n        if (!pageId) {\r\n            this.setState({pageData: undefined}, callback);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.pageData) {\r\n            let pageData = this.state.siteData.allPages[pageId];\r\n\r\n            if (!pageData.breakpoints) {\r\n                pageData.breakpoints = BreakPointManager.getDefault();\r\n            }\r\n\r\n            this.state.editor.setBreakpoints(pageData.breakpoints);\r\n            this.setState({pageData}, callback);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.preview) {\r\n            this.state.editor.rootLayoutRef.current.onSelect(true, () => {\r\n                this.state.editor.idMan.clear();\r\n\r\n                this.state.setPageData(undefined, false , () => {\r\n                    let pageData = this.state.siteData.allPages[pageId];\r\n\r\n                    if (!pageData.breakpoints) {\r\n                        pageData.breakpoints = BreakPointManager.getDefault();\r\n                    }\r\n\r\n                    this.state.editor.setBreakpoints(pageData.breakpoints);\r\n                    this.setState({pageData}, callback);\r\n                });\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.state.editor.idMan.clear();\r\n\r\n            console.log(\"setPageData\", 62)\r\n            this.state.setPageData(undefined, false , () => {\r\n                let pageData = this.state.siteData.allPages[pageId];\r\n\r\n                if (!pageData.breakpoints) {\r\n                    pageData.breakpoints = BreakPointManager.getDefault();\r\n                }\r\n\r\n                console.log(\"setPageData\", 72)\r\n                this.state.editor.setBreakpoints(pageData.breakpoints);\r\n                this.setState({pageData}, callback);\r\n            });\r\n        }\r\n    };\r\n\r\n    onNewBpAdded = (newBpData, prevBpData) => {\r\n        if (!prevBpData){\r\n            this.update();\r\n            return;\r\n        }\r\n\r\n        console.log(\"newBpData\", newBpData.name, prevBpData.name)\r\n\r\n        let changeGriddata = (item, childData) => {\r\n            if (!item || !item.mounted)\r\n                return;\r\n\r\n            let bpData = childData.props.griddata.bpData;\r\n            bpData[newBpData.name] = bpData[prevBpData.name];\r\n            delete bpData[prevBpData.name];\r\n\r\n            Object.keys(item.getFromTempData(\"savedChildren\")).map(childId => {\r\n                let childData = item.getFromTempData(\"savedChildren\")[childId];\r\n                changeGriddata(\r\n                    item.allChildRefs[childId].current,\r\n                    childData\r\n                );\r\n            })\r\n        };\r\n\r\n        let pageChildData = {\r\n            tagName: this.state.editor.rootLayoutRef.current.props.tagName,\r\n            props: this.state.editor.rootLayoutRef.current.getClearProps({...this.state.editor.rootLayoutRef.current.props}),\r\n            zIndex: 0\r\n        };\r\n\r\n        changeGriddata(this.state.editor.rootLayoutRef.current, pageChildData);\r\n\r\n        this.update();\r\n    }\r\n\r\n    setInspectorPinned = (inspectorPinned, callback) => {\r\n        this.setState({inspectorPinned}, callback);\r\n    };\r\n\r\n    setInspectorWidth = (inspectorWidth, callback) => {\r\n        this.setState({inspectorWidth}, callback);\r\n    };\r\n\r\n    setDevicePixelRatio = (devicePixelRatio, callback) => {\r\n        this.setState({devicePixelRatio}, callback);\r\n    };\r\n\r\n    setAllComponentData = (allComponentData, callback) => {\r\n        this.setState({allComponentData}, callback);\r\n    };\r\n\r\n    toggleRightMenu = (menuName, state) => {\r\n        let {rightMenus} = this.state;\r\n\r\n        if (state === rightMenus[menuName].state)\r\n            return;\r\n\r\n        for(let props in rightMenus) {\r\n            if (rightMenus[props].state) {\r\n                rightMenus[props].state = false;\r\n                rightMenus[props].toggle(true);\r\n            }\r\n        }\r\n\r\n        rightMenus[menuName].state = rightMenus[menuName].toggle(false, state);\r\n\r\n        this.setState({rightMenus: {...rightMenus}});\r\n    };\r\n\r\n    setPageSizeWidth = (width) => {\r\n        this.state.editor.rootLayoutRef.current.setPageSizeWidth(width);\r\n        this.state.editor.breakpointmanager.setWindowWidth(width);\r\n        this.setState({pageSize: width});\r\n    };\r\n\r\n    setPageSize = (pageSize) => {\r\n        this.setState({pageSize});\r\n    };\r\n\r\n    setRightMenus = (rightMenus, callback) => {\r\n        this.setState({rightMenus}, callback);\r\n    };\r\n\r\n    showLinkGenerator = (linkData, onDone) => {\r\n        this.state.editor.showLinkGenerator(linkData, onDone);\r\n    }\r\n\r\n    showFileManager = (options, onDone) => {\r\n        this.state.editor.showFileManager(options, onDone);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </EditorContext.Provider>\r\n        )\r\n    }\r\n}\r\n","import {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\n\r\nexport default class DragDropManager {\r\n    setDragging = (item) => {\r\n        this.draggingItem = item;\r\n    };\r\n\r\n    getDragging = () => {\r\n        return this.draggingItem;\r\n    };\r\n\r\n    isDraggingItemFixed = () => {\r\n        if (!this.draggingItem)\r\n            return false;\r\n        return this.draggingItem.state.portalNodeId === \"page_fixed_holder\";\r\n    };\r\n\r\n    // return true if dropping on another parent\r\n    setDraggingStop = () => {\r\n        if (this.draggingItem && this.mouseOver &&\r\n            this.draggingItem.props.parent !== this.mouseOver &&\r\n            !this.mouseOver.getParentsId().includes(this.draggingItem.props.id) &&\r\n            !this.isDraggingItemFixed())\r\n        {\r\n            this.mouseOver.prepareRects();\r\n            this.dropItem(this.draggingItem, this.draggingItem.props.parent, this.mouseOver);\r\n\r\n            this.draggingItem = undefined;\r\n            return true;\r\n        }\r\n\r\n        this.draggingItem = undefined;\r\n        return false;\r\n    };\r\n\r\n    dropItem = (item, parent, newParent, callback, fromUndoRedo, undoPower) => {\r\n        item.toggleHelpLines();\r\n        parent.onChildLeave(item);\r\n\r\n        let drop = () => {\r\n            newParent.onChildDrop(item, undefined, undefined, (newItem) => {\r\n                if (callback)\r\n                    callback(newItem);\r\n\r\n                if (!fromUndoRedo) {\r\n                    let itemId = item.props.id;\r\n                    let firstRelativeX =\r\n                        (item.dragData? item.dragData.firstPos.left : newItem.getSize(false).left)\r\n                        - parent.getSize(false).left;\r\n                    let firstRelativeY =\r\n                        (item.dragData? item.dragData.firstPos.top : newItem.getSize(false).top)\r\n                        - parent.getSize(false).top;\r\n                    let parentRect = cloneObject(parent.getSize(false));\r\n                    let lastRelativeX = newItem.getSize(false).left - newParent.getSize(false).left;\r\n                    let lastRelativeY = newItem.getSize(false).top - newParent.getSize(false).top;\r\n                    let newParentRect = cloneObject(newParent.getSize(false));\r\n                    let width = newItem.getSize(false).width;\r\n                    let height = newItem.getSize(false).height;\r\n\r\n                    let parentId = parent.props.id;\r\n                    let newParentId = newParent.props.id;\r\n                    item.props.undoredo.add((idMan) => {\r\n                        idMan.getItem(itemId).onSelect(true);\r\n                        this.setMouseOver(idMan.getItem(newParentId));\r\n                        this.dropItem(idMan.getItem(itemId), idMan.getItem(parentId), idMan.getItem(newParentId),\r\n                            (newItem) => {\r\n                                setTimeout(() => {\r\n                                    idMan.getItem(itemId).setPosition(false, lastRelativeX, lastRelativeY, undefined, undefined,\r\n                                        width, height, newParentRect, true);\r\n                                }, 0);\r\n                            }, true);\r\n                    }, (idMan) => {\r\n                        idMan.getItem(itemId).onSelect(true);\r\n                        this.setMouseOver(idMan.getItem(parentId));\r\n                        this.dropItem(idMan.getItem(itemId), idMan.getItem(newParentId), idMan.getItem(parentId),\r\n                            (newItem) => {\r\n                                setTimeout(() => {\r\n                                    idMan.getItem(itemId).setPosition(false, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                                        width, height, parentRect, true);\r\n                                }, 0);\r\n                            }, true);\r\n                    }, undoPower);\r\n                }\r\n            });\r\n        };\r\n        if (item.props.dragdrop.mouseOver === newParent &&\r\n            item.props.gridLine.hasGridLine(newParent.props.id)) {\r\n            drop();\r\n        } else {\r\n            item.props.dragdrop.setMouseOver(newParent, undefined, drop);\r\n        }\r\n    };\r\n\r\n    removeMouseOver = () => {\r\n        delete this.mouseOver;\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.isDraggingItemFixed())\r\n            return;\r\n\r\n        if (this.mouseOver) {\r\n            if (!this.mouseOver.getFromTempData(\"selected\")) {\r\n                if (this.mouseOver !== item)\r\n                    this.mouseOver.toggleGridLines(false);\r\n            }\r\n        }\r\n\r\n        this.mouseOver = item;\r\n\r\n        if(this.draggingItem)\r\n            this.draggingItem.toggleHelpLines();\r\n\r\n        item.toggleGridLines(true, () => {\r\n            if(this.draggingItem)\r\n                this.draggingItem.toggleHelpLines(item);\r\n            if (callback)\r\n                callback(this.draggingItem, this.mouseOver);\r\n        }, \"B\");\r\n    };\r\n\r\n    setMouseOverForNonDragging = (item) => {\r\n        this.mouseOverNonDragging = item;\r\n    };\r\n\r\n    getMouseOverForNonDragging = () => {\r\n        return this.mouseOverNonDragging;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport {shallowEqual} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerChildren extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(JSON.stringify(this.allChildIndex),\r\n                JSON.stringify(Object.values(nextProps.allChildren).map(c => {\r\n                    return {\r\n                        z: c.zIndex,\r\n                        i: c.child.props.id\r\n                    }\r\n                })))\r\n        )\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => {\r\n            return {\r\n                z: c.zIndex,\r\n                i: c.child.props.id\r\n            }\r\n        });\r\n    };\r\n\r\n    getSorted = (children) => {\r\n        return children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex)\r\n                return 1;\r\n            if (a.zIndex < b.zIndex)\r\n                return -1;\r\n\r\n            return 0;\r\n        })\r\n    };\r\n\r\n    getChildren = (allChildren, agl) => {\r\n        if (this.props.getChildrenOverride)\r\n            return this.props.getChildrenOverride(this.getSorted(Object.values(allChildren)), agl);\r\n\r\n        return this.getSorted(Object.values(allChildren)).map((child) => {\r\n            return child.child;\r\n        })\r\n    };\r\n\r\n    render () {\r\n        this.saveState();\r\n        let {allChildren, agl} = this.props;\r\n        return (\r\n            this.getChildren(allChildren, agl)\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorBreadcrumbs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div\r\n                className=\"InspectorOptionRoot\"\r\n            >\r\n                <div\r\n                    className=\"InspectorBreadcrumbsParentsRoot\"\r\n                >\r\n                        {\r\n                            item.getParentsId().slice(0, 2).reverse().map(parentId => {\r\n                                let parent = item.props.idMan.getItem(parentId);\r\n                                return (\r\n                                    <ButtonBase\r\n                                        className={\"InspectorBreadcrumbsParentsButton\"}\r\n                                        onClick={(e) => {\r\n                                            parent.onSelect(true);\r\n                                        }}\r\n                                        key={parent.props.id}\r\n                                    >\r\n                                        {\r\n                                            parent.props.tagName + \" >\"\r\n                                        }\r\n                                    </ButtonBase>\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n\r\n                <span\r\n                    className=\"InspectorBreadcrumbsTagName\"\r\n                >\r\n                    {item.props.tagName}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class IconButton extends React.Component {\r\n    render () {\r\n        let selectStyle = {};\r\n        if (this.props.selected) {\r\n            selectStyle.backgroundColor = this.props.selectedColor || \"#8ae8f6\"\r\n        }\r\n        return (\r\n            <ButtonBase\r\n                aria-label={this.props[\"aria-label\"] || \"aria-label\"}\r\n                onClick={this.props.onClick}\r\n                style={{...{\r\n                    marginLeft: 4,\r\n                    borderRadius: 4,\r\n                    boxSizing: \"border-box\",\r\n                    ...selectStyle\r\n                }, ...this.props.buttonBaseStyle}}\r\n                className={this.props.className}\r\n                disabled={this.props.disabled}\r\n                ref={this.props.rootRef}\r\n            >\r\n                <div style={{...{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    padding: 6,\r\n                }, ...this.props.imageContainerStyle}}>\r\n                    {\r\n                        this.props.icon\r\n                    }\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {alignItem} from \"../../AwesomwGridLayoutHelper\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class InspectorAligns extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                name: \"Align to left\",\r\n                horizontal: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-left.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to center\",\r\n                horizontal: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-center.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to right\",\r\n                horizontal: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-right.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to top\",\r\n                vertical: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-top.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to middle\",\r\n                vertical: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-middle.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to bottom\",\r\n                vertical: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-bottom.svg')}\r\n                />\r\n            },\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div className=\"InspectorOptionRoot\">\r\n                <span className=\"InspectorOptionTextTitle\">\r\n                    Alignment\r\n                </span>\r\n                <div\r\n                    className=\"InspectorAlignsRoot\"\r\n                >\r\n                    {\r\n                        this.getButtonsData().map((data, i) => {\r\n                            return (\r\n                                <IconButton\r\n                                    key={data.name}\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 0,\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 6\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        alignItem(item, data.vertical, data.horizontal)\r\n                                    }}\r\n                                    className=\"InspectorAlignsButtons\"\r\n                                >\r\n                                    {data.img}\r\n                                </IconButton>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from 'lodash.merge';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport Stack from \"./Components/Stack/Stack\";\r\nimport DynamicComponents from \"./Dynamic/DynamicComponents\";\r\nimport {getCompositeFromData, getFromData, setData} from \"./BreakPointManager\";\r\nimport ContextMenu from \"./Test/ContextMenu\";\r\nimport chroma from \"chroma-js\";\r\n\r\nlet deepEqual = require('fast-deep-equal/es6');\r\n\r\nexport function stretch(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let saveStyle = cloneObject(item.getFromData(\"style\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            stretch(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).setStyle(saveStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (item.hasOverride(\"stretch\")) {\r\n        item.callOverride(\"stretch\", item);\r\n        return;\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let beStretch = false;\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (!isStretch(item))\r\n        beStretch = true;\r\n\r\n    item.setDocks(beStretch, beStretch, false, beStretch, item.getFromTempData(\"autoDock\"), undefined, true);\r\n\r\n    gridItemStyle.alignSelf = beStretch? \"start\": \"start\";\r\n    gridItemStyle.justifySelf = beStretch? \"stretch\": \"center\";\r\n    gridItemStyle.marginTop = \"0px\";\r\n    gridItemStyle.marginLeft = \"0px\";\r\n    gridItemStyle.marginRight = \"0px\";\r\n    gridItemStyle.marginBottom = \"0px\";\r\n    item.setStyleParam(\"width\", \"auto\");\r\n    item.setStyleParam(\"height\", \"100%\");\r\n    item.setStyleParam(\"minHeight\", \"unset\");\r\n\r\n    if (!beStretch) {\r\n        let parentRect = item.props.parent.getSize();\r\n        gridItemStyle.marginTop = `${(parentRect.height - 0.8 * parentRect.height) / 2}px`;\r\n\r\n        item.setStyleParam(\"width\", \"80%\");\r\n        item.setStyleParam(\"height\", \"auto\");\r\n        item.setStyleParam(\"minHeight\", `${0.8 * parentRect.height}px`);\r\n    }\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function getFromTempData(item, prop) {\r\n    let dataToRead = item.props.griddata;\r\n    return dataToRead[prop];\r\n}\r\n\r\nexport function isStretch(item, log) {\r\n    if (item.hasOverride(\"isStretch\")) {\r\n        return item.callOverride(\"isStretch\", item, log);\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    return !(gridItemStyle.alignSelf !== \"start\" || gridItemStyle.justifySelf !== \"stretch\" ||\r\n        gridItemStyle.marginTop !== \"0px\" || gridItemStyle.marginLeft !== \"0px\" ||\r\n        gridItemStyle.marginRight !== \"0px\" || gridItemStyle.marginBottom !== \"0px\");\r\n}\r\n\r\nexport function allowStretch(item) {\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    if (item.props.as === \"section\" || item.props.as === \"header\" || item.props.as === \"footer\")\r\n        return false;\r\n\r\n    return !item.props.disableStretch;\r\n}\r\n\r\nexport function alignItem(item, vertical, horizontal, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            alignItem(idMan.getItem(itemId), vertical, horizontal, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (vertical) {\r\n        gridItemStyle.alignSelf = vertical;\r\n        gridItemStyle.marginTop = \"0px\";\r\n        gridItemStyle.marginBottom = \"0px\";\r\n    }\r\n    if (horizontal) {\r\n        gridItemStyle.justifySelf = horizontal;\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n    }\r\n\r\n    let baseDocks = item.getBaseDocks();\r\n    item.setDocks(\r\n        baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n        item.getFromTempData(\"autoDock\"), undefined, true\r\n    );\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function setScrollBehaviour(item, behaviour, pageAgl, fromUndoRedo, {offsetTop} = {}) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let pageId = pageAgl.props.id;\r\n        let oldBehaviour = item.getFromData(\"isFixed\")? \"fixed\": item.getFromData(\"scrollBehaviour\") || \"none\";\r\n        let oldOffsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        item.props.undoredo.add((idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), behaviour, idMan.getItem(pageId), true, {offsetTop});\r\n        }, (idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), oldBehaviour, idMan.getItem(pageId), true,\r\n                {offsetTop: oldOffsetTop});\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let oldIsFixed = item.getFromTempData(\"isFixed\");\r\n\r\n    let lastSectionId = item.getFromTempData(\"lastSectionId\");\r\n    if (oldIsFixed && behaviour !== \"fixed\" && lastSectionId) {\r\n        item.props.parent.onChildLeave(item);\r\n        let itemRect = item.getSize(false);\r\n        let sectionParent = item.props.viewRef.current\r\n            .props.aglComponent.getSectionOfPoint(itemRect.left, itemRect.top);\r\n\r\n        sectionParent.onSelect(true, undefined, undefined, undefined, true);\r\n        sectionParent.prepareRects();\r\n        sectionParent.onChildDrop(item, undefined, false, (newItem) => {\r\n            newItem.setState({portalNodeId: undefined});\r\n            window.requestAnimationFrame(() => {\r\n                newItem.onSelect(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    item.setTempData(\"isFixed\", behaviour === \"fixed\");\r\n    item.setDataInBreakpoint(\"scrollBehaviour\", behaviour);\r\n    item.setDataInBreakpoint(\"scrollStickyOffsetTop\", offsetTop);\r\n\r\n    switch (behaviour) {\r\n        case \"none\":\r\n            item.setStyleParam(\"position\", undefined);\r\n            item.setStyleParam(\"top\", undefined);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"sticky\":\r\n            item.setStyleParam(\"position\", \"sticky\");\r\n            item.setStyleParam(\"top\", offsetTop || 0);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"fixed\":\r\n            if (!oldIsFixed) {\r\n                addFixedChildToRoot(item, pageAgl);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\nfunction addFixedChildToRoot(item, pageAgl) {\r\n    let oldParentRect = item.props.parent.getSize(false);\r\n    item.toggleHelpLines();\r\n    item.setTempData(\"lastSectionId\", item.props.parent.props.id);\r\n    item.props.parent.onChildLeave(item);\r\n    pageAgl.onSelect(true, undefined, undefined, undefined, true);\r\n    let pageRect = pageAgl.prepareRects();\r\n    let itemRect = item.getSize(false);\r\n\r\n    pageAgl.onChildDrop(item, undefined, true, (newItem) => {\r\n        window.requestAnimationFrame(() => {\r\n            newItem.onSelect(true);\r\n        });\r\n    });\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n    gridItemStyle.gridArea = \"1/1/2/2\";\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n\r\n    let style = item.getCompositeFromData(\"style\");\r\n\r\n    let newWidth = itemRect.width *  oldParentRect.width / pageRect.width;\r\n    item.setStyleParam(\"width\", getStyleValueFromPx(newWidth, oldParentRect.width,\r\n        getUnitFromStyleValue(style.width), item));\r\n    item.setStyleParam(\"height\", getStyleValueFromPx(itemRect.height, oldParentRect.height,\r\n        getUnitFromStyleValue(style.height), item));\r\n    item.setStyleParam(\"position\", undefined);\r\n    item.setStyleParam(\"top\", undefined);\r\n    item.setStyleParam(\"pointerEvents\", \"auto\");\r\n}\r\n\r\nexport function isFixed(item) {\r\n    return item.getFromTempData(\"isFixed\");\r\n}\r\n\r\nexport function hideInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", \"none !important\");\r\n    item.props.viewRef.current.props.aglComponent.updateTemplates();\r\n    item.props.select.onScrollItem();\r\n    item.props.editor.updateLayout();\r\n}\r\n\r\nexport function isHideInBreakPoint(item, fromUndoRedo) {\r\n    return item.getCompositeFromData(\"style\").display === \"none !important\";\r\n}\r\n\r\nexport function showInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", undefined);\r\n    let newStyle = item.getFromData(\"style\");\r\n    if (newStyle && Object.keys(newStyle).length === 0) {\r\n        item.setDataInBreakpoint(\"style\", undefined);\r\n    }\r\n    item.props.viewRef.current.props.aglComponent.updateTemplates();\r\n    item.props.editor.updateLayout();\r\n}\r\n\r\nexport function getFromComponentData(item, prop, breakpointName) {\r\n    return item.props.breakpointmanager\r\n        .getFromData(item.props.griddata, prop, breakpointName)\r\n};\r\n\r\nexport function hasBreakpointDesign(fromName, item) {\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n    return !(fromData === undefined);\r\n}\r\n\r\nexport function pasteFromBreakpointDesign(item, fromName, toName, fromUndoRedo) {\r\n    let fromData = item.props.griddata.bpData[fromName].design;\r\n    if (fromData === undefined)\r\n        return;\r\n\r\n    if (!toName)\r\n        toName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[toName])\r\n        item.props.griddata.bpData[toName] = {};\r\n\r\n    let currentData = item.props.griddata.bpData[toName].design;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(currentData);\r\n        item.props.undoredo.add((idMan) => {\r\n            pasteFromBreakpointDesign(idMan.getItem(itemId), fromName, toName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[toName].design = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    if (!currentData)\r\n        currentData = {};\r\n    merge(currentData, fromData);\r\n    item.props.griddata.bpData[toName].design = currentData;\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function deepAssign(fromData, currentData) {\r\n    Object.keys(fromData).map(key => {\r\n        let currentValue = currentData[key];\r\n        let fromValue = fromData[key];\r\n        if (currentValue === undefined) {\r\n            currentData[key] = cloneObject(fromValue);\r\n        } else {\r\n            if (fromValue instanceof Object) {\r\n                if (!currentValue)\r\n                    currentData[key] = {};\r\n                deepAssign(fromValue, currentValue)\r\n            } else {\r\n                currentData[key] = cloneObject(fromValue);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function removeOverrides(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (fromName === \"laptop\")\r\n        return;\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(item.props.griddata.bpData[fromName] || {});\r\n        item.props.undoredo.add((idMan) => {\r\n            removeOverrides(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[fromName] = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.griddata.bpData[fromName] = {};\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function applyOnAllBreakPoint(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n\r\n    let undoData = {};\r\n\r\n    let sortedBreakPoints = item.props.breakpointmanager.getSortedBreakPoints();\r\n    for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n        let toName = sortedBreakPoints[i].name;\r\n        if (fromData !== toName) {\r\n            undoData[toName] = cloneObject(item.props.griddata.bpData[toName] || {});\r\n            item.props.griddata.bpData[toName] = cloneObject(fromData);\r\n        }\r\n    }\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            applyOnAllBreakPoint(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            Object.keys(undoData).forEach(key => {\r\n                idMan.getItem(itemId).props.griddata.bpData[key] = undoData[key];\r\n            });\r\n\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function copyDesign(item, fromAll) {\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n\r\n    let designDatas = [];\r\n    if (!fromAll && item.props.griddata.bpData[currentBpName])\r\n        designDatas[0] = {\r\n            bpName: currentBpName,\r\n            design: item.props.griddata.bpData[currentBpName].design,\r\n            justOneBp: true\r\n        };\r\n    else if (fromAll) {\r\n        Object.keys(item.props.griddata.bpData).forEach((key, index) => {\r\n            designDatas[index] = {\r\n                bpName: key,\r\n                design: item.props.griddata.bpData[key].design\r\n            };\r\n        });\r\n    }\r\n\r\n    console.log(\"copyDesign\", designDatas);\r\n    if (designDatas.length > 0)\r\n        item.props.breakpointmanager.copyDesign(designDatas, item);\r\n}\r\n\r\nexport function pasteDesign(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let copyDesign = cloneObject(item.props.breakpointmanager.getCopyDesign().designDatas);\r\n        let allOldDesign = cloneObject(Object.keys(item.props.griddata.bpData).map(key => {\r\n            return {\r\n                bpName: key,\r\n                design: item.props.griddata.bpData[key].design\r\n            }\r\n        }));\r\n        item.props.undoredo.add((idMan) => {\r\n            let item = idMan.getItem(itemId);\r\n            console.log(111);\r\n            let temp = cloneObject(item.props.breakpointmanager.getCopyDesign().designDatas);\r\n            let sourceItemTemp = item.props.breakpointmanager.getCopyDesign().sourceItem;\r\n            console.log(222);\r\n            item.props.breakpointmanager.cloneDesignDatas = {\r\n                designDatas: copyDesign,\r\n                sourceItem: item\r\n            };\r\n            item.props.breakpointmanager.pasteDesign(item);\r\n            console.log(333);\r\n            item.props.breakpointmanager.cloneDesignDatas = {\r\n                designDatas: temp,\r\n                sourceItem: sourceItemTemp\r\n            };\r\n\r\n            item.onBreakpointChange(\r\n                item.props.breakpointmanager.getWindowWidth(),\r\n                item.props.breakpointmanager.current());\r\n\r\n            item.props.aglComponent.updateDesign &&\r\n                item.props.aglComponent.updateDesign(item.getCompositeFromData(\"design\"));\r\n\r\n            item.updateLayout();\r\n            console.log(444);\r\n        }, (idMan) => {\r\n            let item = idMan.getItem(itemId);\r\n            allOldDesign.forEach(designData => {\r\n                item.props.griddata.bpData[designData.bpName].design = cloneObject(designData.design);\r\n            });\r\n\r\n            item.onBreakpointChange(\r\n                item.props.breakpointmanager.getWindowWidth(),\r\n                item.props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.breakpointmanager.pasteDesign(item);\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n\r\n    item.props.aglComponent.updateDesign &&\r\n        item.props.aglComponent.updateDesign(item.getCompositeFromData(\"design\"));\r\n\r\n    item.updateLayout();\r\n}\r\n\r\nexport function isGroupSelected(item) {\r\n    return item.props.select.group;\r\n}\r\n\r\nexport function getSectionId(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent.props.id;\r\n\r\n    return uuidv4();\r\n}\r\n\r\nexport function getSectionParent(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent;\r\n}\r\n\r\nexport function createStack(items, fromUndoRedo) {\r\n    if (!items || items.length < 2)\r\n        return;\r\n\r\n    let itemsParent = getSectionParent(items[0]);\r\n\r\n    if (!itemsParent)\r\n        return;\r\n\r\n    let top = 99999999;\r\n    let left = 99999999;\r\n    let rightFromLeft = 0;\r\n    let allSpacerData = [];\r\n    let lastBottom;\r\n\r\n    items.sort((a,b) => {\r\n        if (a && b){\r\n            let topA = a.getSize(false).top;\r\n            let topB = b.getSize(false).top;\r\n            if (topA < topB) {\r\n                return -1;\r\n            } else if (topA === topB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    items.forEach((item) => {\r\n        let rect = item.getSize(false);\r\n        top = Math.min(rect.top, top);\r\n        left = Math.min(rect.left, left);\r\n        rightFromLeft = Math.max(rect.left + rect.width, rightFromLeft);\r\n\r\n        if (lastBottom) {\r\n            allSpacerData.push({\r\n                height: Math.max(0, rect.top - lastBottom)\r\n            });\r\n        }\r\n\r\n        lastBottom = rect.top + rect.height;\r\n    });\r\n\r\n    let stack;\r\n    let stackNode =\r\n        <Stack\r\n            style={{\r\n                width: `${rightFromLeft - left}px`,\r\n            }}\r\n            lateMountedComplete={(_stack) => {\r\n                stack = _stack;\r\n            }}\r\n            allSpacerData={allSpacerData}\r\n            document={items[0].props.document}\r\n        />;\r\n\r\n    let parentRect = itemsParent.prepareRects();\r\n    itemsParent.addChild(stackNode, undefined, undefined, undefined, (agl) => {\r\n        if (!fromUndoRedo) {\r\n            let stackId = agl.props.id;\r\n            let itemIds = items.map(item => {\r\n                return item.props.id;\r\n            });\r\n            agl.props.undoredo.add((idMan) => {\r\n                let newItems = itemIds.map(id => {\r\n                    return idMan.getItem(id);\r\n                });\r\n                newItems.forEach(item => {\r\n                    item.onSelect(true);\r\n                });\r\n                createStack(newItems, true);\r\n            }, (idMan) => {\r\n                removeStackFromAGL(idMan.getItem(stackId), undefined, true);\r\n            });\r\n        }\r\n\r\n        agl.onSelect(true);\r\n        let {gridItemStyle} =\r\n            agl.calculateGridItem(left - parentRect.left, top - parentRect.top,\r\n                itemsParent, undefined, undefined, itemsParent.getSize(false));\r\n        agl.setGridItemStyle(gridItemStyle);\r\n        agl.prepareRects();\r\n        // agl.prepareRects(true);\r\n        setTimeout(() => {\r\n            items = items.filter(item => {\r\n                return item.props.id !== agl.props.id;\r\n            });\r\n\r\n            let addToStack = (items) => {\r\n                let item = items.shift();\r\n                if (!item)\r\n                    return;\r\n\r\n                item.props.parent.onChildLeave(item);\r\n                agl.onChildDrop(item, undefined, undefined, () => {\r\n                    addToStack(items);\r\n                });\r\n            };\r\n            addToStack(items);\r\n            setTimeout(() => {\r\n                stack.setOrder();\r\n                setTimeout(() => {\r\n                    let width = agl.getSize(false, true).width;\r\n                    let parentWidth = agl.props.parent.getSize(false).width;\r\n                    agl.setProps(\"width\", `${width / parentWidth * 100}%`);\r\n                    agl.onSelect(true);\r\n                }, 0);\r\n            }, 0);\r\n        }, 0);\r\n    });\r\n}\r\n\r\nexport function removeStack(stack, childIds, fromUndoRedo) {\r\n    removeStackFromAGL (stack.aglRef.current, childIds, fromUndoRedo);\r\n}\r\n\r\nexport function removeStackFromAGL(stackAgl, childIds, fromUndoRedo) {\r\n    stackAgl.removing = true;\r\n    if (!stackAgl || !stackAgl.props.isStack)\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let stackId = stackAgl.props.id;\r\n        stackAgl.props.undoredo.add((idMan) => {\r\n            removeStackFromAGL(idMan.getItem(stackId), childIds, true);\r\n        }, (idMan) => {\r\n            let newItems = childIds.map(id => {\r\n                return idMan.getItem(id);\r\n            });\r\n            createStack(newItems, true);\r\n        });\r\n    }\r\n\r\n    let newParent = stackAgl.props.parent;\r\n    stackAgl.clearItem();\r\n\r\n    let sorted = Object.values(stackAgl.allChildRefs).sort((a,b) => {\r\n        if (a && a.current && b && b.current){\r\n            let relativeYA = a.current.getFromData(\"relativeY\");\r\n            let relativeYB = b.current.getFromData(\"relativeY\");\r\n            if (relativeYA < relativeYB) {\r\n                return 1;\r\n            } else if (relativeYA === relativeYB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    newParent.onSelect(true);\r\n    newParent.prepareRects();\r\n    // newParent.prepareRects(true);\r\n    let removeChilds = (sorted) => {\r\n        let item = sorted.shift();\r\n\r\n        if (!item) {\r\n            setTimeout(() => {\r\n                newParent.onChildLeave(stackAgl);\r\n            }, 0);\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            if (item && item.current) {\r\n                item.current.props.parent.onChildLeave(item.current);\r\n                newParent.onChildDrop(item.current);\r\n            }\r\n            removeChilds(sorted, newParent);\r\n        }, 0);\r\n    };\r\n\r\n    removeChilds(sorted);\r\n    /*sorted.forEach(item => {\r\n        if (item && item.current) {\r\n            console.log(\"onChildDrop\", item.current.props.id);\r\n            item.current.props.parent.onChildLeave(item.current);\r\n            newParent.onChildDrop(item.current);\r\n        }\r\n    });*/\r\n}\r\n\r\nexport function createItem(parent, childData, fromUndoRedo, gridItemStyle, style, onChildMounted) {\r\n    childData.props = cloneObject(parent.getClearProps({...childData.props}, true));\r\n    childData.zIndex = parent.getNextIndexData(0).lastZIndex + 1;\r\n\r\n    if (gridItemStyle) {\r\n        parent.setDataInBreakpoint(\r\n            \"gridItemStyle\", gridItemStyle, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n    if (style) {\r\n        parent.setDataInBreakpoint(\r\n            \"style\", style, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n\r\n    let child = parent.createChildByData(\r\n        childData , DynamicComponents, undefined, (newItem) => {\r\n        newItem.onSelect(true);\r\n\r\n        onChildMounted && onChildMounted(newItem);\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = newItem.props.id;\r\n            let parentId = parent.props.id;\r\n            let childData = cloneObject(parent.getChildData(itemId));\r\n            parent.props.undoredo.add((idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true, gridItemStyle, style);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            });\r\n        }\r\n    });\r\n\r\n    parent.children[childData.props.id] = {\r\n        child: child,\r\n        zIndex: childData.zIndex\r\n    };\r\n\r\n    let savedChildren = parent.getFromTempData(\"savedChildren\");\r\n    savedChildren[childData.props.id] = childData;\r\n\r\n    parent.updateLayout();\r\n}\r\n\r\nexport function setDataInBreakpoint(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(prop, undefined, breakpointName);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setDataInBreakpoint(prop, saveValue, idMan.getItem(itemId), false, breakpointName, updateLayout);\r\n        }, (idMan) => {\r\n            setDataInBreakpoint(prop, oldValue, idMan.getItem(itemId), false, breakpointName, updateLayout);\r\n        }, addToUndo);\r\n    }\r\n    item.setDataInBreakpoint(prop, value, undefined, breakpointName);\r\n\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setTempData(prop, value, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromTempData(prop);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setTempData(prop, saveValue, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setTempData(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setTempData(prop, value);\r\n}\r\n\r\nexport function setStyle(newStyle, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let saveStyle = cloneObject(newStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setStyle(newStyle);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setStyleParam (param, value, item, addToUndo, breakpointName, dontAddToSnap) {\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyleParam(param, value, idMan.getItem(itemId), false, breakpointName, dontAddToSnap);\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        }, addToUndo);\r\n    }\r\n\r\n    let style = item.hasDataInBreakPoint(\"style\", undefined, breakpointName) || {};\r\n    style[param] = value;\r\n    if (value === undefined)\r\n        delete style[param];\r\n    item.setStyle(style, undefined, breakpointName, undefined, dontAddToSnap);\r\n}\r\n\r\nexport function setNewSize(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(`style.${prop}`, undefined, breakpointName);\r\n        let saveStyle = cloneObject(item.getFromData(\"style)\"));\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setNewSize(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setNewSize(prop, value);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setGridItemStyle(newGridItemStyle, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGridItemStyle = item.getFromData(\"gridItemStyle\", undefined, breakpointName);\r\n        oldGridItemStyle = cloneObject(oldGridItemStyle);\r\n        let saveGridItemStyle = cloneObject(newGridItemStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridItemStyle(saveGridItemStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridItemStyle(oldGridItemStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridItemStyle(newGridItemStyle);\r\n    item.invalidateSize(true, true, true);\r\n}\r\n\r\nexport function setGridArea(newGridArea, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldGridArea = item.getGridArea();\r\n        oldGridArea = cloneObject(oldGridArea);\r\n        let saveGridArea = cloneObject(newGridArea);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridArea(saveGridArea, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridArea(oldGridArea, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridArea(newGridArea);\r\n}\r\n\r\nexport function setGrid(newGrid, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGrid = item.getFromData(\"grid\", undefined, breakpointName);\r\n        oldGrid = cloneObject(oldGrid);\r\n        let saveGrid = cloneObject(newGrid);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGrid(saveGrid, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGrid(oldGrid, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGrid(newGrid);\r\n}\r\n\r\nexport function setAnchor(newAnchor, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldAnchor = item.getFromTempData(\"anchor\");\r\n        oldAnchor = cloneObject(oldAnchor);\r\n        let saveAnchor = cloneObject(newAnchor);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setAnchor(saveAnchor, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setAnchor(oldAnchor, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setAnchor(newAnchor);\r\n}\r\n\r\nexport function arrangeIndex(item, child, type, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldType = type === \"forward\"? \"backward\":\r\n            type === \"backward\"? \"forward\": undefined;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), type);\r\n        }, (idMan) => {\r\n            if (oldType)\r\n                arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldType);\r\n            else\r\n                changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.arrangeIndex(child, type);\r\n}\r\n\r\nexport function changeIndex (item, child, index, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), index);\r\n        }, (idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.changeIndex(child, index);\r\n}\r\n\r\nexport function resolveDesignData (item, key, value){\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName()))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    if (!key)\r\n        return;\r\n\r\n    let design = getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName());\r\n    if (!design[key])\r\n        design[key] = value || {};\r\n}\r\n\r\nexport function getCompositeDesignData (item) {\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getCompositeFromData(item.props.griddata, \"design\", breakpointData))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    return getCompositeFromData(item.props.griddata, \"design\", breakpointData);\r\n}\r\n\r\nexport function rotate (item, degree, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldDegree = item.getFromData(\"rotateDegree\");\r\n        item.props.undoredo.add((idMan) => {\r\n            rotate(idMan.getItem(itemId), degree, true);\r\n        }, (idMan) => {\r\n            rotate(idMan.getItem(itemId), oldDegree || 0, true);\r\n        });\r\n    }\r\n\r\n    item.setDataInBreakpoint(\"transform.rotateDegree\", degree);\r\n    item.setTransformStyle(item.getFromData(\"transform\"));\r\n    item.updateLayout(item.props.select.onScrollItem);\r\n}\r\n\r\nexport function getViewRatioStyle (value) {\r\n    if (value.includes('vh'))\r\n        return`calc(${value} * var(--vh-ratio))`;\r\n    if (value.includes('vw'))\r\n        return`calc(${value} * var(--vw-ratio))`;\r\n\r\n    return value;\r\n}\r\n\r\nexport function getValueFromCSSValue (value) {\r\n    if (!value)\r\n        return \"\";\r\n\r\n    if (value.includes(\"%\")) {\r\n        return Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        return Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        return Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function getPxValueFromCSSValue (value, parentValue, item) {\r\n    if (!value)\r\n        return;\r\n    if (!isNaN(value))\r\n        return value;\r\n\r\n    if (value.includes(\"%\")) {\r\n        let percent = Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n        return percent * parentValue / 100;\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        let percent = Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n\r\n        return percent * item.props.breakpointmanager.getWindowHeight() / 100;\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        let percent =  Math.round(parseFloat(\r\n            value.replace(/[^0-9\\.]/g, '')\r\n        ) * 100) / 100;\r\n\r\n        return percent * item.props.breakpointmanager.getWindowWidth() / 100;\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function getStyleValueFromPx (value, parentValue, unit, item) {\r\n    if (!unit)\r\n        unit = \"px\";\r\n\r\n    if (unit === \"px\") {\r\n        return `${value}${unit}`;\r\n    }\r\n    if (unit === \"%\") {\r\n        return `${value / parentValue * 100}${unit}`;\r\n    }\r\n    if (unit === \"vh\") {\r\n        value = `${value / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n        return `calc(${value} * var(--vh-ratio))`;\r\n    }\r\n    if (unit === \"vw\") {\r\n        value = `${value / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n        return `calc(${value} * var(--vw-ratio))`;\r\n    }\r\n\r\n    return unit;\r\n}\r\n\r\nexport function getUnitFromStyleValue (value) {\r\n    if (!value)\r\n        return \"none\";\r\n\r\n    if (value.includes(\"%\")) {\r\n        return \"%\";\r\n    }\r\n\r\n    if (value.includes(\"px\")) {\r\n        return \"px\";\r\n    }\r\n\r\n    if (value.includes(\"vw\")) {\r\n        return \"vw\";\r\n    }\r\n\r\n    if (value.includes(\"vh\")) {\r\n        return \"vh\";\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport function createContextMenu(e, item, onClose) {\r\n    if (item.props.isPage)\r\n        return;\r\n\r\n    let menu = [];\r\n\r\n    item.getContextMenu() && menu.push(item.getContextMenu());\r\n\r\n    // Copy section\r\n    let copySection = [\r\n        {\r\n            name: \"Copy\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.copy(item);\r\n            },\r\n            shortcut: \"Ctrl + C\"\r\n        },\r\n        {\r\n            name: \"Paste\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.paste(item);\r\n            },\r\n            shortcut: \"Ctrl + V\"\r\n        },\r\n        {\r\n            name: \"Duplicate\",\r\n            onClick: (e) => {\r\n                item.props.copyMan.duplicate(item);\r\n            },\r\n            shortcut: \"Ctrl + D\"\r\n        },\r\n        {\r\n            name: \"Copy Element Design\",\r\n            subMenu: [\r\n                {\r\n                    name: \"From this breakpoint\",\r\n                    onClick: (e) => {\r\n                        copyDesign(item);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"From all breakpoint\",\r\n                    onClick: (e) => {\r\n                        copyDesign(item, true);\r\n                    }\r\n                },\r\n            ]\r\n        },\r\n    ];\r\n    let copyDesignItem = item.props.breakpointmanager.getCopyDesign();\r\n    if (copyDesignItem && isSameFamily(copyDesignItem.sourceItem, item))\r\n        copySection.push({\r\n            name: \"Paste Design\",\r\n            onClick: (e) => {\r\n                pasteDesign(item);\r\n            }\r\n        });\r\n    let overrideBps = [];\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n    Object.keys(item.props.griddata.bpData).forEach(bpName => {\r\n        if (bpName === currentBpName ||\r\n            item.props.breakpointmanager.getHighestBpName() === bpName)\r\n            return;\r\n\r\n        if (item.props.griddata.bpData[bpName] && item.props.griddata.bpData[bpName].design) {\r\n            if (!item.props.griddata.bpData[currentBpName] ||\r\n                !deepEqual(item.props.griddata.bpData[bpName].design,\r\n                    item.props.griddata.bpData[currentBpName].design)) {\r\n                overrideBps.push(bpName);\r\n            }\r\n        }\r\n    });\r\n    if (overrideBps.length > 0) {\r\n        copySection.push({\r\n            name: \"Paste From Breakpoint\",\r\n            subMenu: overrideBps.map(bpName => {\r\n                return {\r\n                    name: bpName,\r\n                    onClick: (e) => {\r\n                        pasteFromBreakpointDesign(item, bpName, currentBpName);\r\n                    }\r\n                };\r\n            })\r\n        });\r\n    }\r\n    menu.push(copySection);\r\n\r\n    let deleteSection = [];\r\n    if (!isHideInBreakpoint(item)) {\r\n        deleteSection.push(\r\n            {\r\n                name: \"Hide In Breakpoint\",\r\n                onClick: (e) => {\r\n                    hideInBreakPoint(item);\r\n                }\r\n            });\r\n    }\r\n    deleteSection.push({\r\n        name: \"Delete\",\r\n        onClick: (e) => {\r\n            item.delete();\r\n        },\r\n        shortcut: \"Delete\"\r\n    });\r\n\r\n    if (currentBpName !== item.props.breakpointmanager.getHighestBpName()) {\r\n        if (item.props.griddata.bpData[currentBpName] &&\r\n            Object.keys(item.props.griddata.bpData[currentBpName]).length > 0)\r\n        {\r\n            deleteSection.unshift({\r\n                name: \"Remove Breakpoint Overrides\",\r\n                onClick: (e) => {\r\n                    // TODO add these lines to a function with undo support\r\n                    delete item.props.griddata.bpData[currentBpName];\r\n                    item.onBreakpointChange(\r\n                        item.props.breakpointmanager.getWindowWidth(),\r\n                        item.props.breakpointmanager.current());\r\n                    item.props.select.onScrollItem();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    menu.push(deleteSection);\r\n\r\n    let shortcutSection = [];\r\n    if (!item.props.griddata.isSection) {\r\n        shortcutSection.push({\r\n            name: \"Arrange\",\r\n            subMenu: [\r\n                {\r\n                    name: \"Move Forward\",\r\n                    shortcut: \"Ctrl + Alt + ↑\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"forward\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move to Front\",\r\n                    shortcut: \"Ctrl + ↑\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"front\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move Backward\",\r\n                    shortcut: \"Ctrl + Alt + ↓\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"backward\", true);\r\n                    }\r\n                },\r\n                {\r\n                    name: \"Move to Back\",\r\n                    shortcut: \"Ctrl + ↓\",\r\n                    onClick: (e) => {\r\n                        arrangeIndex(item.props.parent, item, \"back\", true);\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    menu.push(shortcutSection);\r\n\r\n    let sectionSection = [];\r\n    if (item.props.isSection) {\r\n        if (item.props.isVerticalSection) {\r\n            sectionSection.push({\r\n                name: \"Move Left\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveLeft(item.props.id);\r\n                },\r\n            });\r\n            sectionSection.push({\r\n                name: \"Move Right\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveRight(item.props.id);\r\n                },\r\n            });\r\n        } else {\r\n            sectionSection.push({\r\n                name: \"Move Up\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveUp(item.props.id);\r\n                },\r\n            });\r\n            sectionSection.push({\r\n                name: \"Move Down\",\r\n                onClick: (e) => {\r\n                    item.props.parent.props.aglComponent.moveDown(item.props.id);\r\n                },\r\n            });\r\n        }\r\n    }\r\n    menu.unshift(sectionSection);\r\n\r\n    let masterSection = [\r\n    ];\r\n\r\n    return <ContextMenu\r\n        menu={menu}\r\n        onClose={onClose}\r\n        clientX={e.clientX}\r\n        clientY={e.clientY}\r\n    />\r\n}\r\n\r\nexport function isHideInBreakpoint(item) {\r\n    if (!item)\r\n        return false;\r\n\r\n    if (typeof item.getCompositeFromData(\"style\").display === 'string')\r\n        return item.getCompositeFromData(\"style\").display.includes(\"none\");\r\n\r\n    return false;\r\n}\r\n\r\nexport function isSameFamily(item1, item2) {\r\n    if (item1.props.tagName === item2.props.tagName)\r\n        return true;\r\n\r\n    if (item1.props.griddata.isSection && item2.props.griddata.isSection)\r\n        return true;\r\n}\r\n\r\nexport function isLeftClick (e) {\r\n    if (e.button === 0)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport function isRightClick (e) {\r\n    if (e.button === 2)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport function getResizeDelta (degree, dir, delta) {\r\n    let rad = degree * Math.PI / 180;\r\n    let cx = delta.x, cy = delta.y;\r\n    let cxy = Math.sqrt(cx * cx + cy * cy);\r\n    let cxp = cy !== 0 ? cy / Math.tan(rad) : 0;\r\n    let cyp = cx !== 0 ? -cx / Math.tan(rad) : 0;\r\n\r\n    let thetaH = Math.atan(Math.abs(cy) / Math.abs(cx));\r\n    let thetaW = Math.atan(Math.abs(cy) / Math.abs(cx));\r\n\r\n    if (cx * cy > 0)\r\n        thetaW = -thetaW;\r\n    if (cx * cy > 0)\r\n        thetaH = -thetaH;\r\n\r\n    let Dh = Math.abs(Math.sin(rad + thetaH) * cxy);\r\n    let Dw = Math.abs(Math.cos(rad + thetaW) * cxy);\r\n\r\n    if (cxp < cx)\r\n        Dh = -Dh;\r\n    if (cyp > cy)\r\n        Dw = -Dw;\r\n\r\n    if (degree > 180) {\r\n        Dh = -Dh;\r\n        Dw = -Dw;\r\n    }\r\n\r\n    let dxH = Dh * Math.sin(rad);\r\n    let dyH = Dh * Math.cos(rad);\r\n    let dxW = Dw * Math.cos(rad);\r\n    let dyW = Dw * Math.sin(rad);\r\n\r\n    let finalDelta = {\r\n        top: 0, left: 0, width: 0, height: 0\r\n    };\r\n\r\n    if (dir.includes('n')) {\r\n        finalDelta.height -= Dh;\r\n        finalDelta.top += ((Dh + dyH) / 2);\r\n        finalDelta.left -= (dxH / 2);\r\n    }\r\n\r\n    if (dir.includes('s')) {\r\n        finalDelta.height += Dh;\r\n        finalDelta.top -= ((Dh - dyH) / 2);\r\n        finalDelta.left -= (dxH / 2);\r\n    }\r\n\r\n    if (dir.includes('w')) {\r\n        finalDelta.width -= Dw;\r\n        finalDelta.top += (dyW / 2);\r\n        finalDelta.left += ((Dw + dxW) / 2);\r\n    }\r\n\r\n    if (dir.includes('e')) {\r\n        finalDelta.width += Dw;\r\n        finalDelta.top += (dyW / 2);\r\n        finalDelta.left -= ((Dw - dxW) / 2);\r\n    }\r\n\r\n    console.log(\"finalDelta\", finalDelta, Dw, dyW, dxW);\r\n    return finalDelta;\r\n}\r\n\r\nexport function sortBy (array, param) {\r\n    array = array.sort((a, b) => {\r\n        if (a[param] < b[param]) {\r\n            return -1;\r\n        } else if (a[param] === b[param]) {\r\n            return 0;\r\n        }\r\n        return 1;\r\n    });\r\n    return array;\r\n}\r\n\r\nexport function getColorScheme (baseColor) {\r\n    return {\r\n        \"1\": chroma(baseColor).luminance(0.025).css(),\r\n        \"2\": chroma(baseColor).luminance(0.06).css(),\r\n        \"3\": chroma(baseColor).luminance(0.15).css(),\r\n        \"4\": chroma(baseColor).luminance(0.35).css(),\r\n        \"5\": chroma(baseColor).luminance(0.55).css(),\r\n    }\r\n}\r\n\r\nexport function parseColor (color, alpha, editorContext) {\r\n    if (!color) {\r\n        color = '#000000';\r\n        alpha = alpha || 0;\r\n    }\r\n\r\n    if (color instanceof Object) {\r\n        let chromaColor = chroma(editorContext.getColor(color.paletteName, color.key));\r\n        if (alpha !== undefined || color.alpha !== undefined)\r\n            chromaColor = chromaColor.alpha(alpha || color.alpha);\r\n        else\r\n            chromaColor = chromaColor.alpha(1);\r\n\r\n        return chromaColor.css();\r\n    } else {\r\n        let chromaColor = chroma(color);\r\n        // chromaColor = chromaColor.alpha(alpha || 1);\r\n        if (alpha !== undefined)\r\n            chromaColor = chromaColor.alpha(alpha);\r\n        return chromaColor.css();\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class NumberInputWithUnit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    inputFilter = (value, oldValue) => {\r\n        let okay = false;\r\n        try {\r\n            value = parseFloat(value);\r\n            if (!isNaN(value))\r\n                okay = true;\r\n        } catch {}\r\n        if (okay) {\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\" || isNaN(value)) {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (value.endsWith(\".\"))\r\n            value += \"0\";\r\n        value = this.inputFilter(value, this.getValue(this.props.value));\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    onShowUnits = (e) => {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    getValue = (value) => {\r\n        if (!value)\r\n            return \"\";\r\n\r\n        if (typeof value !== 'string')\r\n            return value;\r\n\r\n        if (value.includes(\"%\")) {\r\n            return Math.round(parseFloat(value.replace(\"%\", \"\")) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return Math.round(parseFloat(value.replace(\"px\", \"\")) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return Math.round(parseFloat(\r\n                value.replace(/[^0-9\\.]/g, '')\r\n            ) * 10) / 10;\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return Math.round(parseFloat(\r\n                value.replace(/[^0-9\\.]/g, '')\r\n            ) * 10) / 10;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let classes = classNames(\r\n            \"NumberInputWithUnit\",\r\n            this.props.className\r\n        );\r\n\r\n        return (\r\n            <div className={classes}>\r\n                <input\r\n                    style={{...{\r\n                        textAlign: \"left\",\r\n                        width: 64\r\n                    }, ...this.props.inputStyle}}\r\n                    className=\"NumberInput\"\r\n                    value={![\"%\", \"px\", \"vw\", \"vh\", \"°\"].includes(this.props.unit) ? \"\" :\r\n                        (this.getValue(this.props.value) || 0)}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    disabled={![\"%\", \"px\", \"vw\", \"vh\", \"°\"].includes(this.props.unit) || this.props.disabled}\r\n                >\r\n                </input>\r\n\r\n                <IconButton\r\n                    ref={this.unitIconButton}\r\n                    className=\"InputUnitButton\"\r\n                    buttonBaseStyle={{\r\n                        marginLeft: 0,\r\n                    }}\r\n                    imageContainerStyle={{\r\n                        padding: 6\r\n                    }}\r\n                    onClick={!this.props.disabled ? this.onShowUnits : undefined}\r\n                    style={this.props.unitButtonStyle}\r\n                    disabled={this.props.disableUnit}\r\n                >\r\n                    <span style={{\r\n                        color: \"#0a108b\"\r\n                    }}>\r\n                        {this.props.unit || \"none\"}\r\n                    </span>\r\n                </IconButton>\r\n\r\n                <Menu\r\n                    style={{...{\r\n                            zIndex: 99999999999\r\n                        }, ...this.props.unitMenuStyle}}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.units.map((unit, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onUnitChange)\r\n                                            this.props.onUnitChange(unit);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                >\r\n                                    <span style={{\r\n                                        color: \"#0a108b\"\r\n                                    }}>\r\n                                        {unit}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n\r\n                {\r\n                    this.props.disabled &&\r\n                    <div\r\n                        className=\"NumberInputWithUnitDisabled\"\r\n                        style={{...{\r\n                                textAlign: \"left\",\r\n                                width: 64\r\n                            }, ...this.props.inputStyle}}\r\n                    >\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: props.defaultOpen || false\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ButtonBase className=\"InspectorOptionTitle\" onClick={(e) => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(!this.state.open);\r\n                this.setState({open: !this.state.open});\r\n            }}>\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n\r\n                    <div className=\"InspectorOptionTitleExpandIcon\">\r\n                        {\r\n                            this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/down-arrow.svg'} />\r\n                        }\r\n                        {\r\n                            !this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/right-arrow.svg'} />\r\n                        }\r\n                    </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue,\r\n    getViewRatioStyle,\r\n    setNewSize\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorSize extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let oldValue = item.getCompositeFromData(\"style\")[prop];\r\n        if ([\"%\", \"px\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n        } else if ([\"vh\", \"vw\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n            value = getViewRatioStyle(value);\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    onUnitChange = (prop, unit, parentValue, defaultValue) => {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n\r\n        if (isNaN(defaultValue))\r\n            defaultValue = 0;\r\n\r\n        let value;\r\n        if (unit === \"px\") {\r\n            value = `${item.getSize(false)[prop] ||\r\n            getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            parentValue * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n            value = getViewRatioStyle(value);\r\n        } else if (unit === \"vw\") {\r\n            value = `${(item.getSize(false)[prop] ||\r\n                getPxValueFromCSSValue(style[prop], parentValue, item) || defaultValue || 0) /\r\n            item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n            value = getViewRatioStyle(value);\r\n        } else if (unit === \"none\") {\r\n            value = undefined;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value || value === \"unset\")\r\n            return \"none\";\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return \"px\";\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return \"vw\";\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return \"vh\";\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    runtimeValueToStyleValue = (propName, parentValue, value, style,) => {\r\n        let unit = this.getUnit(style[propName]);\r\n        let {item} = this.props;\r\n\r\n        if (unit === \"px\") {\r\n            value = `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${value /\r\n            parentValue * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${value / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n            value = `calc(${value} * var(--vh-ratio))`;\r\n        } else if (unit === \"vw\") {\r\n            value = `${value / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n            value = `calc(${value} * var(--vw-ratio))`;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n        let runtimeStyle = item.state.runtimeStyle;\r\n        let runtimeGridItemStyle = item.getRuntimeGridItemStyle() || {\r\n            widthForPercent: item.props.breakpointmanager.getWindowWidth(),\r\n            heightForPercent: item.props.breakpointmanager.getWindowHeight(),\r\n        };\r\n        return (\r\n            <>\r\n                <InspectorTitle defaultOpen title=\"Size\" onChange={(open)=>{\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorSizeRow\">\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Width\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('width')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"width\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.width}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"width\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        this.onUnitChange(\"width\", unit, parentRect.scrollWidthMinusPadding);\r\n                                    }}\r\n                                    units={this.props.widthUnits}\r\n                                    unit={this.getUnit(style.width)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Height\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('height')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"height\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.height}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"height\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        this.onUnitChange(\"height\", unit, parentRect.scrollHeightMinusPadding);\r\n                                    }}\r\n                                    units={this.props.heightUnits}\r\n                                    unit={this.getUnit(style.height)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"InspectorSizeRow\">\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min W\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('minWidth')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"minWidth\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.minWidth}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"minWidth\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 1;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let width = getPxValueFromCSSValue(style.width, parentRect.scrollWidthMinusPadding, item);\r\n                                        let maxWidth = getPxValueFromCSSValue(style.maxWidth, parentRect.scrollWidthMinusPadding, item);\r\n                                        if (isNaN(width) && !isNaN(maxWidth))\r\n                                            defaultValue = maxWidth;\r\n                                        else if (!isNaN(width) && isNaN(maxWidth))\r\n                                            defaultValue = width;\r\n                                        else if (!isNaN(width) && !isNaN(maxWidth))\r\n                                            defaultValue = Math.min(width, maxWidth);\r\n\r\n                                        this.onUnitChange(\"minWidth\", unit, parentRect.scrollWidthMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.minWidthUnits}\r\n                                    unit={this.getUnit(style.minWidth)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min H\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('minHeight')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"minHeight\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.minHeight}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"minHeight\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 1;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let height = getPxValueFromCSSValue(style.height, parentRect.scrollHeightMinusPadding, item);\r\n                                        let maxHeight = getPxValueFromCSSValue(style.maxHeight, parentRect.scrollHeightMinusPadding, item);\r\n                                        if (isNaN(height) && !isNaN(maxHeight))\r\n                                            defaultValue = maxHeight;\r\n                                        else if (!isNaN(height) && isNaN(maxHeight))\r\n                                            defaultValue = height;\r\n                                        else if (!isNaN(height) && !isNaN(maxHeight))\r\n                                            defaultValue = Math.min(height, maxHeight);\r\n\r\n                                        this.onUnitChange(\"minHeight\", unit, parentRect.scrollHeightMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.minHeightUnits}\r\n                                    unit={this.getUnit(style.minHeight)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"InspectorSizeRow\" style={{\r\n                            marginBottom: 0\r\n                        }}>\r\n                            <div className=\"InspectorSizeItem\" style={{\r\n                                marginRight: 12\r\n                            }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max W\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('maxWidth')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"maxWidth\",\r\n                                            runtimeGridItemStyle.widthForPercent, runtimeStyle.width, style) :\r\n                                        style.maxWidth}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"maxWidth\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 200;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let width = getPxValueFromCSSValue(style.width, parentRect.scrollWidthMinusPadding, item);\r\n                                        let minWidth = getPxValueFromCSSValue(style.minWidth, parentRect.scrollWidthMinusPadding, item);\r\n                                        if (isNaN(width) && !isNaN(minWidth))\r\n                                            defaultValue = minWidth;\r\n                                        else if (!isNaN(width) && isNaN(minWidth))\r\n                                            defaultValue = width;\r\n                                        else if (!isNaN(width) && !isNaN(minWidth))\r\n                                            defaultValue = Math.max(width, minWidth);\r\n\r\n                                        this.onUnitChange(\"maxWidth\", unit, parentRect.scrollWidthMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.maxWidthUnits}\r\n                                    unit={this.getUnit(style.maxWidth)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max H\r\n                        </span>\r\n                                <NumberInputWithUnit\r\n                                    className=\"InspectorSizeItemInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    disabled={this.props.disabledProps.includes('maxHeight')}\r\n                                    value={runtimeStyle ?\r\n                                        this.runtimeValueToStyleValue(\"maxHeight\",\r\n                                            runtimeGridItemStyle.heightForPercent, runtimeStyle.height, style) :\r\n                                        style.maxHeight}\r\n                                    onChange={(value) => {\r\n                                        this.onChange(\"maxHeight\", value);\r\n                                    }}\r\n                                    onUnitChange={(unit) => {\r\n                                        let defaultValue = 200;\r\n                                        let parentRect = item.props.parent.getSize(false);\r\n                                        let height = getPxValueFromCSSValue(style.height, parentRect.scrollHeightMinusPadding, item);\r\n                                        let minHeight = getPxValueFromCSSValue(style.minHeight, parentRect.scrollHeightMinusPadding, item);\r\n                                        if (isNaN(height) && !isNaN(minHeight))\r\n                                            defaultValue = minHeight;\r\n                                        else if (!isNaN(height) && isNaN(minHeight))\r\n                                            defaultValue = height;\r\n                                        else if (!isNaN(height) && !isNaN(minHeight))\r\n                                            defaultValue = Math.max(height, minHeight);\r\n\r\n                                        this.onUnitChange(\"maxHeight\", unit, parentRect.scrollHeightMinusPadding\r\n                                            , defaultValue);\r\n                                    }}\r\n                                    units={this.props.maxHeightUnits}\r\n                                    unit={this.getUnit(style.maxHeight)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspectorSize.defaultProps = {\r\n    disabledProps: []\r\n};\r\n","import Switch from \"@material-ui/core/Switch/Switch\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst DockSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 42,\r\n        height: 10,\r\n        padding: 4,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 0,\r\n        color: \"#d2d2d2\",\r\n        '&$checked': {\r\n            transform: 'translateX(28px) scale(1)',\r\n            color: \"#849dff\",\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: \"#849dff\",\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 10,\r\n        height: 10,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: \"#a2a2a2\",\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n\r\nexport default DockSwitch;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue,\r\n    getUnitFromStyleValue,\r\n    setGridItemStyle,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport DockSwitch from \"./DockSwitch\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorPosition extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onDockActiveChange = (side, value) => {\r\n        let {item} = this.props;\r\n        let oldDocks = cloneObject(item.getFromData(\"docks\") || {});\r\n\r\n        oldDocks[side] = value;\r\n        if (side === \"top\" && value) {\r\n            oldDocks.bottom = false;\r\n        }\r\n        if (side === \"bottom\" && value) {\r\n            oldDocks.top = false;\r\n        }\r\n\r\n        item.setDocks(oldDocks.top, oldDocks.left, oldDocks.bottom, oldDocks.right,\r\n            item.getFromTempData(\"autoDeck\"));\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n    };\r\n\r\n    onDockAutoChange = () => {\r\n        let {item} = this.props;\r\n        setTempData(\"autoDock\", !item.getFromTempData(\"autoDock\"), item, true);\r\n    };\r\n\r\n    onUnitChange = (prop, parentProp, unit) => {\r\n        let {item} = this.props;\r\n        let gridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let compositeGridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        if (!gridItemStyle)\r\n            gridItemStyle = {};\r\n\r\n        let parentRect = item.props.parent.getSize(false);\r\n        let value = getPxValueFromCSSValue(compositeGridItemStyle[prop], parentRect.scrollWidthMinusPadding, item);\r\n\r\n        if (unit === \"px\") {\r\n            gridItemStyle[prop] = `${value}${unit}`;\r\n        } else if (unit === \"%\") {\r\n            // let runtimeGridItemStyle = item.getRuntimeGridItemStyle();\r\n            gridItemStyle[prop] = `${value / parentRect.scrollWidthMinusPadding * 100}${unit}`;\r\n        }\r\n\r\n        setGridItemStyle(gridItemStyle, item, true);\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n    };\r\n\r\n    onValueChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let gridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let compositeGridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        if (!gridItemStyle)\r\n            gridItemStyle = {};\r\n        gridItemStyle[prop] = `${value}${getUnitFromStyleValue(compositeGridItemStyle[prop])}`;\r\n\r\n        setGridItemStyle(gridItemStyle, item, true);\r\n\r\n        item.props.select.updateHelpLines(item, item.state.helpLinesParent,\r\n            item.getSize(false), item.state.dragging);\r\n        item.props.select.updateResizePanes(item, item.getSize(false));\r\n    };\r\n\r\n    runtimeValueToStyleValue = (propName, parentValue, value, style) => {\r\n        if (!style)\r\n            return;\r\n\r\n        let unit = getUnitFromStyleValue(style[propName]);\r\n        let {item} = this.props;\r\n\r\n        if (unit === \"px\") {\r\n            value = `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${value /\r\n            parentValue * 100}%`;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let docks = item.getCompositeFromData(\"docks\");\r\n        let auto = item.getFromTempData(\"autoDock\");\r\n        let gridItemStyle = item.getCompositeFromData(\"gridItemStyle\");\r\n        let runtimeStyle = item.state.runtimeStyle;\r\n        let runtimeGridItemStyle = item.getRuntimeGridItemStyle();\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Position\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorDockingRoot\">\r\n                            <span className=\"InspectorDockingRootTitle\">\r\n                                Docking\r\n                            </span>\r\n\r\n                            <div className=\"InspectorDockingDocks\">\r\n                                <div className=\"InspectorDockingLeft\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch\"\r\n                                        checked={docks.left || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('left', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingRight\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch\"\r\n                                        checked={docks.right || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('right', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingTop\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch90\"\r\n                                        checked={docks.top || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('top', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorDockingBottom\">\r\n                                    <DockSwitch\r\n                                        className=\"InspectorDockSwitch90\"\r\n                                        checked={docks.bottom || false}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.onDockActiveChange('bottom', checked);\r\n                                        }}\r\n                                        disabled={auto}\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    auto &&\r\n                                    <div className=\"InspectorDockingDisable\"/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"InspectorOverflowDir\">\r\n                        <span className=\"InspectorOverflowDirTitle\">\r\n                            Auto docking\r\n                        </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={auto || false}\r\n                                onChange={(e) => {\r\n                                    this.onDockAutoChange();\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"InspectorOverflowMarginRoot\">\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.top || auto}\r\n                                value={docks.top && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginTop : gridItemStyle.marginTop)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginTop\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginTop\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={\r\n                                    docks.top &&\r\n                                    getUnitFromStyleValue(\r\n                                        runtimeStyle && runtimeGridItemStyle ?\r\n                                            runtimeGridItemStyle.marginTop : gridItemStyle.marginTop)\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.left || auto}\r\n                                value={docks.left && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginLeft : gridItemStyle.marginLeft)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginLeft\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginLeft\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.left &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginLeft : gridItemStyle.marginLeft)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.bottom || auto}\r\n                                value={docks.bottom && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginBottom : gridItemStyle.marginBottom)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginBottom\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginBottom\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.bottom &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginBottom : gridItemStyle.marginBottom)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                disabled={!docks.right || auto}\r\n                                value={docks.right && (runtimeStyle && runtimeGridItemStyle ?\r\n                                    runtimeGridItemStyle.marginRight : gridItemStyle.marginRight)}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"marginRight\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"marginRight\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\"]}\r\n                                unit={docks.right &&\r\n                                getUnitFromStyleValue(\r\n                                    runtimeStyle && runtimeGridItemStyle ?\r\n                                        runtimeGridItemStyle.marginRight : gridItemStyle.marginRight)}\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\n\r\nexport default class DropDown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    onClick = (e) => {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    onChange = (option) => {\r\n        this.props.onChange(option);\r\n    };\r\n\r\n    getValue = () => {\r\n        if (this.props.valueRenderer) {\r\n            return this.props.valueRenderer(this.props.value) ||\r\n                (this.props.renderer && this.props.renderer(this.props.value)) ||\r\n                this.props.value || \"\";\r\n        } else {\r\n            return this.props.value || \"\";\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"DropDownRoot\" style={this.props.rootStyle}>\r\n                <span\r\n                    className=\"DropDownSpan\"\r\n                    style={{...this.props.spanStyle, ...{\r\n                        cursor: \"pointer\"\r\n                    }}}\r\n                    onClick={this.onClick}\r\n                >\r\n                    {this.getValue()}\r\n                </span>\r\n\r\n                <Menu\r\n                    style={{...{\r\n                            zIndex: 99999999999\r\n                        }, ...this.props.menuStyle}}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0,\r\n                            width: this.props.spanStyle? this.props.spanStyle.width: \"auto\"\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.options.map((option, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onChange)\r\n                                            this.props.onChange(option);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                    style={{...(option.disabled && {\r\n                                        pointerEvents: \"none\"\r\n                                    }), ...this.props.menuItemStyle}}\r\n                                >\r\n                                    <span style={{\r\n                                        width: \"100%\"\r\n                                    }}>\r\n                                        {this.props.renderer ? this.props.renderer(option) : option}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n\r\n                <div\r\n                    className=\"DropDOwnArrow\"\r\n                >\r\n                    <img width={10} height={10} src={process.env.PUBLIC_URL + \"/static/icon/down-arrow.svg\"}/>\r\n                </div>\r\n\r\n                {\r\n                    this.props.disabled &&\r\n                    <div\r\n                        className=\"DropDOwnDisabled\"\r\n                        style={this.props.spanStyle}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class NumberInput extends React.Component {\r\n    inputFilter = (value, oldValue) => {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = parseFloat(value).toFixed(0);\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = this.inputFilter(e.target.value, this.props.value);\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className=\"NumberInput\"\r\n                value={this.props.value || 0}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport {getValueFromCSSValue, setScrollBehaviour} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInput from \"../../Menus/CommonComponents/NumberInput\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorScroll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeScrollEffect = (option) => {\r\n        let {item} = this.props;\r\n        let offsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        setScrollBehaviour(item, option, item.props.viewRef.current, false, {offsetTop});\r\n    };\r\n\r\n    onChangeOffsetTop = (offsetTop) => {\r\n        offsetTop = `${offsetTop}px`;\r\n        let {item} = this.props;\r\n        let behaviour = item.getFromData(\"scrollBehaviour\");\r\n        setScrollBehaviour(item, behaviour, item.props.viewRef.current, false, {offsetTop});\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let behaviour = item.getFromData(\"scrollBehaviour\");\r\n        let offsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Scroll\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorScrollEffect\"\r\n                             style={{\r\n                                 marginBottom: behaviour === 'sticky' ? 12 : 0\r\n                             }}\r\n                        >\r\n                            <div className=\"InspectorScrollTitle\">\r\n                                Scroll effect\r\n                            </div>\r\n\r\n                            <DropDown\r\n                                options={this.props.options || ['none', 'fixed', 'sticky']}\r\n                                onChange={this.onChangeScrollEffect}\r\n                                value={behaviour || 'none'}\r\n                                spanStyle={{\r\n                                    width: 96,\r\n                                    fontSize: 12\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            behaviour === 'sticky' &&\r\n                            <div className=\"InspectorScrollEffect\">\r\n                                <div className=\"InspectorScrollTitle\">\r\n                                    Offset top\r\n                                </div>\r\n\r\n                                <NumberInput\r\n                                    className=\"AngleInput\"\r\n                                    min={0}\r\n                                    max={Infinity}\r\n                                    value={getValueFromCSSValue(offsetTop)}\r\n                                    onChange={this.onChangeOffsetTop}\r\n                                    inputStyle={{\r\n                                        width: 96,\r\n                                        fontSize: 12,\r\n                                        textAlign: \"left\"\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {\r\n    getPxValueFromCSSValue, getStyleValueFromPx,\r\n    getUnitFromStyleValue,\r\n    setDataInBreakpoint,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorPadding extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onUnitChange = (prop, parentProp, unit) => {\r\n        let {item} = this.props;\r\n        let padding = cloneObject(item.getFromData(\"padding\")) || {};\r\n        let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n\r\n        let parentRect = item.props.parent.getSize(false);\r\n        let value = getPxValueFromCSSValue(compositePadding[prop], parentRect.width, item);\r\n\r\n        if (unit === \"px\") {\r\n            padding[prop] = `${value}${unit}`;\r\n        } else if (unit === \"%\") {\r\n            padding[prop] = `${value / item.props.parent.getSize(false).width * 100}${unit}`;\r\n        }\r\n        else if (unit === \"vh\") {\r\n            padding[prop] = `${value / item.props.breakpointmanager.getWindowHeight() * 100}${unit}`;\r\n        }\r\n        else if (unit === \"vw\") {\r\n            padding[prop] = `${value / item.props.breakpointmanager.getWindowWidth() * 100}${unit}`;\r\n        }\r\n\r\n        setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n    };\r\n\r\n    onValueChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let equalPadding = item.getFromTempData(\"equalPadding\");\r\n        let padding = cloneObject(item.getFromData(\"padding\")) || {};\r\n        let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n        padding[prop] = `${value}${getUnitFromStyleValue(compositePadding[prop] || \"px\")}`;\r\n        if (equalPadding) {\r\n            let parentRect = item.props.parent? item.props.parent.getSize(false):\r\n                {\r\n                    scrollWidthMinusPadding: item.props.breakpointmanager.getWindowWidth()\r\n                };\r\n            let pxValue = getPxValueFromCSSValue(padding[prop], parentRect.scrollWidthMinusPadding, item);\r\n            padding = {\r\n                top: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.top || \"px\"), item)}`,\r\n                left: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.left || \"px\"), item)}`,\r\n                bottom: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.bottom || \"px\"), item)}`,\r\n                right: `${getStyleValueFromPx(pxValue, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.right || \"px\"), item)}`,\r\n            };\r\n        }\r\n\r\n        setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n\r\n        item.invalidateSize(true, true, true, undefined, true);\r\n\r\n        window.requestAnimationFrame(() => {\r\n            item.props.select.onScrollItem();\r\n        })\r\n    };\r\n\r\n    onEqualPadding = (equalPadding) => {\r\n        let {item} = this.props;\r\n\r\n        setTempData(\"equalPadding\", equalPadding, item, true);\r\n        if (equalPadding) {\r\n            let compositePadding = item.getCompositeFromData(\"padding\") || {};\r\n\r\n            let parentRect = item.props.parent? item.props.parent.getSize(false):\r\n                {\r\n                    scrollWidthMinusPadding: item.props.breakpointmanager.getWindowWidth()\r\n                };\r\n            let max = Math.max(\r\n                getPxValueFromCSSValue(compositePadding.top, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.left, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.bottom, parentRect.scrollWidthMinusPadding, item) || 0,\r\n                getPxValueFromCSSValue(compositePadding.right, parentRect.scrollWidthMinusPadding, item) || 0,\r\n            );\r\n\r\n            let padding = {\r\n                top: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.top || \"px\"), item)}`,\r\n                left: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.left || \"px\"), item)}`,\r\n                bottom: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.bottom || \"px\"), item)}`,\r\n                right: `${getStyleValueFromPx(max, parentRect.scrollWidthMinusPadding, getUnitFromStyleValue(compositePadding.right || \"px\"), item)}`,\r\n            };\r\n\r\n            setDataInBreakpoint(\"padding\", padding, item, true, undefined, true);\r\n\r\n            item.invalidateSize(true, true, true, undefined, true);\r\n        }\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let padding = item.getCompositeFromData(\"padding\") || {};\r\n        let equalPadding = item.getFromTempData(\"equalPadding\") || false;\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Padding\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorOverflowMarginRoot\">\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.top || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"top\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"top\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.top || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.left || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"left\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"left\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.left || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.bottom || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"bottom\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"bottom\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.bottom || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                            <NumberInputWithUnit\r\n                                className=\"InspectorOverflowMargin\"\r\n                                min={0}\r\n                                max={Infinity}\r\n                                value={padding.right || \"0px\"}\r\n                                onChange={(value) => {\r\n                                    this.onValueChange(\"right\", value);\r\n                                }}\r\n                                onUnitChange={(unit) => {\r\n                                    this.onUnitChange(\"right\", \"height\", unit);\r\n                                }}\r\n                                units={[\"%\", \"px\", \"vh\", \"vw\"]}\r\n                                unit={\r\n                                    getUnitFromStyleValue(padding.right || \"px\")\r\n                                }\r\n                                inputStyle={{\r\n                                    width: \"100%\",\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"InspectorAdjustRotate\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Equal padding\r\n                                </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={equalPadding}\r\n                                onChange={(e) => {\r\n                                    let checked = e.target.checked;\r\n                                    this.onEqualPadding(checked);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport {setDataInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorOverflow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeState = (e, value) => {\r\n        let {item} = this.props;\r\n        let thisBpOverflowData = item.getFromData(\"overflowData\");\r\n        let compositOverflowData = item.getCompositeFromData(\"overflowData\");\r\n        if (value === 'scroll' &&\r\n            (!compositOverflowData ||\r\n            ((!compositOverflowData.overflowY || compositOverflowData.overflowY === \"hidden\")&&\r\n            (!compositOverflowData.overflowX || compositOverflowData.overflowX === \"hidden\"))))\r\n        {\r\n            let newOverflowData = cloneObject(thisBpOverflowData || {});\r\n            newOverflowData.state = 'scroll';\r\n            newOverflowData.overflowY = 'scroll';\r\n            console.log(\"onChangeState\", JSON.stringify(newOverflowData));\r\n            setDataInBreakpoint(\"overflowData\", newOverflowData, item, true, undefined, true);\r\n            return;\r\n        }\r\n\r\n        setDataInBreakpoint(\"overflowData.state\", value, item, true, undefined, true);\r\n    };\r\n\r\n    changeScrollDirection = (propName, checked) => {\r\n        let {item} = this.props;\r\n        setDataInBreakpoint(`overflowData.${propName}`, checked? 'scroll': undefined\r\n            , item, true, undefined, true);\r\n    };\r\n\r\n    onChangeAuto = (e, value) => {\r\n        let {item} = this.props;\r\n        setDataInBreakpoint(\"overflowData.auto\", value, item, true, undefined, true);\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let overflowData = item.getCompositeFromData(\"overflowData\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Overflow content\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorAnchorNameTitle\">\r\n                            Overflow\r\n                        </div>\r\n                        <ToggleButtonGroup\r\n                            className=\"InspectorOverflowType\"\r\n                            size='small'\r\n                            value={overflowData.state}\r\n                            exclusive\r\n                            onChange={this.onChangeState}\r\n                        >\r\n                            <ToggleButton value=\"show\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                        style={{\r\n                                            padding: 3\r\n                                        }}\r\n                            >\r\n                                Show\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"hide\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                          style={{\r\n                                              padding: 3\r\n                                          }}\r\n                            >\r\n                                Hide\r\n                            </ToggleButton>\r\n                            <ToggleButton value=\"scroll\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                          style={{\r\n                                              padding: 3\r\n                                          }}\r\n                            >\r\n                                Scroll\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n\r\n                        {\r\n                            overflowData.state === 'scroll' &&\r\n                            <>\r\n                                <div className=\"InspectorOverflowDir\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scroll vertically\r\n                                </span>\r\n                                    <Switch\r\n                                        className=\"InspectorOverflowDirSwitch\"\r\n                                        checked={overflowData.overflowY === \"scroll\" || overflowData.overflowY === \"auto\"}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.changeScrollDirection('overflowY', checked);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorOverflowDir\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scroll horizontally\r\n                                </span>\r\n                                    <Switch\r\n                                        className=\"InspectorOverflowDirSwitch\"\r\n                                        checked={overflowData.overflowX === \"scroll\" || overflowData.overflowX === \"auto\"}\r\n                                        onChange={(e) => {\r\n                                            let checked = e.target.checked;\r\n                                            this.changeScrollDirection('overflowX', checked);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"InspectorOverflowAuto\">\r\n                                <span className=\"InspectorOverflowDirTitle\">\r\n                                    Scrollbar visibility\r\n                                </span>\r\n                                </div>\r\n                                <ToggleButtonGroup\r\n                                    className=\"InspectorOverflowAutoToggles\"\r\n                                    size='small'\r\n                                    value={overflowData.auto || \"always\"}\r\n                                    exclusive\r\n                                    onChange={this.onChangeAuto}\r\n                                >\r\n                                    <ToggleButton value=\"hide\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Hide\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"auto\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Auto\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"always\" className=\"InspectorOverflowTypeButton\" size='small'\r\n                                                  style={{\r\n                                                      padding: 3\r\n                                                  }}\r\n                                    >\r\n                                        Show\r\n                                    </ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class TextInput extends React.Component {\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (this.props.onChange)\r\n            this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                {...this.props}\r\n                className=\"NumberInput\"\r\n                value={this.props.value || \"\"}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport TextInput from \"../../Menus/CommonComponents/TextInput\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\n\r\nexport default class InspectorAnchor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onEnableAnchor = (enable) => {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        if (enable) {\r\n            item.props.anchorMan.addAnchor(item.props.id.replace(\"comp_\", ''), item);\r\n        }\r\n        else {\r\n            item.props.anchorMan.removeAnchor(anchor.id, item);\r\n        }\r\n    };\r\n\r\n    onChangeName = (newName) => {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        item.props.anchorMan.modifyAnchor(anchor.id, newName, item);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let anchor = item.getFromTempData(\"anchor\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Anchor\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n\r\n                        <div className=\"InspectorOverflowDir\">\r\n                        <span className=\"InspectorOverflowDirTitle\">\r\n                            Enable Anchor\r\n                        </span>\r\n                            <Switch\r\n                                className=\"InspectorOverflowDirSwitch\"\r\n                                checked={anchor !== undefined}\r\n                                onChange={(e) => {\r\n                                    this.onEnableAnchor(e.target.checked);\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {\r\n                            anchor &&\r\n                            <div className=\"InspectorAnchorName\">\r\n                                <div className=\"InspectorAnchorNameTitle\">\r\n                                    Anchor name\r\n                                </div>\r\n                                <TextInput\r\n                                    value={anchor.name}\r\n                                    onChange={(v) => this.onChangeName(v)}\r\n                                    inputStyle={{\r\n                                        width: \"auto\",\r\n                                        textAlign: \"left\"\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {rotate} from \"../../AwesomwGridLayoutHelper\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\n\r\nexport default class InspectorAdjustment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onRotationChange = (degree) => {\r\n        console.warn(\"onRotationChange\", degree)\r\n        let {item} = this.props;\r\n\r\n        rotate(item, degree);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let rotate = item.getFromData(\"transform.rotateDegree\");\r\n        return (\r\n            <>\r\n                <InspectorTitle title=\"Adjust\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <div className=\"InspectorAdjustRotate\">\r\n                            <span className=\"InspectorOverflowDirTitle\">\r\n                                Rotate\r\n                            </span>\r\n                            <NumberInputWithUnit\r\n                                min={0}\r\n                                max={360}\r\n                                value={rotate || 0}\r\n                                onChange={(value) => {\r\n                                    this.onRotationChange(value);\r\n                                }}\r\n                                units={[\"°\"]}\r\n                                unit={\"°\"}\r\n                                inputStyle={{\r\n                                    width: 64,\r\n                                    fontSize: 12\r\n                                }}\r\n                                unitButtonStyle={{\r\n                                    fontSize: 11\r\n                                }}\r\n                                disableUnit\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {assignData, cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport {getCompositeDesignData, setDataInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorPosition from \"../../Test/Inspector/InspectorPosition\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport InspectorAdjustment from \"../../Test/Inspector/InspectorAdjustment\";\r\n\r\nexport default class AGLComponent extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n        console.log(\"AGLComponent constructor\");\r\n    }\r\n\r\n    resolveDesignData = () => {\r\n        // Must Override\r\n    };\r\n\r\n    getData = () => {\r\n        let componentData = this.getDefaultData && this.getDefaultData();\r\n        let componentBpData = componentData.bpData;\r\n        componentData = assignData(componentData, cloneObject(this.props.data));\r\n        if (componentBpData) {\r\n            let tempBpData = componentData.bpData;\r\n            componentData.bpData = assignData(componentBpData, tempBpData);\r\n        }\r\n\r\n        return componentData;\r\n    };\r\n\r\n    getAgl = () => {\r\n        return this.props.aglRef.current;\r\n    };\r\n\r\n    onDesignChange = (designKey, value) => {\r\n        console.log(\"onDesignChange\", designKey, value)\r\n        setDataInBreakpoint(designKey, value, this.getAgl(), true, undefined, true);\r\n        this.updateDesign(getCompositeDesignData(this.getAgl()));\r\n    };\r\n\r\n    getInspector = () => {\r\n        if (this.getInspectorOverride)\r\n            return this.getInspectorOverride();\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPosition\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAdjustment\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class MenuButton extends React.Component {\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    onClick = (e) => {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(e);\r\n            return;\r\n        }\r\n\r\n        let {menu} = this.props;\r\n        this.props.select.updateMenu((typeof menu === \"function\") ? menu(e) : menu);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                {\r\n                    this.props.icon\r\n                }\r\n                {\r\n                    this.props.children\r\n                }\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport '../../HelperStyle.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class MenuBaseIndexTitle extends React.Component {\r\n    render () {\r\n        return (\r\n            <div\r\n                className=\"MenuBaseIndexTitle\"\r\n            >\r\n                <ButtonBase\r\n                    disableRipple={!this.props.onIndexClick}\r\n                    onClick={(e) => {\r\n                        this.props.onIndexClick &&\r\n                        this.props.onIndexClick(e, this.props.title, this.props.index)\r\n                    }}\r\n                >\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n                </ButtonBase>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst LightTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#fff\",\r\n        color: '#000000',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 14,\r\n    },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip\r\n\r\nexport const LightMenuTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n        backgroundColor: \"#fff\",\r\n        color: '#000000',\r\n        boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n        fontSize: 14,\r\n        padding: 0\r\n    },\r\n}))(Tooltip);\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport Draggable from 'react-draggable';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport '../../HelperStyle.css';\r\nimport MenuBaseIndexTitle from \"./MenuBaseIndexTitle\";\r\nimport LightTooltip from \"../../Components/Containers/Menus/Components/LightTooltip\";\r\nimport Tab from \"@material-ui/core/Tab/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\r\n\r\nexport default class MenuBase extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedIndexNo: props.defaultIndexNo,\r\n            currentState: props.multiState ? Object.keys(props.states)[0]: \"\"\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        if (this.props.multiState)\r\n            Object.values(this.props.states)[0].toggle();\r\n\r\n        this.props.select.updateMenu();\r\n    };\r\n\r\n    onIndexClick = (e, key, selectedIndexNo) => {\r\n        this.setState({selectedIndexNo})\r\n    };\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    getOptions = () => {\r\n        if (!this.props.multiState)\r\n            return this.props.options;\r\n\r\n        return this.props.states[this.state.currentState].options;\r\n    }\r\n\r\n    getIndex = () => {\r\n        if (!this.props.multiState)\r\n            return this.props.index;\r\n\r\n        return this.props.states[this.state.currentState].index;\r\n    }\r\n\r\n    onChangeTab = (e, currentState) => {\r\n        this.setState({currentState});\r\n        this.props.states[currentState].toggle();\r\n    };\r\n\r\n    render() {\r\n        let options = this.getOptions();\r\n        let index = this.getIndex();\r\n        return (\r\n            <Draggable\r\n                handle=\".MenuBaseHeaderTitle\"\r\n                bounds=\"parent\"\r\n                defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n            >\r\n                <div\r\n                    className=\"MenuBaseRoot\"\r\n                    style={this.props.styles.root}\r\n                >\r\n                    {/*Header*/}\r\n                    <div\r\n                        className=\"MenuBaseHeaderContainer\"\r\n                    >\r\n                        <span className=\"MenuBaseHeaderTitle\">\r\n                            {this.props.menuTitle || \"Menu Title\"}\r\n                        </span>\r\n\r\n                        <IconButton\r\n                            onClick={this.close}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={16}\r\n                                height={16}\r\n                                src={require('../../icons/close.svg')}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                    {/*Tabs*/}\r\n                    {\r\n                        this.props.multiState &&\r\n                        <Tabs\r\n                            className=\"MenuBaseTabBox\"\r\n                            value={this.state.currentState}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            variant=\"fullWidth\"\r\n                            onChange={this.onChangeTab}\r\n                        >\r\n                            {\r\n                                Object.values(this.props.states).map(stateData => {\r\n                                    return (\r\n                                        <Tab key={stateData.name} label={stateData.render} value={stateData.name} className=\"MenuBaseTab\"/>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Tabs>\r\n                    }\r\n\r\n                    {/*Body*/}\r\n                    <div\r\n                        className=\"MenuBaseBodyContainer\"\r\n                    >\r\n                        <div className=\"MenuBaseBodyIndex\">\r\n                            {\r\n                                index.map((indexData, i) => {\r\n                                    return (\r\n                                        <LightTooltip\r\n                                            key={i}\r\n                                            title={indexData.key}\r\n                                            PopperProps={{\r\n                                                style: {\r\n                                                    zIndex: 999999999999999\r\n                                                }\r\n                                            }}\r\n                                            placement=\"right\"\r\n                                        >\r\n                                            <div\r\n                                                key={i}\r\n                                                style={{\r\n                                                    backgroundColor: this.state.selectedIndexNo === i &&\r\n                                                        'rgba(115, 115, 115, 0.36)'\r\n                                                }}\r\n                                            >\r\n                                                <IconButton\r\n                                                    key={indexData.key}\r\n                                                    onClick={(e) => {\r\n                                                        this.onIndexClick(e, indexData.key, i);\r\n                                                    }}\r\n                                                    buttonBaseStyle={{\r\n                                                        marginLeft: 0\r\n                                                    }}\r\n                                                >\r\n                                                    {indexData.icon}\r\n                                                </IconButton>\r\n                                            </div>\r\n                                        </LightTooltip>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"MenuBaseBodyOptions\">\r\n                            <div className=\"MenuBaseBodyOptionsContainer\">\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                <MenuBaseIndexTitle\r\n                                    index={this.state.selectedIndexNo}\r\n                                    key={options[this.state.selectedIndexNo].key}\r\n                                    title={options[this.state.selectedIndexNo].key}\r\n                                />\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                options[this.state.selectedIndexNo].render\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo === undefined &&\r\n                                options.map((option, i) => {\r\n                                    return (\r\n                                        <MenuBaseIndexTitle\r\n                                            index={i}\r\n                                            key={option.key}\r\n                                            title={option.key}\r\n                                            onIndexClick={this.onIndexClick}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nMenuBase.defaultProps = {\r\n    styles: {}\r\n};\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport RCSlider from 'rc-slider';\r\n\r\nexport default class Slider extends React.Component {\r\n    render () {\r\n        return (\r\n            <RCSlider\r\n                {...this.props}\r\n                min={this.props.min}\r\n                max={this.props.max}\r\n                step={this.props.step}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInputControlled extends React.Component {\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 24 }}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                    handleStyle={{\r\n                        marginLeft: 7\r\n                    }}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class Image extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            src: props.src,\r\n            hasError: false,\r\n        };\r\n    }\r\n\r\n    onError = (e) => {\r\n        if (!this.state.hasError) {\r\n            let {errorsrc} = this.props;\r\n            this.setState({\r\n                src: errorsrc,\r\n                hasError: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <img\r\n                {...this.props}\r\n                // onError={this.onError}\r\n                src={this.state.src/* || this.props.errorsrc*/}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends React.Component {\r\n    componentWillUnmount() {\r\n        if (this.defaultNode) {\r\n            document.body.removeChild(this.defaultNode);\r\n        }\r\n        this.defaultNode = null;\r\n    }\r\n\r\n    canUseDOM = !!(\r\n        typeof window !== 'undefined' &&\r\n        window.document &&\r\n        window.document.createElement\r\n    );\r\n\r\n    render() {\r\n        if (!this.canUseDOM) {\r\n            return null;\r\n        }\r\n        let node = this.props.node;\r\n        if (this.props.disabled) {\r\n            return this.props.children;\r\n        }\r\n        if (this.props.nodeId) {\r\n            node = document && document.getElementById(this.props.nodeId);\r\n        }\r\n        if (!node && !this.defaultNode) {\r\n            this.defaultNode = document.createElement('div');\r\n            document.body.appendChild(this.defaultNode);\r\n        }\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            node || this.defaultNode\r\n        );\r\n    }\r\n}\r\n\r\nPortal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    node: PropTypes.any\r\n};\r\n\r\nexport default Portal;\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport './ThemeColorPicker.css';\r\n// import {SketchPicker} from \"react-color\";\r\nimport SketchPicker from \"react-color/lib/components/sketch/Sketch\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class HexColorPicker extends React.Component {\r\n    onChangeComplete = (color) => {\r\n        this.props.onChangeComplete(color.hex);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Portal node={document.body}>\r\n                <div style={ {\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                    zIndex: 999999999999\r\n                }} onClick={ this.props.onClose }/>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    left: \"50%\",\r\n                    top: \"50%\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                    zIndex: 999999999999\r\n                }}>\r\n                    <SketchPicker\r\n                        color={this.props.color}\r\n                        onChangeComplete={ this.onChangeComplete }\r\n                        disableAlpha={this.props.disableAlpha}\r\n                        width={this.props.width || 224}\r\n                    />\r\n                </div>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport './ThemeColorPicker.css';\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport Draggable from \"react-draggable\";\r\nimport Portal from \"../../Portal\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport chroma from \"chroma-js\";\r\nimport HexColorPicker from \"./HexColorPicker\";\r\nimport {parseColor} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nconst colorKeys = [\r\n    \"1\",\"2\",\"3\",\"4\",\"5\",\r\n];\r\n\r\nexport default class ThemeColorPicker extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: props.color\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    onSelectColor = (color) => {\r\n        this.setState({color});\r\n        this.props.onChangeComplete && this.props.onChangeComplete(color);\r\n    };\r\n\r\n    onAddColor = (color) => {\r\n        let siteData = this.context.siteData;\r\n        if (!siteData.myColors.find(c => c === color))\r\n            siteData.myColors.unshift(color);\r\n\r\n        siteData.myColors = siteData.myColors.slice(0, 17);\r\n\r\n        this.onSelectColor(color);\r\n        this.context.update();\r\n    };\r\n\r\n    onAddColorClick = () => {\r\n        this.setState({addColor: true});\r\n    };\r\n\r\n    render() {\r\n        let {editor} = this.context;\r\n        let siteData = this.context.siteData;\r\n        let themeColorCategoryItems = siteData.theme.Colors.items;\r\n        return (\r\n            <Portal node={document.body}>\r\n                <div style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                    zIndex: 999999999999999\r\n                }}>\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        top: '0px',\r\n                        right: '0px',\r\n                        bottom: '0px',\r\n                        left: '0px',\r\n                    }} onClick={ (e) => this.props.onClose && this.props.onClose() }/>\r\n\r\n                    <Draggable\r\n                        handle=\".ThemeColorPickerHeaderTitle\"\r\n                        bounds=\"parent\"\r\n                        defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n                    >\r\n                        <div className=\"ThemeColorPickerRoot\"\r\n                             style={{\r\n                                 zIndex: 99999999999999999,\r\n                             }}>\r\n                            <div className=\"ThemeColorPickerHeaderRoot\">\r\n                                <div className=\"ThemeColorPickerHeaderTitle\">\r\n                                    Color Picker\r\n                                </div>\r\n\r\n                                <IconButton\r\n                                    onClick={(e) => this.props.onClose && this.props.onClose()}\r\n                                    className=\"ThemeColorPickerHeaderClose\"\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={require('../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                Site Colors\r\n                                <div className=\"ThemeColorPickerSiteColorEdit\">\r\n                                    Edit\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorGrid\">\r\n                                {\r\n                                    colorKeys.map(key => {\r\n                                        return (\r\n                                            Object.values(themeColorCategoryItems).map(item => {\r\n                                               return (\r\n                                                   <div\r\n                                                       key={item.name + key}\r\n                                                       className={`ThemeColorPickerSiteColorItem ${\r\n                                                           parseColor(this.state.color, undefined, this.context) ===\r\n                                                           this.context.getColor(item.name, key) ?\r\n                                                               \"ThemeColorPickerSiteColorItemSelected\": ''\r\n                                                           }`}\r\n                                                       style={{\r\n                                                           backgroundColor:\r\n                                                               this.context.getColor(item.name, key)\r\n                                                       }}\r\n                                                       onClick={(e) => {\r\n                                                           this.onSelectColor(\r\n                                                               {\r\n                                                                   paletteName: item.name,\r\n                                                                   key: key\r\n                                                               }\r\n                                                           )\r\n                                                       }}\r\n                                                   >\r\n\r\n                                                   </div>\r\n                                               )\r\n                                            })\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                My Colors\r\n                            </div>\r\n\r\n                            <div className=\"ThemeColorPickerMyColorGrid\">\r\n                                <div className=\"ThemeColorPickerMyColorItemAdd\" onClick={this.onAddColorClick}>\r\n                                    <Image\r\n                                        width={10}\r\n                                        height={10}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/add.svg'}\r\n                                    />\r\n                                </div>\r\n\r\n                                {\r\n                                    Object.values(siteData.myColors).map(color => {\r\n                                        return (\r\n                                            <div className={`ThemeColorPickerMyColorItem ${\r\n                                                    this.state.color === color ?\r\n                                                        \"ThemeColorPickerMyColorItemSelected\": ''\r\n                                                    }`}\r\n                                                 key={color}\r\n                                                 style={{\r\n                                                backgroundColor: color\r\n                                            }}\r\n                                                 onClick={(e) => {\r\n                                                     this.onSelectColor(\r\n                                                         color\r\n                                                     )\r\n                                                 }}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"ThemeColorPickerSiteColorTitle\">\r\n                                <div className=\"ThemeColorPickerSiteColorHexTitle\">\r\n                                    <div className=\"ThemeColorPickerSiteColorHexAddColor\" onClick={this.onAddColorClick}>\r\n                                        Add Color\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"ThemeColorPickerSiteColorHex\">\r\n                                    {chroma(parseColor(this.state.color, 1, this.context)).hex()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Draggable>\r\n\r\n                    {/*{\r\n                        this.state.addColor &&\r\n                        <>\r\n                            <div style={ {\r\n                                position: 'fixed',\r\n                                top: '0px',\r\n                                right: '0px',\r\n                                bottom: '0px',\r\n                                left: '0px',\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.2)'\r\n                            }} onClick={ () => this.setState({addColor: undefined}) }/>\r\n                            <div style={{\r\n                                position: 'absolute',\r\n                                left: \"50%\",\r\n                                top: \"50%\",\r\n                                transform: \"translate(-50%, -50%)\",\r\n                                zIndex: '2',\r\n                            }}>\r\n                                <SketchPicker\r\n                                    color={this.state.color}\r\n                                    onChangeComplete={ this.onAddColor }\r\n                                    disableAlpha={this.props.disableAlpha}\r\n                                    width={224}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    }*/}\r\n                    {\r\n                        this.state.addColor &&\r\n                        <HexColorPicker\r\n                            onClose={() => this.setState({addColor: undefined})}\r\n                            color={this.state.color}\r\n                            onChangeComplete={ this.onAddColor }\r\n                            disableAlpha={this.props.disableAlpha}\r\n                            width={224}\r\n                        />\r\n                    }\r\n                </div>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport SliderInputControlled from \"./SliderInputControlled\";\r\nimport ThemeColorPicker from \"../../Test/Theme/ThemeColorPicker\";\r\nimport chroma from \"chroma-js\";\r\nimport {parseColor} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ColorPicker extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.lastValue = props.color || 'rgba(0,0,0,0)';\r\n    }\r\n\r\n    getRgbA = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if (value instanceof Object) {\r\n            value = this.context.getColor(value.paletteName, value.key);\r\n        }\r\n\r\n        let color = chroma(value);\r\n        return {\r\n            r: color.rgba()[0],\r\n            g: color.rgba()[1],\r\n            b: color.rgba()[2],\r\n            a: color.rgba()[3]\r\n        }\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        if (this.state.displayColorPicker)\r\n            this.setState({ displayColorPicker: false });\r\n        else\r\n            this.setState({ displayColorPicker: e.target })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        if (color instanceof Object) {\r\n            console.log(\"handlehangeComplete1 this.lastValue\", this.lastValue, parseColor(this.lastValue, this.lastValue.alpha, this.context));\r\n            color.alpha = chroma(parseColor(this.lastValue, this.lastValue.alpha, this.context)).alpha();\r\n            console.log(\"handlehangeComplete1 alpha\", color.alpha);\r\n            this.lastValue = color;\r\n            // color.alpha = chroma(parseColor(color, undefined, this.context)).alpha();\r\n            this.props.onDesignChange(this.props.designKey, color);\r\n            return;\r\n        }\r\n\r\n        console.log(\"handleChangeComplete\", this.getColorAndAlpha().alpha)\r\n        let alpha = this.getColorAndAlpha().alpha || 100;\r\n\r\n        let value = this.lastValue = chroma(color).alpha(alpha / 100).css();\r\n\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n    };\r\n\r\n    getColorAndAlpha = () => {\r\n        let result = {\r\n            color: chroma(parseColor(this.props.color, 1, this.context)).alpha(0).hex(),\r\n            alpha: chroma(parseColor(this.props.color, this.props.color && this.props.color.alpha, this.context)).alpha() * 100\r\n        };\r\n\r\n        return result;\r\n    };\r\n\r\n    handleAlphaChange = (alpha) => {\r\n        if (this.lastValue instanceof Object) {\r\n            this.lastValue.alpha = alpha / 100;\r\n        } else {\r\n            this.lastValue = chroma(this.lastValue).alpha(alpha / 100).css();\r\n        }\r\n        this.props.onDesignChange(this.props.designKey, this.lastValue);\r\n    };\r\n\r\n    render () {\r\n        let {color, alpha} = this.getColorAndAlpha();\r\n        return (\r\n                <div className=\"CommonMenuRoot ColorPickerRoot\">\r\n                    <ButtonBase\r\n                        style={{\r\n                            background: `url(${process.env.PUBLIC_URL}'/static/icon/transparency.png')`,\r\n                        }}\r\n                        className=\"ColorPickerRGB\"\r\n                        onClick={ this.handleClick }\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                background: parseColor(this.props.color, alpha/100, this.context),\r\n                            }}\r\n                        />\r\n                    </ButtonBase>\r\n\r\n                    <div\r\n                        className=\"ColorPickerAlpha\"\r\n                    >\r\n                        <SliderInputControlled\r\n                            min={0}\r\n                            max={100}\r\n                            value={alpha || 0}\r\n                            onChange={this.handleAlphaChange}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.displayColorPicker &&\r\n                            <ThemeColorPicker\r\n                                color={color}\r\n                                onClose={this.handleClose}\r\n                                onChangeComplete={ this.handleChangeComplete }\r\n                                disableAlpha\r\n                                editor={this.props.editor}\r\n                                defaultPosition={\r\n                                    this.state.displayColorPicker.getBoundingClientRect()\r\n                                }\r\n                            />\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nexport default class Background extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Background</p>\r\n\r\n                <ColorPicker\r\n                    color={this.props.color}\r\n                    designKey={this.props.designKey}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.editor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class Divider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"Divider\" style={this.props.style}>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 24 }}\r\n                    step={this.props.step}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value || 0}\r\n                    onChange={this.onChange}\r\n                    handleStyle={{\r\n                        marginLeft: 7\r\n                    }}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value || 0}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\nimport 'rc-slider/assets/index.css';\r\nimport '../style.css';\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\n\r\nexport default class Border extends React.Component {\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.border.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Width (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={15}\r\n                            value={this.props.border.width}\r\n                            designKey={`${this.props.designKey}.width`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport NumberInput from \"../../../../Menus/CommonComponents/NumberInput\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\nimport {cloneObject} from \"../../../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class Corners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            radius: cloneObject(props.radius),\r\n            link: true\r\n        }\r\n    }\r\n\r\n    onChange = (value, side) => {\r\n        let radius = this.state.radius;\r\n        let changeSide = [side];\r\n        if (this.state.link)\r\n            changeSide = [\"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"];\r\n        changeSide.forEach(_side => {\r\n            radius[_side] = value;\r\n            this.props.onDesignChange(`${this.props.designKey}.${_side}`, value);\r\n        });\r\n        this.setState({radius});\r\n    };\r\n\r\n    onLinkClick = () => {\r\n        this.setState({link: !this.state.link});\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Radius (px)</p>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"topLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"topRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{position: \"relative\"}}>\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowTopLeft\"\r\n                             style={{\r\n                                 borderTopLeftRadius: this.state.radius[\"topLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowTopRight\"\r\n                             style={{\r\n                                 borderTopRightRadius: this.state.radius[\"topRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowBottomLeft\"\r\n                             style={{\r\n                                 borderBottomLeftRadius: this.state.radius[\"bottomLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowBottomRight\"\r\n                             style={{\r\n                                 borderBottomRightRadius: this.state.radius[\"bottomRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersLink\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginLeft: 0\r\n                            }}\r\n                            onClick={this.onLinkClick}\r\n                        >\r\n                            {\r\n                                this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../../icons/chain.svg')} />\r\n                            }\r\n                            {\r\n                                !this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../../icons/unlink.svg')} />\r\n                            }\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class CircularSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.rect = this.rootDivRef.current.getBoundingClientRect();\r\n        window.addEventListener(\"pointermove\", this.onMouseMove);\r\n        window.addEventListener(\"pointerup\", this.onMouseUp);\r\n\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                className={`CircularSliderRoot ${this.props.className}`}\r\n                style={{\r\n                    transform: `rotate(${this.props.value}deg)`\r\n                }}\r\n                onMouseDown={this.onMouseDown}\r\n                ref={this.rootDivRef}\r\n            >\r\n                <div\r\n                    className=\"CircularSliderBg\"\r\n                    style={{\r\n                        width: this.props.width || 90,\r\n                        height: this.props.width || 90\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"CircularSliderLine\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderCenter\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderKnob\"\r\n                    />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport CircularSlider from \"./CircularSlider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class Angle extends React.Component {\r\n    onChange = (value) => {\r\n        if (this.props.loop && value === 360)\r\n            value = 0;\r\n\r\n        this.props.onChange(value.toFixed(0));\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"AngleRoot\">\r\n                <CircularSlider\r\n                    {...this.props}\r\n                    className=\"AngleSlider\"\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                    min={0}\r\n                    max={360}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"AngleInput\"\r\n                    min={0}\r\n                    max={360}\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport '../style.css';\r\nimport Angle from \"../../../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\nimport ColorPicker from \"../../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nconst deg2rad = Math.PI/180;\r\nconst rad2deg = 180/Math.PI;\r\nexport default class Shadow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChange = (key, value) => {\r\n        let shadow = this.props.shadow;\r\n        shadow[key] = value;\r\n        this.setState({shadow});\r\n        this.props.onDesignChange(`${this.props.designKey}.${key}`, value);\r\n    };\r\n\r\n    getDegree = (xOffset, yOffset) => {\r\n        if (xOffset === undefined) xOffset = -1;\r\n        if (yOffset === undefined) yOffset = 1;\r\n        let ratio = (xOffset) / (yOffset);\r\n        let degree;\r\n        if (xOffset < 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg;\r\n        if (xOffset < 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 360;\r\n\r\n        return Math.round(degree);\r\n    };\r\n\r\n    getRatio = (degree) => {\r\n        return Math.tan( degree * deg2rad );\r\n    };\r\n\r\n    calcDegree = (degree) => {\r\n        let ratio = this.getRatio(degree);\r\n        let xO, yO;\r\n        if (ratio === 0) {\r\n            xO = 0;\r\n            yO = 1;\r\n        } else if (ratio === Infinity) {\r\n            xO = 1;\r\n            yO = 0;\r\n        } else {\r\n            xO = ratio;\r\n            yO = 1;\r\n            if (Math.abs(ratio) > 1) {\r\n                xO /= Math.abs(ratio);\r\n                yO /= Math.abs(ratio);\r\n            }\r\n        }\r\n        this.onChange(\"xOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? -xO : xO);\r\n        this.onChange(\"yOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? yO : -yO);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                    <div className=\"ShadowRoot\">\r\n                        <Angle\r\n                            className=\"ShadowAngle\"\r\n                            angle={this.getDegree(this.props.shadow.xOffset , this.props.shadow.yOffset)}\r\n                            onChange={this.calcDegree}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Distance (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.distance}\r\n                            designKey={`${this.props.designKey}.distance`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Size (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.size}\r\n                            designKey={`${this.props.designKey}.size`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Blur (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.props.shadow.blur}\r\n                            designKey={`${this.props.designKey}.blur`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.shadow.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Components/Background\";\r\nimport Border from \"./Components/Border\";\r\nimport Corners from \"./Components/Corners\";\r\nimport Shadow from \"./Components/Shadow\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class BorderDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/water.svg'} />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/border.svg'} />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/corner.svg'} />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                icon: <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" className=\"symbol symbol-shadowDesign\">\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M11.5 14.5h-8v-2h8c.55 0 1-.45 1-1v-9h2v9c0 1.65-1.35 3-3 3zm-3-4h-7c-1.1 0-2-.9-2-2v-7c0-1.1.9-2 2-2h7c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2z\"/>\r\n                </svg>\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                render: <Border\r\n                    border={design.border}\r\n                    designKey={\"design.border\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                render: <Corners\r\n                    radius={design.border.radius || {}}\r\n                    designKey={\"design.border.radius\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                render: <Shadow\r\n                    shadow={design.border.shadow || {}}\r\n                    designKey={\"design.border.shadow\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport classNames from \"classnames\";\r\n\r\nexport default class GridViewer extends React.Component {\r\n    render () {\r\n        let classes = classNames(\r\n            \"GridViewerRoot\",\r\n            this.props.className\r\n        );\r\n        return (\r\n            <div className={classes}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport GridViewer from \"../../../../Menus/CommonComponents/GridViewer\";\r\nimport classNames from \"classnames\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class AnimationSelector extends React.Component {\r\n    onSelectAnimation = (name) => {\r\n        this.props.onDesignChange(this.props.designKey, name);\r\n        window.requestAnimationFrame(() => {\r\n            this.props.item.playAnimation();\r\n        });\r\n    };\r\n\r\n    render () {\r\n        let {allAnimationNames, animation} = this.props;\r\n        let noneClasses = classNames(\r\n            \"MenuOptionAnimationItem\",\r\n            (!animation || !animation.name) && \"MenuOptionAnimationItemSelected\"\r\n        );\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n\r\n                <GridViewer>\r\n                    <ButtonBase\r\n                        className={noneClasses}\r\n                        key='none'\r\n                        onClick={(e) => this.onSelectAnimation()}\r\n                    >\r\n                        <img\r\n                            className=\"MenuOptionAnimationItemImage\"\r\n                            draggable={false} width={48} height={48}\r\n                            // src={process.env.PUBLIC_URL + `/static/icons/animation/${name}.svg`} />\r\n                            src={process.env.PUBLIC_URL + `/static/icon/animation-black.svg`}\r\n                        />\r\n                        <span>\r\n                            none\r\n                        </span>\r\n                    </ButtonBase>\r\n                    {\r\n                        allAnimationNames.map(name => {\r\n                            let classes = classNames(\r\n                                \"MenuOptionAnimationItem\",\r\n                                animation && name === animation.name && \"MenuOptionAnimationItemSelected\"\r\n                            );\r\n                            let displayName = name.split(/(?=[A-Z])/).join(' ');\r\n                            displayName = displayName.charAt(0).toUpperCase() + displayName.slice(1);\r\n                            return (\r\n                                <ButtonBase\r\n                                    className={classes}\r\n                                    key={name}\r\n                                    onClick={(e) => this.onSelectAnimation(name)}\r\n                                >\r\n                                    <img\r\n                                        className=\"MenuOptionAnimationItemImage\"\r\n                                        draggable={false} width={48} height={48}\r\n                                        // src={process.env.PUBLIC_URL + `/static/icons/animation/${name}.svg`} />\r\n                                        src={process.env.PUBLIC_URL + `/static/icon/animation-black.svg`}\r\n                                    />\r\n                                    <span className=\"MenuOptionAnimationItemTitle\">\r\n                                        {displayName}\r\n                                    </span>\r\n                                </ButtonBase>\r\n                            )\r\n                        })\r\n                    }\r\n                </GridViewer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../../Menus/Menu.css';\r\nimport SliderInput from \"../../../../Menus/CommonComponents/SliderInput\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {DynamicAnimations} from \"../../../../Dynamic/DynamicComponents\";\r\nimport Divider from \"../../../../Menus/CommonComponents/Divider\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\n\r\nexport default class AnimationOptions extends React.Component {\r\n\r\n    render () {\r\n        let {animation, onDesignChange, designKey, item} = this.props;\r\n        if (!animation || !animation.name) {\r\n            return <div className=\"MenuOptionSectionTitle\" style={{\r\n                textAlign: \"center\"\r\n            }}>\r\n                Select an Animation to See Options\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection MenuOptionGrid2\">\r\n                    <span className=\"MenuOptionSectionTitleNoMargin\">Play animation</span>\r\n\r\n                    <IconButton onClick={(e) => {\r\n                                    item.playAnimation();\r\n                                }}\r\n                                imageContainerStyle={{\r\n                                    padding: 0\r\n                                }}\r\n                                buttonBaseStyle={{\r\n                                    borderRadius: 999\r\n                                }}\r\n                    >\r\n                        <img draggable={false} width={24} height={24}\r\n                                   src={process.env.PUBLIC_URL + '/static/icon/play-button.svg'}\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                {\r\n                    animation.name &&\r\n                        DynamicAnimations[animation.name].getOptions(this.props)\r\n                }\r\n\r\n                {\r\n                    animation.name && DynamicAnimations[animation.name].getOptions(this.props) &&\r\n                    <Divider/>\r\n                }\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Duration</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={5}\r\n                            step={0.1}\r\n                            value={animation.options? animation.options.duration !== undefined?\r\n                                animation.options.duration: 1 : 1}\r\n                            designKey={`${designKey}.duration`}\r\n                            onDesignChange={onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Delay</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={10}\r\n                            step={0.1}\r\n                            value={animation.options? animation.options.delay !== undefined?\r\n                                animation.options.delay: 0 : 0}\r\n                            designKey={`${designKey}.delay`}\r\n                            onDesignChange={onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionAnimationOnceRoot\">\r\n                    <p className=\"MenuOptionSectionTitle\">Only animate first time</p>\r\n                    <Switch\r\n                        className=\"InspectorOverflowDirSwitch\"\r\n                        checked={animation.options && animation.options.once ? animation.options.once : false}\r\n                        onChange={(e) => {\r\n                            onDesignChange(`${designKey}.once`, e.target.checked);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\nimport AnimationSelector from \"./Components/AnimationSelector\";\r\nimport AnimationOptions from \"./Components/AnimationOptions\";\r\n\r\nexport default class AnimationDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Animation Type\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/animation-black.svg'} />\r\n            },\r\n            {\r\n                key: \"Animation Options\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/time.svg'} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Animation Type\",\r\n                render: <AnimationSelector\r\n                    animation={design.animation}\r\n                    designKey={\"design.animation.name\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    allAnimationNames={[\r\n                        'fadeIn',\r\n                        'bounceIn',\r\n                        'glideIn',\r\n                        'floatIn',\r\n                        'expandIn',\r\n                        'spinIn',\r\n                        'flyIn',\r\n                        'turnIn',\r\n                        'arcIn',\r\n                        'puffIn',\r\n                        'foldIn',\r\n                        'flipIn',\r\n                        'reveal',\r\n                    ]}\r\n                    item={this.props.item}\r\n                />\r\n            },\r\n            {\r\n                key: \"Animation Options\",\r\n                render: <AnimationOptions\r\n                    animation={design.animation}\r\n                    designKey={\"design.animation.options\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    item={this.props.item}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n                defaultIndexNo={0}\r\n            />\r\n        )\r\n    }\r\n}\r\n","export function getTextStyle (textTheme, textStaticData, textDesignData) {\r\n    return {\r\n        fontFamily: textDesignData.fontFamily || \"Arial\",\r\n        textAlign: `${textDesignData.textAlign || 'left'}`,\r\n        fontSize: `${textDesignData.fontSize || textTheme.fontSize || 22}px`,\r\n        fontWeight: `${textDesignData.fontWeight || textTheme.fontWeight || 'normal'}`,\r\n        fontStyle: `${textDesignData.fontStyle || textTheme.fontStyle || 'normal'}`,\r\n        fontDecoration: textDesignData.fontDecoration || textTheme.fontDecoration,\r\n        color: textDesignData.color || textTheme.color || '#181818',\r\n        backgroundColor: textDesignData.backgroundColor || textTheme.backgroundColor,\r\n        lineHeight: textDesignData.lineHeight || textTheme.lineHeight || 'normal',\r\n        letterSpacing: textDesignData.letterSpacing || textTheme.letterSpacing || 'normal'\r\n    }\r\n}\r\n\r\nexport function getFontDataByFamily (allFonts, fontFamily) {\r\n    console.log(\"getFontDataByFamily\", fontFamily)\r\n    let fontData = Object.values(allFonts).find(fontData => {\r\n        return fontFamily === fontData.fontFamily;\r\n    })\r\n\r\n    if (fontData)\r\n        return fontData;\r\n\r\n    return Object.values(allFonts).find(fontData => {\r\n        return \"Arial\" === fontData.name;\r\n    })\r\n}\r\n\r\nexport function getFontDataByName (allFonts, name) {\r\n    let fontData = Object.values(allFonts).find(fontData => {\r\n        return name === fontData.name;\r\n    })\r\n\r\n    if (fontData)\r\n        return fontData;\r\n\r\n    return Object.values(allFonts).find(fontData => {\r\n        return \"Arial\" === fontData.name;\r\n    })\r\n}\r\n\r\nexport function getInheritTextStyle () {\r\n    return {\r\n        fontFamily: \"inherit\",\r\n        textAlign: \"inherit\",\r\n        fontSize: \"inherit\",\r\n        fontWeight: \"inherit\",\r\n        fontStyle: \"inherit\",\r\n        fontDecoration: \"inherit\",\r\n        color: \"inherit\",\r\n        backgroundColor: \"inherit\",\r\n        lineHeight: \"inherit\",\r\n        letterSpacing: \"inherit\",\r\n    }\r\n}\r\n\r\nexport function applyProperty (doc, win, propertyName, value, tagName = 'span') {\r\n    let html = getSelectionHtmlRemoveProperty(doc, win, propertyName);\r\n    if (html && !html.includes('<')) {\r\n        let sel = doc.getSelection();\r\n        let range = sel.getRangeAt(0);\r\n        range.deleteContents();\r\n        var span = doc.createElement(tagName);\r\n        span.setAttribute(\"style\", `${propertyName}: ${value}; display: inline`);\r\n        span.innerText = html;\r\n        range.insertNode(span);\r\n        sel.addRange(range);\r\n    }\r\n    else if (html) {\r\n        doc.execCommand(\r\n            'insertHTML', false, `<${tagName} style=\"${propertyName}: ${value}\">${html}</${tagName}>`);\r\n    }\r\n}\r\n\r\nexport function getSelectionHtmlRemoveProperty (doc, win, propertyName, tagName = 'span') {\r\n    let range;\r\n    if (doc.selection && doc.selection.createRange) {\r\n        range = doc.selection.createRange();\r\n        return range.htmlText;\r\n    }\r\n    else if (win.getSelection) {\r\n        let selection = win.getSelection();\r\n        if (selection.rangeCount > 0) {\r\n            range = selection.getRangeAt(0);\r\n            let clonedSelection = range.cloneContents();\r\n            let div = doc.createElement(tagName);\r\n            div.appendChild(clonedSelection);\r\n            let nodes = div.getElementsByTagName(\"*\");\r\n            for (let node of nodes) {\r\n                if (node.style && node.style.removeProperty)\r\n                    node.style.removeProperty(propertyName);\r\n            }\r\n            return div.innerHTML;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n\r\nexport function getSelectionText (doc, win, tagName = 'span') {\r\n    let range;\r\n    if (doc.selection && doc.selection.createRange) {\r\n        range = doc.selection.createRange();\r\n        return range.htmlText;\r\n    }\r\n    else if (win.getSelection) {\r\n        let selection = win.getSelection();\r\n        if (selection.rangeCount > 0) {\r\n            range = selection.getRangeAt(0);\r\n            let clonedSelection = range.cloneContents();\r\n            let div = doc.createElement(tagName);\r\n            div.appendChild(clonedSelection);\r\n            return div.innerText;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n\r\nfunction nextNode(node) {\r\n    if (node.hasChildNodes()) {\r\n        return node.firstChild;\r\n    } else {\r\n        while (node && !node.nextSibling) {\r\n            node = node.parentNode;\r\n        }\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        return node.nextSibling;\r\n    }\r\n}\r\n\r\nexport function getRangeSelectedNodes(range) {\r\n    var node = range.startContainer;\r\n    var endNode = range.endContainer;\r\n\r\n    // Special case for a range that is contained within a single node\r\n    if (node == endNode) {\r\n        return [node];\r\n    }\r\n\r\n    // Iterate nodes until we hit the end container\r\n    var rangeNodes = [];\r\n    while (node && node != endNode) {\r\n        rangeNodes.push( node = nextNode(node) );\r\n    }\r\n\r\n    // Add partially selected nodes at the start of the range\r\n    node = range.startContainer;\r\n    while (node && node != range.commonAncestorContainer) {\r\n        rangeNodes.unshift(node);\r\n        node = node.parentNode;\r\n    }\r\n\r\n    return rangeNodes;\r\n}\r\n\r\nexport function getParentLine(range) {\r\n    var node = range.startContainer;\r\n    let found = false;\r\n    let parentLine;\r\n    while (!found) {\r\n        let newParantLine = (parentLine || node).parentNode;\r\n        if (!newParantLine) {\r\n            parentLine = undefined;\r\n            break;\r\n        }\r\n\r\n        if (newParantLine.id === \"editableDiv\") {\r\n            found = true;\r\n            break;\r\n        } else {\r\n            parentLine = newParantLine;\r\n        }\r\n    }\r\n\r\n    return parentLine;\r\n}\r\n\r\nexport function getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\nexport function getRandomLinkId(lenght) {\r\n    var letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var id = '';\r\n    for (var i = 0; i < lenght; i++) {\r\n        id += letters[Math.floor(Math.random() * letters.length)];\r\n    }\r\n    return id;\r\n}\r\n\r\nexport function getLineSelected(selection) {\r\n    let range = selection.getRangeAt(0);\r\n    let nodes = getRangeSelectedNodes(range);\r\n\r\n    let lineNodes = [];\r\n\r\n    nodes.forEach(node => {\r\n        let found = false;\r\n        let parentLine = node;\r\n        while (!found) {\r\n            let newParantLine = parentLine.parentNode;\r\n            if (!newParantLine) {\r\n                parentLine = undefined;\r\n                break;\r\n            }\r\n\r\n            if (newParantLine.id === \"editableDiv\") {\r\n                found = true;\r\n                break;\r\n            } else {\r\n                parentLine = newParantLine;\r\n            }\r\n        }\r\n\r\n        if (parentLine && !lineNodes.includes(parentLine))\r\n            lineNodes.push(parentLine);\r\n    })\r\n\r\n    return lineNodes;\r\n}\r\n","import {getRandomLinkId, getRangeSelectedNodes} from \"../../TextHelper\";\r\n\r\nexport function addLinkData (doc, linkData) {\r\n    if (linkData.type === \"None\") {\r\n        removeSelectedLink(doc);\r\n        return;\r\n    }\r\n\r\n    let linkId = getRandomLinkId(12);\r\n    if (getSelectedLinkId(doc))\r\n    {\r\n        linkId = getSelectedLinkId(doc);\r\n        let node = doc.getElementById(linkId);\r\n        node.setAttribute(\"linkdata\", JSON.stringify(linkData));\r\n    }\r\n    else\r\n    {\r\n        doc.execCommand('underline');\r\n        doc.execCommand('createlink', false, \"link1\");\r\n\r\n        let nodes = doc.querySelectorAll(`[href=\"link1\"]`);\r\n\r\n        nodes.forEach(node => {\r\n            node.removeAttribute(\"href\");\r\n            node.setAttribute(\"id\", linkId);\r\n            node.setAttribute(\"islink\", true);\r\n            node.setAttribute(\"linkdata\", JSON.stringify(linkData));\r\n        })\r\n    }\r\n}\r\n\r\nexport function removeSelectedLink (doc) {\r\n    let linkId = getSelectedLinkId(doc);\r\n\r\n    if (!linkId)\r\n        return;\r\n\r\n    let node = doc.getElementById(linkId);\r\n\r\n    var parent = node.parentNode;\r\n\r\n    while (node.firstChild) parent.insertBefore(node.firstChild, node);\r\n\r\n    parent.removeChild(node);\r\n}\r\n\r\nexport function getSelectedLinkData (doc) {\r\n    let linkId = getSelectedLinkId(doc);\r\n\r\n    if (!linkId)\r\n        return;\r\n\r\n    let node = doc.getElementById(linkId);\r\n\r\n    return JSON.parse(node.getAttribute(\"linkdata\"));\r\n}\r\n\r\nexport function getSelectedLinkId (doc) {\r\n    let selection = doc.getSelection();\r\n\r\n    console.log(\"getSelectedLinkId\");\r\n    if (selection.rangeCount < 1)\r\n        return false;\r\n\r\n    let range = selection.getRangeAt(0);\r\n    let nodes = getRangeSelectedNodes(range);\r\n    let linkId = false;\r\n    nodes.forEach(node => {\r\n        while (node) {\r\n            if (node.tagName === \"A\" && node.hasAttribute(\"islink\")) {\r\n                linkId = node.getAttribute(\"id\");\r\n                break;\r\n            }\r\n            node = node.parentNode;\r\n        }\r\n    });\r\n    console.log(\"getSelectedLinkId\", \"return false\");\r\n    return linkId;\r\n}\r\n\r\nexport function resolveLinks (element, preview, production, editorContext) {\r\n    let nodes = element.querySelectorAll(`[islink=true]`);\r\n\r\n    nodes.forEach(node => {\r\n        prepareLink(node, preview, production, editorContext);\r\n    })\r\n}\r\n\r\nexport function prepareLink (node, preview, production, editorContext, linkData) {\r\n    if (!linkData)\r\n        linkData = JSON.parse(node.getAttribute(\"linkdata\"));\r\n\r\n    if (!preview && !production)\r\n        return;\r\n\r\n    switch (linkData.type) {\r\n        case \"WebAddress\":\r\n            if (linkData.data.window === \"current\" && !production)\r\n                return;\r\n\r\n            node.setAttribute(\"href\", linkData.data.url);\r\n            if (linkData.data.window === \"new\") {\r\n                node.setAttribute(\"target\", \"_blank\");\r\n            }\r\n            break;\r\n        case \"Page\":\r\n            if (linkData.data.window === \"new\" && !production)\r\n                return;\r\n\r\n            node.addEventListener('click', () => {pageLinkHandle(editorContext, linkData)})\r\n            node.setAttribute(\"href\", \"#\");\r\n            break;\r\n        case \"Anchor\":\r\n        // TODO\r\n            break;\r\n        case \"TopBottomThisPage\":\r\n            console.log(\"TopBottomThisPage\");\r\n            node.setAttribute(\"href\", `#${linkData.data.position}`);\r\n            break;\r\n        case \"Document\":\r\n        // TODO\r\n            break;\r\n        case \"Email\":\r\n            node.setAttribute(\"href\", `mailto:${linkData.data.email}?subject=${\r\n                linkData.data.subject || \"subject\"\r\n            }`);\r\n            break;\r\n        case \"Phone\":\r\n            node.setAttribute(\"href\", `tel:${linkData.data.number}`);\r\n            break;\r\n        case \"LightBox\":\r\n        // TODO\r\n            break;\r\n    }\r\n\r\n    node.removeAttribute(\"linkdata\");\r\n}\r\n\r\nfunction pageLinkHandle (editorContext, linkData) {\r\n    if (linkData.data.window === 'current') {\r\n        editorContext.setPageData(linkData.data.pageId);\r\n    } else {\r\n\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport BorderDesign from \"./Menus/BorderDesign\";\r\nimport '../../HelperStyle.css';\r\nimport './ContainerBase.css';\r\nimport {\r\n    getCompositeDesignData,\r\n    getFromTempData,\r\n    parseColor,\r\n    resolveDesignData,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport AnimationDesign from \"./Menus/AnimationDesign\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\nimport {addLinkData, getSelectedLinkData} from \"../Text/Menus/components/LinkHelper\";\r\n\r\nexport default class ContainerBase extends AGLComponent{\r\n    static contextType = EditorContext;\r\n\r\n    resolveDesignData = () => {\r\n        resolveDesignData(this, \"border\", {shadow: {\r\n                xOffset: -1,\r\n                yOffset: 1,\r\n                distance: 1,\r\n                size: 0,\r\n                blur: 4\r\n        }, radius: {}});\r\n    };\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <BorderDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />,\r\n            <MenuButton\r\n                key={2}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/animation.svg'} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <AnimationDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n    };\r\n\r\n    getStaticChildren = () => {\r\n        this.resolveDesignData();\r\n\r\n        let border = getCompositeDesignData(this).border;\r\n        let fillColor = getCompositeDesignData(this).fillColor;\r\n        if (fillColor)\r\n            fillColor = parseColor(fillColor, fillColor.alpha, this.context);\r\n\r\n        border.radius = border.radius || {};\r\n        border.shadow = border.shadow || {};\r\n\r\n        let shadowColor = border.shadow.color;\r\n        if (shadowColor)\r\n            shadowColor = parseColor(shadowColor, shadowColor.alpha, this.context);\r\n        let borderColor = border.color;\r\n        if (borderColor)\r\n            borderColor = parseColor(borderColor, borderColor.alpha, this.context);\r\n\r\n        return <div\r\n            className=\"ContainerBaseBorderRoot\"\r\n            style={{\r\n                border:\r\n                    `${border.width || 0}px solid ${borderColor || 'rgba(186,218,85,0.63)'}`,\r\n                backgroundColor: fillColor,\r\n                borderRadius:\r\n                    `${border.radius.topLeft || 0}px ${border.radius.topRight || 0}px ${border.radius.bottomRight || 0}px ${border.radius.bottomLeft || 0}px`,\r\n                boxShadow: `${(border.shadow.xOffset) * (border.shadow.distance)}px ${(border.shadow.yOffset) * (border.shadow.distance)}px ${border.shadow.blur}px ${border.shadow.size}px ${shadowColor || 'rgba(186,218,85,0.63)'}`\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"ContainerBase\"\r\n                aglComponent={this}\r\n                {...this.props}\r\n                data={this.getData()}\r\n                getPrimaryOptions={this.getPrimaryOptions}\r\n                getInspector={this.getInspector}\r\n                getStaticChildren={this.getStaticChildren}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nContainerBase.defaultProps = {\r\n    tagName: \"ContainerBase\"\r\n};\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Components/Background\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class SectionDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/water.svg'} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.item.props.editor}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle={this.props.menuTitle || \"Box Design\"}\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Header extends AGLComponent{\r\n    static contextType = EditorContext;\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Header Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        console.log(\"updateDesign\", compositeDesign.fillColor)\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.context);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={[\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Header\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"1/1/2/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{\r\n                            // backgroundColor: \"#bcbcbc\",\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"150px\",\r\n                            zIndex: \"50\"\r\n                        }}\r\n                        as=\"header\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.defaultProps = {\r\n    tagName: \"Header\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Footer extends AGLComponent{\r\n    static contextType = EditorContext;\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Footer Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.context);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={[\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Footer\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"3/1/4/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"100px\",\r\n                            zIndex: \"51\"\r\n                        }}\r\n                        as=\"footer\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nFooter.defaultProps = {\r\n    tagName: \"Footer\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\nimport InspectorOverflow from \"../../Test/Inspector/InspectorOverflow\";\r\nimport InspectorScroll from \"../../Test/Inspector/InspectorScroll\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorAnchor from \"../../Test/Inspector/InspectorAnchor\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport {parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport SectionDesign from \"./Menus/SectionDesign\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Section extends AGLComponent{\r\n    static contextType = EditorContext;\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n            isSection: true\r\n        };\r\n    };\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <SectionDesign\r\n                        menuTitle={\"Section Design\"}\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.context);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    disabledProps={!this.props.isVerticalSection ? [\r\n                        'width', 'minWidth', 'maxWidth'\r\n                    ] : [\r\n                        'height', 'minHeight', 'maxHeight'\r\n                    ]}\r\n                />\r\n                <InspectorOverflow\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorScroll\r\n                    item={this.getAgl()}\r\n                    options={['none', 'sticky']}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAnchor\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Section\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"2/1/3/2\",\r\n                        }}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        style={{...{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"500px\",\r\n                        }, ...this.props.style}}\r\n                        designStyle={{...{\r\n                                // backgroundColor: \"#b3faf5\",\r\n                        }, ...this.props.designStyle}}\r\n                        data={this.getData()}\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        isSection\r\n                        as={\"section\"}\r\n                        getInspector={this.getInspector}\r\n                        getPrimaryOptions={this.getPrimaryOptions}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nSection.defaultProps = {\r\n    tagName: \"Section\"\r\n};\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport ColorPicker from \"../../Menus/CommonComponents/ColorPicker\";\r\nimport InspectorTitle from \"./InspectorTitle\";\r\nimport Background from \"../../Components/Containers/Menus/Components/Background\";\r\n\r\nexport default class InspectorBackground extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { open: true};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    onChangeColor = (key, value) => {\r\n        let {item} = this.props;\r\n        setStyleParam(\"backgroundColor\", value,\r\n            item, true, undefined, true);\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let style = item.getFromData(\"style\") || {};\r\n        return (\r\n            <>\r\n                <InspectorTitle defaultOpen title=\"Background\" onChange={(open) => {\r\n                    this.setState({open});\r\n                }}/>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <div className=\"InspectorOptionRoot\">\r\n                        <span className=\"InspectorBackgroundColorTitle\">\r\n                            Color\r\n                        </span>\r\n                        <ColorPicker\r\n                            color={style.backgroundColor || 'rgba(0, 0, 0, 0)'}\r\n                            designKey={\"design.fillColor\"}\r\n                            // onDesignChange={this.onChangeColor}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                            editor={this.props.item.props.editor}\r\n                        />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport Section from \"../Containers/Section\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {initGriddata, swapArrayElements} from \"../../AwesomeGridLayoutUtils\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorPadding from \"../../Test/Inspector/InspectorPadding\";\r\nimport InspectorBackground from \"../../Test/Inspector/InspectorBackground\";\r\nimport './PageBase.css';\r\nimport {isHideInBreakpoint, parseColor, setStyleParam} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nconst mainColTemplate = \"minmax(0px,1fr)\";\r\n\r\nexport default class PageBase extends AGLComponent {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.gridTemplateRows = \"auto\";\r\n        this.gridTemplateColumns = mainColTemplate;\r\n        this.gridX = 0;\r\n        this.gridY = 1;\r\n\r\n        this.allSectionsH = [];\r\n        this.allSectionsV = [null];\r\n\r\n        this.root = React.createRef();\r\n\r\n        this.initKeyboard();\r\n\r\n        this.initDataFromPageData(props);\r\n    }\r\n\r\n    initDataFromPageData = (props) => {\r\n        if (!props.griddata.initialized)\r\n            initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (!props.griddata.allSectionsH)\r\n            props.griddata.allSectionsH = [];\r\n        if (!props.griddata.allSectionsV)\r\n            props.griddata.allSectionsV = [null];\r\n\r\n        this.allSectionsH = props.griddata.allSectionsH;\r\n        this.allSectionsV = props.griddata.allSectionsV;\r\n        let grid = this.props.breakpointmanager.getFromData(props.griddata, \"grid\");\r\n        if (grid) {\r\n            this.gridX = grid.x;\r\n            this.gridY = grid.y;\r\n            this.gridTemplateRows = grid.gridTemplateRows;\r\n            this.gridTemplateColumns = grid.gridTemplateColumns;\r\n        }\r\n    };\r\n\r\n    initKeyboard = () => {\r\n        window.addEventListener(\"keydown\", (e) => {\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if (key === 38 && ctrl) {\r\n                e.preventDefault();\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveUp(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 40 && ctrl) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Down\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveDown(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 37 && ctrl) {\r\n                e.preventDefault();\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveLeft(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if (key === 39 && ctrl) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Right\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveRight(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        // TODO remove tests\r\n        // this.addSectionQueue(0, \"Header\", DynamicComponents, undefined, false);\r\n        // this.addSectionQueue(1, \"Section\", DynamicComponents, undefined, false);\r\n        // this.addSectionQueue(2, \"Footer\", DynamicComponents, undefined, false);\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            draggable: false,\r\n            resizable: true,\r\n            pageResize: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"scroll\",\r\n                    overflowY: \"scroll\",\r\n                    auto: true\r\n                },\r\n                grid: {\r\n                    x: this.gridX,\r\n                    y: this.gridY,\r\n                    gridTemplateRows: this.gridTemplateRows,\r\n                    gridTemplateColumns: this.gridTemplateColumns\r\n                },\r\n                containerHeight: \"max-content\"\r\n            },\r\n            customStyle: {\r\n                scrollBehavior: \"smooth\"\r\n            }\r\n        };\r\n    };\r\n\r\n    getHorizontalSection = (id) => {\r\n        return this.props.idMan.getItem(this.allSectionsH.find(h => {\r\n            return h === id;\r\n        }));\r\n    };\r\n\r\n    deleteHorizontalSection = (id) => {\r\n        let index = this.allSectionsH.findIndex(h => {\r\n            return h === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        if (this.allSectionsH.length === 1)\r\n            return false;\r\n\r\n        this.gridX--;\r\n\r\n        let currentSection = this.allSectionsH[index];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (firstRow >= x12 && lastRow <= x22) {\r\n                x22--;\r\n            } else if (lastRow <= x12) {\r\n                x22--;\r\n                x12--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (lastRow <= x13) {\r\n                x13--;\r\n                x23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        index >= 0 && this.allSectionsH.splice(index, 1);\r\n\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n        return true;\r\n    };\r\n\r\n    getVerticalSection = (id) => {\r\n        return this.props.idMan.getItem(this.allSectionsV.find(h => {\r\n            if (h === null)\r\n                return false;\r\n\r\n            return h === id;\r\n        })) || null;\r\n    };\r\n\r\n    deleteVerticalSection = (id) => {\r\n        let index = this.allSectionsV.findIndex(h => {\r\n            if (h === null)\r\n                return false;\r\n            return h === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        this.gridY--;\r\n\r\n        let currentSection = this.allSectionsV[index];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n        let firstCol = y1;\r\n        let lastCol = y2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (y12 >= firstCol) {\r\n                y12--;\r\n                y22--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (y13 >= lastCol) {\r\n                // fully right\r\n                y13--;\r\n                y23--;\r\n            } else if (y23 >= lastRow) {\r\n                // partially right\r\n                y23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.allSectionsV.splice(index, 1);\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n        return true;\r\n    };\r\n\r\n    addSectionQueue = (index, tagName, dynamicComponents, as, isVertical, callback) => {\r\n        if (!this.addQueue)\r\n            this.addQueue = [];\r\n\r\n        this.addQueue.push({\r\n            index, tagName, dynamicComponents, as, isVertical, callback\r\n        });\r\n\r\n        if (!this.checkingAddQueue) {\r\n            let nextOne = this.addQueue.shift();\r\n            this.checkAddQueue(nextOne);\r\n        }\r\n    };\r\n\r\n    checkAddQueue = (nextOne) => {\r\n        this.checkingAddQueue = true;\r\n        if (!nextOne.isVertical) {\r\n            this.addHorizontalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        } else {\r\n            this.addVerticalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        }\r\n    };\r\n\r\n    onItemPreDelete = (item) => {\r\n        let allow = this.deleteHorizontalSection(item.props.id);\r\n        if (!allow)\r\n            allow = this.deleteVerticalSection(item.props.id);\r\n\r\n        return allow;\r\n    };\r\n\r\n    // Just for vertical items\r\n    onItemPreResizeStop = (item, e, dir, delta, runtimeStyle) => {\r\n        console.log(\"small from top0\", this.allSectionsH, this.allSectionsV)\r\n        if (dir === 'e' || dir === 'w')\r\n            return;\r\n\r\n        let gridArea = item.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        this.root.current.prepareRects(false, true);\r\n        let yLineRefs = this.props.gridLine.getYlineRef(this.root.current.props.id);\r\n        let firstLineTop =\r\n            this.root.current.getGridLineRect(yLineRefs[0], 0, 'y', this.root.current).top;\r\n\r\n        console.log(\"small from top1\", this.allSectionsH, this.allSectionsV)\r\n        if (dir === 'n') {\r\n            if (delta.y > 0) { // small from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                console.log(\"small from top\", this.allSectionsH, this.allSectionsV)\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x1 && x12 < selectedX1) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n            else { // big from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x22 <= x1 && x12 >= selectedX1) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n        }\r\n        else { // dir === 's'\r\n            if (delta.y > 0) { // big from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x2 && x12 < selectedX2) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n            else { // small from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 < x2 && x12 >= selectedX2) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = -1;\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                nextSectionV = this.props.idMan.getItem(nextSectionV);\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n        }\r\n\r\n        item.setGridArea(\r\n            `${x1}/${y1}/${x2}/${y2}`\r\n            , this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    addHorizontalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridX++;\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length + 1).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        let currentSectionIndex = index !== 0 ? index - 1 : 0;\r\n\r\n        let currentSection = this.allSectionsH[currentSectionIndex];\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea ? `${index + 1}/${\r\n                currentSectionGridArea.split('/')[1]\r\n                }/${index + 2}/${\r\n                currentSectionGridArea.split('/')[3]\r\n                }` :\r\n            \"1/1/2/2\"\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            isSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n            }}\r\n            resizeSides={['s', 'n']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n        />;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstRow = index + 1;\r\n\r\n            if (x2 >= firstRow)\r\n                x2++;\r\n            if (x1 >= firstRow)\r\n                x1++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (x1 >= firstCol)\r\n                x1++;\r\n            if (x2 > firstCol)\r\n                x2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsH.splice(index, 0, agl.props.id);\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    getMainColIndex = (insertIndex) => {\r\n        let index = this.allSectionsV.findIndex(v => {\r\n            return v === null;\r\n        });\r\n\r\n        if (insertIndex !== undefined && index >= insertIndex)\r\n            return index + 1;\r\n\r\n        return index;\r\n    };\r\n\r\n    addVerticalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridY++;\r\n\r\n        let currentSectionIndex = index !== 0 ? index - 1 : 0;\r\n\r\n        let currentSection = this.allSectionsV[currentSectionIndex] || null;\r\n        if (currentSection === null)\r\n            currentSection = this.allSectionsV[currentSectionIndex + 1];\r\n\r\n        currentSection = this.props.idMan.getItem(currentSection);\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea ? `${\r\n                currentSectionGridArea.split('/')[0]\r\n                }/${index + 1}/${\r\n                currentSectionGridArea.split('/')[2]\r\n                }/${index + 2}` :\r\n            `${1}/${index + 1}/${this.gridX + 1}/${index + 2}`\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            isSection\r\n            isVerticalSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n                isVerticalSection: true,\r\n            }}\r\n            style={{\r\n                width: \"200px\",\r\n                height: \"auto\",\r\n                minHeight: \"auto\",\r\n            }}\r\n            resizeSides={['e', 'w', 'n', 's']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n            onItemPreResizeStop={this.onItemPreResizeStop}\r\n        />;\r\n\r\n        console.log(\"this.allSectionsH\", this.allSectionsH)\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n            verticalSection = this.props.idMan.getItem(verticalSection);\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        let mainColIndex = this.getMainColIndex(index);\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length + 1).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsV.splice(index, 0, agl.props.id);\r\n            this.props.select.onScrollItem();\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    moveUp = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex - 1];\r\n        sideSection = this.props.idMan.getItem(sideSection);\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 + 1}/${y1}/${x22 + 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 - 1}/${y12}/${x2 - 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveDown = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex + 1];\r\n        sideSection = this.props.idMan.getItem(sideSection);\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 - 1}/${y1}/${x22 - 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 + 1}/${y12}/${x2 + 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveRight = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex + 1];\r\n        if (sideSection !== null){\r\n            sideSection = this.props.idMan.getItem(sideSection);\r\n        }\r\n        // sideSection = this.props.idMan.getItem(sideSection) || null;\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 - 1}/${x2}/${y22 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 + 1}/${x22}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n\r\n            this.getAgl().invalidateSize();\r\n            this.props.select.onScrollItem();\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 + 1}/${x2}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                console.log(\"moveRight firstRow:\", firstRow, \"lastRow:\", lastRow, \"x13:\", x13, \"x23:\", x23);\r\n                if (x13 >= firstRow && x23 <= lastRow) {\r\n                    console.log(\"moveRight yes\");\r\n                    y13--;\r\n                    y23--;\r\n\r\n                    if (y23 > y1 + 1)\r\n                        y23 = y1 + 1;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    moveLeft = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex - 1];\r\n        if (sideSection !== null){\r\n            sideSection = this.props.idMan.getItem(sideSection);\r\n        }\r\n        // sideSection = this.props.idMan.getItem(sideSection) || null;\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 + 1}/${x2}/${y22 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 - 1}/${x22}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n\r\n            this.getAgl().invalidateSize();\r\n            this.props.select.onScrollItem();\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 - 1}/${x2}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                horizontalSection = this.props.idMan.getItem(horizontalSection);\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                if (x13 >= firstRow && x23 <= lastRow) {\r\n                    y13++;\r\n                    y23++;\r\n\r\n                    if (y13 < y2 - 1)\r\n                        y13 = y2 - 1;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.getAgl().invalidateSize();\r\n        this.props.select.onScrollItem();\r\n    };\r\n\r\n    updateTemplates = () => {\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            if (isHideInBreakpoint(this.props.idMan.getItem(this.allSectionsV[i])))\r\n                return \"0px\";\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map((a, i) => {\r\n            if (isHideInBreakpoint(this.props.idMan.getItem(this.allSectionsH[i])))\r\n                return \"0px\";\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    hasMiniMenuOverride = () => {\r\n        return false;\r\n    };\r\n\r\n    invalidateSizeOverride = (agl, self, updateParent, updateChildren, sourceId) => {\r\n        if (self)\r\n            delete this.tempSize;\r\n\r\n        Object.values(agl.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current && sourceId !== childRef.current.props.id) {\r\n                childRef.current.invalidateSize(true, false, true);\r\n            }\r\n        });\r\n    };\r\n\r\n    getInspectorOverride = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorBackground\r\n                    item={this.getAgl()}\r\n                    onDesignChange={this.onDesignChange}\r\n                />\r\n                <InspectorPadding\r\n                    item={this.getAgl()}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n\r\n    getSectionOfPoint = (left, top, width, height) => {\r\n        let childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n            if (childRef && childRef.current) {\r\n                if (childRef.current.isPointInclude(left, top))\r\n                    return true;\r\n            }\r\n        });\r\n\r\n        if (!childRef)\r\n            childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n                if (childRef && childRef.current) {\r\n                    if (childRef.current.isPointInclude(left + width, top + height))\r\n                        return true;\r\n                }\r\n            });\r\n\r\n        if (!childRef)\r\n            childRef = Object.values(this.getAgl().allChildRefs).find(childRef => {\r\n                return (childRef && childRef.current);\r\n            });\r\n\r\n        return childRef.current;\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        let fillColor;\r\n\r\n        console.log(\"updateDesign\", compositeDesign.fillColor)\r\n        if (compositeDesign.fillColor)\r\n            fillColor = parseColor(compositeDesign.fillColor, compositeDesign.fillColor.alpha, this.context);\r\n\r\n        setStyleParam(\"backgroundColor\", fillColor || \"unset\",\r\n            this.getAgl(), 2, undefined, true);\r\n    };\r\n    // White Background\r\n    getStaticChildren = () => {\r\n\r\n        return <div\r\n            className=\"PageBaseWhiteBackground\"\r\n            style={{\r\n\r\n            }}\r\n        />\r\n    };\r\n\r\n    render() {\r\n        // let fullWidth = (this.getAgl() && this.getAgl().getSize(false)) || (1002);\r\n        let fullWidth = this.props.pageSize;\r\n        console.log(\"this.getData()\", this.getData())\r\n        return (\r\n            <AGLWrapper tagName=\"PageBase\"\r\n                        aglRef={!this.props.aglRef ? this.root : this.root = this.props.aglRef}\r\n                        aglComponent={this}\r\n                        {...this.props}\r\n                        className=\"Page1Root\"\r\n                        style={{\r\n                            width: this.context.production ? \"100%\" : `${fullWidth}px`,\r\n                            height: \"100%\",\r\n                            boxShadow: \"0 2px 12px 6px rgba(134,138,165,.41)\",\r\n                            display: \"inline-block\"\r\n                        }}\r\n                        data={this.getData()}\r\n                        isPage\r\n                        resizeSides={[]}\r\n                        page={this}\r\n                        hasMiniMenuOverride={this.hasMiniMenuOverride}\r\n                        getInspector={this.getInspector}\r\n                        invalidateSizeOverride={this.invalidateSizeOverride}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nPageBase.defaultProps = {\r\n    tagName: \"PageBase\",\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\n\r\nexport default class VerticalSpacer extends AGLComponent{\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"VerticalSpacer\"\r\n                {...this.props}\r\n                data={this.getData()}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"20px\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\n\r\nlet FadeInAnimation = {};\r\n\r\nFadeInAnimation.getOptions = (props) => {\r\n    return null;\r\n};\r\n\r\nFadeInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {duration, delay} = options;\r\n    let animationStyles = StyleSheet.create({\r\n        fadeIn: {\r\n            animationName: {\r\n                \"0%\": {\r\n                    opacity: 0\r\n                },\r\n                \"100%\": {\r\n                    opacity: 1\r\n                }\r\n            },\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.fadeIn);\r\n};\r\n\r\nFadeInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FadeInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet BounceInAnimation = {};\r\n\r\nBounceInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From center',\r\n                    'From top left',\r\n                    'From top right',\r\n                    'From bottom left',\r\n                    'From bottom right'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nBounceInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `scale3d(0, 0, 0) translate3d(${\r\n                direction.includes('center')? '0': direction.includes('left')? '-100%': direction.includes('right')?\r\n                    '100%': '0'\r\n            }, ${\r\n                direction.includes('center')? '0': direction.includes('top')? '-100%': direction.includes('bottom')?\r\n                    '100%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['20%'] = {\r\n        opacity: 0.33,\r\n        transform: `scale3d(1.1, 1.1, 1.1) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '7%': direction.includes('right')?\r\n                '-7%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '7%': direction.includes('bottom')?\r\n                '-7%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['40%'] = {\r\n        opacity: 0.66,\r\n        transform: `scale3d(0.9, 0.9, 0.9) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '-5%': direction.includes('right')?\r\n                '5%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '-5%': direction.includes('bottom')?\r\n                '5%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['60%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(1.03, 1.03, 1.03) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '3%': direction.includes('right')?\r\n                '-3%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '3%': direction.includes('bottom')?\r\n                '-3%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['80%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(0.97, 0.97, 0.97) translate3d(${\r\n            direction.includes('center')? '0': direction.includes('left')? '-1%': direction.includes('right')?\r\n                '1%': '0'\r\n            }, ${\r\n            direction.includes('center')? '0': direction.includes('top')? '-1%': direction.includes('bottom')?\r\n                '1%': '0'\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `scale3d(1, 1, 1)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        bounceIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.bounceIn);\r\n};\r\n\r\nBounceInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default BounceInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\nimport SliderInput from \"../../Menus/CommonComponents/SliderInput\";\r\nimport Angle from \"../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\n\r\nlet GlideInAnimation = {};\r\n\r\nGlideInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <>\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                <Angle\r\n                    className=\"ShadowAngle\"\r\n                    angle={options.angle || 90}\r\n                    onChange={(d) => {\r\n                        onDesignChange(`${designKey}.angle`, d);\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Distance</p>\r\n\r\n                <div\r\n                    className=\"BorderWidth\"\r\n                >\r\n                    <SliderInput\r\n                        className=\"BorderWidthSlider\"\r\n                        min={0}\r\n                        max={300}\r\n                        value={options.distance || 100}\r\n                        designKey={`${designKey}.distance`}\r\n                        onDesignChange={onDesignChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nGlideInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {distance, angle, duration, delay} = options;\r\n    distance = distance || 100;\r\n    angle = angle || 90;\r\n\r\n    let animationName = {};\r\n    let tx = - distance * Math.sin(angle * Math.PI / 180);\r\n    let ty = distance * Math.cos(angle * Math.PI / 180);\r\n    animationName['0%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(${tx}px, ${ty}px, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        glideIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.glideIn);\r\n};\r\n\r\nGlideInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default GlideInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FloatInAnimation = {};\r\n\r\nFloatInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFloatInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n                direction.includes('left')? '-20%': direction.includes('right')? '20%': 0\r\n            }, ${\r\n                direction.includes('top')? '-20%': direction.includes('bottom')? '20%': 0\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        floatIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.floatIn);\r\n};\r\n\r\nFloatInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FloatInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet ExpandInAnimation = {};\r\n\r\nExpandInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'Soft',\r\n                    'Medium',\r\n                    'Hard'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.power`, v);\r\n                }}\r\n                value={options.power || 'Hard'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nExpandInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, duration, delay} = options;\r\n    power = power || 'Hard';\r\n\r\n    let animationName = {};\r\n    animationName[\"0%\"] = {\r\n        opacity: 0,\r\n        transform: `scale3d(${\r\n                power === \"Hard\"? '0.2': power === \"Medium\"? '0.5': '0.8'\r\n            }, ${\r\n                power === \"Hard\"? '0.2': power === \"Medium\"? '0.5': '0.8'\r\n            }, 0)`\r\n    };\r\n    animationName[\"100%\"] = {\r\n        opacity: 1,\r\n        transform: 'scale3d(1,1,1)'\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        expandIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.expandIn);\r\n};\r\n\r\nExpandInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default ExpandInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../Menus/CommonComponents/SliderInput\";\r\n\r\nlet SpinInAnimation = {};\r\n\r\nSpinInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <>\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n                <DropDown\r\n                    options={[\r\n                        'Soft',\r\n                        'Medium',\r\n                        'Hard'\r\n                    ]}\r\n                    onChange={(v) => {\r\n                        onDesignChange(`${designKey}.power`, v);\r\n                    }}\r\n                    value={options.power || 'Hard'}\r\n                    spanStyle={{\r\n                        width: \"100%\",\r\n                        fontSize: 14,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n                <DropDown\r\n                    options={[\r\n                        'Clockwise',\r\n                        'Counter clockwise',\r\n                    ]}\r\n                    onChange={(v) => {\r\n                        onDesignChange(`${designKey}.direction`, v);\r\n                    }}\r\n                    value={options.direction || 'Clockwise'}\r\n                    spanStyle={{\r\n                        width: \"100%\",\r\n                        fontSize: 14,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <Divider/>\r\n\r\n            <div className=\"MenuOptionAnimationRoot\">\r\n                <p className=\"MenuOptionSectionTitle\">Spin number</p>\r\n\r\n                <div\r\n                    className=\"BorderWidth\"\r\n                >\r\n                    <SliderInput\r\n                        className=\"BorderWidthSlider\"\r\n                        min={0}\r\n                        max={15}\r\n                        step={0.1}\r\n                        value={options.spinNo || 2}\r\n                        designKey={`${designKey}.spinNo`}\r\n                        onDesignChange={onDesignChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nSpinInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, direction, spinNo, duration, delay} = options;\r\n    power = power || 'Hard';\r\n    direction = direction || 'Clockwise';\r\n    spinNo = spinNo || 2;\r\n\r\n    let animationName = {};\r\n    let firstRotate = 360 * spinNo * (direction === 'Clockwise'? -1: 1);\r\n    animationName[\"0%\"] = {\r\n        opacity: 0,\r\n        transform: `rotate(${firstRotate}deg) scale3d(${\r\n                power === \"Hard\"? '0.3': power === \"Medium\"? '0.6': '1'\r\n            }, ${\r\n                power === \"Hard\"? '0.3': power === \"Medium\"? '0.6': '1'\r\n            }, 1)`\r\n    };\r\n    animationName[\"100%\"] = {\r\n        opacity: 1,\r\n        transform: 'rotate(0deg) scale3d(1,1,1)'\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        spinIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.spinIn);\r\n};\r\n\r\nSpinInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default SpinInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FlyInAnimation = {};\r\n\r\nFlyInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                    'From top left',\r\n                    'From top right',\r\n                    'From bottom left',\r\n                    'From bottom right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFlyInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let size = item.getSize(true);\r\n    let windowSize = {\r\n        width: item.props.breakpointmanager.getWindowWidth(),\r\n        height: item.props.breakpointmanager.getWindowHeight(),\r\n    };\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n                direction.includes('left')? `${-size.left}px`: direction.includes('right')? `${\r\n                    windowSize.width - size.left - size.width\r\n                }px`: 0\r\n            }, ${\r\n                direction.includes('top')? `${-size.top}px`: direction.includes('bottom')? `${\r\n                    windowSize.height - size.top - size.height\r\n                }px`: 0\r\n            }, 0)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        flyIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.flyIn);\r\n};\r\n\r\nFlyInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FlyInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet TurnInAnimation = {};\r\n\r\nTurnInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From left',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nTurnInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let size = item.getSize(true);\r\n    let viewSize = item.props.viewRef.current.getSize(false);\r\n    let windowSize = {\r\n        width: item.props.breakpointmanager.getWindowWidth(),\r\n        height: item.props.breakpointmanager.getWindowHeight(),\r\n    };\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n                -(size.left - viewSize.left)\r\n                }px`: `${\r\n            windowSize.width - (size.left - viewSize.left) - size.width\r\n                }px`\r\n            }, -200%, 0) rotate(${\r\n            direction.includes('left')? '-45': '45'\r\n            }deg) `\r\n    };\r\n    animationName['30%'] = {\r\n        opacity: 0.3,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n            -(size.left - viewSize.left) * 0.7\r\n                }px`: `${\r\n            (windowSize.width - (size.left - viewSize.left) - size.width) * 0.7\r\n                }px`\r\n            }, -${200*0.85}%, 0) rotate(${\r\n            direction.includes('left')? -45 * 0.7: 45 * 0.7\r\n            }deg) `\r\n    };\r\n    animationName['60%'] = {\r\n        opacity: 0.6,\r\n        transform: `translate3d(${\r\n            direction.includes('left')? `${\r\n            -(size.left - viewSize.left) * 0.4\r\n                }px`: `${\r\n            (windowSize.width - (size.left - viewSize.left) - size.width) * 0.4\r\n                }px`\r\n            }, -${200*0.55}%, 0) rotate(${\r\n            direction.includes('left')? -45 * 0.4: 45 * 0.4\r\n            }deg) `\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `translate3d(0,0,0) rotate(0deg) `\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        turnIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            animationTimingFunction: 'linear',\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.turnIn);\r\n};\r\n\r\nTurnInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default TurnInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport React from \"react\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\n\r\nlet ArcInAnimation = {};\r\n\r\nArcInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From left',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From right'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nArcInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From right';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) scale(0) rotateY(${\r\n            direction.includes('left') ? '-' : ''\r\n            }180deg) translateZ(600px)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) scale(1) rotateY(0deg) translateZ(0px)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        arcIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            animationTimingFunction: 'linear',\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.arcIn);\r\n};\r\n\r\nArcInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default ArcInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet PuffInAnimation = {};\r\n\r\nPuffInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Power</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'Soft',\r\n                    'Medium',\r\n                    'Hard'\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.power`, v);\r\n                }}\r\n                value={options.power || 'Hard'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nPuffInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {power, duration, delay} = options;\r\n    power = power || 'Hard';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) translateZ(${\r\n            power === \"Hard\"? 400: power === \"Medium\"? 200: 100\r\n            }px)`\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) translateZ(0)`\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        puffIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.puffIn);\r\n};\r\n\r\nPuffInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default PuffInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FoldInAnimation = {};\r\n\r\nFoldInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From left'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFoldInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From left';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) rotateY(${\r\n                direction.includes('left')? 90: direction.includes('right')? -90: 0\r\n            }deg) rotateX(${\r\n                direction.includes('top')? -90: direction.includes('bottom')? 90: 0\r\n            }deg)`,\r\n        transformOrigin: `${\r\n            direction.includes('left')? 'left': direction.includes('right')? 'right': 'center'\r\n            } ${\r\n            direction.includes('top')? 'top': direction.includes('bottom')? 'bottom': 'center'\r\n            } 0`,\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) rotateY(0deg) rotateX(0deg)`,\r\n        transformOrigin: `${\r\n            direction.includes('left')? 'left': direction.includes('right')? 'right': 'center'\r\n            } ${\r\n            direction.includes('top')? 'top': direction.includes('bottom')? 'bottom': 'center'\r\n            } 0`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        foldIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.foldIn);\r\n};\r\n\r\nFoldInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FoldInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet FlipInAnimation = {};\r\n\r\nFlipInAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From top'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFlipInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From top';\r\n\r\n    let animationName = {};\r\n    animationName['0%'] = {\r\n        opacity: 0,\r\n        transform: `perspective(400px) rotateY(${\r\n                direction.includes('left')? -90: direction.includes('right')? 90: 0\r\n            }deg) rotateX(${\r\n                direction.includes('top')? 90: direction.includes('bottom')? -90: 0\r\n            }deg)`,\r\n    };\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        transform: `perspective(400px) rotateY(0deg) rotateX(0deg)`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        flipIn: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.flipIn);\r\n};\r\n\r\nFlipInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FlipInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport React from \"react\";\r\n\r\nlet RevealAnimation = {};\r\n\r\nRevealAnimation.getOptions = (props) => {\r\n    let {animation, onDesignChange, designKey} = props;\r\n    let options = animation.options || {};\r\n    return (\r\n        <div className=\"MenuOptionAnimationRoot\">\r\n            <p className=\"MenuOptionSectionTitle\">Direction</p>\r\n\r\n            <DropDown\r\n                options={[\r\n                    'From center',\r\n                    'From top',\r\n                    'From left',\r\n                    'From bottom',\r\n                    'From right',\r\n                ]}\r\n                onChange={(v) => {\r\n                    onDesignChange(`${designKey}.direction`, v);\r\n                }}\r\n                value={options.direction || 'From center'}\r\n                spanStyle={{\r\n                    width: \"100%\",\r\n                    fontSize: 14,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nRevealAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let {direction, duration, delay} = options;\r\n    direction = direction || 'From center';\r\n\r\n    let animationName = {};\r\n    switch (direction) {\r\n        case 'From center':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%)`,\r\n            };\r\n            break;\r\n        case 'From left':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 0, 0 0, 0 100%, 0 100%)`,\r\n            };\r\n            break;\r\n        case 'From right':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(100% 0, 100% 0, 100% 100%, 100% 100%)`,\r\n            };\r\n            break;\r\n        case 'From top':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 0, 0 100%, 0 100%, 0 0)`,\r\n            };\r\n            break;\r\n        case 'From bottom':\r\n            animationName['0%'] = {\r\n                opacity: 1,\r\n                clipPath: `polygon(0 100%, 100% 100%, 100% 100%, 0 100%)`,\r\n            };\r\n            break;\r\n    }\r\n    animationName['100%'] = {\r\n        opacity: 1,\r\n        clipPath: `polygon(0 0, 100% 0, 100% 100%, 0 100%)`,\r\n    };\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        reveal: {\r\n            animationName: animationName,\r\n            animationDuration: `${duration || 1}s`,\r\n            animationDelay: `${delay || 0}s`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.reveal);\r\n};\r\n\r\nRevealAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default RevealAnimation;\r\n","import React from \"react\";\r\nimport {getInheritTextStyle} from \"../TextHelper\";\r\n\r\nexport default class InputDiv extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return false;\r\n    }\r\n\r\n    render () {\r\n        let {tag, textStaticData} = this.props;\r\n        let TextTag = tag;\r\n        return (\r\n            <TextTag\r\n                id={\"editableDiv\"}\r\n                key={'textEditor'}\r\n                ref={this.props.textareaRef}\r\n                contentEditable={true}\r\n                style={{...{\r\n                    width: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    margin: 0,\r\n                    height: \"auto\",\r\n                    overflow: \"hidden\",\r\n                    display: \"inline-block\",\r\n                    whiteSpace: 'pre-wrap'\r\n                }, ...getInheritTextStyle()}}\r\n                dangerouslySetInnerHTML={{ __html: this.props.value }}\r\n            >\r\n            </TextTag>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport InputDiv from \"./InputDiv\";\r\nimport {\r\n    getInheritTextStyle,\r\n    getParentLine,\r\n    getSelectionHtmlRemoveProperty,\r\n    getSelectionText,\r\n    getTextStyle\r\n} from \"../TextHelper\";\r\nimport {JSToCSS} from \"../../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class InputWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.textareaRef = React.createRef();\r\n        this.textEditorRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onLoad && this.props.onLoad();\r\n        this.updateHeight();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.props.onUpdate && this.props.onUpdate();\r\n    }\r\n\r\n    updateHeight = () => {\r\n        this.setState({\r\n            // width: this.textareaRef.current.scrollWidth,\r\n            height: this.textareaRef.current.scrollHeight,\r\n        })\r\n    }\r\n\r\n    onChange = (e, callback) => {\r\n        this.updateHeight();\r\n        this.props.onChange && this.props.onChange(e, callback);\r\n    }\r\n\r\n    onInput = (e) => {\r\n        if (e)\r\n            e.target.value = this.textareaRef.current.innerHTML;\r\n        else\r\n            e = {target: {value: this.textareaRef.current.innerHTML}}\r\n\r\n        this.onChange(e);\r\n    }\r\n\r\n    keydown = (e) => {\r\n        e = e || window.event;\r\n        let key = e.which || e.keyCode; // keyCode detection\r\n        if (key === 13) { // Enter or Return\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            let sel = this.props.doc.getSelection();\r\n            let range = sel.getRangeAt(0);\r\n            let line = getParentLine(range);\r\n            if (!line)\r\n                return;\r\n\r\n            range.deleteContents();\r\n\r\n            range.setEndAfter(line);\r\n\r\n            let text = getSelectionText(this.props.doc, this.props.iframeNode.contentWindow);\r\n\r\n            if (!text) {\r\n                let br = this.props.doc.createElement(\"br\");\r\n                range.startContainer.after(br);\r\n                range.setStartBefore(br);\r\n            }\r\n\r\n            let html = getSelectionHtmlRemoveProperty(this.props.doc, this.props.iframeNode.contentWindow);\r\n\r\n            console.log(\"html\", html, text)\r\n\r\n            range.deleteContents();\r\n\r\n            range.setStartAfter(line);\r\n\r\n            line.insertAdjacentHTML('afterend', html)\r\n            this.onInput();\r\n        } else {\r\n            // this.props.doc.execCommand('selectAll');\r\n                // let text = getSelectionText(this.props.doc, this.props.iframeNode.contentWindow);\r\n\r\n            console.log(\"text\", this.textareaRef.current.innerText)\r\n            if (!this.textareaRef.current.innerText.trim()) {\r\n                this.textareaRef.current.innerHTML = '';\r\n\r\n                console.log(\"this.props.tag\", this.props.tag)\r\n                let div = this.props.doc.createElement(this.props.tag);\r\n                div.setAttribute(\"title\", \"line\");\r\n                div.setAttribute(\"style\", JSToCSS({...getInheritTextStyle(), ...{margin: \"0px\"}}))\r\n                div.focus();\r\n                div.innerText = String.fromCharCode(key);\r\n\r\n                let sel = this.props.doc.getSelection();\r\n                let range = sel.getRangeAt(0);\r\n\r\n                range.insertNode(div);\r\n                range.setStart(div, 1);\r\n                range.collapse(true)\r\n\r\n                sel.removeAllRanges()\r\n                sel.addRange(range)\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        }\r\n    }\r\n\r\n    init = (doc) => {\r\n        if (!this.inited) {\r\n            this.inited = true;\r\n            doc.getElementById(\"textEditor\").addEventListener(\"input\", this.onInput);\r\n            // doc.getElementById(\"textEditor\").addEventListener(\"keydown\", this.keydown);\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let {textTheme, textStaticData, textDesignData} = this.props;\r\n        let TextTag = this.props.tag;\r\n        return (\r\n            <div\r\n                dir={textStaticData.dir || \"ltr\"}\r\n                ref={this.textEditorRef}\r\n                id={'textEditor'}\r\n                style={{...{\r\n                    width: this.props.width,\r\n                    boxSizing: \"border-box\",\r\n                    margin: 0,\r\n                    height: this.state.height || this.props.height,\r\n                    resize: \"none\",\r\n                    overflow: \"hidden\"\r\n                }, ...getTextStyle(textTheme, textStaticData, textDesignData)}}\r\n            >\r\n                <InputDiv\r\n                    textareaRef={this.textareaRef}\r\n                    value={this.props.value}\r\n                    tag={this.props.tag}\r\n                    textTheme={this.props.textTheme}\r\n                    textStaticData={this.props.textStaticData}\r\n                    textDesignData={this.props.textDesignData}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './TextEditor.css';\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\n\r\nexport default class TextEditorButton extends React.Component {\r\n    getImage = () => {\r\n        if (this.props.selected && this.props.selectedIcon)\r\n            return this.props.selectedIcon;\r\n\r\n        if (this.props.disabled && this.props.disabledIcon)\r\n            return this.props.disabledIcon;\r\n\r\n        return this.props.children;\r\n    }\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                buttonBaseStyle={{\r\n                    marginLeft: 4,\r\n                    backgroundColor: this.props.selected ? \"#dce9ff\" : \"unset\"\r\n                }}\r\n                imageContainerStyle={{\r\n                    padding: 6\r\n                }}\r\n                onClick={this.props.onClick}\r\n                rootRef={this.props.rootRef}\r\n                disabled={this.props.disabled}\r\n            >\r\n                {this.getImage()}\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles({\r\n    popper: {\r\n        zIndex: 999999999999999999\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        borderRight: \"1px solid #c6c6c6\",\r\n        paddingRight: 12\r\n    }\r\n});\r\n\r\nexport default function FontSizeAutoComplete(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Autocomplete\r\n            classes={{\r\n                popper: classes.popper,\r\n                root: classes.root\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nexport function RoughInput(props) {\r\n    return (\r\n        <Autocomplete\r\n            id=\"custom-input-demo\"\r\n            options={[]}\r\n            onChange={\r\n                props.onChange\r\n            }\r\n            onBlur={\r\n                props.onBlur\r\n            }\r\n            onKeyPress={\r\n                props.onKeyPress\r\n            }\r\n            renderInput={(params) => (\r\n                // <div ref={params.InputProps.ref}>\r\n                    <input\r\n                        {...params.inputProps}\r\n                        className=\"NumberInput PageManagerRenameInput PageInfoNameInput LinkGeneratorOptionWebAddressInput\"\r\n                        type=\"text\"\r\n                    >\r\n                    </input>\r\n                // </div>\r\n            )}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FontSizeAutoComplete from \"./FontSizeAutoComplete\";\r\n\r\nexport default class FontSizeSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n    filterOptions = (options) => {\r\n        return [\"6\",\"8\",\"10\",\"12\",\"14\",\"16\",\"18\",\"20\",\"22\",\"24\",\"28\",\"32\",\"48\",\"72\"];\r\n    }\r\n\r\n    getAllowableFontSize = () => {\r\n        return (new Array(100)).fill(\"0\").map((v, i) => {\r\n            return `${i + 1}`;\r\n        });\r\n    }\r\n\r\n    setForceValue = (value) => {\r\n        this.onFontSizeChange(undefined, value, \"input\");\r\n    }\r\n\r\n    onFontSizeChange = (e, value, reason) => {\r\n        console.log(\"onFontSizeChange value reason\", value, reason);\r\n        if (reason === \"input\") {\r\n            console.log(\"onFontSizeChange input\", value);\r\n            this.setState({tempFontSize: value});\r\n        } else if (reason === \"select-option\") {\r\n            console.log(\"onFontSizeChange select-option\", value);\r\n            this.setFontSize(value);\r\n        } else if (reason === \"enter\") {\r\n            console.log(\"onFontSizeChange enter\", value, this.getAllowableFontSize());\r\n            if (this.getAllowableFontSize().includes(value))\r\n                this.setFontSize(value);\r\n            else\r\n                this.setState({tempFontSize: this.getFontSizeValue(value !== \"\" && true)});\r\n        }\r\n    }\r\n\r\n    setFontSize = (value) => {\r\n        this.setState({tempFontSize: value});\r\n        this.props.onChange(value);\r\n    }\r\n\r\n    setFontSizeUi = (value) => {\r\n        this.setState({tempFontSize: value});\r\n    }\r\n\r\n    getFontSizeValue = (ignoreState = false) => {\r\n        let {textTheme, textStaticData, textDesignData} = this.props;\r\n\r\n        if (!ignoreState && this.state.tempFontSize !== undefined)\r\n            return this.state.tempFontSize;\r\n\r\n        return (!ignoreState && this.state.tempFontSize) ||\r\n            (textDesignData.fontSize && textDesignData.fontSize.toString()) ||\r\n            (textTheme.fontSize &&\r\n                textTheme.fontSize.toString()) ||\r\n            \"22\"\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <FontSizeAutoComplete\r\n                size={\"small\"}\r\n                options={this.getAllowableFontSize()}\r\n                value={this.getFontSizeValue()}\r\n                getOptionLabel={(option) => option}\r\n                filterOptions={this.filterOptions}\r\n                style={this.props.style || { width: 64 }}\r\n                popupIcon={\r\n                    <img width={10} height={10} src={process.env.PUBLIC_URL + \"/static/icon/down-arrow.svg\"}/>\r\n                }\r\n                renderInput={(params) => {\r\n                    params.InputProps.disableUnderline = true;\r\n                    params.inputProps.style = {padding: 0, fontSize: 14};\r\n                    return (\r\n                        <TextField {...params} onChange={(e) => {\r\n                            this.onFontSizeChange(e, e.target.value, 'input');\r\n                        }}/>\r\n                    )\r\n                }}\r\n                blurOnSelect\r\n                onChange={this.onFontSizeChange}\r\n                onKeyDown={(e) => {\r\n                    if((e.keyCode || e.which) === 13){\r\n                        this.onFontSizeChange(e, e.target.value, 'enter');\r\n                    }\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport TextEditorButton from \"../TextEditorButton\";\r\nimport {EditorContext} from \"../../../../Editor/EditorContext\";\r\nimport ThemeColorPicker from \"../../../../Test/Theme/ThemeColorPicker\";\r\n\r\nexport default class TextColorSelector extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.buttonRef = React.createRef();\r\n    }\r\n\r\n    handleChangeComplete = (color) => {\r\n        this.props.onChange(color);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <TextEditorButton\r\n                    rootRef={this.buttonRef}\r\n                    onClick={(e) => {\r\n                        this.setState({open: true})\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </TextEditorButton>\r\n\r\n                {\r\n                    this.state.open &&\r\n                    <ThemeColorPicker\r\n                        onClose={(e) => {\r\n                            this.setState({open: false})\r\n                        }}\r\n                        onChangeComplete={ this.handleChangeComplete }\r\n                        disableAlpha\r\n                        editor={this.context.editor}\r\n                        defaultPosition={\r\n                            this.buttonRef.current.getBoundingClientRect()\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    icon: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n        backgroundColor: '#f5f8fa',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n        '$root.Mui-focusVisible &': {\r\n            outline: '2px auto rgba(19,124,189,.6)',\r\n            outlineOffset: 2,\r\n        },\r\n        'input:hover ~ &': {\r\n            backgroundColor: '#ebf1f5',\r\n        },\r\n        'input:disabled ~ &': {\r\n            boxShadow: 'none',\r\n            background: 'rgba(206,217,224,.5)',\r\n        },\r\n    },\r\n    checkedIcon: {\r\n        backgroundColor: '#137cbd',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n        '&:before': {\r\n            display: 'block',\r\n            width: 16,\r\n            height: 16,\r\n            backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\r\n            content: '\"\"',\r\n        },\r\n        'input:hover ~ &': {\r\n            backgroundColor: '#106ba3',\r\n        },\r\n    },\r\n});\r\n\r\n// Inspired by blueprintjs\r\nfunction SmallRadio(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Radio\r\n            className={classes.root}\r\n            disableRipple\r\n            color=\"default\"\r\n            checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n            icon={<span className={classes.icon} />}\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SmallRadio;\r\n","import React from \"react\";\r\nimport {EditorContext} from \"../../../../Editor/EditorContext\";\r\nimport IconButton from \"../../../../HelperComponents/IconButton\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport './LinkGenerator.css';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport LightTooltip from \"../../../Containers/Menus/Components/LightTooltip\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport SmallRadio from \"../../../../HelperComponents/SmallRadio\";\r\nimport DropDown from \"../../../../Menus/CommonComponents/DropDown\";\r\n\r\nexport default class LinkGenerator extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            type: props.linkData? props.linkData.type: \"None\",\r\n            linkData: props.linkData || {type: \"None\", data: {}}\r\n        };\r\n\r\n        console.log(\"LinkGenerator\", props.linkData)\r\n    }\r\n\r\n\r\n    getHomePageId = () => {\r\n        let homePage = Object.values(this.context.siteData.allPages).find(pageData => {\r\n            return pageData.props.isHome;\r\n        });\r\n\r\n        if (!homePage)\r\n            homePage = Object.values(this.context.siteData.allPages)[0];\r\n\r\n        return homePage.props.pageId;\r\n    }\r\n\r\n    getPageOptions = () => {\r\n        return Object.values(this.context.siteData.allPages).map(page => {\r\n            return {pageId: page.props.pageId, pageName: page.props.pageName};\r\n        })\r\n    };\r\n\r\n    getFirstLightBoxId = () => {\r\n        return \"\";\r\n    }\r\n\r\n    setLinkType = (type) => {\r\n        switch (type) {\r\n            case \"None\":\r\n                this.setState({type, linkData: {type, data: {}}});\r\n                break;\r\n            case \"WebAddress\":\r\n                this.setState({type, linkData: {type, data: {\r\n                    window: \"new\", url: \"\"}}});\r\n                break;\r\n            case \"Page\":\r\n                this.setState({type, linkData: {type, data: {\r\n                    window: \"current\", pageId: this.getHomePageId(), inputs: []}}});\r\n                break;\r\n            case \"Anchor\":\r\n                this.setState({type, linkData: {type, data: {\r\n                    pageId: this.getHomePageId(), anchorId: \"topOfPage\"}}});\r\n                break;\r\n            case \"TopBottomThisPage\":\r\n                this.setState({type, linkData: {type, data: {\r\n                    position: \"top\"}}});\r\n                break;\r\n            case \"Document\":\r\n                this.setState({type, linkData: {type, data: {\r\n                    url: \"\"}}});\r\n                break;\r\n            case \"Email\":\r\n                this.setState({type, linkData: {type, data: {\r\n                    email: \"\", subject: \"\"}}});\r\n                break;\r\n            case \"Phone\":\r\n                this.setState({type, linkData: {type, data: {\r\n                    number: \"\"}}});\r\n                break;\r\n            case \"LightBox\":\r\n                this.setState({type, linkData: {type, data: {\r\n                    lightBoxId: this.getFirstLightBoxId()}}});\r\n                break;\r\n        }\r\n    }\r\n\r\n    validURL = (str) => {\r\n        let pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n        return !!pattern.test(str);\r\n    }\r\n\r\n    validPhone = (str) => {\r\n        if (!str || str.length < 3)\r\n            return false;\r\n\r\n        console.log(\"validPhone\", !!/^\\d+$/.test(str))\r\n        return !!/^\\d+$/.test(str);\r\n    }\r\n\r\n    validEmail = (str) => {\r\n        if (!str || str.length < 3)\r\n            return false;\r\n\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(str).toLowerCase());\r\n    }\r\n\r\n    isLinkReadyForDone = () => {\r\n        let {type, linkData} = this.state;\r\n\r\n        switch (type) {\r\n            case \"None\":\r\n                return true;\r\n            case \"WebAddress\":\r\n                return this.validURL(linkData.data.url);\r\n            case \"Page\":\r\n                return true;\r\n            case \"Anchor\":\r\n                // TODO\r\n            case \"TopBottomThisPage\":\r\n                return true;\r\n            case \"Document\":\r\n                // TODO\r\n            case \"Email\":\r\n                return this.validEmail(linkData.data.email);\r\n            case \"Phone\":\r\n                return this.validPhone(linkData.data.number);\r\n            case \"LightBox\":\r\n                // TODO\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render () {\r\n        let {type, linkData} = this.state;\r\n        return <Modal\r\n            open={this.props.open}\r\n            onClose={this.props.onClose}\r\n            aria-labelledby=\"simple-modal-title2\"\r\n            aria-describedby=\"simple-modal-description2\"\r\n            className=\"PageSettingModal\"\r\n            disableBackdropClick\r\n        >\r\n            <div className=\"PageSettingRoot\" style={{height: \"auto\"}}>\r\n                {/*Header*/}\r\n                <div className=\"PageSettingHeader\">\r\n                    <div\r\n                        className=\"PageManagerHeaderContainer\"\r\n                    >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                What do you want to link to?\r\n                            </span>\r\n\r\n                        <IconButton\r\n                            onClick={this.props.onClose}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={12}\r\n                                height={12}\r\n                                src={require('../../../../icons/close.svg')}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"LinkGeneratorRoot\">\r\n                    <div className=\"LinkGeneratorContent\">\r\n                        <div className=\"LinkGeneratorTypes\">\r\n                            <RadioGroup name=\"type\" value={type} onChange={\r\n                                (e) => {this.setLinkType(e.target.value)}}>\r\n                                <FormControlLabel value=\"None\" control={<SmallRadio />}\r\n                                                  label={<p className=\"LinkGeneratorTypesLabel\">None</p>} />\r\n                                <FormControlLabel value=\"WebAddress\" control={<SmallRadio />}\r\n                                                  label={<p className=\"LinkGeneratorTypesLabel\">Web Address</p>}/>\r\n                                <FormControlLabel value=\"Page\" control={<SmallRadio />}\r\n                                                  label={<p className=\"LinkGeneratorTypesLabel\">Page</p>} />\r\n                                <FormControlLabel value=\"Anchor\" disabled control={<SmallRadio />}\r\n                                                  label={<p className=\"LinkGeneratorTypesLabel\">Anchor</p>} />\r\n                                <FormControlLabel value=\"TopBottomThisPage\" control={<SmallRadio />}\r\n                                                  label={<p className=\"LinkGeneratorTypesLabel\">Top / Bottom</p>} />\r\n                                <FormControlLabel value=\"Document\" disabled control={<SmallRadio />}\r\n                                                  label={<p className=\"LinkGeneratorTypesLabel\">Document</p>} />\r\n                                <FormControlLabel value=\"Email\"  control={<SmallRadio />}\r\n                                                  label={<p className=\"LinkGeneratorTypesLabel\">Email</p>} />\r\n                                <FormControlLabel value=\"Phone\"  control={<SmallRadio />}\r\n                                                  label={<p className=\"LinkGeneratorTypesLabel\">Phone</p>} />\r\n                                <FormControlLabel value=\"LightBox\" disabled  control={<SmallRadio />}\r\n                                                  label={<p className=\"LinkGeneratorTypesLabel\">LightBox</p>} />\r\n                            </RadioGroup>\r\n                        </div>\r\n                        <div className=\"LinkGeneratorOptions\">\r\n                            {\r\n                                (type === \"None\") &&\r\n                                <div className=\"LinkGeneratorOptionNone\">\r\n                                    <h3>No Link</h3>\r\n                                    <p>Choose from the list of options to add a link to your element</p>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                (type === \"WebAddress\") &&\r\n                                <div className=\"LinkGeneratorOptionWebAddress\">\r\n                                    <span className=\"LinkGeneratorTypesLabel\">\r\n                                        What's the web address (URL)?\r\n                                    </span>\r\n                                    <div className=\"LinkGeneratorOptionWebAddressInputContainer\">\r\n                                        <input\r\n                                            defaultValue={linkData.data.url || \"\"}\r\n                                            className=\"NumberInput PageManagerRenameInput PageInfoNameInput LinkGeneratorOptionWebAddressInput\"\r\n                                            type=\"text\"\r\n                                            onChange={\r\n                                                (e) => {this.tempUrl = e.target.value}\r\n                                            }\r\n                                            onBlur={() => {\r\n                                                linkData.data.url = this.tempUrl || \"\";\r\n                                                this.setState({linkData});\r\n                                            }}\r\n                                            onKeyPress={(e) => {\r\n                                                if((e.keyCode || e.which) === 13) {\r\n                                                    linkData.data.url = this.tempUrl || \"\";\r\n                                                    this.setState({linkData});\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                        </input>\r\n                                        {\r\n                                            (this.tempUrl && !this.validURL(this.tempUrl)) &&\r\n                                            <LightTooltip\r\n                                                title=\"Check the URL and try again\"\r\n                                                PopperProps={{style:{zIndex: 99999999999}}}\r\n                                            >\r\n                                                <img\r\n                                                    className=\"LinkGeneratorOptionWebAddressUrlError\"\r\n                                                    draggable={false}\r\n                                                    width={24}\r\n                                                    height={24}\r\n                                                    src={require('../../../../icons/errorred.svg')}\r\n                                                />\r\n                                            </LightTooltip>\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className=\"LinkGeneratorHorizontalDivider\">\r\n                                    </div>\r\n\r\n                                    <RadioGroup name=\"window\" value={linkData.data.window} onChange={(e) => {\r\n                                        linkData.data.window = e.target.value;\r\n                                        this.setState({linkData});\r\n                                    }}>\r\n                                        <FormControlLabel value=\"new\" control={<SmallRadio />}\r\n                                                          label={<p className=\"LinkGeneratorTypesLabel\">New Window</p>} />\r\n                                        <FormControlLabel value=\"current\" control={<SmallRadio />}\r\n                                                          label={<p className=\"LinkGeneratorTypesLabel\">Current Window</p>} />\r\n                                    </RadioGroup>\r\n\r\n                                    {\r\n                                        linkData.data.window === \"current\" &&\r\n                                        <div className=\"LinkGeneratorOptionWebAddressTip\">\r\n                                            You can only open this link from your published site.\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            {\r\n                                (type === \"Page\") &&\r\n                                <div className=\"LinkGeneratorOptionWebAddress\">\r\n                                    <span className=\"LinkGeneratorTypesLabel\">\r\n                                        Add your number\r\n                                    </span>\r\n                                    <DropDown\r\n                                        rootStyle={{\r\n                                            border: \"1px solid #c6c6c6\",\r\n                                            marginTop: 12,\r\n                                            borderRadius: 4\r\n                                        }}\r\n                                        menuItemStyle={{\r\n                                            padding: 0\r\n                                        }}\r\n                                        options={this.getPageOptions()}\r\n                                        onChange={(v) => {\r\n                                            linkData.data.pageId = v.pageId;\r\n                                            this.setState({linkData});\r\n                                        }}\r\n                                        value={this.getPageOptions().find(p => p.pageId === linkData.data.pageId)}\r\n                                        spanStyle={{\r\n                                            width: 367,\r\n                                            fontSize: 14,\r\n                                            border: \"0px solid #cfcfcf\",\r\n                                        }}\r\n                                        renderer={(page) => {\r\n                                            return (\r\n                                                <div id={\"TEst\"} className=\"TextEditorThemeRendererRoot\">\r\n                                                    <span className=\"TextEditorThemeRendererName\">\r\n                                                        {page.pageName}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )\r\n                                        }}\r\n                                        valueRenderer={(page) => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {page.pageName}\r\n                                                </span>\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                    <div className=\"LinkGeneratorHorizontalDivider\">\r\n                                    </div>\r\n\r\n                                    <RadioGroup name=\"window\" value={linkData.data.window} onChange={(e) => {\r\n                                        linkData.data.window = e.target.value;\r\n                                        this.setState({linkData});\r\n                                    }}>\r\n                                        <FormControlLabel value=\"new\" control={<SmallRadio />}\r\n                                                          label={<p className=\"LinkGeneratorTypesLabel\">New Window</p>} />\r\n                                        <FormControlLabel value=\"current\" control={<SmallRadio />}\r\n                                                          label={<p className=\"LinkGeneratorTypesLabel\">Current Window</p>} />\r\n                                    </RadioGroup>\r\n\r\n                                    {\r\n                                        linkData.data.window === \"new\" &&\r\n                                        <div className=\"LinkGeneratorOptionWebAddressTip\">\r\n                                            You can only open this link from your published site.\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            {\r\n                                (type === \"TopBottomThisPage\") &&\r\n                                <div className=\"LinkGeneratorOptionWebAddress\">\r\n                                    <span className=\"LinkGeneratorTypesLabel\">\r\n                                        Select scroll destination\r\n                                    </span>\r\n\r\n                                    <div className=\"LinkGeneratorVerticalSpace\">\r\n                                    </div>\r\n\r\n                                    <RadioGroup name=\"window\" value={linkData.data.position} onChange={(e) => {\r\n                                        linkData.data.position = e.target.value;\r\n                                        this.setState({linkData});\r\n                                    }}>\r\n                                        <FormControlLabel value=\"top\" control={<SmallRadio />}\r\n                                                          label={<p className=\"LinkGeneratorTypesLabel\">Top of page</p>} />\r\n                                        <FormControlLabel value=\"bottom\" control={<SmallRadio />}\r\n                                                          label={<p className=\"LinkGeneratorTypesLabel\">Bottom of page</p>} />\r\n                                    </RadioGroup>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                (type === \"Phone\") &&\r\n                                <div className=\"LinkGeneratorOptionWebAddress\">\r\n                                    <span className=\"LinkGeneratorTypesLabel\">\r\n                                        Add your number\r\n                                    </span>\r\n                                    <div className=\"LinkGeneratorOptionWebAddressInputContainer\">\r\n                                        <input\r\n                                            defaultValue={linkData.data.number || \"\"}\r\n                                            placeholder=\"09123456789\"\r\n                                            className=\"NumberInput PageManagerRenameInput PageInfoNameInput LinkGeneratorOptionWebAddressInput\"\r\n                                            type=\"text\"\r\n                                            onChange={\r\n                                                (e) => {this.tempNumber = e.target.value}\r\n                                            }\r\n                                            onBlur={() => {\r\n                                                linkData.data.number = this.tempNumber || \"\";\r\n                                            }}\r\n                                            onKeyPress={(e) => {\r\n                                                if((e.keyCode || e.which) === 13) {\r\n                                                    linkData.data.number = this.tempNumber || \"\";\r\n                                                    this.setState({linkData});\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                        </input>\r\n                                        {\r\n                                            (this.tempNumber && !this.validPhone(this.tempNumber)) &&\r\n                                            <LightTooltip\r\n                                                title=\"Check the number and try again\"\r\n                                                PopperProps={{style:{zIndex: 99999999999}}}\r\n                                            >\r\n                                                <img\r\n                                                    className=\"LinkGeneratorOptionWebAddressUrlError\"\r\n                                                    draggable={false}\r\n                                                    width={24}\r\n                                                    height={24}\r\n                                                    src={require('../../../../icons/errorred.svg')}\r\n                                                />\r\n                                            </LightTooltip>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                (type === \"Email\") &&\r\n                                <div className=\"LinkGeneratorOptionWebAddress\">\r\n                                    <span className=\"LinkGeneratorTypesLabel\">\r\n                                        What's the email address?\r\n                                    </span>\r\n                                    <div className=\"LinkGeneratorOptionWebAddressInputContainer\">\r\n                                        <input\r\n                                            defaultValue={linkData.data.email || \"\"}\r\n                                            placeholder=\"e.g. youremail@gmal.com\"\r\n                                            className=\"NumberInput PageManagerRenameInput PageInfoNameInput LinkGeneratorOptionWebAddressInput\"\r\n                                            type=\"text\"\r\n                                            onChange={\r\n                                                (e) => {this.tempEmail = e.target.value}\r\n                                            }\r\n                                            onBlur={() => {\r\n                                                linkData.data.email = this.tempEmail || \"\";\r\n                                            }}\r\n                                            onKeyPress={(e) => {\r\n                                                if((e.keyCode || e.which) === 13) {\r\n                                                    linkData.data.email = this.tempEmail || \"\";\r\n                                                    this.setState({linkData});\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                        </input>\r\n                                        {\r\n                                            (this.tempEmail && !this.validEmail(this.tempEmail)) &&\r\n                                            <LightTooltip\r\n                                                title=\"Check the email and try again\"\r\n                                                PopperProps={{style:{zIndex: 99999999999}}}\r\n                                            >\r\n                                                <img\r\n                                                    className=\"LinkGeneratorOptionWebAddressUrlError\"\r\n                                                    draggable={false}\r\n                                                    width={24}\r\n                                                    height={24}\r\n                                                    src={require('../../../../icons/errorred.svg')}\r\n                                                />\r\n                                            </LightTooltip>\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className=\"LinkGeneratorHorizontalDivider\">\r\n                                    </div>\r\n\r\n                                    <div className=\"LinkGeneratorOptionWebAddressInputContainer\">\r\n                                        <input\r\n                                            defaultValue={linkData.data.subject || \"\"}\r\n                                            placeholder=\"\"\r\n                                            className=\"NumberInput PageManagerRenameInput PageInfoNameInput LinkGeneratorOptionWebAddressInput\"\r\n                                            type=\"text\"\r\n                                            onChange={\r\n                                                (e) => {this.tempSubject = e.target.value}\r\n                                            }\r\n                                            onBlur={() => {\r\n                                                linkData.data.subject = this.tempSubject || \"\";\r\n                                            }}\r\n                                            onKeyPress={(e) => {\r\n                                                if((e.keyCode || e.which) === 13) {\r\n                                                    linkData.data.subject = this.tempSubject || \"\";\r\n                                                    this.setState({linkData});\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                        </input>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"LinkGeneratorFooter\">\r\n                        <Button\r\n                            className=\"LinkGeneratorFooterCancel\"\r\n                            color=\"primary\"\r\n                            onClick={this.props.onClose}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        <Button\r\n                            className=\"LinkGeneratorFooterDone\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={!this.isLinkReadyForDone()}\r\n                            onClick={() => {\r\n                                this.props.onDone(linkData);\r\n                                this.props.onClose();\r\n                            }}\r\n                        >\r\n                            Done\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport './TextEditor.css';\r\nimport TextEditorButton from \"./TextEditorButton\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\nimport DropDown from \"../../../Menus/CommonComponents/DropDown\";\r\nimport {getRandomColor, getFontDataByFamily} from \"../TextHelper\";\r\nimport FontSizeSelector from \"./components/FontSizeSelector\";\r\nimport TextColorSelector from \"./components/TextColorSelector\";\r\nimport StaticFonts from '../Fonts/StaticFonts.json';\r\nimport LinkGenerator from \"./components/LinkGenerator\";\r\nimport {addLinkData, getSelectedLinkData, getSelectedLinkId} from \"./components/LinkHelper\";\r\n\r\nexport default class TextEditor extends React.Component {\r\n    static contextType = EditorContext;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.fontSizeSelectorRef = React.createRef();\r\n    }\r\n\r\n    // Depricated: These function does not support undo redo\r\n    // applyProperty = (propertyName, value, tagName = 'span') => {\r\n    //     applyProperty(this.props.doc, this.props.iframeNode.contentWindow, propertyName, value, tagName);\r\n    //     this.props.inputWrapperRef.current.onInput();\r\n    // }\r\n\r\n    getTextDir = () => {\r\n        let {textStaticData} = this.props;\r\n\r\n        if (!textStaticData.dir)\r\n            return \"ltr\";\r\n\r\n        return textStaticData.dir;\r\n    }\r\n\r\n    onIframeTextClicked = (e) => {\r\n        if (this.mounted) {\r\n            this.refreshState();\r\n            return;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.onIframeTextClicked(e);\r\n        }, 200);\r\n    }\r\n\r\n    refreshState = () => {\r\n        window.requestAnimationFrame(() => {\r\n            const selection = this.props.doc.getSelection();\r\n\r\n            // set size\r\n            const size = window.getComputedStyle(selection.anchorNode.parentElement, null).getPropertyValue('font-size');\r\n            this.fontSizeSelectorRef.current.setForceValue(size);\r\n\r\n            // set bold\r\n            const fontWeight = window.getComputedStyle(selection.anchorNode.parentElement, null).getPropertyValue('font-weight');\r\n            let bold = (fontWeight === \"700\");\r\n\r\n            // set italic\r\n            const fontStyle = window.getComputedStyle(selection.anchorNode.parentElement, null).getPropertyValue('font-style');\r\n            let italic = (fontStyle === \"italic\");\r\n\r\n            // set underline\r\n            const decoration = window.getComputedStyle(selection.anchorNode.parentElement, null).getPropertyValue('text-decoration');\r\n            console.log(\"decoration\", decoration)\r\n            let underline = (decoration.includes(\"underline\"));\r\n\r\n            // set font name\r\n            let fontFamily =\r\n                window.getComputedStyle(selection.anchorNode.parentElement, null).getPropertyValue('font-family');\r\n\r\n            let fontData = getFontDataByFamily(StaticFonts, fontFamily);\r\n\r\n            // let multiLineSelect = /\\r|\\n/.exec(selection);\r\n\r\n            this.setState({bold, italic, underline, fontData});\r\n        });\r\n    }\r\n\r\n    isTextSelcted = () => {\r\n            let selection = this.props.doc.getSelection();\r\n            return !(selection.toString().length < 1);\r\n    }\r\n\r\n    tryAgain = () => {\r\n        window.requestAnimationFrame(() => {\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    render () {\r\n        let {textTheme, textStaticData, textDesignData, anchorEI} = this.props;\r\n        if (document.getElementById(\"TextEditorIFrame\") === null){\r\n            this.tryAgain();\r\n            return null;\r\n        }\r\n\r\n        this.mounted = true;\r\n        console.log(\"TextEditorIFrame\", document.getElementById(\"TextEditorIFrame\"))\r\n        return (\r\n            <>\r\n            <Popper\r\n                open={true}\r\n                // anchorEl={anchorEI}\r\n                anchorEl={document.getElementById(\"TextEditorIFrame\")}\r\n                placement=\"top-start\"\r\n                style={{\r\n                    zIndex: 9999999999999999,\r\n                    ...this.props.style\r\n                }}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'scrollParent',\r\n                    },\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"TextEditorRoot\"\r\n                    onMouseDown={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }}\r\n                    onDoubleClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }}\r\n                >\r\n                    <div className=\"TextEditorContainer\">\r\n                        <div className=\"TextEditorContainerRow\">\r\n                            <DropDown\r\n                                rootStyle={{\r\n                                    borderRight: \"1px solid #c6c6c6\",\r\n                                    marginRight: 12,\r\n                                    marginLeft: 4\r\n                                }}\r\n                                menuItemStyle={{\r\n                                    padding: 0\r\n                                }}\r\n                                options={this.context.getTheme(\"Text\")}\r\n                                onChange={(v) => {\r\n                                    textDesignData.textTheme = v.name;\r\n                                    this.props.onChangeData(textStaticData, textDesignData);\r\n                                    window.requestAnimationFrame(() => {\r\n                                        this.props.updateInputWrapper();\r\n                                        this.props.inputWrapperRef.current.onInput();\r\n                                    })\r\n                                }}\r\n                                value={textTheme}\r\n                                spanStyle={{\r\n                                    width: 180,\r\n                                    fontSize: 14,\r\n                                    border: \"0px solid #cfcfcf\",\r\n                                }}\r\n                                renderer={(textTheme) => {\r\n                                    return (\r\n                                        <div className=\"TextEditorThemeRendererRoot\">\r\n                                        <span className=\"TextEditorThemeRendererColor\" style={{\r\n                                            backgroundColor: textTheme.color\r\n                                        }}>\r\n                                        </span>\r\n                                            <span className=\"TextEditorThemeRendererName\">\r\n                                            {textTheme.name}\r\n                                        </span>\r\n                                            <span className=\"TextEditorThemeRendererSize\">\r\n                                            {textTheme.fontSize}px\r\n                                        </span>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                valueRenderer={(textTheme) => {\r\n                                    return (\r\n                                        <span>\r\n                                        {textTheme.name}\r\n                                    </span>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <DropDown\r\n                                rootStyle={{\r\n                                    borderRight: \"1px solid #c6c6c6\",\r\n                                    marginRight: 12,\r\n                                    marginLeft: 4\r\n                                }}\r\n                                menuItemStyle={{\r\n                                    padding: 0\r\n                                }}\r\n                                options={Object.values(StaticFonts)}\r\n                                onChange={(fontData) => {\r\n                                    if (!this.isTextSelcted()) {\r\n                                        textDesignData.fontFamily = fontData.fontFamily;\r\n                                        this.props.onChangeData(textStaticData, textDesignData);\r\n                                        window.requestAnimationFrame(() => {\r\n                                            this.props.updateInputWrapper();\r\n                                            this.props.inputWrapperRef.current.onInput();\r\n                                        })\r\n                                    } else {\r\n                                        this.props.doc.execCommand('fontName', false, fontData.fontFamily);\r\n                                        this.refreshState();\r\n                                    }\r\n                                }}\r\n                                value={this.state.fontData? this.state.fontData:\r\n                                    getFontDataByFamily(StaticFonts, textDesignData.fontFamily)}\r\n                                spanStyle={{\r\n                                    width: 180,\r\n                                    fontSize: 14,\r\n                                    border: \"0px solid #cfcfcf\",\r\n                                }}\r\n                                renderer={(fontData) => {\r\n                                    let isRtlStyle = fontData.isRtl ? {justifyContent: \"flex-end\"}: {}\r\n                                    return (\r\n                                        <div className=\"TextEditorThemeRendererRoot\" style={isRtlStyle} >\r\n                                            <span style={{\r\n                                                fontFamily: fontData.fontFamily\r\n                                            }}>\r\n                                                {fontData.display}\r\n                                            </span>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                                valueRenderer={(fontData) => {\r\n                                    return (\r\n                                        <span style={{\r\n                                            fontFamily: fontData.fontFamily\r\n                                        }}>\r\n                                            {fontData.display}\r\n                                        </span>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <FontSizeSelector\r\n                                ref={this.fontSizeSelectorRef}\r\n                                style={{ width: 64 }}\r\n                                textTheme={textTheme}\r\n                                textStaticData={textStaticData}\r\n                                textDesignData={textDesignData}\r\n                                onChange={(value) => {\r\n                                    console.log(\"this.isTextSelcted()\", this.isTextSelcted())\r\n                                    if (this.isTextSelcted()) {\r\n                                        this.props.doc.execCommand('fontSize', false, 1);\r\n\r\n                                        let nodes = this.props.doc.querySelectorAll(`[size=\"1\"]`);\r\n\r\n                                        nodes.forEach(node => {\r\n                                            node.removeAttribute(\"size\");\r\n                                            node.style.fontSize = `${value}px`;\r\n                                        })\r\n\r\n                                        this.props.inputWrapperRef.current.onInput();\r\n                                    } else {\r\n                                        textDesignData.fontSize = value;\r\n                                        this.props.onChangeData(textStaticData, textDesignData);\r\n                                        window.requestAnimationFrame(() => {\r\n                                            this.props.inputWrapperRef.current.onInput();\r\n                                        })\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"TextEditorContainerRow\">\r\n\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('bold');\r\n                                    this.refreshState();\r\n                                }}\r\n                                selected={this.state.bold}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/bold.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('italic');\r\n                                    this.refreshState();\r\n                                }}\r\n                                selected={this.state.italic}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/italic.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('underline');\r\n                                    this.refreshState();\r\n                                }}\r\n                                selected={this.state.underline}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/underline.svg'} />\r\n                            </TextEditorButton>\r\n                            <div className=\"TextEditorVerticalDivider\"/>\r\n                            <TextColorSelector\r\n                                onChange={(color) => {\r\n                                    let randomColor = getRandomColor();\r\n                                    this.props.doc.execCommand('foreColor', false, randomColor);\r\n\r\n                                    let nodes = this.props.doc.querySelectorAll(`[color=\"${randomColor}\"]`);\r\n\r\n                                    if (color instanceof Object) {\r\n                                        nodes.forEach(node => {\r\n                                            node.removeAttribute(\"color\");\r\n                                            [...node.classList].forEach(className => {\r\n                                                if (className.startsWith('Color_'))\r\n                                                    node.classList.remove(className);\r\n                                            });\r\n                                            node.classList.add(this.context.getThemeColorClass(color));\r\n                                            let childs = node.getElementsByTagName(\"*\");\r\n                                            for (let childNode of childs) {\r\n                                                [...childNode.classList].forEach(className => {\r\n                                                    if (className.startsWith('Color_'))\r\n                                                        childNode.classList.remove(className);\r\n                                                });\r\n                                            }\r\n                                        })\r\n                                    } else {\r\n                                        nodes.forEach(node => {\r\n                                            node.setAttribute(\"color\", color);\r\n                                            [...node.classList].forEach(className => {\r\n                                                if (className.startsWith('Color_'))\r\n                                                    node.classList.remove(className);\r\n                                            });\r\n                                            let childs = node.getElementsByTagName(\"*\");\r\n                                            for (let childNode of childs) {\r\n                                                [...childNode.classList].forEach(className => {\r\n                                                    if (className.startsWith('Color_'))\r\n                                                        childNode.classList.remove(className);\r\n                                                });\r\n                                            }\r\n                                        })\r\n                                    }\r\n\r\n                                    this.props.inputWrapperRef.current.onInput();\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/color.svg'} />\r\n                            </TextColorSelector>\r\n                            <TextColorSelector\r\n                                onChange={(color) => {\r\n                                    let randomColor = getRandomColor();\r\n                                    this.props.doc.execCommand('fontSize', false, 1);\r\n                                    this.props.doc.execCommand('backColor', false, randomColor);\r\n\r\n                                    let nodes = this.props.doc.querySelectorAll(`[size=\"1\"]`);\r\n\r\n                                    if (color instanceof Object) {\r\n                                        nodes.forEach(node => {\r\n                                            node.removeAttribute(\"size\");\r\n                                            [...node.classList].forEach(className => {\r\n                                                if (className.startsWith('BackColor_'))\r\n                                                    node.classList.remove(className);\r\n                                            });\r\n                                            node.classList.add(this.context.getThemeBackColorClass(color));\r\n                                            if (node.style && node.style.removeProperty)\r\n                                                node.style.removeProperty(\"background-color\");\r\n                                            let childs = node.getElementsByTagName(\"*\");\r\n                                            for (let childNode of childs) {\r\n                                                [...childNode.classList].forEach(className => {\r\n                                                    if (className.startsWith('BackColor_'))\r\n                                                        childNode.classList.remove(className);\r\n                                                });\r\n                                            }\r\n                                        })\r\n                                    } else {\r\n                                        nodes.forEach(node => {\r\n                                            node.removeAttribute(\"size\");\r\n                                            if (node.style)\r\n                                                node.style.backgroundColor = color;\r\n                                            [...node.classList].forEach(className => {\r\n                                                if (className.startsWith('BackColor_'))\r\n                                                    node.classList.remove(className);\r\n                                            });\r\n                                            let childs = node.getElementsByTagName(\"*\");\r\n                                            for (let childNode of childs) {\r\n                                                [...childNode.classList].forEach(className => {\r\n                                                    if (className.startsWith('BackColor_'))\r\n                                                        childNode.classList.remove(className);\r\n                                                });\r\n                                            }\r\n                                        })\r\n                                    }\r\n\r\n                                    this.props.inputWrapperRef.current.onInput();\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/fill.svg'} />\r\n                            </TextColorSelector>\r\n                            <div className=\"TextEditorVerticalDivider\"/>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.context.showLinkGenerator(\r\n                                        getSelectedLinkData(this.props.doc),\r\n                                        (linkData) => {\r\n                                            console.log(\"OnDone\", linkData)\r\n                                            addLinkData(this.props.doc, linkData);\r\n                                            this.refreshState();\r\n                                            this.props.inputWrapperRef.current.onInput();\r\n                                        }\r\n                                    );\r\n                                }}\r\n                                selected={getSelectedLinkId(this.props.doc) !== false}\r\n                                selectedIcon={<img draggable={false} width={16} height={16}\r\n                                                   src={require('../../../icons/linkblue.svg')} />}\r\n                                disabled={getSelectedLinkId(this.props.doc) === false && !this.isTextSelcted()}\r\n                                disabledIcon={<img draggable={false} width={16} height={16}\r\n                                                   src={require('../../../icons/linkdisable.svg')} />}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={require('../../../icons/link.svg')} />\r\n                            </TextEditorButton>\r\n                            <div className=\"TextEditorVerticalDivider\"/>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    // this.props.doc.execCommand('justifyLeft');\r\n                                    textDesignData.textAlign = undefined;\r\n                                    this.props.onChangeData(textStaticData, textDesignData);\r\n                                }}\r\n                                selected={textDesignData.textAlign === undefined}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/align-left.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    // this.props.doc.execCommand('justifyCenter');\r\n                                    textDesignData.textAlign = \"center\";\r\n                                    this.props.onChangeData(textStaticData, textDesignData);\r\n                                }}\r\n                                selected={textDesignData.textAlign === \"center\"}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/align-center.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    // this.props.doc.execCommand('justifyRight');\r\n                                    textDesignData.textAlign = \"right\";\r\n                                    this.props.onChangeData(textStaticData, textDesignData);\r\n                                }}\r\n                                selected={textDesignData.textAlign === \"right\"}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/align-right.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    // this.props.doc.execCommand('justifyFull');\r\n                                    textDesignData.textAlign = \"justify\";\r\n                                    this.props.onChangeData(textStaticData, textDesignData);\r\n                                }}\r\n                                selected={textDesignData.textAlign === \"justify\"}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/justify.svg'} />\r\n                            </TextEditorButton>\r\n                            <div className=\"TextEditorVerticalDivider\"/>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('insertUnorderedList');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/list-dot.svg'} />\r\n                            </TextEditorButton>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    this.props.doc.execCommand('insertOrderedList');\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={16} height={16}\r\n                                     src={process.env.PUBLIC_URL + '/static/icon/texteditor/list-number.svg'} />\r\n                            </TextEditorButton>\r\n                            <div className=\"TextEditorVerticalDivider\"/>\r\n                            <TextEditorButton\r\n                                onClick={(e) => {\r\n                                    // let sel = this.props.doc.getSelection();\r\n                                    // console.log(\"Selected Lines\", getLineSelected(sel))\r\n                                    if (this.getTextDir() === \"ltr\")\r\n                                        textStaticData.dir = \"rtl\";\r\n                                    else\r\n                                        textStaticData.dir = \"ltr\";\r\n\r\n                                    this.props.onChangeData(textStaticData, textDesignData);\r\n                                }}\r\n                            >\r\n                                {\r\n                                    <img draggable={false} width={16} height={16}\r\n                                         src={process.env.PUBLIC_URL + `/static/icon/texteditor/text-direction-${this.getTextDir()}.svg`} />\r\n                                }\r\n                            </TextEditorButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Popper>\r\n                {\r\n                    this.state.linkGenerator &&\r\n                    <LinkGenerator\r\n                        open={true}\r\n                        linkData={getSelectedLinkData(this.props.doc)}\r\n                        onClose={() => {this.setState({linkGenerator: false})}}\r\n                        onDone={(linkData) => {\r\n                            addLinkData(this.props.doc, linkData);\r\n                            this.setState({linkGenerator: false});\r\n                        }}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Frame from 'iframe-react';\r\nimport InputWrapper from \"./Menus/InputWrapper\";\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport TextEditor from \"./Menus/TextEditor\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\nimport {getTextStyle} from \"./TextHelper\";\r\nimport {resolveLinks} from \"./Menus/components/LinkHelper\";\r\n\r\nexport default class TextWrapper extends React.PureComponent {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editMode: false,\r\n            editableStyle: {\r\n\r\n            },\r\n            iframeNode: undefined\r\n        };\r\n\r\n        this.iframe = React.createRef();\r\n        this.inputWrapperRef = React.createRef();\r\n        this.textEditorRef = React.createRef();\r\n        this.textTagRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        resolveLinks(this.textTagRef.current, this.context.preview, this.context.production, this.context);\r\n    }\r\n\r\n    setEditableStyle = (editableStyle) => {\r\n        this.setState({editableStyle});\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n        });\r\n    };\r\n\r\n    resizeIFrameToFitContent( document ) {\r\n        let textarea = document.getElementById(\"textEditor\");\r\n        let rect = textarea.getBoundingClientRect();\r\n        this.setState({\r\n            iframeWidth: rect.width,\r\n            iframeHeight: rect.height,\r\n        })\r\n\r\n        this.inputWrapperRef.current && this.inputWrapperRef.current.init(document);\r\n\r\n        this.setState({iframeNode: this.iframe.current.frame})\r\n\r\n        this.updateStyleSheets();\r\n    }\r\n\r\n    updateStyleSheets = () => {\r\n        if (this.doc)\r\n            this.context.calculateColorCSS(this.doc);\r\n    }\r\n\r\n    setEditMode = (editMode) => {\r\n        if (!editMode)\r\n            this.setState({iframeNode: undefined});\r\n        this.setState({editMode});\r\n        this.props.onEditModeChange && this.props.onEditModeChange(editMode);\r\n    }\r\n\r\n    getTag = () => {\r\n        let {textDesignData} = this.props;\r\n        let textTheme = this.context.getTheme(\"Text\", textDesignData.textTheme) || {};\r\n        return textDesignData.tagName || textTheme.tagName || \"h6\";\r\n    }\r\n\r\n    updateInputWrapper = () => {\r\n        this.inputWrapperRef.current.updateHeight();\r\n    }\r\n\r\n    onIframeTextClicked = (e) => {\r\n        if (this.textEditorRef && this.textEditorRef.current)\r\n            this.textEditorRef.current.onIframeTextClicked(e);\r\n    }\r\n\r\n    render () {\r\n        let {textTheme, textStaticData, textDesignData} = this.props;\r\n\r\n        let TextTag = this.getTag();\r\n\r\n        let editDisplayNoneStyle = this.state.editMode? {}: {display: \"none\"};\r\n        let nonEditDisplayNoneStyle = !this.state.editMode? {}: {display: \"none\"};\r\n        return (\r\n            <>\r\n                <TextTag\r\n                    ref={this.textTagRef}\r\n                    className=\"TextRoot\"\r\n                    style={{\r\n                        ...getTextStyle(textTheme, textStaticData, textDesignData),\r\n                        ...nonEditDisplayNoneStyle\r\n                    }}\r\n                    dir={textStaticData.dir || \"ltr\"}\r\n                    dangerouslySetInnerHTML={{ __html: textStaticData.textValue }}\r\n                >\r\n                </TextTag>\r\n                <ClickAwayListener onClickAway={(e) => this.setEditMode(false)}>\r\n                    <>\r\n                        {\r\n                            this.state.iframeNode && this.state.editMode &&\r\n                            <TextEditor\r\n                                ref={this.textEditorRef}\r\n                                onChangeData={this.props.onChangeData}\r\n                                inputWrapperRef={this.inputWrapperRef}\r\n                                onChange={this.props.onChange}\r\n                                textStaticData={textStaticData}\r\n                                textTheme={textTheme}\r\n                                textDesignData={textDesignData}\r\n                                anchorEI={this.state.iframeNode}\r\n                                iframeNode={this.state.iframeNode}\r\n                                updateInputWrapper={this.updateInputWrapper}\r\n                                doc={this.doc}\r\n                            />\r\n                        }\r\n                        <div id=\"TextEditorIFrame\">\r\n                        <Frame\r\n                            id={\"Hello\"}\r\n                            key={'textEditorFrame'}\r\n                            ref={this.iframe}\r\n                            title=\"TextEditorIFrame\"\r\n                            style={{\r\n                                width: this.state.iframeWidth || \"unset\",\r\n                                height: this.state.iframeHeight || \"unset\",\r\n                                border: 0,\r\n                                display: \"block\",\r\n                                ...editDisplayNoneStyle\r\n                            }}\r\n                            head={<>\r\n                                <link id=\"wix_richtext_font_url_googleFonts\" type=\"text/css\" rel=\"stylesheet\"\r\n                                      href=\"https://weblancerstaticdata.s3.ir-thr-at1.arvanstorage.com/StaticFonts.css\"/>\r\n                                <style type=\"text/css\">\r\n                                    {`\r\n                            body{\r\n                                width: fit-content;\r\n                                height: fit-content;\r\n                                box-sizing: border-box;\r\n                                margin: 0px;\r\n                                display: flex;\r\n                                overflow: hidden;\r\n                            }\r\n                            body>div{\r\n                                width: fit-content;\r\n                                height: fit-content;\r\n                                box-sizing: border-box;\r\n                                margin: 0px;\r\n                                display: flex;\r\n                                overflow: hidden;\r\n                            }\r\n                            \r\n\r\n                        `}\r\n                                </style>\r\n                            </>}\r\n                            documentRef={(doc) => {\r\n                                this.doc = doc;\r\n                                console.log(\"Listen !!!!!!!\")\r\n                                this.doc.addEventListener(\"click\", (e) => {\r\n                                    this.onIframeTextClicked(e);\r\n                                })\r\n                            }}\r\n                        >\r\n                            <InputWrapper\r\n                                onLoad={() => {\r\n                                    this.resizeIFrameToFitContent(this.doc);\r\n                                }}\r\n                                onUpdate={() => {\r\n                                    this.resizeIFrameToFitContent(this.doc);\r\n                                }}\r\n                                onChange={this.props.onChange}\r\n                                value={textStaticData.textValue}\r\n                                width={this.props.width}\r\n                                ref={this.inputWrapperRef}\r\n                                tag={this.getTag()}\r\n                                textTheme={textTheme}\r\n                                textStaticData={textStaticData}\r\n                                textDesignData={textDesignData}\r\n                                iframeNode={this.state.iframeNode}\r\n                                doc={this.doc}\r\n                            >\r\n                            </InputWrapper>\r\n                        </Frame>\r\n                        </div>\r\n                    </>\r\n                </ClickAwayListener>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport '../../HelperStyle.css';\r\nimport './Text.css';\r\nimport {\r\n    getCompositeDesignData,\r\n    getFromTempData,\r\n    setDataInBreakpoint,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport TextWrapper from \"./TextWrapper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Text extends AGLComponent{\r\n    static contextType = EditorContext;\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editMode: false\r\n        }\r\n\r\n        this.textRef = React.createRef();\r\n    }\r\n\r\n    resolveDesignData = () => {\r\n    };\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            },\r\n        };\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n\r\n    };\r\n\r\n    onChange = (e, callback) => {\r\n        if (e) {\r\n            let textStaticData = getFromTempData(this, \"textStaticData\");\r\n            textStaticData.textValue = e.target.value;\r\n        }\r\n\r\n        this.props.select.onScrollItem();\r\n    }\r\n\r\n    onEditModeChange = (editMode) => {\r\n        this.setState({editMode});\r\n        this.props.select.onScrollItem();\r\n    }\r\n\r\n    onChangeData = (textStaticData, textDesignData) => {\r\n        setTempData(\"textStaticData\", textStaticData, this.getAgl(), true);\r\n        setDataInBreakpoint(\"design.textDesignData\", textDesignData, this.getAgl(), true, undefined, true);\r\n        this.props.select.onScrollItem();\r\n    }\r\n\r\n    getStaticChildren = () => {\r\n        this.resolveDesignData();\r\n\r\n        let textStaticData = getFromTempData(this, \"textStaticData\");\r\n        let textDesignData = getCompositeDesignData(this).textDesignData;\r\n        let textTheme = this.context.getTheme(\"Text\", textDesignData.textTheme);\r\n\r\n        let rect = {};\r\n        if (this.getAgl()){\r\n            rect = this.getAgl().getSize(false);\r\n        }\r\n\r\n        return (\r\n            <TextWrapper\r\n                ref={this.textRef}\r\n                width={rect.width}\r\n                height={rect.height}\r\n                onChange={this.onChange}\r\n                onChangeData={this.onChangeData}\r\n                onEditModeChange={this.onEditModeChange}\r\n                textStaticData={textStaticData}\r\n                textDesignData={textDesignData}\r\n                textTheme={textTheme}\r\n                onThemeChange={this.onThemeChange}\r\n            >\r\n            </TextWrapper>\r\n        )\r\n    };\r\n\r\n    onDoubleClickOverride = (agl, e) => {\r\n        if (!this.props.editor)\r\n            return;\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        this.textRef.current.setEditMode(true);\r\n    }\r\n\r\n    onDeSelectListener = (agl) => {\r\n        if (!this.props.editor)\r\n            return;\r\n\r\n        this.textRef.current.setEditMode(false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"Text\"\r\n                aglComponent={this}\r\n                {...this.props}\r\n                data={this.getData()}\r\n                resizeSides={!this.state.editMode ? ['e', 'w'] : []}\r\n                style={{\r\n                    height: \"auto\",\r\n                    minHeight: \"auto\",\r\n                    // pointerEvents: \"none\"\r\n                }}\r\n                getPrimaryOptions={this.getPrimaryOptions}\r\n                getInspector={this.getInspector}\r\n                getStaticChildren={this.getStaticChildren}\r\n                noStretch\r\n                onDoubleClickOverride={this.onDoubleClickOverride}\r\n                onDeSelectListener={this.onDeSelectListener}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nText.defaultProps = {\r\n    tagName: \"Text\"\r\n};\r\n","import React from \"react\";\r\nimport '../Menu.css';\r\nimport ColorPicker from \"../CommonComponents/ColorPicker\";\r\n\r\nexport default class ColorAdjustment extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">{this.props.title}</p>\r\n\r\n                <ColorPicker\r\n                    color={this.props.color}\r\n                    designKey={this.props.designKey}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                    editor={this.props.editor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"../../Containers/Menus/Components/Background\";\r\nimport Border from \"../../Containers/Menus/Components/Border\";\r\nimport Corners from \"../../Containers/Menus/Components/Corners\";\r\nimport Shadow from \"../../Containers/Menus/Components/Shadow\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\nimport ColorAdjustment from \"../../../Menus/CommonMenus/ColorAdjustment\";\r\n\r\nexport default class ButtonDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = (stateName) => {\r\n        let index = [];\r\n        index.push(\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/water.svg'} />\r\n            });\r\n        index.push(\r\n            {\r\n                key: \"Border\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/border.svg'} />\r\n            });\r\n        index.push(\r\n            {\r\n                key: \"Corner\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/corner.svg'} />\r\n            });\r\n        index.push(\r\n            {\r\n                key: \"Shadow\",\r\n                icon: <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" className=\"symbol symbol-shadowDesign\">\r\n                    <path fillRule=\"evenodd\"\r\n                          d=\"M11.5 14.5h-8v-2h8c.55 0 1-.45 1-1v-9h2v9c0 1.65-1.35 3-3 3zm-3-4h-7c-1.1 0-2-.9-2-2v-7c0-1.1.9-2 2-2h7c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2z\"/>\r\n                </svg>\r\n            });\r\n        index.push(\r\n            {\r\n                key: \"Text Appearance\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/text.svg'} />\r\n            });\r\n\r\n        return index;\r\n    };\r\n\r\n    getOptions = (stateName) => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        let options = [];\r\n\r\n        console.log(\"design\", design)\r\n\r\n        options.push({\r\n            key: \"Fill Color & Opacity\",\r\n            render: <Background\r\n                color={design[stateName].fillColor}\r\n                designKey={`design.${stateName}.fillColor`}\r\n                onDesignChange={this.props.onDesignChange}\r\n                editor={this.props.item.props.editor}\r\n            />\r\n        });\r\n        options.push({\r\n            key: \"Border\",\r\n            render: <Border\r\n                border={design[stateName].border || {}}\r\n                designKey={`design.${stateName}.border`}\r\n                onDesignChange={this.props.onDesignChange}\r\n                editor={this.props.item.props.editor}\r\n            />\r\n        });\r\n        options.push({\r\n            key: \"Corner\",\r\n            render: <Corners\r\n                radius={design[stateName].border.radius || {}}\r\n                designKey={`design.${stateName}.border.radius`}\r\n                onDesignChange={this.props.onDesignChange}\r\n            />\r\n        });\r\n        options.push({\r\n            key: \"Shadow\",\r\n            render: <Shadow\r\n                shadow={design[stateName].border.shadow || {}}\r\n                designKey={`design.${stateName}.border.shadow`}\r\n                onDesignChange={this.props.onDesignChange}\r\n                editor={this.props.item.props.editor}\r\n            />\r\n        });\r\n        options.push({\r\n            key: \"Text Appearance\",\r\n            render: <ColorAdjustment\r\n                title={\"Text Color\"}\r\n                color={design[stateName].textColor}\r\n                designKey={`design.${stateName}.textColor`}\r\n                onDesignChange={this.props.onDesignChange}\r\n                editor={this.props.item.props.editor}\r\n            />\r\n        });\r\n\r\n        return options;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                item={this.props.item}\r\n                multiState\r\n                states={{\r\n                    normal:{\r\n                        name: \"normal\",\r\n                        render: \"Normal\",\r\n                        toggle: () => {this.props.onStateChange(\"normal\")},\r\n                        options: this.getOptions(\"normal\"),\r\n                        index: this.getIndex(\"normal\")\r\n                    },\r\n                    hover: {\r\n                        name: \"hover\",\r\n                        render: \"Hover\",\r\n                        toggle: () => {this.props.onStateChange(\"hover\")},\r\n                        options: this.getOptions(\"hover\"),\r\n                        index: this.getIndex(\"hover\")\r\n                    }\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FontSizeAutoComplete from \"../../Text/Menus/components/FontSizeAutoComplete\";\r\n\r\nexport default class FontSizeSelector2 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n    filterOptions = (options) => {\r\n        return [\"6\",\"8\",\"10\",\"12\",\"14\",\"16\",\"18\",\"20\",\"22\",\"24\",\"28\",\"32\",\"48\",\"72\"];\r\n    }\r\n\r\n    getAllowableFontSize = () => {\r\n        return (new Array(100)).fill(\"0\").map((v, i) => {\r\n            return `${i + 1}`;\r\n        });\r\n    }\r\n\r\n    setForceValue = (value) => {\r\n        this.onFontSizeChange(undefined, value, \"input\");\r\n    }\r\n\r\n    onFontSizeChange = (e, value, reason) => {\r\n        console.log(\"onFontSizeChange value reason\", value, reason);\r\n        if (reason === \"input\") {\r\n            console.log(\"onFontSizeChange input\", value);\r\n            this.setState({tempFontSize: value});\r\n        } else if (reason === \"select-option\") {\r\n            console.log(\"onFontSizeChange select-option\", value);\r\n            this.setFontSize(value);\r\n        } else if (reason === \"enter\") {\r\n            console.log(\"onFontSizeChange enter\", value, this.getAllowableFontSize());\r\n            if (this.getAllowableFontSize().includes(value))\r\n                this.setFontSize(value);\r\n            else\r\n                this.setState({tempFontSize: this.getFontSizeValue(value !== \"\" && true)});\r\n        }\r\n    }\r\n\r\n    setFontSize = (value) => {\r\n        this.setState({tempFontSize: value});\r\n        this.props.onChange(value);\r\n    }\r\n\r\n    setFontSizeUi = (value) => {\r\n        this.setState({tempFontSize: value});\r\n    }\r\n\r\n    getFontSizeValue = (ignoreState = false) => {\r\n        let {fontSize} = this.props;\r\n\r\n        if (!ignoreState && this.state.tempFontSize !== undefined)\r\n            return this.state.tempFontSize;\r\n\r\n        return (!ignoreState && this.state.tempFontSize) ||\r\n            fontSize || \"14\"\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <FontSizeAutoComplete\r\n                size={\"small\"}\r\n                options={this.getAllowableFontSize()}\r\n                value={this.getFontSizeValue()}\r\n                getOptionLabel={(option) => option}\r\n                filterOptions={this.filterOptions}\r\n                style={this.props.style || { width: 64 }}\r\n                popupIcon={\r\n                    <img width={10} height={10} src={process.env.PUBLIC_URL + \"/static/icon/down-arrow.svg\"}/>\r\n                }\r\n                renderInput={(params) => {\r\n                    params.InputProps.disableUnderline = true;\r\n                    params.inputProps.style = {padding: 0, fontSize: 14};\r\n                    return (\r\n                        <TextField {...params} onChange={(e) => {\r\n                            this.onFontSizeChange(e, e.target.value, 'input');\r\n                        }}/>\r\n                    )\r\n                }}\r\n                blurOnSelect\r\n                onChange={this.onFontSizeChange}\r\n                onKeyDown={(e) => {\r\n                    if((e.keyCode || e.which) === 13){\r\n                        this.onFontSizeChange(e, e.target.value, 'enter');\r\n                    }\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../Menus/Menu.css';\r\nimport Divider from \"../../../Menus/CommonComponents/Divider\";\r\nimport StaticFonts from \"../../Text/Fonts/StaticFonts.json\";\r\nimport {getFontDataByFamily, getFontDataByName} from \"../../Text/TextHelper\";\r\nimport DropDown from \"../../../Menus/CommonComponents/DropDown\";\r\nimport FontSizeSelector2 from \"./FontSizeSelector2\";\r\n\r\nexport default class ButtonTextAppearance extends React.Component {\r\n    changeText = () => {\r\n        this.props.onDesignChange(this.props.designKey + '.text', this.tempText);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Text in button</p>\r\n\r\n                    <input\r\n                        defaultValue={this.props.data.text}\r\n                        className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {this.tempText = e.target.value;}}\r\n                        onBlur={this.changeText}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.changeText()\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Font</p>\r\n\r\n                    <DropDown\r\n                        rootStyle={{\r\n                            paddingLeft: 4,\r\n                            border: \"1px solid rgb(198, 198, 198)\",\r\n                            height: 36,\r\n                            borderRadius: 4\r\n                        }}\r\n                        menuItemStyle={{\r\n                            padding: 0\r\n                        }}\r\n                        options={Object.values(StaticFonts)}\r\n                        onChange={(fontData) => {\r\n                                this.props.onDesignChange(this.props.designKey + '.fontFamily', fontData.fontFamily);\r\n                        }}\r\n                        value={this.props.data.fontFamily? getFontDataByFamily(StaticFonts, this.props.data.fontFamily):\r\n                            getFontDataByName(StaticFonts, 'Yekan')}\r\n                        spanStyle={{\r\n                            width: 230,\r\n                            fontSize: 14,\r\n                            border: \"0px solid #cfcfcf\",\r\n                        }}\r\n                        renderer={(fontData) => {\r\n                            let isRtlStyle = fontData.isRtl ? {justifyContent: \"flex-end\"}: {}\r\n                            return (\r\n                                <div className=\"TextEditorThemeRendererRoot\" style={isRtlStyle} >\r\n                                            <span style={{\r\n                                                fontFamily: fontData.fontFamily\r\n                                            }}>\r\n                                                {fontData.display}\r\n                                            </span>\r\n                                </div>\r\n                            )\r\n                        }}\r\n                        valueRenderer={(fontData) => {\r\n                            return (\r\n                                <span style={{\r\n                                    fontFamily: fontData.fontFamily\r\n                                }}>\r\n                                            {fontData.display}\r\n                                        </span>\r\n                            )\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Font size</p>\r\n                    <FontSizeSelector2\r\n                        ref={this.fontSizeSelectorRef}\r\n                        style={{\r\n                            paddingLeft: 4,\r\n                            border: \"1px solid rgb(198, 198, 198)\",\r\n                            height: 36,\r\n                            borderRadius: 4\r\n                        }}\r\n                        fontSize={this.props.data.fontSize || \"14\"}\r\n                        onChange={(value) => {\r\n                            this.props.onDesignChange(this.props.designKey + '.fontSize', value);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../Menus/Menu.css';\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport './ButtonTextLayout.css';\r\nimport Divider from \"../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../Menus/CommonComponents/SliderInput\";\r\n\r\nexport default class ButtonTextLayout extends React.Component {\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Text alignment</p>\r\n\r\n                    <div className=\"ButtonTextLayoutAlignRoot\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginRight: 4,\r\n                                marginLeft: 4,\r\n                            }}\r\n                            imageContainerStyle={{\r\n                                padding: 6\r\n                            }}\r\n                            onClick={(e) => {\r\n                                this.props.onDesignChange(this.props.designKey + '.textAlign', \"flex-start\");\r\n                            }}\r\n                            className=\"InspectorAlignsButtons\"\r\n                            selected={this.props.data.textAlign === \"flex-start\"}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={16}\r\n                                height={16}\r\n                                src={require('../../../icons/align-left.svg')}\r\n                            />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginRight: 4,\r\n                                marginLeft: 4,\r\n                            }}\r\n                            imageContainerStyle={{\r\n                                padding: 6\r\n                            }}\r\n                            onClick={(e) => {\r\n                                this.props.onDesignChange(this.props.designKey + '.textAlign', \"center\");\r\n                            }}\r\n                            className=\"InspectorAlignsButtons\"\r\n                            selected={this.props.data.textAlign === \"center\" || !this.props.data.textAlign}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={16}\r\n                                height={16}\r\n                                src={require('../../../icons/align-center.svg')}\r\n                            />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginRight: 4,\r\n                                marginLeft: 4,\r\n                            }}\r\n                            imageContainerStyle={{\r\n                                padding: 6\r\n                            }}\r\n                            onClick={(e) => {\r\n                                this.props.onDesignChange(this.props.designKey + '.textAlign', \"flex-end\");\r\n                            }}\r\n                            className=\"InspectorAlignsButtons\"\r\n                            selected={this.props.data.textAlign === \"flex-end\"}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={16}\r\n                                height={16}\r\n                                src={require('../../../icons/align-right.svg')}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    (this.props.data.textAlign !== \"center\" || !this.props.data.textAlign) &&\r\n\r\n                    <>\r\n                        <Divider/>\r\n\r\n                        <div className=\"MenuOptionSection\">\r\n                            <p className=\"MenuOptionSectionTitle\">Margin (px)</p>\r\n\r\n                            <div\r\n                                className=\"BorderWidth\"\r\n                            >\r\n                                <SliderInput\r\n                                className=\"BorderWidthSlider\"\r\n                                min={0}\r\n                                max={100}\r\n                                value={this.props.data.margin}\r\n                                designKey={`${this.props.designKey}.margin`}\r\n                                onDesignChange={this.props.onDesignChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                }\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"../../Containers/Menus/Components/Background\";\r\nimport Border from \"../../Containers/Menus/Components/Border\";\r\nimport Corners from \"../../Containers/Menus/Components/Corners\";\r\nimport Shadow from \"../../Containers/Menus/Components/Shadow\";\r\nimport {getCompositeDesignData} from \"../../../AwesomwGridLayoutHelper\";\r\nimport ColorAdjustment from \"../../../Menus/CommonMenus/ColorAdjustment\";\r\nimport ButtonTextAppearance from \"./ButtonTextAppearance\";\r\nimport ButtonTextLayout from \"./ButtonTextLayout\";\r\n\r\nexport default class TextDesign extends React.Component {\r\n    componentDidMount () {\r\n        this.props.item && this.props.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item && nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        if (this.props.item && (nextProps.item && nextProps.item.props.id) !== this.props.item.props.id)\r\n            this.props.item && this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = (owner) => {\r\n        this.setState({reload: true});\r\n    };\r\n\r\n    getIndex = (stateName) => {\r\n        let index = [];\r\n        index.push(\r\n            {\r\n                key: \"Text Appearance\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/text.svg'} />\r\n            });\r\n        index.push(\r\n            {\r\n                key: \"Text Layout\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={process.env.PUBLIC_URL + '/static/icon/text.svg'} />\r\n            });\r\n\r\n        return index;\r\n    };\r\n\r\n    getOptions = (stateName) => {\r\n        let design = getCompositeDesignData(this.props.item);\r\n        let options = [];\r\n\r\n        options.push({\r\n            key: \"Text Appearance\",\r\n            render: <ButtonTextAppearance\r\n                data={design.spanData}\r\n                designKey={`design.spanData`}\r\n                onDesignChange={this.props.onDesignChange}\r\n                editor={this.props.item.props.editor}\r\n            />\r\n        });\r\n\r\n        options.push({\r\n            key: \"Text Layout\",\r\n            render: <ButtonTextLayout\r\n                data={design.spanData}\r\n                designKey={`design.spanData`}\r\n                onDesignChange={this.props.onDesignChange}\r\n                editor={this.props.item.props.editor}\r\n            />\r\n        });\r\n\r\n        return options;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Box Design\"\r\n                {...this.props}\r\n                item={this.props.item}\r\n                defaultIndexNo={0}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport '../../HelperStyle.css';\r\nimport './Button.css';\r\nimport {\r\n    getCompositeDesignData,\r\n    getFromTempData,\r\n    parseColor,\r\n    resolveDesignData,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport AnimationDesign from \"../Containers/Menus/AnimationDesign\";\r\nimport {prepareLink} from \"../Text/Menus/components/LinkHelper\";\r\nimport ButtonDesign from \"./Menus/ButtonDesign\";\r\nimport TextDesign from \"./Menus/TextDesign\";\r\nimport {getFontDataByName} from \"../Text/TextHelper\";\r\nimport StaticFonts from \"../Text/Fonts/StaticFonts.json\";\r\n\r\nexport default class Button extends AGLComponent{\r\n    static contextType = EditorContext;\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {hover: false};\r\n\r\n        this.rootBorderRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resolveRootTag();\r\n    }\r\n\r\n    resolveRootTag = () => {\r\n        if (!this.context.preview && !this.context.production)\r\n            return;\r\n\r\n        let linkData = getFromTempData(this, \"linkData\");\r\n\r\n        if (linkData && linkData.type !== \"None\") {\r\n            prepareLink(this.rootBorderRef.current, this.context.preview, this.context.production, this.context, linkData);\r\n        }\r\n    }\r\n\r\n    resolveDesignData = () => {\r\n        resolveDesignData(this, \"spanData\", {\r\n            text: \"Start Now\",\r\n            fontFamily: getFontDataByName(StaticFonts, \"Yekan\").fontFamily,\r\n            fontSize: 14,\r\n            margin: 0\r\n        });\r\n        resolveDesignData(this, \"normal\", {border: {shadow: {\r\n                    xOffset: -1,\r\n                    yOffset: 1,\r\n                    distance: 1,\r\n                    size: 0,\r\n                    blur: 4\r\n                }, radius: {}}, textColor: \"#000000\"});\r\n        resolveDesignData(this, \"hover\", {border: {shadow: {\r\n                    xOffset: -1,\r\n                    yOffset: 1,\r\n                    distance: 1,\r\n                    size: 5,\r\n                    blur: 4\r\n                }, radius: {}}, textColor: \"#000000\"});\r\n    };\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n\r\n        let linkData = getFromTempData(this, \"linkData\");\r\n\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/textwhite.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <TextDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                        onStateChange={this.onStateChange}\r\n                    />\r\n                }\r\n            />,\r\n            <MenuButton\r\n                key={1}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <ButtonDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                        onStateChange={this.onStateChange}\r\n                    />\r\n                }\r\n            />,\r\n            <MenuButton\r\n                key={2}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/animation.svg'} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <AnimationDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />,\r\n            <MenuButton\r\n                key={3}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/linkwhite.svg'} /> }\r\n                select={this.props.select}\r\n                onClick={(e) => {\r\n                    this.context.showLinkGenerator(\r\n                        linkData,\r\n                        (linkData) => {\r\n                            console.log(\"Image Link OnDone\", linkData)\r\n                            setTempData(\"linkData\", linkData, this.getAgl(), true);\r\n                        }\r\n                    );\r\n                }}\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n    };\r\n\r\n    getStaticChildren = () => {\r\n        this.resolveDesignData();\r\n\r\n        let spanData = getCompositeDesignData(this).spanData;\r\n\r\n        let data;\r\n        if (this.state.hover)\r\n            data = getCompositeDesignData(this).hover;\r\n        else\r\n            data = getCompositeDesignData(this).normal;\r\n\r\n        let textColor = data.textColor;\r\n        console.log(\"textColor\", textColor)\r\n        if (textColor)\r\n            textColor = parseColor(textColor, textColor.alpha, this.context);\r\n\r\n        let border = data.border;\r\n        let fillColor = data.fillColor;\r\n        console.log(\"fillColor\", fillColor)\r\n        if (fillColor)\r\n            fillColor = parseColor(fillColor, fillColor.alpha, this.context);\r\n\r\n        border.radius = border.radius || {};\r\n        border.shadow = border.shadow || {};\r\n\r\n        let shadowColor = border.shadow.color;\r\n        if (shadowColor)\r\n            shadowColor = parseColor(shadowColor, shadowColor.alpha, this.context);\r\n        let borderColor = border.color;\r\n        if (borderColor)\r\n            borderColor = parseColor(borderColor, borderColor.alpha, this.context);\r\n\r\n        let spanMarginStyle = {};\r\n        if (spanData.textAlign === \"flex-start\")\r\n            spanMarginStyle.marginLeft = `${spanData.margin}px`;\r\n        if (spanData.textAlign === \"flex-end\")\r\n            spanMarginStyle.marginRight = `${spanData.margin}px`;\r\n\r\n        return <a\r\n            onMouseOver={this.onMouseOver}\r\n            onMouseOut={this.onMouseOut}\r\n            className=\"ButtonBorderRoot\"\r\n            ref={this.rootBorderRef}\r\n            style={{\r\n                border:\r\n                    `${border.width || 0}px solid ${borderColor || 'rgba(186,218,85,0.63)'}`,\r\n                backgroundColor: fillColor,\r\n                borderRadius:\r\n                    `${border.radius.topLeft || 0}px ${border.radius.topRight || 0}px ${border.radius.bottomRight || 0}px ${border.radius.bottomLeft || 0}px`,\r\n                boxShadow: `${(border.shadow.xOffset) * (border.shadow.distance)}px ${(border.shadow.yOffset) * (border.shadow.distance)}px ${border.shadow.blur}px ${border.shadow.size}px ${shadowColor || 'rgba(186,218,85,0.63)'}`,\r\n                justifyContent: spanData.textAlign || \"center\"\r\n            }}\r\n        >\r\n            <span\r\n                className=\"ButtonText\"\r\n                style={{\r\n                    color: textColor || \"#000000\",\r\n                    fontFamily: spanData.fontFamily || getFontDataByName(StaticFonts, \"Yekan\").fontFamily,\r\n                    fontSize: `${spanData.fontSize}px`,\r\n                    ...spanMarginStyle\r\n                }}\r\n            >\r\n                {spanData.text}\r\n            </span>\r\n        </a>\r\n    };\r\n\r\n    onStateChange = (stateName) => {\r\n        if (stateName === \"hover\")\r\n            this.setState({hover:true});\r\n        else\r\n            this.setState({hover:false});\r\n    };\r\n\r\n    onMouseOver = () => {\r\n        if (this.context.isEditor())\r\n            return;\r\n\r\n        this.setState({hover: true});\r\n    };\r\n\r\n    onMouseOut = () => {\r\n        if (this.context.isEditor())\r\n            return;\r\n\r\n        this.setState({hover: false});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"Image\"\r\n                aglComponent={this}\r\n                {...this.props}\r\n                style={{\r\n                    width: \"100px\",\r\n                    height: \"50px\",\r\n                }}\r\n                data={this.getData()}\r\n                getPrimaryOptions={this.getPrimaryOptions}\r\n                getInspector={this.getInspector}\r\n                getStaticChildren={this.getStaticChildren}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n    tagName: \"Button\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport '../../HelperStyle.css';\r\nimport './Image.css';\r\nimport {\r\n    getCompositeDesignData,\r\n    getFromTempData,\r\n    parseColor,\r\n    resolveDesignData,\r\n    setTempData\r\n} from \"../../AwesomwGridLayoutHelper\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport AnimationDesign from \"../Containers/Menus/AnimationDesign\";\r\nimport {prepareLink} from \"../Text/Menus/components/LinkHelper\";\r\n\r\nexport default class Image extends AGLComponent{\r\n    static contextType = EditorContext;\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {hover: false};\r\n\r\n        this.rootBorderRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resolveRootTag();\r\n    }\r\n\r\n    resolveRootTag = () => {\r\n        if (!this.context.preview && !this.context.production)\r\n            return;\r\n\r\n        let linkData = getFromTempData(this, \"linkData\");\r\n\r\n        if (linkData && linkData.type !== \"None\") {\r\n            prepareLink(this.rootBorderRef.current, this.context.preview, this.context.production, this.context, linkData);\r\n        }\r\n    }\r\n\r\n    resolveDesignData = () => {\r\n        resolveDesignData(this, \"imageData\", {\r\n            src: \"https://weblancerstaticdata.s3.ir-thr-at1.arvanstorage.com/image-default.webp\",\r\n            fit: \"cover\"\r\n        });\r\n        resolveDesignData(this, \"normal\", {border: {shadow: {\r\n                    xOffset: -1,\r\n                    yOffset: 1,\r\n                    distance: 1,\r\n                    size: 0,\r\n                    blur: 4\r\n                }, radius: {}}, imageOpacity: 1});\r\n        resolveDesignData(this, \"hover\", {border: {shadow: {\r\n                    xOffset: -1,\r\n                    yOffset: 1,\r\n                    distance: 1,\r\n                    size: 5,\r\n                    blur: 4\r\n                }, radius: {}}, imageOpacity: 1});\r\n    };\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"hide\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n\r\n        let linkData = getFromTempData(this, \"linkData\");\r\n\r\n        return [\r\n            <MenuButton\r\n                key={2}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/animation.svg'} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <AnimationDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />,\r\n            <MenuButton\r\n                key={3}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/linkwhite.svg'} /> }\r\n                select={this.props.select}\r\n                onClick={(e) => {\r\n                    this.context.showLinkGenerator(\r\n                        linkData,\r\n                        (linkData) => {\r\n                            console.log(\"Image Link OnDone\", linkData)\r\n                            setTempData(\"linkData\", linkData, this.getAgl(), true);\r\n                        }\r\n                    );\r\n                }}\r\n            />,\r\n            <MenuButton\r\n                key={4}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/edit.svg'} /> }\r\n                select={this.props.select}\r\n                onClick={(e) => {\r\n                    this.context.showFileManager(\r\n                        {\r\n                            type: \"Images\"\r\n                        },\r\n                        (filesData) => {\r\n                            console.log(\"Image FIle Pick OnDone\", filesData);\r\n                            let fileData = filesData[0];\r\n                            this.onDesignChange('design.imageData.src', fileData.url);\r\n                        }\r\n                    );\r\n                }}\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n    };\r\n\r\n    getStaticChildren = () => {\r\n        this.resolveDesignData();\r\n\r\n        let imageData = getCompositeDesignData(this).imageData;\r\n\r\n        let data;\r\n        if (this.state.hover)\r\n            data = getCompositeDesignData(this).hover;\r\n        else\r\n            data = getCompositeDesignData(this).normal;\r\n\r\n        let border = data.border;\r\n        let fillColor = data.fillColor;\r\n        if (fillColor)\r\n            fillColor = parseColor(fillColor, fillColor.alpha, this.context);\r\n\r\n        border.radius = border.radius || {};\r\n        border.shadow = border.shadow || {};\r\n\r\n        let shadowColor = border.shadow.color;\r\n        if (shadowColor)\r\n            shadowColor = parseColor(shadowColor, shadowColor.alpha, this.context);\r\n        let borderColor = border.color;\r\n        if (borderColor)\r\n            borderColor = parseColor(borderColor, borderColor.alpha, this.context);\r\n\r\n        return <a\r\n            className=\"ImageBorderRoot\"\r\n            ref={this.rootBorderRef}\r\n            style={{\r\n                border:\r\n                    `${border.width || 0}px solid ${borderColor || 'rgba(186,218,85,0.63)'}`,\r\n                backgroundColor: fillColor,\r\n                borderRadius:\r\n                    `${border.radius.topLeft || 0}px ${border.radius.topRight || 0}px ${border.radius.bottomRight || 0}px ${border.radius.bottomLeft || 0}px`,\r\n                boxShadow: `${(border.shadow.xOffset) * (border.shadow.distance)}px ${(border.shadow.yOffset) * (border.shadow.distance)}px ${border.shadow.blur}px ${border.shadow.size}px ${shadowColor || 'rgba(186,218,85,0.63)'}`,\r\n            }}\r\n        >\r\n            <img\r\n                className=\"ImageImage\"\r\n                onMouseOver={this.onMouseOver}\r\n                onMouseOut={this.onMouseOut}\r\n                src={imageData.src}\r\n                style={{\r\n                    objectFit: imageData.fit\r\n                }}\r\n            />\r\n        </a>\r\n    };\r\n\r\n    onStateChange = (stateName) => {\r\n        if (stateName === \"hover\")\r\n            this.setState({hover:true});\r\n        else\r\n            this.setState({hover:false});\r\n    };\r\n\r\n    onMouseOver = () => {\r\n        if (this.context.isEditor())\r\n            return;\r\n\r\n        this.setState({hover: true});\r\n    };\r\n\r\n    onMouseOut = () => {\r\n        if (this.context.isEditor())\r\n            return;\r\n\r\n        this.setState({hover: false});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"Image\"\r\n                aglComponent={this}\r\n                {...this.props}\r\n                style={{\r\n                    width: \"150px\",\r\n                    height: \"150px\",\r\n                }}\r\n                data={this.getData()}\r\n                getPrimaryOptions={this.getPrimaryOptions}\r\n                getInspector={this.getInspector}\r\n                getStaticChildren={this.getStaticChildren}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nImage.defaultProps = {\r\n    tagName: \"Image\"\r\n};\r\n","import ContainerBase from \"../Components/Containers/ContainerBase\";\r\nimport Header from \"../Components/Containers/Header\";\r\nimport Footer from \"../Components/Containers/Footer\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport Section from \"../Components/Containers/Section\";\r\nimport Stack from \"../Components/Stack/Stack\";\r\nimport VerticalSpacer from \"../Components/Stack/VerticalSpacer\";\r\nimport FadeInAnimation from \"../Test/Animations/FadeInAnimation\";\r\nimport BounceInAnimation from \"../Test/Animations/BounceInAnimation\";\r\nimport GlideInAnimation from \"../Test/Animations/GlideInAnimation\";\r\nimport FloatInAnimation from \"../Test/Animations/FloatInAnimation\";\r\nimport ExpandInAnimation from \"../Test/Animations/ExpandInAnimation\";\r\nimport SpinInAnimation from \"../Test/Animations/SpinInAnimation\";\r\nimport FlyInAnimation from \"../Test/Animations/FlyInAnimation\";\r\nimport TurnInAnimation from \"../Test/Animations/TurnInAnimation\";\r\nimport ArcInAnimation from \"../Test/Animations/ArcInAnimation\";\r\nimport PuffInAnimation from \"../Test/Animations/PuffInAnimation\";\r\nimport FoldInAnimation from \"../Test/Animations/FoldInAnimation\";\r\nimport FlipInAnimation from \"../Test/Animations/FlipInAnimation\";\r\nimport RevealAnimation from \"../Test/Animations/RevealAnimation\";\r\nimport Text from \"../Components/Text/Text\";\r\nimport Button from \"../Components/Button/Button\";\r\nimport Image from \"../Components/Image/Image\";\r\n\r\nlet DynamicComponents = {};\r\n\r\nexport let initDynamicComponents = () => {\r\n    DynamicComponents[\"ContainerBase\"] = ContainerBase;\r\n    DynamicComponents[\"PageBase\"] = PageBase;\r\n    DynamicComponents[\"Header\"] = Header;\r\n    DynamicComponents[\"Footer\"] = Footer;\r\n    DynamicComponents[\"Section\"] = Section;\r\n    DynamicComponents[\"Stack\"] = Stack;\r\n    DynamicComponents[\"VerticalSpacer\"] = VerticalSpacer;\r\n    DynamicComponents[\"Text\"] = Text;\r\n    DynamicComponents[\"Button\"] = Button;\r\n    DynamicComponents[\"Image\"] = Image;\r\n};\r\n\r\nexport default DynamicComponents;\r\n\r\nexport let DynamicAnimations = {};\r\n\r\nexport let initDynamicAnimations = () => {\r\n    DynamicAnimations[\"fadeIn\"] = FadeInAnimation;\r\n    DynamicAnimations[\"bounceIn\"] = BounceInAnimation;\r\n    DynamicAnimations[\"glideIn\"] = GlideInAnimation;\r\n    DynamicAnimations[\"floatIn\"] = FloatInAnimation;\r\n    DynamicAnimations[\"expandIn\"] = ExpandInAnimation;\r\n    DynamicAnimations[\"spinIn\"] = SpinInAnimation;\r\n    DynamicAnimations[\"flyIn\"] = FlyInAnimation;\r\n    DynamicAnimations[\"turnIn\"] = TurnInAnimation;\r\n    DynamicAnimations[\"arcIn\"] = ArcInAnimation;\r\n    DynamicAnimations[\"puffIn\"] = PuffInAnimation;\r\n    DynamicAnimations[\"foldIn\"] = FoldInAnimation;\r\n    DynamicAnimations[\"flipIn\"] = FlipInAnimation;\r\n    DynamicAnimations[\"reveal\"] = RevealAnimation;\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\nimport DynamicComponents from \"../Dynamic/DynamicComponents\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport '../HelperStyle.css';\r\n\r\nexport default class AdjustmentPageControllers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    addSection = (index, isVertical) => {\r\n        let {page} = this.props;\r\n        page.addSectionQueue(index, \"Section\", DynamicComponents, undefined, isVertical);\r\n    };\r\n\r\n    getAnchor = (index) => {\r\n        return  document.getElementById(`page_add_horizontal_${index}`)\r\n    };\r\n\r\n    needUpdate = () => {\r\n        clearTimeout(this.updateTimeout);\r\n        this.updateTimeout = setTimeout(() => {\r\n            if (!this.mounted) {\r\n                clearTimeout(this.updateTimeout);\r\n                return;\r\n            }\r\n            this.forceUpdate();\r\n        }, 500);\r\n    };\r\n\r\n    render () {\r\n        let {grid} = this.props;\r\n        return (\r\n                [\r\n                    new Array(grid.y + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `1/${index}/2/${index + 1}`\r\n                        };\r\n                        index === 0 && (style.justifySelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                        >\r\n                            <div\r\n                                className={containerClasses}\r\n                                onClick={(e) => {\r\n                                    this.addSection(index, true);\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={8} height={8} src={require('./icons/plus.svg')} />\r\n                            </div>\r\n                        </div>\r\n                    }),\r\n                    new Array(grid.x + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `${index}/1/${index + 1}/2`,\r\n                            pointerEvents: \"auto\"\r\n                        };\r\n                        index === 0 && (style.alignSelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddHorizontalSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddHorizontalSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddHorizontalSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                            id={`page_add_horizontal_${index}`}\r\n                            onClick={(e) => {\r\n                                this.setState({anchorEl: e.currentTarget})\r\n                            }}\r\n                        >\r\n                            {!this.getAnchor(index) && this.needUpdate()}\r\n                            <Popper open={Boolean(document.getElementById(`page_add_horizontal_${index}`))}\r\n                                    anchorEl={\r\n                                        () => {\r\n                                            return this.getAnchor(index);\r\n                                        }\r\n                                    }\r\n                                    modifiers={{\r\n                                        preventOverflow: {\r\n                                            enabled: false,\r\n                                            boundariesElement: 'scrollParent',\r\n                                        },\r\n                                        hide: {\r\n                                            enabled: false,\r\n                                        },\r\n                                    }}\r\n                            >\r\n                                <div\r\n                                    className={containerClasses}\r\n                                    onClick={(e) => {\r\n                                        this.addSection(index, false);\r\n                                    }}\r\n                                >\r\n                                    <img draggable={false} className=\"IconImage\" width={8} height={8} src={require('./icons/plus.svg')} />\r\n                                </div>\r\n                            </Popper>\r\n                        </div>\r\n                    })\r\n                ]\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerFixedHolder extends React.Component {\r\n    render () {\r\n        let {size, id} = this.props;\r\n        return (\r\n            <div\r\n                className=\"fixed-holder\"\r\n                style={{\r\n                    top: size? size.top: 0,\r\n                    left: size? size.left: 0,\r\n                    width: size? size.width: 0,\r\n                    height: size? size.clientHeight || size.height: 0,\r\n                }}\r\n                id={`${id}_fixed_holder`}\r\n            >\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class PaddingInterface extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    borderTop: this.props.padding.top ? `${this.props.padding.top} solid rgba(2, 242, 255, 0.3` : \"unset\",\r\n                    borderLeft: this.props.padding.left ? `${this.props.padding.left} solid rgba(2, 242, 255, 0.3)` : \"unset\",\r\n                    borderBottom: this.props.padding.bottom ? `${this.props.padding.bottom} solid rgba(2, 242, 255, 0.3)` : \"unset\",\r\n                    borderRight: this.props.padding.right ? `${this.props.padding.right} solid rgba(2, 242, 255, 0.3)` : \"unset\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ParentSelectInterface extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    boxSizing: \"border-box\",\r\n                    border: '1px solid rgb(2 50 255 / 40%)'\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {appendStyle, cloneObject, shallowEqual, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\nimport GridChildContainerChildren from \"./GridChildContainerChildren\";\r\nimport classNames from \"classnames\";\r\nimport AdjustmentPageControllers from \"./Adjustment/AdjustmentPageControllers\";\r\nimport GridChildContainerFixedHolder from \"./GridChildContainerFixedHolder\";\r\nimport PaddingInterface from \"./Test/PaddingInterface\";\r\nimport ParentSelectInterface from \"./Test/ParentSelectInterface\";\r\n\r\nexport default class GridChildContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.controllerRef = React.createRef();\r\n        this.fixedHolderRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.modifyOverflowStyle(this.props.overflowData, this.props.aglStyle);\r\n        this.modifyContainerStyle(this.props.grid, this.props.aglStyle, this.props.padding);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(this.grid, nextProps.grid) ||\r\n            !shallowEqual(this.size, nextProps.size) ||\r\n            this.props.selectAsParent !== nextProps.selectAsParent ||\r\n            this.props.selected !== nextProps.selected ||\r\n            !shallowEqual(this.padding, nextProps.padding) ||\r\n            !shallowEqual(JSON.stringify(this.allChildIndex),\r\n                JSON.stringify(Object.values(nextProps.allChildren).map(c => {\r\n                    return {\r\n                        z: c.zIndex,\r\n                        i: c.child.props.id\r\n                    }\r\n                })))\r\n        ) {\r\n            if (!shallowEqual(this.overflowData, nextProps.overflowData))\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n\r\n            if (!shallowEqual(this.grid, nextProps.grid) || !shallowEqual(this.padding, nextProps.padding))\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n\r\n            if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!shallowEqual(this.overflowData, nextProps.overflowData)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            return true;\r\n        }\r\n        if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle, nextProps.padding);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren, grid, overflowData, aglStyle, size, padding} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => {\r\n            return {\r\n                z: c.zIndex,\r\n                i: c.child.props.id\r\n            }\r\n        });\r\n        this.grid = cloneObject(grid);\r\n        this.overflowData = cloneObject(overflowData);\r\n        this.aglStyle = cloneObject(aglStyle);\r\n        this.size = cloneObject(size);\r\n        this.padding = cloneObject(padding);\r\n    };\r\n\r\n    modifyContainerStyle = (grid, aglStyle, padding) => {\r\n        if (!grid)\r\n            grid = this.props.grid;\r\n\r\n        let {modifyContainerStyleOverride, agl} = this.props;\r\n\r\n        if (modifyContainerStyleOverride){\r\n            modifyContainerStyleOverride(this, agl, grid, aglStyle);\r\n            return;\r\n        }\r\n\r\n        let style = {\r\n            width: (aglStyle && aglStyle.width === \"auto\") ? \"auto\": \"100%\",\r\n            height: (aglStyle && aglStyle.height === \"auto\") ? \"auto\":\r\n                agl.getFromData(\"containerHeight\") || \"100%\",\r\n            display: \"grid\",\r\n            position: \"relative\",\r\n            boxSizing: \"border-box\",\r\n            gridTemplateRows: grid.gridTemplateRows,\r\n            gridTemplateColumns: grid.gridTemplateColumns,\r\n        };\r\n\r\n        if (padding) {\r\n            if (padding.top) style.paddingTop = padding.top;\r\n            if (padding.left) style.paddingLeft = padding.left;\r\n            if (padding.bottom) style.paddingBottom = padding.bottom;\r\n            if (padding.right) style.paddingRight = padding.right;\r\n\r\n            /*style.backgroundImage = \"\";\r\n            Object.keys(padding).forEach(key => {\r\n                if (key === \"top\")\r\n                    style.backgroundImage += `linear-gradient(to bottom, #00f3ffa8 ${padding.top}, transparent 10px),`\r\n                if (key === \"bottom\")\r\n                    style.backgroundImage += `linear-gradient(to top, #00f3ffa8 ${padding.bottom}, transparent 10px),`\r\n                if (key === \"left\")\r\n                    style.backgroundImage += `linear-gradient(to right, #00f3ffa8 ${padding.left}, transparent 10px),`\r\n                if (key === \"right\")\r\n                    style.backgroundImage += `linear-gradient(to left, #00f3ffa8 ${padding.right}, transparent 10px),`\r\n            });\r\n\r\n            if (style.backgroundImage)\r\n                style.backgroundImage = style.backgroundImage.slice(0, -1);*/\r\n        }\r\n\r\n        let styleNode = document.getElementById(this.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, this.getContainerStyleId(), this.getContainerStyleId());\r\n        } else {\r\n            updateStyle(styleNode, style, this.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    modifyOverflowStyle = (overflowData, aglStyle) => {\r\n        let styleNode = document.getElementById(this.getOverflowStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId()\r\n                , this.getOverflowStyleId());\r\n        } else {\r\n            updateStyle(styleNode, this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId());\r\n        }\r\n\r\n        let webkitScrollbarStyle = {};\r\n        let webkitScrollbarStyleId = this.getOverflowStyleId() + '::-webkit-scrollbar';\r\n        if (overflowData.auto === 'hide') webkitScrollbarStyle.display = \"none\";\r\n\r\n        let scrollStyleNode = document.getElementById(webkitScrollbarStyleId);\r\n\r\n        if (!scrollStyleNode) {\r\n            appendStyle(webkitScrollbarStyle, webkitScrollbarStyleId, webkitScrollbarStyleId);\r\n        } else {\r\n            updateStyle(scrollStyleNode, webkitScrollbarStyle, webkitScrollbarStyleId);\r\n        }\r\n    };\r\n\r\n    getOverflowStyle = (overflowData, aglStyle) => {\r\n        let style = {\r\n            display: \"grid\",\r\n            gridTemplateRows: \"1fr\",\r\n            gridTemplateColumns: \"1fr\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n        };\r\n\r\n        if (aglStyle && aglStyle.width === \"auto\") {\r\n            style.position = \"relative\";\r\n            delete style.left;\r\n            delete style.right;\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n        if (aglStyle && aglStyle.height === \"auto\") {\r\n            style.position = \"relative\";\r\n            delete style.left;\r\n            delete style.right;\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n\r\n        if (!overflowData)\r\n            overflowData = this.props.overflowData;\r\n\r\n        if (!overflowData)\r\n            return style;\r\n\r\n        if (overflowData.state === 'show') {\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'hide') {\r\n            style.overflowX = \"hidden\";\r\n            style.overflowY = \"hidden\";\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'scroll') {\r\n            style.overflowX = overflowData.overflowX? overflowData.auto === 'auto'? \"auto\" : \"scroll\" : \"hidden\" ;\r\n            style.overflowY = overflowData.overflowY? overflowData.auto === 'auto'? \"auto\" : \"scroll\" : \"hidden\" ;\r\n        }\r\n\r\n        if (overflowData.auto === 'hide') {\r\n            // TODO hide scrollbar with webkit\r\n            style.scrollbarWidth = 'none';\r\n            style.overflow = '-moz-scrollbars-none';\r\n            style['-ms-overflow-style'] = 'none';\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    getOverflowStyleId = () => {\r\n        return `style_overflow_${this.props.id}`\r\n    };\r\n\r\n    getContainerStyleId = () => {\r\n        return `style_container_${this.props.id}`\r\n    };\r\n\r\n    updateAdjustments = () => {\r\n        this.controllerRef.current && this.controllerRef.current.forceUpdate();\r\n        this.fixedHolderRef.current && this.fixedHolderRef.current.forceUpdate();\r\n    };\r\n\r\n    needOverflow = () => {\r\n        let overflowData = this.props.overflowData;\r\n\r\n        if (overflowData.state !== 'scroll')\r\n            return false;\r\n\r\n        if (overflowData.overflowX === 'scroll')\r\n                return true;\r\n        if (overflowData.overflowY === 'scroll')\r\n                return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        if (!this.props.show)\r\n            return null;\r\n        this.saveState();\r\n        let {allChildren, id, grid, isPage, page, size, getChildrenOverride, agl, editor} = this.props;\r\n\r\n        let overflowClasses = classNames(\r\n            this.getOverflowStyleId()\r\n        );\r\n        let containerClasses = classNames(\r\n            this.getContainerStyleId()\r\n        );\r\n\r\n        if (!isPage) {\r\n            if (this.needOverflow()) {\r\n                return (\r\n                    <div\r\n                        id={`${id}_overflow`}\r\n                        className={overflowClasses}\r\n                        ref={this.props.overflowRef}\r\n                        onScroll={this.props.onScroll}\r\n                    >\r\n                        <div\r\n                            id={`${id}_container`}\r\n                            className={containerClasses}\r\n                            ref={this.props.containerRef}\r\n                        >\r\n                            {\r\n                                this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                                <PaddingInterface padding={this.props.padding} />\r\n                            }\r\n                            {\r\n                                this.props.selectAsParent &&\r\n                                <ParentSelectInterface />\r\n                            }\r\n                            <GridChildContainerChildren\r\n                                allChildren={allChildren}\r\n                                getChildrenOverride={getChildrenOverride}\r\n                                agl={agl}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        id={`${id}_container`}\r\n                        className={containerClasses}\r\n                        ref={this.props.containerRef}\r\n                    >\r\n                        {\r\n                            this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                            <PaddingInterface padding={this.props.padding} />\r\n                        }\r\n                        {\r\n                            this.props.selectAsParent &&\r\n                            <ParentSelectInterface />\r\n                        }\r\n                        <GridChildContainerChildren\r\n                            allChildren={allChildren}\r\n                            getChildrenOverride={getChildrenOverride}\r\n                            agl={agl}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                    <div\r\n                        id={`${id}_container`}\r\n                        className={containerClasses}\r\n                        ref={this.props.containerRef}\r\n                    >\r\n                        {\r\n                            this.props.padding && (this.props.selectAsParent || this.props.selected) &&\r\n                            <PaddingInterface padding={this.props.padding} />\r\n                        }\r\n                        {\r\n                            this.props.selectAsParent &&\r\n                            <ParentSelectInterface />\r\n                        }\r\n                        <GridChildContainerChildren\r\n                            allChildren={allChildren}\r\n                            getChildrenOverride={getChildrenOverride}\r\n                            agl={agl}\r\n                        />\r\n\r\n                        {\r\n                            editor &&\r\n                            <AdjustmentPageControllers\r\n                                grid={grid}\r\n                                page={page}\r\n                                editor={editor}\r\n                                ref={this.controllerRef}\r\n                            />\r\n                        }\r\n\r\n                        <GridChildContainerFixedHolder\r\n                            ref={this.fixedHolderRef}\r\n                            size={size}\r\n                            id={id}\r\n                        />\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomeGridLayout.css';\r\n\r\nexport default class AGLAnchor extends React.Component {\r\n    render () {\r\n        let {anchor} = this.props;\r\n\r\n        if (!anchor)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                className=\"AGLAnchor\"\r\n                id={anchor.id}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ResizePanePage extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane-page`,\r\n            \"Adjustment-Pane\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.onMouseDown}\r\n                className={classes}\r\n                style={style}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePanePage from \"./ResizePanePage\";\r\n\r\nexport default class AdjustmentResizePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render () {\r\n        let {top, left, width, height} = this.props;\r\n        if (top === undefined || left === undefined || width === undefined || height === undefined)\r\n            return null;\r\n\r\n        return (\r\n                <div\r\n                    id=\"AdjustmentResizePage\"\r\n                    style={{\r\n                        width: width,\r\n                        height: \"80vh\",\r\n                        // left: left? left: 0,\r\n                        // top: top? top : 0,\r\n                        // bottom: top? window.innerHeight - top - height: 0,\r\n                        // right: left? window.innerWidth - left - width: 0,\r\n                    }}\r\n                    // className=\"AdjustmentResizeRootPage\"\r\n                    className=\"AdjustmentResizeRoot\"\r\n                >\r\n                    {\r\n                        this.props.sides.map((side, index) => {\r\n                            return <ResizePanePage\r\n                                key={index}\r\n                                side={side}\r\n                                onResizeStart={this.props.onResizeStart}\r\n                                onResize={this.props.onResize}\r\n                                onResizeStop={this.props.onResizeStop}\r\n                                draggingStart={this.props.draggingStart}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class EventTrigger {\r\n    constructor(owner, defaultListener) {\r\n        this.owner = owner;\r\n        this.listeners = [];\r\n        if (defaultListener)\r\n            this.listeners.push(defaultListener);\r\n    }\r\n\r\n    addListener = (listener) => {\r\n        if (!this.listeners.find(l => { return l === listener; })) {\r\n            this.listeners.push(listener);\r\n        }\r\n    };\r\n\r\n    trigger = throttleDebounce((data) => {\r\n        this.listeners.forEach(l => {\r\n            l(this.owner, data);\r\n        });\r\n    }, 50);\r\n\r\n    removeListener = (listener) => {\r\n        let index = this.listeners.findIndex(l => { return l === listener; })\r\n        if (index >= 0)\r\n            this.listeners.splice(index, 1);\r\n    };\r\n}\r\n","let windowCache = {\r\n    boundingRects: {},\r\n    clientsWidth: {},\r\n    clientsHeight: {},\r\n    scrollsTop: {},\r\n    scrollsLeft: {},\r\n    scrollsWidth: {},\r\n    scrollsHeight: {}\r\n};\r\n\r\nlet clearCache = () => {\r\n    windowCache.boundingRects = {};\r\n    windowCache.clientsWidth = {};\r\n    windowCache.clientsHeight = {};\r\n    windowCache.scrollsTop = {};\r\n    windowCache.scrollsLeft = {};\r\n    windowCache.scrollsWidth = {};\r\n    windowCache.scrollsHeight = {};\r\n    delete windowCache.clearCacheTimeuot;\r\n};\r\n\r\nexport let getCachedBoundingRect = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.boundingRects[id])\r\n        windowCache.boundingRects[id] = node.getBoundingClientRect();\r\n\r\n    return windowCache.boundingRects[id];\r\n};\r\n\r\nexport let getCachedClientWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.clientsWidth[id])\r\n        windowCache.clientsWidth[id] = node.clientWidth;\r\n\r\n    return windowCache.clientsWidth[id];\r\n};\r\n\r\nexport let getCachedClientHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.clientsHeight[id])\r\n        windowCache.clientsHeight[id] = node.clientHeight;\r\n\r\n    return windowCache.clientsHeight[id];\r\n};\r\n\r\nexport let getCachedScrollTop = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsTop[id])\r\n        windowCache.scrollsTop[id] = node.scrollTop;\r\n\r\n    return windowCache.scrollsTop[id];\r\n};\r\n\r\nexport let getCachedScrollLeft = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsLeft[id])\r\n        windowCache.scrollsLeft[id] = node.scrollLeft;\r\n\r\n    return windowCache.scrollsLeft[id];\r\n};\r\n\r\nexport let getCachedScrollWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsWidth[id])\r\n        windowCache.scrollsWidth[id] = node.scrollWidth;\r\n\r\n    return windowCache.scrollsWidth[id];\r\n};\r\n\r\nexport let getCachedScrollHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot) {\r\n        windowCache.clearCacheTimeuot = true;\r\n        window.requestAnimationFrame(clearCache);\r\n    }\r\n\r\n    if (!windowCache.scrollsHeight[id])\r\n        windowCache.scrollsHeight[id] = node.scrollHeight;\r\n\r\n    return windowCache.scrollsHeight[id];\r\n};\r\n\r\nexport let addToCache = (id, rect, propName) => {\r\n    windowCache[propName][id] = rect;\r\n};\r\n","import React from \"react\";\r\nexport default class AnimationHolder extends React.Component {\r\n    render () {\r\n        if (!this.props.disabled)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <div\r\n                    className={this.props.className}\r\n                    id={this.props.id}\r\n                    ref={this.props.transformRef}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nexport default class VisibilitySensorWrapper extends React.Component {\r\n    render () {\r\n        if (!this.props.animation)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <VisibilitySensor\r\n                    partialVisibility onChange={(v) => {\r\n                        if (this.props.animation.name &&\r\n                            (this.props.animation.options && this.props.animation.options.once)\r\n                            && v) {\r\n                            !this.props.editor && this.props.playAnimation(true);\r\n                            return;\r\n                        }\r\n\r\n                        if (this.props.animation.name && v)\r\n                            !this.props.editor && this.props.playAnimation();\r\n                    }}\r\n                    containment={this.props.select.getPageOverflowRef()}\r\n                    active={this.props.animation.name && !this.props.disableVS}\r\n                >\r\n                    {this.props.children}\r\n                </VisibilitySensor>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentHelpSize extends React.Component {\r\n    getText = () => {\r\n        let {width, height} = this.props.resizeHelpData;\r\n\r\n        return `${width? \"W: \" + width.toFixed(0).toString() + \"  \": \"\"}\r\n        ${height? \"H: \" + height.toFixed(0).toString() + \"\": \"\"}`;\r\n    };\r\n    render () {\r\n        let {x, y} = this.props.resizeHelpData;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpSize\"\r\n                className=\"AdjustmentHelpSizeRoot\"\r\n            >\r\n                <p\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: y,\r\n                        left: x,\r\n                        margin: 0,\r\n                        transform: \"translateX(20px) translateY(20px)\",\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#ffffff\",\r\n                        backgroundColor: \"#4b4b4b\",\r\n                        padding: 4,\r\n                        borderRadius: 4,\r\n                        width: \"fit-content\"\r\n                    }}\r\n                >\r\n                    {this.getText()}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport debounce from 'lodash.debounce';\r\nimport {appendStyle, cloneObject, initGriddata, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './AwesomeGridLayout.css';\r\nimport GridChildContainer from \"./GridChildContainer\";\r\nimport DynamicComponents, {DynamicAnimations} from \"./Dynamic/DynamicComponents\";\r\nimport classNames from \"classnames\";\r\nimport Portal from \"./Portal\";\r\nimport {\r\n    createItem,\r\n    getCompositeDesignData, getPxValueFromCSSValue, getResizeDelta, getViewRatioStyle,\r\n    isFixed,\r\n    isGroupSelected, isRightClick,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport AGLAnchor from \"./AGLAnchor\";\r\nimport AdjustmentResizePage from \"./Adjustment/AdjustmentResizePage\";\r\nimport EventTrigger from \"./Test/EventTrigger\";\r\nimport {\r\n    addToCache,\r\n    getCachedBoundingRect,\r\n    getCachedClientHeight, getCachedScrollLeft,\r\n    getCachedScrollTop,\r\n    getCachedClientWidth, getCachedScrollHeight, getCachedScrollWidth\r\n} from \"./Test/WindowCache\";\r\nimport ChildHolder from \"./AnimationHolder\";\r\nimport VisibilitySensorWrapper from \"./Test/VisibilitySensorWrapper\";\r\nimport AdjustmentHelpSize from \"./Adjustment/AdjustmentHelpSize\";\r\n\r\nexport default class AwesomeGridLayout2 extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            childContainers: [],\r\n            grid: {x: 1, y: 1, gridTemplateRows: \"1fr\", gridTemplateColumns: \"1fr\"},\r\n            portalNodeId: props.portalNodeId,\r\n            windowWidth: props.breakpointmanager.getWindowWidth()\r\n        };\r\n\r\n        this.rootDivRef = React.createRef();\r\n        this.overflowRef = !props.isPage? React.createRef(): this.rootDivRef;\r\n        this.containerRef = React.createRef();\r\n        this.backContainerRef = React.createRef();\r\n        this.transformRef = React.createRef();\r\n        this.allChildRefs = {};\r\n\r\n        this.children = {};\r\n\r\n        initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        this.props.idMan.setItem(this.props.id, this);\r\n\r\n        this.onPropsChange = new EventTrigger(this);\r\n\r\n        props.id === \"comp_ContainerBase_1_1_1_1_1_1\" && console.log(\"AwesomeGridLayout2 constructor\", props.griddata)\r\n\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n        this.init();\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n        if (this.needRender) {\r\n            delete this.needRender;\r\n            this.updateLayout(() => {\r\n                this.isEditor() ? this.onSelect(this.getFromTempData(\"selected\"), this.lateMounted) : this.lateMounted();\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        this.isEditor() && this.props.editor.updateLayout();\r\n    }\r\n\r\n    callOverride = (funcName, ...args) => {\r\n        let override = this.getOverrideProp(funcName);\r\n        if (override) {\r\n            return override(this, ...args);\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    hasOverride = (funcName) => {\r\n        return this.getOverrideProp(funcName);\r\n    };\r\n\r\n    init = () => {\r\n        this.needRender = true;\r\n\r\n        this.children = {};\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let savedChildren = this.props.griddata.savedChildren;\r\n        if (!savedChildren) {\r\n            this.props.griddata.savedChildren = {};\r\n            savedChildren = this.props.griddata.savedChildren;\r\n\r\n            React.Children.map(this.props.children, (child, i)=> {\r\n                if (child) {\r\n                    let props = {...child.props};\r\n                    let createdChild = this.createChildByData({\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: props\r\n                    }, DynamicComponents);\r\n                    this.children[props.id] = {\r\n                        // child: this.getChildClone(child),\r\n                        child: createdChild,\r\n                        zIndex: lastZIndex + 1\r\n                    };\r\n\r\n                    savedChildren[props.id] = {\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: this.getClearProps(props),\r\n                        zIndex: this.children[props.id].zIndex\r\n                    };\r\n\r\n                    lastZIndex++;\r\n                }\r\n            });\r\n\r\n            if (this.renderChild) {\r\n                let childs = this.renderChild();\r\n                if (childs instanceof Array) {\r\n                    childs.forEach(c => {\r\n                        if (c) {\r\n                            let props = {...c.props};\r\n                            let createdChild = this.createChildByData({\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: props\r\n                            }, DynamicComponents);\r\n                            this.children[props.id] = {\r\n                                child: createdChild,\r\n                                zIndex: lastZIndex + 1\r\n                            };\r\n\r\n                            savedChildren[props.id] = {\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: this.getClearProps(props),\r\n                                zIndex: this.children[props.id].zIndex\r\n                            };\r\n\r\n                            lastZIndex++;\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (childs) {\r\n                        let props = {...childs.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.props.childrenData) {\r\n                let childs = this.props.childrenData();\r\n                childs.forEach(c => {\r\n                    if (c) {\r\n                        let props = {...c.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: c.tagName,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: c.tagName,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            let savedChildrenArray = Object.values(savedChildren);\r\n            savedChildrenArray.sort((a, b) => {\r\n                if (a.zIndex > b.zIndex) {\r\n                    return 1;\r\n                } else if (a.zIndex === b.zIndex) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    return 0;\r\n                }\r\n                return -1;\r\n            });\r\n            savedChildrenArray.forEach(childData => {\r\n                let oldId = childData.props.id;\r\n                let child = this.createChildByData(childData, DynamicComponents);\r\n                this.children[childData.props.id] = {\r\n                    child: child,\r\n                    zIndex: childData.zIndex\r\n                };\r\n\r\n                if (oldId !== childData.props.id) {\r\n                    delete savedChildren[oldId];\r\n                    savedChildren[childData.props.id] = childData;\r\n                }\r\n            })\r\n        }\r\n\r\n        this.initLayout();\r\n    };\r\n\r\n    initLayout = () => {\r\n        if (this.callOverride(\"initLayout\"))\r\n            return;\r\n\r\n        let style = this.getCompositeFromData(\"style\") || this.getDefaultStyle();\r\n\r\n        this.setTransformStyle(this.getCompositeFromData(\"transform\"), undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGridItemStyle(this.getCompositeFromData(\"gridItemStyle\") ||\r\n            this.props.defaultGridItemStyle,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        if (this.props.isPage)\r\n            style.width = this.props.style.width;\r\n\r\n        this.setStyle(style, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGrid(this.getCompositeFromData(\"grid\") || this.props.defaultGrid, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    getDefaultStyle = () => {\r\n        let style = { ...this.props.defaultStyle, ...this.props.style};\r\n\r\n        if ((this.props.defaultGridItemStyle).justifySelf === \"stretch\" &&\r\n            (this.getFromTempData(\"resizable\") &&\r\n                (!this.props.resizeSides || (!this.props.resizeSides.includes(\"w\") &&\r\n                    !this.props.resizeSides.includes(\"e\"))))) {\r\n            style.width = \"auto\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    lateMounted = () => {\r\n        if (this.hasOverride(\"lateMounted\")) {\r\n            return this.callOverride(\"lateMounted\");\r\n        }\r\n\r\n        let size = this.getSize(false, true, true);\r\n        this.addToSnap();\r\n\r\n        let baseDocks = this.getBaseDocks();\r\n        this.setDocks(baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n            this.getFromTempData(\"autoDock\"),\r\n            this.props.breakpointmanager.getHighestBpName(), true);\r\n\r\n        console.log(\"AwesomeGridLayout2 lateMounted\", this.props.id)\r\n        if (this.props.onPageResize) {\r\n            console.log(\"AwesomeGridLayout2 lateMounted.onPageResize\", this.props.id)\r\n            this.props.onPageResize(size.width, this, true);\r\n        }\r\n\r\n        this.props.onChildMounted && this.props.onChildMounted(this);\r\n        this.isEditor() && this.props.editor.updateLayout();\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        return this.props.getPrimaryOptions && this.props.getPrimaryOptions();\r\n    };\r\n\r\n    getShortcutOptions = () => {\r\n        return this.props.getShortcutOptions && this.props.getShortcutOptions();\r\n    };\r\n\r\n    hasMiniMenu = () => {\r\n        if (this.hasOverride(\"hasMiniMenu\")) {\r\n            return this.callOverride(\"hasMiniMenu\");\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    addToSnap = debounce(() => {\r\n        if (this.callOverride(\"addToSnap\"))\r\n            return;\r\n\r\n        // let rect = this.getSize(false);\r\n        let rect = this.getBoundarySize() || this.getSize(false);\r\n        if (rect) {\r\n            this.props.snap.addSnap(this.props.id,\r\n                [\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    },\r\n                    !this.props.isPage && {\r\n                        id: this.props.id,\r\n                        value: rect.top + rect.height / 2,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.top + rect.height,\r\n                        p1: rect.left,\r\n                        p2: rect.left + rect.width\r\n                    }\r\n                ],\r\n                [\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    },\r\n                    !this.props.isPage && {\r\n                        id: this.props.id,\r\n                        value: rect.left + rect.width / 2,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    },\r\n                    {\r\n                        id: this.props.id,\r\n                        value: rect.left + rect.width,\r\n                        p1: rect.top,\r\n                        p2: rect.top + rect.height\r\n                    }\r\n                ],\r\n                this.getParentsId()\r\n            );\r\n        }\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current){\r\n                childRef.current.addToSnap();\r\n            }\r\n        });\r\n    }, 500);\r\n\r\n    getParentsId = () => {\r\n        let parentsId = [];\r\n        let parent = this.props.parent;\r\n\r\n        while (parent) {\r\n            parentsId.push(parent.props.id);\r\n            parent = parent.props.parent;\r\n        }\r\n\r\n        return parentsId;\r\n    };\r\n\r\n    getGridLineSnaps = () => {\r\n        let snaps = {\r\n            horizontals: [],\r\n            verticals: [],\r\n            id: this.props.id\r\n        };\r\n        this.prepareRects();\r\n        let xLineRef = this.props.gridLine.getXlineRef(this.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            // let current = xLineRef[i].current;\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.verticals.push({\r\n                id: this.props.id,\r\n                value: rect.left + ((i === xLineRef.length - 1)? 1: 0),\r\n                p1: rect.top,\r\n                p2: rect.top + rect.height\r\n            });\r\n        }\r\n        let yLineRef = this.props.gridLine.getYlineRef(this.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let current = yLineRef[i].current;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.horizontals.push({\r\n                id: this.props.id,\r\n                value: rect.top + ((i === yLineRef.length - 1)? 1: 0),\r\n                p1: rect.left,\r\n                p2: rect.left + rect.width\r\n            });\r\n        }\r\n\r\n        return [snaps];\r\n    };\r\n\r\n    createChildByData = (childData, dynamicComponents, newId, onChildMounted, fixed) => {\r\n        if (this.callOverride(\"addToSnap\", childData, dynamicComponents, newId, onChildMounted, fixed))\r\n            return;\r\n\r\n        let tagName = childData.tagName;\r\n        let props = childData.props;\r\n\r\n        let griddata = initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (newId)\r\n            props.id = newId;\r\n        if (!props.id)\r\n            props.id = this.props.idMan.getId(tagName);\r\n        else\r\n            props.id = this.props.idMan.getId(tagName, props.id);\r\n\r\n        griddata.id = props.id;\r\n        if (!props.griddata || newId)\r\n            props.griddata = griddata;\r\n\r\n        this.allChildRefs[props.id] = React.createRef();\r\n\r\n        if (this.getFromTempData(\"isFixed\", props.griddata))\r\n            fixed = true;\r\n\r\n        let AGLProps = {};\r\n        if (tagName[0] == tagName[0].toUpperCase()) {\r\n            console.log(\"createChildByData portalNodeId\",props.portalNodeId, (fixed && `${this.props.id}_fixed_holder`))\r\n            AGLProps = {\r\n                aglRef: this.allChildRefs[props.id],\r\n                viewRef: this.props.viewRef,\r\n                breakpointmanager: this.props.breakpointmanager,\r\n                undoredo: this.props.undoredo,\r\n                dragdrop: this.props.dragdrop,\r\n                select: this.props.select,\r\n                snap: this.props.snap,\r\n                idMan: this.props.idMan,\r\n                input: this.props.input,\r\n                copyMan: this.props.copyMan,\r\n                window: this.props.window,\r\n                document: this.props.document,\r\n                editorData: this.props.editorData,\r\n                anchorMan: this.props.anchorMan,\r\n                gridLine: this.props.gridLine,\r\n                gridEditorRef: this.props.gridEditorRef,\r\n                parent: this,\r\n                editor: this.props.editor,\r\n                onChildMounted: onChildMounted,\r\n                portalNodeId: (fixed && `${this.props.id}_fixed_holder`),\r\n                ...this.getAllChildOverrideProps()\r\n            };\r\n        }\r\n\r\n        let component = tagName[0] === tagName[0].toUpperCase()? dynamicComponents[tagName]: tagName;\r\n\r\n        if (tagName[0] !== tagName[0].toUpperCase())\r\n            delete props.griddata;\r\n\r\n        return React.createElement(\r\n            component,\r\n            {\r\n                ...props,\r\n                key: props.id,\r\n                ...AGLProps,\r\n            }\r\n        );\r\n    };\r\n\r\n    getSize = (updateState = true, force, fullForce) => {\r\n        if (!this.rootDivRef.current)\r\n            return;\r\n\r\n        if (this.tempSize && !force)\r\n            return cloneObject(this.tempSize);\r\n\r\n        let rect = fullForce ? this.rootDivRef.current.getBoundingClientRect() :\r\n            getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n\r\n        let clientWidth = rect.width;\r\n        let clientHeight = rect.height;\r\n        let scrollTop = 0;\r\n        let scrollLeft = 0;\r\n        let scrollWidth = rect.width;\r\n        let scrollHeight = rect.height;\r\n        if (this.overflowRef.current) {\r\n            clientWidth = fullForce ? this.overflowRef.current.clientWidth :\r\n                getCachedClientWidth(this.props.id, this.overflowRef.current);\r\n            clientHeight = fullForce ? this.overflowRef.current.clientHeight :\r\n                getCachedClientHeight(this.props.id, this.overflowRef.current);\r\n            scrollTop = fullForce ? this.overflowRef.current.scrollTop :\r\n                getCachedScrollTop(this.props.id, this.overflowRef.current);\r\n            scrollLeft = fullForce ? this.overflowRef.current.scrollLeft :\r\n                getCachedScrollLeft(this.props.id, this.overflowRef.current);\r\n            scrollWidth = fullForce ? this.overflowRef.current.scrollWidth :\r\n                getCachedScrollWidth(this.props.id, this.overflowRef.current);\r\n            scrollHeight = fullForce ? this.overflowRef.current.scrollHeight :\r\n                getCachedScrollHeight(this.props.id, this.overflowRef.current);\r\n        }\r\n\r\n        let padding = cloneObject(this.getCompositeFromData(\"padding\")) || {};\r\n        ['top', 'left', 'bottom', 'right'].forEach(key => {\r\n            padding[key] = getPxValueFromCSSValue(padding[key], 0, this) || 0;\r\n        });\r\n        let temp = {\r\n            x: rect.width,\r\n            y: rect.height,\r\n            clientWidth: clientWidth,\r\n            clientHeight: clientHeight,\r\n            scrollTop: scrollTop,\r\n            scrollLeft: scrollLeft,\r\n            scrollWidth: scrollWidth,\r\n            scrollHeight: scrollHeight,\r\n            top: rect.top,\r\n            left: rect.left,\r\n            bottom: rect.bottom,\r\n            right: rect.right,\r\n            width: rect.width,\r\n            height: rect.height,\r\n            widthMinusPadding: rect.width - (padding.left||0)- (padding.right||0),\r\n            heightMinusPadding: rect.height - (padding.top||0)- (padding.bottom||0),\r\n            scrollWidthMinusPadding: scrollWidth - (padding.left||0)- (padding.right||0),\r\n            scrollHeightMinusPadding: scrollHeight - (padding.top||0)- (padding.bottom||0)\r\n        };\r\n\r\n        this.tempSize = temp;\r\n\r\n        if (fullForce) {\r\n            addToCache(this.props.id, this.tempSize, \"boundingRects\");\r\n            addToCache(this.props.id, clientWidth, \"clientsWidth\");\r\n            addToCache(this.props.id, clientHeight, \"clientsHeight\");\r\n            addToCache(this.props.id, scrollTop, \"scrollsTop\");\r\n            addToCache(this.props.id, scrollLeft, \"scrollsLeft\");\r\n            addToCache(this.props.id, scrollWidth, \"scrollsWidth\");\r\n            addToCache(this.props.id, scrollHeight, \"scrollsHeight\");\r\n        }\r\n\r\n        return temp;\r\n    };\r\n\r\n    getBoundarySize = (force) => {\r\n        if (this.transformRef.current) {\r\n            if (!force)\r\n                return getCachedBoundingRect(`${this.props.id}_transform`, this.transformRef.current);\r\n            else\r\n                return this.transformRef.current.getBoundingClientRect();\r\n        }\r\n    };\r\n\r\n    invalidateSize = (self = true, updateParent = true, updateChildren = true, sourceId,\r\n                      addToSnap = false) => {\r\n        if (this.callOverride(\"invalidateSize\", self, updateParent, updateChildren, sourceId))\r\n            return;\r\n\r\n        if (addToSnap)\r\n            this.addToSnap();\r\n\r\n        if (!sourceId)\r\n            sourceId = this.props.id;\r\n\r\n        if (self)\r\n            delete this.tempSize;\r\n\r\n        if (updateChildren) {\r\n            Object.values(this.allChildRefs).forEach(childRef => {\r\n                if (childRef && childRef.current && sourceId !== childRef.current.props.id) {\r\n                    childRef.current.invalidateSize(true, false, true, sourceId, addToSnap);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (updateParent) {\r\n            this.getParentsId().forEach(id => {\r\n                let parent = this.props.idMan.getItem(id);\r\n                if (parent && parent.mounted && sourceId !== parent.props.id) {\r\n                    parent.invalidateSize(true, false, false, sourceId, addToSnap);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onWindowSizeChange = () => {\r\n        this.addToSnap();\r\n        this.prepareRects();\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onWindowSizeChange();\r\n            }\r\n        });\r\n    };\r\n\r\n    getRenderChildData = (id) => {\r\n        return this.children[id];\r\n    };\r\n\r\n    arrangeIndex = (child, type) => {\r\n        let childData = this.getFromTempData(\"savedChildren\")[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let indexData = this.getNextIndexData(currentIndex);\r\n        switch (type) {\r\n            case \"forward\":\r\n                childData.zIndex = indexData.nextZIndex;\r\n                if (indexData.nextChild) {\r\n                    indexData.nextChild.zIndex = currentIndex;\r\n                    this.getRenderChildData(indexData.nextChild.props.id).zIndex = currentIndex;\r\n                }\r\n                break;\r\n            case \"backward\":\r\n                childData.zIndex = indexData.prevZIndex;\r\n                if (indexData.prevChild) {\r\n                    indexData.prevChild.zIndex = currentIndex;\r\n                    this.getRenderChildData(indexData.prevChild.props.id).zIndex = currentIndex;\r\n                }\r\n                break;\r\n            case \"front\":\r\n                childData.zIndex = indexData.lastZIndex + 1;\r\n                break;\r\n            case \"back\":\r\n                childData.zIndex = indexData.firstZIndex - 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    changeIndex = (child, index) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (currentIndex === index)\r\n            return;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let findIndex = (zIndex) => {\r\n            return allChildData.findIndex(a => {\r\n                return a.zIndex === zIndex;\r\n            });\r\n        };\r\n\r\n        let change = currentIndex < index ? -1 : 1;\r\n\r\n        if (findIndex(index)) // if false, means index is free to set\r\n        {\r\n            let startIndex = currentIndex < index ? findIndex(currentIndex) || 0 : findIndex(index);\r\n            let lastIndex = currentIndex < index ? findIndex(index) : findIndex(currentIndex) || 0 ;\r\n\r\n            for (let i = startIndex; i < lastIndex + 1; i++) {\r\n                let testChildData = allChildData[i];\r\n                testChildData.zIndex += change;\r\n                this.getRenderChildData(testChildData.props.id).zIndex = testChildData.zIndex;\r\n            }\r\n        }\r\n\r\n        childData.zIndex = index;\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    setChildZIndex = (childId, zIndex) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[childId];\r\n        childData.zIndex = zIndex;\r\n        this.getRenderChildData(childData.props.id).zIndex = childData.zIndex;\r\n    };\r\n\r\n    getNextIndexData = (currentIndex) => {\r\n        let children = Object.values(this.getFromTempData(\"savedChildren\") || {});\r\n        children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex) {\r\n                return 1;\r\n            } else if (a.zIndex === b.zIndex) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n        let result = {};\r\n        for (let i = 0; i < children.length; i++){\r\n            let child = children[i];\r\n\r\n            let childZIndex = child.zIndex;\r\n\r\n            if (i === 0) {\r\n                result.firstZIndex = childZIndex;\r\n            }\r\n\r\n            if (i === children.length - 1) {\r\n                result.lastZIndex = childZIndex;\r\n            }\r\n\r\n            if (result.nextChild === undefined && childZIndex > currentIndex){\r\n                result.nextChild = child;\r\n                result.nextZIndex = childZIndex;\r\n                continue;\r\n            }\r\n\r\n            if (childZIndex < currentIndex){\r\n                result.prevChild = child;\r\n                result.prevZIndex = childZIndex;\r\n                // continue;\r\n            }\r\n        }\r\n\r\n        if (!result.nextChild)\r\n            result.nextZIndex = result.lastZIndex + 1;\r\n        if (!result.prevChild)\r\n            result.prevZIndex = result.firstZIndex - 1;\r\n\r\n        if (result.lastZIndex === undefined)\r\n            result.lastZIndex = 0;\r\n\r\n        return result;\r\n    };\r\n\r\n    updateLayout = (callback) => {\r\n        if (this.callOverride(\"updateLayout\", callback))\r\n            return;\r\n\r\n        this.setState({reload: true}, callback);\r\n    };\r\n\r\n    isPointInclude = (x, y, forceCalculate) => {\r\n        let rect = this.getSize(false, forceCalculate);\r\n        return x >= rect.left && x <= rect.left + rect.width &&\r\n            y >= rect.top && y <= rect.top + rect.height;\r\n    };\r\n\r\n    addChild = (childElement, newId, newProps, callback, onChildMounted, fixed, keepChildren) => {\r\n        if (this.callOverride(\"addChild\", childElement, newId, newProps, callback, onChildMounted, fixed))\r\n            return;\r\n\r\n        if (!childElement.props.tagName && !childElement.type) {\r\n            throw new Error(\"childElement must pass tagName prop to AGL or be primitive type\");\r\n        }\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let props = newId? newProps: {...childElement.props};\r\n        let createdChild = this.createChildByData({\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props, keepChildren)\r\n        }, DynamicComponents, newId, onChildMounted, fixed);\r\n        this.children[props.id] = {\r\n            child: createdChild,\r\n            zIndex: lastZIndex + 1\r\n        };\r\n\r\n        this.props.griddata.savedChildren[props.id] = {\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props),\r\n            zIndex: this.children[props.id].zIndex\r\n        };\r\n\r\n        this.updateLayout(callback);\r\n        this.props.onChildAdd && this.props.onChildAdd();\r\n    };\r\n\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.callOverride(\"onBreakpointChange\", width, newBreakpointName, devicePixelRatio))\r\n            return;\r\n\r\n        let style = this.getCompositeFromData(\"style\");\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let transform = this.getCompositeFromData(\"transform\");\r\n        this.setStyle(style, undefined, undefined, true);\r\n        this.setGridItemStyle(gridItemStyle, undefined, true);\r\n        this.setTransformStyle(transform, undefined, undefined, true);\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n            }\r\n        });\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    delete = (fromUndoRedo) => {\r\n        if (this.callOverride(\"delete\"))\r\n            return;\r\n\r\n        if (!this.props.parent)\r\n            return;\r\n\r\n        if (this.props.onItemPreDelete) {\r\n            let allow = this.props.onItemPreDelete(this);\r\n            if (!allow)\r\n                return;\r\n        }\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let childData = cloneObject(this.props.parent.getChildData(itemId));\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            }, (idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true);\r\n            });\r\n        }\r\n\r\n        this.clearItem();\r\n\r\n        this.props.parent.removeChildElement(this);\r\n\r\n        this.props.select.clearMiniMenu();\r\n    };\r\n\r\n    getChildData = (childId) => {\r\n        return this.props.griddata.savedChildren[childId];\r\n    };\r\n\r\n    getOverrideProp = (funcName) => {\r\n        let key = Object.keys(this.props).find(key => {\r\n            return key === `${funcName}Override`;\r\n        });\r\n\r\n        return this.props[key];\r\n    };\r\n\r\n    getAllOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"Override\")) {\r\n                result[key] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    getAllChildOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"ChildOverride\")) {\r\n                result[key.replace(\"ChildOverride\", \"Override\")] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    clearItem = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        this.props.gridLine.removeGridLine(this.props.id);\r\n        this.props.snap.removeSnap(this.props.id);\r\n        this.state.selected && this.props.select.updateResizePanes();\r\n        this.state.selected && this.props.select.updateHelpSizeLines();\r\n        this.state.selected && this.props.select.setInspector();\r\n        if (this.state.selected)\r\n            this.props.select.selectedItem = false;\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.clearItem();\r\n            }\r\n        });\r\n    };\r\n\r\n    getClearProps = (props, keepChildren) => {\r\n        delete props.breakpointmanager;\r\n        delete props.undoredo;\r\n        delete props.dragdrop;\r\n        delete props.select;\r\n        delete props.editor;\r\n        delete props.snap;\r\n        delete props.idMan;\r\n        delete props.input;\r\n        delete props.copyMan;\r\n        delete props.anchorMan;\r\n        delete props.aglRef;\r\n        delete props.parent;\r\n        delete props.window;\r\n        delete props.document;\r\n        delete props.viewRef;\r\n        delete props.aglComponent;\r\n        if (!keepChildren)\r\n            delete props.children;\r\n        delete props.allChildRefs;\r\n        delete props.gridLine;\r\n        delete props.page;\r\n        delete props.gridEditorRef;\r\n        delete props.onChildMounted;\r\n        delete props.filDataOnMount;\r\n\r\n        Object.keys(this.getAllOverrideProps(props)).forEach(key => {\r\n            delete props[key];\r\n        });\r\n\r\n        Object.keys(props).forEach(key => {\r\n            if (typeof props[key] === \"function\")\r\n                delete props[key];\r\n        });\r\n\r\n        return props;\r\n    };\r\n\r\n    removeChildElement = (childElement, callback) => {\r\n        if (this.hasOverride(\"removeChildElement\"))\r\n            return this.callOverride(\"removeChildElement\", childElement);\r\n\r\n        delete this.children[childElement.props.id];\r\n        delete this.allChildRefs[childElement.props.id];\r\n        delete this.props.griddata.savedChildren[childElement.props.id];\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n            this.updateLayout(callback);\r\n        }, 0);\r\n    };\r\n\r\n    // Can be remove carefully\r\n    hide = () => {\r\n        this.setState({hide: true});\r\n    };\r\n\r\n    // Can be remove carefully\r\n    show = () => {\r\n        this.setState({hide: false});\r\n    };\r\n\r\n    onMouseOver = (e, fromEnter) => {\r\n        if (!this.props.dragdrop.getDragging()) {\r\n            e.stopPropagation();\r\n\r\n            // if (this.getFromTempData(\"selected\"))\r\n            //     return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            this.setMouseOverForNonDragging(this);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n        } else {\r\n            if (this.props.isPage)\r\n                return;\r\n\r\n            if (this.props.dragdrop.getDragging().props.id === this.props.id)\r\n                return;\r\n\r\n            e.stopPropagation();\r\n\r\n            let rect = getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n            if (e.clientX < rect.x - 1 || e.clientX > (rect.x + rect.width) ||\r\n                e.clientY < rect.y - 1 || e.clientY > (rect.y + rect.height))\r\n                return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n\r\n            this.setMouseOver(this, {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            }, (draggingItem, mouseOver) => {\r\n                // on new parent state changed\r\n                draggingItem.toggleHelpLines(this);\r\n            });\r\n        }\r\n    };\r\n\r\n    setMouseOverForNonDragging = () => {\r\n        if (this.hasOverride(\"setMouseOverForNonDragging\"))\r\n            return this.callOverride(\"setMouseOverForNonDragging\");\r\n\r\n        this.props.dragdrop.setMouseOverForNonDragging(this);\r\n    };\r\n\r\n    setItemHover = (hover) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        if (hover)\r\n            this.props.select.updateHover(this, this.getSize(false));\r\n        else\r\n            this.props.select.updateHover(this, undefined, true);\r\n    };\r\n\r\n    onMouseEnter = (e) => {\r\n        if (this.hasOverride(\"onMouseEnter\"))\r\n            this.callOverride(\"onMouseEnter\", e);\r\n\r\n        this.onMouseOver(e, true);\r\n    };\r\n\r\n    onMouseOut = (e, outAllParent) => {\r\n        if (this.hasOverride(\"onMouseOut\"))\r\n            this.callOverride(\"onMouseOut\", e);\r\n\r\n        if (outAllParent && this.props.parent && this.props.parent.onMouseOut)\r\n            this.props.parent.onMouseOut(e);\r\n\r\n        this.setItemHover(false);\r\n    };\r\n\r\n    prepareRects = (forceRect, forceGridLines, callback, gridType) => {\r\n        if (this.hasOverride(\"prepareRects\"))\r\n            return this.callOverride(\"prepareRects\", forceRect, forceGridLines);\r\n\r\n        let rect = this.getSize(false, forceRect);\r\n\r\n        if (forceGridLines || !this.props.gridLine.isPrepared(this.props.id)) {\r\n            this.isEditor() && this.props.gridLine.prepareRects(this.props.id);\r\n        }\r\n\r\n        return rect;\r\n    };\r\n\r\n    onChildDrop = (child, newId, fixed, onNewChildMounted) => {\r\n        if (this.callOverride(\"onChildDrop\", child, newId, fixed, onNewChildMounted))\r\n            return;\r\n\r\n        let childRect = child.getSize(false);\r\n        let thisRect = this.getSize(false, true);\r\n\r\n        let calcResult, gridItemStyle, coordinates, newProps;\r\n\r\n        if (!newId) {\r\n            let relativeY = childRect.top - thisRect.top;\r\n            // if (fixed) {\r\n            //     // relativeY = childRect.top - this.props.breakpointmanager.getWindowHeight() / 8;\r\n            //     relativeY = childRect.top - thisRect.top;\r\n            // }\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                childRect.left - thisRect.left, relativeY, this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n        else\r\n        {\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                thisRect.width / 2 - childRect.width / 2,\r\n                thisRect.height / 2 - childRect.height / 2,\r\n                this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n\r\n        gridItemStyle = calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n        if (!newId) {\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                if (child.getFromData(\"style\").width !== \"auto\")\r\n                    child.setProps(\"width\", childRect.width, coordinates, undefined,\r\n                        this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                child.setProps(\"width\", \"auto\", undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                if (child.getFromData(\"style\").minHeight !== \"auto\")\r\n                    child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                        this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                if (child.getFromData(\"style\").height !== \"auto\")\r\n                    child.setProps(\"height\", childRect.height, coordinates, undefined,\r\n                        this.props.breakpointmanager.getHighestBpName());\r\n                if (child.getFromData(\"style\").minHeight !== \"auto\")\r\n                    child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                        this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        } else {\r\n            newProps = {...child.props};\r\n            newProps.griddata = cloneObject(newProps.griddata);\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, newProps.griddata, undefined,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            this.setTempData(\"selected\", true, newProps.griddata);\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                this.setProps(\"width\", childRect.width, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                this.setProps(\"width\", \"auto\", undefined, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                this.setProps(\"height\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        }\r\n\r\n        child.clearFromAllBp(\"style\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n        child.clearFromAllBp(\"gridItemStyle\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.addChild(child, newId, newProps, () => {\r\n            let newChild = this.allChildRefs[newId? newProps.id: child.props.id].current;\r\n            newChild.setGridItemStyle(gridItemStyle,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            if (!newId) {\r\n                newChild.state.selected && newChild.toggleHelpLines(this);\r\n            }\r\n\r\n        }, (agl) => {\r\n            window.requestAnimationFrame(() => {\r\n                this.invalidateSize(true, true, true);\r\n                window.requestAnimationFrame(() => {\r\n                    this.props.select.onScrollItem();\r\n                });\r\n            });\r\n            if (onNewChildMounted)\r\n                onNewChildMounted(agl);\r\n        }, fixed, undefined);\r\n    };\r\n\r\n    onChildLeave = (child, callback) => {\r\n        if (this.hasOverride(\"onChildLeave\"))\r\n            return this.callOverride(\"onChildLeave\", child);\r\n\r\n        this.removeChildElement(child, callback);\r\n        child.removeIdAndChildrenId();\r\n    };\r\n\r\n    removeIdAndChildrenId = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.removeIdAndChildrenId();\r\n            }\r\n        });\r\n    };\r\n\r\n    nonePointerEventForChildren = (parentDragging) => {\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onParentDragging(parentDragging);\r\n            }\r\n        });\r\n    };\r\n\r\n    onParentDragging = (parentDragging) => {\r\n        this.nonePointerEventForChildren(parentDragging);\r\n        if (!parentDragging) {\r\n            this.setRuntimeStyle();\r\n            return;\r\n        }\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.pointerEvents = \"none\";\r\n        this.setRuntimeStyle(runtimeStyle);\r\n    };\r\n\r\n    onDragStart = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDragStart\", e, group, callGroup))\r\n            return;\r\n\r\n        if (this.getFromTempData(\"dontMove\") || this.resizing || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        if (!group)\r\n            this.props.dragdrop.setDragging(this);\r\n\r\n        this.nonePointerEventForChildren(true);\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        if (!this.moveWithMouse) {\r\n            runtimeStyle.top = thisRect.top;\r\n            runtimeStyle.left = thisRect.left;\r\n        } else {\r\n            runtimeStyle.top = e.clientY - thisRect.height / 2;\r\n            runtimeStyle.left = e.clientX - thisRect.width / 2;\r\n        }\r\n\r\n        this.dragData = {\r\n            firstPos: {\r\n                top: runtimeStyle.top,\r\n                left: runtimeStyle.left\r\n            },\r\n            firstBoundaryPos: this.getBoundarySize() && {\r\n                top: this.moveWithMouse? e.clientX - thisRect.width / 2 : this.getBoundarySize().top,\r\n                left: this.moveWithMouse? e.clientY - thisRect.height / 2 : this.getBoundarySize().left\r\n            },\r\n            x: runtimeStyle.left,\r\n            y: runtimeStyle.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n        this.draggingStart = true;\r\n        this.setDraggingState(true, true, undefined, runtimeStyle);\r\n\r\n        this.props.select.updateMenu();\r\n        this.props.select.clearMiniMenu();\r\n\r\n        if (this.props.dragdrop.getMouseOverForNonDragging()) {\r\n            this.props.dragdrop.getMouseOverForNonDragging().onMouseOver(e);\r\n        }\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStart(e, this);\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.hasOverride(\"setMouseOver\"))\r\n            return this.callOverride(\"setMouseOver\", item, positionData, callback);\r\n\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    onDrag = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDrag\", e, group, callGroup))\r\n            return;\r\n\r\n        if (!this.props.parent.children[this.props.id]) {\r\n            return;\r\n        }\r\n        if (this.resizing || !this.state.draggingStart) {\r\n            if (this.props.dragdrop.getDragging()) {\r\n                this.props.dragdrop.setDragging();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.dragData.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.dragData.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.top = this.dragData.y;\r\n        runtimeStyle.left = this.dragData.x;\r\n\r\n        // For snaps\r\n        let boundarySize = this.getBoundarySize();\r\n        if (boundarySize)\r\n            boundarySize = {\r\n                top: this.dragData.firstBoundaryPos.top + (this.dragData.y - this.dragData.firstPos.top),\r\n                left: this.dragData.firstBoundaryPos.left + (this.dragData.x - this.dragData.firstPos.left),\r\n                width: boundarySize.width,\r\n                height: boundarySize.height\r\n            };\r\n        else\r\n            boundarySize = runtimeStyle;\r\n\r\n        if (!isFixed(this) && !group)\r\n            this.checkSnapOnDrag(runtimeStyle, boundarySize);\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.props.select.updateResizePanes(this, runtimeStyle);\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                runtimeStyle.top,\r\n                runtimeStyle.left,\r\n                window.innerHeight - runtimeStyle.top - runtimeStyle.height,\r\n                window.innerWidth - runtimeStyle.left - runtimeStyle.width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                cloneObject(runtimeStyle), this.state.dragging);\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDrag(e, this);\r\n    };\r\n\r\n    updateGridLines = (top, left, bottom, right, gridType) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        if (!this.getFromTempData(\"isContainer\"))\r\n            return;\r\n\r\n        let grid = this.getFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top,\r\n                left,\r\n                bottom,\r\n                right,\r\n            }\r\n        )\r\n    };\r\n\r\n    onDragStop = (e, group, callGroup) => {\r\n        if (this.hasOverride(\"onDragStop\"))\r\n            return this.callOverride(\"onDragStop\", e, group, callGroup);\r\n\r\n        if (this.resizing || !this.state.draggingStart || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStop(e, this);\r\n\r\n        if (group)\r\n            // this.props.parent.prepareRects(true);\r\n            this.props.parent.prepareRects();\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n\r\n        this.props.snap.drawSnap();\r\n        this.getSize(true, true);\r\n        if (group || !this.props.dragdrop.setDraggingStop()){\r\n            let parentRect = this.props.parent.getSize(false);\r\n            this.setPosition(\r\n                group,\r\n                left - parentRect.left,\r\n                top - parentRect.top,\r\n                this.dragData.firstPos.left - parentRect.left,\r\n                this.dragData.firstPos.top - parentRect.top, width, height, parentRect);\r\n            return;\r\n        } else if (!group) {\r\n            this.dropped = true;\r\n        }\r\n\r\n        // this.setState({dragging: false, draggingStart: false});\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                top, left,\r\n                window.innerHeight - top - height,\r\n                window.innerWidth - left - width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateMiniMenu();\r\n    };\r\n\r\n    setPosition = (group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                   width, height, parentRect, fromUndoRedo) => {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let redoData = [group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect];\r\n            let undoData = [group, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                width, height, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setPosition\"))\r\n            return this.callOverride(\"setPosition\",\r\n                group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect, fromUndoRedo);\r\n\r\n        let {gridItemStyle, coordinates} = this.calculateGridItem(relativeX, relativeY, this.props.parent,\r\n            width, height, parentRect);\r\n\r\n        // TODO uncomment if bug found\r\n        // if (gridItemStyle.justifySelf !== \"stretch\"){\r\n        //     this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n        // } else {\r\n        //     this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n        // }\r\n        // if (this.getCompositeFromData(\"style\").height === \"auto\")\r\n        //     this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        // else {\r\n        //     this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n        //     this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        // }\r\n\r\n        this.setGridItemStyle(gridItemStyle);\r\n\r\n        this.nonePointerEventForChildren(false);\r\n        this.setRuntimeStyle();\r\n        // this.setState({dragging: false, draggingStart: false}, () => {\r\n        //     this.addToSnap();\r\n        // });\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                {top, left, width, height}, this.state.dragging);\r\n\r\n        this.dropped = false;\r\n\r\n        // this.props.select.updateSize();\r\n        // this.props.select.updateResizePanes(this, {top, left, width, height});\r\n        // this.props.select.updateMiniMenu();\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.invalidateSize(false, true, true);\r\n    };\r\n\r\n    setDraggingState = (dragging, draggingStart, callback, rect) => {\r\n        let fakeStyle = cloneObject({\r\n            ...this.getCompositeFromData(\"style\"),\r\n            ...this.getCompositeFromData(\"gridItemStyle\"),\r\n        });\r\n        this.setState({dragging, draggingStart, fakeStyle}, callback);\r\n    };\r\n\r\n    checkSnapOnDrag = (runtimeStyle, boundarySize) => {\r\n        if (this.callOverride(\"checkSnapOnDrag\", runtimeStyle, boundarySize))\r\n            return;\r\n\r\n        let snapDelta1 = this.getSnapDelta(\r\n            boundarySize.top, boundarySize.left);\r\n        let snapDelta2 = this.getSnapDelta(\r\n            boundarySize.top + boundarySize.height/2, boundarySize.left + boundarySize.width/2);\r\n        let snapDelta3 = this.getSnapDelta(\r\n            boundarySize.top + boundarySize.height, boundarySize.left + boundarySize.width);\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2.snapV? snapDelta2.deltaX:\r\n                snapDelta1.snapV? snapDelta1.deltaX:\r\n                    snapDelta3.snapV? snapDelta3.deltaX: 0,\r\n            deltaY: snapDelta2.snapH? snapDelta2.deltaY:\r\n                snapDelta1.snapH? snapDelta1.deltaY:\r\n                    snapDelta3.snapH? snapDelta3.deltaY: 0,\r\n            snapH: (snapDelta2.snapH || snapDelta1.snapH) || snapDelta3.snapH,\r\n            snapV: (snapDelta2.snapV || snapDelta1.snapV) || snapDelta3.snapV\r\n        };\r\n\r\n        runtimeStyle.left += snapDelta.deltaX;\r\n        runtimeStyle.top += snapDelta.deltaY;\r\n        if (boundarySize !== runtimeStyle) {\r\n            boundarySize.left += snapDelta.deltaX;\r\n            boundarySize.top += snapDelta.deltaY;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: boundarySize.left,\r\n            p2: boundarySize.left + boundarySize.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: boundarySize.top,\r\n            p2: boundarySize.top + boundarySize.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    getSnapDelta = (top, left) => {\r\n        let parentGridLines = [];\r\n        if (this.props.parent) {\r\n            if (this.resizing) {\r\n                parentGridLines = this.props.parent.getGridLineSnaps();\r\n            } else {\r\n                // dragging\r\n                if (this.props.dragdrop.mouseOver &&\r\n                    this.props.gridLine.hasGridLine(this.props.dragdrop.mouseOver.props.id))\r\n                    parentGridLines = this.props.dragdrop.mouseOver &&\r\n                        this.props.dragdrop.mouseOver.getGridLineSnaps();\r\n            }\r\n        }\r\n\r\n        let {snapH, snapV} =\r\n            this.props.snap.checkSnap(top, left, this.props.id, parentGridLines);\r\n\r\n        let deltaX = 0;\r\n        let deltaY = 0;\r\n        if (snapH) {\r\n            deltaY = snapH.value - top;\r\n        }\r\n        if (snapV) {\r\n            deltaX = snapV.value - left;\r\n        }\r\n\r\n        return {\r\n            deltaX, deltaY, snapH, snapV\r\n        }\r\n    };\r\n\r\n    setDocks = (top, left, bottom, right, auto, breakpointName, dontCalculate) => {\r\n        this.setDataInBreakpoint(\"docks\", {top, left, bottom, right}, undefined, breakpointName);\r\n        this.setTempData(\"autoDock\", auto);\r\n\r\n        if (!this.props.parent || dontCalculate)\r\n            return;\r\n\r\n        this.props.parent.prepareRects();\r\n        let thisRect = this.getSize(false);\r\n        let parentRect = this.props.parent.getSize(false);\r\n        let {gridItemStyle} =\r\n            this.calculateGridItem(\r\n                thisRect.left - parentRect.left,\r\n                thisRect.top - parentRect.top,\r\n                this.props.parent,\r\n                thisRect.width,\r\n                thisRect.height,\r\n                parentRect\r\n            );\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width === \"auto\")\r\n        {\r\n            this.setStyleParam(\"width\", `${this.getSize(false).width}px`, undefined, undefined, true);\r\n        }\r\n        else if (gridItemStyle.justifySelf === \"stretch\")\r\n        {\r\n            this.setStyleParam(\"width\", \"auto\", undefined, undefined, true);\r\n        }\r\n    };\r\n\r\n    getDocks = () => {\r\n        return this.getFromData(\"docks\");\r\n    };\r\n\r\n    getBaseDocks = () => {\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return {\r\n            top: gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\",\r\n            bottom: gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\",\r\n            left: gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\",\r\n            right: gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\",\r\n        }\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        return this.props.select.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    calculateGridItem = (relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateGridItem\", relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = this.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let gridArea, coordinates;\r\n        if (isFixed(this)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.height,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.width\r\n            }\r\n        } else {\r\n            let result = this.calculateGridArea(\r\n                parentRect.left + relativeX,\r\n                parentRect.top + relativeY,\r\n                width,\r\n                height,\r\n                parent,\r\n                parentRect\r\n            );\r\n            gridArea = result.gridArea;\r\n            coordinates = result.coordinates;\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        this.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let oldGridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let gridItemStyle = cloneObject(oldGridItemStyle);\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(this);\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        let cx2IsLastLine = gridArea.x2 === xLineRef.length || isFixed(this);\r\n\r\n        let widthForPercent = coordinates.cx2 - coordinates.cx1/* + (cx2IsLastLine?1:0)*/;\r\n        let heightForPercent = coordinates.cy2 - coordinates.cy1/* + (cy2IsLastLine?1:0)*/;\r\n\r\n        let autoDock = this.getFromTempData(\"autoDock\");\r\n        let docks = this.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2) && relativeY >= 0) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                widthForPercent,\r\n                \"px\");\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                `${(relativeY - coordinates.cy1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginTop) || \"px\");\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginLeft) || \"%\");\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginBottom) || \"px\");\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginRight) || \"%\");\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        gridItemStyle.widthForPercent = widthForPercent;\r\n        gridItemStyle.heightForPercent = heightForPercent;\r\n\r\n        /*if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // this is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n            `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    getPxOrPcOrValue = (value, parentValue, unit) => {\r\n        if (unit === \"px\") {\r\n            return `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            return `${parseFloat(value) / parentValue * 100}%`;\r\n        } else {\r\n            return value\r\n        }\r\n    };\r\n\r\n    calculateChildGridItem = (child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateChildGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateChildGridItem\",child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        if (isFixed(child)) {\r\n            if (relativeY < 0) relativeY = 0;\r\n            if (relativeY > parentRect.scrollHeightMinusPadding - height)\r\n                relativeY = parentRect.scrollHeightMinusPadding - height;\r\n            if (relativeX < 0) relativeX = 0;\r\n            if (relativeX > parentRect.scrollWidthMinusPadding - width)\r\n                relativeX = parentRect.scrollWidthMinusPadding - width;\r\n        }\r\n\r\n        let gridArea, coordinates;\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.height,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.width\r\n            }\r\n        } else {\r\n            let result = this.calculateGridArea(\r\n                parentRect.left + relativeX,\r\n                parentRect.top + relativeY,\r\n                width,\r\n                height,\r\n                parent,\r\n                parentRect\r\n            );\r\n            gridArea = result.gridArea;\r\n            coordinates = result.coordinates;\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let oldGridItemStyle = child.getCompositeFromData(\"gridItemStyle\");\r\n        let gridItemStyle = cloneObject(oldGridItemStyle);\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        let cx2IsLastLine = gridArea.x2 === xLineRef.length || isFixed(child);\r\n\r\n        let widthForPercent = coordinates.cx2 - coordinates.cx1 + (cx2IsLastLine?1:0);\r\n        let heightForPercent = coordinates.cy2 - coordinates.cy1 + (cy2IsLastLine?1:0);\r\n\r\n        let autoDock = child.getFromTempData(\"autoDock\");\r\n        let docks = child.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2) && relativeY >= 0) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / widthForPercent * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                widthForPercent,\r\n                \"px\");\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeY - coordinates.cy1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginTop) || \"px\");\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginLeft) || \"%\");\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginBottom) || \"px\");\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    widthForPercent,\r\n                    this.getUnit(oldGridItemStyle.marginRight) || \"%\");\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        gridItemStyle.widthForPercent = widthForPercent;\r\n        gridItemStyle.heightForPercent = heightForPercent;\r\n\r\n        /*\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n                `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    coordinateToRelative = (coordinates, parentRect) => {\r\n        coordinates.cx1 -= parentRect.left;\r\n        coordinates.cx2 -= parentRect.left;\r\n        coordinates.cy1 -= parentRect.top;\r\n        coordinates.cy2 -= parentRect.top;\r\n    };\r\n\r\n    coordinateToAbsolute = (coordinates, parentRect) => {\r\n        coordinates.cx1 += parentRect.left;\r\n        coordinates.cx2 += parentRect.left;\r\n        coordinates.cy1 += parentRect.top;\r\n        coordinates.cy2 += parentRect.top;\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        } else {\r\n            return \"px\";\r\n        }\r\n    };\r\n\r\n    getTopLeft = (force) => {\r\n        let size = this.getSize(false, force);\r\n        return {\r\n            top: size.top,\r\n            left: size.left\r\n        }\r\n    };\r\n\r\n    pageResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n\r\n        this.resizing = true;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.width = this.getSize().x;\r\n        runtimeStyle.height = this.getSize().y;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstLeft: this.getSize().left,\r\n            top: this.getSize().top,\r\n            left: this.getSize().left\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        this.isEditor() && this.props.select.activateHover(false);\r\n\r\n        if (this.props.onPageResizeStart)\r\n            this.props.onPageResizeStart();\r\n\r\n        window.requestAnimationFrame(this.pageResizeCalculate);\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResizeStart\", e, dir, delta, group))\r\n            return;\r\n\r\n        if (this.resizing)\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        this.resizing = true;\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.maxWidth = \"unset\";\r\n        runtimeStyle.maxHeight = \"unset\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        runtimeStyle.top = thisRect.top;\r\n        runtimeStyle.left = thisRect.left;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstY: runtimeStyle.height,\r\n            firstTop: runtimeStyle.top,\r\n            firstLeft: runtimeStyle.left,\r\n            lastWidth: runtimeStyle.width,\r\n            lastHeight: runtimeStyle.height,\r\n            firstBoundaryWidth: this.getBoundarySize() && this.getBoundarySize().width,\r\n            firstBoundaryHeight: this.getBoundarySize() && this.getBoundarySize().height,\r\n            firstBoundaryTop: this.getBoundarySize() && this.getBoundarySize().top,\r\n            firstBoundaryLeft: this.getBoundarySize() && this.getBoundarySize().left\r\n        };\r\n\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        this.props.select.clearMiniMenu();\r\n        this.props.select.activateHover(false);\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    pageResize = (e, dir, delta) => {\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let deltaX = delta.x;\r\n        let minWidth = this.props.breakpointmanager.getMinWidth();\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= (-deltaX* 2 + minWidth))\r\n                deltaX = -(this.resizeData.firstX - minWidth) / 2;\r\n\r\n            runtimeStyle.width = this.resizeData.firstX + deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft - deltaX;\r\n            if (this.resizeData.firstLeft - deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= (deltaX * 2 + minWidth))\r\n                deltaX = (this.resizeData.firstX - minWidth) / 2;\r\n            runtimeStyle.width = this.resizeData.firstX - deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft + deltaX;\r\n            if (this.resizeData.firstLeft + deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n\r\n        this.updateGridLines(\r\n            this.resizeData.top,\r\n            this.resizeData.left,\r\n            window.innerHeight - this.resizeData.top - runtimeStyle.height,\r\n            window.innerWidth - this.resizeData.left - runtimeStyle.width,\r\n            \"A\"\r\n        );\r\n\r\n        this.updatePageAdjustments();\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n        };\r\n    };\r\n\r\n    updatePageAdjustments = () => {\r\n        this.backContainerRef.current.updateAdjustments();\r\n    };\r\n\r\n    pageResizeCalculate = () => {\r\n        if (this.callOverride(\"pageResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.pageResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle} = this.resizeData.onResizeData;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        if (this.props.onPageResize) {\r\n            this.props.onPageResize(runtimeStyle.width, this);\r\n        }\r\n\r\n        window.requestAnimationFrame(this.pageResizeCalculate);\r\n    };\r\n\r\n    onResize = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResize\", e, dir, delta, group))\r\n            return;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let degree = (this.getCompositeFromData(\"transform\") || {}).rotateDegree || 0;\r\n\r\n        let finalDelta = getResizeDelta(degree, dir, delta);\r\n        runtimeStyle.left = this.resizeData.firstLeft + finalDelta.left;\r\n        runtimeStyle.top = this.resizeData.firstTop + finalDelta.top;\r\n        runtimeStyle.width = this.resizeData.firstX + finalDelta.width;\r\n        runtimeStyle.height = this.resizeData.firstY + finalDelta.height;\r\n\r\n        // For snaps\r\n        let boundarySize = this.getBoundarySize();\r\n\r\n        if (!group && !boundarySize)\r\n            this.checkSnapOnResize(runtimeStyle, dir, this.resizeData);\r\n        // this.checkSnapOnResize(rect, dir, this.resizeData);\r\n\r\n        let rect = {\r\n            top: runtimeStyle.top,\r\n            left: runtimeStyle.left,\r\n            width: runtimeStyle.width,\r\n            height: runtimeStyle.height\r\n        };\r\n\r\n        this.props.select.updateResizePanes(this, rect);\r\n\r\n        if (!group)\r\n            this.setResizeHelpData({\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                width: (dir.includes('w') || dir.includes('e')) && rect.width,\r\n                height: (dir.includes('n') || dir.includes('s')) && rect.height,\r\n            });\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                rect.top,\r\n                rect.left,\r\n                window.innerHeight - rect.top - rect.height,\r\n                window.innerWidth - rect.left - rect.width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n            rect, this.state.dragging);\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n        };\r\n    };\r\n\r\n    onResizeCalculate = () => {\r\n        if (this.callOverride(\"onResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.onResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle} = this.resizeData.onResizeData;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    setResizeHelpData = (resizeHelpData) => {\r\n        this.setState({resizeHelpData})\r\n    };\r\n\r\n    pageResizeStop = (e, dir, delta) => {\r\n        let {width, height} = this.state.runtimeStyle;\r\n        this.isEditor() && this.props.select.activateHover(true);\r\n        this.setPageSize(this.resizeData.top, this.resizeData.left, width, height);\r\n    };\r\n\r\n    setPageSize = (top, left, width, height) => {\r\n        this.setProps(\"width\", width, undefined, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.setRuntimeStyle();\r\n        this.invalidateSize();\r\n\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.resizing = false;\r\n\r\n        this.updateGridLines(\r\n            top, left,\r\n            window.innerHeight - top - height,\r\n            window.innerWidth - left - width,\r\n            \"A\"\r\n        );\r\n\r\n        this.isEditor() && this.props.select.onScrollItem(this);\r\n\r\n        this.prepareRects();\r\n\r\n        if (this.props.onPageResizeStop)\r\n            this.props.onPageResizeStop(width, this);\r\n\r\n        this.resizeData = undefined;\r\n    };\r\n\r\n    setPageSizeWidth = (width) => {\r\n        this.setProps(\"width\", width, undefined, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.invalidateSize();\r\n\r\n        this.addToSnap();\r\n\r\n        let rect = this.getSize(false);\r\n        let minWidth = this.props.breakpointmanager.getMinWidth();\r\n\r\n        if (width < minWidth)\r\n            width = minWidth;\r\n\r\n        let deltaX = width - rect.width;\r\n        let firstLeft = rect.left;\r\n        let left = firstLeft + deltaX;\r\n        if (left < 50)\r\n            left = 50;\r\n\r\n        let top = rect.top;\r\n\r\n        this.updateGridLines(\r\n            top, left,\r\n            window.innerHeight - top - rect.height,\r\n            window.innerWidth - left - width,\r\n            \"A\"\r\n        );\r\n\r\n        this.isEditor() && this.props.select.onScrollItem(this);\r\n\r\n        this.prepareRects();\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta, group) => {\r\n        if (this.hasOverride(\"onResizeStop\"))\r\n            return this.callOverride(\"onResizeStop\", e, dir, delta, group);\r\n        this.resizing = false;\r\n\r\n        if (this.props.onItemPreResizeStop) {\r\n            this.props.onItemPreResizeStop(this, e, dir, delta, this.state.runtimeStyle);\r\n        }\r\n        this.getSize(true, true);\r\n\r\n        if (group)\r\n            this.props.parent.prepareRects();\r\n        // this.props.parent.prepareRects(true);\r\n\r\n        let parentRect = this.props.parent.getSize(false);\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n        // width = this.resizeData.lastWidth;\r\n        // height = this.resizeData.lastHeight;\r\n        this.setSize(\r\n            dir, delta, group,\r\n            left - parentRect.left,\r\n            top - parentRect.top, width, height,\r\n            this.resizeData.firstLeft - parentRect.left,\r\n            this.resizeData.firstTop - parentRect.top,\r\n            this.resizeData.firstX,\r\n            this.resizeData.firstY, parentRect\r\n        );\r\n        this.props.select.updateMiniMenu();\r\n        this.props.select.activateHover(true);\r\n    };\r\n\r\n    setSize = (dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n               firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo) =>\r\n    {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let redoData = [dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect];\r\n            let undoData = [dir, delta, group, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, undefined,\r\n                undefined, undefined, undefined, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setSize\"))\r\n            return this.callOverride(\"setSize\",\r\n                dir, delta, group, relativeX, relativeY, height, width, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo);\r\n\r\n        let gridItemStyle, coordinates;\r\n        let calcResult = this.calculateGridItem(relativeX, relativeY, this.props.parent, width, height);\r\n\r\n        gridItemStyle = this.props.autoConstraintsOff?  this.getCompositeFromData(\"gridItemStyle\"):\r\n            calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n\r\n        if (dir.includes('e') || dir.includes('w')) {\r\n            if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width !== \"auto\")\r\n                this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n            else\r\n                this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n\r\n            if (this.getCompositeFromData(\"style\").minWidth) {\r\n                this.setProps(\"minWidth\", width, coordinates, undefined, undefined, true);\r\n            }\r\n            if (this.getCompositeFromData(\"style\").maxWidth) {\r\n                this.setProps(\"maxWidth\", width, coordinates, undefined, undefined, true);\r\n            }\r\n        }\r\n\r\n        if (dir.includes('s') || dir.includes('n')) {\r\n            if (this.getCompositeFromData(\"style\").height !== \"auto\") {\r\n                this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n            }\r\n            if (!this.getFromTempData(\"isVerticalSection\")) {\r\n                if (this.getCompositeFromData(\"style\").minHeight) {\r\n                    this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n                }\r\n                if (this.getCompositeFromData(\"style\").maxHeight) {\r\n                    this.setProps(\"maxHeight\", height, coordinates, undefined, undefined, true);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!this.getFromTempData(\"isSection\"))\r\n            this.setGridItemStyle(gridItemStyle);\r\n        this.setRuntimeStyle();\r\n        this.setResizeHelpData();\r\n\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.props.snap.drawSnap();\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                this.getSize(false).top, this.getSize(false).left,\r\n                window.innerHeight - this.getSize(false).top - height,\r\n                window.innerWidth - this.getSize(false).left - width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                this.getSize(false), this.state.dragging);\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.resizeData = undefined;\r\n\r\n        this.invalidateSize(false, true, true);\r\n    };\r\n\r\n    checkSnapOnResize = (runtimeStyle, dir, resizeData) => {\r\n        if (this.callOverride(\"checkSnapOnResize\", runtimeStyle, dir, resizeData))\r\n            return;\r\n\r\n        let snapDelta1, snapDelta2;\r\n        if (dir.includes(\"n\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"s\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top + runtimeStyle.height, runtimeStyle.left);\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"e\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left + runtimeStyle.width);\r\n        }\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2? snapDelta2.deltaX: 0,\r\n            deltaY: snapDelta1? snapDelta1.deltaY: 0,\r\n            snapH: snapDelta1 && snapDelta1.snapH,\r\n            snapV: snapDelta2 && snapDelta2.snapV\r\n        };\r\n\r\n        if (dir.includes(\"n\")) {\r\n            runtimeStyle.height -= snapDelta.deltaY;\r\n            runtimeStyle.top += snapDelta.deltaY;\r\n        } else if (dir.includes(\"s\")) {\r\n            runtimeStyle.height += snapDelta.deltaY;\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            runtimeStyle.width -= snapDelta.deltaX;\r\n            runtimeStyle.left += snapDelta.deltaX;\r\n        } else if (dir.includes(\"e\")) {\r\n            runtimeStyle.width += snapDelta.deltaX;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: runtimeStyle.left,\r\n            p2: runtimeStyle.left + runtimeStyle.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: runtimeStyle.top,\r\n            p2: runtimeStyle.top + runtimeStyle.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    setProps = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setProps\"))\r\n            return this.callOverride(\"setProps\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        if (prop === \"width\" || prop === \"height\" ||\r\n            prop === \"minWidth\" || prop === \"minHeight\" ||\r\n            prop === \"maxWidth\" || prop === \"maxHeight\")\r\n        {\r\n            this.setNewSize(prop, value, gridCoordinates, data, breakpointName, dontAddToSnap);\r\n        } else {\r\n            this.setDataInBreakpoint(prop, value, data, breakpointName);\r\n        }\r\n    };\r\n\r\n    setDataInBreakpoint = (prop, value, data, breakpointName) => {\r\n        this.props.breakpointmanager.setData(data || this.props.griddata, prop, value, breakpointName);\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setTempData = (prop, value, data) => {\r\n        let dataToWrite = data || this.props.griddata;\r\n        dataToWrite[prop] = value;\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getFromTempData = (prop, data) => {\r\n        let dataToRead = data || this.props.griddata;\r\n        return dataToRead[prop];\r\n    };\r\n\r\n    hasDataInBreakPoint = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .hasDataInBreakPoint(data || this.props.griddata, prop, breakpointName);\r\n    };\r\n\r\n    getFromData = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .getFromData(data || this.props.griddata, prop, breakpointName)\r\n    };\r\n\r\n    getCompositeFromData = (prop, data) => {\r\n        return this.props.breakpointmanager\r\n            .getCompositeFromData(data || this.props.griddata, prop, undefined)\r\n    };\r\n\r\n    setNewSize = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setNewSize\"))\r\n            return this.callOverride(\"setNewSize\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        let oldStyle = this.getCompositeFromData(\"style\", data, breakpointName);\r\n        let oldValue = oldStyle && oldStyle[prop];\r\n\r\n        if (value === undefined) {\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        if (!oldValue || (!this.isPercent(oldValue) && !this.isViewRatio(oldValue)) ||\r\n            value === \"auto\" || isNaN(value)) {\r\n            if (!isNaN(value)) {\r\n                value+=\"px\";\r\n            }\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        if (isNaN(value) && value.includes('px'))\r\n            value = parseFloat(value.replace('px', ''));\r\n\r\n        if (this.isPercent(oldValue)) {\r\n            let parentRect = {\r\n                width: gridCoordinates? (gridCoordinates.cx2 - gridCoordinates.cx1): window.innerWidth,\r\n                height: gridCoordinates?(gridCoordinates.cy2 - gridCoordinates.cy1): window.innerHeight\r\n            };\r\n            let newValue = (value / parentRect[this.getParentProps(prop)] * 100).toString() + \"%\";\r\n            this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n        } else if (this.isViewRatio(oldValue)) {\r\n            let parentValue;\r\n            let postFix;\r\n            if (oldValue.includes('vh')) {\r\n                parentValue = this.props.breakpointmanager.getWindowHeight();\r\n                postFix = 'vh'\r\n            }\r\n            if (oldValue.includes('vw')) {\r\n                parentValue = this.props.breakpointmanager.getWindowWidth();\r\n                postFix = 'vw'\r\n            }\r\n            let newValue = (value / parentValue * 100).toString() + postFix;\r\n            newValue = getViewRatioStyle(newValue);\r\n            this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n        }\r\n    };\r\n\r\n    getParentProps = (prop) => {\r\n        if (prop === \"width\" ||\r\n            prop === \"minWidth\" ||\r\n            prop === \"maxWidth\")\r\n        {\r\n            return \"width\";\r\n        }\r\n\r\n        return \"height\";\r\n    };\r\n\r\n    isPercent = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"%\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    isViewRatio = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"vh\") || value.includes(\"vw\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setRuntimeStyle = (newRuntimeStyle, animationCss) => {\r\n        if (this.callOverride(\"setRuntimeStyle\", newRuntimeStyle))\r\n            return;\r\n\r\n        let runtimeStyle = newRuntimeStyle && {...newRuntimeStyle};\r\n        this.setState({runtimeStyle, animationCss});\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getGridItemStyleId = () => {\r\n        return `style_grid_item_${this.props.id}`;\r\n    };\r\n\r\n    setGridItemStyle = (newGridItemStyle, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setGridItemStyle\", newGridItemStyle, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let gridItemStyle = {...newGridItemStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, undefined, breakpointName);\r\n\r\n        let styleNode = document.getElementById(this.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getCompositeFromData(\"gridItemStyle\"),\r\n                this.getGridItemStyleId(), this.getGridItemStyleId(), this);\r\n        } else {\r\n            updateStyle(styleNode, this.getCompositeFromData(\"gridItemStyle\"), this.getGridItemStyleId());\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setGridArea = (gridArea, breakpointName) => {\r\n        if (this.callOverride(\"setGridArea\", gridArea))\r\n            return;\r\n\r\n        let gridItemStyle = this.getFromData(\"gridItemStyle\");\r\n        gridItemStyle.gridArea = gridArea;\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n    };\r\n\r\n    getGridArea = () => {\r\n        if (this.callOverride(\"getGridArea\"))\r\n            return;\r\n\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return gridItemStyle.gridArea;\r\n    };\r\n\r\n    setStyleParam = (param, value, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setStyleParam\"))\r\n            return this.callOverride(\"setStyleParam\", param, value, data, breakpointName);\r\n\r\n        let style = this.hasDataInBreakPoint(\"style\", data, breakpointName) || {};\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        this.setStyle(style, data, breakpointName, undefined, dontAddToSnap);\r\n    };\r\n\r\n    getStyleId = () => {\r\n        return `style_${this.props.id}`;\r\n    };\r\n\r\n    getDesignStyleId = () => {\r\n        return `style_design_${this.props.id}`;\r\n    };\r\n\r\n    setDesignStyle = (newDesignStyle, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setDesignStyle\", newDesignStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let designStyle = {...newDesignStyle};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"designStyle\", designStyle, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let designStyleNode = document.getElementById(this.getDesignStyleId());\r\n\r\n            if (!designStyleNode) {\r\n                appendStyle(this.getCompositeFromData(\"designStyle\"),\r\n                    this.getDesignStyleId(), this.getDesignStyleId(), this);\r\n            } else {\r\n                updateStyle(designStyleNode, this.getCompositeFromData(\"designStyle\"), this.getDesignStyleId());\r\n            }\r\n\r\n            this.invalidateSize();\r\n            this.addToSnap();\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyleId = () => {\r\n        return `style-transform-${this.props.id}`;\r\n    };\r\n\r\n    setTransformStyle = (newTransform, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setTransformStyle\", newTransform, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let transform = {...newTransform};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"transform\", transform, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let transformStyleNode = document.getElementById(this.getTransformStyleId());\r\n\r\n            if (!transformStyleNode) {\r\n                appendStyle(this.getTransformStyle(),\r\n                    this.getTransformStyleId(), this.getTransformStyleId(), this);\r\n            } else {\r\n                updateStyle(transformStyleNode, this.getTransformStyle(), this.getTransformStyleId());\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyle = (compositeTransform) => {\r\n        if (!compositeTransform)\r\n            compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n\r\n        let rules = [];\r\n\r\n        // TODO add more rules\r\n        compositeTransform.rotateDegree && rules.push(`rotate(${compositeTransform.rotateDegree}deg)`);\r\n\r\n        return {transform: rules.join(' ')};\r\n    };\r\n\r\n    setStyle = (newStyle, data, breakpointName, dontOverride, dontAddToSnap) => {\r\n        if (this.callOverride(\"setStyle\", newStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let style = {...newStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"style\", style, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let styleNode = document.getElementById(this.getStyleId());\r\n\r\n            if (!styleNode) {\r\n                appendStyle(\r\n                    this.getCompositeFromData(\"style\"),\r\n                    this.getStyleId(), this.getStyleId(), this);\r\n            } else {\r\n                updateStyle(styleNode,\r\n                    this.getCompositeFromData(\"style\"),\r\n                    this.getStyleId());\r\n            }\r\n\r\n            if (!dontAddToSnap) {\r\n                this.invalidateSize();\r\n                this.addToSnap();\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    clearFromAllBp = (props, data, excludeBp) => {\r\n        let sortedBp = this.props.breakpointmanager.getSortedBreakPoints();\r\n        sortedBp.forEach( bp => {\r\n            if (excludeBp !== bp.name || !excludeBp.includes(bp.name))\r\n                this.setDataInBreakpoint(props, undefined, data, bp.name);\r\n        });\r\n    };\r\n\r\n    setGrid = (grid, callback, breakpointName) => {\r\n        if (this.callOverride(\"setGrid\", grid, callback, breakpointName))\r\n            return;\r\n\r\n        this.setDataInBreakpoint(\"grid\", grid, undefined, breakpointName);\r\n        this.setState({grid: grid}, () => {\r\n            if (this.props.gridLine.hasGridLine(this.props.id)) {\r\n                let size = this.getSize(false);\r\n                this.updateGridLines(\r\n                    size.top,\r\n                    size.left,\r\n                    size.top + size.clientHeight,\r\n                    size.left + size.clientWidth,\r\n                    this.props.gridLine.hasGridLine(this.props.id)\r\n                );\r\n            }\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    getGridLineRect = (ref, index, dir, item) => {\r\n        if (ref.current) {\r\n            return ref.current.rect;\r\n        }\r\n\r\n        let parentRect = item.props.parent && item.props.parent.getSize(false) || {\r\n            width: item.props.breakpointmanager.getWindowWidth()\r\n        };\r\n        let padding = cloneObject(item.getCompositeFromData(\"padding\")) || {};\r\n        ['top', 'left', 'bottom', 'right'].forEach(key => {\r\n            padding[key] = getPxValueFromCSSValue(padding[key], parentRect.width, item) || 0;\r\n        });\r\n\r\n        let thisRect = item.getSize(false);\r\n        if (dir === 'x') {\r\n            if (index === 0) {\r\n                return {\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left ,\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top,\r\n                    height: thisRect.scrollHeight - padding.top - padding.bottom,\r\n                    width: 1\r\n                }\r\n            } else {\r\n                return {\r\n                    left: thisRect.left - thisRect.scrollLeft + thisRect.scrollWidth - padding.right - 1,\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top,\r\n                    height: thisRect.scrollHeight - padding.top - padding.bottom,\r\n                    width: 1\r\n                }\r\n            }\r\n        } else {\r\n            if (index === 0) {\r\n                return {\r\n                    top: thisRect.top - thisRect.scrollTop + padding.top ,\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left,\r\n                    height: 1,\r\n                    width: thisRect.scrollWidth - padding.left - padding.right,\r\n                }\r\n            } else {\r\n                return {\r\n                    top: thisRect.top - thisRect.scrollTop + thisRect.scrollHeight - padding.bottom - 1,\r\n                    left: thisRect.left - thisRect.scrollLeft + padding.left,\r\n                    height: 1,\r\n                    width: thisRect.scrollWidth - padding.left - padding.right,\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getGridLineOfPoint = (left, top, parent, after = false, parentRect) => {\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false);\r\n        let x;\r\n        let cx;\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', parent);\r\n            if (left < rect.left || (after && left <= rect.left)) {\r\n                x = i;\r\n                if (!after) {\r\n                    if (xLineRef[i - 1]) {\r\n                        // rect = xLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = xLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(xLineRef[i - 1], i - 1, 'x', parent);\r\n                        cx = rect.left;\r\n                    } else {\r\n                        // cx = parentRect.left - parentRect.scrollLeft;\r\n                        cx = rect.left;\r\n                    }\r\n                } else {\r\n                    cx = rect.left;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (x === undefined) {\r\n            x = xLineRef.length;\r\n            // let rect = xLineRef[xLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = xLineRef[xLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(xLineRef[xLineRef.length - 1], xLineRef.length - 1, 'x', parent);\r\n            cx = rect.left;\r\n        }\r\n\r\n        let y;\r\n        let cy;\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let rect = yLineRef[i].current.getBoundingClientRect();\r\n            // let rect = yLineRef[i].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', parent);\r\n            if (top < rect.top || (after && top <= rect.top)) {\r\n                y = i;\r\n                if (!after) {\r\n                    if (yLineRef[i - 1]) {\r\n                        // rect = yLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = yLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(yLineRef[i - 1], i - 1, 'y', parent);\r\n                        cy = rect.top;\r\n                    } else {\r\n                        // cy = parentRect.top - parentRect.scrollTop;\r\n                        cy = rect.top;\r\n                    }\r\n                } else {\r\n                    cy = rect.top;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (y === undefined) {\r\n            y = yLineRef.length;\r\n            // let rect = yLineRef[yLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = yLineRef[yLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[yLineRef.length - 1], yLineRef.length - 1, 'y', parent);\r\n            cy = rect.top;\r\n        }\r\n\r\n        if (after) {\r\n            x++;\r\n            y++;\r\n        }\r\n\r\n        x = Math.max(1, x);\r\n        x = Math.min(xLineRef.length, x);\r\n        y = Math.max(1, y);\r\n        y = Math.min(yLineRef.length, y);\r\n\r\n        if (x === xLineRef.length)\r\n            cx++;\r\n        if (y === yLineRef.length)\r\n            cy++;\r\n\r\n        return {x, y, cx, cy};\r\n    };\r\n\r\n    calculateGridArea = (left, top, width, height, parent, parentRect) => {\r\n        if (!this.props.gridLine.hasGridLine(parent.props.id)) {\r\n            return {\r\n                gridArea: {x1: 1, y1: 1, x2: 2, y2: 2},\r\n                coordinates: {cx1: 0, cy1: 0, cx2: 0, cy2: 0}\r\n            }\r\n        }\r\n        let gridLine1 = this.getGridLineOfPoint(left, top, parent, false, parentRect);\r\n        let gridLine2 = this.getGridLineOfPoint(left + width, top + height, parent, true, parentRect);\r\n        return {\r\n            gridArea: {x1: gridLine1.x, y1: gridLine1.y, x2: gridLine2.x, y2: gridLine2.y},\r\n            coordinates: {cx1: gridLine1.cx, cy1: gridLine1.cy, cx2: gridLine2.cx, cy2: gridLine2.cy}\r\n        };\r\n    };\r\n\r\n    onMouseDown = (e, moveWithMouse) => {\r\n        if (!this.isEditor())\r\n            return;\r\n\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            this.moveWithMouse = moveWithMouse;\r\n            this.mouseMoved = {\r\n                deltaX: 0,\r\n                deltaY: 0,\r\n                lastClientX: e.clientX,\r\n                lastClientY: e.clientY,\r\n                startMillis: (new Date()).getTime()\r\n            };\r\n            window.addEventListener(\"mousemove\", this.onMouseMove);\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        } else if (isRightClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseMoved.deltaX += (e.clientX - this.mouseMoved.lastClientX);\r\n        this.mouseMoved.deltaY += (e.clientY - this.mouseMoved.lastClientY);\r\n        this.mouseMoved.lastClientX = e.clientX;\r\n        this.mouseMoved.lastClientY = e.clientY;\r\n\r\n        if (!this.moving) {\r\n            let currentMillis = new Date().getTime();\r\n            if (Math.abs(this.mouseMoved.deltaX) > 10 ||\r\n                Math.abs(this.mouseMoved.deltaY) > 10 ||\r\n                currentMillis - this.mouseMoved.startMillis > 500)\r\n            {\r\n                if (!this.state.groupSelected && this.getFromTempData(\"draggable\") && !this.state.selected) {\r\n                    this.onSelect(true);\r\n                }\r\n                this.moving = true;\r\n                this.canMove() && this.onDragStart(e, isGroupSelected(this), true);\r\n            }\r\n        } else {\r\n            this.canMove() && this.onDrag(e, isGroupSelected(this), true);\r\n        }\r\n    };\r\n\r\n    canMove = () => {\r\n        return (this.state.selected || this.state.groupSelected) && this.getFromTempData(\"draggable\");\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        delete this.moveWithMouse;\r\n\r\n        if (isRightClick(e)) {\r\n            this.onContextMenu(e);\r\n            this.mouseDown = false;\r\n            window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n            return;\r\n        }\r\n\r\n        let currentMillis = new Date().getTime();\r\n        if (!this.moving && currentMillis - this.mouseMoved.startMillis < 500) {\r\n            if (!this.dropped) {\r\n                e.stopPropagation();\r\n                this.onSelect(true, undefined, undefined, true);\r\n            } else {\r\n                this.dropped = false;\r\n            }\r\n        }\r\n\r\n        if (this.moving && this.canMove()) {\r\n            window.requestAnimationFrame(() => {\r\n                this.onDragStop(e, isGroupSelected(this), true);\r\n            });\r\n        }\r\n\r\n        this.moving = false;\r\n        this.mouseDown = false;\r\n\r\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\r\n        window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n    };\r\n\r\n    onSelect = (selected, callback, deselectParent, clicked, dontUpdateAdjustment) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        if (this.callOverride(\"onSelect\", selected, callback, deselectParent))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n        if (!this.props.isSelectable)\r\n            return;\r\n\r\n        if (selected) {\r\n            this.props.select.selectItem(this, clicked, dontUpdateAdjustment);\r\n            this.props.gridLine.removeGridLineByType(\"A\");\r\n            this.toggleGridLines(selected, undefined, \"A\");\r\n        } else {\r\n            this.props.onDeSelectListener && this.props.onDeSelectListener(this);\r\n            this.props.select.updateHelpSizeLines();\r\n        }\r\n\r\n        if (this.props.parent) {\r\n            if (selected || deselectParent)\r\n                this.props.parent.toggleGridLines(selected, () => {\r\n                    this.toggleHelpLines(selected && this.props.parent);\r\n                }, \"B\");\r\n        } else {\r\n            selected && this.props.gridLine.removeGridLineByType(\"B\");\r\n            this.props.select.updateHelpSizeLines();\r\n        }\r\n\r\n        this.setTempData(\"selected\", selected);\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        this.setState({selected, groupSelected: false}, () => {\r\n            selected && this.setItemHover(true);\r\n\r\n            this.props.editor.updateLayout();\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    toggleGridLines = (showGridLines, callback, gridType) => {\r\n        if (this.callOverride(\"toggleGridLines\", showGridLines, callback, gridType))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        if (!showGridLines) {\r\n            this.props.gridLine.removeGridLine(this.props.id);\r\n            this.updateLayout();\r\n            return;\r\n        }\r\n\r\n        if (!this.getFromTempData(\"isContainer\"))\r\n            return;\r\n\r\n        if (this.props.gridLine.hasGridLine(this.props.id, gridType)) {\r\n            if (callback)\r\n                callback();\r\n\r\n            this.updateLayout();\r\n\r\n            return;\r\n        }\r\n\r\n        let grid = this.getCompositeFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            },\r\n            () => {\r\n                if (callback)\r\n                    callback();\r\n\r\n                this.updateLayout();\r\n            }\r\n        );\r\n    };\r\n\r\n    toggleHelpLines = (helpLinesParent, callback) => {\r\n        if (this.callOverride(\"toggleHelpLines\", helpLinesParent, callback))\r\n            return;\r\n\r\n        if (this.mounted) {\r\n            this.setState({\r\n                helpLinesParent: helpLinesParent !== this && helpLinesParent\r\n            }, () => {\r\n                helpLinesParent &&\r\n                this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                    this.getSize(false), this.state.dragging);\r\n\r\n                if (callback)\r\n                    callback();\r\n            });\r\n        }\r\n    };\r\n\r\n    onScroll = (e) => {\r\n        console.log(\"onScroll\", this.props.id);\r\n        if (this.callOverride(\"onScroll\", e))\r\n            return;\r\n\r\n        this.isEditor() && this.invalidateSize(true, false, true);\r\n        this.isEditor() && this.props.select.updateParentsRect();\r\n        this.isEditor() && this.props.select.onScrollItem();\r\n        this.onScrollEnd(e);\r\n    };\r\n\r\n    onRootScroll = (e) => {\r\n        if (this.getFromTempData(\"isFixed\")) {\r\n            this.props.parent.forceScroll(e);\r\n        }\r\n    };\r\n\r\n    forceScroll = (e) => {\r\n        console.log(\"forceScroll\", this.props.id, this.rootDivRef.current.scrollTop, e.deltaY);\r\n\r\n        clearTimeout(this.scrollReset);\r\n\r\n        if (!this.targetScroll) this.targetScroll = {\r\n            top: this.rootDivRef.current.scrollTop\r\n        };\r\n\r\n        if (this.targetScroll.top < 0 && e.deltaY > 0)\r\n            this.targetScroll.top = 0;\r\n\r\n        let maxTop = this.rootDivRef.current.scrollHeight - this.getSize(false).height;\r\n        if (this.targetScroll.top > maxTop && e.deltaY < 0) {\r\n            this.targetScroll.top = maxTop;\r\n        }\r\n\r\n        this.targetScroll.top += e.deltaY;\r\n\r\n        this.rootDivRef.current.scrollTo({\r\n            top: this.targetScroll.top,\r\n            behavior: 'smooth'\r\n        });\r\n\r\n        this.scrollReset = setTimeout(() => {\r\n            this.targetScroll = {\r\n                top: this.rootDivRef.current.scrollTop\r\n            };\r\n        }, 500);\r\n    }\r\n\r\n    onScrollEnd = debounce((e) => {\r\n        if (this.callOverride(\"onScrollEnd\", e))\r\n            return;\r\n\r\n        this.isEditor() && this.invalidateSize();\r\n        this.isEditor() && this.addToSnap();\r\n    }, 500);\r\n\r\n    editGrid = () => {\r\n        this.props.gridEditorRef.current.editing(this);\r\n    };\r\n\r\n    updateGridEditor = () => {\r\n        this.props.gridEditorRef.current.update(this);\r\n    };\r\n\r\n    setAnchor = (anchor) => {\r\n        if (this.callOverride(\"setAnchor\", anchor))\r\n            return;\r\n\r\n        this.setTempData(\"anchor\", anchor);\r\n        this.updateLayout();\r\n    };\r\n\r\n    isEditor = () => {\r\n        return this.props.editor;\r\n    }\r\n\r\n    playAnimation = (disable) => {\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        if (!compositeDesign.animation || !compositeDesign.animation.name)\r\n            return;\r\n\r\n        if (this.getFromData(\"dontAnimate\"))\r\n            return;\r\n\r\n        // Component going to show animation, so add end listener for more action\r\n        let onAnimationEnd = DynamicAnimations[compositeDesign.animation.name].onAnimationEnd;\r\n\r\n        let stateChange = {\r\n            forceKey: \"animationReplay\",\r\n            showAnimation: true,\r\n            onAnimationEnd\r\n        };\r\n\r\n        if (disable) {\r\n            stateChange.disableVS = true;\r\n            this.setTempData(\"dontAnimate\", true);\r\n        }\r\n\r\n        this.isEditor() && this.props.select.activateHover(false);\r\n        this.isEditor() && this.props.select.activateResize(false);\r\n\r\n        this.setState(stateChange);\r\n    };\r\n\r\n    onAnimationEnd = () => {\r\n        this.setState({forceKey: undefined, showAnimation: undefined});\r\n        this.isEditor() && this.props.select.activateHover(true);\r\n        this.isEditor() && this.props.select.activateResize(true);\r\n    };\r\n\r\n    getCompositeAnimationCss = (compositeAnimation = {}) => {\r\n        if (!(compositeAnimation.name && this.state.forceKey && this.state.showAnimation))\r\n            return;\r\n\r\n        return DynamicAnimations[compositeAnimation.name]\r\n            .getAnimationCSS(this, compositeAnimation.options);\r\n    };\r\n\r\n    onContextMenu = (e) => {\r\n        if (!this.isEditor()) return;\r\n\r\n        e.preventDefault();\r\n        this.onSelect(true);\r\n        this.props.select.onContextMenu(e, this);\r\n    };\r\n\r\n    getContextMenu = () => {\r\n        if (this.hasOverride(\"getContextMenu\"))\r\n            return this.callOverride(\"getContextMenu\");\r\n    };\r\n\r\n    onDoubleClick = (e) => {\r\n        if (this.callOverride(\"onDoubleClick\", e))\r\n            return;\r\n    }\r\n\r\n    render () {\r\n        let {className, animationCss, as, editor, select, id, getStaticChildren,\r\n            isPage, page, getChildrenOverride, modifyContainerStyleOverride} = this.props;\r\n        let {selected, runtimeStyle, portalNodeId, disableVS, showAnimation, forceKey, grid,\r\n            draggingStart, showGridLines, resizeHelpData} = this.state;\r\n        let isContainer = this.props.griddata.isContainer;\r\n        let children = this.children;\r\n        let resizeData = this.resizeData;\r\n        let size = runtimeStyle || this.getSize(false);\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        let compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n        let compositeStyle = this.getCompositeFromData(\"style\");\r\n        let overflowData = this.getCompositeFromData(\"overflowData\");\r\n        let anchor = this.getFromTempData(\"anchor\");\r\n        let customStyle = this.getFromTempData(\"customStyle\") || {};\r\n        let selectAsParent = this.props.gridLine.hasGridLine(this.props.id, \"B\") !== undefined;\r\n\r\n        let classes = classNames(\r\n            \"AwesomeGridLayoutRoot\",\r\n            \"AwesomeGridLayoutGrid\",\r\n            className,\r\n            this.getDesignStyleId(),\r\n            this.getGridItemStyleId(),\r\n            this.getStyleId(),\r\n            this.getCompositeAnimationCss(compositeDesign.animation),\r\n            isPage && \"PageScrollBar\"\r\n        );\r\n\r\n        let holderClasses = classNames(\r\n            \"AwesomeGridLayoutHolder\",\r\n            this.getTransformStyleId(),\r\n        );\r\n\r\n        let TagAs = as || \"div\";\r\n\r\n        return (\r\n            <Portal nodeId={portalNodeId} disabled={!portalNodeId}>\r\n                <VisibilitySensorWrapper\r\n                    animation={compositeDesign.animation}\r\n                    editor={editor}\r\n                    playAnimation={this.playAnimation}\r\n                    select={select}\r\n                    disableVS={disableVS}\r\n                >\r\n                    {console.log(\"customStyle\", customStyle)}\r\n                        <TagAs\r\n                            onMouseDown={!showAnimation ? this.onMouseDown : undefined}\r\n                            onMouseOver={this.onMouseOver}\r\n                            onMouseEnter={this.onMouseEnter}\r\n                            onMouseOut={this.onMouseOut}\r\n                            onScroll={this.onRootScroll}\r\n                            onWheel={this.onRootScroll}\r\n                            onDoubleClick={this.onDoubleClick}\r\n                            id={id}\r\n                            className={classes}\r\n                            style={{\r\n                                ...runtimeStyle,\r\n                                ...(this.canMove() && {cursor: \"move\"}),\r\n                                // ...(!this.isEditor() && this.getFromTempData(\"isFixed\") && {pointerEvents: \"none\"}),\r\n                                ...(isPage && {overflowY: \"auto\", overflowX: \"hidden\"}),\r\n                                ...(overflowData.state === 'hide' && {\r\n                                    overflowY: 'hidden',\r\n                                    overflowX: 'hidden',\r\n                                }),\r\n                                ...(showAnimation && {\r\n                                    opacity: 0\r\n                                }),\r\n                                ...customStyle\r\n                            }}\r\n                            ref={this.rootDivRef}\r\n                            key={id}\r\n                            onAnimationEnd={this.onAnimationEnd}\r\n                        >\r\n                            {\r\n                                this.getFromTempData(\"pageResize\") &&\r\n                                !showAnimation &&\r\n                                <AdjustmentResizePage\r\n                                    id={id}\r\n                                    key={`${id}_resize`}\r\n                                    sides={['e','w']}\r\n                                    onResizeStart={this.pageResizeStart}\r\n                                    onResize={this.pageResize}\r\n                                    onResizeStop={this.pageResizeStop}\r\n                                    data={runtimeStyle || size}\r\n                                    top={(resizeData && resizeData.top) || (size && size.top)}\r\n                                    left={(resizeData && resizeData.left) || (size && size.left)}\r\n                                    width={(runtimeStyle && runtimeStyle.width) || (size && size.width)}\r\n                                    height={(runtimeStyle && runtimeStyle.height) || (size && size.height)}\r\n                                    draggingStart={draggingStart}\r\n                                    itemId={id}\r\n                                />\r\n                            }\r\n\r\n                            {\r\n                                selected && resizeHelpData &&\r\n                                !this.getFromTempData(\"pageResize\") &&\r\n                                !showAnimation &&\r\n                                !isGroupSelected(this) &&\r\n                                <AdjustmentHelpSize\r\n                                    resizeHelpData={resizeHelpData}\r\n                                />\r\n                            }\r\n\r\n                            {isPage && <div id={\"top\"}></div>}\r\n                            <ChildHolder\r\n                                className={holderClasses}\r\n                                key={forceKey || `${id}_container`}\r\n                                id={`${id}_child_holder`}\r\n                                disabled={Object.keys(compositeTransform).length > 0}\r\n                                transformRef={this.transformRef}\r\n                            >\r\n                                {\r\n                                    getStaticChildren && getStaticChildren()\r\n                                }\r\n\r\n                                <GridChildContainer\r\n                                    id={id}\r\n                                    key={`${id}_container`}\r\n                                    allChildren={children}\r\n                                    grid={grid}\r\n                                    overflowData={overflowData}\r\n                                    showGridLines={showGridLines}\r\n                                    aglStyle={compositeStyle}\r\n                                    overflowRef={this.overflowRef}\r\n                                    containerRef={this.containerRef}\r\n                                    show={isContainer}\r\n                                    onScroll={this.onScroll}\r\n                                    isPage={isPage}\r\n                                    editor={editor}\r\n                                    page={page}\r\n                                    ref={this.backContainerRef}\r\n                                    size={runtimeStyle || size}\r\n                                    getChildrenOverride={getChildrenOverride}\r\n                                    agl={this}\r\n                                    padding={this.getCompositeFromData(\"padding\")}\r\n                                    modifyContainerStyleOverride={modifyContainerStyleOverride}\r\n                                    selectAsParent={selectAsParent}\r\n                                    selected={selected}\r\n                                />\r\n                            </ChildHolder>\r\n                            {isPage && <div id={\"bottom\"}></div>}\r\n\r\n                            <AGLAnchor\r\n                                anchor={anchor}\r\n                            />\r\n\r\n                            {\r\n                                this.state.dragging && this.props.parent &&\r\n                                <Portal nodeId={this.state.portalNodeId ||\r\n                                    `${this.props.parent.props.id}_container`}\r\n                                >\r\n                                    <div\r\n                                        className={this.state.fakeStyle}\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            pointerEvents: \"none\",\r\n                                            ...this.state.fakeStyle\r\n                                        }}\r\n                                    />\r\n                                </Portal>\r\n                            }\r\n\r\n                        </TagAs>\r\n                </VisibilitySensorWrapper>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n\r\nAwesomeGridLayout2.defaultProps = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    childSize: {w: \"100%\", h: \"100%\"},\r\n    showSideResize: false,\r\n    isSelectable: true,\r\n    layoutType: \"free\", // free, grid\r\n    snap: {x: 1, y: 1},\r\n    dir: \"rtl\", // rtl, ltr,\r\n    compactType: \"vertical\", // none, vertical, horizontal\r\n    defaultGrid: {\r\n        x: 1,\r\n        y: 1,\r\n        gridTemplateRows: \"1fr\",\r\n        gridTemplateColumns: \"1fr\"\r\n    },\r\n    defaultStyle: {\r\n        width: \"50%\",\r\n        height: \"50%\",\r\n    },\r\n    defaultGridItemStyle: {\r\n        alignSelf: \"center\",\r\n        justifySelf: \"center\",\r\n        position: \"relative\",\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        gridArea: \"1/1/2/2\",\r\n    }\r\n};\r\n","import AwesomeGridLayout2 from \"../../AwesomeGridLayout2\";\r\nimport React from \"react\";\r\nimport {assignData, initGriddata} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AGLWrapper extends React.Component{\r\n    render() {\r\n        let griddata = this.props.aglRef.current && this.props.aglRef.current.props.griddata;\r\n        if (!griddata) griddata = this.props.griddata;\r\n        console.log(\"griddata.customStyle1\", this.props.griddata.customStyle)\r\n        console.log(\"griddata.customStyle2\", griddata.customStyle)\r\n        if (griddata && griddata.initialized) {\r\n            console.log(\"griddata.customStyle3\", griddata.customStyle)\r\n            if (!griddata.filDataOnMount) {\r\n                console.log(\"griddata.customStyle4\", griddata.customStyle)\r\n                griddata.filDataOnMount = true;\r\n                // griddata.fillWithData = true;\r\n                let bpData = this.props.data.bpData;\r\n                Object.keys(this.props.data).forEach(key => {\r\n                    if (key !== \"bpData\") {\r\n                        console.log(\"key\", key)\r\n                        griddata[key] = this.props.data[key];\r\n                    }\r\n                });\r\n                assignData(griddata.bpData[\"laptop\"], bpData);\r\n                console.log(\"griddata.customStyle5\", griddata.customStyle)\r\n            }\r\n        } else {\r\n            console.log(\"griddata.customStyle6\", griddata.customStyle)\r\n            griddata = assignData(this.props.griddata, this.props.data);\r\n            console.log(\"griddata.customStyle7\", griddata.customStyle)\r\n            initGriddata(griddata, this.props.breakpointmanager);\r\n            console.log(\"griddata.customStyle8\", griddata.customStyle)\r\n        }\r\n\r\n        console.log(\"griddata\", griddata)\r\n\r\n        return (\r\n            <AwesomeGridLayout2\r\n                className={this.props.className}\r\n                {...this.props}\r\n                ref={this.props.aglRef}\r\n                griddata={griddata}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class StackSpacerContainer extends React.PureComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n    }\r\n\r\n    updateSpacers = (spacers) => {\r\n        setTimeout(() => {\r\n            this.setState({spacers});\r\n        }, 0);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.state.spacers.map((spacer, index) => {\r\n                return <Portal nodeId={`${this.props.aglRef.current.props.id}_container`}\r\n                               key={index}\r\n                               document={this.props.document}\r\n                >\r\n                    {spacer}\r\n                </Portal>\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentMove extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        let rect = this.rootDivRef.current.getBoundingClientRect();\r\n        if (this.isLeftClick(e) && e.clientX >= rect.left && e.clientX <= rect.left + rect.width &&\r\n            e.clientY >= rect.top && e.clientY <= rect.top + rect.height) {\r\n            e.stopPropagation();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        } else {\r\n            if (this.props.onClick)\r\n                this.props.onClick(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.props.onDragStart(e);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.props.onDrag(e);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentMove\"\r\n                className=\"AdjustmentMoveRoot\"\r\n                ref={this.rootDivRef}\r\n                onPointerDown={this.onMouseDown}\r\n                style={{\r\n                    cursor: this.props.cursor || \"move\"\r\n                }}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\n\r\nexport default class StackSpacerResizer extends React.PureComponent{\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerResizerRoot\"\r\n            >\r\n                <AdjustmentMove\r\n                    onDragStart={this.props.onDragStart}\r\n                    onDrag={this.props.onDrag}\r\n                    onDragStop={this.props.onDragStop}\r\n                    cursor={this.props.cursor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\nimport StackSpacerResizer from \"./StackSpacerResizer\";\r\n\r\nexport default class StackSpacer extends React.PureComponent{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            pointerEvents: \"auto\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setPointerEvents = (pointerEvents) => {\r\n        this.mounted && this.setState({pointerEvents});\r\n    };\r\n\r\n    updateSpacerData = (newHeight) => {\r\n        this.props.spacerData.height = newHeight;\r\n        this.props.stack.props.select.updateSize();\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClick = (e) => {\r\n        this.props.aglRef.current.onSelect(true);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        if (this.props.onDragStart)\r\n            this.props.onDragStart(e);\r\n\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n            firstHeight: this.props.spacerData.height\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        e.preventDefault();\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        let newHeight = this.dragData.firstHeight + deltaY;\r\n\r\n        newHeight = Math.max(0, newHeight);\r\n        this.updateSpacerData(newHeight);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerRoot\"\r\n                style={{\r\n                    height: `${this.props.spacerData.height}px`,\r\n                    order: this.props.order,\r\n                    pointerEvents: this.state.pointerEvents\r\n                }}\r\n                onClick={this.onClick}\r\n                onMouseOver={this.props.onMouseOver}\r\n                onMouseEnter={this.props.onMouseEnter}\r\n                onMouseOut={this.props.onMouseOut}\r\n            >\r\n\r\n                <StackSpacerResizer\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n\r\n                {\r\n                    this.props.aglRef.current.getSize(false).width > 150 &&\r\n                    <p\r\n                        className=\"StackSpacerText\"\r\n                    >\r\n                        Spacer\r\n                    </p>\r\n                }\r\n\r\n                <p\r\n                    className=\"StackSpacerSizeText\"\r\n                >\r\n                    {`${this.props.spacerData.height.toFixed(0)}px`}\r\n                </p>\r\n\r\n                <AdjustmentMove\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    onClick={this.onClick}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {isFixed, isStretch} from \"../../AwesomwGridLayoutHelper\";\r\nimport {appendStyle, cloneObject, updateStyle} from \"../../AwesomeGridLayoutUtils\";\r\nimport StackSpacerContainer from \"./StackSpacerContainer\";\r\nimport StackSpacer from \"./StackSpacer\";\r\n\r\nexport default class Stack extends AGLComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n        this.aglRef = React.createRef();\r\n        this.spacerContainerRef = React.createRef();\r\n\r\n        if (props.allSpacerData)\r\n            this.allSpacerData = props.allSpacerData;\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n        };\r\n    };\r\n\r\n    getChildrenOverride = (sortedChildrenArray, agl) => { // [{child: child, zIndex: zIndex}], agl\r\n        return sortedChildrenArray.map((child, index) => {\r\n            return child.child;\r\n        });\r\n    };\r\n\r\n    lateMountedOverride = (agl) => {\r\n        agl.invalidateSize();\r\n        agl.addToSnap();\r\n        agl.onSelect(agl.getFromTempData(\"selected\"));\r\n\r\n        if (agl.props.onPageResize) {\r\n            let rect = agl.getSize(false, true);\r\n            agl.props.onPageResize(rect.width, agl, true);\r\n        }\r\n\r\n        agl.props.onChildMounted && agl.props.onChildMounted(agl);\r\n        if (this.props.lateMountedComplete)\r\n            this.props.lateMountedComplete(this);\r\n\r\n        this.setOrder();\r\n    };\r\n\r\n    calculateGridItemChildOverride = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateChildGridItemOverride =\r\n        (child1, child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateWrapper = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) => {\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let {gridArea, coordinates} = child.calculateGridArea(\r\n            parentRect.left + relativeX,\r\n            parentRect.top + relativeY,\r\n            width,\r\n            height,\r\n            parent,\r\n            parentRect\r\n        );\r\n\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.clientHeight,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.clientWidth\r\n            }\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let gridItemStyle = {...(child.state.gridItemStyle || child.props.defaultGridItemStyle)};\r\n        delete gridItemStyle.marginLeft;\r\n        delete gridItemStyle.marginRight;\r\n\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.alignSelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.alignSelf = \"flex-end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"flex-start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            // if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n            // gridItemStyle.alignSelf = \"end\";\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // } else {\r\n            // gridItemStyle.alignSelf = \"start\";\r\n            // gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            // }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }\r\n\r\n        delete gridItemStyle.justifySelf;\r\n        delete gridItemStyle.marginTop;\r\n        delete gridItemStyle.marginBottom;\r\n        delete gridItemStyle.gridArea;\r\n\r\n        child.setDataInBreakpoint(\"relativeY\", relativeY);\r\n\r\n        this.setOrder(child.props.id, child, relativeY, height, fromState);\r\n\r\n        child.setStyleParam(\"height\", \"auto\");\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    setOrder = (childId, child, childRelativeY, childHeight, fromState) => {\r\n        let childFound = false;\r\n        let childOrderSet = false;\r\n        let sorted = Object.values(this.aglRef.current.allChildRefs).sort((a,b) => {\r\n            if (a && a.current && b && b.current){\r\n                if (a.current.props.id === childId || b.current.props.id === childId)\r\n                    childFound = true;\r\n\r\n                let relativeYA = a.current.getFromData(\"relativeY\");\r\n                let relativeYB = b.current.getFromData(\"relativeY\");\r\n                if (relativeYA < relativeYB) {\r\n                    return -1;\r\n                } else if (relativeYA === relativeYB) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    if (childId === a.current.props.id)\r\n                        return -1;\r\n                    else if (childId === b.current.props.id)\r\n                        return 1;\r\n                    else\r\n                        return 0;\r\n                }\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        let order = 1;\r\n        let relativeY = 0;\r\n        let spacers = [];\r\n        let length = sorted.filter(childRef => {\r\n            return (childRef && childRef.current);\r\n        }).length;\r\n\r\n        sorted.forEach((childRef, index) => {\r\n            if (childRef && childRef.current) {\r\n                if (childRelativeY && !childFound) {\r\n                    let relativeY2 = childRef.current.getFromData(\"relativeY\");\r\n                    if (!childOrderSet && relativeY2 > childRelativeY) {\r\n                        childOrderSet = true;\r\n                        child.setStyleParam(\"order\", order);\r\n                        child.setDataInBreakpoint(\"order\", order);\r\n                        order++;\r\n                    }\r\n                }\r\n                childRef.current.setStyleParam(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"relativeY\", relativeY);\r\n                let size = childRef.current.getSize(false);\r\n                relativeY += size.height;\r\n\r\n                if (childId === childRef.current.props.id) {\r\n                    childOrderSet = true;\r\n                }\r\n                order++;\r\n\r\n                if (length > index + 1) {\r\n                    spacers[index] = this.getSpacer(index, order);\r\n                    relativeY+= this.getSpacerData(index).height;\r\n                    order++;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (child && !childOrderSet) {\r\n            childOrderSet = true;\r\n            child.setStyleParam(\"order\", order);\r\n            child.setDataInBreakpoint(\"order\", order);\r\n            order++;\r\n        }\r\n\r\n        this.spacerContainerRef.current.updateSpacers(spacers);\r\n        setTimeout(() => {\r\n            this.props.select.updateSize();\r\n        }, 0);\r\n    };\r\n\r\n    getSpacer = (index, order) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        if (!this.allSpacerRef[index]) {\r\n            this.allSpacerRef[index] = React.createRef();\r\n        }\r\n\r\n        return <StackSpacer\r\n            key={index}\r\n            order={order}\r\n            spacerData={this.allSpacerData[index]}\r\n            ref={this.allSpacerRef[index]}\r\n            aglRef={this.aglRef}\r\n            onDragStart={this.onStackDragStart}\r\n            onDragStop={this.onStackDragStop}\r\n            stack={this}\r\n            onMouseOver={this.onMouseOverSpacer}\r\n            onMouseEnter={this.onMouseEnterSpacer}\r\n            onMouseOut={this.onMouseOutSpacer}\r\n        />;\r\n    };\r\n\r\n    onStackDragStart = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", true);\r\n    };\r\n\r\n    onStackDragStop = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", false);\r\n    };\r\n\r\n    getSpacerData = (index) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        return this.allSpacerData[index];\r\n    };\r\n\r\n    setMouseOverOverride = (agl, item, positionData, callback) => {\r\n        this.setPointerEventOfSpacers(\"none\");\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    setMouseOverForNonDraggingOverride = (agl) => {\r\n        this.setPointerEventOfSpacers(\"auto\");\r\n        agl.props.dragdrop.setMouseOverForNonDragging(agl);\r\n    };\r\n\r\n    setPointerEventOfSpacers = (pointerEvents) => {\r\n        if (!this.allSpacerRef)\r\n            this.allSpacerRef = [];\r\n\r\n        this.allSpacerRef.forEach((spacerRef) => {\r\n            if (spacerRef && spacerRef.current)\r\n                spacerRef.current.setPointerEvents(pointerEvents);\r\n        })\r\n    };\r\n\r\n    setGridItemStyleChildOverride = (child, newGridItemStyle) => {\r\n        let gridItemStyle = {...newGridItemStyle};\r\n        delete gridItemStyle.gridArea;\r\n        child.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle);\r\n        let styleNode = document.getElementById(child.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(gridItemStyle, child.getGridItemStyleId(), child.getGridItemStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, gridItemStyle, child.getGridItemStyleId());\r\n        }\r\n    };\r\n\r\n    modifyContainerStyleOverride = (container, agl, grid, aglStyle) => {\r\n        let style;\r\n\r\n        style = {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            position: \"relative\"\r\n        };\r\n\r\n        let styleNode = document.getElementById(container.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, container.getContainerStyleId(), container.getContainerStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, style, container.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    onChildLeaveOverride = (agl, child) => {\r\n        agl.removeChildElement(child);\r\n        child.removeIdAndChildrenId();\r\n\r\n        this.setOrder();\r\n\r\n        if (!agl.removing && Object.values(agl.allChildRefs).length === 1) {\r\n            agl.removing = true;\r\n            setTimeout(() => {\r\n                Object.values(agl.allChildRefs)[0] &&\r\n                this.props.dragdrop.dropItem(\r\n                    Object.values(agl.allChildRefs)[0].current,\r\n                    Object.values(agl.allChildRefs)[0].current.props.parent,\r\n                    this.props.parent, undefined, false, 2);\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    stretchChildOverride = (child, item) => {\r\n        if (!item.props.parent)\r\n            return;\r\n\r\n        let stretch = false;\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n\r\n        if (!isStretch(item, true)) {\r\n            stretch = true;\r\n        }\r\n\r\n        gridItemStyle.alignSelf = stretch? \"stretch\": \"center\";\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n        item.setStyleParam(\"width\", \"100%\");\r\n\r\n        if (!stretch) {\r\n            item.setStyleParam(\"width\", \"80%\");\r\n        }\r\n\r\n        item.setGridItemStyle(gridItemStyle);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    isStretchChildOverride = (child, item, log) => {\r\n        if (!item.props.parent)\r\n            return false;\r\n\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n        return !(gridItemStyle.alignSelf !== \"stretch\" ||\r\n            gridItemStyle.marginLeft !== \"0px\" ||\r\n            gridItemStyle.marginRight !== \"0px\");\r\n    };\r\n\r\n    setStyleParamOverride = (agl, param, value, data) => {\r\n        if (param === \"height\" || param === \"minHeight\")\r\n            return;\r\n\r\n        let style = !data? agl.getFromData(\"style\"): agl.getFromData(\"style\", data);\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        agl.setStyle(style, data);\r\n    };\r\n\r\n    onMouseOverSpacer = (e) => {\r\n        this.aglRef.current.onMouseOver(e);\r\n    };\r\n\r\n    onMouseEnterSpacer = (e) => {\r\n        this.aglRef.current.onMouseEnter(e);\r\n    };\r\n\r\n    onMouseOutSpacer = (e) => {\r\n        this.aglRef.current.onMouseOut(e);\r\n    };\r\n\r\n    onChildAdd = () => {\r\n        this.getAgl().removing = false;\r\n    };\r\n\r\n    render() {\r\n        return [\r\n            <AGLWrapper tagName=\"Stack\"\r\n                        key=\"Stack\"\r\n                        aglRef={!this.props.aglRef? this.aglRef: this.aglRef = this.props.aglRef}\r\n                        {...this.props}\r\n                        data={this.getData()}\r\n                        style={{...{\r\n                            height: \"auto\"\r\n                        }, ...this.props.style}}\r\n                        getChildrenOverride={this.getChildrenOverride}\r\n                        isStack={true}\r\n                        resizeSides={['e','w']}\r\n                        onDragStartChildOverride={this.onDragStartChildOverride}\r\n                        onDragChildOverride={this.onDragChildOverride}\r\n                        onDragStopChildOverride={this.onDragStopChildOverride}\r\n                        setGridItemStyleChildOverride={this.setGridItemStyleChildOverride}\r\n                        calculateGridItemChildOverride={this.calculateGridItemChildOverride}\r\n                        calculateChildGridItemOverride={this.calculateChildGridItemOverride}\r\n                        modifyContainerStyleOverride={this.modifyContainerStyleOverride}\r\n                        setMouseOverOverride={this.setMouseOverOverride}\r\n                        setMouseOverForNonDraggingOverride={this.setMouseOverForNonDraggingOverride}\r\n                        stretchChildOverride={this.stretchChildOverride}\r\n                        isStretchChildOverride={this.isStretchChildOverride}\r\n                        lateMountedOverride={this.lateMountedOverride}\r\n                        setStyleParamOverride={this.setStyleParamOverride}\r\n                        onChildLeaveOverride={this.onChildLeaveOverride}\r\n                        onChildAdd={this.onChildAdd}\r\n\r\n            >\r\n            </AGLWrapper>,\r\n            <StackSpacerContainer ref={this.spacerContainerRef} key=\"spacers\"\r\n                                  aglRef={this.aglRef}\r\n                                  document={this.props.document}\r\n            />\r\n        ]\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Divider from \"../Menus/CommonComponents/Divider\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport {LightMenuTooltip} from \"../Components/Containers/Menus/Components/LightTooltip\";\r\nimport {isLeftClick} from \"../AwesomwGridLayoutHelper\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener/ClickAwayListener\";\r\nimport MenuList from \"@material-ui/core/MenuList/MenuList\";\r\n\r\nexport default class ContextMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    getFakeAnchor = (clientX, clientY) => {\r\n        return {\r\n            clientWidth: 0,\r\n            clientHeight: 0,\r\n            getBoundingClientRect: () => {\r\n                return {\r\n                    top: clientY,\r\n                    left: clientX,\r\n                    width: 0,\r\n                    height: 0,\r\n                    bottom: clientY,\r\n                    right: clientX\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let {menu, clientX, clientY, popperStyle, onClose} = this.props;\r\n        return (\r\n            <>\r\n                <Popper\r\n                    style={{...{\r\n                            zIndex: 99999999999999\r\n                        }, ...popperStyle}}\r\n                    // anchorReference=\"anchorPosition\"\r\n                    // anchorPosition={\r\n                    //     clientY !== null && clientX !== null\r\n                    //         ? { top: clientY, left: clientX }\r\n                    //         : undefined\r\n                    // }\r\n                    anchorEl={this.getFakeAnchor(clientX, clientY)}\r\n                    open={true}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                    placement=\"bottom-start\"\r\n                >\r\n                    <Paper style={{\r\n                        boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n                    }}>\r\n                        <ClickAwayListener onClickAway={onClose} mouseEvent='onMouseDown'>\r\n                            <MenuList autoFocusItem={true} style={{padding: 0}}\r\n                                      onPointerDown={(e) => {\r\n                                          e.preventDefault();\r\n                                          e.stopPropagation();\r\n                                      }}\r\n                            >\r\n                                {\r\n                                    menu.map((section, i) => {\r\n                                        let hasDivider = (i !== menu.length - 1);\r\n                                        return (\r\n                                            [\r\n                                                section.map((menuItem, j) => {\r\n                                                    return (\r\n                                                        <ContextMenuItem\r\n                                                            key={`${i}${j}`}\r\n                                                            onClose={onClose}\r\n                                                            menuItem={menuItem}\r\n                                                        />\r\n                                                    )\r\n                                                }),\r\n                                                hasDivider && <Divider style={{\r\n                                                    width: \"100%\",\r\n                                                    margin: 0,\r\n                                                    display: \"block\"\r\n                                                }}/>\r\n                                            ]\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                </Popper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport class ContextMenuItem extends React.Component {\r\n    render () {\r\n        let {menuItem, onClose} = this.props;\r\n\r\n        if (!menuItem.subMenu)\r\n            return (\r\n                <MenuItem\r\n                    dense\r\n                    onClick={(e) => {\r\n                        if (menuItem.onClick) {\r\n                            menuItem.onClick(e);\r\n                            onClose && onClose(e);\r\n                        }\r\n                    }}\r\n                    onPointerDown={(e) => {\r\n                        if (!isLeftClick(e)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }\r\n                    }}\r\n                >\r\n                    <span style={{\r\n                        display: \"grid\",\r\n                        gridTemplateColumns: \"1fr auto\",\r\n                        alignItems: \"center\",\r\n                        width: \"100%\"\r\n                    }}>\r\n                        {menuItem.name}\r\n                        <span style={{\r\n                            fontSize: 10,\r\n                            marginLeft: 24,\r\n                            color: \"#9a9a9a\"\r\n                        }}>\r\n                            {\r\n                                menuItem.shortcut\r\n                            }\r\n                        </span>\r\n                    </span>\r\n                </MenuItem>\r\n            );\r\n        else\r\n            return (\r\n                <LightMenuTooltip\r\n                    title={\r\n                        menuItem.subMenu.map((menuItem, j) => {\r\n                            return (\r\n                                <ContextMenuItem\r\n                                    key={`${j}`}\r\n                                    onClose={onClose}\r\n                                    menuItem={menuItem}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    interactive\r\n                    placement=\"right\"\r\n                    leaveDelay={200}\r\n                    PopperProps={{\r\n                        style: {\r\n                            zIndex: 99999999999999,\r\n                        },\r\n                        modifiers:{\r\n                            flip: {\r\n                                enabled: true,\r\n                            },\r\n                            preventOverflow: {\r\n                                enabled: true,\r\n                                boundariesElement: 'viewport',\r\n                            },\r\n                        }}\r\n                    }\r\n                >\r\n                    <MenuItem\r\n                        dense\r\n                        onPointerDown={(e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation()\r\n                        }}\r\n                    >\r\n                        <span style={{\r\n                            display: \"grid\",\r\n                            gridTemplateColumns: \"1fr auto\",\r\n                            alignItems: \"center\",\r\n                            width: \"100%\"\r\n                        }}>\r\n                            {menuItem.name}\r\n                            <img draggable={false} width={8} height={8}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/right-arrow.svg'}\r\n                                style={{\r\n                                    marginLeft: 24,\r\n                                    color: \"#9a9a9a\"\r\n                                }}\r\n                            />\r\n                    </span>\r\n                    </MenuItem>\r\n                </LightMenuTooltip>\r\n            )\r\n    }\r\n}\r\n\r\n/*\r\n* Structure of input menu object\r\n* [\r\n*   [ // each section has one array\r\n    *   {\r\n    *       name: \"delete\",\r\n    *       onClick: function,\r\n    *       icon: <img ... />\r\n    *       shortcut: \"Ctrl + D\"\r\n    *       subMenu: {other Menu}\r\n    *   }\r\n*   ]\r\n* ]\r\n* */\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {isLeftClick} from \"./AwesomwGridLayoutHelper\";\r\n\r\nexport default class SelectManager {\r\n    constructor() {\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            this.ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n        });\r\n        window.addEventListener(\"keyup\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            if (key === 17) {\r\n                this.ctrl = false;\r\n            }\r\n        });\r\n\r\n        this.ctrl = false;\r\n        this.shift = false;\r\n        this.alt = false;\r\n\r\n        this.mouseDown = 0;\r\n        window.addEventListener(\"mousedown\",(e) =>{\r\n            if (isLeftClick(e))\r\n                this.mouseDown = 1;\r\n        });\r\n        window.addEventListener(\"mouseup\",(e) =>{\r\n            if (isLeftClick(e) && this.mouseDown > 0)\r\n                this.mouseDown = 0;\r\n        });\r\n    }\r\n}\r\n","import {throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport {\r\n    createStack,\r\n    getSectionId,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport ContainerBase from \"./Components/Containers/ContainerBase\";\r\nimport React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport throttle from \"lodash.throttle\";\r\nimport Text from \"./Components/Text/Text\";\r\n\r\nexport default class SelectManager {\r\n    constructor(inputManager, groupSelectRef, pageAglRef, miniMenuHolderRef,\r\n                inspectorRef, resizeRef, helpLinesRef, hoverRef) {\r\n        this.inputManager = inputManager;\r\n        this.groupSelectRef = groupSelectRef;\r\n        this.pageAglRef = pageAglRef;\r\n        this.miniMenuHolderRef = miniMenuHolderRef;\r\n        this.inspectorRef = inspectorRef;\r\n        this.resizeRef = resizeRef;\r\n        this.helpLinesRef = helpLinesRef;\r\n        this.hoverRef = hoverRef;\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 71 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + G\");\r\n                this.editGrid();\r\n            }\r\n            if ( key === 49 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 1\");\r\n                this.test1();\r\n            }\r\n            if ( key === 50 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 2\");\r\n                this.test2();\r\n            }\r\n            if ( key === 51 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 3\");\r\n                this.test3();\r\n            }\r\n        });\r\n    }\r\n\r\n    setContext = (editorContext) => {\r\n        this.context = editorContext;\r\n    }\r\n\r\n    getPageOverflowRef = () => {\r\n        if (this.pageAglRef.current)\r\n            return this.pageAglRef.current.overflowRef.current;\r\n    };\r\n\r\n    editGrid = (item) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        } else if (!item){\r\n            item = this.getSelected();\r\n        }\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.editGrid();\r\n    };\r\n\r\n    selectItem = (item, clicked, dontUpdateAdjustments) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        }\r\n\r\n        if (this.inputManager.ctrl && clicked && getSectionId(this.selectedItem) === getSectionId(item)) {\r\n            this.createGroup(item);\r\n            return;\r\n        } else if (this.inputManager.ctrl){\r\n            // TODO can notify to user that can't select multiple item from different section\r\n            this.clearGroup();\r\n        } else {\r\n            this.clearGroup();\r\n        }\r\n\r\n        if (this.selectedItem.props.id !== item.props.id){\r\n            this.selectedItem.onSelect(false, undefined, true);\r\n        }\r\n\r\n        if (!dontUpdateAdjustments) {\r\n            if (this.selectedItem.props.id !== item.props.id){\r\n                this.updateMenu();\r\n            }\r\n\r\n            this.updateMiniMenu(item);\r\n            this.setInspector(\r\n                item.props.getInspector()\r\n            );\r\n            this.updateResizePanes(item, item.getSize(false));\r\n        }\r\n\r\n        this.selectedItem = item;\r\n    };\r\n\r\n    clearMiniMenu = () => {\r\n        this.miniMenuHolderRef.current.clearMiniMenu();\r\n    };\r\n\r\n    onContextMenu = (e, item) => {\r\n        this.miniMenuHolderRef.current.onContextMenu(e, item);\r\n    };\r\n\r\n    updateMiniMenu = (item) => {\r\n        if(!item)\r\n            item = this.getSelected();\r\n\r\n        if (item && item.hasMiniMenu())\r\n            this.miniMenuHolderRef.current.addMiniMenu(item);\r\n        else\r\n            this.clearMiniMenu();\r\n    };\r\n\r\n    updateMenu = (menu) => {\r\n        this.miniMenuHolderRef.current.addMenu(menu);\r\n    };\r\n\r\n    setInspector = (inspectorMenu) => {\r\n        this.inspectorRef.current.setMenu(inspectorMenu);\r\n    };\r\n\r\n    clearGroup = () => {\r\n        if (!this.group)\r\n            return;\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: false,\r\n                groupDragStart: undefined,\r\n                groupDrag: undefined,\r\n                groupDragStop: undefined,\r\n            });\r\n            item.onSelect(false, undefined, true);\r\n        });\r\n\r\n        this.group = undefined;\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    createGroup = (item) => {\r\n        let selectedItem = this.selectedItem;\r\n        this.selectedItem = undefined;\r\n\r\n        if (!this.group) {\r\n            this.group = [];\r\n            selectedItem && this.group.push(selectedItem);\r\n        }\r\n\r\n        item && this.group.push(item);\r\n\r\n        this.updateResizePanes();\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: true,\r\n                groupDragStart: this.groupDragStart,\r\n                groupDrag: this.groupDrag,\r\n                groupDragStop: this.groupDragStop,\r\n            });\r\n        });\r\n\r\n        this.updateGroupRect();\r\n        this.clearMiniMenu();\r\n        this.updateMenu();\r\n    };\r\n\r\n    groupDragStart = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStart(e, true);\r\n        });\r\n    };\r\n\r\n    groupDrag = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDrag(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    groupDragStop = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStop(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    deleteGroup = () => {\r\n        if (!this.group) {\r\n            return;\r\n        }\r\n\r\n        this.group.forEach(item => {\r\n            item.delete();\r\n        });\r\n\r\n        this.clearGroup();\r\n    };\r\n\r\n    updateGroupRect = () => {\r\n        if (!this.group) {\r\n            this.groupSelectRef.current && this.groupSelectRef.current.updateRect();\r\n            return;\r\n        }\r\n\r\n        let firstRect = this.group[0].getSize(false, true);\r\n        let top = firstRect.top;\r\n        let left = firstRect.left;\r\n        let bottom = window.innerHeight - firstRect.top - firstRect.height;\r\n        let right =  window.innerWidth - firstRect.left - firstRect.width;\r\n\r\n        this.group.slice(1, this.group.length).forEach(item => {\r\n            let rect = item.getSize(false, true);\r\n            top = Math.min(top, rect.top);\r\n            left = Math.min(left, rect.left);\r\n            bottom = Math.min(bottom, window.innerHeight - rect.top - rect.height);\r\n            right = Math.min(right, window.innerWidth - rect.left - rect.width);\r\n        });\r\n\r\n        this.groupSelectRef.current.updateRect({\r\n            top, left, bottom, right\r\n        }, this.group);\r\n    };\r\n\r\n    getSelected = () => {\r\n        return this.selectedItem;\r\n    };\r\n\r\n    updateParentsRect = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects(true, true);\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects(true, true);\r\n    }, 40);\r\n\r\n    isEditor = () => {\r\n        return !this.context.preview;\r\n    }\r\n\r\n    // change grid line positions and resize panes\r\n    onScrollItem = throttleDebounce(() => {\r\n        if (!this.isEditor())\r\n            return;\r\n\r\n        this.updateGroupRect();\r\n\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects();\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects();\r\n\r\n        let size = item.getSize(false, true);\r\n        item.updateGridLines(\r\n            size.top, size.left,\r\n            window.innerHeight - size.top - size.height,\r\n            window.innerWidth - size.left - size.width,\r\n            \"A\"\r\n        );\r\n        item.updateGridEditor();\r\n        this.updateMiniMenu();\r\n        this.updateResizePanes(item, size);\r\n\r\n        this.updateHelpSizeLines(item, item.state.helpLinesParent, size, item.state.dragging,\r\n            item.getBoundarySize(true));\r\n        this.updateHover(item, size);\r\n    }, 50);\r\n\r\n    // updateSize\r\n    updateSize = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        let size = item.getSize(true, true);\r\n\r\n        this.updateResizePanes(item, size);\r\n    }, 100);\r\n\r\n    updateResizePanes = (item, data) => {\r\n        this.resizeRef.current.update(item, data, item && item.getTransformStyleId());\r\n    };\r\n\r\n    updateHelpLines = throttle((item, helpLineParent, itemRect, dragging) => {\r\n        this.updateHelpSizeLines(item, helpLineParent, itemRect, dragging,\r\n            item.getBoundarySize());\r\n    }, 50);\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        if (this.helpLinesRef.current)\r\n            return this.helpLinesRef.current.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    updateHover = (item, size, clear) => {\r\n        this.hoverRef.current.update(item, size, clear);\r\n    };\r\n\r\n    activateHover = (active) => {\r\n        this.hoverRef.current.activate(active);\r\n    };\r\n\r\n    activateResize = (active) => {\r\n        this.resizeRef.current.activate(active);\r\n    };\r\n\r\n    updateHelpSizeLines = (item, helpLineParent, itemRect, dragging, fakeItemRect) => {\r\n        if (this.helpLinesRef.current)\r\n            this.helpLinesRef.current.update(item, helpLineParent, itemRect, dragging, fakeItemRect);\r\n    };\r\n\r\n    test1 = () => {\r\n        createStack(this.group);\r\n    };\r\n\r\n    test2 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        let child =\r\n            <Text\r\n                style={{\r\n                    width: \"50%\",\r\n                    height: \"auto\"\r\n                }}\r\n                data={{\r\n                    textStaticData: {\r\n                        textValue: \"Normal Text\"\r\n                    },\r\n                    bpData: {\r\n                        design: {\r\n                            textDesignData: {\r\n                                textTheme: \"Heading 6\"\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />;\r\n\r\n        item.addChild(child, undefined, undefined, undefined, (agl) => {\r\n        }, undefined, true);\r\n    };\r\n\r\n    test3 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        item.playAnimation();\r\n    };\r\n}\r\n","export default class SnapManager {\r\n    constructor (snapThreshold, snapSvgRef) {\r\n        this.snaps = {};\r\n        this.snapThreshold = snapThreshold || 10;\r\n        this.snapSvgRef = snapSvgRef;\r\n    }\r\n\r\n    addSnap = (id, horizontals = [], verticals = [], parentsId) => {\r\n        this.snaps[id] = {\r\n            horizontals, verticals, id, parentsId\r\n        };\r\n    };\r\n\r\n    removeSnap = (id) => {\r\n        delete this.snaps[id];\r\n    };\r\n\r\n    checkSnap = (top, left, ignoreId, additionalSnaps = []) => {\r\n        let snapH, snapV;\r\n        let topUp = top + this.snapThreshold;\r\n        let topDown = top - this.snapThreshold;\r\n        let leftUp = left + this.snapThreshold;\r\n        let leftDown = left - this.snapThreshold;\r\n\r\n        let snaps = Object.values(this.snaps);\r\n        snaps = snaps.concat(additionalSnaps);\r\n\r\n        for (let i = 0; i < snaps.length; i++) {\r\n            let snap = snaps[i];\r\n            if (!snap)\r\n                continue;\r\n\r\n            if (snap.id === ignoreId)\r\n                continue;\r\n            if (snap.parentsId && snap.parentsId.includes(ignoreId))\r\n                continue;\r\n\r\n            if (!snapH){\r\n                for (let h = 0; h < snap.horizontals.length; h++) {\r\n                    let horizontal = snap.horizontals[h];\r\n                    if (!horizontal)\r\n                        continue;\r\n                    if (horizontal.value <= topUp && horizontal.value >= topDown) {\r\n                        snapH = horizontal;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!snapV) {\r\n                for (let v = 0; v < snap.verticals.length; v++) {\r\n                    let vertical = snap.verticals[v];\r\n                    if (!vertical)\r\n                        continue;\r\n                    if (vertical.value <= leftUp && vertical.value >= leftDown) {\r\n                        snapV = vertical;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (snapH && snapV)\r\n                break;\r\n        }\r\n\r\n        return {snapH, snapV};\r\n    }\r\n\r\n    drawSnap = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.snapSvgRef.current.update(snapH, snapV, pointOfSnapH, pointOfSnapV)\r\n    }\r\n}\r\n","import {createItem} from \"./AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport throttle from \"lodash.throttle\";\r\n\r\nexport default class CopyManager {\r\n    constructor(selectManager, pageRef, dragdrop) {\r\n        this.selectManager = selectManager;\r\n        this.pageRef = pageRef;\r\n        this.dragdrop = dragdrop;\r\n\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 86 && ctrl ) {\r\n                console.log(\"ctrl + V\");\r\n                this.paste();\r\n            } else if ( key === 67 && ctrl ) {\r\n                console.log(\"ctrl + C\");\r\n                this.copy();\r\n            } else if ( key === 68 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + D\");\r\n                this.duplicate();\r\n            } else if ( key === 46 ) {\r\n                console.log(\"delete\");\r\n                this.delete();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    copy = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copyItem = item;\r\n    };\r\n\r\n    getCopyItem = () => {\r\n        return this.copyItem;\r\n    };\r\n\r\n    paste = throttle((selectedItem) => {\r\n        if (!this.copyItem)\r\n            return;\r\n        let destinationItem;\r\n        if (!selectedItem)\r\n            selectedItem = this.selectManager.getSelected() || this.pageRef.current;\r\n\r\n        while (!destinationItem)  {\r\n            if (selectedItem.getFromTempData(\"isContainer\")) {\r\n                destinationItem = selectedItem;\r\n            } else {\r\n                selectedItem = selectedItem.props.parent;\r\n            }\r\n        }\r\n\r\n        let style = cloneObject(this.getCopyItem().getFromData(\"style\"));\r\n        let gridItemStyle = cloneObject(this.getCopyItem().getFromData(\"gridItemStyle\"));\r\n        let copyRect = this.getCopyItem().getSize(false);\r\n        let parentRect = destinationItem.getSize(false);\r\n        if (destinationItem === this.getCopyItem().props.parent) {\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginLeft =\r\n                    (parseFloat(gridItemStyle.marginLeft.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginTop =\r\n                    (parseFloat(gridItemStyle.marginTop.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginRight)\r\n                gridItemStyle.marginRight =\r\n                    (parseFloat(gridItemStyle.marginRight.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginBottom)\r\n                gridItemStyle.marginBottom =\r\n                    (parseFloat(gridItemStyle.marginBottom.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n\r\n            if (!gridItemStyle.marginLeft && !gridItemStyle.marginRight)\r\n                gridItemStyle.marginLeft = \"20px\";\r\n            if (!gridItemStyle.marginTop && !gridItemStyle.marginBottom)\r\n                gridItemStyle.marginTop = \"20px\";\r\n        } else {\r\n            delete gridItemStyle.marginLeft;\r\n            delete gridItemStyle.marginTop;\r\n            delete gridItemStyle.marginRight;\r\n            delete gridItemStyle.marginBottom;\r\n\r\n            gridItemStyle.justifySelf = \"center\";\r\n            gridItemStyle.alignSelf = \"center\";\r\n\r\n            if (style.width.toString().includes(\"%\")) {\r\n                style.width = (copyRect.width / parentRect.width * 100).toString() + \"%\";\r\n            }\r\n            if (style.height.toString().includes(\"%\")) {\r\n                style.height = (copyRect.height / parentRect.height * 100).toString() + \"%\";\r\n            }\r\n        }\r\n\r\n        createItem(destinationItem, {\r\n            props: this.getCopyItem().props,\r\n            tagName: this.getCopyItem().props.tagName\r\n        }, undefined, gridItemStyle, style);\r\n    }, 200);\r\n\r\n    duplicate = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copy(item);\r\n        this.paste(item.props.parent);\r\n        this.copyItem = false;\r\n    };\r\n\r\n    delete = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item && !this.selectManager.group)\r\n            return;\r\n\r\n        this.selectManager.deleteGroup();\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.delete();\r\n    };\r\n}\r\n","export default class IdManager {\r\n    constructor(prefix) {\r\n        this.prefix = prefix + '_';\r\n        this.allId = {};\r\n    }\r\n\r\n    clear = () => {\r\n        this.allId = {};\r\n    };\r\n\r\n    getId = (preferName, fixName) => {\r\n        let result;\r\n        let baseId = !fixName? this.prefix + preferName: fixName;\r\n        let id = baseId;\r\n        let postNo = 1;\r\n        while (!result) {\r\n            if (this.allId[id]) {\r\n                id = baseId + \"_\" + postNo;\r\n                postNo++;\r\n            } else {\r\n                result = id;\r\n            }\r\n        }\r\n\r\n        this.allId[id] = true;\r\n\r\n        return result;\r\n    };\r\n\r\n    setItem = (id, item) => {\r\n        this.allId[id] = item;\r\n    };\r\n\r\n    // return agl reference\r\n    getItem = (id) => {\r\n        return this.allId[id];\r\n    };\r\n\r\n    removeId = (id) => {\r\n        delete this.allId[id];\r\n    };\r\n}\r\n","import throttle from 'lodash.throttle';\r\n\r\nexport default class UndoRedo {\r\n    constructor(max, document, idMan) {\r\n        this.undoQueue = [];\r\n        this.redoQueue = [];\r\n        this.max = max || 20;\r\n        this.idMan = idMan;\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'z') {\r\n                this.undo();\r\n            }\r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'Z') {\r\n                this.redo();\r\n            }\r\n        });\r\n    }\r\n\r\n    getQueueObject = (func, undo, power) => {\r\n        return {\r\n            redo: func,\r\n            undo: undo,\r\n            power: (typeof power === 'number') ? power : undefined\r\n        }\r\n    };\r\n\r\n    add = (func, undo, power) => {\r\n        this.undoQueue.unshift(this.getQueueObject(func, undo, power));\r\n        if (this.undoQueue.length > this.max)\r\n            this.undoQueue.pop();\r\n        this.redoQueue = [];\r\n    };\r\n\r\n    undo = throttle(() => {\r\n        this.undoFunc();\r\n    }, 200);\r\n\r\n    undoFunc = () => {\r\n        if (this.undoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.undoQueue.shift();\r\n        let power = object.power || 1;\r\n\r\n        power--;\r\n        object.undo(this.idMan);\r\n        this.redoQueue.unshift(object);\r\n\r\n        while (power > 0) {\r\n            power--;\r\n            this.undoFunc();\r\n        }\r\n    };\r\n\r\n    hasUndo = () => {\r\n        return this.undoQueue.length > 0;\r\n    };\r\n\r\n    redo = throttle(() => {\r\n        if (this.redoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.redoQueue.shift();\r\n        object.redo(this.idMan);\r\n        this.undoQueue.unshift(object);\r\n    }, 100);\r\n\r\n    hasRedo = () => {\r\n        return this.redoQueue.length > 0;\r\n    };\r\n};\r\n","export default class GridLineManager {\r\n    constructor(gridContainerRef) {\r\n        this.gridContainerRef = gridContainerRef;\r\n    }\r\n\r\n    addGrid = (id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.gridContainerRef.current.addGrid(id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.gridContainerRef.current.getIdCache(gridType);\r\n    };\r\n\r\n    getXlineRef = (id) => {\r\n        return this.gridContainerRef.current.getXlineRef(id);\r\n    };\r\n\r\n    getYlineRef = (id) => {\r\n        return this.gridContainerRef.current.getYlineRef(id);\r\n    };\r\n\r\n    removeGridLine = (id) => {\r\n        this.gridContainerRef.current.removeGridLine(id);\r\n    };\r\n\r\n    removeGridLineByType = (type) => {\r\n        this.gridContainerRef.current.removeGridLineByType(type);\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        this.gridContainerRef.current.prepareRects(id);\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (this.gridContainerRef.current)\r\n            return this.gridContainerRef.current.hasGridLine(id, gridType);\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.gridContainerRef.current)\r\n            return this.gridContainerRef.current.isPrepared(id);\r\n    };\r\n}\r\n","import {v4 as uuidv4} from 'uuid';\r\nimport { goToAnchor } from 'react-scrollable-anchor'\r\n\r\nexport default class AnchorManager {\r\n    constructor(siteData) {\r\n        // TODO init all anchors\r\n        this.allAnchors = {};\r\n    }\r\n\r\n    addAnchor = (name, item) => {\r\n        let pageId = item.props.viewRef.current.props.pageId;\r\n        let id = uuidv4();\r\n        this.allAnchors[id] = {pageId, name, id};\r\n        item.setAnchor(this.allAnchors[id]);\r\n    };\r\n\r\n    modifyAnchor = (id, newName, item) => {\r\n        let anchor = this.allAnchors[id];\r\n        if (!anchor) {\r\n            this.addAnchor(newName, item);\r\n            return;\r\n        }\r\n\r\n        anchor.name = newName;\r\n\r\n        item.setAnchor(anchor);\r\n    };\r\n\r\n    removeAnchor = (id, item) => {\r\n        delete this.allAnchors[id];\r\n        item.setAnchor();\r\n    };\r\n\r\n    goToAnchor = (id, saveToHistory) => {\r\n        goToAnchor(id, saveToHistory);\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentGridRoot extends React.PureComponent {\r\n    render () {\r\n        let {top, left, bottom, right} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridRoot\"\r\n                className=\"AdjustmentGridRoot\"\r\n                style={{top, left, bottom, right}}\r\n            >\r\n                {\r\n                    this.props.children\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentGridRow extends React.Component {\r\n    // TODO BUG: first and last grid line is not provided, fix the bug\r\n    render () {\r\n        let {gridLineManager, itemId, grid} = this.props;\r\n        let rowLines = gridLineManager.getYlineRef(itemId);\r\n        return (\r\n            <div\r\n                className=\"AdjustmentGridRowEditor\"\r\n            >\r\n                {\r\n                    new Array(grid.x).fill(0).map((x, index) => {\r\n                        let rowLine = rowLines[index];\r\n                        let rowLineRect = rowLine.current.rect;\r\n                        let nextRowLineRect = rowLines[index + 1].current.rect;\r\n                        let rowHeight = grid.gridTemplateRows.split(' ')[index];\r\n                        let classes = classNames(\r\n                            \"AdjustmentGridRowEditorItem\",\r\n                            index === 0 && \"AdjustmentGridRowEditorItemTop\",\r\n                            index === grid.x - 1 && \"AdjustmentGridRowEditorItemBottom\",\r\n                        );\r\n                        return(\r\n                                <div\r\n                                    key={`row_${index}`}\r\n                                    className={classes}\r\n                                    style={{\r\n                                        height: nextRowLineRect.top - rowLineRect.top,\r\n                                    }}\r\n                                >\r\n                                    <p style={{\r\n                                        margin: 0,\r\n                                        fontWeight: \"bold\"\r\n                                    }}>\r\n                                        {rowHeight}\r\n                                    </p>\r\n                                </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentGridRoot from \"./AdjustmentGridRoot\";\r\nimport AdjustmentGridRow from \"./AdjustmentGridRow\";\r\n\r\nexport default class AdjustmentGrid extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item: undefined,\r\n            grid: undefined,\r\n            gridLineManager: undefined\r\n        };\r\n    }\r\n\r\n    editing = (item) => {\r\n        let grid = item.getFromData(\"grid\");\r\n        let gridLineManager = item.props.gridLine;\r\n        this.setState({item, grid, gridLineManager});\r\n    };\r\n\r\n    update = (item) => {\r\n        if (item === item)\r\n            this.forceUpdate();\r\n    };\r\n\r\n    addRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        if (grid.x === 100)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        grid.x++;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 0, \"minmax(100px,max-content)\");\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    addColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 100)\r\n            return;\r\n\r\n        grid.y++;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 0, \"1fr\");\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeColumnWidth = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1, newValue);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeRowHeight = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1, newValue);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.x === 1)\r\n            return;\r\n\r\n        grid.x--;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 1)\r\n            return;\r\n\r\n        grid.y--;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    render () {\r\n        let {gridLineManager, item, grid} = this.state;\r\n        if (!item)\r\n            return null;\r\n\r\n        let positions = gridLineManager.getIdCache(\"A\").positions;\r\n        return (\r\n            <AdjustmentGridRoot\r\n                top={positions.top}\r\n                left={positions.left}\r\n                bottom={positions.bottom}\r\n                right={positions.right}\r\n            >\r\n                <AdjustmentGridRow\r\n                    gridLineManager={gridLineManager}\r\n                    itemId={item.props.id}\r\n                    grid={grid}\r\n                />\r\n            </AdjustmentGridRoot>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentSnapLines extends React.Component {\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.props;\r\n        if (!snapH && !snapV)\r\n            return null;\r\n\r\n        if (snapH) {\r\n            return (\r\n                <line\r\n                    x1={Math.min(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    x2={Math.max(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    y1={snapH.value}\r\n                    y2={snapH.value}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <line\r\n                    x1={snapV.value}\r\n                    x2={snapV.value}\r\n                    y1={Math.min(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    y2={Math.max(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\n\r\nexport default class AdjustmentSnap extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    update = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.setState({\r\n            snapH, snapV, pointOfSnapH, pointOfSnapV\r\n        });\r\n    };\r\n\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.state;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentSnapLinesRoot\"\r\n            >\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    <AdjustmentSnapLines\r\n                        snapH={snapH}\r\n                        pointOfSnapH={pointOfSnapH}\r\n                    />\r\n                    <AdjustmentSnapLines\r\n                        snapV={snapV}\r\n                        pointOfSnapV={pointOfSnapV}\r\n                    />\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class GridLine extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render () {\r\n        let {id, lineRef, style} = this.props;\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                id={id}\r\n                ref={lineRef}\r\n                style={style}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\nimport Portal from \"@material-ui/core/Portal/Portal\";\r\nimport GridLine from \"./GridLine\";\r\n\r\nexport default class AdjustmentGridLinesWrapper2 extends React.PureComponent {\r\n    needUpdate = throttleDebounce(() => {\r\n        this.forceUpdate();\r\n    }, 100);\r\n\r\n    render () {\r\n        let {yNo, xNo, yLineRef, xLineRef, refId} = this.props;\r\n\r\n        if (yNo >= 0 && xNo >= 0 && !document.getElementById(`${refId}_container`))\r\n            this.needUpdate();\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    new Array(yNo + 1).fill(0).map((y, index) => {\r\n                        if (index === 0 || index === yNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesY\"\r\n                                id={`y_${index}_${refId}`}\r\n                                lineRef={yLineRef[index]}\r\n                                style={{\r\n                                    top: index === yNo ? \"unset\" : 0,\r\n                                    bottom: index === yNo ? 0 : \"unset\",\r\n                                    gridArea: `${index + 1}/1/${index + 1}/${xNo + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n                {\r\n                    new Array(xNo + 1).fill(0).map((x, index) => {\r\n                        if (index === 0 || index === xNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesX\"\r\n                                id={`x_${index}_${refId}`}\r\n                                lineRef={xLineRef[index]}\r\n                                style={{\r\n                                    left: index === xNo? \"unset\": 0,\r\n                                    right: index === xNo? 0: \"unset\",\r\n                                    gridArea: `1/${index + 1}/${yNo + 1}/${index + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {getCachedBoundingRect} from \"../Test/WindowCache\";\r\nimport AdjustmentGridLinesWrapper2 from \"./AdjustmentGridLinesWrapper2\";\r\n\r\nexport default class AdjustmentGridLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xNoA: -1,\r\n            yNoA: -1,\r\n            xNoB: -1,\r\n            yNoB: -1,\r\n            xNoT: -1,\r\n            yNoT: -1,\r\n        };\r\n\r\n        this.xLineRefA = new Array(100);\r\n        this.yLineRefA = new Array(100);\r\n        this.xLineRefB = new Array(100);\r\n        this.yLineRefB = new Array(100);\r\n        this.xLineRefT = new Array(100);\r\n        this.yLineRefT = new Array(100);\r\n\r\n        this.idCache = {};\r\n    }\r\n\r\n    fixLineRef = (x, y, gridType) => {\r\n        for (let i = 0; i <= x; i++) {\r\n            if (!this[`xLineRef${gridType}`][i])\r\n                this[`xLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n        for (let i = 0; i <= y; i++) {\r\n            if (!this[`yLineRef${gridType}`][i])\r\n                this[`yLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n    };\r\n\r\n    addGrid = (id, y, x, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.fixLineRef(x, y, gridType);\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id && gridType === \"A\") {\r\n            this.updateGridLine(id, \"A\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id && gridType === \"B\") {\r\n            this.updateGridLine(id, \"B\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id && gridType === \"T\") {\r\n            this.updateGridLine(id, \"T\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else {\r\n            this.idCache[gridType] = {id, gridTemplateRows, gridTemplateColumns, positions, x, y};\r\n\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, () => {\r\n                // this.prepareRects(id);\r\n                if (callback)\r\n                    callback();\r\n            })\r\n        }\r\n    };\r\n\r\n    updateGridLine = (id, gridType, {gridTemplateRows, gridTemplateColumns, positions, x, y} = {}, callback) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        gridTemplateRows && (this.idCache[gridType].gridTemplateRows = gridTemplateRows);\r\n        gridTemplateColumns && (this.idCache[gridType].gridTemplateColumns = gridTemplateColumns);\r\n        positions && (this.idCache[gridType].positions = positions);\r\n        x && (this.idCache[gridType].x = x);\r\n        y && (this.idCache[gridType].y = y);\r\n\r\n        if (!x && !y) {\r\n            this.setState({reload: true}, callback);\r\n            return;\r\n        }\r\n\r\n        if (x || y)\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.idCache[gridType];\r\n    };\r\n\r\n    getXlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        return this[`xLineRef${gridType}`].slice(0, this.idCache[gridType].x + 1);\r\n    };\r\n\r\n    getYlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        return this[`yLineRef${gridType}`].slice(0, this.idCache[gridType].y + 1);\r\n    };\r\n\r\n    removeGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                gridType = \"T\";\r\n            else return;\r\n        }\r\n\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                return \"A\";\r\n\r\n            if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                return \"B\";\r\n\r\n            if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n                return \"T\";\r\n        } else {\r\n            if (this.idCache[gridType] && this.idCache[gridType].id === id)\r\n                return gridType;\r\n        }\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].prepared)\r\n            return true;\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        let xLineRef = this.getXlineRef(id);\r\n        if (xLineRef)\r\n            for(let i = 0; i < xLineRef.length; i++) {\r\n                let current = xLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`xLineRef_${i}_${id}`, current);\r\n            }\r\n        let yLineRef = this.getYlineRef(id);\r\n        if (yLineRef)\r\n            for(let i = 0; i < yLineRef.length; i++) {\r\n                let current = yLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`yLineRef_${i}_${id}`, current);\r\n            }\r\n\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n            this.idCache[\"A\"].prepared = true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n            this.idCache[\"B\"].prepared = true;\r\n        else if (this.idCache[\"T\"] && this.idCache[\"T\"].id === id)\r\n            this.idCache[\"T\"].prepared = true;\r\n    };\r\n\r\n    removeGridLineByType = (gridType) => {\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridLinesRoot\"\r\n                className=\"AdjustmentGridLinesRoot\"\r\n            >\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_A\"}\r\n                    refId={this.idCache[\"A\"] && this.idCache[\"A\"].id}\r\n                    xNo={this.state.xNoA}\r\n                    yNo={this.state.yNoA}\r\n                    xLineRef={this.xLineRefA}\r\n                    yLineRef={this.yLineRefA}\r\n                    gridTemplateRows={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateColumns}\r\n                    top={this.idCache[\"A\"] && this.idCache[\"A\"].positions.top}\r\n                    bottom={this.idCache[\"A\"] && this.idCache[\"A\"].positions.bottom}\r\n                    left={this.idCache[\"A\"] && this.idCache[\"A\"].positions.left}\r\n                    right={this.idCache[\"A\"] && this.idCache[\"A\"].positions.right}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_B\"}\r\n                    refId={this.idCache[\"B\"] && this.idCache[\"B\"].id}\r\n                    xNo={this.state.xNoB}\r\n                    yNo={this.state.yNoB}\r\n                    xLineRef={this.xLineRefB}\r\n                    yLineRef={this.yLineRefB}\r\n                    gridTemplateRows={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateColumns}\r\n                    top={this.idCache[\"B\"] && this.idCache[\"B\"].positions.top}\r\n                    bottom={this.idCache[\"B\"] && this.idCache[\"B\"].positions.bottom}\r\n                    left={this.idCache[\"B\"] && this.idCache[\"B\"].positions.left}\r\n                    right={this.idCache[\"B\"] && this.idCache[\"B\"].positions.right}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_T\"}\r\n                    refId={this.idCache[\"T\"] && this.idCache[\"T\"].id}\r\n                    xNo={this.state.xNoT}\r\n                    yNo={this.state.yNoT}\r\n                    xLineRef={this.xLineRefT}\r\n                    yLineRef={this.yLineRefT}\r\n                    gridTemplateRows={this.idCache[\"T\"] && this.idCache[\"T\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"T\"] && this.idCache[\"T\"].gridTemplateColumns}\r\n                    top={this.idCache[\"T\"] && this.idCache[\"T\"].positions.top}\r\n                    bottom={this.idCache[\"T\"] && this.idCache[\"T\"].positions.bottom}\r\n                    left={this.idCache[\"T\"] && this.idCache[\"T\"].positions.left}\r\n                    right={this.idCache[\"T\"] && this.idCache[\"T\"].positions.right}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ResizePane extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane`,\r\n            this.props.enabled && `Adjustment-${this.props.side}-pane-circle`,\r\n            `Adjustment-${this.props.side}-pane-line`,\r\n            {\"Adjustment-CornerCircle\": this.props.enabled && this.isCorner()},\r\n            \"Adjustment-Pane\",\r\n            !this.props.enabled && \"ResizePanePointerNone\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.props.enabled ? this.onMouseDown : undefined}\r\n                className={classes}\r\n                style={{...style, ...this.props.style}}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport {cloneObject} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentGroupRect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rect: undefined,\r\n            group: undefined,\r\n            draggingStart: false\r\n        }\r\n    }\r\n\r\n    updateRect = (rect, group) => {\r\n        this.setState({rect, group});\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n        this.resizing = true;\r\n\r\n        this.setState({draggingStart: true});\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStart(e, dir, delta, true);\r\n        });\r\n\r\n        let {rect} = this.state;\r\n        this.resizeData = {\r\n            firstX: window.innerWidth - rect.left - rect.right,\r\n            firstY: window.innerHeight - rect.top - rect.bottom,\r\n            firstTop: rect.top,\r\n            firstLeft: rect.left,\r\n        };\r\n    };\r\n\r\n    onResize = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResize(e, dir, delta, true);\r\n        });\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n        delete rect.height;\r\n        delete rect.width;\r\n\r\n        let deltaY = delta.y;\r\n        let deltaX = delta.x;\r\n        if (dir.includes('n')) {\r\n            if (this.resizeData.firstY <= deltaY)\r\n                deltaY = this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY - deltaY;\r\n            rect.top = this.resizeData.firstTop + deltaY;\r\n        }\r\n        if (dir.includes('s')) {\r\n            if (this.resizeData.firstY <= -deltaY)\r\n                deltaY = -this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY + deltaY;\r\n        }\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= -deltaX)\r\n                deltaX = -this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX + deltaX;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= deltaX)\r\n                deltaX = this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX - deltaX;\r\n            rect.left = this.resizeData.firstLeft + deltaX;\r\n        }\r\n\r\n        if (rect.height)\r\n            rect.bottom = window.innerWidth - rect.top - rect.height;\r\n        if (rect.width)\r\n        rect.right = window.innerWidth - rect.left - rect.width;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStop(e, dir, delta, true);\r\n        });\r\n\r\n        this.resizing = false;\r\n\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStart(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let {rect} = this.state;\r\n\r\n        this.dragData = {\r\n            x: rect.left,\r\n            y: rect.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDrag(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let deltaX = (e.clientX - this.dragData.lastMouseX);\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.x += deltaX;\r\n        this.dragData.y += deltaY;\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n\r\n        rect.top = this.dragData.y;\r\n        rect.left = this.dragData.x;\r\n        rect.right -= deltaX;\r\n        rect.bottom -= deltaY;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStop(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    render () {\r\n        let {rect} = this.state;\r\n        if (!rect)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGroupRect\"\r\n                style={rect}\r\n                className=\"AdjustmentResizeRoot\"\r\n            >\r\n                {\r\n                    ['n','s','e','w','ne','nw','se','sw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.onResizeStart}\r\n                            onResize={this.onResize}\r\n                            onResizeStop={this.onResizeStop}\r\n                            draggingStart={this.state.draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n\r\n                {/*<AdjustmentMove*/}\r\n                    {/*key={`${this.props.id}_move`}*/}\r\n                    {/*onDragStart={this.onDragStart}*/}\r\n                    {/*onDrag={this.onDrag}*/}\r\n                    {/*onDragStop={this.onDragStop}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\n\r\nexport default class RightClick extends React.Component {\r\n    onClick = (e) => {\r\n        this.props.onClick && this.props.onClick(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/more.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\n\r\nexport default class MiniMenuVerticalDivider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MiniMenuVerticalDivider\"/>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport '../../../HelperStyle.css';\r\n\r\nexport default class Help extends React.Component {\r\n    onClick = (e) => {\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/question.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\nimport RightClick from \"./Components/RightClick\";\r\nimport MiniMenuVerticalDivider from \"./MiniMenuVerticalDivider\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Help from \"./Components/Help\";\r\nimport {isHideInBreakpoint} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nconst miniMenuId = \"wl_mini_menu\";\r\nexport default class MiniMenu extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            clear: true\r\n        };\r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({clear: true});\r\n    };\r\n\r\n    update = (itemId, shortcut, primary, item) => {\r\n        this.setState({\r\n            itemId\r\n            , shortcut, primary, clear: false,\r\n            item\r\n        })\r\n    };\r\n\r\n    getAnchor = () => {\r\n        return document.getElementById(`${this.state.itemId}_child_holder`) ||\r\n            document.getElementById(this.state.itemId);\r\n    };\r\n\r\n    render () {\r\n        if (this.state.clear)\r\n            return null;\r\n        if (!this.state.itemId || !this.getAnchor() ||\r\n            isHideInBreakpoint(this.state.item))\r\n            return null;\r\n        return (\r\n            <Popper\r\n                key={\"miniMenu\"}\r\n                open={true}\r\n                anchorEl={this.getAnchor()}\r\n                placement=\"bottom-start\"\r\n                style={{\r\n                    zIndex: 9999999\r\n                }}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'scrollParent',\r\n                    },\r\n                }}\r\n            >\r\n                <div className=\"MiniMenuRoot\"\r\n                     id={miniMenuId}\r\n                     style={{\r\n                        opacity:  !this.state.clear? 1: 0\r\n                     }}\r\n                >\r\n                    <div className=\"MiniMenuContainer\"\r\n                    >\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.shortcut.map(option => {\r\n                                return option;\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.shortcut.length > 0 && <MiniMenuVerticalDivider/>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.primary.map(option => {\r\n                                return option;\r\n                            })\r\n                        }\r\n\r\n                        {\r\n                            !this.state.clear &&\r\n                            this.state.primary.length > 0 && <MiniMenuVerticalDivider/>\r\n                        }\r\n\r\n                        <Help/>\r\n                        <RightClick/>\r\n                    </div>\r\n                </div>\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Menu.css';\r\nimport MiniMenu from \"./MiniMenu/MiniMenu\";\r\nimport {createContextMenu} from \"../AwesomwGridLayoutHelper\";\r\n\r\nconst miniMenuHolderId = \"wl_menu_holder\";\r\nexport default class MenuHolder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n\r\n        this.miniMenuRef = React.createRef();\r\n    }\r\n\r\n    clearMiniMenu = () => {\r\n        this.state.active && this.miniMenuRef.current.clear();\r\n    };\r\n\r\n    addMiniMenu = (item) => {\r\n        if (item && this.state.active)\r\n            this.miniMenuRef.current.update(\r\n                item.props.id,\r\n                item.getShortcutOptions() || [],\r\n                item.getPrimaryOptions() || [],\r\n                item\r\n        );\r\n    };\r\n\r\n    addMenu = (menu) => {\r\n        this.setState({\r\n            menu: undefined,\r\n        });\r\n        if (menu) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    menu,\r\n                });\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    onContextMenu = (e, item) => {\r\n        this.setState({\r\n            contextMenu: createContextMenu(e, item, () => {\r\n                this.setState({contextMenu: undefined})\r\n            })\r\n        });\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id={miniMenuHolderId}\r\n                key={miniMenuHolderId}\r\n                className=\"MenuHolderRoot\"\r\n            >\r\n                <MiniMenu\r\n                    itemId={this.state.miniMenuItem && this.state.miniMenuItem.props.id}\r\n                    key={\"miniMenu\"}\r\n                    ref={this.miniMenuRef}\r\n                />\r\n                {\r\n                    !this.state.contextMenu &&\r\n                    this.state.menu\r\n                }\r\n                {\r\n                    this.state.contextMenu\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default class IFrameCommunicator {\r\n    constructor(origin, authKey, otherWindow, onMessage) {\r\n        this.onMessage = onMessage;\r\n        this.origin = origin;\r\n        this.otherWindow = otherWindow;\r\n        this.counter = 0;\r\n        this.authKey = authKey;\r\n        this.callbacks = {};\r\n        this.responses = {};\r\n\r\n        window.addEventListener(\"message\", (event) => {\r\n            console.log(\"message\", event);\r\n            if (this.origin && event.origin !== this.origin) {\r\n                return;\r\n            }\r\n\r\n            this.processIncomingMessage(event);\r\n        });\r\n    }\r\n\r\n    processIncomingMessage = (event) => {\r\n        let data = event.data;\r\n\r\n        if (!data || data.authKey !== this.authKey)\r\n            return;\r\n\r\n        if (data && data.r) {\r\n            let r = data.r;\r\n            this.callbacks[r](data);\r\n            delete this.callbacks[r];\r\n        }\r\n        else\r\n        {\r\n            let responseFunc = () => {};\r\n            if (data && data.c) {\r\n                let c = data.c;\r\n                responseFunc = this.responses[c] = (result) => {\r\n                    let newData = {r: c, result};\r\n                    this.post(newData);\r\n                }\r\n            }\r\n\r\n            this.onMessage(event.data, responseFunc);\r\n        }\r\n    };\r\n\r\n    post = (data, callback) => {\r\n        if (callback) {\r\n            this.counter++;\r\n            data.c = this.counter;\r\n            this.callbacks[data.c] = callback;\r\n        }\r\n\r\n        data.authKey = this.authKey;\r\n\r\n        let otherWindow = typeof(this.otherWindow) === 'function' ? this.otherWindow() : this.otherWindow;\r\n\r\n        otherWindow.postMessage(data, this.origin || \"*\");\r\n    };\r\n}\r\n","let EditorController = {};\r\nlet AllowFunctions = {};\r\n\r\nEditorController.onMessage = (data, res, editor) => {\r\n    if (data.type === 'Controller' && AllowFunctions[data.func]) {\r\n        res(AllowFunctions[data.func](...data.inputs, editor));\r\n        return;\r\n    }\r\n\r\n    if (data.type === 'Editor' && editor[data.func]) {\r\n        editor[data.func](...data.inputs, res);\r\n        return;\r\n    }\r\n};\r\n//\r\n// // TODO GET functions\r\n// AllowFunctions.getItemGridData = (itemId, editor) => {\r\n//     return editor.idMan.getItem(itemId).props.griddata;\r\n// };\r\n// AllowFunctions.getLayout = (editor) => {\r\n//     let layout = {\r\n//         id: editor.rootLayoutRef.current.props.id,\r\n//         griddata: editor.rootLayoutRef.current.props.griddata,\r\n//         children: []\r\n//     };\r\n//     let fillData = (item, parent) => {\r\n//         parent[item.props.id] = {\r\n//             id: item.props.id,\r\n//             griddata: item.props.griddata,\r\n//             children: []\r\n//         };\r\n//\r\n//         Object.values(item.allChildRefs).forEach(child => {\r\n//             if (child && child.current)\r\n//                 fillData(child.current, parent[item.props.id].children);\r\n//         });\r\n//     };\r\n//\r\n//     fillData(editor.rootLayoutRef.current, layout.children);\r\n//\r\n//     return layout;\r\n// };\r\n// AllowFunctions.getSiteData = (editor) => {\r\n//     return editor.state.siteData;\r\n// };\r\n// AllowFunctions.getBreakpointsData = (itemId, editor) => {\r\n//     let item = editor.idMan.getItem(itemId);\r\n//     return {\r\n//         breakpoints: item.props.breakpointmanager.breakpoints,\r\n//         currentWidth: item.props.breakpointmanager.lastWidth\r\n//     }\r\n// };\r\n//\r\n// // TODO POST functions\r\n// AllowFunctions.changePage = (pageId, editor) => {\r\n//     editor.onPageChange(pageId);\r\n//     return true;\r\n// };\r\n// AllowFunctions.addItem = (parentId, childData, gridItemStyle, style, editor) => {\r\n//     createItem(editor.idMan.getItem(parentId), childData, false, gridItemStyle, style);\r\n//     return true;\r\n// };\r\n//\r\n// AllowFunctions.undoRedoMethod = (method, inputs, editor) => {\r\n//     editor.undoredo[method](inputs);\r\n//     return true;\r\n// };\r\n// AllowFunctions.togglePreview = (preview, editor) => {\r\n//     editor.togglePreview(preview);\r\n//     return true;\r\n// };\r\n// AllowFunctions.setZoomLevel = (zoomLevel, editor) => {\r\n//     editor.setZoomLevel(zoomLevel);\r\n//     return true;\r\n// };\r\n//\r\n// // TODO Edit functions\r\n// AllowFunctions.setDataInBackground = (itemId, prop, value, editor) => {\r\n//     let item = editor.idMan.getItem(itemId);\r\n//     setDataInBreakpoint(prop, value, item, true);\r\n//     return item.props.griddata;\r\n// };\r\n\r\nexport default EditorController;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class Inspector extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open? 100: 0,\r\n            inspectorMenu: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        if (this.context.inspectorPinned) {\r\n            this.props.pinInspector();\r\n            this.close(force);\r\n            return;\r\n        }\r\n\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setMenu = (inspectorMenu) => {\r\n        this.setState({inspectorMenu});\r\n    };\r\n\r\n    getDefaultMenu = () => {\r\n        return <div\r\n            className=\"InspectorDefaultMenuRoot\"\r\n        >\r\n            <span>\r\n                Select a component to show options\r\n            </span>\r\n        </div>\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"InspectorRoot\"\r\n                    style={{...\r\n                        !this.context.inspectorPinned ? {\r\n                            right: `${this.state.percent - 100}%`,\r\n                            opacity: this.state.percent / 100\r\n                        } : {right: \"0%\", opacity: 1},\r\n                        ...{\r\n                        }}\r\n                    }\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div style={{\r\n                    }}>\r\n                    <div className=\"InspectorPin\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginLeft: 0,\r\n                                borderRadius: \"50%\",\r\n                                backgroundColor: this.context.inspectorPinned && \"#8d8d8d\"\r\n                            }}\r\n                            onClick={(e) => {\r\n                                this.props.pinInspector();\r\n                            }}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={12}\r\n                                height={12}\r\n                                src={this.context.inspectorPinned ?\r\n                                    process.env.PUBLIC_URL + '/static/icon/pin-white.svg':\r\n                                    process.env.PUBLIC_URL + '/static/icon/pin.svg'}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n                    {\r\n                        this.state.inspectorMenu || this.getDefaultMenu()\r\n                    }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.context.inspectorPinned &&\r\n\r\n                    <div\r\n                        className=\"InspectorPinRoot\"\r\n                    >\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspector.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport {stretch} from \"../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AdjustmentStretch extends React.Component {\r\n    onClick = (e) => {\r\n        let {itemId, idMan} = this.props;\r\n        stretch(idMan.getItem(itemId));\r\n    };\r\n\r\n    onMouseDown = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        let {isStretch} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                className=\"AdjustmentStretchRoot\"\r\n                onPointerDown={this.onMouseDown}\r\n                onClick={this.onClick}\r\n                style={this.props.style}\r\n            >\r\n                {\r\n                    isStretch && <img draggable={false} width={16} height={16} src={require('./icons/minimize.svg')} />\r\n                }\r\n                {\r\n                    !isStretch && <img draggable={false} width={16} height={16} src={require('./icons/maximize.svg')} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport AdjustmentStretch from \"./AdjustmentStretch\";\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentResize extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(nextProps.data, this.data))\r\n            return true;\r\n\r\n        if (!shallowEqual(nextProps, this.props))\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    render () {\r\n        let {data, allowStretch, idMan, itemId, isStretch, draggingStart, transformStyleId, item} = this.props;\r\n        this.data = cloneObject(data);\r\n        let stretchStyle = {};\r\n        if (!allowStretch) stretchStyle.display = \"none\";\r\n\r\n        let classes = classNames(\r\n            \"AdjustmentResizeRoot\",\r\n            transformStyleId\r\n        );\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                style={{\r\n                    width: data.width,\r\n                    height: data.height,\r\n                    top: data.top,\r\n                    left: data.left,\r\n                    // transform: transform\r\n                }}\r\n                className={classes}\r\n            >\r\n                {\r\n                    !isStretch &&\r\n                    ['s','n','e','w','se','ne','sw','nw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            enabled={this.props.sides.includes(side)}\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.props.onResizeStart}\r\n                            onResize={this.props.onResize}\r\n                            onResizeStop={this.props.onResizeStop}\r\n                            draggingStart={draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n                {\r\n                    !(item.getCompositeFromData(\"transform\") || {}).rotateDegree && !item.props.noStretch &&\r\n                    <AdjustmentStretch\r\n                        style={stretchStyle}\r\n                        isStretch={isStretch}\r\n                        idMan={idMan}\r\n                        itemId={itemId}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {allowStretch, isGroupSelected, isHideInBreakpoint, isStretch} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentResize from \"./AdjustmentResize\";\r\n\r\nexport default class AdjustmentResizeWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n    }\r\n\r\n    update = (item, data, transformStyleId) => {\r\n        this.setState({item, data, transformStyleId});\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, data} = this.state;\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    item.getFromTempData(\"resizable\") &&\r\n                    !item.state.showAnimation &&\r\n                    !isGroupSelected(item) &&\r\n                    !isHideInBreakpoint(item) &&\r\n                    <AdjustmentResize\r\n                        id={item.props.id}\r\n                        key={`resize`}\r\n                        sides={item.props.resizeSides || ['n','s','e','w','ne','nw','se','sw']}\r\n                        onResizeStart={item.onResizeStart}\r\n                        onResize={item.onResize}\r\n                        onResizeStop={item.onResizeStop}\r\n                        draggingStart={item.state.draggingStart}\r\n                        isStretch={isStretch(item)}\r\n                        allowStretch={allowStretch(item)}\r\n                        itemId={item.props.id}\r\n                        item={item}\r\n                        idMan={item.props.idMan}\r\n                        transformStyleId={this.state.transformStyleId}\r\n                        data={data}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentHelpLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.helpLinesParent) {\r\n            let newParentRect = nextProps.helpLinesParent.getSize(false);\r\n\r\n            if (!shallowEqual(this.parentRect, cloneObject(newParentRect))) {\r\n                this.parentRect = newParentRect;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.props.width !== nextProps.width ||\r\n            this.props.height !== nextProps.height ||\r\n            this.props.show !== nextProps.show ||\r\n            this.props.dragging !== nextProps.dragging)\r\n            return true;\r\n\r\n        if (!shallowEqual(this.props.itemRect, nextProps.itemRect)) {\r\n            return true;\r\n        }\r\n        if (!shallowEqual(this.props.fakeItemRect, nextProps.fakeItemRect)) {\r\n            return true;\r\n        }\r\n        if (!shallowEqual(nextProps.item.getCompositeFromData(\"gridItemStyle\"), this.gridItemStyle)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getValue = (value) => {\r\n        if (value.includes(\"px\")) {\r\n            return `${parseFloat(value.replace(\"px\", \"\")).toFixed(1)}px`;\r\n        }\r\n        if (value.includes(\"%\")) {\r\n            return `${parseFloat(value.replace(\"%\", \"\")).toFixed(1)}%`;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    calculate = () => {\r\n        let {helpLinesParent, item, itemRect, width, height, dragging, fakeItemRect} = this.props;\r\n        // this.parentRect = this.parentRect || helpLinesParent.getSize(false);\r\n        this.parentRect = helpLinesParent.prepareRects();\r\n\r\n        if (fakeItemRect)\r\n            itemRect = fakeItemRect;\r\n        return {\r\n            ...item.calculateGridItem(itemRect.left - this.parentRect.left,\r\n                itemRect.top - this.parentRect.top, helpLinesParent,\r\n                width || itemRect.width, height || itemRect.height, this.parentRect, true, !dragging),\r\n            itemRect, parentRect: this.parentRect\r\n        };\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        return this.gridItemStyle;\r\n    };\r\n\r\n    render () {\r\n        let {show, item, transform, fakeItemRect} = this.props;\r\n        if (!show)\r\n            return null;\r\n\r\n        if (!item.mounted)\r\n            return null;\r\n\r\n        let {gridItemStyle, coordinates, itemRect, parentRect, coordinatesAbs} = this.calculate();\r\n        this.gridItemStyle = cloneObject(gridItemStyle);\r\n        if (fakeItemRect)\r\n            itemRect = fakeItemRect;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentHelpLinesRoot\"\r\n                style={{\r\n                    width: coordinatesAbs.cx2 - coordinatesAbs.cx1,\r\n                    height: coordinatesAbs.cy2 - coordinatesAbs.cy1,\r\n                    top: coordinatesAbs.cy1,\r\n                    left: coordinatesAbs.cx1,\r\n                }}\r\n            >\r\n                <div className=\"AdjustmentHelpLinesRect\" style={{\r\n                    top: itemRect.top - coordinatesAbs.cy1,\r\n                    left: itemRect.left - coordinatesAbs.cx1,\r\n                    width: itemRect.width,\r\n                    height: itemRect.height\r\n                }}/>\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&*/\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\")? \"visible\": \"hidden\"}\r\n                            x1={0}\r\n                            x2={itemRect.left - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&\r\n                        !this.props.dragging &&*/\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                !this.props.dragging)? \"visible\" : \"hidden\"}\r\n                            cx={0}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width}\r\n                            x2={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={0}\r\n                            y2={itemRect.top - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={0}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height}\r\n                            y2={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                </svg>\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-start\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                        left: (itemRect.left - coordinatesAbs.cx1) / 2,\r\n                        transform: \"translateY(-125%) translateX(-50%)\",\r\n                        margin: 0,\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#0013ff\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    >\r\n                            {this.getValue(gridItemStyle.marginLeft)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                            right: (coordinatesAbs.cx2 - itemRect.left - itemRect.width) / 2,\r\n                            transform: \"translateY(-125%) translateX(50%)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginRight)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: (itemRect.top - coordinatesAbs.cy1) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(-50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginTop)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            bottom: (coordinatesAbs.cy2 - itemRect.top - itemRect.height) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginBottom)}\r\n                    </p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {isGroupSelected, isHideInBreakpoint} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentHelpLines from \"./AdjustmentHelpLines\";\r\n\r\nexport default class AdjustmentHelpLinesWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n\r\n        this.helpLineRef = React.createRef();\r\n    }\r\n\r\n    update = (item, helpLineParent, itemRect, dragging, fakeItemRect) => {\r\n        this.setState({item, itemRect, dragging, fakeItemRect});\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    getRuntimeGridItemStyle = () => {\r\n        if (this.helpLineRef.current)\r\n            return this.helpLineRef.current.getRuntimeGridItemStyle();\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, itemRect, dragging, fakeItemRect} = this.state;\r\n        return (\r\n            <>\r\n                {\r\n                    !item.state.showAnimation &&\r\n                    !isHideInBreakpoint(item) &&\r\n                    <AdjustmentHelpLines\r\n                        ref={this.helpLineRef}\r\n                        show={!item.props.helplineOff /*&& item.state.selected*/ &&\r\n                        item.state.helpLinesParent && !item.getFromTempData(\"pageResize\") &&\r\n                        !isGroupSelected(item)}\r\n                        helpLinesParent={item.state.helpLinesParent}\r\n                        item={item}\r\n                        dragging={dragging}\r\n                        itemRect={itemRect}\r\n                        fakeItemRect={fakeItemRect}\r\n                        width={itemRect.width}\r\n                        height={itemRect.height}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\n\r\nexport default class AdjustmentHover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            active: true\r\n        };\r\n    }\r\n\r\n    update = (item, size, clear) => {\r\n        if (!clear)\r\n            if (!item.state.selected)\r\n                this.setState({item, size, itemId: item.props.id});\r\n            else\r\n                this.setState({item, size, itemId: undefined});\r\n        else {\r\n            if (this.state.itemId === item.props.id) {\r\n                this.setState({item, size, itemId: undefined});\r\n            }\r\n        }\r\n    };\r\n\r\n    activate = (active) => {\r\n        this.setState({active});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.active)\r\n            return null;\r\n\r\n        if (!this.state.itemId)\r\n            return null;\r\n        return (\r\n            <Popper\r\n                open={true}\r\n                anchorEl={document.getElementById(this.state.itemId)}\r\n                placement=\"top-start\"\r\n                style={{\r\n                    zIndex: 9999999,\r\n                    pointerEvents: \"none\"\r\n                }}\r\n                disablePortal={false}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: false\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: false,\r\n                    },\r\n                    hide: {\r\n                        enabled: false,\r\n                    },\r\n                }}\r\n            >\r\n                {\r\n                    this.state.itemId ?\r\n                        <div\r\n                            className=\"AwesomeGridLayoutRootHover\"\r\n                            key={`hover`}\r\n                            style={{\r\n                                width: this.state.size ? this.state.size.width : 0,\r\n                                height: this.state.size ? this.state.size.height : 0,\r\n                            }}\r\n                        >\r\n                            <span className=\"AGLHoverCompName\">\r\n                                {this.state.item.props.tagName}\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                }\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Layout.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class Layout extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            treeData: []\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent > 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent, open: (percent === 100)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = () => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent < 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent, open: (percent !== 0)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    setLayout = (layout) => {\r\n        this.processLayout(layout)\r\n    };\r\n\r\n    processLayout = (layout) => {\r\n        if (!layout)\r\n            return;\r\n\r\n        let {idMan} = this.props;\r\n\r\n        let getTreeItem = (layoutItem) => {\r\n            let item = idMan.getItem(layoutItem.childData.props.id);\r\n            return {\r\n                title: layoutItem.childData.tagName,\r\n                layoutItem: layoutItem,\r\n                children: layoutItem.childrenData.map(childLayout => {\r\n                    return getTreeItem(childLayout);\r\n                }),\r\n                expanded: item.getFromTempData(\"layoutTreeExpanded\"),\r\n                parentItemId: item.props.parent && item.props.parent.props.id\r\n            };\r\n        };\r\n\r\n        this.setState({\r\n            treeData: [getTreeItem(layout[0])]\r\n        });\r\n    };\r\n\r\n    setTree = (treeData) => {\r\n        let {idMan} = this.props;\r\n        let updateItem = (treeItem) => {\r\n            let item = idMan.getItem(treeItem.layoutItem.childData.props.id);\r\n            item.setTempData(\"layoutTreeExpanded\", treeItem.expanded);\r\n            treeItem.children.forEach((childTreeItem, index) => {\r\n                item.setChildZIndex(childTreeItem.layoutItem.childData.props.id, index + 1);\r\n            });\r\n            item.updateLayout();\r\n            treeItem.children.map(childTreeItem => {\r\n                updateItem(childTreeItem);\r\n            });\r\n        };\r\n\r\n        updateItem(treeData[0]);\r\n\r\n        this.setState({treeData});\r\n    };\r\n\r\n    render() {\r\n        let {idMan} = this.props;\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"LayoutRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"LayoutTreeRootHeader\"\r\n                    >\r\n                        {/*Header*/}\r\n                        <div\r\n                            className=\"LayoutTreeRootHeaderContainer\"\r\n                        >\r\n                            <span className=\"LayoutTreeRootHeaderTitle\">\r\n                                Layers\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.close}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"LayoutTreeRoot\"\r\n                    >\r\n                        Coming soon ...\r\n                        {/*<SortableTree\r\n                            className=\"LayoutSortableTree\"\r\n                            treeData={this.state.treeData}\r\n                            onChange={treeData => this.setTree(treeData)}\r\n                            innerStyle={{\r\n                                outline: 'none',\r\n                            }}\r\n                            generateNodeProps={rowInfo => {\r\n                                let layoutItem = rowInfo.node.layoutItem; // {tagName, childData, childrenData}\r\n                                let item = idMan.getItem(layoutItem.childData.props.id);\r\n                                let rowWrapperStyle = {};\r\n                                if (item.state.selected)\r\n                                    rowWrapperStyle.backgroundColor = \"#e4ffea\";\r\n\r\n                                let buttons = [\r\n                                    <IconButton\r\n                                        key={\"rightClick\"}\r\n                                        onClick={(e) => {\r\n                                            item.onContextMenu(e);\r\n                                        }}\r\n                                        imageContainerStyle={{\r\n                                            padding: 4\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={16}\r\n                                            height={16}\r\n                                            src={process.env.PUBLIC_URL + 'static/icon/more-black.svg'}\r\n                                        />\r\n                                    </IconButton>\r\n                                ];\r\n                                if (isHideInBreakpoint(item)) {\r\n                                    buttons.unshift(\r\n                                        <IconButton\r\n                                            key={\"hidedInBp\"}\r\n                                            onClick={(e) => {\r\n                                                showInBreakPoint(item);\r\n                                            }}\r\n                                            imageContainerStyle={{\r\n                                                padding: 4\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                draggable={false}\r\n                                                width={16}\r\n                                                height={16}\r\n                                                src={process.env.PUBLIC_URL + 'static/icon/hide.svg'}\r\n                                            />\r\n                                        </IconButton>\r\n                                    )\r\n                                }\r\n\r\n                                return ({\r\n                                    rowWrapperStyle: rowWrapperStyle,\r\n                                    onClick: (e) => {\r\n                                        let eClass = e.target.getAttribute(\"class\");\r\n                                        if (eClass !== \"expandButton\" && eClass !== \"collapseButton\")\r\n                                            item.onSelect(true, undefined, undefined, true);\r\n                                    },\r\n                                    icons: [\r\n                                        <Image\r\n                                            draggable={false}\r\n                                            width={16}\r\n                                            height={16}\r\n                                            src={item.props.favIconUrl}\r\n                                            style={{\r\n                                                marginTop: 2\r\n                                            }}\r\n                                            errorsrc={process.env.PUBLIC_URL + '/static/icon/rectangle.svg'}\r\n                                        />\r\n                                    ],\r\n                                    buttons: buttons,\r\n                                })\r\n                            }}\r\n                            canDrag={({ node, path, treeIndex, lowerSiblingCounts, isSearchMatch,\r\n                                          isSearchFocus}) => {\r\n                                let item = idMan.getItem(node.layoutItem.childData.props.id);\r\n                                return !item.props.isPage && !item.props.isSection;\r\n                            }}\r\n                            canDrop={({ node, nextParent, prevPath, nextPath }) => {\r\n                                return !!(nextParent && node.parentItemId === nextParent.layoutItem.childData.props.id);\r\n                            }}\r\n                        />*/}\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nLayout.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './AddComponent.css';\r\nimport {createItem, sortBy} from \"../../AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class ComponentGrid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.rootRef = React.createRef();\r\n    }\r\n\r\n    getItemStyle = (item) => {\r\n        let rootWidth = this.rootRef.current?\r\n            this.rootRef.current.getBoundingClientRect().width - 24: 400 - 24;\r\n\r\n        return {\r\n            width: rootWidth / (item.widthRatio || 2),\r\n            // height: rootWidth / (item.widthRatio || 2) / (item.aspectRatio || 2)\r\n            height: \"fit-content\"\r\n        };\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setDraggingItem = (draggingItem, e) => {\r\n        e.persist();\r\n        this.setState({draggingItem});\r\n\r\n        clearTimeout(this.closingTimeOut);\r\n        this.closingTimeOut = setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            if (this.state.draggingItem) {\r\n                this.props.closeMenu(true);\r\n                this.createItemAndDrag(this.state.draggingItem, e);\r\n            }\r\n        }, 200);\r\n    };\r\n\r\n    createItemAndDrag = (item, e) => {\r\n        let {pageRef, editor} = this.props;\r\n        let selectedItem = editor.select.getSelected();\r\n\r\n        createItem(pageRef.current, {\r\n            tagName: item.tagName,\r\n            props: cloneObject(item.presetProps)\r\n        }, undefined, undefined, undefined, (agl) => {\r\n            console.log(\"mouseDown\", agl.props.input.mouseDown);\r\n            if (agl.props.input.mouseDown)\r\n                window.requestAnimationFrame(() => {\r\n                    agl.onMouseDown(e, true);\r\n                });\r\n            else\r\n                window.requestAnimationFrame(() => {\r\n                    this.changeItemParent(agl, selectedItem);\r\n                });\r\n        });\r\n    };\r\n\r\n    changeItemParent = (agl, selectedItem) => {\r\n        let size = agl.getSize(false);\r\n\r\n        if (!selectedItem || selectedItem.props.isPage)\r\n            selectedItem = this.props.editor.rootLayoutRef.current.props.aglComponent.getSectionOfPoint(\r\n                size.left, size.top, size.width, size.height\r\n            );\r\n\r\n        let newGridItemStyle = {\r\n            alignSelf: \"center\",\r\n            justifySelf: \"center\",\r\n            position: \"relative\",\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            gridArea: \"1/1/2/2\",\r\n        };\r\n\r\n        agl.props.dragdrop.dropItem(agl, agl.props.parent, selectedItem, (newItem) => {\r\n            newItem.setGridItemStyle(newGridItemStyle, newItem.props.breakpointmanager.getHighestBpName());\r\n        });\r\n    };\r\n\r\n    createItem = (item, e) => {\r\n        this.props.closeMenu(true);\r\n        let {pageRef, editor} = this.props;\r\n        let selectedItem = editor.select.getSelected();\r\n\r\n        createItem(pageRef.current, {\r\n            tagName: item.tagName,\r\n            props: cloneObject(item.presetProps)\r\n        }, undefined, undefined, undefined, (agl) => {\r\n            window.requestAnimationFrame(() => {\r\n                this.changeItemParent(agl, selectedItem);\r\n            });\r\n        });\r\n    };\r\n\r\n    setDraggingEnd = () => {\r\n        this.setState({draggingItem: undefined});\r\n    };\r\n\r\n    render() {\r\n        let {allItems, id} = this.props;\r\n        if (!allItems)\r\n            return null;\r\n\r\n        return (\r\n            <React.Fragment key={id}>\r\n                <div\r\n                    className=\"AddComponentItemGrid\"\r\n                    ref={this.rootRef}\r\n                    key={id}\r\n                >\r\n                    {\r\n                        sortBy(allItems, \"order\").map((item, index) => {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <div\r\n                                        className=\"AddComponentItemGridItem\"\r\n                                        style={this.getItemStyle(item)}\r\n                                        onDragStart={(e) => {\r\n                                            this.setDraggingItem(item, e);\r\n                                        }}\r\n                                        onDragEnd={(e) => {\r\n                                            this.setDraggingEnd();\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.createItem(item, e);\r\n                                        }}\r\n                                        draggable\r\n                                    >\r\n                                        <img\r\n                                            className=\"AddComponentItemGridItemImage\"\r\n                                            src={item.imageUrl || '/static/image/box.webp'}\r\n                                            width={\"100%\"}\r\n                                            draggable={false}\r\n                                        />\r\n                                        {\r\n                                            item.label &&\r\n                                            <div\r\n                                                className=\"AddComponentItemGridItemLabel\"\r\n                                            >\r\n                                                {item.label}\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AddComponent.css';\r\nimport ComponentGrid from \"./ComponentGrid\";\r\nimport Divider from \"../../Menus/CommonComponents/Divider\";\r\nimport debounce from 'lodash.debounce';\r\nimport {sortBy} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AddComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            componentListItem: undefined,\r\n            componentSubListItem: undefined,\r\n            componentListItemHover: undefined,\r\n            componentSubListItemHover: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setComponentListItemDebounce = debounce((componentListItem) => {\r\n        this.setComponentListItem(componentListItem);\r\n    }, 500);\r\n\r\n    setComponentListItemLeave = (componentListItem) => {\r\n        if (this.state.componentListItemHover === componentListItem) {\r\n            this.setState({componentListItemHover: undefined});\r\n        }\r\n    };\r\n\r\n    setComponentListItem = (componentListItem) => {\r\n        if (componentListItem !== this.state.componentListItem &&\r\n            componentListItem === this.state.componentListItemHover)\r\n            this.setState({componentListItem,\r\n                componentSubListItem: componentListItem.subList && Object.values(componentListItem.subList)[0]?\r\n                    Object.values(componentListItem.subList)[0][0]: undefined\r\n            });\r\n    };\r\n\r\n    setComponentSubListItemDebounce = debounce((componentSubListItem) => {\r\n        this.setComponentSubListItem(componentSubListItem);\r\n    }, 500);\r\n\r\n    setComponentSubListItemLeave = (componentSubListItem) => {\r\n        if (this.state.componentSubListItemHover === componentSubListItem) {\r\n            this.setState({componentSubListItemHover: undefined});\r\n        }\r\n    };\r\n\r\n    setComponentSubListItem = (componentSubListItem) => {\r\n        if (componentSubListItem !== this.state.componentSubListItem &&\r\n            componentSubListItem.listName === this.state.componentListItem.name &&\r\n            componentSubListItem === this.state.componentSubListItemHover)\r\n            this.setState({componentSubListItem});\r\n    };\r\n\r\n    render() {\r\n        let {allComponentData} = this.props;\r\n        if (!allComponentData)\r\n            return null;\r\n\r\n        let allItems;\r\n        if (this.state.componentListItem && this.state.componentListItem.allItems)\r\n            allItems = this.state.componentListItem.allItems;\r\n        if (this.state.componentSubListItem && this.state.componentSubListItem.allItems)\r\n            allItems = this.state.componentSubListItem.allItems;\r\n\r\n        if (!this.state.componentListItem)\r\n            allItems = undefined;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"AddComponentRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"AddComponentList\"\r\n                    >\r\n                        {\r\n                            sortBy(Object.values(allComponentData.builtin), \"order\").map(componentListItem => {\r\n                                let style = {};\r\n                                if (componentListItem === this.state.componentListItem)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={componentListItem.name}\r\n                                        className=\"AddComponentListItem\"\r\n                                        onMouseEnter={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setComponentListItem(componentListItem);\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            this.setComponentListItemLeave(componentListItem);\r\n                                        }}\r\n                                        style={style}\r\n                                    >\r\n                                        {componentListItem.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <Divider/>\r\n                        {\r\n                            sortBy(Object.values(allComponentData.apps), \"order\").map(componentListItem => {\r\n                                let style = {};\r\n                                if (componentListItem === this.state.componentListItem)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={componentListItem.name}\r\n                                        className=\"AddComponentListItem\"\r\n                                        onMouseEnter={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onMouseOver={(e) => {\r\n                                            this.setState({componentListItemHover: componentListItem});\r\n                                            this.setComponentListItemDebounce(componentListItem);\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setComponentListItem(componentListItem);\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            this.setComponentListItemLeave(componentListItem);\r\n                                        }}\r\n                                        style={style}\r\n                                    >\r\n                                        {componentListItem.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.componentListItem &&\r\n                        this.state.componentListItem.subList &&\r\n                        <div\r\n                            className=\"AddComponentSubList\"\r\n                        >\r\n                            {\r\n                                sortBy(Object.keys(allComponentData.builtin[this.state.componentListItem.name].subList), \"order\")\r\n                                    .map(groupName => {\r\n                                        let componentSubListItems =\r\n                                            allComponentData.builtin[this.state.componentListItem.name].subList[groupName];\r\n                                        return (\r\n                                            <React.Fragment key={groupName}>\r\n                                                <div\r\n                                                    key={groupName}\r\n                                                    className=\"AddComponentSubListGroup\"\r\n                                                >\r\n                                                    {groupName}\r\n                                                </div>\r\n                                                {\r\n                                                    sortBy(componentSubListItems, \"order\").map(componentSubListItem => {\r\n                                                        let style = {};\r\n                                                        if (componentSubListItem === this.state.componentSubListItem)\r\n                                                            style.backgroundColor = \"#e5ffff\";\r\n                                                        return (\r\n                                                            <div\r\n                                                                key={componentSubListItem.name}\r\n                                                                className=\"AddComponentSubListItem\"\r\n                                                                onMouseEnter={(e) => {\r\n                                                                    this.setState({componentSubListItemHover: componentSubListItem});\r\n                                                                    this.setComponentSubListItemDebounce(componentSubListItem);\r\n                                                                }}\r\n                                                                onMouseOver={(e) => {\r\n                                                                    this.setState({componentSubListItemHover: componentSubListItem});\r\n                                                                    this.setComponentSubListItemDebounce(componentSubListItem);\r\n                                                                }}\r\n                                                                onClick={(e) => {\r\n                                                                    this.setComponentSubListItem(componentSubListItem);\r\n                                                                }}\r\n                                                                onMouseOut={(e) => {\r\n                                                                    this.setComponentSubListItemLeave(componentSubListItem);\r\n                                                                }}\r\n                                                                style={style}\r\n                                                            >\r\n                                                                {componentSubListItem.name}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                    <ComponentGrid\r\n                        allItems={allItems}\r\n                        id={this.state.componentSubListItem? this.state.componentSubListItem.name:\r\n                            this.state.componentListItem? this.state.componentListItem.name: null}\r\n                        closeMenu={this.close}\r\n                        pageRef={this.props.pageRef}\r\n                        editor={this.props.editor}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nAddComponent.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport './PageTypeTitle.css';\r\n\r\nexport default class PageTypeTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: props.defaultOpen || false\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ButtonBase className=\"PageTypeTitle\" onClick={(e) => {\r\n                if (this.props.onChange)\r\n                    this.props.onChange(!this.state.open);\r\n                this.setState({open: !this.state.open});\r\n            }}>\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n\r\n                    <div className=\"PageTypeTitleExpandIcon\">\r\n                        {\r\n                            this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/down-arrow.svg'} />\r\n                        }\r\n                        {\r\n                            !this.state.open &&\r\n                            <img draggable={false} width={10} height={10}\r\n                                 src={process.env.PUBLIC_URL + '/static/icon/right-arrow.svg'} />\r\n                        }\r\n                    </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class PageInfo extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onRename = (e) => {\r\n        this.newPageName = e.target.value;\r\n    };\r\n\r\n    rename = () => {\r\n        let {pageData} = this.props;\r\n\r\n        if (this.newPageName === pageData.props.pageName)\r\n            return;\r\n\r\n        if (!this.newPageName) {\r\n            // TODO show error\r\n            return;\r\n        }\r\n\r\n        pageData.props.pageName = this.newPageName;\r\n        this.newPageName = undefined;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    setAsHomePage = () => {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n\r\n        let home = Object.values(siteData.allPages).find(p => {return p.props.isHome});\r\n\r\n        if (home)\r\n            delete home.props.isHome;\r\n        pageData.props.isHome = true;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's this page's name (on your menu)?\r\n                    </span>\r\n                    <input\r\n                        defaultValue={pageData.props.pageName}\r\n                        className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.onRename}\r\n                        onBlur={this.rename}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.rename()\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        <Image\r\n                            draggable={false}\r\n                            width={16}\r\n                            height={16}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/home.svg'}\r\n                            style={{\r\n                                marginTop: 2,\r\n                                marginRight: 12\r\n                            }}\r\n                        />\r\n                        {\r\n                            pageData.props.isHome &&\r\n                            \"This page is your home page\"\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            \"Set this page as your home page\"\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            <Button className=\"PageInfoHomePageButton\" variant=\"contained\"\r\n                                onClick={this.setAsHomePage}\r\n                            >\r\n                                Set as Home Page\r\n                            </Button>\r\n                        }\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Radio from \"@material-ui/core/Radio/Radio\";\r\n\r\nconst AglRadio = withStyles((theme) => ({\r\n    root: {\r\n        padding: 6,\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    checked: {\r\n        color: '#137cbd',\r\n    },\r\n}))(Radio);\r\n\r\nexport default AglRadio;\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport GridViewer from \"../../../Menus/CommonComponents/GridViewer\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\r\nimport AglRadio from \"../../../Menus/CommonComponents/AglRadio\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class Permissions extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    changePermission = (type) => (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.type = type;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onSetPassword = (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.password = e.target.value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onChangeMemberType = (e) => {\r\n        let {pageData} = this.props;\r\n        pageData.props.pageSetting.permissions.memberType = e.target.value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    onRoleChange = (checked, role) => {\r\n        let {pageData} = this.props;\r\n        if (checked) {\r\n            if (pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role) < 0)\r\n                pageData.props.pageSetting.permissions.memberRoles.push(role);\r\n        } else {\r\n            if (pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role) >= 0) {\r\n                let index = pageData.props.pageSetting.permissions.memberRoles.findIndex(r => r === role);\r\n                pageData.props.pageSetting.permissions.memberRoles.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Who can view this page?\r\n                    </span>\r\n\r\n                    <GridViewer>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Everyone\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={process.env.PUBLIC_URL + '/static/icon/world.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Everyone\r\n                            </span>\r\n                        </div>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Password Holder\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Password Holder\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={process.env.PUBLIC_URL + '/static/icon/password.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Password Holder\r\n                            </span>\r\n                        </div>\r\n                        <div className={`PermissionsItem ${\r\n                            pageData.props.pageSetting.permissions.type === \"Member Only\" ?\r\n                                \"PermissionsItemSelected\": \"\"}`}\r\n                             onClick={this.changePermission(\"Member Only\")}\r\n                        >\r\n                            <Image\r\n                                className=\"PermissionsItemImage\"\r\n                                draggable={false}\r\n                                width={92}\r\n                                height={92}\r\n                                src={process.env.PUBLIC_URL + '/static/icon/group.svg'}\r\n                            />\r\n\r\n                            <span className=\"PermissionsItemTitle\">\r\n                                Member Only\r\n                            </span>\r\n                        </div>\r\n                    </GridViewer>\r\n\r\n                    <span className=\"PermissionsDescription\">\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" &&\r\n                            \"Everyone can see this page\"\r\n                        }\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Password Holder\" &&\r\n                            \"Visitors with a password can see this page\"\r\n                        }\r\n                        {\r\n                            pageData.props.pageSetting.permissions.type === \"Member Only\" &&\r\n                            \"Visitors need to sign up to see this page\"\r\n                        }\r\n                    </span>\r\n                </div>\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type === \"Password Holder\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            What's the page's password?\r\n                        </span>\r\n\r\n                        <input\r\n                            defaultValue={pageData.props.pageSetting.permissions.password}\r\n                            className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                            type=\"text\"\r\n                            onChange={this.onSetPassword}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type === \"Member Only\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            Which member can access this page?\r\n                        </span>\r\n\r\n                        <RadioGroup className=\"PermissionsRadioGroup\"\r\n                                    value={pageData.props.pageSetting.permissions.memberType}\r\n                                    onChange={this.onChangeMemberType}\r\n                        >\r\n                            <FormControlLabel\r\n                                value=\"all\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    All members\r\n                                </span>}\r\n                            />\r\n                            <FormControlLabel\r\n                                className=\"PermissionsFormLabel\"\r\n                                value=\"role\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    Members with some role\r\n                                </span>}\r\n                            />\r\n                            <FormControlLabel\r\n                                disabled\r\n                                className=\"PermissionsFormLabel\"\r\n                                value=\"pay\" control={<AglRadio color='default' />}\r\n                                label={<span className=\"PermissionsFormLabel\">\r\n                                    Paying customers\r\n                                </span>}\r\n                            />\r\n                        </RadioGroup>\r\n\r\n                        {\r\n                            pageData.props.pageSetting.permissions.memberType === \"role\" &&\r\n                            <div className=\"PageInfoBox\">\r\n                                <span className=\"PageInfoBoxTitle\">\r\n                                    Select from your member roles\r\n                                </span>\r\n\r\n                                <div className=\"PermissionsRolesInput NumberInput PageManagerRenameInput\"\r\n                                    onClick={(e) => {\r\n                                        this.setState({roleAnchor: e.target})\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        pageData.props.pageSetting.permissions.memberRoles.map(role => {\r\n                                            return role;\r\n                                        }).join(\" \")\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            this.state.roleAnchor &&\r\n                            <Menu\r\n                                style={{\r\n                                    zIndex: 99999999999,\r\n                                }}\r\n                                anchorEl={this.state.roleAnchor}\r\n                                open={this.state.roleAnchor !== undefined}\r\n                                onClose={(e) => {\r\n                                    this.setState({roleAnchor: undefined})\r\n                                }}\r\n                                MenuListProps={{\r\n                                    style: {\r\n                                        padding: 0,\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <MenuItem dense disabled style={{\r\n                                    opacity: 1\r\n                                }}>\r\n                                    <span className=\"PermissionsSelectRole\">\r\n                                        Select roles\r\n                                    </span>\r\n                                </MenuItem>\r\n\r\n                                {\r\n                                    siteData.allApps.member.setting.roles.map(role => {\r\n                                        return (\r\n                                            <MenuItem dense onClick={(e) => {\r\n                                                this.onRoleChange(!(pageData.props.pageSetting.permissions.memberRoles\r\n                                                    .findIndex(r => r === role) > -1), role);\r\n                                            }}\r\n                                                      key={role}\r\n                                                      style={{\r\n                                                          paddingTop: 0,\r\n                                                          paddingBottom: 0\r\n                                                      }}\r\n                                            >\r\n                                                <Checkbox\r\n                                                    size={'small'}\r\n                                                    checked={\r\n                                                        pageData.props.pageSetting.permissions.memberRoles\r\n                                                            .findIndex(r => r === role) > -1\r\n                                                    }\r\n                                                    onChange={(e) => {\r\n                                                        this.onRoleChange(e.target.checked, role);\r\n                                                    }}\r\n                                                    color=\"default\"\r\n                                                />\r\n                                                <span className=\"PermissionsRole\">\r\n                                                    {role}\r\n                                                </span>\r\n                                            </MenuItem>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                                <MenuItem dense onClick={(e) => {\r\n                                    // TODO connect to member manager\r\n                                    console.log(\"Soon\")\r\n                                }}\r\n                                >\r\n                                    <span className=\"PermissionsNewRole\">\r\n                                        Add New Role\r\n                                    </span>\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        }\r\n\r\n                        {\r\n                            pageData.props.pageSetting.permissions.memberType === \"pay\" &&\r\n                            <div className=\"PageInfoBox\">\r\n                                <span className=\"PageInfoBoxTitle\">\r\n                                    Coming soon\r\n                                </span>\r\n\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class SeoGoogle extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChangeSeoSetting = (param) => (e, value) => {\r\n        let {pageData} = this.props;\r\n\r\n        value = value || e.target.value;\r\n        console.log(\"onChangeSeoSetting\", value, param);\r\n        if (param === \"endUrl\") {\r\n            if (!this.newEndUrl)\r\n                return;\r\n\r\n            value = this.newEndUrl.replace(/\\s+/g, '').toLowerCase();\r\n            let siteData = this.context.siteData;\r\n            let same = Object.values(siteData.allPages).find(p => p.props.pageSetting.seoGoogle.endUrl === value);\r\n            if (same) {\r\n                console.log(\"onChangeSeoSetting2\");\r\n                this.setState({endUrlError: true});\r\n                delete this.newEndUrl;\r\n                return;\r\n            }\r\n\r\n            delete this.newEndUrl;\r\n        }\r\n\r\n        pageData.props.pageSetting.seoGoogle[param] = value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Preview on Google search\r\n                    </span>\r\n\r\n                    <div className=\"SeoGooglePreviewRoot\">\r\n                        <span className=\"SeoGooglePreviewTitle\">\r\n                            {\r\n                                pageData.props.pageSetting.seoGoogle.pageTitle ||\r\n                                    pageData.props.pageName\r\n                            }\r\n                        </span>\r\n                        <span className=\"SeoGooglePreviewUrl\">\r\n                            {\r\n                                siteData.setting.baseUrl + (\r\n                                    pageData.props.pageSetting.seoGoogle.endUrl ||\r\n                                    pageData.props.pageName.toLowerCase()\r\n                                )\r\n                            }\r\n                        </span>\r\n                        <span className=\"SeoGooglePreviewDesc\">\r\n                            {\r\n                                pageData.props.pageSetting.seoGoogle.pageDescription\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the lat part (or slug) of url?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.endUrl || pageData.props.pageName.toLowerCase()}\r\n                        className={`PageSettingInput PageManagerRenameInput PageInfoNameInput ${\r\n                            this.state.endUrlError? 'PageInfoNameInputError': \"\"\r\n                        }`}\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newEndUrl = e.target.value;\r\n                            this.setState({endUrlError: undefined});\r\n                        }}\r\n                        onBlur={this.onChangeSeoSetting(\"endUrl\")}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"endUrl\")(e);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page's title on search results and browser tabs?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.pageTitle || pageData.props.pageName}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newPageTitle = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSeoSetting(\"pageTitle\")(e, this.newPageTitle);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"pageTitle\")(e, this.newPageTitle);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page about? Add a description\r\n                    </span>\r\n\r\n                    <textarea\r\n                        defaultValue={pageData.props.pageSetting.seoGoogle.pageDescription}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        style={{\r\n                            resize: \"none\",\r\n                            minHeight: 120\r\n                        }}\r\n                        onChange={(e) => {\r\n                            this.newPageDescription = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSeoSetting(\"pageDescription\")(e, this.newPageDescription);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSeoSetting(\"pageDescription\")(e, this.newPageDescription);\r\n                            }\r\n                        }}\r\n                        rows={5}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Show this page in search results\r\n                    </span>\r\n\r\n                    <Switch\r\n                        className=\"SeoGoogleShowInSearch\"\r\n                        checked={\r\n                            pageData.props.pageSetting.permissions.type === \"Everyone\" ?\r\n                            pageData.props.pageSetting.seoGoogle.showInSearch: false\r\n                        }\r\n                        disabled={pageData.props.pageSetting.permissions.type !== \"Everyone\"}\r\n                        onChange={(e) => {\r\n                            let checked = e.target.checked;\r\n                            this.onChangeSeoSetting('showInSearch')(e, checked);\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    pageData.props.pageSetting.permissions.type !== \"Everyone\" &&\r\n                    <div className=\"PageInfoBox\">\r\n                        <span className=\"PageInfoBoxTitle\">\r\n                            Note: You’ve made changes to who can view this page, so it won’t show in search results. Go to the Permissions tab to change this.\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Image from \"../../../Menus/CommonComponents/Image\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\n\r\nexport default class SocialShare extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onChangeSocialShareSetting = (param) => (e, value) => {\r\n        let {pageData} = this.props;\r\n\r\n        value = value || e.target.value;\r\n        pageData.props.pageSetting.socialShare[param] = value;\r\n\r\n        this.context.update();\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        let siteData = this.context.siteData;\r\n        return (\r\n            <div className=\"PageSettingTabPanelRoot\">\r\n                <div className=\"PageInfoBox\">\r\n                    <div className=\"SocialShareTitle\">\r\n                        What is Social Share\r\n                    </div>\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Add the text and image that display when this page is shared on social networks like Facebook, Instagram and more.\r\n                    </span>\r\n                </div>\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        Preview on social\r\n                    </span>\r\n\r\n                    <div className=\"SocialPreviewBox\">\r\n                        <div className=\"SocialPreviewRoot\">\r\n                            <span className=\"SocialPreviewImageNoImage\">\r\n                                {\r\n                                    pageData.props.pageSetting.socialShare.imageUrl &&\r\n                                    <Image\r\n                                        className=\"SocialPreviewImage\"\r\n                                        src={pageData.props.pageSetting.socialShare.imageUrl}\r\n                                    />\r\n                                }\r\n\r\n                                <Button\r\n                                    className=\"SocialPreviewImageSelect\"\r\n                                >\r\n                                    Upload or Select an Image\r\n                                </Button>\r\n                            </span>\r\n                            <div className=\"SocialPreviewDetailBox\">\r\n                                <span className=\"SocialPreviewUrl\">\r\n                                    {\r\n                                        siteData.setting.baseUrl.substring(0, siteData.setting.baseUrl.lastIndexOf('/'))\r\n                                            .replace(/(^\\w+:|^)\\/\\//, '')\r\n\r\n                                    }\r\n                                </span>\r\n                                <span className=\"SocialPreviewTitle\">\r\n                                    {\r\n                                        pageData.props.pageSetting.socialShare.title ||\r\n                                        pageData.props.pageSetting.seoGoogle.pageTitle\r\n                                    }\r\n                                </span>\r\n                                <span className=\"SocialPreviewDescription\">\r\n                                    {\r\n                                        pageData.props.pageSetting.socialShare.description ||\r\n                                        pageData.props.pageSetting.seoGoogle.pageDescription\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page's title on social networks?\r\n                    </span>\r\n\r\n                    <input\r\n                        defaultValue={pageData.props.pageSetting.socialShare.title ||\r\n                            pageData.props.pageSetting.seoGoogle.pageTitle || pageData.props.pageName}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={(e) => {\r\n                            this.newTitle = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSocialShareSetting(\"title\")(e, this.newTitle);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSocialShareSetting(\"title\")(e, this.newTitle);\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div className=\"PageInfoBox\">\r\n                    <span className=\"PageInfoBoxTitle\">\r\n                        What's the page about? Add a description\r\n                    </span>\r\n\r\n                    <textarea\r\n                        defaultValue={pageData.props.pageSetting.socialShare.description ||\r\n                            pageData.props.pageSetting.seoGoogle.pageDescription}\r\n                        className=\"PageSettingInput PageManagerRenameInput PageInfoNameInput\"\r\n                        style={{\r\n                            resize: \"none\",\r\n                            minHeight: 120\r\n                        }}\r\n                        onChange={(e) => {\r\n                            this.newDescription = e.target.value;\r\n                        }}\r\n                        onBlur={(e) => {\r\n                            this.onChangeSocialShareSetting(\"description\")(e, this.newDescription);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.onChangeSocialShareSetting(\"description\")(e, this.newDescription);\r\n                            }\r\n                        }}\r\n                        rows={5}\r\n                    >\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageSetting.css';\r\nimport '../PageManager.css';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab/Tab\";\r\nimport PageInfo from \"./PageInfo\";\r\nimport Permissions from \"./Permissions\";\r\nimport SeoGoogle from \"./SeoGoogle\";\r\nimport SocialShare from \"./SocialShare\";\r\n\r\nexport default class PageSetting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tabValue: \"Page Info\"\r\n        }\r\n    }\r\n\r\n    onChangeTab = (e, tabValue) => {\r\n        this.setState({tabValue});\r\n    };\r\n\r\n    render () {\r\n        let {pageData} = this.props;\r\n        return (\r\n            <Modal\r\n                open={this.props.open}\r\n                onClose={this.props.onClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                className=\"PageSettingModal\"\r\n                disableBackdropClick\r\n            >\r\n                <div className=\"PageSettingRoot\">\r\n                    {/*Header*/}\r\n                    <div className=\"PageSettingHeader\">\r\n                        <div\r\n                            className=\"PageManagerHeaderContainer\"\r\n                        >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                Page Setting ({pageData.props.pageName})\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={this.props.onClose}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Tabs\r\n                        className=\"PageSettingTabBox\"\r\n                        value={this.state.tabValue}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={this.onChangeTab}\r\n                        aria-label=\"disabled tabs example\"\r\n                    >\r\n                        <Tab label=\"Page Info\" value=\"Page Info\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Permissions\" value=\"Permissions\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"SEO (Google)\" value=\"SEO (Google)\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Social Share\" value=\"Social Share\" className=\"PageSettingTab\"/>\r\n                        <Tab label=\"Advanced SEO\" value=\"Advanced SEO\" className=\"PageSettingTab\"/>\r\n\r\n                    </Tabs>\r\n\r\n                    {\r\n                        this.state.tabValue === \"Page Info\" &&\r\n                        <PageInfo\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Permissions\" &&\r\n                        <Permissions\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"SEO (Google)\" &&\r\n                        <SeoGoogle\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Social Share\" &&\r\n                        <SocialShare\r\n                            pageData={pageData}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        this.state.tabValue === \"Advanced SEO\" &&\r\n                        <div style={{\r\n                            height: \"100%\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            fontSize: 12,\r\n                            fontWeight: \"bold\"\r\n                        }}>\r\n                            Coming Soon\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport PageSetting from \"./PageSetting/PageSetting\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class PageItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pageMenuAnchorEl: undefined\r\n        };\r\n\r\n        this.renameInput = React.createRef();\r\n    }\r\n\r\n    duplicate = () => {\r\n        // TODO ask verify\r\n        let {pageData, editor} = this.props;\r\n\r\n        let newName = `${pageData.props.pageName}(Copy)`;\r\n        let newId = uuidv4();\r\n\r\n        this.context.siteData.allPages[newId] = cloneObject(pageData);\r\n        this.context.siteData.allPages[newId].props.pageName = newName;\r\n        this.context.siteData.allPages[newId].props.pageId = newId;\r\n        delete this.context.siteData.allPages[newId].props.isHome;\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    delete = () => {\r\n        // TODO ask verify\r\n        let {pageData, editor} = this.props;\r\n\r\n        delete this.context.siteData.allPages[pageData.props.pageId];\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.onPageChange(Object.keys(this.context.siteData.allPages)[0], true);\r\n    };\r\n\r\n    setAsHome = () => {\r\n        let {pageData, editor} = this.props;\r\n        let home = Object.values(this.context.siteData.allPages).find(p => {return p.props.isHome});\r\n\r\n        if (home)\r\n            delete home.props.isHome;\r\n        pageData.props.isHome = true;\r\n\r\n        this.setState({pageMenuAnchorEl: undefined});\r\n        editor.setState({reload: true});\r\n    };\r\n\r\n    setting = (active) => {\r\n        this.setState({setting: active, pageMenuAnchorEl: undefined});\r\n    };\r\n\r\n    rename = (active) => {\r\n        this.setState({rename: active, pageMenuAnchorEl: undefined}, () => {\r\n            if (active)\r\n                this.renameInput.current.focus();\r\n        });\r\n\r\n        if (!active) {\r\n            let {pageData, editor} = this.props;\r\n\r\n            if (this.newPageName === pageData.props.pageName)\r\n                return;\r\n\r\n            if (!this.newPageName) {\r\n                // TODO show error\r\n                return;\r\n            }\r\n\r\n            pageData.props.pageName = this.newPageName;\r\n            this.newPageName = undefined;\r\n\r\n            editor.setState({reload: true});\r\n        }\r\n    };\r\n\r\n    onRename = (e) => {\r\n        this.newPageName = e.target.value;\r\n    };\r\n\r\n    render () {\r\n        let {pageData, onClick, editor} = this.props;\r\n        let boxClasses = classNames(\r\n            \"PageManagerNormalPageBox\",\r\n            this.context.pageData === pageData && \"PageManagerNormalPageBoxSelected\"\r\n        );\r\n        return (\r\n            <div className={boxClasses} key={pageData.props.pageId}\r\n            >\r\n                {\r\n                    !this.state.rename &&\r\n                    <span className=\"PageManagerNormalPageTitle\">\r\n                        {pageData.props.pageName}\r\n                    </span>\r\n                }\r\n\r\n                <div className=\"PageManagerNormalPageClick\" onClick={onClick}>\r\n\r\n                </div>\r\n\r\n                {\r\n                    this.state.rename &&\r\n                    <input\r\n                        ref={this.renameInput}\r\n                        defaultValue={pageData.props.pageName}\r\n                        className=\"NumberInput PageManagerRenameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.onRename}\r\n                        onBlur={(e) => this.rename(false)}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                this.rename(false)\r\n                            }\r\n                        }}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            // TODO\r\n                        }}\r\n                    >\r\n                    </input>\r\n                }\r\n\r\n                {\r\n                    pageData.props.isHome &&\r\n                    <IconButton\r\n                        className=\"PageManagerNormalSiteButton\"\r\n                        onClick={(e) => {\r\n                            // TODO\r\n                        }}\r\n                        disabled\r\n                    >\r\n                        <Image\r\n                            src={process.env.PUBLIC_URL + '/static/icon/home.svg'}\r\n                            width={16}\r\n                            height={16}\r\n                        />\r\n                    </IconButton>\r\n                }\r\n\r\n                <IconButton\r\n                    className=\"PageManagerNormalSiteButton\"\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                        this.setState({pageMenuAnchorEl: e.target})\r\n                    }}\r\n                >\r\n                    <Image\r\n                        src={process.env.PUBLIC_URL + '/static/icon/more-black.svg'}\r\n                        width={16}\r\n                        height={16}\r\n                    />\r\n                </IconButton>\r\n\r\n                {\r\n                    this.state.pageMenuAnchorEl &&\r\n                    <Menu\r\n                        style={{\r\n                            zIndex: 99999999999\r\n                        }}\r\n                        anchorEl={this.state.pageMenuAnchorEl}\r\n                        open={this.state.pageMenuAnchorEl !== undefined}\r\n                        onClose={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setState({pageMenuAnchorEl: undefined});\r\n                        }}\r\n                        MenuListProps={{\r\n                            style: {\r\n                                padding: 0,\r\n                            }\r\n                        }}\r\n                    >\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setting(true);\r\n                        }}\r\n                        >\r\n                            Setting\r\n                        </MenuItem>\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.rename(true)\r\n                        }}>\r\n                            Rename\r\n                        </MenuItem>\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.duplicate(true)\r\n                        }}\r\n                        >\r\n                            Duplicate\r\n                        </MenuItem>\r\n                        {\r\n                            !pageData.props.isHome &&\r\n                            <MenuItem dense onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.delete()\r\n                            }}\r\n                            >\r\n                                Delete\r\n                            </MenuItem>\r\n                        }\r\n                        {\r\n                            !pageData.props.isHome && !pageData.props.isDynamic &&\r\n                            <MenuItem dense onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.setAsHome()\r\n                            }}\r\n                            >\r\n                                Set as Home Page\r\n                            </MenuItem>\r\n                        }\r\n                        <MenuItem dense onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            this.setState({pageMenuAnchorEl: undefined});\r\n                            onClick();\r\n                        }} >\r\n                            Edit Page\r\n                        </MenuItem>\r\n                    </Menu>\r\n                }\r\n\r\n                {\r\n                    this.state.setting &&\r\n                    <PageSetting\r\n                        open={this.state.setting !== undefined}\r\n                        onClose={() => this.setState({setting: undefined})}\r\n                        pageData={pageData}\r\n                        editor={editor}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AddNewPageDialogItem.css';\r\n\r\nexport default class AddNewPageDialogItem extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"AddNewPageDialogItemRoot\">\r\n                <span className=\"AddNewPageDialogItemTitle\">\r\n                    {this.props.title}\r\n                </span>\r\n\r\n                <span className=\"AddNewPageDialogItemDesc\">\r\n                    {this.props.description}\r\n                </span>\r\n\r\n                <span className=\"AddNewPageDialogItemAdd\">\r\n                    Add\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport AddNewPageDialogItem from \"./AddNewPageDialogItem\";\r\n\r\nexport default class AddNewPageDialog extends React.Component {\r\n    addNormalPage = () => {\r\n        this.props.onClose();\r\n        this.props.onAddNormalPage();\r\n    };\r\n\r\n    addDynamicPage = () => {\r\n        this.props.onClose();\r\n        this.props.onAddDynamicPage();\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Menu\r\n                style={{\r\n                    zIndex: 99999999999,\r\n                }}\r\n                anchorEl={this.props.anchorEl}\r\n                open={this.props.open}\r\n                onClose={(e) => {\r\n                    this.props.onClose();\r\n                }}\r\n                MenuListProps={{\r\n                    style: {\r\n                        padding: 0,\r\n                    }\r\n                }}\r\n            >\r\n                <MenuItem dense onClick={(e) => {\r\n                    this.addNormalPage();\r\n                }}\r\n                >\r\n                    <AddNewPageDialogItem\r\n                        title={\"Page\"}\r\n                        description={\"Add a standard blank page\"}\r\n                    />\r\n                </MenuItem>\r\n                <MenuItem dense onClick={(e) => {\r\n                    this.addDynamicPage();\r\n                }}>\r\n                    <AddNewPageDialogItem\r\n                        title={\"Dynamic Page\"}\r\n                        description={\"Design once and generate a lot of different page\"}\r\n                    />\r\n                </MenuItem>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PageManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport PageTypeTitle from \"./PageTypeTitle\";\r\nimport PageItem from \"./PageItem\";\r\nimport AddNewPageDialog from \"./AddNewPageDialog\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class PageManager extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            openNormalPage: true,\r\n            openDynamicPage: false\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    onChangeSearch = (e) => {\r\n        let searchValue = e.target.value;\r\n        this.setState({searchValue});\r\n    };\r\n\r\n    getFilteredPages = () => {\r\n        let {siteData} = this.context;\r\n        return Object.keys(siteData.allPages).filter(siteId => {\r\n            if (!this.state.searchValue)\r\n                return true;\r\n\r\n            let pageData = siteData.allPages[siteId];\r\n\r\n            return pageData.props.pageName.toLowerCase().includes(this.state.searchValue.toLowerCase());\r\n        }).map(siteId => {\r\n            return siteData.allPages[siteId];\r\n        });\r\n    };\r\n\r\n    onPageClick = (pageData) => {\r\n        this.context.setPageData(pageData.props.pageId);\r\n    };\r\n\r\n    onAddNormalPage = () => {\r\n        let {siteData} = this.context;\r\n\r\n        if (!this.props.newPageDataUrl) {\r\n            fetch('/static/json/newPageData.json')\r\n                .then((r) => r.json())\r\n                .then((pageData) =>{\r\n                    let newName = \"New Page\";\r\n                    let newId = uuidv4();\r\n\r\n                    pageData.props.pageName = newName;\r\n                    pageData.props.pageId = newId;\r\n\r\n                    siteData.allPages[newId] = pageData;\r\n\r\n                    this.onPageClick(siteData.allPages[newId]);\r\n                });\r\n            // return;\r\n        }\r\n    };\r\n\r\n    onAddDynamicPage = (data) => {\r\n        // TODO\r\n    };\r\n\r\n    render() {\r\n        let {siteData} = this.context;\r\n\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"PageManagerRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    {/*Header*/}\r\n                    <div className=\"PageManagerHeader\">\r\n                        <div\r\n                            className=\"PageManagerHeaderContainer\"\r\n                        >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                Site Pages\r\n                            </span>\r\n\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    this.context.toggleRightMenu(\"pageManager\", false);\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={12}\r\n                                    height={12}\r\n                                    src={require('../../icons/close.svg')}\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*Search box*/}\r\n                    <div className=\"PageManagerSearchBox\">\r\n                        <input\r\n                            className=\"NumberInput PageManagerSearchInput\"\r\n                            type=\"text\"\r\n                            onChange={this.onChangeSearch}\r\n                        >\r\n                        </input>\r\n\r\n                        <Image\r\n                            className=\"PageManagerSearchImage\"\r\n                            src={process.env.PUBLIC_URL + '/static/icon/search.svg'}\r\n                        />\r\n                    </div>\r\n\r\n                    {/*Sites list*/}\r\n\r\n                    <PageTypeTitle\r\n                        defaultOpen={this.state.openNormalPage}\r\n                        title=\"Main Pages\" onChange={(openNormalPage) => {\r\n                        this.setState({openNormalPage});\r\n                    }}/>\r\n\r\n                    <div className=\"PageManagerNormalPageList\">\r\n                        {\r\n                            this.state.openNormalPage &&\r\n                            this.getFilteredPages().map(pageData => {\r\n                                return (\r\n                                    <PageItem\r\n                                        key={pageData.props.pageId}\r\n                                        pageData={pageData}\r\n                                        onClick={(e) => {\r\n                                            this.onPageClick(pageData);\r\n                                        }}\r\n                                        editor={this.props.editor}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <ButtonBase className=\"PageManagerAddPageButton\"\r\n                        onClick={(e) => {\r\n                            this.setState({showAddPage: e.target})\r\n                        }}\r\n                    >\r\n                        Add New Page\r\n                    </ButtonBase>\r\n\r\n                    {\r\n                        this.state.showAddPage &&\r\n                        <AddNewPageDialog\r\n                            anchorEl={this.state.showAddPage}\r\n                            open={this.state.showAddPage !== undefined}\r\n                            onClose={(e) => {\r\n                                this.setState({showAddPage: undefined})\r\n                            }}\r\n                            onAddDynamicPage={this.onAddDynamicPage}\r\n                            onAddNormalPage={this.onAddNormalPage}\r\n                        />\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nPageManager.defaultProps = {\r\n    open: false,\r\n    speed: 800,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ThemeTextItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onEditClick = (e) => {\r\n\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let {siteData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"ThemeTextItemRoot\">\r\n                <span className=\"ThemeTextItemName\">\r\n                    {item.name}\r\n                </span>\r\n                <span className=\"ThemeTextItemDetail\">\r\n                    {item.font}, {item.fontSize}px\r\n                </span>\r\n                <span style={{\r\n                    fontFamily: `${item.font} Arial`,\r\n                    fontWeight: item.fontWeight,\r\n                    fontStyle: item.fontStyle,\r\n                    fontSize: Math.min(item.fontSize, 40),\r\n                    color: item.color,\r\n                    lineHeight: '1.4em'\r\n                }}>\r\n                    For Bold Creators\r\n                </span>\r\n\r\n                <IconButton\r\n                    className=\"ThemeTextItemEdit\"\r\n                    onClick={this.onEditClick}\r\n                >\r\n                    <img\r\n                        draggable={false}\r\n                        width={16}\r\n                        height={16}\r\n                        src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                    />\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport Image from \"../../Menus/CommonComponents/Image\";\r\nimport {getColorScheme} from \"../../AwesomwGridLayoutHelper\";\r\nimport HexColorPicker from \"./HexColorPicker\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ThemeColorsItem extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onEditClick = (paletteName, key, color) => (e) => {\r\n        this.setState({\r\n            toChange: {\r\n                paletteName, key, color\r\n            }\r\n        })\r\n    };\r\n\r\n    onChangeColor = (color) => {\r\n        let {editor} = this.props;\r\n        let {siteData} = this.context;\r\n        let {toChange} = this.state;\r\n        siteData.theme.Colors.items[toChange.paletteName][toChange.key] = color;\r\n\r\n        if (toChange.key === \"main\") {\r\n            siteData.theme.Colors.calculated = false;\r\n            this.context.calculateTheme(true);\r\n        }\r\n\r\n        toChange.color = color;\r\n        this.setState({toChange});\r\n        this.context.update();\r\n        // editor.setState({reload: true});\r\n    };\r\n\r\n    render() {\r\n        let {item} = this.props;\r\n        let {siteData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"ThemeColorsItemRoot\">\r\n                <span className=\"ThemeTextItemName\">\r\n                    {item.name}\r\n                </span>\r\n\r\n                <div className=\"ThemeColorsItemDetail\">\r\n                    <div className=\"ThemeColorsItemDetailMain\" style={{\r\n                            backgroundColor: getColorScheme(item.main)[\"3\"]\r\n                        }}\r\n                        onClick={this.onEditClick(item.name, \"main\", getColorScheme(item.main)[\"3\"])}\r\n                    >\r\n\r\n                        <Image\r\n                            className=\"ThemeColorsItemDetailOverlay\"\r\n                            style={{opacity: 1}}\r\n                            src={process.env.PUBLIC_URL + 'static/icon/edit-white.svg'}\r\n                            width={18}\r\n                            height={18}\r\n                        />\r\n                    </div>\r\n                    <div className=\"ThemeColorsItemDetailSecondary\">\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"1\"] || getColorScheme(item.main)[\"1\"],\r\n                            borderTopRightRadius: 4,\r\n                            borderBottomRightRadius: 4\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"1\", item[\"1\"] || getColorScheme(item.main)[\"1\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + 'static/icon/edit-white.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"2\"] || getColorScheme(item.main)[\"2\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"2\", item[\"2\"] || getColorScheme(item.main)[\"2\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit-white.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"3\"] || getColorScheme(item.main)[\"3\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"3\", item[\"3\"] || getColorScheme(item.main)[\"3\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"4\"] || getColorScheme(item.main)[\"4\"]\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"4\", item[\"4\"] || getColorScheme(item.main)[\"4\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ThemeColorsItemDetailSecondaryItem\" style={{\r\n                            backgroundColor: item[\"5\"] || getColorScheme(item.main)[\"5\"],\r\n                            borderTopLeftRadius: 4,\r\n                            borderBottomLeftRadius: 4\r\n                        }}\r\n                             onClick={this.onEditClick(item.name, \"5\", item[\"5\"] || getColorScheme(item.main)[\"5\"])}\r\n                        >\r\n\r\n                            <Image\r\n                                className=\"ThemeColorsItemDetailOverlay\"\r\n                                src={process.env.PUBLIC_URL + '/static/icon/edit.svg'}\r\n                                width={18}\r\n                                height={18}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.toChange &&\r\n                    <HexColorPicker\r\n                        onClose={() => this.setState({toChange: undefined})}\r\n                        color={this.state.toChange.color}\r\n                        onChangeComplete={ this.onChangeColor }\r\n                        disableAlpha\r\n                        width={224}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './ThemeManager.css';\r\nimport {sortBy} from \"../../AwesomwGridLayoutHelper\";\r\nimport ThemeTextItem from \"./ThemeTextItem\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport ThemeColorsItem from \"./ThemeColorsItem\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\n\r\nexport default class ThemeManager extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open ? 100 : 0,\r\n            // category: sortBy(Object.values(props.siteData.theme), \"order\")[0],\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.setState({\r\n            category: sortBy(Object.values(this.context.siteData.theme), \"order\")[0],\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: true});\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent >= 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = (force) => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.setState({ open: false});\r\n        if (force) {\r\n            this.setState({percent: 0});\r\n            return;\r\n        }\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent <= 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    toggle = (force) => {\r\n        let toggleState = !this.state.open;\r\n        this.state.open ? this.close(force) : this.open();\r\n\r\n        return toggleState;\r\n    };\r\n\r\n    setCategory = (category) => (e) => {\r\n        if (category !== this.state.category)\r\n            this.setState({category});\r\n    };\r\n\r\n    getColor = (paletteName, key) => {\r\n        let {siteData} = this.context;\r\n\r\n        let theme = siteData.theme;\r\n\r\n        this.context.calculateTheme(false);\r\n\r\n        return theme.Colors.items[paletteName][key];\r\n    };\r\n\r\n    render() {\r\n        let {editor} = this.props;\r\n        let {siteData, pageData} = this.context;\r\n        if (!siteData)\r\n            return null;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"ThemeManagerRoot\"\r\n                    style={{\r\n                        left: `${this.state.percent - 100}%`,\r\n                        opacity: this.state.percent / 100\r\n                    }}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"ThemeManagerList\"\r\n                    >\r\n                        {\r\n                            sortBy(Object.values(siteData.theme), \"order\").map(category => {\r\n                                let style = {};\r\n                                if (category === this.state.category)\r\n                                    style.backgroundColor = \"#e5ffff\";\r\n                                return (\r\n                                    <div\r\n                                        key={category.name}\r\n                                        className=\"ThemeManagerCategoryItem\"\r\n                                        onClick={this.setCategory(category)}\r\n                                        style={style}\r\n                                    >\r\n                                        {category.name}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.category &&\r\n                        <div className=\"ThemeManagerItemRoot\">\r\n                            {/*Header*/}\r\n                            <div\r\n                                className=\"ThemeManagerItemHeaderContainer\"\r\n                            >\r\n                            <span className=\"ThemeManagerItemHeaderTitle\">\r\n                                Theme\r\n                            </span>\r\n\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.context.toggleRightMenu(\"themeManager\", false);\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={12}\r\n                                        height={12}\r\n                                        src={require('../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div className=\"ThemeManagerItemScroll\">\r\n                                {\r\n                                    Object.keys(this.state.category.items).map(key => {\r\n                                        if (this.state.category.name === \"Text\") {\r\n                                            return (\r\n                                                <ThemeTextItem\r\n                                                    key={key}\r\n                                                    item={this.state.category.items[key]}\r\n                                                    editor={editor}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                        if (this.state.category.name === \"Colors\") {\r\n                                            return (\r\n                                                <ThemeColorsItem\r\n                                                    key={key}\r\n                                                    item={this.state.category.items[key]}\r\n                                                    editor={editor}\r\n                                                    // recalculateColors={this.context.calculateTheme()}\r\n                                                />\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nThemeManager.defaultProps = {\r\n    open: false,\r\n    speed: 1200,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport {EditorContext} from \"../EditorContext\";\r\n\r\nexport default class EditorHeaderZoom extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <>\r\n                    <IconButton\r\n                        buttonBaseStyle={{\r\n                            marginLeft: 0,\r\n                            marginRight: 10,\r\n                            backgroundColor: this.state.zoomSetting && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.setState({zoomSetting: e.currentTarget});\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/zoom-in.svg'}\r\n                        />\r\n\r\n                    </IconButton>\r\n\r\n                    {\r\n                        this.state.zoomSetting &&\r\n                        <Menu\r\n                            style={{\r\n                                zIndex: 99999999999,\r\n                            }}\r\n                            anchorEl={this.state.zoomSetting}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            getContentAnchorEl={null}\r\n                            anchorPosition={{ left: 0, top: 0 }}\r\n                            PaperProps={{\r\n                                style:{\r\n                                    transformOrigin: \"top right\",\r\n                                    transform: `scale(${1/editorContext.zoomScale})`\r\n                                }\r\n                            }}\r\n                            marginThreshold={0}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={true}\r\n                            onClose={(e) => {\r\n                                e.stopPropagation();\r\n                                e.preventDefault();\r\n                                this.setState({zoomSetting: undefined});\r\n                            }}\r\n                            MenuListProps={{\r\n                                style: {\r\n                                    padding: 0,\r\n                                }\r\n                            }}\r\n                            transitionDuration={0}\r\n                        >\r\n                            <Paper style={{\r\n                                padding: 10,\r\n                                display: \"flex\",\r\n                                alignItems: \"center\"\r\n                            }}>\r\n                                <IconButton\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 0,\r\n                                        marginRight: 10,\r\n                                        pointerEvents: \"auto\"\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 10\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        e.preventDefault();\r\n                                        this.props.onZoomChange(Math.min(1.3, editorContext.zoomScale + 0.1));\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={14}\r\n                                        height={14}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/add.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <span style={{\r\n                                    width: 70,\r\n                                    textAlign: \"center\"\r\n                                }}>\r\n                                    {(editorContext.zoomScale * 100).toFixed(0)}%\r\n                                </span>\r\n                                <IconButton\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 10,\r\n                                        marginRight: 10,\r\n                                        pointerEvents: \"auto\"\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 10\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        e.preventDefault();\r\n                                        this.props.onZoomChange(Math.max(0.5 ,editorContext.zoomScale - 0.1));\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={14}\r\n                                        height={14}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/minus.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <Button className=\"EditorHeaderZoomReset\"\r\n                                    onClick={(e) => {\r\n                                        this.props.onZoomChange(1);\r\n                                    }}\r\n                                >\r\n                                    Reset\r\n                                </Button>\r\n                            </Paper>\r\n                        </Menu>\r\n                    }\r\n                    </>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\nimport './EditorHeaderPageSelect.css';\r\n\r\nexport default class EditorHeaderPageSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getOptions = (editorContext) => {\r\n        let options = Object.values(editorContext.siteData.allPages).map(pageData => {\r\n            return pageData.props.pageName;\r\n        });\r\n\r\n        !editorContext.preview && options.push(\r\n            <div\r\n                className=\"EditorHeaderPageSelectPageManagerButton\"\r\n                onClick={() => {\r\n                    editorContext.toggleRightMenu(\"pageManager\", true);\r\n                }}\r\n            >\r\n                Page Manager\r\n            </div>\r\n        );\r\n\r\n        return options;\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        <DropDown\r\n                            options={editorContext.siteData ? this.getOptions(editorContext) : [\"...\"]}\r\n                            onChange={(v) => {\r\n                                let pageData = Object.values(editorContext.siteData.allPages).find(pd => {\r\n                                    return pd.props.pageName === v;\r\n                                });\r\n\r\n                                if (pageData)\r\n                                    editorContext.setPageData(pageData.props.pageId);\r\n                            }}\r\n                            value={editorContext.pageData ? editorContext.pageData.props.pageName : \"...\"}\r\n                            spanStyle={{\r\n                                width: 200,\r\n                                fontSize: 14,\r\n                                border: \"0px solid #cfcfcf\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class NumberInputEnterToChange extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"props.min\", props.min)\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    inputFilter = (value, oldValue) => {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = parseFloat(value).toFixed(0);\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        if (this.props.lazy)\r\n            return;\r\n\r\n        let value = this.inputFilter(this.state.tempValue, this.props.value);\r\n        this.props.onChange(value);\r\n        this.setState({tempValue: undefined});\r\n    };\r\n\r\n    onTempChange = (e) => {\r\n        let tempValue = e.target.value;\r\n        this.setState({tempValue});\r\n\r\n        if (this.props.lazy)\r\n            this.props.onChange(tempValue);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className={\"NumberInput \" + this.props.className || \"\"}\r\n                value={this.state.tempValue || this.props.value || 0}\r\n                onChange={this.onTempChange}\r\n                onBlur={this.onChange}\r\n                onKeyPress={(e) => {\r\n                    if((e.keyCode || e.which) === 13) {\r\n                        this.onChange();\r\n                        if (this.props.onKeyPress)\r\n                            this.props.onKeyPress();\r\n                    }\r\n                }}\r\n                type=\"text\"\r\n                style={this.props.inputStyle}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport const getBreakpointIcon = (bpData) => {\r\n    if (bpData.start >= 1255)\r\n        return <img draggable={false} width={24} height={24} src={process.env.PUBLIC_URL + '/static/icon/computer.svg'} />\r\n    if (bpData.start >= 1001)\r\n        return <img draggable={false} width={24} height={24} src={process.env.PUBLIC_URL + '/static/icon/laptop.svg'} />\r\n    if (bpData.start >= 751)\r\n        return <img draggable={false} width={18} height={18} src={process.env.PUBLIC_URL + '/static/icon/ipad.svg'} />\r\n\r\n    return <img draggable={false} width={16} height={16} src={process.env.PUBLIC_URL + '/static/icon/phone.svg'} />\r\n};\r\n\r\nexport const getBreakpointName = (bpData) => {\r\n    if (bpData.start >= 1255)\r\n        return 'Desktop'\r\n    if (bpData.start >= 1001)\r\n        return 'Laptop'\r\n    if (bpData.start >= 751)\r\n        return 'Tablet'\r\n\r\n    return 'Mobile'\r\n};\r\n\r\nexport const getCommonDevices = () => {\r\n    return [\r\n        {\r\n            name: \"Galaxy S7\",\r\n            start: 360\r\n        },\r\n        {\r\n            name: \"Galaxy S8/S9\",\r\n            start: 360\r\n        },\r\n        {\r\n            name: \"iPad\",\r\n            start: 768\r\n        },\r\n        {\r\n            name: \"iPad Pro\",\r\n            start: 1024\r\n        },\r\n        {\r\n            name: \"iPhone 6/7/8\",\r\n            start: 375\r\n        },\r\n        {\r\n            name: \"iPhone 6/7/8 Plus\",\r\n            start: 414\r\n        },\r\n        {\r\n            name: \"iPhone X\",\r\n            start: 375\r\n        },\r\n        {\r\n            name: \"Pixel 2\",\r\n            start: 411\r\n        },\r\n        {\r\n            name: \"Pixel 2 XL\",\r\n            start: 411\r\n        }\r\n    ];\r\n};\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpointsSettingItem.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport {getBreakpointIcon} from \"./BreakpointHelper\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport default class EditorHeaderBreakpointsSettingItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: props.bpData.name? false: true\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    isHighestBp = (editorContext) => {\r\n        let {bpData} = this.props;\r\n        return editorContext.editor.breakpointmanager.getHighestBpName() === bpData.name;\r\n    };\r\n\r\n    done = (editorContext) => {\r\n        let {bpData} = this.props;\r\n\r\n        if (isNaN(this.tempEnd)) {\r\n            return;\r\n        }\r\n\r\n        this.tempEnd = parseInt(this.tempEnd);\r\n\r\n        editorContext.editor.breakpointmanager.updateBreakpoint(\r\n            bpData.name, undefined, this.tempEnd\r\n        );\r\n\r\n        this.setState({editMode: false})\r\n\r\n        editorContext.update();\r\n    };\r\n\r\n    create = (editorContext) => {\r\n        if (!this.tempEnd)\r\n            this.tempEnd = editorContext.pageSize;\r\n\r\n        if (isNaN(this.tempEnd)) {\r\n            return;\r\n        }\r\n\r\n        this.tempEnd = parseInt(this.tempEnd);\r\n\r\n        let {newBpData, prevBpData} = editorContext.editor.breakpointmanager.updateBreakpoint(\r\n            uuidv4(), this.tempEnd, undefined\r\n        );\r\n\r\n        this.props.onCancel();\r\n\r\n        editorContext.onNewBpAdded(newBpData, prevBpData);\r\n    };\r\n\r\n    delete = (editorContext) => {\r\n        let {bpData} = this.props;\r\n\r\n        editorContext.editor.breakpointmanager.deleteBreakpoint(bpData.name);\r\n\r\n        editorContext.update();\r\n    }\r\n\r\n    cancelEditMode = () => {\r\n        this.setState({editMode: false});\r\n    };\r\n\r\n    render () {\r\n        let {bpData, nextBpData} = this.props;\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div className=\"BreakpointSettingItemRoot\">\r\n                        <div className=\"BreakpointSettingItemIcon\">\r\n                            {\r\n                                getBreakpointIcon(bpData)\r\n                            }\r\n                        </div>\r\n\r\n                        {\r\n                            bpData.name &&\r\n                            <p className=\"BreakpointSettingItemStart\">\r\n                                {bpData.start} {\r\n                                    this.isHighestBp(editorContext) ? \" & Up\" : \" -\"\r\n                                }\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <p className=\"BreakpointSettingItemEndText\">\r\n                                {bpData.end}\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <NumberInputEnterToChange\r\n                                className=\"BreakpointSettingItemEndInput\"\r\n                                inputStyle={{\r\n                                    marginLeft: 0\r\n                                }}\r\n                                min={bpData.name? bpData.start + 1: 320}\r\n                                max={bpData.name? nextBpData.end - 2 : 9999}\r\n                                value={bpData.end || editorContext.pageSize}\r\n                                onChange={(tempEnd) => {\r\n                                    this.tempEnd = tempEnd;\r\n                                }}\r\n                                onKeyPress={() => {\r\n                                    bpData.name?\r\n                                        this.done(editorContext):\r\n                                        this.create(editorContext);\r\n                                }}\r\n                                lazy\r\n                            />\r\n                        }\r\n\r\n                        {\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <p className=\"BreakpointSettingItemPx\">\r\n                                {\"px\"}\r\n                            </p>\r\n                        }\r\n\r\n                        {\r\n                            !this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <div className=\"BreakpointSettingItemNoneEdit\">\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.delete(editorContext)\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/delete.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        this.props.onEditMode && this.props.onEditMode();\r\n                                        this.setState({editMode: true})\r\n                                        this.tempEnd = bpData.end;\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={16}\r\n                                        height={16}\r\n                                        src={process.env.PUBLIC_URL + '/static/icon/edit2.svg'}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            this.state.editMode &&\r\n                            !this.isHighestBp(editorContext) &&\r\n                            <div className=\"BreakpointSettingItemEditMode\">\r\n                                {\r\n                                    bpData.name &&\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className=\"BreakpointSettingItemButtons BreakpointSettingItemDone\"\r\n                                        onClick={() => {\r\n                                            this.done(editorContext);\r\n                                        }}\r\n                                    >\r\n                                        Done\r\n                                    </Button>\r\n                                }\r\n                                {\r\n                                    !bpData.name &&\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        className=\"BreakpointSettingItemButtons BreakpointSettingItemDone\"\r\n                                        onClick={() => {\r\n                                            this.create(editorContext);\r\n                                        }}\r\n                                    >\r\n                                        Create\r\n                                    </Button>\r\n                                }\r\n                                <Button\r\n                                    className=\"BreakpointSettingItemButtons BreakpointSettingItemCancel\"\r\n                                    onClick={() => {\r\n                                        bpData.name ?\r\n                                            this.setState({editMode: false}) :\r\n                                            this.props.onCancel();\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpointsSetting.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport EditorHeaderBreakpointsSettingItem from \"./EditorHeaderBreakpointsSettingItem\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport default class EditorHeaderBreakpointsSetting extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    clearEditMode = () => {\r\n        console.log(\"clearEditMode\")\r\n        Object.values(this.bpItemrRefs).forEach(bpItemRef => {\r\n            console.log(\"clearEditMode1\", bpItemRef)\r\n            if (bpItemRef.current)\r\n                bpItemRef.current.cancelEditMode();\r\n        });\r\n    };\r\n\r\n    getBpItemRef = (name) => {\r\n        if (!this.bpItemrRefs)\r\n            this.bpItemrRefs = {};\r\n\r\n        if (!this.bpItemrRefs[name])\r\n            this.bpItemrRefs[name] = React.createRef();\r\n\r\n        return this.bpItemrRefs[name];\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <Menu\r\n                        style={{\r\n                            zIndex: 99999999999\r\n                        }}\r\n                        anchorEl={this.props.anchorEl}\r\n                        open={true}\r\n                        onClose={(e) => {\r\n                            this.props.onClose();\r\n                        }}\r\n                        MenuListProps={{\r\n                            style: {\r\n                                padding: 0\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div className=\"BpSettingRoot\">\r\n                            {/*Header*/}\r\n                            <div className=\"BpSettingHeader\">\r\n                                <div\r\n                                    className=\"BpSettingHeaderContainer\"\r\n                                >\r\n                            <span className=\"BpSettingHeaderTitle\">\r\n                                Customize Breakpoints\r\n                            </span>\r\n\r\n                                    <IconButton\r\n                                        onClick={this.props.onClose}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={12}\r\n                                            height={12}\r\n                                            src={process.env.PUBLIC_URL + '/static/icon/close.svg'}\r\n                                        />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <p className=\"BpSettingGuideSpan\">\r\n                                Add, edit or delete this page's breakpoints to design for different viewport sizes.\r\n                            </p>\r\n\r\n                            {\r\n                                editorContext.editor.breakpointmanager.breakpoints.map((bpData, index) => {\r\n                                    return (\r\n                                        <EditorHeaderBreakpointsSettingItem\r\n                                            key={bpData.name}\r\n                                            bpData={bpData}\r\n                                            nextBpData={editorContext.editor.breakpointmanager.breakpoints[index - 1]}\r\n                                            onEditMode={this.clearEditMode}\r\n                                            ref={this.getBpItemRef(bpData.name)}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            {\r\n                                this.state.newBpData &&\r\n                                <EditorHeaderBreakpointsSettingItem\r\n                                    bpData={this.state.newBpData}\r\n                                    onCancel={() => {\r\n                                        this.setState({newBpData: undefined});\r\n                                    }}\r\n                                />\r\n                            }\r\n\r\n                            <Button\r\n                                className=\"BpSettingAddBp\"\r\n                                onClick={() => {\r\n                                    this.clearEditMode();\r\n                                    this.setState({newBpData: {}});\r\n                                }}\r\n                            >\r\n                                Add New Breakpoint\r\n                            </Button>\r\n                        </div>\r\n                    </Menu>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorHeaderBreakpoints.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport Tabs from \"@material-ui/core/Tabs/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab/Tab\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport EditorHeaderBreakpointsSetting from \"./EditorHeaderBreakpointsSetting\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {getBreakpointIcon} from \"./BreakpointHelper\";\r\n\r\nexport default class EditorHeaderBreakpoints extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    onChangeTab = (editorContext) => (e, bpName) => {\r\n        this.setState({tabValue: bpName});\r\n        console.log(\"bpName\", bpName, editorContext.editor.breakpointmanager.current())\r\n\r\n        if (editorContext.editor.breakpointmanager.current() === bpName)\r\n            return;\r\n\r\n        let bpData = editorContext.editor.breakpointmanager.getBpData(bpName);\r\n\r\n        if (!bpData)\r\n            return;\r\n\r\n        let width;\r\n        if (bpData.prefer >= bpData.start && bpData.prefer <= bpData.end)\r\n            width = bpData.prefer;\r\n        else\r\n            width = bpData.start;\r\n\r\n        editorContext.editor.onPageResize(width);\r\n    };\r\n\r\n    getTabValue = (editorContext) => {\r\n        let width = editorContext.editor.rootLayoutRef.current.getSize(false).width;\r\n        return editorContext.editor.breakpointmanager.current(width);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <Tabs\r\n                                className=\"EditorHeaderBreakpointsTabRoot\"\r\n                                value={\r\n                                    this.getTabValue(editorContext)\r\n                                }\r\n                                indicatorColor=\"primary\"\r\n                                textColor=\"primary\"\r\n                                onChange={this.onChangeTab(editorContext)}\r\n                                aria-label=\"disabled tabs example\"\r\n                            >\r\n                                {\r\n                                    editorContext.editor.breakpointmanager.breakpoints.map((bpData, index) => {\r\n                                        return (\r\n                                            <Tab\r\n                                                key={bpData.name}\r\n                                                className=\"EditorHeaderBreakpointsTab\"\r\n                                                label={getBreakpointIcon(bpData)}\r\n                                                value={bpData.name}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </Tabs>\r\n                        }\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <IconButton\r\n                                buttonBaseStyle={{marginLeft: 10}}\r\n                                onClick={(e) => {\r\n                                    this.setState({settingAnchor: e.currentTarget});\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    draggable={false}\r\n                                    width={18}\r\n                                    height={18}\r\n                                    src={process.env.PUBLIC_URL + '/static/icon/open-menu.svg'}\r\n                                />\r\n                            </IconButton>\r\n                        }\r\n\r\n                        <div style={{\r\n                            backgroundColor: \"#cfcfcf\",\r\n                            height: \"auto\",\r\n                            width: 1,\r\n                            marginLeft: 10\r\n                        }}>\r\n\r\n                        </div>\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <>\r\n                                <span\r\n                                    style={{\r\n                                        marginLeft: 10,\r\n                                        display:\"flex\",\r\n                                        alignItems: \"center\",\r\n                                        fontSize: 12\r\n                                    }}\r\n                                >\r\n                                    Width\r\n                                </span>\r\n                                <NumberInputEnterToChange\r\n                                    inputStyle={{\r\n                                        marginLeft: 10\r\n                                    }}\r\n                                    min={editorContext.editor.breakpointmanager.getMinWidth()}\r\n                                    max={9999}\r\n                                    value={editorContext.editor.rootLayoutRef.current.getSize(false).width}\r\n                                    onChange={(width) => {\r\n                                        editorContext.setPageSizeWidth(width);\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n\r\n                        {\r\n                            this.state.settingAnchor &&\r\n                            <EditorHeaderBreakpointsSetting\r\n                                anchorEl={this.state.settingAnchor}\r\n                                onClose={(e) => {\r\n                                    this.setState({settingAnchor: undefined});\r\n                                }}\r\n                            />\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\n\r\nexport default class EditorHeader extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onInspectorClickState: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    setRightMenuOpen = (openMenu, state) => {\r\n        let changedState = {};\r\n        [\r\n            \"onAddComponentClick\",\r\n            \"onThemeManagerClick\",\r\n            \"onPageManagerClick\"\r\n        ].forEach(name => {\r\n            if (this.state[`${name}State`] && `${name}State` !== openMenu) {\r\n                console.log(\"setRightMenuOpen\", name);\r\n                this.props[name](true);\r\n            }\r\n\r\n            changedState[`${name}State`] = false;\r\n        });\r\n        this.setState({\r\n            ...changedState,\r\n            [openMenu]: state\r\n        });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"EditorHeaderRoot\" style={{\r\n                width: `${this.context.zoomScale*100}%`,\r\n            }}>\r\n                <div className=\"EditorHeaderRightShortcuts\">\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.addComponent.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"addComponent\");\r\n                            // let onAddComponentClickState = this.props.onAddComponentClick();\r\n                            // this.setRightMenuOpen(\"onAddComponentClickState\", onAddComponentClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/add.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.pageManager.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"pageManager\");\r\n                            // let onPageManagerClickState = this.props.onPageManagerClick();\r\n                            // this.setRightMenuOpen(\"onPageManagerClickState\", onPageManagerClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/page.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        buttonBaseStyle={{marginLeft: 0,\r\n                            backgroundColor: this.context.rightMenus.themeManager.state && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            this.context.toggleRightMenu(\"themeManager\");\r\n                            // let onThemeManagerClickState = this.props.onThemeManagerClick();\r\n                            // this.setRightMenuOpen(\"onThemeManagerClickState\", onThemeManagerClickState);\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/water.svg'}\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"EditorHeaderCenterShortcuts\">\r\n                    <EditorHeaderPageSelect\r\n                        className=\"EditorHeaderCenterDiv\"\r\n                        style={{\r\n                            width: 200\r\n                        }}\r\n                    />\r\n                    <EditorHeaderBreakpoints\r\n                        className=\"EditorHeaderCenterDiv EditorHeaderLastCenterDiv EditorHeaderBreakpoints\"\r\n                    />\r\n                </div>\r\n                <div className=\"EditorHeaderLeftShortcuts\">\r\n                    <IconButton\r\n                        buttonBaseStyle={{\r\n                            marginLeft: 0,\r\n                            marginRight: 10,\r\n                            backgroundColor: this.state.onInspectorClickState && \"#d2fffc\",\r\n                        }}\r\n                        onClick={(e) => {\r\n                            let onInspectorClickState = this.props.onInspectorClick(e);\r\n                            this.setState({onInspectorClickState})\r\n                        }}\r\n                    >\r\n                        <img\r\n                            draggable={false}\r\n                            width={18}\r\n                            height={18}\r\n                            src={process.env.PUBLIC_URL + '/static/icon/inspector.svg'}\r\n                        />\r\n                    </IconButton>\r\n                    <EditorHeaderZoom\r\n                        onZoomChange={(zoomScale) => {\r\n                            this.props.onPageZoomChange(zoomScale);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './PreviewHeaderBreakpoints.css';\r\nimport {EditorContext} from \"../EditorContext\";\r\nimport NumberInputEnterToChange from \"../../Menus/CommonComponents/NumberInputEnterToChange\";\r\nimport {getBreakpointIcon, getBreakpointName} from \"./BreakpointHelper\";\r\nimport DropDown from \"../../Menus/CommonComponents/DropDown\";\r\n\r\nexport default class PreviewHeaderBreakpoints extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lastBpData: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getCurrentValue = (editorContext) => {\r\n        if (!editorContext.editor.rootLayoutRef.current)\r\n            return \"...\";\r\n\r\n        let width = editorContext.editor.rootLayoutRef.current.getSize(false).width;\r\n\r\n        let bpData = this.getOptions(editorContext).filter(bpData => {\r\n            console.log(\"getCurrentValue\", bpData.name, bpData.type, bpData.start, width, bpData.type === 'device' && bpData.start === width)\r\n            return bpData.type === 'device' && bpData.start === width;\r\n        })[0];\r\n\r\n        if (bpData) {\r\n            return (this.state.lastBpData && this.state.lastBpData.type === \"device\" && this.state.lastBpData) || bpData;\r\n        }\r\n\r\n        return editorContext.editor.breakpointmanager.currentBpData(width);\r\n    };\r\n\r\n    getOptions = (editorContext) => {\r\n        let options = [{\r\n            title: \"Page Breakpoints\", disabled:true\r\n        }];\r\n\r\n        if (!editorContext.editor.breakpointmanager) return [];\r\n\r\n        let breakpoints = editorContext.editor.breakpointmanager.getSortedBreakPoints().reverse();\r\n\r\n        breakpoints.forEach(bpData => {\r\n            options.push(bpData);\r\n        });\r\n\r\n        options.push({\r\n            title: \"Common Devices\", disabled:true\r\n        });\r\n\r\n        (this.props.devices || []).sort((a, b) => {\r\n            if (a.start > b.start) {\r\n                return -1;\r\n            } else if (a.start === b.start) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        }).forEach(bpData => {\r\n            bpData.type = 'device';\r\n            options.push(bpData);\r\n        });\r\n\r\n        return options;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <EditorContext.Consumer>\r\n                {editorContext => (\r\n                    <div\r\n                        {...this.props}\r\n                    >\r\n                        <DropDown\r\n                            options={editorContext.siteData ? this.getOptions(editorContext) : [\"...\"]}\r\n                            onChange={(bpData) => {\r\n                                this.setState({lastBpData: bpData});\r\n                                editorContext.setPageSizeWidth(bpData.prefer || bpData.start);\r\n                            }}\r\n                            value={editorContext.pageData ? this.getCurrentValue(editorContext) : \"...\"}\r\n                            spanStyle={{\r\n                                width: 256,\r\n                                fontSize: 14,\r\n                                border: \"0px solid #cfcfcf\",\r\n                            }}\r\n                            renderer={(bpData) => {\r\n                                return (\r\n                                    <div className=\"PreviewHeaderBreakpointsRenderer\">\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererIcon\">\r\n                                                {\r\n                                                    getBreakpointIcon(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererName\">\r\n                                                {\r\n                                                    bpData.type === 'device' ? bpData.name :\r\n                                                    getBreakpointName(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererSize\">\r\n                                                {\r\n                                                    bpData.start + \" px\"\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            !bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererTitle\">\r\n                                                {\r\n                                                    bpData.title\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                            valueRenderer={(bpData) => {\r\n                                return (\r\n                                    <div className=\"PreviewHeaderBreakpointsRenderer\">\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererIcon\">\r\n                                                {\r\n                                                    getBreakpointIcon(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererName\">\r\n                                                {\r\n                                                    bpData.type === 'device' ? bpData.name :\r\n                                                    getBreakpointName(bpData)\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            !bpData.name &&\r\n                                            <div className=\"PreviewHeaderBreakpointsRendererTitle\">\r\n                                                {\r\n                                                    bpData.title\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                        />\r\n\r\n                        <div style={{\r\n                            backgroundColor: \"#cfcfcf\",\r\n                            height: \"auto\",\r\n                            width: 1,\r\n                            marginLeft: 10\r\n                        }}>\r\n\r\n                        </div>\r\n\r\n                        {\r\n                            editorContext.editor && editorContext.editor.rootLayoutRef.current &&\r\n                            <>\r\n                                <span\r\n                                    style={{\r\n                                        marginLeft: 10,\r\n                                        display:\"flex\",\r\n                                        alignItems: \"center\",\r\n                                        fontSize: 12\r\n                                    }}\r\n                                >\r\n                                    Width\r\n                                </span>\r\n                                <NumberInputEnterToChange\r\n                                    inputStyle={{\r\n                                        marginLeft: 10\r\n                                    }}\r\n                                    min={editorContext.editor.breakpointmanager.getMinWidth()}\r\n                                    max={9999}\r\n                                    value={editorContext.editor.rootLayoutRef.current.getSize(false).width}\r\n                                    onChange={(width) => {\r\n                                        editorContext.setPageSizeWidth(width);\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </EditorContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport PreviewHeaderBreakpoints from \"./Breakpoints/PreviewHeaderBreakpoints\";\r\nimport {getCommonDevices} from \"./Breakpoints/BreakpointHelper\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport default class PreviewHeader extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"EditorHeaderRoot\" style={{\r\n                width: `${this.context.zoomScale*100}%`,\r\n            }}>\r\n                <div className=\"EditorHeaderRightShortcuts\">\r\n                </div>\r\n                <div className=\"EditorHeaderCenterShortcuts\">\r\n                    <EditorHeaderPageSelect\r\n                        className=\"EditorHeaderCenterDiv\"\r\n                        style={{\r\n                            width: 200\r\n                        }}\r\n                    />\r\n                    <PreviewHeaderBreakpoints\r\n                        className=\"EditorHeaderCenterDiv EditorHeaderLastCenterDiv EditorHeaderBreakpoints\"\r\n                        devices={getCommonDevices()}\r\n                    />\r\n                </div>\r\n                <div className=\"PreviewHeaderLeftShortcuts\">\r\n                    <Button className=\"PublishButton\" onClick={() => {\r\n                        this.context.sendPublishCommand();\r\n                    }}>\r\n                        Publish\r\n                    </Button>\r\n                    <Button className=\"PreviewButton\" onClick={() => {\r\n                        this.context.sendEditCommand();\r\n                    }}>\r\n                        Edit\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './EditorBoundary.css';\r\nimport IconButton from \"../HelperComponents/IconButton\";\r\nimport DropDown from \"../Menus/CommonComponents/DropDown\";\r\nimport EditorHeaderZoom from \"./Zoom/EditorHeaderZoom\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport EditorHeaderPageSelect from \"./PageSelect/EditorHeaderPageSelect\";\r\nimport EditorHeaderBreakpoints from \"./Breakpoints/EditorHeaderBreakpoints\";\r\nimport {getScrollbarWidth} from \"../AwesomeGridLayoutUtils\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\n\r\nexport default class PageView extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        if (this.context.production) {\r\n            return (\r\n                this.props.children\r\n            )\r\n        } else {\r\n            return (\r\n                <div\r\n                    className=\"EditorBoundaryPageHolder\"\r\n                    style={{\r\n                        // TODO add scale support\r\n                        padding: \"0 50px\"\r\n                    }}\r\n                    onScroll={this.props.onScrollBoundary}\r\n                    onContextMenu={(e) => {\r\n                        e.stopPropagation();\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"EditorBoundaryPageHolderHover\"\r\n                        style={{\r\n                            bottom: getScrollbarWidth()\r\n                        }}\r\n                        onClick={() => {\r\n                            this.props.rootLayoutRef.current.onSelect(true);\r\n                        }}\r\n                    />\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class UploadButton extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.inputRef = React.createRef();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <input\r\n                    style={{display: \"none\"}}\r\n                    type=\"file\" name=\"file\" onChange={this.props.onFileSelected} ref={this.inputRef}\r\n                    multiple={this.props.multiple}\r\n                />\r\n                <div>\r\n                    <ButtonBase\r\n                        className={this.props.className}\r\n                        style={this.props.style}\r\n                        onClick={(e) => {\r\n                            this.inputRef.current.click();\r\n                        }}\r\n                    >\r\n                        {this.props.children}\r\n                    </ButtonBase>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","let FileManagerHelper = {};\r\n\r\nFileManagerHelper.list = (editorContext, prefix, continuationToken, onSuccess, onError) => {\r\n    editorContext.postMessageToHolder(\r\n    {\r\n        type: \"Server\",\r\n        route: \"/file/list\",\r\n        input: {websiteId: editorContext.websiteId, prefix, continuationToken},\r\n        method: \"post\"\r\n    },\r\n    ({result}) => {\r\n        console.log(\"FileManagerHelper.list callback\", result);\r\n        if (result.success)\r\n            onSuccess(result.data, prefix);\r\n        else\r\n            onError(result.error);\r\n    });\r\n}\r\n\r\nFileManagerHelper.upload = (editorContext, objectPath, file, onSuccess, onError) => {\r\n    console.log(\"FileManagerHelper.upload 1\" , file.size / 1024 / 1024)\r\n    editorContext.postMessageToHolder(\r\n        {\r\n            type: \"Server\",\r\n            route: \"/file/upload\",\r\n            input: {websiteId: editorContext.websiteId, objectPath, objectSizeInMb: file.size / 1024 / 1024},\r\n            method: \"post\"\r\n        },\r\n        ({result}) => {\r\n            console.log(\"FileManagerHelper.list callback\", result);\r\n            if (result.success)\r\n                onSuccess(result.data);\r\n            else\r\n                onError(result.error);\r\n        });\r\n}\r\n\r\nFileManagerHelper.folder = (editorContext, folderPath, onSuccess, onError) => {\r\n    editorContext.postMessageToHolder(\r\n        {\r\n            type: \"Server\",\r\n            route: \"/file/folder\",\r\n            input: {websiteId: editorContext.websiteId, folderPath},\r\n            method: \"post\"\r\n        },\r\n        ({result}) => {\r\n            console.log(\"FileManagerHelper.list callback\", result);\r\n            if (result.success)\r\n                onSuccess(result.data);\r\n            else\r\n                onError(result.error);\r\n        });\r\n}\r\n\r\nFileManagerHelper.usage = (editorContext, onSuccess, onError) => {\r\n    editorContext.postMessageToHolder(\r\n        {\r\n            type: \"Server\",\r\n            route: \"/file/usage\",\r\n            input: {websiteId: editorContext.websiteId},\r\n            method: \"post\"\r\n        },\r\n        ({result}) => {\r\n            console.log(\"FileManagerHelper.list callback\", result);\r\n            if (result.success)\r\n                onSuccess(result.data);\r\n            else\r\n                onError(result.error);\r\n        });\r\n}\r\n\r\n// deleteObjects must have this structure:\r\n// [ /* required */\r\n//   {\r\n//      Key: 'STRING_VALUE', /* required */\r\n//   },\r\n//   /* more items */\r\n// ]\r\nFileManagerHelper.delete = (editorContext, deleteObjects, onSuccess, onError) => {\r\n    editorContext.postMessageToHolder(\r\n        {\r\n            type: \"Server\",\r\n            route: \"/file/delete\",\r\n            input: {websiteId: editorContext.websiteId, deleteObjects},\r\n            method: \"post\"\r\n        },\r\n        ({result}) => {\r\n            console.log(\"FileManagerHelper.list callback\", result);\r\n            if (result.success)\r\n                onSuccess(result.data);\r\n            else\r\n                onError(result.error);\r\n        });\r\n}\r\n\r\nFileManagerHelper.storage = (editorContext, onSuccess, onError) => {\r\n    editorContext.postMessageToHolder(\r\n        {\r\n            type: \"Server\",\r\n            route: \"/file/storage\",\r\n            input: {websiteId: editorContext.websiteId},\r\n            method: \"get\"\r\n        },\r\n        ({result}) => {\r\n            console.log(\"FileManagerHelper.list callback\", result);\r\n            if (result.success)\r\n                onSuccess(result.data);\r\n            else\r\n                onError(result.error);\r\n        });\r\n}\r\n\r\nexport default FileManagerHelper;\r\n","import React from \"react\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport './NewFolder.css';\r\nimport Button from \"@material-ui/core/Button/Button\";\r\n\r\nexport default class NewFolder extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: \"\"};\r\n    }\r\n\r\n    rename = (e) => {\r\n        this.setState({name: e.target.value})\r\n    }\r\n\r\n    render () {\r\n        return <Modal\r\n            open={this.props.open}\r\n            onClose={this.props.onClose}\r\n            aria-labelledby=\"simple-modal-title2\"\r\n            aria-describedby=\"simple-modal-description2\"\r\n            className=\"FileManagerModal\"\r\n            disableBackdropClick\r\n            disableEnforceFocus\r\n        >\r\n            <div className=\"NewFolderRoot\">\r\n                {/*Header*/}\r\n                <div className=\"FileManagerHeader\">\r\n                    <div\r\n                        className=\"PageManagerHeaderContainer\"\r\n                    >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                New Folder\r\n                            </span>\r\n\r\n                        <IconButton\r\n                            onClick={this.props.onClose}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={12}\r\n                                height={12}\r\n                                src={require('../../../icons/close.svg')}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"NewFolderContainer\">\r\n                    <span className=\"NewFolderTitle\">\r\n                        What's the name of new folder?\r\n                    </span>\r\n                    <input\r\n                        className=\"NumberInput PageManagerRenameInput PageInfoNameInput\"\r\n                        type=\"text\"\r\n                        onChange={this.rename}\r\n                        onKeyPress={(e) => {\r\n                            if((e.keyCode || e.which) === 13) {\r\n                                if (this.state.name.length >= 3) {\r\n                                    this.props.onClose();\r\n                                    this.props.onDone(this.state.name)\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n\r\n                    <div>\r\n                        <Button\r\n                            className=\"NewFolderCreate\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={this.state.name.length < 3}\r\n                            onClick={() => {\r\n                                this.props.onClose();\r\n                                this.props.onDone(this.state.name)\r\n                            }}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {EditorContext} from \"../../../Editor/EditorContext\";\r\nimport FileManagerHelper from \"../FileManagerHelper\";\r\nimport axios from \"axios\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport './FileUploader.css';\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\n\r\nexport default class FileUploader extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            files: props.files.map(f => {return {\r\n                file: f,\r\n                status: \"pending\",\r\n                progress: 0,\r\n                prefix: props.prefix,\r\n            }}),\r\n            // TODO for test\r\n            // currentUploading: {\r\n            //     file: {name: \"test.jpeg\"},\r\n            //     progress: 24,\r\n            // },\r\n            // files: [\r\n            //     {\r\n            //         file: {name: \"test2.jpeg\"},\r\n            //         status: \"pending\",\r\n            //     },\r\n            //     {\r\n            //         file: {name: \"test3.jpeg\"},\r\n            //         status: \"pending\",\r\n            //     },\r\n            //     {\r\n            //         file: {name: \"test4.jpeg\"},\r\n            //         status: \"pending\",\r\n            //     },\r\n            //     {\r\n            //         file: {name: \"test5.jpeg\"},\r\n            //         status: \"pending\",\r\n            //     },\r\n            //     {\r\n            //         file: {name: \"test6.jpeg\"},\r\n            //         status: \"pending\",\r\n            //     },\r\n            //     {\r\n            //         file: {name: \"test7.jpeg\"},\r\n            //         status: \"pending\",\r\n            //     }\r\n            // ],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.next();\r\n    }\r\n\r\n    addFiles = (newFIles, prefix) => {\r\n        let {files} = this.state;\r\n        files = [...files];\r\n        newFIles.forEach(f => {\r\n            files.push({\r\n                file: f,\r\n                status: \"pending\",\r\n                progress: 0,\r\n                prefix: prefix\r\n            });\r\n        })\r\n\r\n        this.setState({files}, () => {\r\n            if (!this.working)\r\n                this.next();\r\n        });\r\n    }\r\n\r\n    finishing = () => {\r\n        this.working = false;\r\n        this.props.onFinish();\r\n    }\r\n\r\n    next = () => {\r\n        this.working = true;\r\n        let {files} = this.state;\r\n        files = [...files];\r\n\r\n        if (files.length < 1) {\r\n            this.finishing();\r\n            return;\r\n        }\r\n\r\n        let currentUploading = files.shift();\r\n        if (currentUploading.status !== \"pending\")\r\n            return;\r\n\r\n        currentUploading.status = \"starting\";\r\n\r\n        this.setState({files, currentUploading}, () => {\r\n            this.uploadSign();\r\n        });\r\n    };\r\n\r\n    uploadSign = () => {\r\n        let {currentUploading} = this.state;\r\n\r\n        FileManagerHelper.upload(this.context,\r\n            `${currentUploading.prefix}/${currentUploading.file.name}`,\r\n            currentUploading.file,\r\n            (signUrl) => {\r\n                console.log(\"upload success\", signUrl);\r\n                this.upload(signUrl);\r\n            },\r\n            (errorMessage) => {\r\n                console.log(\"upload error\", errorMessage);\r\n        });\r\n    };\r\n\r\n    upload = (signUrl) => {\r\n        let {currentUploading} = this.state;\r\n\r\n        let formData = new FormData();\r\n\r\n        // Object.keys(signData.fields).forEach(key => {\r\n        //     formData.append(key, signData.fields[key]);\r\n        // });\r\n\r\n        formData.append(\"file\", currentUploading.file);\r\n\r\n        const cancelTokenSource = axios.CancelToken.source();\r\n        currentUploading.cancelTokenSource = cancelTokenSource;\r\n\r\n        axios.put(signUrl, currentUploading.file, {\r\n            headers: {\r\n                \"x-amz-acl\": \"public-read\",\r\n                \"Content-Type\": currentUploading.file.type\r\n            },\r\n            onUploadProgress: this.onUploadProgress,\r\n            cancelToken: cancelTokenSource.token\r\n        })\r\n        .then((response) => {\r\n            console.log(\"upload response\", response)\r\n            this.props.onSingleFileUploaded(currentUploading);\r\n            console.log(\"upload response2\")\r\n            this.next();\r\n        }).then(() => {\r\n            console.log(\"upload finish\");\r\n        })\r\n        .catch(() => {\r\n            console.log(\"upload Error ...\")\r\n        });\r\n    }\r\n\r\n    onUploadProgress = (e) => {\r\n        let {currentUploading} = this.state;\r\n        currentUploading.progress = Math.round((100 * e.loaded) / e.total);\r\n        console.log(\"upload progress\", currentUploading.progress)\r\n        this.setState({currentUploading});\r\n    }\r\n\r\n    cancelCurrent = () => {\r\n        let {currentUploading} = this.state;\r\n        currentUploading.cancelTokenSource.cancel();\r\n        currentUploading.status = \"canceled\";\r\n\r\n        this.next();\r\n    }\r\n\r\n    cancelPendings = (fileData) => {\r\n        let {files} = this.state;\r\n        files = [...files];\r\n\r\n        if (fileData.cancelTokenSource)\r\n            this.cancelCurrent();\r\n\r\n        let index = files.findIndex(f => {\r\n            return f.file === fileData.file;\r\n        });\r\n\r\n        files.splice(index, 1);\r\n\r\n        this.setState({files});\r\n    }\r\n\r\n    cancelAll = () => {\r\n        let {files} = this.state;\r\n        files = [...files];\r\n\r\n        files.forEach(f => {\r\n            this.cancelPendings(f);\r\n        });\r\n\r\n        this.cancelCurrent();\r\n    }\r\n\r\n    render () {\r\n        let {currentUploading, files} = this.state;\r\n        console.log(\"files\", files)\r\n        return (\r\n            <>\r\n                <div className=\"FileUploaderRoot\">\r\n                    {\r\n                        currentUploading &&\r\n                        <div className=\"FileUploaderCurrentBorder\">\r\n                            <span className=\"FileUploaderCurrentName\">{currentUploading.file.name}</span>\r\n                            <div className=\"FileUploaderCurrentRoot\">\r\n                                <LinearProgress className=\"FileUploaderCurrentProgress\"\r\n                                                key={currentUploading.file.name}\r\n                                    variant=\"determinate\" value={currentUploading.progress}/>\r\n                                <span  className=\"FileUploaderCurrentLabel\">{`${currentUploading.progress}%`}</span>\r\n                                <IconButton\r\n                                    className=\"FileUploaderCurrentCancel\"\r\n                                    onClick={this.cancelCurrent}\r\n                                >\r\n                                    <img\r\n                                        draggable={false}\r\n                                        width={8}\r\n                                        height={8}\r\n                                        src={require('../../../icons/close.svg')}\r\n                                    />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        files.slice(0, 3).map(fileData => {\r\n                            return (\r\n                                <div key={fileData.file.name} className=\"FileUploaderCurrentBorder FileUploaderPendingRoot\">\r\n                                    <span className=\"FileUploaderCurrentName\">{fileData.file.name}</span>\r\n                                    <IconButton\r\n                                        className=\"FileUploaderCurrentCancel\"\r\n                                        onClick={(e) => {this.cancelPendings(fileData)}}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={8}\r\n                                            height={8}\r\n                                            src={require('../../../icons/close.svg')}\r\n                                        />\r\n                                    </IconButton>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        files.slice(3, files.length).length > 0 &&\r\n                        <div className=\"FileUploaderCurrentBorder\">\r\n                            <span className=\"FileUploaderCurrentName\">\r\n                                {\r\n                                    `${files.slice(3, files.length).length} other files are pending ...`\r\n                                }\r\n                            </span>\r\n                            <div className=\"FileUploaderCurrentCancelAll\">\r\n                                <IconButton\r\n                                    className=\"FileUploaderCurrentCancel\"\r\n                                    onClick={this.cancelAll}\r\n                                >\r\n                                    Cancel All\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {EditorContext} from \"../../Editor/EditorContext\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport './FileManager.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport UploadButton from \"./Components/UploadButton\";\r\nimport Dropzone from 'react-dropzone'\r\nimport FileManagerHelper from \"./FileManagerHelper\";\r\nimport NewFolder from \"./Components/NewFolder\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FileUploader from \"./Components/FileUploader\";\r\n\r\nexport default class FileManager extends React.Component {\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedMenu: \"Website Files\",\r\n            route: this.getFirstRoute(),\r\n            selectedFile: \"\",\r\n        };\r\n\r\n        this.uploaderRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileManagerHelper.storage(this.context, ({url}) => {\r\n            this.baseUrl = url;\r\n            this.loadRoute();\r\n        }, (errorMessage) => {\r\n            console.log(\"storage error\", errorMessage)\r\n        });\r\n    }\r\n\r\n    loadRoute = (continuationToken) => {\r\n        // TODO call publisher server\r\n        this.setState({list: undefined, selectedFile: undefined});\r\n\r\n        this.loadingPrefix = this.getCurrentPrefix();\r\n        FileManagerHelper.list(this.context, this.loadingPrefix, continuationToken, (list, prefix) => {\r\n            if (this.loadingPrefix !== prefix)\r\n                return;\r\n\r\n            list.contents = list.contents.filter(item => {\r\n                return !item.Key.endsWith('/');\r\n            });\r\n            this.setState({list});\r\n        }, (errorMessage) => {\r\n            this.setState({errorMessage});\r\n        });\r\n    }\r\n\r\n    getCurrentPrefix = () => {\r\n        let {route} = this.state;\r\n        route = cloneObject(route);\r\n        route.shift();\r\n        let prefix = route.join('/');\r\n\r\n        return prefix;\r\n    }\r\n\r\n    getFirstRoute = () => {\r\n        let {options} = this.props;\r\n\r\n        let route = [\"Site\"];\r\n        if (options.type) {\r\n            route.push(options.type);\r\n        }\r\n\r\n        return route;\r\n    }\r\n\r\n    createNewFolder = (name) => {\r\n        this.setState({list: undefined});\r\n        let folderPath = `${this.getCurrentPrefix()}/${name}`;\r\n        FileManagerHelper.folder(this.context, folderPath, () => {\r\n            this.loadRoute();\r\n        }, (errorMessage) => {\r\n            this.setState({errorMessage});\r\n        });\r\n    }\r\n\r\n    changeRoute = (route) => {\r\n        this.setState({route}, () => {\r\n            this.loadRoute();\r\n        });\r\n    }\r\n\r\n    uploadFile = (files) => {\r\n        console.log(files)\r\n        // TODO send files to storage and create a on done listner to show progress\r\n\r\n        if (this.uploaderRef.current)\r\n            this.uploaderRef.current.addFiles(files, this.getCurrentPrefix());\r\n        else\r\n            this.setState({\r\n                uploadingData: {files, prefix: this.getCurrentPrefix()}\r\n            })\r\n    }\r\n\r\n    getEmptyFolder = () => {\r\n        return (\r\n            <div className=\"FileManagerEmptyFolderRoot\">\r\n                <img\r\n                    className=\"FileManagerEmptyFolderImage\"\r\n                    draggable={false}\r\n                    width={20}\r\n                    height={20}\r\n                    src={require('../../icons/cloudupload.svg')}\r\n                />\r\n                <span className=\"FileManagerEmptyFolderTitle\">Start adding your files</span>\r\n                <span className=\"FileManagerEmptyFolderMessage\">Drag and drop files or upload from your computer</span>\r\n                <span className=\"FileManagerEmptyFolderMessage\">Or</span>\r\n                <UploadButton\r\n                    className=\"FileManagerEmptyFolderUploadButton\"\r\n                    onFileSelected={(e) => {\r\n                        this.uploadFile(Object.values(e.target.files).map(file => {\r\n                            return file;\r\n                        }))\r\n                    }}\r\n                    multiple\r\n                >\r\n                    Upload New File\r\n                </UploadButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    openFolder = (folderName) => {\r\n        let {route} = this.state;\r\n        route = [...route];\r\n        route.push(folderName);\r\n        this.changeRoute(route);\r\n    }\r\n\r\n    onClickFile = (name, type) => {\r\n        this.setState({selectedFile: name});\r\n    }\r\n\r\n    onDoubleClickFile = (name, type) => {\r\n        if (type === \"folder\") {\r\n            this.openFolder(name);\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    getFileIconPreview = (fileData) => {\r\n        return (\r\n            <img draggable={false}\r\n                 className=\"FileManagerImageIcon\"\r\n                 src={\r\n                     `${this.baseUrl}/${fileData.Key}`\r\n                 }\r\n                 style={{\r\n                     userDrag: \"none\",\r\n                     userSelect: \"none\"\r\n                 }}\r\n            />\r\n        )\r\n    }\r\n\r\n    addFileManually = (fileData) => {\r\n        if (fileData.prefix !== this.getCurrentPrefix())\r\n            return;\r\n\r\n        let {list} = this.state;\r\n\r\n        list.contents.push({\r\n            Key: `${list.basePrefix}/${fileData.prefix}/${fileData.file.name}`\r\n        })\r\n\r\n        console.log(\"addFileManually 4\");\r\n        this.forceUpdate();\r\n        console.log(\"addFileManually 5\");\r\n    }\r\n\r\n    render () {\r\n        let {options} = this.props;\r\n        let {list, selectedMenu, selectedFile, route, uploadingData} = this.state;\r\n        return <Modal\r\n            open={this.props.open}\r\n            onClose={this.props.onClose}\r\n            aria-labelledby=\"simple-modal-title2\"\r\n            aria-describedby=\"simple-modal-description2\"\r\n            className=\"FileManagerModal\"\r\n            disableBackdropClick\r\n        >\r\n            <>\r\n            <div className=\"FileManagerRoot\">\r\n                {/*Header*/}\r\n                <div className=\"FileManagerHeader\">\r\n                    <div\r\n                        className=\"PageManagerHeaderContainer\"\r\n                    >\r\n                            <span className=\"PageManagerHeaderTitle\">\r\n                                File Manager\r\n                            </span>\r\n\r\n                        <IconButton\r\n                            onClick={this.props.onClose}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={12}\r\n                                height={12}\r\n                                src={require('../../icons/close.svg')}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"FileManagerContainer\">\r\n                    <div className=\"FileManagerMenu\">\r\n                        <div className=\"FileManagerMenuContainer\">\r\n                        <span className=\"FileManagerMenuTitle\">\r\n                            Manage\r\n                        </span>\r\n\r\n                        <ButtonBase\r\n                            className={`FileManagerMenuOptionButton ${\r\n                                selectedMenu === \"Website Files\" ? \"FileManagerMenuOptionSelected\": \"\"\r\n                            }`}\r\n                            onClick={(e) => {this.setState({selectedMenu: \"Website Files\"})}}>\r\n                            <span className=\"FileManagerMenuOption\">\r\n                                Website Files\r\n                            </span>\r\n                        </ButtonBase>\r\n                        </div>\r\n\r\n                        <div className=\"FileManagerMenuUploadContainer\">\r\n                            <UploadButton\r\n                                className=\"FileManagerMenuUploadContainerButton\"\r\n                                onFileSelected={(e) => {\r\n                                    this.uploadFile(Object.values(e.target.files).map(file => {\r\n                                        return file;\r\n                                    }))\r\n                                }}\r\n                                multiple\r\n                            >\r\n                                Upload New File\r\n                            </UploadButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"FileManagerContent\">\r\n                        {\r\n                            selectedMenu === \"Website Files\" &&\r\n                            <>\r\n                                <div className=\"FileManagerContentHeader\">\r\n                                    <div  className=\"FileManagerContentHeaderRoute\">\r\n                                        <ButtonBase\r\n                                            style={{\r\n                                                padding: 4,\r\n                                                borderRadius: 4\r\n                                            }}\r\n                                            onClick={(e) => {\r\n                                                this.changeRoute(this.getFirstRoute());\r\n                                            }}\r\n                                        >\r\n                                            {\r\n                                                this.state.route[0] + \" > \" + options.type || \"\"\r\n                                            }\r\n                                        </ButtonBase>\r\n                                        {\r\n                                            this.state.route.map((name, i)=> {\r\n                                                if (i === 0)\r\n                                                    return null;\r\n\r\n                                                if (i === 1 && options.type)\r\n                                                    return null;\r\n\r\n                                                return (\r\n                                                    <ButtonBase\r\n                                                        key={name}\r\n                                                        style={{\r\n                                                            padding: 4,\r\n                                                            borderRadius: 4,\r\n                                                        }}\r\n                                                        onClick={(e) => {\r\n                                                            let newRoute = this.getFirstRoute();\r\n                                                            let currentRoute = [...route];\r\n                                                            currentRoute.shift()\r\n                                                            if (options.type)\r\n                                                                currentRoute.shift();\r\n\r\n                                                            let next = currentRoute.shift();\r\n                                                            while (next !== name) {\r\n                                                                newRoute.push(next);\r\n                                                                next = currentRoute.shift();\r\n                                                            }\r\n                                                            newRoute.push(name);\r\n\r\n                                                            this.changeRoute(newRoute);\r\n                                                        }}\r\n                                                    >\r\n                                                        {\" > \" + name}\r\n                                                    </ButtonBase>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <IconButton\r\n                                        buttonBaseStyle={{\r\n                                        }}\r\n                                        imageContainerStyle={{\r\n                                            padding: 0\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            let newRoute = [...route];\r\n                                            if (!options.type && route.length === 1)\r\n                                                return;\r\n                                            if (options.type && route.length === 2)\r\n                                                return;\r\n\r\n                                            newRoute.pop();\r\n\r\n                                            this.changeRoute(newRoute);\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={20}\r\n                                            height={20}\r\n                                            src={require('../../icons/folderback.svg')}\r\n                                        />\r\n                                    </IconButton>\r\n\r\n                                    <IconButton\r\n                                        buttonBaseStyle={{\r\n                                            marginLeft: 16\r\n                                        }}\r\n                                        imageContainerStyle={{\r\n                                            padding: 0\r\n                                        }}\r\n                                        onClick={(e) => {\r\n                                            this.setState({newFolder: true});\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            draggable={false}\r\n                                            width={20}\r\n                                            height={20}\r\n                                            src={require('../../icons/folder.svg')}\r\n                                        />\r\n                                    </IconButton>\r\n\r\n\r\n                                </div>\r\n\r\n                                <Dropzone\r\n                                    onDrop={acceptedFiles => this.uploadFile(acceptedFiles)}\r\n                                >\r\n                                    {({getRootProps, getInputProps}) => (\r\n                                        <div\r\n                                            className=\"FileManagerContentData\"\r\n                                            {...getRootProps({\r\n                                                onClick: event => {\r\n                                                    this.onClickFile(\"\");\r\n                                                    event.stopPropagation()\r\n                                                }\r\n                                            })}\r\n                                        >\r\n                                            <input {...getInputProps()} />\r\n                                            {\r\n                                                !list &&\r\n                                                <div className=\"FileManagerLoadingContainer\">\r\n                                                    <CircularProgress />\r\n                                                </div>\r\n                                            }\r\n                                            {\r\n                                                list && list.contents.length === 0 &&\r\n                                                list.folders.length === 0 &&\r\n                                                this.getEmptyFolder()\r\n                                            }\r\n                                            <div className=\"FileManagerFileContainer\">\r\n                                                {\r\n                                                    list &&\r\n                                                    list.folders.map(folderPath => {\r\n                                                        let folderName = folderPath.split('/')[0];\r\n                                                        return (\r\n                                                            <div key={folderPath} className=\"FileManagerFileRoot\">\r\n                                                                <div>\r\n                                                                    <div\r\n                                                                        className={`FileManagerFileData ${\r\n                                                                            selectedFile === folderPath ?\r\n                                                                                \"FileManagerFileSelected\" : \"\"\r\n                                                                        }`}\r\n                                                                        onClick={\r\n                                                                            (e) => {\r\n                                                                                e.stopPropagation();\r\n                                                                                this.onClickFile(folderPath, \"folder\");\r\n                                                                            }\r\n                                                                        }\r\n                                                                        onDoubleClick={\r\n                                                                            (e) => {\r\n                                                                                e.stopPropagation();\r\n                                                                                this.onDoubleClickFile(folderPath, \"folder\");\r\n                                                                            }\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <img draggable={false} width={56} height={56}\r\n                                                                             src={require('../../icons/file.svg')}\r\n                                                                             style={{\r\n                                                                                 userDrag: \"none\",\r\n                                                                                 userSelect: \"none\"\r\n                                                                             }}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <span className=\"FileManagerFileName\">\r\n                                                                    {folderName}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                {\r\n                                                    list &&\r\n                                                    list.contents.map(fileData => {\r\n                                                        let filename = fileData.Key.split('/')[fileData.Key.split('/').length - 1];\r\n\r\n                                                        let shortName = filename.split('.').slice(0, -1).join('.');\r\n\r\n                                                        return (\r\n                                                            <div key={filename} className=\"FileManagerFileRoot\">\r\n                                                                <div>\r\n                                                                    <div\r\n                                                                        className={`FileManagerFileData ${\r\n                                                                            selectedFile === filename ?\r\n                                                                                \"FileManagerFileSelected\" : \"\"\r\n                                                                        }`}\r\n                                                                        onClick={\r\n                                                                            (e) => {\r\n                                                                                e.stopPropagation();\r\n                                                                                this.onClickFile(filename, \"file\");\r\n                                                                            }\r\n                                                                        }\r\n                                                                        onDoubleClick={\r\n                                                                            (e) => {\r\n                                                                                e.stopPropagation();\r\n                                                                                this.onDoubleClickFile(filename, \"file\");\r\n                                                                            }\r\n                                                                        }\r\n                                                                    >\r\n                                                                        {this.getFileIconPreview(fileData)}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <span className=\"FileManagerFileName\">\r\n                                                                    {shortName}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n\r\n                                            {\r\n                                                uploadingData &&\r\n                                                <FileUploader\r\n                                                    ref={this.uploaderRef}\r\n                                                    prefix={uploadingData.prefix}\r\n                                                    files={uploadingData.files}\r\n                                                    onFinish={() => {\r\n                                                        this.setState({uploadingData: undefined})\r\n                                                    }}\r\n                                                    onSingleFileUploaded={this.addFileManually}\r\n                                                />\r\n                                            }\r\n                                        </div>\r\n                                    )}\r\n                                </Dropzone>\r\n                            </>\r\n                        }\r\n                        <div className=\"FileManagerUploadingRoot\">\r\n                            {/*TODO show upload progress of uploading files*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                this.state.newFolder &&\r\n                <NewFolder\r\n                    open={true}\r\n                    onClose={(e) => {this.setState({newFolder: false})}}\r\n                    onDone={this.createNewFolder}\r\n                />\r\n            }\r\n            </>\r\n        </Modal>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {EditorContext} from \"./EditorContext\";\r\nimport BreakPointManager from \"../BreakPointManager\";\r\nimport DragDropManager from \"../DragDropManager\";\r\nimport InputManager from \"../InputManager\";\r\nimport SelectManager from \"../SelectManager\";\r\nimport SnapManager from \"../SnapManager\";\r\nimport CopyManager from \"../CopyManager\";\r\nimport IdManager from \"../IdManager\";\r\nimport UndoRedo from \"../UndoRedo\";\r\nimport GridLineManager from \"../GridLineManager\";\r\nimport AnchorManager from \"../AnchorManager\";\r\nimport {initDynamicAnimations, initDynamicComponents} from \"../Dynamic/DynamicComponents\";\r\nimport AdjustmentGrid from \"../Adjustment/AdjustmentGrid\";\r\nimport AdjustmentSnap from \"../Adjustment/AdjustmentSnap\";\r\nimport AdjustmentGridLines from \"../Adjustment/AdjustmentGridLines\";\r\nimport AdjustmentGroupRect from \"../Adjustment/AdjustmentGroupRect\";\r\nimport MenuHolder from \"../Menus/MenuHolder\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport './EditorBoundary.css';\r\nimport IFrameCommunicator from \"../Test/IFrameCommunicator\";\r\nimport EditorController from \"../Test/EditorController\";\r\nimport Inspector from \"../Test/Inspector/Inspector\";\r\nimport AdjustmentResizeWrapper from \"../Adjustment/AdjustmentResizeWrapper\";\r\nimport AdjustmentHelpLinesWrapper from \"../Adjustment/AdjustmentHelpLinesWrapper\";\r\nimport AdjustmentHover from \"../Adjustment/AdjustmentHover\";\r\nimport {cloneObject} from \"../AwesomeGridLayoutUtils\";\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from \"lodash.throttle\";\r\nimport Layout from \"../Test/Layout/Layout\";\r\nimport AddComponent from \"../Test/AddComponent/AddComponent\";\r\nimport PageManager from \"../Test/PageManager/PageManager\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport ThemeManager from \"../Test/Theme/ThemeManager\";\r\nimport defaultSiteData from \"../../data/defaultSiteData.json\";\r\nimport defaultAllComponentData from \"../../data/allComponentData.json\";\r\nimport EditorHeader from \"./EditorHeader\";\r\nimport PreviewHeader from \"./PreviewHeader\";\r\nimport PageView from \"./PageView\";\r\nimport classNames from \"classnames\";\r\nimport LinkGenerator from \"../Components/Text/Menus/components/LinkGenerator\";\r\nimport FileManager from \"../Components/FileManager/FileManager\";\r\n\r\nexport default class EditorBoundary extends React.Component{\r\n    static contextType = EditorContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            preview: true\r\n        };\r\n\r\n        this.init(props);\r\n    }\r\n\r\n    // Declare all managers & refs\r\n    init = (props) => {\r\n        this.rootLayoutRef = React.createRef();\r\n        this.snapSvgRef = React.createRef();\r\n        this.gridContainerRef = React.createRef();\r\n        this.gridEditorRef = React.createRef();\r\n        this.groupSelectRef = React.createRef();\r\n        this.miniMenuHolderRef = React.createRef();\r\n        this.resizeRef = React.createRef();\r\n        this.helpLinesRef = React.createRef();\r\n        this.inspectorRef = React.createRef();\r\n        this.hoverRef = React.createRef();\r\n        this.layoutRef = React.createRef();\r\n        this.addComponentRef = React.createRef();\r\n        this.pageManagerRef = React.createRef();\r\n        this.themeManagerRef = React.createRef();\r\n        this.dragdrop = new DragDropManager();\r\n        this.inputManager = new InputManager();\r\n        this.select = new SelectManager(this.inputManager, this.groupSelectRef,\r\n            this.rootLayoutRef, this.miniMenuHolderRef, this.inspectorRef, this.resizeRef,\r\n            this.helpLinesRef, this.hoverRef);\r\n        this.snap = new SnapManager(5, this.snapSvgRef);\r\n        this.copyMan = new CopyManager(this.select, this.rootLayoutRef);\r\n        this.idMan = new IdManager('comp');\r\n        this.undoredo = new UndoRedo(100, document, this.idMan);\r\n        this.gridLine = new GridLineManager(this.gridContainerRef);\r\n        this.anchorMan = new AnchorManager();\r\n\r\n        initDynamicComponents();\r\n        initDynamicAnimations();\r\n\r\n        this.iFrameCommunicator = new IFrameCommunicator(undefined, \"WeblancerIFrameCommunicator\",\r\n            window.parent, this.onMessage);\r\n\r\n        // TODO test, clean them after test finished\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 80 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + P\");\r\n                this.pinInspector();\r\n            }\r\n            if ( key === 76 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + L\");\r\n                this.toggleThemeManager(true);\r\n            }\r\n            if ( key === 79 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + O\");\r\n                this.toggleThemeManager(false);\r\n            }\r\n            if ( key === 69 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + E\");\r\n                this.exportSiteData();\r\n            }\r\n        });\r\n\r\n\r\n    };\r\n\r\n    initContext = () => {\r\n        this.context.initContext({\r\n            editor: this,\r\n            rightMenus: {\r\n                addComponent: {\r\n                    state: false,\r\n                    toggle: this.toggleAddComponent\r\n                },\r\n                pageManager: {\r\n                    state: false,\r\n                    toggle: this.togglePageManager\r\n                },\r\n                themeManager: {\r\n                    state: false,\r\n                    toggle: this.toggleThemeManager\r\n                }\r\n            }\r\n        });\r\n\r\n        this.select.setContext(this.context);\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.initContext();\r\n        this.loadSiteData();\r\n    }\r\n\r\n    loadSiteData = () => {\r\n        fetch(process.env.PUBLIC_URL + '/static/json/env.json').then((res) => res.json())\r\n        .then((data) => {\r\n            if (data.value === 'editor') {\r\n                this.postMessage({\r\n                    type: \"Holder\",\r\n                    func: \"onEditorMounted\",\r\n                    inputs: []\r\n                }, (data) => {\r\n                    console.log(\"componentDidMount initFromHolder\", data);\r\n                    this.initFromHolder(data.result);\r\n                });\r\n            } else {\r\n                fetch(process.env.PUBLIC_URL + '/static/json/siteData.json').then((res) => res.json())\r\n                    .then((siteData) => {\r\n                        this.context.setProduction(() => {\r\n                            this.onSiteDataUpdated(siteData);\r\n                        });\r\n                    }).catch(err => {\r\n                    console.log(\"loadSiteData error\", err);\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"loadSiteData error\", err);\r\n        })\r\n    };\r\n\r\n    initFromHolder = (data) => {\r\n        this.onSetZoomScale(data.zoomScale);\r\n    };\r\n\r\n    onMessage = (data, res) => {\r\n        EditorController.onMessage(data, res, this);\r\n    };\r\n\r\n    postMessage = (data, callback) => {\r\n        console.log(\"EditorBoundry.postMessage\");\r\n        this.iFrameCommunicator.post(data, callback);\r\n    };\r\n\r\n    setPreview = (preview, callback) => {\r\n        callback && callback();\r\n        this.context.setPreview(preview);\r\n    }\r\n\r\n    testWebsite = () => {\r\n        let siteData = cloneObject(defaultSiteData);\r\n        let allComponentData = cloneObject(defaultAllComponentData);\r\n\r\n        this.onComponentDataUpdated(allComponentData);\r\n        this.onSiteDataUpdated(siteData);\r\n    };\r\n\r\n    onSiteDataUpdated = (siteData, websiteId) => {\r\n        if (!siteData) {\r\n            siteData = cloneObject(defaultSiteData);\r\n        }\r\n\r\n        if (websiteId)\r\n            this.context.setWebsiteId(websiteId);\r\n\r\n        this.context.setSiteData(siteData, () => {\r\n            let pageData = siteData.allPages[Object.keys(siteData.allPages)[0]];\r\n            this.context.setPageData(pageData.props.pageId, false, this.onHeightChange);\r\n        });\r\n\r\n        // TODO Test\r\n        let allComponentData = cloneObject(defaultAllComponentData);\r\n        this.onComponentDataUpdated(allComponentData);\r\n    };\r\n\r\n    setBreakpoints = (breakpoints) => {\r\n        this.breakpointmanager = new BreakPointManager(breakpoints, this,\r\n            undefined, this.onZoomLevelChange,\r\n            this.onHeightChange, this.onResize);\r\n    }\r\n\r\n    onComponentDataUpdated = (allComponentData) => {\r\n        this.setState({allComponentData});\r\n    };\r\n\r\n    onPageChange = (pageId, force) => {\r\n        if (!force && this.context.pageData.props.pageId === pageId) {\r\n            return;\r\n        }\r\n\r\n        console.log(\"onPageChange\");\r\n        this.rootLayoutRef.current.onSelect(true, () => {\r\n            this.idMan.clear();\r\n\r\n            this.context.setPageData(undefined , () => {\r\n                let pageData = this.context.siteData.allPages[pageId];\r\n                this.context.setPageData(pageData);\r\n            });\r\n        });\r\n    };\r\n\r\n    togglePreview = (preview) => {\r\n        this.setState({preview});\r\n    };\r\n\r\n    setZoomLevel = (zoomLevel) => {\r\n        this.setState({zoomLevel: zoomLevel || 100});\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.breakpointmanager.dispose();\r\n    }\r\n\r\n    onPageZoomChange = (zoomScale) => {\r\n        this.postMessage({\r\n            type: \"Holder\",\r\n            func: \"changePageZoom\",\r\n            inputs: [zoomScale]\r\n        }, (data) => {\r\n            this.onSetZoomScale(data.result)\r\n        });\r\n    };\r\n\r\n    onSetZoomScale = (zoomScale) => {\r\n        document.documentElement.style.setProperty('--zoom-scale', zoomScale);\r\n\r\n        this.context.setZoomScale(zoomScale, this.onZoomLevelChange);\r\n    };\r\n\r\n    // Just in editor\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.rootLayoutRef.current)\r\n            width = this.rootLayoutRef.current.getSize(false).width;\r\n\r\n        this.onPageResize(width, this.rootLayoutRef.current);\r\n    };\r\n\r\n    notifyBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        this.rootLayoutRef.current.props.aglComponent.updateTemplates();\r\n        this.rootLayoutRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n    };\r\n\r\n    onZoomLevelChange = (newDevicePixelRatio) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n        !this.isPreview() && this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() && this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n    };\r\n\r\n    isPreview = () => {\r\n        return this.context.preview;\r\n    }\r\n\r\n    onHeightChange = (e) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n        this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() && this.select.onScrollItem();\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n        this.rootLayoutRef.current.updateLayout();\r\n\r\n        this.onResize(e);\r\n    };\r\n\r\n    toggleInspector = () => {\r\n        return this.inspectorRef.current.toggle();\r\n    };\r\n\r\n    pinInspector = () => {\r\n        this.context.setInspectorPinned(!this.context.inspectorPinned, () => {\r\n            this.select.onScrollItem();\r\n            this.rootLayoutRef.current.invalidateSize();\r\n        });\r\n\r\n        // this.editorData.innerWidth = window.innerWidth -\r\n        // this.context.inspectorPinned ? this.context.inspectorWidth : 0;\r\n\r\n        this.onScrollBoundary();\r\n        this.rootLayoutRef.current.updateLayout();\r\n    };\r\n\r\n    onPageResize = (width, pageAgl, force) => {\r\n        let result = this.breakpointmanager.checkBreakPointChange(width);\r\n\r\n        this.onResize(undefined, width);\r\n\r\n        console.log(\"onPageResize\", width)\r\n        this.context.setPageSizeWidth(width);\r\n\r\n        if (result.changed || force) {\r\n            this.notifyBreakpointChange(width, result.currentBreakpointName,\r\n                this.breakpointmanager.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onResize = (e, width) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        this.onResizeD(e, width);\r\n        this.onResizeT(e, width);\r\n    };\r\n\r\n    onResizeD = debounce((e, width) => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        if (!width)\r\n            width = this.rootLayoutRef.current.getSize(false, true).width;\r\n        document.documentElement.style.setProperty('--vw-ratio', width / window.innerWidth);\r\n    }, 100);\r\n\r\n    onResizeT = throttle((e, width) => {\r\n        if (!width)\r\n            width = this.rootLayoutRef.current.getSize(false, true).width;\r\n\r\n        document.documentElement.style.setProperty('--vw-ratio', width / window.innerWidth);\r\n    }, 100);\r\n\r\n    onPageResizeStart = () => {\r\n        if (this.isPreview()) return;\r\n        this.resizeRef.current.activate(false);\r\n        this.helpLinesRef.current.activate(false);\r\n        this.miniMenuHolderRef.current.activate(false);\r\n    };\r\n\r\n    onPageResizeStop = () => {\r\n        if (this.isPreview()) return;\r\n        this.resizeRef.current.activate(true);\r\n        this.helpLinesRef.current.activate(true);\r\n        this.miniMenuHolderRef.current.activate(true);\r\n    };\r\n\r\n    onScrollBoundary = (e) => {\r\n        !this.isPreview() && this.rootLayoutRef.current.invalidateSize(true, true, true);\r\n        !this.isPreview() &&this.select.onScrollItem();\r\n\r\n        this.rootLayoutRef.current.onWindowSizeChange();\r\n    };\r\n\r\n    updateLayout = () => {\r\n        if (!this.rootLayoutRef.current)\r\n            return;\r\n\r\n        let layout = [];\r\n\r\n        let getLayoutItem = (item, childData) => {\r\n            if (!item || !item.mounted)\r\n                return;\r\n\r\n            return {\r\n                id: childData.props.id,\r\n                childData: childData,\r\n                childrenData: Object.keys(item.getFromTempData(\"savedChildren\")).map(childId => {\r\n                    let childData = item.getFromTempData(\"savedChildren\")[childId];\r\n                    return getLayoutItem(\r\n                        item.allChildRefs[childId].current,\r\n                        childData\r\n                    );\r\n                }).filter(il => {\r\n                    return il;\r\n                })\r\n            };\r\n        };\r\n\r\n        let pageChildData = {\r\n            tagName: this.rootLayoutRef.current.props.tagName,\r\n            props: this.rootLayoutRef.current.getClearProps({...this.rootLayoutRef.current.props}),\r\n            zIndex: 0\r\n        };\r\n\r\n        layout.push(getLayoutItem(this.rootLayoutRef.current, pageChildData));\r\n\r\n        this.layoutRef.current.setLayout(layout);\r\n    };\r\n\r\n    openLayout = () => {\r\n        this.layoutRef.current.open();\r\n    };\r\n\r\n    closeLayout = () => {\r\n        this.layoutRef.current.close();\r\n    };\r\n\r\n    toggleAddComponent = (force, state) => {\r\n        if (state === true) {\r\n            this.addComponentRef.current.open();\r\n            return true;\r\n        }\r\n        return this.addComponentRef.current.toggle(force);\r\n    };\r\n\r\n    togglePageManager = (force, state) => {\r\n        if (state === true) {\r\n            this.pageManagerRef.current.open();\r\n            return true;\r\n        }\r\n        return this.pageManagerRef.current.toggle(force);\r\n    };\r\n\r\n    toggleThemeManager = (force, state) => {\r\n        if (state === true) {\r\n            this.themeManagerRef.current.open();\r\n            return true;\r\n        }\r\n        return this.themeManagerRef.current.toggle(force);\r\n    };\r\n\r\n    // pageData is a childData that is for PageBase component\r\n    getLivePageData = () => {\r\n        return {\r\n            tagName: \"PageBase\",\r\n            props: this.rootLayoutRef.current.getClearProps({...this.rootLayoutRef.current.props})\r\n        };\r\n    };\r\n\r\n    getLiveSiteData = () => {\r\n        let siteData = this.context.siteData || {allPages: {}};\r\n\r\n        siteData.allPages[uuidv4()] = this.getLivePageData();\r\n\r\n        return siteData;\r\n    };\r\n\r\n    exportSiteData = () => {\r\n        let siteData = this.getLiveSiteData();\r\n\r\n        const fileName = \"siteData\";\r\n        const json = JSON.stringify(siteData);\r\n        const blob = new Blob([json],{type:'application/json'});\r\n        const href = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = href;\r\n        link.download = fileName + \".json\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    getSiteData = (callback) => {\r\n        callback && callback(this.context.siteData);\r\n        return this.context.siteData;\r\n    }\r\n\r\n    isProduction = () => {\r\n        return this.context.production;\r\n    }\r\n\r\n    showLinkGenerator = (linkData, onDone) => {\r\n        this.setState({linkGenerator: {linkData, onDone}});\r\n    }\r\n\r\n    showFileManager = (options, onDone) => {\r\n        this.setState({fileManager: {options, onDone}});\r\n    }\r\n\r\n    render() {\r\n        // TODO if this.context.siteData not loaded, show loading component\r\n        let borderClassess = classNames(\r\n            \"PageBaseWhiteBackground\",\r\n            this.context.production ? \"PageBaseWhiteBackgroundHeightProduction\" : \"PageBaseWhiteBackgroundHeightEditor\",\r\n        );\r\n        if (this.context.pageData) {\r\n            return (\r\n                <div className=\"EditorBoundaryRoot\" onContextMenu={(e) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }}>\r\n                    {\r\n                        !this.isPreview() && !this.isProduction() &&\r\n                        <div className=\"EditorBoundaryHeader\">\r\n                            <EditorHeader\r\n                                onAddComponentClick={this.toggleAddComponent}\r\n                                onInspectorClick={this.toggleInspector}\r\n                                onThemeManagerClick={this.toggleThemeManager}\r\n                                onPageManagerClick={this.togglePageManager}\r\n                                onPageZoomChange={this.onPageZoomChange}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        this.isPreview() && !this.isProduction() &&\r\n                        <div className=\"EditorBoundaryHeader\">\r\n                            <PreviewHeader\r\n                                onAddComponentClick={this.toggleAddComponent}\r\n                                onInspectorClick={this.toggleInspector}\r\n                                onThemeManagerClick={this.toggleThemeManager}\r\n                                onPageManagerClick={this.togglePageManager}\r\n                                onPageZoomChange={this.onPageZoomChange}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    <div className=\"EditorBoundaryContent\">\r\n                        {\r\n                            !this.isPreview() && !this.isProduction() &&\r\n                            <>\r\n                                <AdjustmentGrid\r\n                                    ref={this.gridEditorRef}\r\n                                />\r\n                                <AdjustmentSnap\r\n                                    ref={this.snapSvgRef}\r\n                                />\r\n                                <AdjustmentGridLines\r\n                                    ref={this.gridContainerRef}\r\n                                />\r\n                                <AdjustmentGroupRect\r\n                                    ref={this.groupSelectRef}\r\n                                />\r\n\r\n                                <PageManager\r\n                                    ref={this.pageManagerRef}\r\n                                    editor={this}\r\n                                    onPageChange={this.onPageChange}\r\n                                />\r\n                            </>\r\n                        }\r\n\r\n                        {\r\n                            this.context.pageData &&\r\n                            <PageView\r\n                                onScrollBoundary={this.onScrollBoundary}\r\n                                rootLayoutRef={this.rootLayoutRef}\r\n                            >\r\n                                <div className={borderClassess} style={{\r\n                                    marginTop: this.context.production? 0 : `${8*this.context.zoomScale}vh`\r\n                                }}>\r\n                                    <PageBase\r\n                                        key={this.context.pageData.props.pageId}\r\n                                        id=\"page\"\r\n                                        aglRef={this.rootLayoutRef}\r\n                                        viewRef={this.rootLayoutRef}\r\n                                        breakpointmanager={this.breakpointmanager}\r\n                                        undoredo={this.undoredo}\r\n                                        dragdrop={this.dragdrop}\r\n                                        select={this.select}\r\n                                        snap={this.snap}\r\n                                        input={this.inputManager}\r\n                                        idMan={this.idMan}\r\n                                        gridLine={this.gridLine}\r\n                                        gridEditorRef={this.gridEditorRef}\r\n                                        anchorMan={this.anchorMan}\r\n                                        copyMan={this.copyMan}\r\n                                        editorData={this.editorData}\r\n                                        onPageResize={this.onPageResize}\r\n                                        onPageResizeStart={this.onPageResizeStart}\r\n                                        onPageResizeStop={this.onPageResizeStop}\r\n                                        editor={!this.isPreview() && this}\r\n                                        devicePixelRatio={this.state.devicePixelRatio}\r\n                                        {...this.context.pageData.props}\r\n                                        pageSize={this.context.pageSize}\r\n                                    />\r\n                                </div>\r\n                            </PageView>\r\n                        }\r\n\r\n                        {\r\n                            !this.isPreview() && !this.isProduction() &&\r\n                            <>\r\n                                {\r\n                                    !this.context.pageData &&\r\n                                    <div>\r\n                                        {/*Loading...*/}\r\n                                    </div>\r\n                                }\r\n\r\n                                <AdjustmentHover\r\n                                    ref={this.hoverRef}\r\n                                />\r\n\r\n                                <AdjustmentHelpLinesWrapper\r\n                                    ref={this.helpLinesRef}\r\n                                />\r\n\r\n                                <AdjustmentResizeWrapper\r\n                                    ref={this.resizeRef}\r\n                                />\r\n\r\n                                {\r\n                                    this.context.pageData &&\r\n                                    <Layout\r\n                                        ref={this.layoutRef}\r\n                                        idMan={this.idMan}\r\n                                    />\r\n                                }\r\n\r\n                                {\r\n                                    this.context.siteData &&\r\n                                    this.context.pageData &&\r\n                                    <ThemeManager\r\n                                        ref={this.themeManagerRef}\r\n                                        editor={this}\r\n                                    />\r\n                                }\r\n\r\n                                {\r\n                                    this.state.linkGenerator &&\r\n                                    <LinkGenerator\r\n                                        open={true}\r\n                                        linkData={this.state.linkGenerator.linkData}\r\n                                        onClose={() => {this.setState({linkGenerator: undefined})}}\r\n                                        onDone={this.state.linkGenerator.onDone}\r\n                                    />\r\n                                }\r\n\r\n                                {\r\n                                    this.state.fileManager &&\r\n                                    <FileManager\r\n                                        open={true}\r\n                                        options={this.state.fileManager.options}\r\n                                        onClose={() => {this.setState({fileManager: undefined})}}\r\n                                        onDone={this.state.fileManager.onDone}\r\n                                    />\r\n                                }\r\n\r\n                                <AddComponent\r\n                                    ref={this.addComponentRef}\r\n                                    allComponentData={this.state.allComponentData}\r\n                                    pageRef={this.rootLayoutRef}\r\n                                    editor={this}\r\n                                />\r\n\r\n                                <Inspector\r\n                                    ref={this.inspectorRef}\r\n                                    pinInspector={this.pinInspector}\r\n                                />\r\n                                <MenuHolder\r\n                                    ref={this.miniMenuHolderRef}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport EditorBoundary from \"./AwesomeGridLayout/Editor/EditorBoundary\";\r\nimport EditorContextProvider from \"./AwesomeGridLayout/Editor/EditorContext\";\r\n\r\nReactDOM.render(\r\n    <EditorContextProvider>\r\n        <EditorBoundary />\r\n    </EditorContextProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}